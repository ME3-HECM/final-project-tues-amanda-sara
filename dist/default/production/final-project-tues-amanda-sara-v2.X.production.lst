

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 03:52:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76  0000                     
    77                           ; Version 2.20
    78                           ; Generated 05/05/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F67K40 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	nvCOMRAM
   113  00004E                     __pnvCOMRAM:
   114                           	callstack 0
   115  00004E                     _turnright_calangle:
   116                           	callstack 0
   117  00004E                     	ds	2
   118  000050                     _turnleft_calangle:
   119                           	callstack 0
   120  000050                     	ds	2
   121  0000                     _INT1PPS	set	3569
   122  0000                     _RC7PPS	set	3689
   123  0000                     _RE2PPS	set	3700
   124  0000                     _TX4REG	set	3812
   125  0000                     _RC4REG	set	3811
   126  0000                     _PIR4bits	set	3639
   127  0000                     _RC4STAbits	set	3815
   128  0000                     _SP4BRGH	set	3814
   129  0000                     _SP4BRGL	set	3813
   130  0000                     _TX4STAbits	set	3816
   131  0000                     _BAUD4CONbits	set	3817
   132  0000                     _RX4PPS	set	3605
   133  0000                     _RC0PPS	set	3682
   134  0000                     _SSP2BUF	set	3797
   135  0000                     _SSP2CON2bits	set	3802
   136  0000                     _SSP2CON2	set	3802
   137  0000                     _SSP2STAT	set	3800
   138  0000                     _RD6PPS	set	3696
   139  0000                     _RD5PPS	set	3695
   140  0000                     _SSP2CLKPPS	set	3612
   141  0000                     _SSP2DATPPS	set	3613
   142  0000                     _ANSELDbits	set	3751
   143  0000                     _SSP2ADD	set	3798
   144  0000                     _SSP2CON1bits	set	3801
   145  0000                     _ANSELFbits	set	3764
   146  0000                     _PIR0bits	set	3635
   147  0000                     _IPR0bits	set	3615
   148  0000                     _PIE0bits	set	3625
   149  0000                     _ANSELBbits	set	3738
   150  0000                     _ADPCH	set	3935
   151  0000                     _ADREFbits	set	3928
   152  0000                     _T0CON0bits	set	4053
   153  0000                     _T0CON1bits	set	4054
   154  0000                     _PWM7CONbits	set	4001
   155  0000                     _PWM6CONbits	set	4004
   156  0000                     _LATCbits	set	3963
   157  0000                     _LATEbits	set	3965
   158  0000                     _TRISEbits	set	3973
   159  0000                     _T2PR	set	4028
   160  0000                     _T2CLKCONbits	set	4031
   161  0000                     _T2HLTbits	set	4030
   162  0000                     _T2CONbits	set	4029
   163  0000                     _TRISCbits	set	3971
   164  0000                     _TRISAbits	set	3969
   165  0000                     _TRISGbits	set	3975
   166  0000                     _TRISHbits	set	3976
   167  0000                     _TRISDbits	set	3972
   168  0000                     _ADRESH	set	3940
   169  0000                     _ADCON0bits	set	3936
   170  0000                     _TRISFbits	set	3974
   171  0000                     _LATAbits	set	3961
   172  0000                     _LATGbits	set	3967
   173  0000                     _TMR0L	set	4051
   174  0000                     _TMR0H	set	4052
   175  0000                     _INTCONbits	set	4082
   176  0000                     _TRISBbits	set	3970
   177  0000                     _LATHbits	set	3968
   178  0000                     _LATFbits	set	3966
   179  0000                     _LATDbits	set	3964
   180  0000                     _PORTFbits	set	3982
   181  0000                     _LATG	set	3967
   182  0000                     _PWM7DCH	set	4000
   183  0000                     _LATE	set	3965
   184  0000                     _PWM6DCH	set	4003
   185                           
   186                           	psect	smallconst
   187  000E00                     __psmallconst:
   188                           	callstack 0
   189  000E00  00                 	db	0
   190  000E01                     STR_1:
   191                           
   192                           ; BSR set to: 14
   193  000E01  52                 	db	82	;'R'
   194  000E02  47                 	db	71	;'G'
   195  000E03  42                 	db	66	;'B'
   196  000E04  43                 	db	67	;'C'
   197  000E05  3A                 	db	58	;':'
   198  000E06  20                 	db	32
   199  000E07  25                 	db	37
   200  000E08  69                 	db	105	;'i'
   201  000E09  20                 	db	32
   202  000E0A  25                 	db	37
   203  000E0B  69                 	db	105	;'i'
   204  000E0C  20                 	db	32
   205  000E0D  25                 	db	37
   206  000E0E  69                 	db	105	;'i'
   207  000E0F  20                 	db	32
   208  000E10  25                 	db	37
   209  000E11  69                 	db	105	;'i'
   210  000E12  20                 	db	32
   211  000E13  20                 	db	32
   212  000E14  20                 	db	32
   213  000E15  20                 	db	32
   214  000E16  20                 	db	32
   215  000E17  52                 	db	82	;'R'
   216  000E18  47                 	db	71	;'G'
   217  000E19  42                 	db	66	;'B'
   218  000E1A  43                 	db	67	;'C'
   219  000E1B  5F                 	db	95	;'_'
   220  000E1C  72                 	db	114	;'r'
   221  000E1D  65                 	db	101	;'e'
   222  000E1E  6C                 	db	108	;'l'
   223  000E1F  3A                 	db	58	;':'
   224  000E20  20                 	db	32
   225  000E21  25                 	db	37
   226  000E22  2E                 	db	46
   227  000E23  33                 	db	51	;'3'
   228  000E24  66                 	db	102	;'f'
   229  000E25  20                 	db	32
   230  000E26  25                 	db	37
   231  000E27  2E                 	db	46
   232  000E28  33                 	db	51	;'3'
   233  000E29  66                 	db	102	;'f'
   234  000E2A  20                 	db	32
   235  000E2B  25                 	db	37
   236  000E2C  2E                 	db	46
   237  000E2D  33                 	db	51	;'3'
   238  000E2E  66                 	db	102	;'f'
   239  000E2F  20                 	db	32
   240  000E30  20                 	db	32
   241  000E31  20                 	db	32
   242  000E32  20                 	db	32
   243  000E33  20                 	db	32
   244  000E34  43                 	db	67	;'C'
   245  000E35  6F                 	db	111	;'o'
   246  000E36  6C                 	db	108	;'l'
   247  000E37  6F                 	db	111	;'o'
   248  000E38  75                 	db	117	;'u'
   249  000E39  72                 	db	114	;'r'
   250  000E3A  3A                 	db	58	;':'
   251  000E3B  20                 	db	32
   252  000E3C  25                 	db	37
   253  000E3D  73                 	db	115	;'s'
   254  000E3E  0A                 	db	10
   255  000E3F  0D                 	db	13
   256  000E40  00                 	db	0
   257  000E41                     
   258                           ; BSR set to: 14
   259  000E41  52                 	db	82	;'R'
   260  000E42  47                 	db	71	;'G'
   261  000E43  42                 	db	66	;'B'
   262  000E44  43                 	db	67	;'C'
   263  000E45  3A                 	db	58	;':'
   264  000E46  20                 	db	32
   265  000E47  25                 	db	37
   266  000E48  69                 	db	105	;'i'
   267  000E49  20                 	db	32
   268  000E4A  25                 	db	37
   269  000E4B  69                 	db	105	;'i'
   270  000E4C  20                 	db	32
   271  000E4D  25                 	db	37
   272  000E4E  69                 	db	105	;'i'
   273  000E4F  20                 	db	32
   274  000E50  25                 	db	37
   275  000E51  69                 	db	105	;'i'
   276  000E52  20                 	db	32
   277  000E53  20                 	db	32
   278  000E54  20                 	db	32
   279  000E55  20                 	db	32
   280  000E56  20                 	db	32
   281  000E57  54                 	db	84	;'T'
   282  000E58  68                 	db	104	;'h'
   283  000E59  72                 	db	114	;'r'
   284  000E5A  65                 	db	101	;'e'
   285  000E5B  73                 	db	115	;'s'
   286  000E5C  68                 	db	104	;'h'
   287  000E5D  6F                 	db	111	;'o'
   288  000E5E  6C                 	db	108	;'l'
   289  000E5F  64                 	db	100	;'d'
   290  000E60  3A                 	db	58	;':'
   291  000E61  20                 	db	32
   292  000E62  25                 	db	37
   293  000E63  69                 	db	105	;'i'
   294  000E64  20                 	db	32
   295  000E65  25                 	db	37
   296  000E66  69                 	db	105	;'i'
   297  000E67  20                 	db	32
   298  000E68  25                 	db	37
   299  000E69  69                 	db	105	;'i'
   300  000E6A  0A                 	db	10
   301  000E6B  0D                 	db	13
   302  000E6C  00                 	db	0
   303  000E6D                     STR_10:
   304                           
   305                           ; BSR set to: 14
   306  000E6D  6C                 	db	108	;'l'
   307  000E6E  69                 	db	105	;'i'
   308  000E6F  67                 	db	103	;'g'
   309  000E70  68                 	db	104	;'h'
   310  000E71  74                 	db	116	;'t'
   311  000E72  20                 	db	32
   312  000E73  62                 	db	98	;'b'
   313  000E74  6C                 	db	108	;'l'
   314  000E75  75                 	db	117	;'u'
   315  000E76  65                 	db	101	;'e'
   316  000E77  00                 	db	0
   317  000E78                     
   318                           ; BSR set to: 14
   319  000E78  75                 	db	117	;'u'
   320  000E79  6E                 	db	110	;'n'
   321  000E7A  6B                 	db	107	;'k'
   322  000E7B  6E                 	db	110	;'n'
   323  000E7C  6F                 	db	111	;'o'
   324  000E7D  77                 	db	119	;'w'
   325  000E7E  6E                 	db	110	;'n'
   326  000E7F  00                 	db	0
   327  000E80                     
   328                           ; BSR set to: 14
   329  000E80  6F                 	db	111	;'o'
   330  000E81  72                 	db	114	;'r'
   331  000E82  61                 	db	97	;'a'
   332  000E83  6E                 	db	110	;'n'
   333  000E84  67                 	db	103	;'g'
   334  000E85  65                 	db	101	;'e'
   335  000E86  00                 	db	0
   336  000E87                     
   337                           ; BSR set to: 14
   338  000E87  79                 	db	121	;'y'
   339  000E88  65                 	db	101	;'e'
   340  000E89  6C                 	db	108	;'l'
   341  000E8A  6C                 	db	108	;'l'
   342  000E8B  6F                 	db	111	;'o'
   343  000E8C  77                 	db	119	;'w'
   344  000E8D  00                 	db	0
   345  000E8E                     
   346                           ; BSR set to: 14
   347  000E8E  77                 	db	119	;'w'
   348  000E8F  68                 	db	104	;'h'
   349  000E90  69                 	db	105	;'i'
   350  000E91  74                 	db	116	;'t'
   351  000E92  65                 	db	101	;'e'
   352  000E93  00                 	db	0
   353  000E94                     
   354                           ; BSR set to: 14
   355  000E94  67                 	db	103	;'g'
   356  000E95  72                 	db	114	;'r'
   357  000E96  65                 	db	101	;'e'
   358  000E97  65                 	db	101	;'e'
   359  000E98  6E                 	db	110	;'n'
   360  000E99  00                 	db	0
   361  000E9A                     
   362                           ; BSR set to: 14
   363  000E9A  70                 	db	112	;'p'
   364  000E9B  69                 	db	105	;'i'
   365  000E9C  6E                 	db	110	;'n'
   366  000E9D  6B                 	db	107	;'k'
   367  000E9E  00                 	db	0
   368  000E9F                     
   369                           ; BSR set to: 14
   370  000E9F  72                 	db	114	;'r'
   371  000EA0  65                 	db	101	;'e'
   372  000EA1  64                 	db	100	;'d'
   373  000EA2  00                 	db	0
   374  000EA3  00                 	db	0	; dummy byte at the end
   375  0000                     
   376                           ; #config settings
   377                           
   378                           	psect	cinit
   379  0038BA                     __pcinit:
   380                           	callstack 0
   381  0038BA                     start_initialization:
   382                           	callstack 0
   383  0038BA                     __initialization:
   384                           	callstack 0
   385                           
   386                           ; Clear objects allocated to BANK0 (4 bytes)
   387  0038BA  0100               	movlb	0
   388  0038BC  6BB7               	clrf	(__pbssBANK0+3)& (0+255),b
   389  0038BE  6BB6               	clrf	(__pbssBANK0+2)& (0+255),b
   390  0038C0  6BB5               	clrf	(__pbssBANK0+1)& (0+255),b
   391  0038C2  6BB4               	clrf	__pbssBANK0& (0+255),b
   392                           
   393                           ; Clear objects allocated to COMRAM (4 bytes)
   394  0038C4  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   395  0038C6  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   396  0038C8  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   397  0038CA  6A52               	clrf	__pbssCOMRAM& (0+255),c
   398  0038CC                     end_of_initialization:
   399                           	callstack 0
   400  0038CC                     __end_of__initialization:
   401                           	callstack 0
   402  0038CC  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   403  0038CE  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   404  0038D0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   405  0038D2  6EF8               	movwf	tblptru,c
   406  0038D4  0E0E               	movlw	high __Lsmallconst
   407  0038D6  6EF7               	movwf	tblptrh,c
   408  0038D8  0100               	movlb	0
   409  0038DA  EF9A  F011         	goto	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMRAM
   412  000052                     __pbssCOMRAM:
   413                           	callstack 0
   414  000052                     _interrupts_upperbound:
   415                           	callstack 0
   416  000052                     	ds	2
   417  000054                     _interrupts_lowerbound:
   418                           	callstack 0
   419  000054                     	ds	2
   420                           
   421                           	psect	bssBANK0
   422  0000B4                     __pbssBANK0:
   423                           	callstack 0
   424  0000B4                     _overtime_flag:
   425                           	callstack 0
   426  0000B4                     	ds	1
   427  0000B5                     _returnhome_flag:
   428                           	callstack 0
   429  0000B5                     	ds	1
   430  0000B6                     _unknowncard_flag:
   431                           	callstack 0
   432  0000B6                     	ds	1
   433  0000B7                     _colourcard_flag:
   434                           	callstack 0
   435  0000B7                     	ds	1
   436                           
   437                           	psect	cstackBANK0
   438  000060                     __pcstackBANK0:
   439                           	callstack 0
   440  000060                     ___fldiv@rem:
   441                           	callstack 0
   442                           
   443                           ; 4 bytes @ 0x0
   444  000060                     	ds	4
   445  000064                     ___fldiv@sign:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x4
   449  000064                     	ds	1
   450  000065                     ___fldiv@new_exp:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x5
   454  000065                     	ds	2
   455  000067                     ___fldiv@grs:
   456                           	callstack 0
   457                           
   458                           ; 4 bytes @ 0x7
   459  000067                     	ds	4
   460  00006B                     ___fldiv@bexp:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0xB
   464  00006B                     	ds	1
   465  00006C                     ___fldiv@aexp:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0xC
   469  00006C                     	ds	1
   470  00006D                     colourcards_normaliseRGBC@abs:
   471                           	callstack 0
   472  00006D                     left@mL:
   473                           	callstack 0
   474  00006D                     right@mL:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xD
   478  00006D                     	ds	2
   479  00006F                     colourcards_normaliseRGBC@rel:
   480                           	callstack 0
   481  00006F                     left@mR:
   482                           	callstack 0
   483  00006F                     right@mR:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0xF
   487  00006F                     	ds	2
   488  000071                     colourcards_normaliseRGBC@R:
   489                           	callstack 0
   490  000071                     left@deg:
   491                           	callstack 0
   492  000071                     right@deg:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x11
   496  000071                     	ds	2
   497  000073                     colourcards_normaliseRGBC@G:
   498                           	callstack 0
   499  000073                     left@delay:
   500                           	callstack 0
   501  000073                     right@delay:
   502                           	callstack 0
   503                           
   504                           ; 4 bytes @ 0x13
   505  000073                     	ds	2
   506  000075                     colourcards_normaliseRGBC@B:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x15
   510  000075                     	ds	2
   511  000077                     colourcards_normaliseRGBC@C:
   512                           	callstack 0
   513  000077                     _left$3220:
   514                           	callstack 0
   515  000077                     _right$3221:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x17
   519  000077                     	ds	4
   520  00007B                     left@i:
   521                           	callstack 0
   522  00007B                     right@i:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1B
   526  00007B                     	ds	2
   527  00007D                     turnleft@mL:
   528                           	callstack 0
   529  00007D                     turnright@mL:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x1D
   533  00007D                     	ds	2
   534  00007F                     turnleft@mR:
   535                           	callstack 0
   536  00007F                     turnright@mR:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x1F
   540  00007F                     	ds	2
   541  000081                     turnleft@deg:
   542                           	callstack 0
   543  000081                     turnright@deg:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x21
   547  000081                     	ds	2
   548  000083                     colourcards_readRGBC@abs:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x23
   552  000083                     	ds	2
   553  000085                     colourcards_readRGBC@mL:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x25
   557  000085                     	ds	2
   558  000087                     colourcards_readRGBC@mR:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x27
   562  000087                     	ds	2
   563  000089                     ??_colourcards_readRGBC:
   564                           
   565                           ; 1 bytes @ 0x29
   566  000089                     	ds	2
   567  00008B                     colourcards_readRGBC@rel:
   568                           	callstack 0
   569                           
   570                           ; 12 bytes @ 0x2B
   571  00008B                     	ds	12
   572  000097                     ??_main:
   573                           
   574                           ; 1 bytes @ 0x37
   575  000097                     	ds	2
   576  000099                     main@start:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x39
   580  000099                     	ds	1
   581  00009A                     main@current:
   582                           	callstack 0
   583                           
   584                           ; 8 bytes @ 0x3A
   585  00009A                     	ds	8
   586  0000A2                     main@motorL:
   587                           	callstack 0
   588                           
   589                           ; 9 bytes @ 0x42
   590  0000A2                     	ds	9
   591  0000AB                     main@motorR:
   592                           	callstack 0
   593                           
   594                           ; 9 bytes @ 0x4B
   595  0000AB                     	ds	9
   596                           
   597                           	psect	cstackCOMRAM
   598  000001                     __pcstackCOMRAM:
   599                           	callstack 0
   600  000001                     ??i2_I2C_2_Master_Idle:
   601  000001                     
   602                           ; 1 bytes @ 0x0
   603  000001                     	ds	1
   604  000002                     i2I2C_2_Master_Write@data_byte:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x1
   608  000002                     	ds	1
   609  000003                     i2colourclick_writetoaddr@value:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x2
   613  000003                     	ds	1
   614  000004                     i2colourclick_writetoaddr@address:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x3
   618  000004                     	ds	1
   619  000005                     ??i2_interrupts_colourclick:
   620                           
   621                           ; 1 bytes @ 0x4
   622  000005                     	ds	1
   623  000006                     ??_HighISR:
   624  000006                     
   625                           ; 1 bytes @ 0x5
   626  000006                     	ds	1
   627  000007                     ??_LowISR:
   628                           
   629                           ; 1 bytes @ 0x6
   630  000007                     	ds	3
   631  00000A                     ??_I2C_2_Master_Idle:
   632  00000A                     ?___wmul:
   633                           	callstack 0
   634  00000A                     ?___xxtofl:
   635                           	callstack 0
   636  00000A                     ADC_getval@tmpval:
   637                           	callstack 0
   638  00000A                     colourclickLEDs_C@tog:
   639                           	callstack 0
   640  00000A                     DCmotors_init@PWMperiod:
   641                           	callstack 0
   642  00000A                     ___wmul@multiplier:
   643                           	callstack 0
   644  00000A                     ___xxtofl@val:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x9
   648  00000A                     	ds	1
   649  00000B                     ??_I2C_2_Master_Read:
   650  00000B                     I2C_2_Master_Write@data_byte:
   651                           	callstack 0
   652  00000B                     checkbatterylevel@batterylevel:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0xA
   656  00000B                     	ds	1
   657  00000C                     colourclick_writetoaddr@value:
   658                           	callstack 0
   659  00000C                     I2C_2_Master_Read@ack:
   660                           	callstack 0
   661  00000C                     ___wmul@multiplicand:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0xB
   665  00000C                     	ds	1
   666  00000D                     colourclick_writetoaddr@address:
   667                           	callstack 0
   668  00000D                     I2C_2_Master_Read@tmp:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0xC
   672  00000D                     	ds	1
   673  00000E                     ??_colourclick_init:
   674  00000E                     ??_interrupts_colourclick:
   675  00000E                     ??___xxtofl:
   676  00000E                     ?_colourclick_readR:
   677                           	callstack 0
   678  00000E                     ?_colourclick_readG:
   679                           	callstack 0
   680  00000E                     ?_colourclick_readB:
   681                           	callstack 0
   682  00000E                     ?_colourclick_readC:
   683                           	callstack 0
   684  00000E                     ___wmul@product:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0xD
   688  00000E                     	ds	1
   689  00000F                     
   690                           ; 1 bytes @ 0xE
   691  00000F                     	ds	1
   692  000010                     ??_colourclick_readR:
   693  000010                     ??_colourclick_readG:
   694  000010                     ??_colourclick_readB:
   695  000010                     ??_colourclick_readC:
   696  000010                     ?___awdiv:
   697                           	callstack 0
   698  000010                     ___awdiv@dividend:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0xF
   702  000010                     	ds	2
   703  000012                     ___xxtofl@sign:
   704                           	callstack 0
   705  000012                     ___awdiv@divisor:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x11
   709  000012                     	ds	1
   710  000013                     ___xxtofl@exp:
   711                           	callstack 0
   712  000013                     colourclick_readR@tmp:
   713                           	callstack 0
   714  000013                     colourclick_readG@tmp:
   715                           	callstack 0
   716  000013                     colourclick_readB@tmp:
   717                           	callstack 0
   718  000013                     colourclick_readC@tmp:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x12
   722  000013                     	ds	1
   723  000014                     ___awdiv@counter:
   724                           	callstack 0
   725  000014                     ___xxtofl@arg:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x13
   729  000014                     	ds	1
   730  000015                     ___awdiv@sign:
   731                           	callstack 0
   732  000015                     colourclick_readRGBC@tmpval:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x14
   736  000015                     	ds	1
   737  000016                     ___awdiv@quotient:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x15
   741  000016                     	ds	1
   742  000017                     ??_colourclick_calibration:
   743  000017                     colourclick_readRGBC2@tmpval:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x16
   747  000017                     	ds	1
   748  000018                     ?___flmul:
   749                           	callstack 0
   750  000018                     DCmotors_setPWM@m:
   751                           	callstack 0
   752  000018                     ___flge@ff1:
   753                           	callstack 0
   754  000018                     ___flmul@b:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x17
   758  000018                     	ds	1
   759  000019                     colourclick_readRGBC2@mode:
   760                           	callstack 0
   761  000019                     colourclick_calibration@initial:
   762                           	callstack 0
   763                           
   764                           ; 8 bytes @ 0x18
   765  000019                     	ds	1
   766  00001A                     ??_colourclick_readRGBC2:
   767  00001A                     ??_DCmotors_setPWM:
   768                           
   769                           ; 1 bytes @ 0x19
   770  00001A                     	ds	2
   771  00001C                     ___flge@ff2:
   772                           	callstack 0
   773  00001C                     ___flmul@a:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x1B
   777  00001C                     	ds	4
   778  000020                     ??___flmul:
   779  000020                     ??___flge:
   780                           
   781                           ; 1 bytes @ 0x1F
   782  000020                     	ds	1
   783  000021                     DCmotors_setPWM@PWMduty:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x20
   787  000021                     	ds	2
   788  000023                     forward@mL:
   789                           	callstack 0
   790  000023                     reverse@mL:
   791                           	callstack 0
   792  000023                     stop@mL:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x22
   796  000023                     	ds	1
   797  000024                     ___flmul@sign:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x23
   801  000024                     	ds	1
   802  000025                     forward@mR:
   803                           	callstack 0
   804  000025                     reverse@mR:
   805                           	callstack 0
   806  000025                     stop@mR:
   807                           	callstack 0
   808  000025                     ___flmul@grs:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x24
   812  000025                     	ds	2
   813  000027                     ??_stop:
   814  000027                     
   815                           ; 1 bytes @ 0x26
   816  000027                     	ds	2
   817  000029                     ___flmul@aexp:
   818                           	callstack 0
   819  000029                     clearance@mL:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x28
   823  000029                     	ds	1
   824  00002A                     ___flmul@bexp:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x29
   828  00002A                     	ds	1
   829  00002B                     clearance@mR:
   830                           	callstack 0
   831  00002B                     ___flmul@prod:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x2A
   835  00002B                     	ds	2
   836  00002D                     ??_clearance:
   837                           
   838                           ; 1 bytes @ 0x2C
   839  00002D                     	ds	2
   840  00002F                     ___flmul@temp:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x2E
   844  00002F                     	ds	2
   845  000031                     ?___fladd:
   846                           	callstack 0
   847  000031                     ___fladd@b:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x30
   851  000031                     	ds	4
   852  000035                     ___fladd@a:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x34
   856  000035                     	ds	4
   857  000039                     ??___fladd:
   858                           
   859                           ; 1 bytes @ 0x38
   860  000039                     	ds	4
   861  00003D                     ___fladd@signs:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x3C
   865  00003D                     	ds	1
   866  00003E                     ___fladd@aexp:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x3D
   870  00003E                     	ds	1
   871  00003F                     ___fladd@bexp:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x3E
   875  00003F                     	ds	1
   876  000040                     ___fladd@grs:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x3F
   880  000040                     	ds	1
   881  000041                     ?___fldiv:
   882                           	callstack 0
   883  000041                     ___fldiv@b:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x40
   887  000041                     	ds	4
   888  000045                     ___fldiv@a:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x44
   892  000045                     	ds	4
   893  000049                     ??___fldiv:
   894                           
   895                           ; 1 bytes @ 0x48
   896  000049                     	ds	4
   897  00004D                     ??_left:
   898  00004D                     ??_right:
   899                           
   900                           ; 1 bytes @ 0x4C
   901  00004D                     	ds	1
   902  00004E                     
   903                           ; 1 bytes @ 0x4D
   904 ;;
   905 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   906 ;;
   907 ;; *************** function _main *****************
   908 ;; Defined at:
   909 ;;		line 7 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  motorR          9   75[BANK0 ] struct .
   914 ;;  motorL          9   66[BANK0 ] struct .
   915 ;;  current         8   58[BANK0 ] struct .
   916 ;;  PWMperiod       1    0        unsigned char 
   917 ;;  start           1   57[BANK0 ] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   928 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   930 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   931 ;;Total ram usage:       29 bytes
   932 ;; Hardware stack levels required when called: 13
   933 ;; This function calls:
   934 ;;		_ADC_init
   935 ;;		_DCmotors_init
   936 ;;		_USART4_init
   937 ;;		_checkbatterylevel
   938 ;;		_colourcards_readRGBC
   939 ;;		_colourclickLEDs_C
   940 ;;		_colourclick_calibration
   941 ;;		_colourclick_init
   942 ;;		_colourclick_readRGBC
   943 ;;		_forward
   944 ;;		_interrupts_init
   945 ;;		_reverse
   946 ;;		_stop
   947 ;;		_timer0_init
   948 ;; This function is called by:
   949 ;;		Startup code after reset
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text0
   954  002334                     __ptext0:
   955                           	callstack 0
   956  002334                     _main:
   957                           	callstack 18
   958  002334                     
   959                           ;main.c: 11:     RGBC_val current;;main.c: 12:     unsigned char start = 0;
   960  002334  0E00               	movlw	0
   961  002336  0100               	movlb	0	; () banked
   962  002338  6F99               	movwf	main@start& (0+255),b
   963                           
   964                           ;main.c: 14:     turnleft_calangle = 360;
   965  00233A  0E01               	movlw	1
   966  00233C  6E51               	movwf	(_turnleft_calangle+1)^0,c	;volatile
   967  00233E  0E68               	movlw	104
   968  002340  6E50               	movwf	_turnleft_calangle^0,c	;volatile
   969                           
   970                           ;main.c: 15:     turnright_calangle = 360;
   971  002342  0E01               	movlw	1
   972  002344  6E4F               	movwf	(_turnright_calangle+1)^0,c	;volatile
   973  002346  0E68               	movlw	104
   974  002348  6E4E               	movwf	_turnright_calangle^0,c	;volatile
   975                           
   976                           ;main.c: 16:     interrupts_lowerbound = 0;
   977  00234A  0E00               	movlw	0
   978  00234C  6E55               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
   979  00234E  0E00               	movlw	0
   980  002350  6E54               	movwf	_interrupts_lowerbound^0,c	;volatile
   981                           
   982                           ;main.c: 17:     interrupts_upperbound = 0;
   983  002352  0E00               	movlw	0
   984  002354  6E53               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
   985  002356  0E00               	movlw	0
   986  002358  6E52               	movwf	_interrupts_upperbound^0,c	;volatile
   987                           
   988                           ;main.c: 18:     colourcard_flag = 0;
   989  00235A  0E00               	movlw	0
   990  00235C  6FB7               	movwf	_colourcard_flag& (0+255),b	;volatile
   991                           
   992                           ;main.c: 19:     unknowncard_flag = 0;
   993  00235E  0E00               	movlw	0
   994  002360  6FB6               	movwf	_unknowncard_flag& (0+255),b	;volatile
   995                           
   996                           ;main.c: 20:     returnhome_flag = 0;
   997  002362  0E00               	movlw	0
   998  002364  6FB5               	movwf	_returnhome_flag& (0+255),b	;volatile
   999                           
  1000                           ;main.c: 21:     overtime_flag = 0;
  1001  002366  0E00               	movlw	0
  1002  002368  6FB4               	movwf	_overtime_flag& (0+255),b	;volatile
  1003                           
  1004                           ;main.c: 23:     DC_motor motorL;;main.c: 24:     motorL.power=0;
  1005  00236A  0E00               	movlw	0
  1006  00236C  6FA2               	movwf	main@motorL& (0+255),b
  1007                           
  1008                           ;main.c: 25:     motorL.direction=1;
  1009  00236E  0E01               	movlw	1
  1010  002370  6FA3               	movwf	(main@motorL+1)& (0+255),b
  1011  002372                     
  1012                           ; BSR set to: 0
  1013                           ;main.c: 26:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1014  002372  0EA3               	movlw	163
  1015  002374  6FA4               	movwf	(main@motorL+2)& (0+255),b
  1016  002376  0E0F               	movlw	15
  1017  002378  6FA5               	movwf	(main@motorL+3)& (0+255),b
  1018  00237A                     
  1019                           ; BSR set to: 0
  1020                           ;main.c: 27:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1021  00237A  0E7D               	movlw	125
  1022  00237C  6FA6               	movwf	(main@motorL+4)& (0+255),b
  1023  00237E  0E0F               	movlw	15
  1024  002380  6FA7               	movwf	(main@motorL+5)& (0+255),b
  1025                           
  1026                           ;main.c: 28:     motorL.dir_pin=4;
  1027  002382  0E04               	movlw	4
  1028  002384  6FA8               	movwf	(main@motorL+6)& (0+255),b
  1029  002386                     
  1030                           ; BSR set to: 0
  1031                           ;main.c: 29:     motorL.PWMperiod=PWMperiod;
  1032  002386  0E00               	movlw	0
  1033  002388  6FAA               	movwf	(main@motorL+8)& (0+255),b
  1034  00238A  0E63               	movlw	99
  1035  00238C  6FA9               	movwf	(main@motorL+7)& (0+255),b
  1036                           
  1037                           ;main.c: 31:     DC_motor motorR;;main.c: 32:     motorR.power=0;
  1038  00238E  0E00               	movlw	0
  1039  002390  6FAB               	movwf	main@motorR& (0+255),b
  1040                           
  1041                           ;main.c: 33:     motorR.direction=1;
  1042  002392  0E01               	movlw	1
  1043  002394  6FAC               	movwf	(main@motorR+1)& (0+255),b
  1044  002396                     
  1045                           ; BSR set to: 0
  1046                           ;main.c: 34:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1047  002396  0EA0               	movlw	160
  1048  002398  6FAD               	movwf	(main@motorR+2)& (0+255),b
  1049  00239A  0E0F               	movlw	15
  1050  00239C  6FAE               	movwf	(main@motorR+3)& (0+255),b
  1051  00239E                     
  1052                           ; BSR set to: 0
  1053                           ;main.c: 35:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1054  00239E  0E7F               	movlw	127
  1055  0023A0  6FAF               	movwf	(main@motorR+4)& (0+255),b
  1056  0023A2  0E0F               	movlw	15
  1057  0023A4  6FB0               	movwf	(main@motorR+5)& (0+255),b
  1058                           
  1059                           ;main.c: 36:     motorR.dir_pin=6;
  1060  0023A6  0E06               	movlw	6
  1061  0023A8  6FB1               	movwf	(main@motorR+6)& (0+255),b
  1062  0023AA                     
  1063                           ; BSR set to: 0
  1064                           ;main.c: 37:     motorR.PWMperiod=PWMperiod;
  1065  0023AA  0E00               	movlw	0
  1066  0023AC  6FB3               	movwf	(main@motorR+8)& (0+255),b
  1067  0023AE  0E63               	movlw	99
  1068  0023B0  6FB2               	movwf	(main@motorR+7)& (0+255),b
  1069  0023B2                     
  1070                           ; BSR set to: 0
  1071                           ;main.c: 39:     ADC_init();
  1072  0023B2  ECEF  F01C         	call	_ADC_init	;wreg free
  1073  0023B6                     
  1074                           ;main.c: 40:     colourclick_init();
  1075  0023B6  ECF1  F01B         	call	_colourclick_init	;wreg free
  1076  0023BA                     
  1077                           ;main.c: 41:     DCmotors_init(PWMperiod);
  1078  0023BA  0E63               	movlw	99
  1079  0023BC  EC38  F01B         	call	_DCmotors_init
  1080  0023C0                     
  1081                           ;main.c: 42:     timer0_init();
  1082  0023C0  EC92  F01C         	call	_timer0_init	;wreg free
  1083  0023C4                     
  1084                           ;main.c: 43:     USART4_init();
  1085  0023C4  ECC2  F01C         	call	_USART4_init	;wreg free
  1086  0023C8                     
  1087                           ;main.c: 44:     checkbatterylevel();
  1088  0023C8  ECB2  F01C         	call	_checkbatterylevel	;wreg free
  1089  0023CC                     
  1090                           ;main.c: 55:     colourclick_calibration();
  1091  0023CC  ECC4  F018         	call	_colourclick_calibration	;wreg free
  1092  0023D0                     l67:
  1093  0023D0  A48E               	btfss	142,2,c	;volatile
  1094  0023D2  EFED  F011         	goto	u5181
  1095  0023D6  EFEF  F011         	goto	u5180
  1096  0023DA                     u5181:
  1097  0023DA  EFF6  F011         	goto	l71
  1098  0023DE                     u5180:
  1099  0023DE  B68E               	btfsc	142,3,c	;volatile
  1100  0023E0  EFF4  F011         	goto	u5191
  1101  0023E4  EFF6  F011         	goto	u5190
  1102  0023E8                     u5191:
  1103  0023E8  EFE8  F011         	goto	l67
  1104  0023EC                     u5190:
  1105  0023EC                     l71:
  1106                           
  1107                           ;main.c: 62:     LATDbits.LATD3 = 1;
  1108  0023EC  867C               	bsf	124,3,c	;volatile
  1109  0023EE                     
  1110                           ;main.c: 63:     colourclickLEDs_C(1);
  1111  0023EE  0E01               	movlw	1
  1112  0023F0  EC81  F01C         	call	_colourclickLEDs_C
  1113  0023F4                     
  1114                           ;main.c: 64:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1115  0023F4  0E52               	movlw	82
  1116  0023F6  0100               	movlb	0	; () banked
  1117  0023F8  6F98               	movwf	(??_main+1)& (0+255),b
  1118  0023FA  0E2B               	movlw	43
  1119  0023FC  6F97               	movwf	??_main& (0+255),b
  1120  0023FE  0E00               	movlw	0
  1121  002400                     u5817:
  1122  002400  2EE8               	decfsz	wreg,f,c
  1123  002402  D7FE               	bra	u5817
  1124  002404  2F97               	decfsz	??_main& (0+255),f,b
  1125  002406  D7FC               	bra	u5817
  1126  002408  2F98               	decfsz	(??_main+1)& (0+255),f,b
  1127  00240A  D7FA               	bra	u5817
  1128  00240C  F000               	nop	
  1129  00240E                     
  1130                           ;main.c: 65:     interrupts_init();
  1131  00240E  EC6F  F01C         	call	_interrupts_init	;wreg free
  1132  002412                     l4827:
  1133                           
  1134                           ;main.c: 71:         if (start==0 && colourcard_flag==1) {
  1135  002412  0100               	movlb	0	; () banked
  1136  002414  5199               	movf	main@start& (0+255),w,b
  1137  002416  A4D8               	btfss	status,2,c
  1138  002418  EF10  F012         	goto	u5201
  1139  00241C  EF12  F012         	goto	u5200
  1140  002420                     u5201:
  1141  002420  EF20  F012         	goto	l4833
  1142  002424                     u5200:
  1143  002424                     
  1144                           ; BSR set to: 0
  1145  002424  05B7               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1146  002426  A4D8               	btfss	status,2,c
  1147  002428  EF18  F012         	goto	u5211
  1148  00242C  EF1A  F012         	goto	u5210
  1149  002430                     u5211:
  1150  002430  EF20  F012         	goto	l4833
  1151  002434                     u5210:
  1152  002434                     
  1153                           ; BSR set to: 0
  1154                           ;main.c: 72:             colourcard_flag = 0;
  1155  002434  0E00               	movlw	0
  1156  002436  6FB7               	movwf	_colourcard_flag& (0+255),b	;volatile
  1157                           
  1158                           ;main.c: 73:             start = 1;
  1159  002438  0E01               	movlw	1
  1160  00243A  6F99               	movwf	main@start& (0+255),b
  1161                           
  1162                           ;main.c: 74:         } else if (start==1 && colourcard_flag==1) {
  1163  00243C  EF09  F012         	goto	l4827
  1164  002440                     l4833:
  1165                           
  1166                           ; BSR set to: 0
  1167  002440  0599               	decf	main@start& (0+255),w,b
  1168  002442  A4D8               	btfss	status,2,c
  1169  002444  EF26  F012         	goto	u5221
  1170  002448  EF28  F012         	goto	u5220
  1171  00244C                     u5221:
  1172  00244C  EF9F  F012         	goto	l4863
  1173  002450                     u5220:
  1174  002450                     
  1175                           ; BSR set to: 0
  1176  002450  05B7               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1177  002452  A4D8               	btfss	status,2,c
  1178  002454  EF2E  F012         	goto	u5231
  1179  002458  EF30  F012         	goto	u5230
  1180  00245C                     u5231:
  1181  00245C  EF9F  F012         	goto	l4863
  1182  002460                     u5230:
  1183  002460                     
  1184                           ; BSR set to: 0
  1185                           ;main.c: 75:             stop(&motorL, &motorR);
  1186  002460  0EA2               	movlw	low main@motorL
  1187  002462  6E23               	movwf	stop@mL^0,c
  1188  002464  0E00               	movlw	high main@motorL
  1189  002466  6E24               	movwf	(stop@mL+1)^0,c
  1190  002468  0EAB               	movlw	low main@motorR
  1191  00246A  6E25               	movwf	stop@mR^0,c
  1192  00246C  0E00               	movlw	high main@motorR
  1193  00246E  6E26               	movwf	(stop@mR+1)^0,c
  1194  002470  ECA5  F019         	call	_stop	;wreg free
  1195  002474                     
  1196                           ;main.c: 76:             LATFbits.LATF0 = 1;
  1197  002474  807E               	bsf	126,0,c	;volatile
  1198  002476                     
  1199                           ;main.c: 77:             LATHbits.LATH0 = 1;
  1200  002476  8080               	bsf	128,0,c	;volatile
  1201                           
  1202                           ;main.c: 78:             reverse(&motorL, &motorR);
  1203  002478  0EA2               	movlw	low main@motorL
  1204  00247A  6E23               	movwf	reverse@mL^0,c
  1205  00247C  0E00               	movlw	high main@motorL
  1206  00247E  6E24               	movwf	(reverse@mL+1)^0,c
  1207  002480  0EAB               	movlw	low main@motorR
  1208  002482  6E25               	movwf	reverse@mR^0,c
  1209  002484  0E00               	movlw	high main@motorR
  1210  002486  6E26               	movwf	(reverse@mR+1)^0,c
  1211  002488  EC5E  F019         	call	_reverse	;wreg free
  1212  00248C                     
  1213                           ;main.c: 79:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1214  00248C  0E09               	movlw	9
  1215  00248E  0100               	movlb	0	; () banked
  1216  002490  6F98               	movwf	(??_main+1)& (0+255),b
  1217  002492  0E1E               	movlw	30
  1218  002494  6F97               	movwf	??_main& (0+255),b
  1219  002496  0EE4               	movlw	228
  1220  002498                     u5827:
  1221  002498  2EE8               	decfsz	wreg,f,c
  1222  00249A  D7FE               	bra	u5827
  1223  00249C  2F97               	decfsz	??_main& (0+255),f,b
  1224  00249E  D7FC               	bra	u5827
  1225  0024A0  2F98               	decfsz	(??_main+1)& (0+255),f,b
  1226  0024A2  D7FA               	bra	u5827
  1227  0024A4  F000               	nop	
  1228  0024A6                     
  1229                           ;main.c: 80:             stop(&motorL, &motorR);
  1230  0024A6  0EA2               	movlw	low main@motorL
  1231  0024A8  6E23               	movwf	stop@mL^0,c
  1232  0024AA  0E00               	movlw	high main@motorL
  1233  0024AC  6E24               	movwf	(stop@mL+1)^0,c
  1234  0024AE  0EAB               	movlw	low main@motorR
  1235  0024B0  6E25               	movwf	stop@mR^0,c
  1236  0024B2  0E00               	movlw	high main@motorR
  1237  0024B4  6E26               	movwf	(stop@mR+1)^0,c
  1238  0024B6  ECA5  F019         	call	_stop	;wreg free
  1239  0024BA                     
  1240                           ;main.c: 81:             LATFbits.LATF0 = 0;
  1241  0024BA  907E               	bcf	126,0,c	;volatile
  1242  0024BC                     
  1243                           ;main.c: 82:             LATHbits.LATH0 = 0;
  1244  0024BC  9080               	bcf	128,0,c	;volatile
  1245                           
  1246                           ;main.c: 83:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1247  0024BE  0E52               	movlw	82
  1248  0024C0  0100               	movlb	0	; () banked
  1249  0024C2  6F98               	movwf	(??_main+1)& (0+255),b
  1250  0024C4  0E2B               	movlw	43
  1251  0024C6  6F97               	movwf	??_main& (0+255),b
  1252  0024C8  0E00               	movlw	0
  1253  0024CA                     u5837:
  1254  0024CA  2EE8               	decfsz	wreg,f,c
  1255  0024CC  D7FE               	bra	u5837
  1256  0024CE  2F97               	decfsz	??_main& (0+255),f,b
  1257  0024D0  D7FC               	bra	u5837
  1258  0024D2  2F98               	decfsz	(??_main+1)& (0+255),f,b
  1259  0024D4  D7FA               	bra	u5837
  1260  0024D6  F000               	nop	
  1261  0024D8                     
  1262                           ;main.c: 85:             colourcards_readRGBC(&current, &motorL, &motorR);
  1263  0024D8  0E9A               	movlw	low main@current
  1264  0024DA  0100               	movlb	0	; () banked
  1265  0024DC  6F83               	movwf	colourcards_readRGBC@abs& (0+255),b
  1266  0024DE  0E00               	movlw	high main@current
  1267  0024E0  6F84               	movwf	(colourcards_readRGBC@abs+1)& (0+255),b
  1268  0024E2  0EA2               	movlw	low main@motorL
  1269  0024E4  6F85               	movwf	colourcards_readRGBC@mL& (0+255),b
  1270  0024E6  0E00               	movlw	high main@motorL
  1271  0024E8  6F86               	movwf	(colourcards_readRGBC@mL+1)& (0+255),b
  1272  0024EA  0EAB               	movlw	low main@motorR
  1273  0024EC  6F87               	movwf	colourcards_readRGBC@mR& (0+255),b
  1274  0024EE  0E00               	movlw	high main@motorR
  1275  0024F0  6F88               	movwf	(colourcards_readRGBC@mR+1)& (0+255),b
  1276  0024F2  EC52  F007         	call	_colourcards_readRGBC	;wreg free
  1277  0024F6                     
  1278                           ;main.c: 86:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1279  0024F6  0E52               	movlw	82
  1280  0024F8  0100               	movlb	0	; () banked
  1281  0024FA  6F98               	movwf	(??_main+1)& (0+255),b
  1282  0024FC  0E2B               	movlw	43
  1283  0024FE  6F97               	movwf	??_main& (0+255),b
  1284  002500  0E00               	movlw	0
  1285  002502                     u5847:
  1286  002502  2EE8               	decfsz	wreg,f,c
  1287  002504  D7FE               	bra	u5847
  1288  002506  2F97               	decfsz	??_main& (0+255),f,b
  1289  002508  D7FC               	bra	u5847
  1290  00250A  2F98               	decfsz	(??_main+1)& (0+255),f,b
  1291  00250C  D7FA               	bra	u5847
  1292  00250E  F000               	nop	
  1293  002510                     
  1294                           ;main.c: 88:             colourclick_readRGBC(&current);
  1295  002510  0E9A               	movlw	low main@current
  1296  002512  6E15               	movwf	colourclick_readRGBC@tmpval^0,c
  1297  002514  0E00               	movlw	high main@current
  1298  002516  6E16               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  1299  002518  ECEA  F019         	call	_colourclick_readRGBC	;wreg free
  1300  00251C                     
  1301                           ;main.c: 89:             interrupts_upperbound = current.C + 100;
  1302  00251C  0E64               	movlw	100
  1303  00251E  0100               	movlb	0	; () banked
  1304  002520  25A0               	addwf	(main@current+6)& (0+255),w,b
  1305  002522  6E52               	movwf	_interrupts_upperbound^0,c	;volatile
  1306  002524  0E00               	movlw	0
  1307  002526  21A1               	addwfc	(main@current+7)& (0+255),w,b
  1308  002528  6E53               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1309  00252A                     
  1310                           ; BSR set to: 0
  1311                           ;main.c: 90:             interrupts_lowerbound = current.C - 150;
  1312  00252A  0E6A               	movlw	106
  1313  00252C  25A0               	addwf	(main@current+6)& (0+255),w,b
  1314  00252E  6E54               	movwf	_interrupts_lowerbound^0,c	;volatile
  1315  002530  0EFF               	movlw	255
  1316  002532  21A1               	addwfc	(main@current+7)& (0+255),w,b
  1317  002534  6E55               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1318  002536                     
  1319                           ; BSR set to: 0
  1320                           ;main.c: 92:             colourcard_flag = 0;
  1321  002536  0E00               	movlw	0
  1322  002538  6FB7               	movwf	_colourcard_flag& (0+255),b	;volatile
  1323                           
  1324                           ;main.c: 93:         } else {forward(&motorL, &motorR);}
  1325  00253A  EF09  F012         	goto	l4827
  1326  00253E                     l4863:
  1327                           
  1328                           ; BSR set to: 0
  1329  00253E  0EA2               	movlw	low main@motorL
  1330  002540  6E23               	movwf	forward@mL^0,c
  1331  002542  0E00               	movlw	high main@motorL
  1332  002544  6E24               	movwf	(forward@mL+1)^0,c
  1333  002546  0EAB               	movlw	low main@motorR
  1334  002548  6E25               	movwf	forward@mR^0,c
  1335  00254A  0E00               	movlw	high main@motorR
  1336  00254C  6E26               	movwf	(forward@mR+1)^0,c
  1337  00254E  EC17  F019         	call	_forward	;wreg free
  1338  002552  EF09  F012         	goto	l4827
  1339  002556  EF2E  F000         	goto	start
  1340  00255A                     __end_of_main:
  1341                           	callstack 0
  1342                           
  1343 ;; *************** function _timer0_init *****************
  1344 ;; Defined at:
  1345 ;;		line 8 in file "timers.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; Hardware stack levels required when called: 7
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text1
  1374  003924                     __ptext1:
  1375                           	callstack 0
  1376  003924                     _timer0_init:
  1377                           	callstack 23
  1378  003924                     
  1379                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  1380  003924  50D6               	movf	214,w,c	;volatile
  1381  003926  0B1F               	andlw	-225
  1382  003928  0940               	iorlw	64
  1383  00392A  6ED6               	movwf	214,c	;volatile
  1384  00392C                     
  1385                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  1386  00392C  88D6               	bsf	214,4,c	;volatile
  1387                           
  1388                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  1389  00392E  50D6               	movf	214,w,c	;volatile
  1390  003930  0BF0               	andlw	-16
  1391  003932  0908               	iorlw	8
  1392  003934  6ED6               	movwf	214,c	;volatile
  1393  003936                     
  1394                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  1395  003936  88D5               	bsf	213,4,c	;volatile
  1396                           
  1397                           ;timers.c: 14:     TMR0H=0b1011;
  1398  003938  0E0B               	movlw	11
  1399  00393A  6ED4               	movwf	212,c	;volatile
  1400                           
  1401                           ;timers.c: 15:     TMR0L=0b11011011;
  1402  00393C  0EDB               	movlw	219
  1403  00393E  6ED3               	movwf	211,c	;volatile
  1404  003940                     
  1405                           ;timers.c: 16:     T0CON0bits.T0EN=1;
  1406  003940  8ED5               	bsf	213,7,c	;volatile
  1407  003942  0012               	return		;funcret
  1408  003944                     __end_of_timer0_init:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function _interrupts_init *****************
  1412 ;; Defined at:
  1413 ;;		line 12 in file "interrupts.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; Hardware stack levels required when called: 12
  1434 ;; This function calls:
  1435 ;;		_interrupts_clear
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text2
  1442  0038DE                     __ptext2:
  1443                           	callstack 0
  1444  0038DE                     _interrupts_init:
  1445                           	callstack 18
  1446  0038DE                     
  1447                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 1;
  1448  0038DE  8282               	bsf	130,1,c	;volatile
  1449                           
  1450                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  1451  0038E0  010E               	movlb	14	; () banked
  1452  0038E2  939A               	bcf	154,1,b	;volatile
  1453  0038E4                     
  1454                           ; BSR set to: 14
  1455                           ;interrupts.c: 15:     INT1PPS=0x09;
  1456  0038E4  0E09               	movlw	9
  1457  0038E6  010D               	movlb	13	; () banked
  1458  0038E8  6FF1               	movwf	241,b	;volatile
  1459  0038EA                     
  1460                           ; BSR set to: 13
  1461                           ;interrupts.c: 17:     PIE0bits.INT1IE = 1;
  1462  0038EA  010E               	movlb	14	; () banked
  1463  0038EC  8329               	bsf	41,1,b	;volatile
  1464  0038EE                     
  1465                           ; BSR set to: 14
  1466                           ;interrupts.c: 18:     PIE0bits.TMR0IE = 1;
  1467  0038EE  8B29               	bsf	41,5,b	;volatile
  1468  0038F0                     
  1469                           ; BSR set to: 14
  1470                           ;interrupts.c: 20:     IPR0bits.INT1IP = 1;
  1471  0038F0  831F               	bsf	31,1,b	;volatile
  1472  0038F2                     
  1473                           ; BSR set to: 14
  1474                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 0;
  1475  0038F2  9B1F               	bcf	31,5,b	;volatile
  1476  0038F4                     
  1477                           ; BSR set to: 14
  1478                           ;interrupts.c: 23:     interrupts_clear();
  1479  0038F4  ECE2  F01C         	call	_interrupts_clear	;wreg free
  1480  0038F8                     
  1481                           ;interrupts.c: 25:     INTCONbits.INT1EDG = 0;
  1482  0038F8  92F2               	bcf	242,1,c	;volatile
  1483  0038FA                     
  1484                           ;interrupts.c: 26:     INTCONbits.IPEN = 1;
  1485  0038FA  8AF2               	bsf	242,5,c	;volatile
  1486  0038FC                     
  1487                           ;interrupts.c: 27:     INTCONbits.PEIE = 1;
  1488  0038FC  8CF2               	bsf	242,6,c	;volatile
  1489  0038FE                     
  1490                           ;interrupts.c: 28:     INTCONbits.GIE = 1;
  1491  0038FE  8EF2               	bsf	242,7,c	;volatile
  1492  003900  0012               	return		;funcret
  1493  003902                     __end_of_interrupts_init:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _interrupts_clear *****************
  1497 ;; Defined at:
  1498 ;;		line 37 in file "interrupts.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 11
  1519 ;; This function calls:
  1520 ;;		_I2C_2_Master_Start
  1521 ;;		_I2C_2_Master_Stop
  1522 ;;		_I2C_2_Master_Write
  1523 ;;		_interrupts_colourclick
  1524 ;; This function is called by:
  1525 ;;		_interrupts_init
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text3
  1530  0039C4                     __ptext3:
  1531                           	callstack 0
  1532  0039C4                     _interrupts_clear:
  1533                           	callstack 18
  1534  0039C4                     
  1535                           ;interrupts.c: 38:     I2C_2_Master_Start();
  1536  0039C4  EC3E  F01D         	call	_I2C_2_Master_Start	;wreg free
  1537                           
  1538                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  1539  0039C8  0E52               	movlw	82
  1540  0039CA  EC27  F01D         	call	_I2C_2_Master_Write
  1541                           
  1542                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  1543  0039CE  0EE6               	movlw	230
  1544  0039D0  EC27  F01D         	call	_I2C_2_Master_Write
  1545                           
  1546                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  1547  0039D4  EC39  F01D         	call	_I2C_2_Master_Stop	;wreg free
  1548                           
  1549                           ;interrupts.c: 43:     interrupts_colourclick();
  1550  0039D8  EC60  F01B         	call	_interrupts_colourclick	;wreg free
  1551  0039DC  0012               	return		;funcret
  1552  0039DE                     __end_of_interrupts_clear:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _interrupts_colourclick *****************
  1556 ;; Defined at:
  1557 ;;		line 50 in file "interrupts.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1575 ;;Total ram usage:        1 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 10
  1578 ;; This function calls:
  1579 ;;		_colourclick_writetoaddr
  1580 ;; This function is called by:
  1581 ;;		_interrupts_clear
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text4
  1586  0036C0                     __ptext4:
  1587                           	callstack 0
  1588  0036C0                     _interrupts_colourclick:
  1589                           	callstack 18
  1590  0036C0                     
  1591                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
  1592  0036C0  0E13               	movlw	19
  1593  0036C2  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1594  0036C4  0E00               	movlw	0
  1595  0036C6  ECA2  F01C         	call	_colourclick_writetoaddr
  1596  0036CA                     
  1597                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1598  0036CA  0E3F               	movlw	63
  1599  0036CC  6E0E               	movwf	??_interrupts_colourclick^0,c
  1600  0036CE  0E55               	movlw	85
  1601  0036D0                     u5857:
  1602  0036D0  2EE8               	decfsz	wreg,f,c
  1603  0036D2  D7FE               	bra	u5857
  1604  0036D4  2E0E               	decfsz	??_interrupts_colourclick^0,f,c
  1605  0036D6  D7FC               	bra	u5857
  1606  0036D8  F000               	nop	
  1607  0036DA                     
  1608                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
  1609  0036DA  0E04               	movlw	4
  1610  0036DC  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1611  0036DE  0E0C               	movlw	12
  1612  0036E0  ECA2  F01C         	call	_colourclick_writetoaddr
  1613  0036E4                     
  1614                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  1615  0036E4  C054  F00C         	movff	_interrupts_lowerbound,colourclick_writetoaddr@value	;volatile
  1616  0036E8  0E04               	movlw	4
  1617  0036EA  ECA2  F01C         	call	_colourclick_writetoaddr
  1618  0036EE                     
  1619                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  1620  0036EE  5055               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  1621  0036F0  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1622  0036F2  0E05               	movlw	5
  1623  0036F4  ECA2  F01C         	call	_colourclick_writetoaddr
  1624  0036F8                     
  1625                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  1626  0036F8  C052  F00C         	movff	_interrupts_upperbound,colourclick_writetoaddr@value	;volatile
  1627  0036FC  0E06               	movlw	6
  1628  0036FE  ECA2  F01C         	call	_colourclick_writetoaddr
  1629  003702                     
  1630                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  1631  003702  5053               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  1632  003704  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1633  003706  0E07               	movlw	7
  1634  003708  ECA2  F01C         	call	_colourclick_writetoaddr
  1635  00370C  0012               	return		;funcret
  1636  00370E                     __end_of_interrupts_colourclick:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _colourclick_init *****************
  1640 ;; Defined at:
  1641 ;;		line 12 in file "colour_click.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1659 ;;Total ram usage:        1 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 10
  1662 ;; This function calls:
  1663 ;;		_I2C_2_Master_Init
  1664 ;;		_colourclickLEDs_init
  1665 ;;		_colourclick_writetoaddr
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text5
  1672  0037E2                     __ptext5:
  1673                           	callstack 0
  1674  0037E2                     _colourclick_init:
  1675                           	callstack 20
  1676  0037E2                     
  1677                           ;colour_click.c: 14:     I2C_2_Master_Init();
  1678  0037E2  EC0D  F01C         	call	_I2C_2_Master_Init	;wreg free
  1679  0037E6                     
  1680                           ;colour_click.c: 17:   colourclick_writetoaddr(0x00, 0x01);
  1681  0037E6  0E01               	movlw	1
  1682  0037E8  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1683  0037EA  0E00               	movlw	0
  1684  0037EC  ECA2  F01C         	call	_colourclick_writetoaddr
  1685  0037F0                     
  1686                           ;colour_click.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1687  0037F0  0E3F               	movlw	63
  1688  0037F2  6E0E               	movwf	??_colourclick_init^0,c
  1689  0037F4  0E55               	movlw	85
  1690  0037F6                     u5867:
  1691  0037F6  2EE8               	decfsz	wreg,f,c
  1692  0037F8  D7FE               	bra	u5867
  1693  0037FA  2E0E               	decfsz	??_colourclick_init^0,f,c
  1694  0037FC  D7FC               	bra	u5867
  1695  0037FE  F000               	nop	
  1696  003800                     
  1697                           ;colour_click.c: 21:  colourclick_writetoaddr(0x00, 0x03);
  1698  003800  0E03               	movlw	3
  1699  003802  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1700  003804  0E00               	movlw	0
  1701  003806  ECA2  F01C         	call	_colourclick_writetoaddr
  1702  00380A                     
  1703                           ;colour_click.c: 24:  colourclick_writetoaddr(0x01, 0xD5);
  1704  00380A  0ED5               	movlw	213
  1705  00380C  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1706  00380E  0E01               	movlw	1
  1707  003810  ECA2  F01C         	call	_colourclick_writetoaddr
  1708  003814                     
  1709                           ;colour_click.c: 26:     colourclickLEDs_init();
  1710  003814  EC20  F01D         	call	_colourclickLEDs_init	;wreg free
  1711  003818  0012               	return		;funcret
  1712  00381A                     __end_of_colourclick_init:
  1713                           	callstack 0
  1714                           
  1715 ;; *************** function _colourclick_writetoaddr *****************
  1716 ;; Defined at:
  1717 ;;		line 33 in file "colour_click.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  address         1    wreg     unsigned char 
  1720 ;;  value           1   11[COMRAM] unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  address         1   12[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1732 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1736 ;;Total ram usage:        2 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 9
  1739 ;; This function calls:
  1740 ;;		_I2C_2_Master_Start
  1741 ;;		_I2C_2_Master_Stop
  1742 ;;		_I2C_2_Master_Write
  1743 ;; This function is called by:
  1744 ;;		_interrupts_colourclick
  1745 ;;		_colourclick_init
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text6
  1750  003944                     __ptext6:
  1751                           	callstack 0
  1752  003944                     _colourclick_writetoaddr:
  1753                           	callstack 18
  1754                           
  1755                           ;incstack = 0
  1756                           ;colourclick_writetoaddr@address stored from wreg
  1757  003944  6E0D               	movwf	colourclick_writetoaddr@address^0,c
  1758  003946                     
  1759                           ;colour_click.c: 34:     I2C_2_Master_Start();
  1760  003946  EC3E  F01D         	call	_I2C_2_Master_Start	;wreg free
  1761                           
  1762                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  1763  00394A  0E52               	movlw	82
  1764  00394C  EC27  F01D         	call	_I2C_2_Master_Write
  1765                           
  1766                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  1767  003950  500D               	movf	colourclick_writetoaddr@address^0,w,c
  1768  003952  0980               	iorlw	128
  1769  003954  EC27  F01D         	call	_I2C_2_Master_Write
  1770                           
  1771                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  1772  003958  500C               	movf	colourclick_writetoaddr@value^0,w,c
  1773  00395A  EC27  F01D         	call	_I2C_2_Master_Write
  1774                           
  1775                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  1776  00395E  EC39  F01D         	call	_I2C_2_Master_Stop	;wreg free
  1777  003962  0012               	return		;funcret
  1778  003964                     __end_of_colourclick_writetoaddr:
  1779                           	callstack 0
  1780                           
  1781 ;; *************** function _colourclickLEDs_init *****************
  1782 ;; Defined at:
  1783 ;;		line 32 in file "buttons_n_LEDs.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;Total ram usage:        0 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 8
  1804 ;; This function calls:
  1805 ;;		_colourclickLEDs_C
  1806 ;; This function is called by:
  1807 ;;		_colourclick_init
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text7
  1812  003A40                     __ptext7:
  1813                           	callstack 0
  1814  003A40                     _colourclickLEDs_init:
  1815                           	callstack 21
  1816  003A40                     
  1817                           ;buttons_n_LEDs.c: 34:     TRISGbits.TRISG1 = 0;
  1818  003A40  9287               	bcf	135,1,c	;volatile
  1819                           
  1820                           ;buttons_n_LEDs.c: 35:     TRISAbits.TRISA4 = 0;
  1821  003A42  9881               	bcf	129,4,c	;volatile
  1822                           
  1823                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF7 = 0;
  1824  003A44  9E86               	bcf	134,7,c	;volatile
  1825  003A46                     
  1826                           ;buttons_n_LEDs.c: 39:     colourclickLEDs_C(0);
  1827  003A46  0E00               	movlw	0
  1828  003A48  EC81  F01C         	call	_colourclickLEDs_C
  1829  003A4C  0012               	return		;funcret
  1830  003A4E                     __end_of_colourclickLEDs_init:
  1831                           	callstack 0
  1832                           
  1833 ;; *************** function _I2C_2_Master_Init *****************
  1834 ;; Defined at:
  1835 ;;		line 8 in file "I2C.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;Total ram usage:        0 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 7
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_colourclick_init
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text8
  1864  00381A                     __ptext8:
  1865                           	callstack 0
  1866  00381A                     _I2C_2_Master_Init:
  1867                           	callstack 22
  1868  00381A                     
  1869                           ;I2C.c: 10:   SSP2CON1bits.SSPM= 0b1000;
  1870  00381A  010E               	movlb	14	; () banked
  1871  00381C  51D9               	movf	217,w,b	;volatile
  1872  00381E  0BF0               	andlw	-16
  1873  003820  0908               	iorlw	8
  1874  003822  6FD9               	movwf	217,b	;volatile
  1875  003824                     
  1876                           ; BSR set to: 14
  1877                           ;I2C.c: 11:   SSP2CON1bits.SSPEN = 1;
  1878  003824  8BD9               	bsf	217,5,b	;volatile
  1879                           
  1880                           ;I2C.c: 12:   SSP2ADD = (64000000/(4*100000))-1;
  1881  003826  0E9F               	movlw	159
  1882  003828  6FD6               	movwf	214,b	;volatile
  1883  00382A                     
  1884                           ; BSR set to: 14
  1885                           ;I2C.c: 15:   TRISDbits.TRISD5 = 1;
  1886  00382A  8A84               	bsf	132,5,c	;volatile
  1887  00382C                     
  1888                           ; BSR set to: 14
  1889                           ;I2C.c: 16:   TRISDbits.TRISD6 = 1;
  1890  00382C  8C84               	bsf	132,6,c	;volatile
  1891  00382E                     
  1892                           ; BSR set to: 14
  1893                           ;I2C.c: 17:   ANSELDbits.ANSELD5=0;
  1894  00382E  9BA7               	bcf	167,5,b	;volatile
  1895  003830                     
  1896                           ; BSR set to: 14
  1897                           ;I2C.c: 18:   ANSELDbits.ANSELD6=0;
  1898  003830  9DA7               	bcf	167,6,b	;volatile
  1899                           
  1900                           ;I2C.c: 19:   SSP2DATPPS=0x1D;
  1901  003832  0E1D               	movlw	29
  1902  003834  6F1D               	movwf	29,b	;volatile
  1903                           
  1904                           ;I2C.c: 20:   SSP2CLKPPS=0x1E;
  1905  003836  0E1E               	movlw	30
  1906  003838  6F1C               	movwf	28,b	;volatile
  1907                           
  1908                           ;I2C.c: 21:   RD5PPS=0x1C;
  1909  00383A  0E1C               	movlw	28
  1910  00383C  6F6F               	movwf	111,b	;volatile
  1911                           
  1912                           ;I2C.c: 22:   RD6PPS=0x1B;
  1913  00383E  0E1B               	movlw	27
  1914  003840  6F70               	movwf	112,b	;volatile
  1915  003842                     
  1916                           ; BSR set to: 14
  1917  003842  0012               	return		;funcret
  1918  003844                     __end_of_I2C_2_Master_Init:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _colourclick_calibration *****************
  1922 ;; Defined at:
  1923 ;;		line 159 in file "colour_click.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  initial         8   24[COMRAM] struct .
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1938 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1941 ;;Total ram usage:       10 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; Hardware stack levels required when called: 11
  1944 ;; This function calls:
  1945 ;;		_colourclickLEDs_C
  1946 ;;		_colourclick_readRGBC
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text9
  1953  003188                     __ptext9:
  1954                           	callstack 0
  1955  003188                     _colourclick_calibration:
  1956                           	callstack 19
  1957  003188                     l334:
  1958  003188  A48E               	btfss	142,2,c	;volatile
  1959  00318A  EFC9  F018         	goto	u3891
  1960  00318E  EFCB  F018         	goto	u3890
  1961  003192                     u3891:
  1962  003192  EFD2  F018         	goto	l338
  1963  003196                     u3890:
  1964  003196  B68E               	btfsc	142,3,c	;volatile
  1965  003198  EFD0  F018         	goto	u3901
  1966  00319C  EFD2  F018         	goto	u3900
  1967  0031A0                     u3901:
  1968  0031A0  EFC4  F018         	goto	l334
  1969  0031A4                     u3900:
  1970  0031A4                     l338:
  1971                           
  1972                           ;colour_click.c: 162:     if (!PORTFbits.RF2) {LATDbits.LATD7=1;}
  1973  0031A4  B48E               	btfsc	142,2,c	;volatile
  1974  0031A6  EFD7  F018         	goto	u3911
  1975  0031AA  EFD9  F018         	goto	u3910
  1976  0031AE                     u3911:
  1977  0031AE  EFDA  F018         	goto	l339
  1978  0031B2                     u3910:
  1979  0031B2  8E7C               	bsf	124,7,c	;volatile
  1980  0031B4                     l339:
  1981                           
  1982                           ;colour_click.c: 163:     if (!PORTFbits.RF3) {LATHbits.LATH3=1;}
  1983  0031B4  B68E               	btfsc	142,3,c	;volatile
  1984  0031B6  EFDF  F018         	goto	u3921
  1985  0031BA  EFE1  F018         	goto	u3920
  1986  0031BE                     u3921:
  1987  0031BE  EFE2  F018         	goto	l340
  1988  0031C2                     u3920:
  1989  0031C2  8680               	bsf	128,3,c	;volatile
  1990  0031C4                     l340:
  1991                           
  1992                           ;colour_click.c: 164:     LATDbits.LATD3 = 1;
  1993  0031C4  867C               	bsf	124,3,c	;volatile
  1994  0031C6                     
  1995                           ;colour_click.c: 165:     colourclickLEDs_C(1);
  1996  0031C6  0E01               	movlw	1
  1997  0031C8  EC81  F01C         	call	_colourclickLEDs_C
  1998  0031CC                     
  1999                           ;colour_click.c: 166:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2000  0031CC  0E52               	movlw	82
  2001  0031CE  6E18               	movwf	(??_colourclick_calibration+1)^0,c
  2002  0031D0  0E2B               	movlw	43
  2003  0031D2  6E17               	movwf	??_colourclick_calibration^0,c
  2004  0031D4  0E00               	movlw	0
  2005  0031D6                     u5877:
  2006  0031D6  2EE8               	decfsz	wreg,f,c
  2007  0031D8  D7FE               	bra	u5877
  2008  0031DA  2E17               	decfsz	??_colourclick_calibration^0,f,c
  2009  0031DC  D7FC               	bra	u5877
  2010  0031DE  2E18               	decfsz	(??_colourclick_calibration+1)^0,f,c
  2011  0031E0  D7FA               	bra	u5877
  2012  0031E2  D000               	nop2	
  2013  0031E4                     
  2014                           ;colour_click.c: 168:     colourclick_readRGBC(&initial);
  2015  0031E4  0E19               	movlw	low colourclick_calibration@initial
  2016  0031E6  6E15               	movwf	colourclick_readRGBC@tmpval^0,c
  2017  0031E8  0E00               	movlw	high colourclick_calibration@initial
  2018  0031EA  6E16               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2019  0031EC  ECEA  F019         	call	_colourclick_readRGBC	;wreg free
  2020  0031F0                     
  2021                           ;colour_click.c: 170:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2022  0031F0  0E52               	movlw	82
  2023  0031F2  6E18               	movwf	(??_colourclick_calibration+1)^0,c
  2024  0031F4  0E2B               	movlw	43
  2025  0031F6  6E17               	movwf	??_colourclick_calibration^0,c
  2026  0031F8  0E00               	movlw	0
  2027  0031FA                     u5887:
  2028  0031FA  2EE8               	decfsz	wreg,f,c
  2029  0031FC  D7FE               	bra	u5887
  2030  0031FE  2E17               	decfsz	??_colourclick_calibration^0,f,c
  2031  003200  D7FC               	bra	u5887
  2032  003202  2E18               	decfsz	(??_colourclick_calibration+1)^0,f,c
  2033  003204  D7FA               	bra	u5887
  2034  003206  D000               	nop2	
  2035  003208                     
  2036                           ;colour_click.c: 171:     LATDbits.LATD3 = 0;
  2037  003208  967C               	bcf	124,3,c	;volatile
  2038  00320A                     
  2039                           ;colour_click.c: 172:     colourclickLEDs_C(0);
  2040  00320A  0E00               	movlw	0
  2041  00320C  EC81  F01C         	call	_colourclickLEDs_C
  2042  003210                     
  2043                           ;colour_click.c: 173:     LATDbits.LATD7 = 0;
  2044  003210  9E7C               	bcf	124,7,c	;volatile
  2045  003212                     
  2046                           ;colour_click.c: 174:     LATHbits.LATH3 = 0;
  2047  003212  9680               	bcf	128,3,c	;volatile
  2048  003214                     
  2049                           ;colour_click.c: 176:     interrupts_lowerbound = initial.C - 150;
  2050  003214  0E6A               	movlw	106
  2051  003216  241F               	addwf	(colourclick_calibration@initial+6)^0,w,c
  2052  003218  6E54               	movwf	_interrupts_lowerbound^0,c	;volatile
  2053  00321A  0EFF               	movlw	255
  2054  00321C  2020               	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2055  00321E  6E55               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  2056  003220                     
  2057                           ;colour_click.c: 177:     interrupts_upperbound = initial.C + 100;
  2058  003220  0E64               	movlw	100
  2059  003222  241F               	addwf	(colourclick_calibration@initial+6)^0,w,c
  2060  003224  6E52               	movwf	_interrupts_upperbound^0,c	;volatile
  2061  003226  0E00               	movlw	0
  2062  003228  2020               	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2063  00322A  6E53               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  2064  00322C  0012               	return		;funcret
  2065  00322E                     __end_of_colourclick_calibration:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _colourcards_readRGBC *****************
  2069 ;; Defined at:
  2070 ;;		line 13 in file "colour_cards.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  abs             2   35[BANK0 ] PTR struct .
  2073 ;;		 -> main@current(8), 
  2074 ;;  mL              2   37[BANK0 ] PTR struct .
  2075 ;;		 -> main@motorL(9), 
  2076 ;;  mR              2   39[BANK0 ] PTR struct .
  2077 ;;		 -> main@motorR(9), 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  rel            12   43[BANK0 ] struct .
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2089 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2093 ;;Total ram usage:       20 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 12
  2096 ;; This function calls:
  2097 ;;		___flge
  2098 ;;		_clearance
  2099 ;;		_colourcards_normaliseRGBC
  2100 ;;		_colourclick_readRGBC
  2101 ;;		_colourclick_readRGBC2
  2102 ;;		_forward
  2103 ;;		_reverse
  2104 ;;		_stop
  2105 ;;		_turnleft
  2106 ;;		_turnright
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text10
  2113  000EA4                     __ptext10:
  2114                           	callstack 0
  2115  000EA4                     _colourcards_readRGBC:
  2116                           	callstack 18
  2117  000EA4                     
  2118                           ;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
  2119  000EA4  010E               	movlb	14	; () banked
  2120  000EA6  9329               	bcf	41,1,b	;volatile
  2121  000EA8                     
  2122                           ; BSR set to: 14
  2123                           ;colour_cards.c: 18:     RGB_rel rel;;colour_cards.c: 19:     colourclick_readRGBC(abs);
  2124  000EA8  C083  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  2125  000EAC  C084  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  2126  000EB0  ECEA  F019         	call	_colourclick_readRGBC	;wreg free
  2127                           
  2128                           ;colour_cards.c: 20:     colourcards_normaliseRGBC(abs, &rel);
  2129  000EB4  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2130  000EB8  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2131  000EBC  0E8B               	movlw	low colourcards_readRGBC@rel
  2132  000EBE  0100               	movlb	0	; () banked
  2133  000EC0  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2134  000EC2  0E00               	movlw	high colourcards_readRGBC@rel
  2135  000EC4  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2136  000EC6  EC77  F016         	call	_colourcards_normaliseRGBC	;wreg free
  2137  000ECA                     
  2138                           ;colour_cards.c: 24:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  2139  000ECA  0E71               	movlw	113
  2140  000ECC  6E18               	movwf	___flge@ff1^0,c
  2141  000ECE  0E3D               	movlw	61
  2142  000ED0  6E19               	movwf	(___flge@ff1+1)^0,c
  2143  000ED2  0E0A               	movlw	10
  2144  000ED4  6E1A               	movwf	(___flge@ff1+2)^0,c
  2145  000ED6  0E3F               	movlw	63
  2146  000ED8  6E1B               	movwf	(___flge@ff1+3)^0,c
  2147  000EDA  C08B  F01C         	movff	colourcards_readRGBC@rel,___flge@ff2
  2148  000EDE  C08C  F01D         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2149  000EE2  C08D  F01E         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2150  000EE6  C08E  F01F         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2151  000EEA  ECE0  F017         	call	___flge	;wreg free
  2152  000EEE  B0D8               	btfsc	status,0,c
  2153  000EF0  EF7C  F007         	goto	u4951
  2154  000EF4  EF7E  F007         	goto	u4950
  2155  000EF8                     u4951:
  2156  000EF8  EF29  F008         	goto	l4689
  2157  000EFC                     u4950:
  2158  000EFC  C08F  F018         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2159  000F00  C090  F019         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2160  000F04  C091  F01A         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2161  000F08  C092  F01B         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2162  000F0C  0E48               	movlw	72
  2163  000F0E  6E1C               	movwf	___flge@ff2^0,c
  2164  000F10  0EE1               	movlw	225
  2165  000F12  6E1D               	movwf	(___flge@ff2+1)^0,c
  2166  000F14  0E7A               	movlw	122
  2167  000F16  6E1E               	movwf	(___flge@ff2+2)^0,c
  2168  000F18  0E3E               	movlw	62
  2169  000F1A  6E1F               	movwf	(___flge@ff2+3)^0,c
  2170  000F1C  ECE0  F017         	call	___flge	;wreg free
  2171  000F20  B0D8               	btfsc	status,0,c
  2172  000F22  EF95  F007         	goto	u4961
  2173  000F26  EF97  F007         	goto	u4960
  2174  000F2A                     u4961:
  2175  000F2A  EF29  F008         	goto	l4689
  2176  000F2E                     u4960:
  2177  000F2E  C093  F018         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2178  000F32  C094  F019         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2179  000F36  C095  F01A         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2180  000F3A  C096  F01B         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2181  000F3E  0EEC               	movlw	236
  2182  000F40  6E1C               	movwf	___flge@ff2^0,c
  2183  000F42  0E51               	movlw	81
  2184  000F44  6E1D               	movwf	(___flge@ff2+1)^0,c
  2185  000F46  0E38               	movlw	56
  2186  000F48  6E1E               	movwf	(___flge@ff2+2)^0,c
  2187  000F4A  0E3E               	movlw	62
  2188  000F4C  6E1F               	movwf	(___flge@ff2+3)^0,c
  2189  000F4E  ECE0  F017         	call	___flge	;wreg free
  2190  000F52  B0D8               	btfsc	status,0,c
  2191  000F54  EFAE  F007         	goto	u4971
  2192  000F58  EFB0  F007         	goto	u4970
  2193  000F5C                     u4971:
  2194  000F5C  EF29  F008         	goto	l4689
  2195  000F60                     u4970:
  2196  000F60                     
  2197                           ;colour_cards.c: 25:         colourclick_readRGBC2(abs, 3);
  2198  000F60  C083  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2199  000F64  C084  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2200  000F68  0E03               	movlw	3
  2201  000F6A  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  2202  000F6C  EC35  F017         	call	_colourclick_readRGBC2	;wreg free
  2203                           
  2204                           ;colour_cards.c: 26:         colourcards_normaliseRGBC(abs, &rel);
  2205  000F70  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2206  000F74  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2207  000F78  0E8B               	movlw	low colourcards_readRGBC@rel
  2208  000F7A  0100               	movlb	0	; () banked
  2209  000F7C  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2210  000F7E  0E00               	movlw	high colourcards_readRGBC@rel
  2211  000F80  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2212  000F82  EC77  F016         	call	_colourcards_normaliseRGBC	;wreg free
  2213  000F86                     
  2214                           ;colour_cards.c: 27:         if (rel.G<0.185) {
  2215  000F86  C08F  F018         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2216  000F8A  C090  F019         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2217  000F8E  C091  F01A         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2218  000F92  C092  F01B         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2219  000F96  0EA4               	movlw	164
  2220  000F98  6E1C               	movwf	___flge@ff2^0,c
  2221  000F9A  0E70               	movlw	112
  2222  000F9C  6E1D               	movwf	(___flge@ff2+1)^0,c
  2223  000F9E  0E3D               	movlw	61
  2224  000FA0  6E1E               	movwf	(___flge@ff2+2)^0,c
  2225  000FA2  0E3E               	movlw	62
  2226  000FA4  6E1F               	movwf	(___flge@ff2+3)^0,c
  2227  000FA6  ECE0  F017         	call	___flge	;wreg free
  2228  000FAA  B0D8               	btfsc	status,0,c
  2229  000FAC  EFDA  F007         	goto	u4981
  2230  000FB0  EFDC  F007         	goto	u4980
  2231  000FB4                     u4981:
  2232  000FB4  EF04  F008         	goto	l4685
  2233  000FB8                     u4980:
  2234  000FB8                     
  2235                           ;colour_cards.c: 29:             clearance(mL, mR);
  2236  000FB8  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2237  000FBC  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2238  000FC0  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2239  000FC4  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2240  000FC8  EC19  F01A         	call	_clearance	;wreg free
  2241                           
  2242                           ;colour_cards.c: 30:             turnright(mL, mR, 90);
  2243  000FCC  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2244  000FD0  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2245  000FD4  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2246  000FD8  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2247  000FDC  0E00               	movlw	0
  2248  000FDE  0100               	movlb	0	; () banked
  2249  000FE0  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2250  000FE2  0E5A               	movlw	90
  2251  000FE4  6F81               	movwf	turnright@deg& (0+255),b
  2252  000FE6  EC48  F01A         	call	_turnright	;wreg free
  2253                           
  2254                           ;colour_cards.c: 31:             stop(mL, mR);
  2255  000FEA  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2256  000FEE  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2257  000FF2  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2258  000FF6  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2259  000FFA  ECA5  F019         	call	_stop	;wreg free
  2260  000FFE                     l4683:
  2261                           
  2262                           ;colour_cards.c: 32:             unknowncard_flag = 0;
  2263  000FFE  0E00               	movlw	0
  2264  001000  0100               	movlb	0	; () banked
  2265  001002  6FB6               	movwf	_unknowncard_flag& (0+255),b	;volatile
  2266                           
  2267                           ;colour_cards.c: 33:         } else {
  2268  001004  EF54  F00B         	goto	l4789
  2269  001008                     l4685:
  2270                           
  2271                           ;colour_cards.c: 35:             clearance(mL, mR);
  2272  001008  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2273  00100C  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2274  001010  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2275  001014  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2276  001018  EC19  F01A         	call	_clearance	;wreg free
  2277                           
  2278                           ;colour_cards.c: 36:             turnright(mL, mR, 135);
  2279  00101C  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2280  001020  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2281  001024  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2282  001028  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2283  00102C  0E00               	movlw	0
  2284  00102E  0100               	movlb	0	; () banked
  2285  001030  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2286  001032  0E87               	movlw	135
  2287  001034  6F81               	movwf	turnright@deg& (0+255),b
  2288  001036  EC48  F01A         	call	_turnright	;wreg free
  2289                           
  2290                           ;colour_cards.c: 37:             stop(mL, mR);
  2291  00103A  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2292  00103E  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2293  001042  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2294  001046  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2295  00104A  ECA5  F019         	call	_stop	;wreg free
  2296  00104E  EFFF  F007         	goto	l4683
  2297  001052                     l4689:
  2298  001052  C08B  F018         	movff	colourcards_readRGBC@rel,___flge@ff1
  2299  001056  C08C  F019         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2300  00105A  C08D  F01A         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2301  00105E  C08E  F01B         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2302  001062  0EAE               	movlw	174
  2303  001064  6E1C               	movwf	___flge@ff2^0,c
  2304  001066  0E47               	movlw	71
  2305  001068  6E1D               	movwf	(___flge@ff2+1)^0,c
  2306  00106A  0EE1               	movlw	225
  2307  00106C  6E1E               	movwf	(___flge@ff2+2)^0,c
  2308  00106E  0E3E               	movlw	62
  2309  001070  6E1F               	movwf	(___flge@ff2+3)^0,c
  2310  001072  ECE0  F017         	call	___flge	;wreg free
  2311  001076  B0D8               	btfsc	status,0,c
  2312  001078  EF40  F008         	goto	u4991
  2313  00107C  EF42  F008         	goto	u4990
  2314  001080                     u4991:
  2315  001080  EF3B  F009         	goto	l4715
  2316  001084                     u4990:
  2317  001084  0E9A               	movlw	154
  2318  001086  6E18               	movwf	___flge@ff1^0,c
  2319  001088  0E99               	movlw	153
  2320  00108A  6E19               	movwf	(___flge@ff1+1)^0,c
  2321  00108C  0E99               	movlw	153
  2322  00108E  6E1A               	movwf	(___flge@ff1+2)^0,c
  2323  001090  0E3E               	movlw	62
  2324  001092  6E1B               	movwf	(___flge@ff1+3)^0,c
  2325  001094  C08F  F01C         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2326  001098  C090  F01D         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2327  00109C  C091  F01E         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2328  0010A0  C092  F01F         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2329  0010A4  ECE0  F017         	call	___flge	;wreg free
  2330  0010A8  B0D8               	btfsc	status,0,c
  2331  0010AA  EF59  F008         	goto	u5001
  2332  0010AE  EF5B  F008         	goto	u5000
  2333  0010B2                     u5001:
  2334  0010B2  EF3B  F009         	goto	l4715
  2335  0010B6                     u5000:
  2336  0010B6  0E14               	movlw	20
  2337  0010B8  6E18               	movwf	___flge@ff1^0,c
  2338  0010BA  0EAE               	movlw	174
  2339  0010BC  6E19               	movwf	(___flge@ff1+1)^0,c
  2340  0010BE  0E47               	movlw	71
  2341  0010C0  6E1A               	movwf	(___flge@ff1+2)^0,c
  2342  0010C2  0E3E               	movlw	62
  2343  0010C4  6E1B               	movwf	(___flge@ff1+3)^0,c
  2344  0010C6  C093  F01C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2345  0010CA  C094  F01D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2346  0010CE  C095  F01E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2347  0010D2  C096  F01F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2348  0010D6  ECE0  F017         	call	___flge	;wreg free
  2349  0010DA  B0D8               	btfsc	status,0,c
  2350  0010DC  EF72  F008         	goto	u5011
  2351  0010E0  EF74  F008         	goto	u5010
  2352  0010E4                     u5011:
  2353  0010E4  EF3B  F009         	goto	l4715
  2354  0010E8                     u5010:
  2355  0010E8                     
  2356                           ;colour_cards.c: 43:         colourclick_readRGBC2(abs, 1);
  2357  0010E8  C083  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2358  0010EC  C084  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2359  0010F0  0E01               	movlw	1
  2360  0010F2  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  2361  0010F4  EC35  F017         	call	_colourclick_readRGBC2	;wreg free
  2362                           
  2363                           ;colour_cards.c: 44:         colourcards_normaliseRGBC(abs, &rel);
  2364  0010F8  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2365  0010FC  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2366  001100  0E8B               	movlw	low colourcards_readRGBC@rel
  2367  001102  0100               	movlb	0	; () banked
  2368  001104  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2369  001106  0E00               	movlw	high colourcards_readRGBC@rel
  2370  001108  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2371  00110A  EC77  F016         	call	_colourcards_normaliseRGBC	;wreg free
  2372  00110E                     
  2373                           ;colour_cards.c: 45:         if (rel.B<0.125) {
  2374  00110E  C093  F018         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2375  001112  C094  F019         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2376  001116  C095  F01A         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2377  00111A  C096  F01B         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2378  00111E  0E00               	movlw	0
  2379  001120  6E1C               	movwf	___flge@ff2^0,c
  2380  001122  0E00               	movlw	0
  2381  001124  6E1D               	movwf	(___flge@ff2+1)^0,c
  2382  001126  0E00               	movlw	0
  2383  001128  6E1E               	movwf	(___flge@ff2+2)^0,c
  2384  00112A  0E3E               	movlw	62
  2385  00112C  6E1F               	movwf	(___flge@ff2+3)^0,c
  2386  00112E  ECE0  F017         	call	___flge	;wreg free
  2387  001132  B0D8               	btfsc	status,0,c
  2388  001134  EF9E  F008         	goto	u5021
  2389  001138  EFA0  F008         	goto	u5020
  2390  00113C                     u5021:
  2391  00113C  EFC5  F008         	goto	l4703
  2392  001140                     u5020:
  2393  001140                     
  2394                           ;colour_cards.c: 47:             clearance(mL, mR);
  2395  001140  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2396  001144  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2397  001148  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2398  00114C  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2399  001150  EC19  F01A         	call	_clearance	;wreg free
  2400                           
  2401                           ;colour_cards.c: 48:             turnleft(mL, mR, 90);
  2402  001154  C085  F07D         	movff	colourcards_readRGBC@mL,turnleft@mL
  2403  001158  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2404  00115C  C087  F07F         	movff	colourcards_readRGBC@mR,turnleft@mR
  2405  001160  C088  F080         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2406  001164  0E00               	movlw	0
  2407  001166  0100               	movlb	0	; () banked
  2408  001168  6F82               	movwf	(turnleft@deg+1)& (0+255),b
  2409  00116A  0E5A               	movlw	90
  2410  00116C  6F81               	movwf	turnleft@deg& (0+255),b
  2411  00116E  EC70  F01A         	call	_turnleft	;wreg free
  2412                           
  2413                           ;colour_cards.c: 49:             stop(mL, mR);
  2414  001172  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2415  001176  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2416  00117A  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2417  00117E  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2418  001182  ECA5  F019         	call	_stop	;wreg free
  2419  001186  EFFF  F007         	goto	l4683
  2420  00118A                     l4703:
  2421                           
  2422                           ;colour_cards.c: 52:             colourclick_readRGBC2(abs, 2);
  2423  00118A  C083  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2424  00118E  C084  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2425  001192  0E02               	movlw	2
  2426  001194  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  2427  001196  EC35  F017         	call	_colourclick_readRGBC2	;wreg free
  2428                           
  2429                           ;colour_cards.c: 53:             colourcards_normaliseRGBC(abs, &rel);
  2430  00119A  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2431  00119E  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2432  0011A2  0E8B               	movlw	low colourcards_readRGBC@rel
  2433  0011A4  0100               	movlb	0	; () banked
  2434  0011A6  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2435  0011A8  0E00               	movlw	high colourcards_readRGBC@rel
  2436  0011AA  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2437  0011AC  EC77  F016         	call	_colourcards_normaliseRGBC	;wreg free
  2438  0011B0                     
  2439                           ;colour_cards.c: 54:             if (rel.R<0.115) {
  2440  0011B0  C08B  F018         	movff	colourcards_readRGBC@rel,___flge@ff1
  2441  0011B4  C08C  F019         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2442  0011B8  C08D  F01A         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2443  0011BC  C08E  F01B         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2444  0011C0  0E1F               	movlw	31
  2445  0011C2  6E1C               	movwf	___flge@ff2^0,c
  2446  0011C4  0E85               	movlw	133
  2447  0011C6  6E1D               	movwf	(___flge@ff2+1)^0,c
  2448  0011C8  0EEB               	movlw	235
  2449  0011CA  6E1E               	movwf	(___flge@ff2+2)^0,c
  2450  0011CC  0E3D               	movlw	61
  2451  0011CE  6E1F               	movwf	(___flge@ff2+3)^0,c
  2452  0011D0  ECE0  F017         	call	___flge	;wreg free
  2453  0011D4  B0D8               	btfsc	status,0,c
  2454  0011D6  EFEF  F008         	goto	u5031
  2455  0011DA  EFF1  F008         	goto	u5030
  2456  0011DE                     u5031:
  2457  0011DE  EF16  F009         	goto	l4711
  2458  0011E2                     u5030:
  2459  0011E2                     
  2460                           ;colour_cards.c: 56:                 clearance(mL, mR);
  2461  0011E2  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2462  0011E6  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2463  0011EA  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2464  0011EE  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2465  0011F2  EC19  F01A         	call	_clearance	;wreg free
  2466                           
  2467                           ;colour_cards.c: 57:                 turnright(mL, mR, 180);
  2468  0011F6  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2469  0011FA  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2470  0011FE  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2471  001202  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2472  001206  0E00               	movlw	0
  2473  001208  0100               	movlb	0	; () banked
  2474  00120A  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2475  00120C  0EB4               	movlw	180
  2476  00120E  6F81               	movwf	turnright@deg& (0+255),b
  2477  001210  EC48  F01A         	call	_turnright	;wreg free
  2478                           
  2479                           ;colour_cards.c: 58:                 stop(mL, mR);
  2480  001214  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2481  001218  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2482  00121C  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2483  001220  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2484  001224  ECA5  F019         	call	_stop	;wreg free
  2485  001228  EFFF  F007         	goto	l4683
  2486  00122C                     l4711:
  2487                           
  2488                           ;colour_cards.c: 62:                 clearance(mL, mR);
  2489  00122C  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2490  001230  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2491  001234  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2492  001238  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2493  00123C  EC19  F01A         	call	_clearance	;wreg free
  2494                           
  2495                           ;colour_cards.c: 63:                 turnleft(mL, mR, 135);
  2496  001240  C085  F07D         	movff	colourcards_readRGBC@mL,turnleft@mL
  2497  001244  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2498  001248  C087  F07F         	movff	colourcards_readRGBC@mR,turnleft@mR
  2499  00124C  C088  F080         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2500  001250  0E00               	movlw	0
  2501  001252  0100               	movlb	0	; () banked
  2502  001254  6F82               	movwf	(turnleft@deg+1)& (0+255),b
  2503  001256  0E87               	movlw	135
  2504  001258  6F81               	movwf	turnleft@deg& (0+255),b
  2505  00125A  EC70  F01A         	call	_turnleft	;wreg free
  2506                           
  2507                           ;colour_cards.c: 64:                 stop(mL, mR);
  2508  00125E  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2509  001262  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2510  001266  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2511  00126A  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2512  00126E  ECA5  F019         	call	_stop	;wreg free
  2513  001272  EFFF  F007         	goto	l4683
  2514  001276                     l4715:
  2515  001276  0E48               	movlw	72
  2516  001278  6E18               	movwf	___flge@ff1^0,c
  2517  00127A  0EE1               	movlw	225
  2518  00127C  6E19               	movwf	(___flge@ff1+1)^0,c
  2519  00127E  0EFA               	movlw	250
  2520  001280  6E1A               	movwf	(___flge@ff1+2)^0,c
  2521  001282  0E3E               	movlw	62
  2522  001284  6E1B               	movwf	(___flge@ff1+3)^0,c
  2523  001286  C08B  F01C         	movff	colourcards_readRGBC@rel,___flge@ff2
  2524  00128A  C08C  F01D         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2525  00128E  C08D  F01E         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2526  001292  C08E  F01F         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2527  001296  ECE0  F017         	call	___flge	;wreg free
  2528  00129A  B0D8               	btfsc	status,0,c
  2529  00129C  EF52  F009         	goto	u5041
  2530  0012A0  EF54  F009         	goto	u5040
  2531  0012A4                     u5041:
  2532  0012A4  EFCE  F009         	goto	l4733
  2533  0012A8                     u5040:
  2534  0012A8  0E85               	movlw	133
  2535  0012AA  6E18               	movwf	___flge@ff1^0,c
  2536  0012AC  0EEB               	movlw	235
  2537  0012AE  6E19               	movwf	(___flge@ff1+1)^0,c
  2538  0012B0  0E91               	movlw	145
  2539  0012B2  6E1A               	movwf	(___flge@ff1+2)^0,c
  2540  0012B4  0E3E               	movlw	62
  2541  0012B6  6E1B               	movwf	(___flge@ff1+3)^0,c
  2542  0012B8  C08F  F01C         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2543  0012BC  C090  F01D         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2544  0012C0  C091  F01E         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2545  0012C4  C092  F01F         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2546  0012C8  ECE0  F017         	call	___flge	;wreg free
  2547  0012CC  B0D8               	btfsc	status,0,c
  2548  0012CE  EF6B  F009         	goto	u5051
  2549  0012D2  EF6D  F009         	goto	u5050
  2550  0012D6                     u5051:
  2551  0012D6  EFCE  F009         	goto	l4733
  2552  0012DA                     u5050:
  2553  0012DA  0EEC               	movlw	236
  2554  0012DC  6E18               	movwf	___flge@ff1^0,c
  2555  0012DE  0E51               	movlw	81
  2556  0012E0  6E19               	movwf	(___flge@ff1+1)^0,c
  2557  0012E2  0E38               	movlw	56
  2558  0012E4  6E1A               	movwf	(___flge@ff1+2)^0,c
  2559  0012E6  0E3E               	movlw	62
  2560  0012E8  6E1B               	movwf	(___flge@ff1+3)^0,c
  2561  0012EA  C093  F01C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2562  0012EE  C094  F01D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2563  0012F2  C095  F01E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2564  0012F6  C096  F01F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2565  0012FA  ECE0  F017         	call	___flge	;wreg free
  2566  0012FE  B0D8               	btfsc	status,0,c
  2567  001300  EF84  F009         	goto	u5061
  2568  001304  EF86  F009         	goto	u5060
  2569  001308                     u5061:
  2570  001308  EFCE  F009         	goto	l4733
  2571  00130C                     u5060:
  2572  00130C                     
  2573                           ;colour_cards.c: 71:         reverse(mL, mR);
  2574  00130C  C085  F023         	movff	colourcards_readRGBC@mL,reverse@mL
  2575  001310  C086  F024         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  2576  001314  C087  F025         	movff	colourcards_readRGBC@mR,reverse@mR
  2577  001318  C088  F026         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  2578  00131C  EC5E  F019         	call	_reverse	;wreg free
  2579  001320                     
  2580                           ;colour_cards.c: 72:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  2581  001320  0E72               	movlw	114
  2582  001322  0100               	movlb	0	; () banked
  2583  001324  6F8A               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2584  001326  0EA3               	movlw	163
  2585  001328  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2586  00132A  0E9B               	movlw	155
  2587  00132C                     u5897:
  2588  00132C  2EE8               	decfsz	wreg,f,c
  2589  00132E  D7FE               	bra	u5897
  2590  001330  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2591  001332  D7FC               	bra	u5897
  2592  001334  2F8A               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2593  001336  D7FA               	bra	u5897
  2594  001338                     
  2595                           ;colour_cards.c: 73:         stop(mL, mR);
  2596  001338  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2597  00133C  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2598  001340  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2599  001344  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2600  001348  ECA5  F019         	call	_stop	;wreg free
  2601                           
  2602                           ;colour_cards.c: 74:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2603  00134C  0E09               	movlw	9
  2604  00134E  0100               	movlb	0	; () banked
  2605  001350  6F8A               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2606  001352  0E1E               	movlw	30
  2607  001354  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2608  001356  0EE4               	movlw	228
  2609  001358                     u5907:
  2610  001358  2EE8               	decfsz	wreg,f,c
  2611  00135A  D7FE               	bra	u5907
  2612  00135C  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2613  00135E  D7FC               	bra	u5907
  2614  001360  2F8A               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2615  001362  D7FA               	bra	u5907
  2616  001364  F000               	nop	
  2617  001366                     
  2618                           ;colour_cards.c: 75:         turnright(mL, mR, 90);
  2619  001366  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2620  00136A  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2621  00136E  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2622  001372  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2623  001376  0E00               	movlw	0
  2624  001378  0100               	movlb	0	; () banked
  2625  00137A  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2626  00137C  0E5A               	movlw	90
  2627  00137E  6F81               	movwf	turnright@deg& (0+255),b
  2628  001380  EC48  F01A         	call	_turnright	;wreg free
  2629  001384                     l4729:
  2630                           
  2631                           ;colour_cards.c: 76:         stop(mL, mR);
  2632  001384  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2633  001388  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2634  00138C  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2635  001390  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2636  001394  ECA5  F019         	call	_stop	;wreg free
  2637  001398  EFFF  F007         	goto	l4683
  2638  00139C                     l4733:
  2639  00139C  0E48               	movlw	72
  2640  00139E  6E18               	movwf	___flge@ff1^0,c
  2641  0013A0  0EE1               	movlw	225
  2642  0013A2  6E19               	movwf	(___flge@ff1+1)^0,c
  2643  0013A4  0EFA               	movlw	250
  2644  0013A6  6E1A               	movwf	(___flge@ff1+2)^0,c
  2645  0013A8  0E3E               	movlw	62
  2646  0013AA  6E1B               	movwf	(___flge@ff1+3)^0,c
  2647  0013AC  C08B  F01C         	movff	colourcards_readRGBC@rel,___flge@ff2
  2648  0013B0  C08C  F01D         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2649  0013B4  C08D  F01E         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2650  0013B8  C08E  F01F         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2651  0013BC  ECE0  F017         	call	___flge	;wreg free
  2652  0013C0  B0D8               	btfsc	status,0,c
  2653  0013C2  EFE5  F009         	goto	u5071
  2654  0013C6  EFE7  F009         	goto	u5070
  2655  0013CA                     u5071:
  2656  0013CA  EF57  F00A         	goto	l4751
  2657  0013CE                     u5070:
  2658  0013CE  C08F  F018         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2659  0013D2  C090  F019         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2660  0013D6  C091  F01A         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2661  0013DA  C092  F01B         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2662  0013DE  0ECD               	movlw	205
  2663  0013E0  6E1C               	movwf	___flge@ff2^0,c
  2664  0013E2  0ECC               	movlw	204
  2665  0013E4  6E1D               	movwf	(___flge@ff2+1)^0,c
  2666  0013E6  0E8C               	movlw	140
  2667  0013E8  6E1E               	movwf	(___flge@ff2+2)^0,c
  2668  0013EA  0E3E               	movlw	62
  2669  0013EC  6E1F               	movwf	(___flge@ff2+3)^0,c
  2670  0013EE  ECE0  F017         	call	___flge	;wreg free
  2671  0013F2  B0D8               	btfsc	status,0,c
  2672  0013F4  EFFE  F009         	goto	u5081
  2673  0013F8  EF00  F00A         	goto	u5080
  2674  0013FC                     u5081:
  2675  0013FC  EF57  F00A         	goto	l4751
  2676  001400                     u5080:
  2677  001400  0E14               	movlw	20
  2678  001402  6E18               	movwf	___flge@ff1^0,c
  2679  001404  0EAE               	movlw	174
  2680  001406  6E19               	movwf	(___flge@ff1+1)^0,c
  2681  001408  0E47               	movlw	71
  2682  00140A  6E1A               	movwf	(___flge@ff1+2)^0,c
  2683  00140C  0E3E               	movlw	62
  2684  00140E  6E1B               	movwf	(___flge@ff1+3)^0,c
  2685  001410  C093  F01C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2686  001414  C094  F01D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2687  001418  C095  F01E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2688  00141C  C096  F01F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2689  001420  ECE0  F017         	call	___flge	;wreg free
  2690  001424  B0D8               	btfsc	status,0,c
  2691  001426  EF17  F00A         	goto	u5091
  2692  00142A  EF19  F00A         	goto	u5090
  2693  00142E                     u5091:
  2694  00142E  EF57  F00A         	goto	l4751
  2695  001432                     u5090:
  2696  001432                     
  2697                           ;colour_cards.c: 81:         reverse(mL, mR);
  2698  001432  C085  F023         	movff	colourcards_readRGBC@mL,reverse@mL
  2699  001436  C086  F024         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  2700  00143A  C087  F025         	movff	colourcards_readRGBC@mR,reverse@mR
  2701  00143E  C088  F026         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  2702  001442  EC5E  F019         	call	_reverse	;wreg free
  2703  001446                     
  2704                           ;colour_cards.c: 82:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  2705  001446  0E72               	movlw	114
  2706  001448  0100               	movlb	0	; () banked
  2707  00144A  6F8A               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2708  00144C  0EA3               	movlw	163
  2709  00144E  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2710  001450  0E9B               	movlw	155
  2711  001452                     u5917:
  2712  001452  2EE8               	decfsz	wreg,f,c
  2713  001454  D7FE               	bra	u5917
  2714  001456  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2715  001458  D7FC               	bra	u5917
  2716  00145A  2F8A               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2717  00145C  D7FA               	bra	u5917
  2718  00145E                     
  2719                           ;colour_cards.c: 83:         stop(mL, mR);
  2720  00145E  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2721  001462  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2722  001466  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2723  00146A  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2724  00146E  ECA5  F019         	call	_stop	;wreg free
  2725                           
  2726                           ;colour_cards.c: 84:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2727  001472  0E09               	movlw	9
  2728  001474  0100               	movlb	0	; () banked
  2729  001476  6F8A               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2730  001478  0E1E               	movlw	30
  2731  00147A  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2732  00147C  0EE4               	movlw	228
  2733  00147E                     u5927:
  2734  00147E  2EE8               	decfsz	wreg,f,c
  2735  001480  D7FE               	bra	u5927
  2736  001482  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2737  001484  D7FC               	bra	u5927
  2738  001486  2F8A               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2739  001488  D7FA               	bra	u5927
  2740  00148A  F000               	nop	
  2741  00148C                     
  2742                           ;colour_cards.c: 85:         turnleft(mL, mR, 90);
  2743  00148C  C085  F07D         	movff	colourcards_readRGBC@mL,turnleft@mL
  2744  001490  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2745  001494  C087  F07F         	movff	colourcards_readRGBC@mR,turnleft@mR
  2746  001498  C088  F080         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2747  00149C  0E00               	movlw	0
  2748  00149E  0100               	movlb	0	; () banked
  2749  0014A0  6F82               	movwf	(turnleft@deg+1)& (0+255),b
  2750  0014A2  0E5A               	movlw	90
  2751  0014A4  6F81               	movwf	turnleft@deg& (0+255),b
  2752  0014A6  EC70  F01A         	call	_turnleft	;wreg free
  2753  0014AA  EFC2  F009         	goto	l4729
  2754  0014AE                     l4751:
  2755  0014AE  C08B  F018         	movff	colourcards_readRGBC@rel,___flge@ff1
  2756  0014B2  C08C  F019         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2757  0014B6  C08D  F01A         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2758  0014BA  C08E  F01B         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2759  0014BE  0ED7               	movlw	215
  2760  0014C0  6E1C               	movwf	___flge@ff2^0,c
  2761  0014C2  0EA3               	movlw	163
  2762  0014C4  6E1D               	movwf	(___flge@ff2+1)^0,c
  2763  0014C6  0EF0               	movlw	240
  2764  0014C8  6E1E               	movwf	(___flge@ff2+2)^0,c
  2765  0014CA  0E3E               	movlw	62
  2766  0014CC  6E1F               	movwf	(___flge@ff2+3)^0,c
  2767  0014CE  ECE0  F017         	call	___flge	;wreg free
  2768  0014D2  B0D8               	btfsc	status,0,c
  2769  0014D4  EF6E  F00A         	goto	u5101
  2770  0014D8  EF70  F00A         	goto	u5100
  2771  0014DC                     u5101:
  2772  0014DC  EFCC  F00A         	goto	l4763
  2773  0014E0                     u5100:
  2774  0014E0  0E3D               	movlw	61
  2775  0014E2  6E18               	movwf	___flge@ff1^0,c
  2776  0014E4  0E0A               	movlw	10
  2777  0014E6  6E19               	movwf	(___flge@ff1+1)^0,c
  2778  0014E8  0E97               	movlw	151
  2779  0014EA  6E1A               	movwf	(___flge@ff1+2)^0,c
  2780  0014EC  0E3E               	movlw	62
  2781  0014EE  6E1B               	movwf	(___flge@ff1+3)^0,c
  2782  0014F0  C08F  F01C         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2783  0014F4  C090  F01D         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2784  0014F8  C091  F01E         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2785  0014FC  C092  F01F         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2786  001500  ECE0  F017         	call	___flge	;wreg free
  2787  001504  B0D8               	btfsc	status,0,c
  2788  001506  EF87  F00A         	goto	u5111
  2789  00150A  EF89  F00A         	goto	u5110
  2790  00150E                     u5111:
  2791  00150E  EFCC  F00A         	goto	l4763
  2792  001512                     u5110:
  2793  001512  0E3D               	movlw	61
  2794  001514  6E18               	movwf	___flge@ff1^0,c
  2795  001516  0E0A               	movlw	10
  2796  001518  6E19               	movwf	(___flge@ff1+1)^0,c
  2797  00151A  0E57               	movlw	87
  2798  00151C  6E1A               	movwf	(___flge@ff1+2)^0,c
  2799  00151E  0E3E               	movlw	62
  2800  001520  6E1B               	movwf	(___flge@ff1+3)^0,c
  2801  001522  C093  F01C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2802  001526  C094  F01D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2803  00152A  C095  F01E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2804  00152E  C096  F01F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2805  001532  ECE0  F017         	call	___flge	;wreg free
  2806  001536  B0D8               	btfsc	status,0,c
  2807  001538  EFA0  F00A         	goto	u5121
  2808  00153C  EFA2  F00A         	goto	u5120
  2809  001540                     u5121:
  2810  001540  EFCC  F00A         	goto	l4763
  2811  001544                     u5120:
  2812  001544                     
  2813                           ;colour_cards.c: 91:         clearance(mL, mR);
  2814  001544  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2815  001548  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2816  00154C  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2817  001550  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2818  001554  EC19  F01A         	call	_clearance	;wreg free
  2819                           
  2820                           ;colour_cards.c: 92:         turnright(mL, mR, 180);
  2821  001558  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2822  00155C  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2823  001560  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2824  001564  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2825  001568  0E00               	movlw	0
  2826  00156A  0100               	movlb	0	; () banked
  2827  00156C  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2828  00156E  0EB4               	movlw	180
  2829  001570  6F81               	movwf	turnright@deg& (0+255),b
  2830  001572  EC48  F01A         	call	_turnright	;wreg free
  2831                           
  2832                           ;colour_cards.c: 93:         stop(mL, mR);
  2833  001576  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2834  00157A  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2835  00157E  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2836  001582  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2837  001586  ECA5  F019         	call	_stop	;wreg free
  2838  00158A                     
  2839                           ;colour_cards.c: 94:         unknowncard_flag = 0;
  2840  00158A  0E00               	movlw	0
  2841  00158C  0100               	movlb	0	; () banked
  2842  00158E  6FB6               	movwf	_unknowncard_flag& (0+255),b	;volatile
  2843  001590                     
  2844                           ; BSR set to: 0
  2845                           ;colour_cards.c: 95:         returnhome_flag = 1;
  2846  001590  0E01               	movlw	1
  2847  001592  6FB5               	movwf	_returnhome_flag& (0+255),b	;volatile
  2848                           
  2849                           ;colour_cards.c: 97:     } else {
  2850  001594  EF54  F00B         	goto	l4789
  2851  001598                     l4763:
  2852                           
  2853                           ;colour_cards.c: 99:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  2854  001598  0E52               	movlw	82
  2855  00159A  0100               	movlb	0	; () banked
  2856  00159C  6F8A               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2857  00159E  0E2B               	movlw	43
  2858  0015A0  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2859  0015A2  0E00               	movlw	0
  2860  0015A4                     u5937:
  2861  0015A4  2EE8               	decfsz	wreg,f,c
  2862  0015A6  D7FE               	bra	u5937
  2863  0015A8  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2864  0015AA  D7FC               	bra	u5937
  2865  0015AC  2F8A               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2866  0015AE  D7FA               	bra	u5937
  2867  0015B0  F000               	nop	
  2868  0015B2                     
  2869                           ;colour_cards.c: 100:         forward(mL, mR);
  2870  0015B2  C085  F023         	movff	colourcards_readRGBC@mL,forward@mL
  2871  0015B6  C086  F024         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  2872  0015BA  C087  F025         	movff	colourcards_readRGBC@mR,forward@mR
  2873  0015BE  C088  F026         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  2874  0015C2  EC17  F019         	call	_forward	;wreg free
  2875  0015C6                     
  2876                           ;colour_cards.c: 101:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2877  0015C6  0ED0               	movlw	208
  2878  0015C8  0100               	movlb	0	; () banked
  2879  0015CA  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2880  0015CC  0EC9               	movlw	201
  2881  0015CE                     u5947:
  2882  0015CE  2EE8               	decfsz	wreg,f,c
  2883  0015D0  D7FE               	bra	u5947
  2884  0015D2  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2885  0015D4  D7FC               	bra	u5947
  2886  0015D6  D000               	nop2	
  2887                           
  2888                           ;colour_cards.c: 102:         stop(mL, mR);
  2889  0015D8  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2890  0015DC  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2891  0015E0  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2892  0015E4  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2893  0015E8  ECA5  F019         	call	_stop	;wreg free
  2894  0015EC                     
  2895                           ;colour_cards.c: 103:         colourclick_readRGBC(abs);
  2896  0015EC  C083  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  2897  0015F0  C084  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  2898  0015F4  ECEA  F019         	call	_colourclick_readRGBC	;wreg free
  2899  0015F8                     
  2900                           ;colour_cards.c: 104:         if ((abs->C < interrupts_lowerbound) || (abs->C > interrup
      +                          ts_upperbound)) {
  2901  0015F8  0100               	movlb	0	; () banked
  2902  0015FA  EE20 F006          	lfsr	2,6
  2903  0015FE  5183               	movf	colourcards_readRGBC@abs& (0+255),w,b
  2904  001600  26D9               	addwf	fsr2l,f,c
  2905  001602  5184               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  2906  001604  22DA               	addwfc	fsr2h,f,c
  2907  001606  5054               	movf	_interrupts_lowerbound^0,w,c	;volatile
  2908  001608  5CDE               	subwf	postinc2,w,c
  2909  00160A  5055               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2910  00160C  58DE               	subwfb	postinc2,w,c
  2911  00160E  A0D8               	btfss	status,0,c
  2912  001610  EF0C  F00B         	goto	u5131
  2913  001614  EF0E  F00B         	goto	u5130
  2914  001618                     u5131:
  2915  001618  EF1F  F00B         	goto	l4775
  2916  00161C                     u5130:
  2917  00161C                     
  2918                           ; BSR set to: 0
  2919  00161C  EE20 F006          	lfsr	2,6
  2920  001620  5183               	movf	colourcards_readRGBC@abs& (0+255),w,b
  2921  001622  26D9               	addwf	fsr2l,f,c
  2922  001624  5184               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  2923  001626  22DA               	addwfc	fsr2h,f,c
  2924  001628  50DE               	movf	postinc2,w,c
  2925  00162A  5C52               	subwf	_interrupts_upperbound^0,w,c	;volatile
  2926  00162C  50DE               	movf	postinc2,w,c
  2927  00162E  5853               	subwfb	(_interrupts_upperbound+1)^0,w,c	;volatile
  2928  001630  B0D8               	btfsc	status,0,c
  2929  001632  EF1D  F00B         	goto	u5141
  2930  001636  EF1F  F00B         	goto	u5140
  2931  00163A                     u5141:
  2932  00163A  EFFF  F007         	goto	l4683
  2933  00163E                     u5140:
  2934  00163E                     l4775:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;colour_cards.c: 105:             if (unknowncard_flag<3) {
  2938  00163E  0E03               	movlw	3
  2939  001640  61B6               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
  2940  001642  EF25  F00B         	goto	u5151
  2941  001646  EF27  F00B         	goto	u5150
  2942  00164A                     u5151:
  2943  00164A  EF2D  F00B         	goto	l224
  2944  00164E                     u5150:
  2945  00164E                     
  2946                           ; BSR set to: 0
  2947                           ;colour_cards.c: 106:                 PIR0bits.INT1IF = 1;
  2948  00164E  010E               	movlb	14	; () banked
  2949  001650  8333               	bsf	51,1,b	;volatile
  2950  001652                     
  2951                           ; BSR set to: 14
  2952                           ;colour_cards.c: 107:                 unknowncard_flag++;
  2953  001652  0100               	movlb	0	; () banked
  2954  001654  2BB6               	incf	_unknowncard_flag& (0+255),f,b	;volatile
  2955                           
  2956                           ;colour_cards.c: 108:             } else {
  2957  001656  EF54  F00B         	goto	l4789
  2958  00165A                     l224:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;colour_cards.c: 109:                 LATHbits.LATH3 = 1;
  2962  00165A  8680               	bsf	128,3,c	;volatile
  2963  00165C                     
  2964                           ; BSR set to: 0
  2965                           ;colour_cards.c: 110:                 turnright(mL, mR, 180);
  2966  00165C  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2967  001660  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2968  001664  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2969  001668  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2970  00166C  0E00               	movlw	0
  2971  00166E  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2972  001670  0EB4               	movlw	180
  2973  001672  6F81               	movwf	turnright@deg& (0+255),b
  2974  001674  EC48  F01A         	call	_turnright	;wreg free
  2975                           
  2976                           ;colour_cards.c: 111:                 stop(mL, mR);
  2977  001678  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2978  00167C  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2979  001680  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2980  001684  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2981  001688  ECA5  F019         	call	_stop	;wreg free
  2982  00168C                     
  2983                           ;colour_cards.c: 112:                 returnhome_flag = !returnhome_flag;
  2984  00168C  0100               	movlb	0	; () banked
  2985  00168E  51B5               	movf	_returnhome_flag& (0+255),w,b	;volatile
  2986  001690  B4D8               	btfsc	status,2,c
  2987  001692  EF4D  F00B         	goto	u5161
  2988  001696  EF50  F00B         	goto	u5160
  2989  00169A                     u5161:
  2990  00169A  0E01               	movlw	1
  2991  00169C  EF51  F00B         	goto	u5170
  2992  0016A0                     u5160:
  2993  0016A0  0E00               	movlw	0
  2994  0016A2                     u5170:
  2995  0016A2  6FB5               	movwf	_returnhome_flag& (0+255),b	;volatile
  2996  0016A4  EFFF  F007         	goto	l4683
  2997  0016A8                     l4789:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;colour_cards.c: 120:     PIE0bits.INT1IE = 1;
  3001  0016A8  010E               	movlb	14	; () banked
  3002  0016AA  8329               	bsf	41,1,b	;volatile
  3003  0016AC                     
  3004                           ; BSR set to: 14
  3005  0016AC  0012               	return		;funcret
  3006  0016AE                     __end_of_colourcards_readRGBC:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _turnright *****************
  3010 ;; Defined at:
  3011 ;;		line 225 in file "DC_motors.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  mL              2   29[BANK0 ] PTR struct .
  3014 ;;		 -> main@motorL(9), 
  3015 ;;  mR              2   31[BANK0 ] PTR struct .
  3016 ;;		 -> main@motorR(9), 
  3017 ;;  deg             2   33[BANK0 ] unsigned int 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3029 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;Total ram usage:        6 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; Hardware stack levels required when called: 10
  3036 ;; This function calls:
  3037 ;;		_left
  3038 ;;		_right
  3039 ;; This function is called by:
  3040 ;;		_colourcards_readRGBC
  3041 ;;		_DCmotors_calibration
  3042 ;;		_DCmotors_testing
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text11
  3047  003490                     __ptext11:
  3048                           	callstack 0
  3049  003490                     _turnright:
  3050                           	callstack 19
  3051  003490                     
  3052                           ;DC_motors.c: 226:     if (returnhome_flag==0) {right(mL, mR, deg);}
  3053  003490  0100               	movlb	0	; () banked
  3054  003492  51B5               	movf	_returnhome_flag& (0+255),w,b	;volatile
  3055  003494  A4D8               	btfss	status,2,c
  3056  003496  EF4F  F01A         	goto	u4931
  3057  00349A  EF51  F01A         	goto	u4930
  3058  00349E                     u4931:
  3059  00349E  EF61  F01A         	goto	l4659
  3060  0034A2                     u4930:
  3061  0034A2                     
  3062                           ; BSR set to: 0
  3063  0034A2  C07D  F06D         	movff	turnright@mL,right@mL
  3064  0034A6  C07E  F06E         	movff	turnright@mL+1,right@mL+1
  3065  0034AA  C07F  F06F         	movff	turnright@mR,right@mR
  3066  0034AE  C080  F070         	movff	turnright@mR+1,right@mR+1
  3067  0034B2  C081  F071         	movff	turnright@deg,right@deg
  3068  0034B6  C082  F072         	movff	turnright@deg+1,right@deg+1
  3069  0034BA  ECAD  F012         	call	_right	;wreg free
  3070  0034BE  EF6F  F01A         	goto	l632
  3071  0034C2                     l4659:
  3072                           
  3073                           ; BSR set to: 0
  3074  0034C2  C07D  F06D         	movff	turnright@mL,left@mL
  3075  0034C6  C07E  F06E         	movff	turnright@mL+1,left@mL+1
  3076  0034CA  C07F  F06F         	movff	turnright@mR,left@mR
  3077  0034CE  C080  F070         	movff	turnright@mR+1,left@mR+1
  3078  0034D2  C081  F071         	movff	turnright@deg,left@deg
  3079  0034D6  C082  F072         	movff	turnright@deg+1,left@deg+1
  3080  0034DA  ECB0  F013         	call	_left	;wreg free
  3081  0034DE                     l632:
  3082  0034DE  0012               	return		;funcret
  3083  0034E0                     __end_of_turnright:
  3084                           	callstack 0
  3085                           
  3086 ;; *************** function _turnleft *****************
  3087 ;; Defined at:
  3088 ;;		line 216 in file "DC_motors.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  mL              2   29[BANK0 ] PTR struct .
  3091 ;;		 -> main@motorL(9), 
  3092 ;;  mR              2   31[BANK0 ] PTR struct .
  3093 ;;		 -> main@motorR(9), 
  3094 ;;  deg             2   33[BANK0 ] unsigned int 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3106 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3109 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3110 ;;Total ram usage:        6 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; Hardware stack levels required when called: 10
  3113 ;; This function calls:
  3114 ;;		_left
  3115 ;;		_right
  3116 ;; This function is called by:
  3117 ;;		_colourcards_readRGBC
  3118 ;;		_DCmotors_calibration
  3119 ;;		_DCmotors_testing
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text12
  3124  0034E0                     __ptext12:
  3125                           	callstack 0
  3126  0034E0                     _turnleft:
  3127                           	callstack 19
  3128  0034E0                     
  3129                           ;DC_motors.c: 217:     if (returnhome_flag==0) {left(mL, mR, deg);}
  3130  0034E0  0100               	movlb	0	; () banked
  3131  0034E2  51B5               	movf	_returnhome_flag& (0+255),w,b	;volatile
  3132  0034E4  A4D8               	btfss	status,2,c
  3133  0034E6  EF77  F01A         	goto	u4941
  3134  0034EA  EF79  F01A         	goto	u4940
  3135  0034EE                     u4941:
  3136  0034EE  EF89  F01A         	goto	l4665
  3137  0034F2                     u4940:
  3138  0034F2                     
  3139                           ; BSR set to: 0
  3140  0034F2  C07D  F06D         	movff	turnleft@mL,left@mL
  3141  0034F6  C07E  F06E         	movff	turnleft@mL+1,left@mL+1
  3142  0034FA  C07F  F06F         	movff	turnleft@mR,left@mR
  3143  0034FE  C080  F070         	movff	turnleft@mR+1,left@mR+1
  3144  003502  C081  F071         	movff	turnleft@deg,left@deg
  3145  003506  C082  F072         	movff	turnleft@deg+1,left@deg+1
  3146  00350A  ECB0  F013         	call	_left	;wreg free
  3147  00350E  EF97  F01A         	goto	l627
  3148  003512                     l4665:
  3149                           
  3150                           ; BSR set to: 0
  3151  003512  C07D  F06D         	movff	turnleft@mL,right@mL
  3152  003516  C07E  F06E         	movff	turnleft@mL+1,right@mL+1
  3153  00351A  C07F  F06F         	movff	turnleft@mR,right@mR
  3154  00351E  C080  F070         	movff	turnleft@mR+1,right@mR+1
  3155  003522  C081  F071         	movff	turnleft@deg,right@deg
  3156  003526  C082  F072         	movff	turnleft@deg+1,right@deg+1
  3157  00352A  ECAD  F012         	call	_right	;wreg free
  3158  00352E                     l627:
  3159  00352E  0012               	return		;funcret
  3160  003530                     __end_of_turnleft:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function _right *****************
  3164 ;; Defined at:
  3165 ;;		line 185 in file "DC_motors.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  mL              2   13[BANK0 ] PTR struct .
  3168 ;;		 -> main@motorL(9), 
  3169 ;;  mR              2   15[BANK0 ] PTR struct .
  3170 ;;		 -> main@motorR(9), 
  3171 ;;  deg             2   17[BANK0 ] unsigned int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  delay           4   19[BANK0 ] unsigned int 
  3174 ;;  i               2   27[BANK0 ] unsigned int 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3184 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;Total ram usage:       17 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 9
  3191 ;; This function calls:
  3192 ;;		_DCmotors_setPWM
  3193 ;;		___fladd
  3194 ;;		___fldiv
  3195 ;;		___flge
  3196 ;;		___flmul
  3197 ;;		___xxtofl
  3198 ;; This function is called by:
  3199 ;;		_turnleft
  3200 ;;		_turnright
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text13
  3205  00255A                     __ptext13:
  3206                           	callstack 0
  3207  00255A                     _right:
  3208                           	callstack 19
  3209  00255A                     
  3210                           ;DC_motors.c: 187:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  3211  00255A  0E23               	movlw	35
  3212  00255C  6E35               	movwf	___fladd@a^0,c
  3213  00255E  0EDB               	movlw	219
  3214  002560  6E36               	movwf	(___fladd@a+1)^0,c
  3215  002562  0E7B               	movlw	123
  3216  002564  6E37               	movwf	(___fladd@a+2)^0,c
  3217  002566  0E42               	movlw	66
  3218  002568  6E38               	movwf	(___fladd@a+3)^0,c
  3219  00256A  0E6F               	movlw	111
  3220  00256C  6E1C               	movwf	___flmul@a^0,c
  3221  00256E  0EF0               	movlw	240
  3222  002570  6E1D               	movwf	(___flmul@a+1)^0,c
  3223  002572  0E01               	movlw	1
  3224  002574  6E1E               	movwf	(___flmul@a+2)^0,c
  3225  002576  0E40               	movlw	64
  3226  002578  6E1F               	movwf	(___flmul@a+3)^0,c
  3227  00257A  C071  F00A         	movff	right@deg,___xxtofl@val
  3228  00257E  C072  F00B         	movff	right@deg+1,___xxtofl@val+1
  3229  002582  6A0C               	clrf	(___xxtofl@val+2)^0,c
  3230  002584  6A0D               	clrf	(___xxtofl@val+3)^0,c
  3231  002586  0E00               	movlw	0
  3232  002588  EC9D  F015         	call	___xxtofl
  3233  00258C  C00A  F018         	movff	?___xxtofl,___flmul@b
  3234  002590  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  3235  002594  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  3236  002598  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  3237  00259C  ECB7  F00D         	call	___flmul	;wreg free
  3238  0025A0  C018  F031         	movff	?___flmul,___fladd@b
  3239  0025A4  C019  F032         	movff	?___flmul+1,___fladd@b+1
  3240  0025A8  C01A  F033         	movff	?___flmul+2,___fladd@b+2
  3241  0025AC  C01B  F034         	movff	?___flmul+3,___fladd@b+3
  3242  0025B0  EC57  F00B         	call	___fladd	;wreg free
  3243  0025B4  C031  F077         	movff	?___fladd,_right$3221
  3244  0025B8  C032  F078         	movff	?___fladd+1,_right$3221+1
  3245  0025BC  C033  F079         	movff	?___fladd+2,_right$3221+2
  3246  0025C0  C034  F07A         	movff	?___fladd+3,_right$3221+3
  3247                           
  3248                           ;DC_motors.c: 187:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  3249  0025C4  0E00               	movlw	0
  3250  0025C6  6E1C               	movwf	___flmul@a^0,c
  3251  0025C8  0E00               	movlw	0
  3252  0025CA  6E1D               	movwf	(___flmul@a+1)^0,c
  3253  0025CC  0EB4               	movlw	180
  3254  0025CE  6E1E               	movwf	(___flmul@a+2)^0,c
  3255  0025D0  0E43               	movlw	67
  3256  0025D2  6E1F               	movwf	(___flmul@a+3)^0,c
  3257  0025D4  C077  F018         	movff	_right$3221,___flmul@b
  3258  0025D8  C078  F019         	movff	_right$3221+1,___flmul@b+1
  3259  0025DC  C079  F01A         	movff	_right$3221+2,___flmul@b+2
  3260  0025E0  C07A  F01B         	movff	_right$3221+3,___flmul@b+3
  3261  0025E4  ECB7  F00D         	call	___flmul	;wreg free
  3262  0025E8  C018  F041         	movff	?___flmul,___fldiv@b
  3263  0025EC  C019  F042         	movff	?___flmul+1,___fldiv@b+1
  3264  0025F0  C01A  F043         	movff	?___flmul+2,___fldiv@b+2
  3265  0025F4  C01B  F044         	movff	?___flmul+3,___fldiv@b+3
  3266  0025F8  C04E  F00A         	movff	_turnright_calangle,___xxtofl@val	;volatile
  3267  0025FC  C04F  F00B         	movff	_turnright_calangle+1,___xxtofl@val+1	;volatile
  3268  002600  0E00               	movlw	0
  3269  002602  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3270  002604  0EFF               	movlw	-1
  3271  002606  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3272  002608  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3273  00260A  0E01               	movlw	1
  3274  00260C  EC9D  F015         	call	___xxtofl
  3275  002610  C00A  F045         	movff	?___xxtofl,___fldiv@a
  3276  002614  C00B  F046         	movff	?___xxtofl+1,___fldiv@a+1
  3277  002618  C00C  F047         	movff	?___xxtofl+2,___fldiv@a+2
  3278  00261C  C00D  F048         	movff	?___xxtofl+3,___fldiv@a+3
  3279  002620  ECCC  F00F         	call	___fldiv	;wreg free
  3280  002624  C041  F073         	movff	?___fldiv,right@delay
  3281  002628  C042  F074         	movff	?___fldiv+1,right@delay+1
  3282  00262C  C043  F075         	movff	?___fldiv+2,right@delay+2
  3283  002630  C044  F076         	movff	?___fldiv+3,right@delay+3
  3284  002634                     
  3285                           ;DC_motors.c: 190:     mL->direction = 1;
  3286  002634  0100               	movlb	0	; () banked
  3287  002636  EE20 F001          	lfsr	2,1
  3288  00263A  516D               	movf	right@mL& (0+255),w,b
  3289  00263C  26D9               	addwf	fsr2l,f,c
  3290  00263E  516E               	movf	(right@mL+1)& (0+255),w,b
  3291  002640  22DA               	addwfc	fsr2h,f,c
  3292  002642  0E01               	movlw	1
  3293  002644  6EDF               	movwf	indf2,c
  3294  002646                     
  3295                           ; BSR set to: 0
  3296                           ;DC_motors.c: 191:     mR->direction = 0;
  3297  002646  EE20 F001          	lfsr	2,1
  3298  00264A  516F               	movf	right@mR& (0+255),w,b
  3299  00264C  26D9               	addwf	fsr2l,f,c
  3300  00264E  5170               	movf	(right@mR+1)& (0+255),w,b
  3301  002650  22DA               	addwfc	fsr2h,f,c
  3302  002652  0E00               	movlw	0
  3303  002654  6EDF               	movwf	indf2,c
  3304  002656                     
  3305                           ; BSR set to: 0
  3306                           ;DC_motors.c: 194:     LATHbits.LATH0 = 1;
  3307  002656  8080               	bsf	128,0,c	;volatile
  3308                           
  3309                           ;DC_motors.c: 195:     while((mL->power < 70) || (mR->power < 70)){
  3310  002658  EF62  F013         	goto	l4629
  3311  00265C                     l4615:
  3312                           
  3313                           ;DC_motors.c: 197:         if (mL->power < 70) {mL->power += 10;}
  3314  00265C  C06D  FFD9         	movff	right@mL,fsr2l
  3315  002660  C06E  FFDA         	movff	right@mL+1,fsr2h
  3316  002664  0E46               	movlw	70
  3317  002666  60DF               	cpfslt	indf2,c
  3318  002668  EF38  F013         	goto	u4881
  3319  00266C  EF3A  F013         	goto	u4880
  3320  002670                     u4881:
  3321  002670  EF40  F013         	goto	l4619
  3322  002674                     u4880:
  3323  002674  C06D  FFD9         	movff	right@mL,fsr2l
  3324  002678  C06E  FFDA         	movff	right@mL+1,fsr2h
  3325  00267C  0E0A               	movlw	10
  3326  00267E  26DF               	addwf	indf2,f,c
  3327  002680                     l4619:
  3328                           
  3329                           ;DC_motors.c: 198:         if (mR->power < 70) {mR->power += 10;}
  3330  002680  C06F  FFD9         	movff	right@mR,fsr2l
  3331  002684  C070  FFDA         	movff	right@mR+1,fsr2h
  3332  002688  0E46               	movlw	70
  3333  00268A  60DF               	cpfslt	indf2,c
  3334  00268C  EF4A  F013         	goto	u4891
  3335  002690  EF4C  F013         	goto	u4890
  3336  002694                     u4891:
  3337  002694  EF52  F013         	goto	l4623
  3338  002698                     u4890:
  3339  002698  C06F  FFD9         	movff	right@mR,fsr2l
  3340  00269C  C070  FFDA         	movff	right@mR+1,fsr2h
  3341  0026A0  0E0A               	movlw	10
  3342  0026A2  26DF               	addwf	indf2,f,c
  3343  0026A4                     l4623:
  3344                           
  3345                           ;DC_motors.c: 201:         DCmotors_setPWM(mL);
  3346  0026A4  C06D  F018         	movff	right@mL,DCmotors_setPWM@m
  3347  0026A8  C06E  F019         	movff	right@mL+1,DCmotors_setPWM@m+1
  3348  0026AC  ECB3  F014         	call	_DCmotors_setPWM	;wreg free
  3349  0026B0                     
  3350                           ;DC_motors.c: 202:         DCmotors_setPWM(mR);
  3351  0026B0  C06F  F018         	movff	right@mR,DCmotors_setPWM@m
  3352  0026B4  C070  F019         	movff	right@mR+1,DCmotors_setPWM@m+1
  3353  0026B8  ECB3  F014         	call	_DCmotors_setPWM	;wreg free
  3354  0026BC                     
  3355                           ;DC_motors.c: 203:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  3356  0026BC  0EA0               	movlw	160
  3357  0026BE                     u5957:
  3358  0026BE  D000               	nop2	
  3359  0026C0  2EE8               	decfsz	wreg,f,c
  3360  0026C2  D7FD               	bra	u5957
  3361  0026C4                     l4629:
  3362                           
  3363                           ;DC_motors.c: 195:     while((mL->power < 70) || (mR->power < 70)){
  3364  0026C4  C06D  FFD9         	movff	right@mL,fsr2l
  3365  0026C8  C06E  FFDA         	movff	right@mL+1,fsr2h
  3366  0026CC  0E45               	movlw	69
  3367  0026CE  64DF               	cpfsgt	indf2,c
  3368  0026D0  EF6C  F013         	goto	u4901
  3369  0026D4  EF6E  F013         	goto	u4900
  3370  0026D8                     u4901:
  3371  0026D8  EF2E  F013         	goto	l4615
  3372  0026DC                     u4900:
  3373  0026DC  C06F  FFD9         	movff	right@mR,fsr2l
  3374  0026E0  C070  FFDA         	movff	right@mR+1,fsr2h
  3375  0026E4  0E45               	movlw	69
  3376  0026E6  64DF               	cpfsgt	indf2,c
  3377  0026E8  EF78  F013         	goto	u4911
  3378  0026EC  EF7A  F013         	goto	u4910
  3379  0026F0                     u4911:
  3380  0026F0  EF2E  F013         	goto	l4615
  3381  0026F4                     u4910:
  3382  0026F4                     
  3383                           ;DC_motors.c: 206:     unsigned int i;;DC_motors.c: 207:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  3384  0026F4  0E00               	movlw	0
  3385  0026F6  0100               	movlb	0	; () banked
  3386  0026F8  6F7C               	movwf	(right@i+1)& (0+255),b
  3387  0026FA  0E00               	movlw	0
  3388  0026FC  6F7B               	movwf	right@i& (0+255),b
  3389  0026FE  EF8C  F013         	goto	l4639
  3390  002702                     l4635:
  3391  002702  0E15               	movlw	21
  3392  002704  6E4D               	movwf	??_right^0,c
  3393  002706  0EC6               	movlw	198
  3394  002708                     u5967:
  3395  002708  2EE8               	decfsz	wreg,f,c
  3396  00270A  D7FE               	bra	u5967
  3397  00270C  2E4D               	decfsz	??_right^0,f,c
  3398  00270E  D7FC               	bra	u5967
  3399  002710  D000               	nop2	
  3400  002712  0100               	movlb	0	; () banked
  3401  002714  4B7B               	infsnz	right@i& (0+255),f,b
  3402  002716  2B7C               	incf	(right@i+1)& (0+255),f,b
  3403  002718                     l4639:
  3404                           
  3405                           ; BSR set to: 0
  3406  002718  C07B  F00A         	movff	right@i,___xxtofl@val
  3407  00271C  C07C  F00B         	movff	right@i+1,___xxtofl@val+1
  3408  002720  6A0C               	clrf	(___xxtofl@val+2)^0,c
  3409  002722  6A0D               	clrf	(___xxtofl@val+3)^0,c
  3410  002724  0E00               	movlw	0
  3411  002726  EC9D  F015         	call	___xxtofl
  3412  00272A  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3413  00272E  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3414  002732  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3415  002736  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3416  00273A  C073  F01C         	movff	right@delay,___flge@ff2
  3417  00273E  C074  F01D         	movff	right@delay+1,___flge@ff2+1
  3418  002742  C075  F01E         	movff	right@delay+2,___flge@ff2+2
  3419  002746  C076  F01F         	movff	right@delay+3,___flge@ff2+3
  3420  00274A  ECE0  F017         	call	___flge	;wreg free
  3421  00274E  A0D8               	btfss	status,0,c
  3422  002750  EFAC  F013         	goto	u4921
  3423  002754  EFAE  F013         	goto	u4920
  3424  002758                     u4921:
  3425  002758  EF81  F013         	goto	l4635
  3426  00275C                     u4920:
  3427  00275C                     
  3428                           ;DC_motors.c: 209:     LATHbits.LATH0 = 0;
  3429  00275C  9080               	bcf	128,0,c	;volatile
  3430  00275E  0012               	return		;funcret
  3431  002760                     __end_of_right:
  3432                           	callstack 0
  3433                           
  3434 ;; *************** function _left *****************
  3435 ;; Defined at:
  3436 ;;		line 155 in file "DC_motors.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  mL              2   13[BANK0 ] PTR struct .
  3439 ;;		 -> main@motorL(9), 
  3440 ;;  mR              2   15[BANK0 ] PTR struct .
  3441 ;;		 -> main@motorR(9), 
  3442 ;;  deg             2   17[BANK0 ] unsigned int 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  delay           4   19[BANK0 ] unsigned int 
  3445 ;;  i               2   27[BANK0 ] unsigned int 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3455 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3456 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3457 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3459 ;;Total ram usage:       17 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 9
  3462 ;; This function calls:
  3463 ;;		_DCmotors_setPWM
  3464 ;;		___fladd
  3465 ;;		___fldiv
  3466 ;;		___flge
  3467 ;;		___flmul
  3468 ;;		___xxtofl
  3469 ;; This function is called by:
  3470 ;;		_turnleft
  3471 ;;		_turnright
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text14
  3476  002760                     __ptext14:
  3477                           	callstack 0
  3478  002760                     _left:
  3479                           	callstack 19
  3480  002760                     
  3481                           ;DC_motors.c: 157:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  3482  002760  0E4A               	movlw	74
  3483  002762  6E35               	movwf	___fladd@a^0,c
  3484  002764  0E0C               	movlw	12
  3485  002766  6E36               	movwf	(___fladd@a+1)^0,c
  3486  002768  0EFC               	movlw	252
  3487  00276A  6E37               	movwf	(___fladd@a+2)^0,c
  3488  00276C  0E41               	movlw	65
  3489  00276E  6E38               	movwf	(___fladd@a+3)^0,c
  3490  002770  0E7D               	movlw	125
  3491  002772  6E1C               	movwf	___flmul@a^0,c
  3492  002774  0E3F               	movlw	63
  3493  002776  6E1D               	movwf	(___flmul@a+1)^0,c
  3494  002778  0E15               	movlw	21
  3495  00277A  6E1E               	movwf	(___flmul@a+2)^0,c
  3496  00277C  0E40               	movlw	64
  3497  00277E  6E1F               	movwf	(___flmul@a+3)^0,c
  3498  002780  C071  F00A         	movff	left@deg,___xxtofl@val
  3499  002784  C072  F00B         	movff	left@deg+1,___xxtofl@val+1
  3500  002788  6A0C               	clrf	(___xxtofl@val+2)^0,c
  3501  00278A  6A0D               	clrf	(___xxtofl@val+3)^0,c
  3502  00278C  0E00               	movlw	0
  3503  00278E  EC9D  F015         	call	___xxtofl
  3504  002792  C00A  F018         	movff	?___xxtofl,___flmul@b
  3505  002796  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  3506  00279A  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  3507  00279E  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  3508  0027A2  ECB7  F00D         	call	___flmul	;wreg free
  3509  0027A6  C018  F031         	movff	?___flmul,___fladd@b
  3510  0027AA  C019  F032         	movff	?___flmul+1,___fladd@b+1
  3511  0027AE  C01A  F033         	movff	?___flmul+2,___fladd@b+2
  3512  0027B2  C01B  F034         	movff	?___flmul+3,___fladd@b+3
  3513  0027B6  EC57  F00B         	call	___fladd	;wreg free
  3514  0027BA  C031  F077         	movff	?___fladd,_left$3220
  3515  0027BE  C032  F078         	movff	?___fladd+1,_left$3220+1
  3516  0027C2  C033  F079         	movff	?___fladd+2,_left$3220+2
  3517  0027C6  C034  F07A         	movff	?___fladd+3,_left$3220+3
  3518                           
  3519                           ;DC_motors.c: 157:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  3520  0027CA  0E00               	movlw	0
  3521  0027CC  6E1C               	movwf	___flmul@a^0,c
  3522  0027CE  0E00               	movlw	0
  3523  0027D0  6E1D               	movwf	(___flmul@a+1)^0,c
  3524  0027D2  0EB4               	movlw	180
  3525  0027D4  6E1E               	movwf	(___flmul@a+2)^0,c
  3526  0027D6  0E43               	movlw	67
  3527  0027D8  6E1F               	movwf	(___flmul@a+3)^0,c
  3528  0027DA  C077  F018         	movff	_left$3220,___flmul@b
  3529  0027DE  C078  F019         	movff	_left$3220+1,___flmul@b+1
  3530  0027E2  C079  F01A         	movff	_left$3220+2,___flmul@b+2
  3531  0027E6  C07A  F01B         	movff	_left$3220+3,___flmul@b+3
  3532  0027EA  ECB7  F00D         	call	___flmul	;wreg free
  3533  0027EE  C018  F041         	movff	?___flmul,___fldiv@b
  3534  0027F2  C019  F042         	movff	?___flmul+1,___fldiv@b+1
  3535  0027F6  C01A  F043         	movff	?___flmul+2,___fldiv@b+2
  3536  0027FA  C01B  F044         	movff	?___flmul+3,___fldiv@b+3
  3537  0027FE  C050  F00A         	movff	_turnleft_calangle,___xxtofl@val	;volatile
  3538  002802  C051  F00B         	movff	_turnleft_calangle+1,___xxtofl@val+1	;volatile
  3539  002806  0E00               	movlw	0
  3540  002808  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  3541  00280A  0EFF               	movlw	-1
  3542  00280C  6E0C               	movwf	(___xxtofl@val+2)^0,c
  3543  00280E  6E0D               	movwf	(___xxtofl@val+3)^0,c
  3544  002810  0E01               	movlw	1
  3545  002812  EC9D  F015         	call	___xxtofl
  3546  002816  C00A  F045         	movff	?___xxtofl,___fldiv@a
  3547  00281A  C00B  F046         	movff	?___xxtofl+1,___fldiv@a+1
  3548  00281E  C00C  F047         	movff	?___xxtofl+2,___fldiv@a+2
  3549  002822  C00D  F048         	movff	?___xxtofl+3,___fldiv@a+3
  3550  002826  ECCC  F00F         	call	___fldiv	;wreg free
  3551  00282A  C041  F073         	movff	?___fldiv,left@delay
  3552  00282E  C042  F074         	movff	?___fldiv+1,left@delay+1
  3553  002832  C043  F075         	movff	?___fldiv+2,left@delay+2
  3554  002836  C044  F076         	movff	?___fldiv+3,left@delay+3
  3555  00283A                     
  3556                           ;DC_motors.c: 160:     mL->direction = 0;
  3557  00283A  0100               	movlb	0	; () banked
  3558  00283C  EE20 F001          	lfsr	2,1
  3559  002840  516D               	movf	left@mL& (0+255),w,b
  3560  002842  26D9               	addwf	fsr2l,f,c
  3561  002844  516E               	movf	(left@mL+1)& (0+255),w,b
  3562  002846  22DA               	addwfc	fsr2h,f,c
  3563  002848  0E00               	movlw	0
  3564  00284A  6EDF               	movwf	indf2,c
  3565  00284C                     
  3566                           ; BSR set to: 0
  3567                           ;DC_motors.c: 161:     mR->direction = 1;
  3568  00284C  EE20 F001          	lfsr	2,1
  3569  002850  516F               	movf	left@mR& (0+255),w,b
  3570  002852  26D9               	addwf	fsr2l,f,c
  3571  002854  5170               	movf	(left@mR+1)& (0+255),w,b
  3572  002856  22DA               	addwfc	fsr2h,f,c
  3573  002858  0E01               	movlw	1
  3574  00285A  6EDF               	movwf	indf2,c
  3575  00285C                     
  3576                           ; BSR set to: 0
  3577                           ;DC_motors.c: 164:     LATFbits.LATF0 = 1;
  3578  00285C  807E               	bsf	126,0,c	;volatile
  3579                           
  3580                           ;DC_motors.c: 165:     while((mL->power < 70) || (mR->power < 70)){
  3581  00285E  EF65  F014         	goto	l4595
  3582  002862                     l4581:
  3583                           
  3584                           ;DC_motors.c: 167:         if (mL->power < 70) {mL->power += 10;}
  3585  002862  C06D  FFD9         	movff	left@mL,fsr2l
  3586  002866  C06E  FFDA         	movff	left@mL+1,fsr2h
  3587  00286A  0E46               	movlw	70
  3588  00286C  60DF               	cpfslt	indf2,c
  3589  00286E  EF3B  F014         	goto	u4831
  3590  002872  EF3D  F014         	goto	u4830
  3591  002876                     u4831:
  3592  002876  EF43  F014         	goto	l4585
  3593  00287A                     u4830:
  3594  00287A  C06D  FFD9         	movff	left@mL,fsr2l
  3595  00287E  C06E  FFDA         	movff	left@mL+1,fsr2h
  3596  002882  0E0A               	movlw	10
  3597  002884  26DF               	addwf	indf2,f,c
  3598  002886                     l4585:
  3599                           
  3600                           ;DC_motors.c: 168:         if (mR->power < 70) {mR->power += 10;}
  3601  002886  C06F  FFD9         	movff	left@mR,fsr2l
  3602  00288A  C070  FFDA         	movff	left@mR+1,fsr2h
  3603  00288E  0E46               	movlw	70
  3604  002890  60DF               	cpfslt	indf2,c
  3605  002892  EF4D  F014         	goto	u4841
  3606  002896  EF4F  F014         	goto	u4840
  3607  00289A                     u4841:
  3608  00289A  EF55  F014         	goto	l4589
  3609  00289E                     u4840:
  3610  00289E  C06F  FFD9         	movff	left@mR,fsr2l
  3611  0028A2  C070  FFDA         	movff	left@mR+1,fsr2h
  3612  0028A6  0E0A               	movlw	10
  3613  0028A8  26DF               	addwf	indf2,f,c
  3614  0028AA                     l4589:
  3615                           
  3616                           ;DC_motors.c: 171:         DCmotors_setPWM(mL);
  3617  0028AA  C06D  F018         	movff	left@mL,DCmotors_setPWM@m
  3618  0028AE  C06E  F019         	movff	left@mL+1,DCmotors_setPWM@m+1
  3619  0028B2  ECB3  F014         	call	_DCmotors_setPWM	;wreg free
  3620  0028B6                     
  3621                           ;DC_motors.c: 172:         DCmotors_setPWM(mR);
  3622  0028B6  C06F  F018         	movff	left@mR,DCmotors_setPWM@m
  3623  0028BA  C070  F019         	movff	left@mR+1,DCmotors_setPWM@m+1
  3624  0028BE  ECB3  F014         	call	_DCmotors_setPWM	;wreg free
  3625  0028C2                     
  3626                           ;DC_motors.c: 173:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  3627  0028C2  0EA0               	movlw	160
  3628  0028C4                     u5977:
  3629  0028C4  D000               	nop2	
  3630  0028C6  2EE8               	decfsz	wreg,f,c
  3631  0028C8  D7FD               	bra	u5977
  3632  0028CA                     l4595:
  3633                           
  3634                           ;DC_motors.c: 165:     while((mL->power < 70) || (mR->power < 70)){
  3635  0028CA  C06D  FFD9         	movff	left@mL,fsr2l
  3636  0028CE  C06E  FFDA         	movff	left@mL+1,fsr2h
  3637  0028D2  0E45               	movlw	69
  3638  0028D4  64DF               	cpfsgt	indf2,c
  3639  0028D6  EF6F  F014         	goto	u4851
  3640  0028DA  EF71  F014         	goto	u4850
  3641  0028DE                     u4851:
  3642  0028DE  EF31  F014         	goto	l4581
  3643  0028E2                     u4850:
  3644  0028E2  C06F  FFD9         	movff	left@mR,fsr2l
  3645  0028E6  C070  FFDA         	movff	left@mR+1,fsr2h
  3646  0028EA  0E45               	movlw	69
  3647  0028EC  64DF               	cpfsgt	indf2,c
  3648  0028EE  EF7B  F014         	goto	u4861
  3649  0028F2  EF7D  F014         	goto	u4860
  3650  0028F6                     u4861:
  3651  0028F6  EF31  F014         	goto	l4581
  3652  0028FA                     u4860:
  3653  0028FA                     
  3654                           ;DC_motors.c: 176:     unsigned int i;;DC_motors.c: 177:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  3655  0028FA  0E00               	movlw	0
  3656  0028FC  0100               	movlb	0	; () banked
  3657  0028FE  6F7C               	movwf	(left@i+1)& (0+255),b
  3658  002900  0E00               	movlw	0
  3659  002902  6F7B               	movwf	left@i& (0+255),b
  3660  002904  EF8F  F014         	goto	l4605
  3661  002908                     l4601:
  3662  002908  0E15               	movlw	21
  3663  00290A  6E4D               	movwf	??_left^0,c
  3664  00290C  0EC6               	movlw	198
  3665  00290E                     u5987:
  3666  00290E  2EE8               	decfsz	wreg,f,c
  3667  002910  D7FE               	bra	u5987
  3668  002912  2E4D               	decfsz	??_left^0,f,c
  3669  002914  D7FC               	bra	u5987
  3670  002916  D000               	nop2	
  3671  002918  0100               	movlb	0	; () banked
  3672  00291A  4B7B               	infsnz	left@i& (0+255),f,b
  3673  00291C  2B7C               	incf	(left@i+1)& (0+255),f,b
  3674  00291E                     l4605:
  3675                           
  3676                           ; BSR set to: 0
  3677  00291E  C07B  F00A         	movff	left@i,___xxtofl@val
  3678  002922  C07C  F00B         	movff	left@i+1,___xxtofl@val+1
  3679  002926  6A0C               	clrf	(___xxtofl@val+2)^0,c
  3680  002928  6A0D               	clrf	(___xxtofl@val+3)^0,c
  3681  00292A  0E00               	movlw	0
  3682  00292C  EC9D  F015         	call	___xxtofl
  3683  002930  C00A  F018         	movff	?___xxtofl,___flge@ff1
  3684  002934  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  3685  002938  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  3686  00293C  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  3687  002940  C073  F01C         	movff	left@delay,___flge@ff2
  3688  002944  C074  F01D         	movff	left@delay+1,___flge@ff2+1
  3689  002948  C075  F01E         	movff	left@delay+2,___flge@ff2+2
  3690  00294C  C076  F01F         	movff	left@delay+3,___flge@ff2+3
  3691  002950  ECE0  F017         	call	___flge	;wreg free
  3692  002954  A0D8               	btfss	status,0,c
  3693  002956  EFAF  F014         	goto	u4871
  3694  00295A  EFB1  F014         	goto	u4870
  3695  00295E                     u4871:
  3696  00295E  EF84  F014         	goto	l4601
  3697  002962                     u4870:
  3698  002962                     
  3699                           ;DC_motors.c: 178:     LATFbits.LATF0 = 0;
  3700  002962  907E               	bcf	126,0,c	;volatile
  3701  002964  0012               	return		;funcret
  3702  002966                     __end_of_left:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function ___flmul *****************
  3706 ;; Defined at:
  3707 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  b               4   23[COMRAM] void 
  3710 ;;  a               4   27[COMRAM] void 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  prod            4   42[COMRAM] struct .
  3713 ;;  grs             4   36[COMRAM] unsigned long 
  3714 ;;  temp            2   46[COMRAM] struct .
  3715 ;;  bexp            1   41[COMRAM] unsigned char 
  3716 ;;  aexp            1   40[COMRAM] unsigned char 
  3717 ;;  sign            1   35[COMRAM] unsigned char 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  4   23[COMRAM] unsigned char 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, prodl, prodh
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3727 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3730 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3731 ;;Total ram usage:       25 bytes
  3732 ;; Hardware stack levels used: 1
  3733 ;; Hardware stack levels required when called: 7
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_left
  3738 ;;		_right
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text15
  3743  001B6E                     __ptext15:
  3744                           	callstack 0
  3745  001B6E                     ___flmul:
  3746                           	callstack 20
  3747  001B6E  501B               	movf	(___flmul@b+3)^0,w,c
  3748  001B70  0B80               	andlw	128
  3749  001B72  6E24               	movwf	___flmul@sign^0,c
  3750  001B74  501B               	movf	(___flmul@b+3)^0,w,c
  3751  001B76  241B               	addwf	(___flmul@b+3)^0,w,c
  3752  001B78  6E2A               	movwf	___flmul@bexp^0,c
  3753  001B7A  AE1A               	btfss	(___flmul@b+2)^0,7,c
  3754  001B7C  EFC2  F00D         	goto	u3291
  3755  001B80  EFC4  F00D         	goto	u3290
  3756  001B84                     u3291:
  3757  001B84  EFC5  F00D         	goto	l3527
  3758  001B88                     u3290:
  3759  001B88  802A               	bsf	___flmul@bexp^0,0,c
  3760  001B8A                     l3527:
  3761  001B8A  502A               	movf	___flmul@bexp^0,w,c
  3762  001B8C  B4D8               	btfsc	status,2,c
  3763  001B8E  EFCB  F00D         	goto	u3301
  3764  001B92  EFCD  F00D         	goto	u3300
  3765  001B96                     u3301:
  3766  001B96  EFE0  F00D         	goto	l3535
  3767  001B9A                     u3300:
  3768  001B9A  282A               	incf	___flmul@bexp^0,w,c
  3769  001B9C  A4D8               	btfss	status,2,c
  3770  001B9E  EFD3  F00D         	goto	u3311
  3771  001BA2  EFD5  F00D         	goto	u3310
  3772  001BA6                     u3311:
  3773  001BA6  EFDD  F00D         	goto	l3533
  3774  001BAA                     u3310:
  3775  001BAA  0E00               	movlw	0
  3776  001BAC  6E18               	movwf	___flmul@b^0,c
  3777  001BAE  0E00               	movlw	0
  3778  001BB0  6E19               	movwf	(___flmul@b+1)^0,c
  3779  001BB2  0E00               	movlw	0
  3780  001BB4  6E1A               	movwf	(___flmul@b+2)^0,c
  3781  001BB6  0E00               	movlw	0
  3782  001BB8  6E1B               	movwf	(___flmul@b+3)^0,c
  3783  001BBA                     l3533:
  3784  001BBA  8E1A               	bsf	(___flmul@b+2)^0,7,c
  3785  001BBC  EFE8  F00D         	goto	l3537
  3786  001BC0                     l3535:
  3787  001BC0  0E00               	movlw	0
  3788  001BC2  6E18               	movwf	___flmul@b^0,c
  3789  001BC4  0E00               	movlw	0
  3790  001BC6  6E19               	movwf	(___flmul@b+1)^0,c
  3791  001BC8  0E00               	movlw	0
  3792  001BCA  6E1A               	movwf	(___flmul@b+2)^0,c
  3793  001BCC  0E00               	movlw	0
  3794  001BCE  6E1B               	movwf	(___flmul@b+3)^0,c
  3795  001BD0                     l3537:
  3796  001BD0  501F               	movf	(___flmul@a+3)^0,w,c
  3797  001BD2  0B80               	andlw	128
  3798  001BD4  1A24               	xorwf	___flmul@sign^0,f,c
  3799  001BD6  501F               	movf	(___flmul@a+3)^0,w,c
  3800  001BD8  241F               	addwf	(___flmul@a+3)^0,w,c
  3801  001BDA  6E29               	movwf	___flmul@aexp^0,c
  3802  001BDC  AE1E               	btfss	(___flmul@a+2)^0,7,c
  3803  001BDE  EFF3  F00D         	goto	u3321
  3804  001BE2  EFF5  F00D         	goto	u3320
  3805  001BE6                     u3321:
  3806  001BE6  EFF6  F00D         	goto	l3545
  3807  001BEA                     u3320:
  3808  001BEA  8029               	bsf	___flmul@aexp^0,0,c
  3809  001BEC                     l3545:
  3810  001BEC  5029               	movf	___flmul@aexp^0,w,c
  3811  001BEE  B4D8               	btfsc	status,2,c
  3812  001BF0  EFFC  F00D         	goto	u3331
  3813  001BF4  EFFE  F00D         	goto	u3330
  3814  001BF8                     u3331:
  3815  001BF8  EF11  F00E         	goto	l3553
  3816  001BFC                     u3330:
  3817  001BFC  2829               	incf	___flmul@aexp^0,w,c
  3818  001BFE  A4D8               	btfss	status,2,c
  3819  001C00  EF04  F00E         	goto	u3341
  3820  001C04  EF06  F00E         	goto	u3340
  3821  001C08                     u3341:
  3822  001C08  EF0E  F00E         	goto	l3551
  3823  001C0C                     u3340:
  3824  001C0C  0E00               	movlw	0
  3825  001C0E  6E1C               	movwf	___flmul@a^0,c
  3826  001C10  0E00               	movlw	0
  3827  001C12  6E1D               	movwf	(___flmul@a+1)^0,c
  3828  001C14  0E00               	movlw	0
  3829  001C16  6E1E               	movwf	(___flmul@a+2)^0,c
  3830  001C18  0E00               	movlw	0
  3831  001C1A  6E1F               	movwf	(___flmul@a+3)^0,c
  3832  001C1C                     l3551:
  3833  001C1C  8E1E               	bsf	(___flmul@a+2)^0,7,c
  3834  001C1E  EF19  F00E         	goto	l1361
  3835  001C22                     l3553:
  3836  001C22  0E00               	movlw	0
  3837  001C24  6E1C               	movwf	___flmul@a^0,c
  3838  001C26  0E00               	movlw	0
  3839  001C28  6E1D               	movwf	(___flmul@a+1)^0,c
  3840  001C2A  0E00               	movlw	0
  3841  001C2C  6E1E               	movwf	(___flmul@a+2)^0,c
  3842  001C2E  0E00               	movlw	0
  3843  001C30  6E1F               	movwf	(___flmul@a+3)^0,c
  3844  001C32                     l1361:
  3845  001C32  5029               	movf	___flmul@aexp^0,w,c
  3846  001C34  B4D8               	btfsc	status,2,c
  3847  001C36  EF1F  F00E         	goto	u3351
  3848  001C3A  EF21  F00E         	goto	u3350
  3849  001C3E                     u3351:
  3850  001C3E  EF29  F00E         	goto	l3557
  3851  001C42                     u3350:
  3852  001C42  502A               	movf	___flmul@bexp^0,w,c
  3853  001C44  A4D8               	btfss	status,2,c
  3854  001C46  EF27  F00E         	goto	u3361
  3855  001C4A  EF29  F00E         	goto	u3360
  3856  001C4E                     u3361:
  3857  001C4E  EF33  F00E         	goto	l3561
  3858  001C52                     u3360:
  3859  001C52                     l3557:
  3860  001C52  0E00               	movlw	0
  3861  001C54  6E18               	movwf	?___flmul^0,c
  3862  001C56  0E00               	movlw	0
  3863  001C58  6E19               	movwf	(?___flmul+1)^0,c
  3864  001C5A  0E00               	movlw	0
  3865  001C5C  6E1A               	movwf	(?___flmul+2)^0,c
  3866  001C5E  0E00               	movlw	0
  3867  001C60  6E1B               	movwf	(?___flmul+3)^0,c
  3868  001C62  EFCB  F00F         	goto	l1365
  3869  001C66                     l3561:
  3870  001C66  501E               	movf	(___flmul@a+2)^0,w,c
  3871  001C68  0218               	mulwf	___flmul@b^0,c
  3872  001C6A  CFF3 F02F          	movff	prodl,___flmul@temp
  3873  001C6E  CFF4 F030          	movff	prodh,___flmul@temp+1
  3874  001C72  502F               	movf	___flmul@temp^0,w,c
  3875  001C74  6E25               	movwf	___flmul@grs^0,c
  3876  001C76  6A26               	clrf	(___flmul@grs+1)^0,c
  3877  001C78  6A27               	clrf	(___flmul@grs+2)^0,c
  3878  001C7A  6A28               	clrf	(___flmul@grs+3)^0,c
  3879  001C7C  5030               	movf	(___flmul@temp+1)^0,w,c
  3880  001C7E  6E2B               	movwf	___flmul@prod^0,c
  3881  001C80  6A2C               	clrf	(___flmul@prod+1)^0,c
  3882  001C82  6A2D               	clrf	(___flmul@prod+2)^0,c
  3883  001C84  6A2E               	clrf	(___flmul@prod+3)^0,c
  3884  001C86  501D               	movf	(___flmul@a+1)^0,w,c
  3885  001C88  0219               	mulwf	(___flmul@b+1)^0,c
  3886  001C8A  CFF3 F02F          	movff	prodl,___flmul@temp
  3887  001C8E  CFF4 F030          	movff	prodh,___flmul@temp+1
  3888  001C92  502F               	movf	___flmul@temp^0,w,c
  3889  001C94  2625               	addwf	___flmul@grs^0,f,c
  3890  001C96  0E00               	movlw	0
  3891  001C98  2226               	addwfc	(___flmul@grs+1)^0,f,c
  3892  001C9A  2227               	addwfc	(___flmul@grs+2)^0,f,c
  3893  001C9C  2228               	addwfc	(___flmul@grs+3)^0,f,c
  3894  001C9E  5030               	movf	(___flmul@temp+1)^0,w,c
  3895  001CA0  262B               	addwf	___flmul@prod^0,f,c
  3896  001CA2  0E00               	movlw	0
  3897  001CA4  222C               	addwfc	(___flmul@prod+1)^0,f,c
  3898  001CA6  222D               	addwfc	(___flmul@prod+2)^0,f,c
  3899  001CA8  222E               	addwfc	(___flmul@prod+3)^0,f,c
  3900  001CAA  501C               	movf	___flmul@a^0,w,c
  3901  001CAC  021A               	mulwf	(___flmul@b+2)^0,c
  3902  001CAE  CFF3 F02F          	movff	prodl,___flmul@temp
  3903  001CB2  CFF4 F030          	movff	prodh,___flmul@temp+1
  3904  001CB6  502F               	movf	___flmul@temp^0,w,c
  3905  001CB8  2625               	addwf	___flmul@grs^0,f,c
  3906  001CBA  0E00               	movlw	0
  3907  001CBC  2226               	addwfc	(___flmul@grs+1)^0,f,c
  3908  001CBE  2227               	addwfc	(___flmul@grs+2)^0,f,c
  3909  001CC0  2228               	addwfc	(___flmul@grs+3)^0,f,c
  3910  001CC2  5030               	movf	(___flmul@temp+1)^0,w,c
  3911  001CC4  262B               	addwf	___flmul@prod^0,f,c
  3912  001CC6  0E00               	movlw	0
  3913  001CC8  222C               	addwfc	(___flmul@prod+1)^0,f,c
  3914  001CCA  222D               	addwfc	(___flmul@prod+2)^0,f,c
  3915  001CCC  222E               	addwfc	(___flmul@prod+3)^0,f,c
  3916  001CCE  C027  F028         	movff	___flmul@grs+2,___flmul@grs+3
  3917  001CD2  C026  F027         	movff	___flmul@grs+1,___flmul@grs+2
  3918  001CD6  C025  F026         	movff	___flmul@grs,___flmul@grs+1
  3919  001CDA  6A25               	clrf	___flmul@grs^0,c
  3920  001CDC  501C               	movf	___flmul@a^0,w,c
  3921  001CDE  0219               	mulwf	(___flmul@b+1)^0,c
  3922  001CE0  CFF3 F02F          	movff	prodl,___flmul@temp
  3923  001CE4  CFF4 F030          	movff	prodh,___flmul@temp+1
  3924  001CE8  502F               	movf	___flmul@temp^0,w,c
  3925  001CEA  2625               	addwf	___flmul@grs^0,f,c
  3926  001CEC  5030               	movf	(___flmul@temp+1)^0,w,c
  3927  001CEE  2226               	addwfc	(___flmul@grs+1)^0,f,c
  3928  001CF0  0E00               	movlw	0
  3929  001CF2  2227               	addwfc	(___flmul@grs+2)^0,f,c
  3930  001CF4  0E00               	movlw	0
  3931  001CF6  2228               	addwfc	(___flmul@grs+3)^0,f,c
  3932  001CF8  501D               	movf	(___flmul@a+1)^0,w,c
  3933  001CFA  0218               	mulwf	___flmul@b^0,c
  3934  001CFC  CFF3 F02F          	movff	prodl,___flmul@temp
  3935  001D00  CFF4 F030          	movff	prodh,___flmul@temp+1
  3936  001D04  502F               	movf	___flmul@temp^0,w,c
  3937  001D06  2625               	addwf	___flmul@grs^0,f,c
  3938  001D08  5030               	movf	(___flmul@temp+1)^0,w,c
  3939  001D0A  2226               	addwfc	(___flmul@grs+1)^0,f,c
  3940  001D0C  0E00               	movlw	0
  3941  001D0E  2227               	addwfc	(___flmul@grs+2)^0,f,c
  3942  001D10  0E00               	movlw	0
  3943  001D12  2228               	addwfc	(___flmul@grs+3)^0,f,c
  3944  001D14  C027  F028         	movff	___flmul@grs+2,___flmul@grs+3
  3945  001D18  C026  F027         	movff	___flmul@grs+1,___flmul@grs+2
  3946  001D1C  C025  F026         	movff	___flmul@grs,___flmul@grs+1
  3947  001D20  6A25               	clrf	___flmul@grs^0,c
  3948  001D22  501C               	movf	___flmul@a^0,w,c
  3949  001D24  0218               	mulwf	___flmul@b^0,c
  3950  001D26  CFF3 F02F          	movff	prodl,___flmul@temp
  3951  001D2A  CFF4 F030          	movff	prodh,___flmul@temp+1
  3952  001D2E  502F               	movf	___flmul@temp^0,w,c
  3953  001D30  2625               	addwf	___flmul@grs^0,f,c
  3954  001D32  5030               	movf	(___flmul@temp+1)^0,w,c
  3955  001D34  2226               	addwfc	(___flmul@grs+1)^0,f,c
  3956  001D36  0E00               	movlw	0
  3957  001D38  2227               	addwfc	(___flmul@grs+2)^0,f,c
  3958  001D3A  0E00               	movlw	0
  3959  001D3C  2228               	addwfc	(___flmul@grs+3)^0,f,c
  3960  001D3E  501E               	movf	(___flmul@a+2)^0,w,c
  3961  001D40  0219               	mulwf	(___flmul@b+1)^0,c
  3962  001D42  CFF3 F02F          	movff	prodl,___flmul@temp
  3963  001D46  CFF4 F030          	movff	prodh,___flmul@temp+1
  3964  001D4A  502F               	movf	___flmul@temp^0,w,c
  3965  001D4C  262B               	addwf	___flmul@prod^0,f,c
  3966  001D4E  5030               	movf	(___flmul@temp+1)^0,w,c
  3967  001D50  222C               	addwfc	(___flmul@prod+1)^0,f,c
  3968  001D52  0E00               	movlw	0
  3969  001D54  222D               	addwfc	(___flmul@prod+2)^0,f,c
  3970  001D56  0E00               	movlw	0
  3971  001D58  222E               	addwfc	(___flmul@prod+3)^0,f,c
  3972  001D5A  501D               	movf	(___flmul@a+1)^0,w,c
  3973  001D5C  021A               	mulwf	(___flmul@b+2)^0,c
  3974  001D5E  CFF3 F02F          	movff	prodl,___flmul@temp
  3975  001D62  CFF4 F030          	movff	prodh,___flmul@temp+1
  3976  001D66  502F               	movf	___flmul@temp^0,w,c
  3977  001D68  262B               	addwf	___flmul@prod^0,f,c
  3978  001D6A  5030               	movf	(___flmul@temp+1)^0,w,c
  3979  001D6C  222C               	addwfc	(___flmul@prod+1)^0,f,c
  3980  001D6E  0E00               	movlw	0
  3981  001D70  222D               	addwfc	(___flmul@prod+2)^0,f,c
  3982  001D72  0E00               	movlw	0
  3983  001D74  222E               	addwfc	(___flmul@prod+3)^0,f,c
  3984  001D76  501E               	movf	(___flmul@a+2)^0,w,c
  3985  001D78  021A               	mulwf	(___flmul@b+2)^0,c
  3986  001D7A  CFF3 F02F          	movff	prodl,___flmul@temp
  3987  001D7E  CFF4 F030          	movff	prodh,___flmul@temp+1
  3988  001D82  502F               	movf	___flmul@temp^0,w,c
  3989  001D84  6E20               	movwf	??___flmul^0,c
  3990  001D86  5030               	movf	(___flmul@temp+1)^0,w,c
  3991  001D88  6E21               	movwf	(??___flmul+1)^0,c
  3992  001D8A  6A22               	clrf	(??___flmul+2)^0,c
  3993  001D8C  6A23               	clrf	(??___flmul+3)^0,c
  3994  001D8E  C022  F023         	movff	??___flmul+2,??___flmul+3
  3995  001D92  C021  F022         	movff	??___flmul+1,??___flmul+2
  3996  001D96  C020  F021         	movff	??___flmul,??___flmul+1
  3997  001D9A  6A20               	clrf	??___flmul^0,c
  3998  001D9C  5020               	movf	??___flmul^0,w,c
  3999  001D9E  262B               	addwf	___flmul@prod^0,f,c
  4000  001DA0  5021               	movf	(??___flmul+1)^0,w,c
  4001  001DA2  222C               	addwfc	(___flmul@prod+1)^0,f,c
  4002  001DA4  5022               	movf	(??___flmul+2)^0,w,c
  4003  001DA6  222D               	addwfc	(___flmul@prod+2)^0,f,c
  4004  001DA8  5023               	movf	(??___flmul+3)^0,w,c
  4005  001DAA  222E               	addwfc	(___flmul@prod+3)^0,f,c
  4006  001DAC  C025  F020         	movff	___flmul@grs,??___flmul
  4007  001DB0  C026  F021         	movff	___flmul@grs+1,??___flmul+1
  4008  001DB4  C027  F022         	movff	___flmul@grs+2,??___flmul+2
  4009  001DB8  C028  F023         	movff	___flmul@grs+3,??___flmul+3
  4010  001DBC  0E19               	movlw	25
  4011  001DBE  EFE6  F00E         	goto	u3370
  4012  001DC2                     u3375:
  4013  001DC2  90D8               	bcf	status,0,c
  4014  001DC4  3223               	rrcf	(??___flmul+3)^0,f,c
  4015  001DC6  3222               	rrcf	(??___flmul+2)^0,f,c
  4016  001DC8  3221               	rrcf	(??___flmul+1)^0,f,c
  4017  001DCA  3220               	rrcf	??___flmul^0,f,c
  4018  001DCC                     u3370:
  4019  001DCC  2EE8               	decfsz	wreg,f,c
  4020  001DCE  EFE1  F00E         	goto	u3375
  4021  001DD2  5020               	movf	??___flmul^0,w,c
  4022  001DD4  262B               	addwf	___flmul@prod^0,f,c
  4023  001DD6  5021               	movf	(??___flmul+1)^0,w,c
  4024  001DD8  222C               	addwfc	(___flmul@prod+1)^0,f,c
  4025  001DDA  5022               	movf	(??___flmul+2)^0,w,c
  4026  001DDC  222D               	addwfc	(___flmul@prod+2)^0,f,c
  4027  001DDE  5023               	movf	(??___flmul+3)^0,w,c
  4028  001DE0  222E               	addwfc	(___flmul@prod+3)^0,f,c
  4029  001DE2  C027  F028         	movff	___flmul@grs+2,___flmul@grs+3
  4030  001DE6  C026  F027         	movff	___flmul@grs+1,___flmul@grs+2
  4031  001DEA  C025  F026         	movff	___flmul@grs,___flmul@grs+1
  4032  001DEE  6A25               	clrf	___flmul@grs^0,c
  4033  001DF0  5029               	movf	___flmul@aexp^0,w,c
  4034  001DF2  C02A  F020         	movff	___flmul@bexp,??___flmul
  4035  001DF6  6A21               	clrf	(??___flmul+1)^0,c
  4036  001DF8  2620               	addwf	??___flmul^0,f,c
  4037  001DFA  0E00               	movlw	0
  4038  001DFC  2221               	addwfc	(??___flmul+1)^0,f,c
  4039  001DFE  0E82               	movlw	130
  4040  001E00  2420               	addwf	??___flmul^0,w,c
  4041  001E02  6E2F               	movwf	___flmul@temp^0,c
  4042  001E04  0EFF               	movlw	255
  4043  001E06  2021               	addwfc	(??___flmul+1)^0,w,c
  4044  001E08  6E30               	movwf	(___flmul@temp+1)^0,c
  4045  001E0A  EF1C  F00F         	goto	l3609
  4046  001E0E                     l3603:
  4047  001E0E  90D8               	bcf	status,0,c
  4048  001E10  362B               	rlcf	___flmul@prod^0,f,c
  4049  001E12  362C               	rlcf	(___flmul@prod+1)^0,f,c
  4050  001E14  362D               	rlcf	(___flmul@prod+2)^0,f,c
  4051  001E16  362E               	rlcf	(___flmul@prod+3)^0,f,c
  4052  001E18  AE28               	btfss	(___flmul@grs+3)^0,7,c
  4053  001E1A  EF11  F00F         	goto	u3381
  4054  001E1E  EF13  F00F         	goto	u3380
  4055  001E22                     u3381:
  4056  001E22  EF14  F00F         	goto	l1368
  4057  001E26                     u3380:
  4058  001E26  802B               	bsf	___flmul@prod^0,0,c
  4059  001E28                     l1368:
  4060  001E28  90D8               	bcf	status,0,c
  4061  001E2A  3625               	rlcf	___flmul@grs^0,f,c
  4062  001E2C  3626               	rlcf	(___flmul@grs+1)^0,f,c
  4063  001E2E  3627               	rlcf	(___flmul@grs+2)^0,f,c
  4064  001E30  3628               	rlcf	(___flmul@grs+3)^0,f,c
  4065  001E32  062F               	decf	___flmul@temp^0,f,c
  4066  001E34  A0D8               	btfss	status,0,c
  4067  001E36  0630               	decf	(___flmul@temp+1)^0,f,c
  4068  001E38                     l3609:
  4069  001E38  AE2D               	btfss	(___flmul@prod+2)^0,7,c
  4070  001E3A  EF21  F00F         	goto	u3391
  4071  001E3E  EF23  F00F         	goto	u3390
  4072  001E42                     u3391:
  4073  001E42  EF07  F00F         	goto	l3603
  4074  001E46                     u3390:
  4075  001E46  0E00               	movlw	0
  4076  001E48  6E29               	movwf	___flmul@aexp^0,c
  4077  001E4A  AE28               	btfss	(___flmul@grs+3)^0,7,c
  4078  001E4C  EF2A  F00F         	goto	u3401
  4079  001E50  EF2C  F00F         	goto	u3400
  4080  001E54                     u3401:
  4081  001E54  EF50  F00F         	goto	l1370
  4082  001E58                     u3400:
  4083  001E58  0EFF               	movlw	255
  4084  001E5A  1425               	andwf	___flmul@grs^0,w,c
  4085  001E5C  6E20               	movwf	??___flmul^0,c
  4086  001E5E  0EFF               	movlw	255
  4087  001E60  1426               	andwf	(___flmul@grs+1)^0,w,c
  4088  001E62  6E21               	movwf	(??___flmul+1)^0,c
  4089  001E64  0EFF               	movlw	255
  4090  001E66  1427               	andwf	(___flmul@grs+2)^0,w,c
  4091  001E68  6E22               	movwf	(??___flmul+2)^0,c
  4092  001E6A  0E7F               	movlw	127
  4093  001E6C  1428               	andwf	(___flmul@grs+3)^0,w,c
  4094  001E6E  6E23               	movwf	(??___flmul+3)^0,c
  4095  001E70  5020               	movf	??___flmul^0,w,c
  4096  001E72  1021               	iorwf	(??___flmul+1)^0,w,c
  4097  001E74  1022               	iorwf	(??___flmul+2)^0,w,c
  4098  001E76  1023               	iorwf	(??___flmul+3)^0,w,c
  4099  001E78  B4D8               	btfsc	status,2,c
  4100  001E7A  EF41  F00F         	goto	u3411
  4101  001E7E  EF43  F00F         	goto	u3410
  4102  001E82                     u3411:
  4103  001E82  EF47  F00F         	goto	l1371
  4104  001E86                     u3410:
  4105  001E86                     l3617:
  4106  001E86  0E01               	movlw	1
  4107  001E88  6E29               	movwf	___flmul@aexp^0,c
  4108  001E8A  EF50  F00F         	goto	l1370
  4109  001E8E                     l1371:
  4110  001E8E  A02B               	btfss	___flmul@prod^0,0,c
  4111  001E90  EF4C  F00F         	goto	u3421
  4112  001E94  EF4E  F00F         	goto	u3420
  4113  001E98                     u3421:
  4114  001E98  EF50  F00F         	goto	l1370
  4115  001E9C                     u3420:
  4116  001E9C  EF43  F00F         	goto	l3617
  4117  001EA0                     l1370:
  4118  001EA0  5029               	movf	___flmul@aexp^0,w,c
  4119  001EA2  B4D8               	btfsc	status,2,c
  4120  001EA4  EF56  F00F         	goto	u3431
  4121  001EA8  EF58  F00F         	goto	u3430
  4122  001EAC                     u3431:
  4123  001EAC  EF7C  F00F         	goto	l3629
  4124  001EB0                     u3430:
  4125  001EB0  0E01               	movlw	1
  4126  001EB2  262B               	addwf	___flmul@prod^0,f,c
  4127  001EB4  0E00               	movlw	0
  4128  001EB6  222C               	addwfc	(___flmul@prod+1)^0,f,c
  4129  001EB8  222D               	addwfc	(___flmul@prod+2)^0,f,c
  4130  001EBA  222E               	addwfc	(___flmul@prod+3)^0,f,c
  4131  001EBC  A02E               	btfss	(___flmul@prod+3)^0,0,c
  4132  001EBE  EF63  F00F         	goto	u3441
  4133  001EC2  EF65  F00F         	goto	u3440
  4134  001EC6                     u3441:
  4135  001EC6  EF7C  F00F         	goto	l3629
  4136  001ECA                     u3440:
  4137  001ECA  C02B  F020         	movff	___flmul@prod,??___flmul
  4138  001ECE  C02C  F021         	movff	___flmul@prod+1,??___flmul+1
  4139  001ED2  C02D  F022         	movff	___flmul@prod+2,??___flmul+2
  4140  001ED6  C02E  F023         	movff	___flmul@prod+3,??___flmul+3
  4141  001EDA  3423               	rlcf	(??___flmul+3)^0,w,c
  4142  001EDC  3223               	rrcf	(??___flmul+3)^0,f,c
  4143  001EDE  3222               	rrcf	(??___flmul+2)^0,f,c
  4144  001EE0  3221               	rrcf	(??___flmul+1)^0,f,c
  4145  001EE2  3220               	rrcf	??___flmul^0,f,c
  4146  001EE4  C020  F02B         	movff	??___flmul,___flmul@prod
  4147  001EE8  C021  F02C         	movff	??___flmul+1,___flmul@prod+1
  4148  001EEC  C022  F02D         	movff	??___flmul+2,___flmul@prod+2
  4149  001EF0  C023  F02E         	movff	??___flmul+3,___flmul@prod+3
  4150  001EF4  4A2F               	infsnz	___flmul@temp^0,f,c
  4151  001EF6  2A30               	incf	(___flmul@temp+1)^0,f,c
  4152  001EF8                     l3629:
  4153  001EF8  BE30               	btfsc	(___flmul@temp+1)^0,7,c
  4154  001EFA  EF87  F00F         	goto	u3451
  4155  001EFE  5030               	movf	(___flmul@temp+1)^0,w,c
  4156  001F00  E108               	bnz	u3450
  4157  001F02  282F               	incf	___flmul@temp^0,w,c
  4158  001F04  A0D8               	btfss	status,0,c
  4159  001F06  EF87  F00F         	goto	u3451
  4160  001F0A  EF89  F00F         	goto	u3450
  4161  001F0E                     u3451:
  4162  001F0E  EF93  F00F         	goto	l3633
  4163  001F12                     u3450:
  4164  001F12  0E00               	movlw	0
  4165  001F14  6E2B               	movwf	___flmul@prod^0,c
  4166  001F16  0E00               	movlw	0
  4167  001F18  6E2C               	movwf	(___flmul@prod+1)^0,c
  4168  001F1A  0E80               	movlw	128
  4169  001F1C  6E2D               	movwf	(___flmul@prod+2)^0,c
  4170  001F1E  0E7F               	movlw	127
  4171  001F20  6E2E               	movwf	(___flmul@prod+3)^0,c
  4172  001F22  EFC1  F00F         	goto	l3645
  4173  001F26                     l3633:
  4174  001F26  BE30               	btfsc	(___flmul@temp+1)^0,7,c
  4175  001F28  EFA0  F00F         	goto	u3460
  4176  001F2C  5030               	movf	(___flmul@temp+1)^0,w,c
  4177  001F2E  E106               	bnz	u3461
  4178  001F30  042F               	decf	___flmul@temp^0,w,c
  4179  001F32  B0D8               	btfsc	status,0,c
  4180  001F34  EF9E  F00F         	goto	u3461
  4181  001F38  EFA0  F00F         	goto	u3460
  4182  001F3C                     u3461:
  4183  001F3C  EFAC  F00F         	goto	l1378
  4184  001F40                     u3460:
  4185  001F40  0E00               	movlw	0
  4186  001F42  6E2B               	movwf	___flmul@prod^0,c
  4187  001F44  0E00               	movlw	0
  4188  001F46  6E2C               	movwf	(___flmul@prod+1)^0,c
  4189  001F48  0E00               	movlw	0
  4190  001F4A  6E2D               	movwf	(___flmul@prod+2)^0,c
  4191  001F4C  0E00               	movlw	0
  4192  001F4E  6E2E               	movwf	(___flmul@prod+3)^0,c
  4193  001F50  0E00               	movlw	0
  4194  001F52  6E24               	movwf	___flmul@sign^0,c
  4195  001F54  EFC1  F00F         	goto	l3645
  4196  001F58                     l1378:
  4197  001F58  C02F  F02A         	movff	___flmul@temp,___flmul@bexp
  4198  001F5C  0EFF               	movlw	255
  4199  001F5E  162B               	andwf	___flmul@prod^0,f,c
  4200  001F60  0EFF               	movlw	255
  4201  001F62  162C               	andwf	(___flmul@prod+1)^0,f,c
  4202  001F64  0E7F               	movlw	127
  4203  001F66  162D               	andwf	(___flmul@prod+2)^0,f,c
  4204  001F68  0E00               	movlw	0
  4205  001F6A  162E               	andwf	(___flmul@prod+3)^0,f,c
  4206  001F6C  A02A               	btfss	___flmul@bexp^0,0,c
  4207  001F6E  EFBB  F00F         	goto	u3471
  4208  001F72  EFBD  F00F         	goto	u3470
  4209  001F76                     u3471:
  4210  001F76  EFBE  F00F         	goto	l3643
  4211  001F7A                     u3470:
  4212  001F7A  8E2D               	bsf	(___flmul@prod+2)^0,7,c
  4213  001F7C                     l3643:
  4214  001F7C  90D8               	bcf	status,0,c
  4215  001F7E  302A               	rrcf	___flmul@bexp^0,w,c
  4216  001F80  6E2E               	movwf	(___flmul@prod+3)^0,c
  4217  001F82                     l3645:
  4218  001F82  5024               	movf	___flmul@sign^0,w,c
  4219  001F84  122E               	iorwf	(___flmul@prod+3)^0,f,c
  4220  001F86  C02B  F018         	movff	___flmul@prod,?___flmul
  4221  001F8A  C02C  F019         	movff	___flmul@prod+1,?___flmul+1
  4222  001F8E  C02D  F01A         	movff	___flmul@prod+2,?___flmul+2
  4223  001F92  C02E  F01B         	movff	___flmul@prod+3,?___flmul+3
  4224  001F96                     l1365:
  4225  001F96  0012               	return		;funcret
  4226  001F98                     __end_of___flmul:
  4227                           	callstack 0
  4228                           
  4229 ;; *************** function ___flge *****************
  4230 ;; Defined at:
  4231 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  ff1             4   23[COMRAM] unsigned char 
  4234 ;;  ff2             4   27[COMRAM] unsigned char 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;		None               void
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4246 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;Total ram usage:       12 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 7
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_colourcards_readRGBC
  4257 ;;		_left
  4258 ;;		_right
  4259 ;;		_colourcards_testingRGBC
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text16
  4264  002FC0                     __ptext16:
  4265                           	callstack 0
  4266  002FC0                     ___flge:
  4267                           	callstack 20
  4268  002FC0  0E00               	movlw	0
  4269  002FC2  1418               	andwf	___flge@ff1^0,w,c
  4270  002FC4  6E20               	movwf	??___flge^0,c
  4271  002FC6  0E00               	movlw	0
  4272  002FC8  1419               	andwf	(___flge@ff1+1)^0,w,c
  4273  002FCA  6E21               	movwf	(??___flge+1)^0,c
  4274  002FCC  0E80               	movlw	128
  4275  002FCE  141A               	andwf	(___flge@ff1+2)^0,w,c
  4276  002FD0  6E22               	movwf	(??___flge+2)^0,c
  4277  002FD2  0E7F               	movlw	127
  4278  002FD4  141B               	andwf	(___flge@ff1+3)^0,w,c
  4279  002FD6  6E23               	movwf	(??___flge+3)^0,c
  4280  002FD8  5020               	movf	??___flge^0,w,c
  4281  002FDA  1021               	iorwf	(??___flge+1)^0,w,c
  4282  002FDC  1022               	iorwf	(??___flge+2)^0,w,c
  4283  002FDE  1023               	iorwf	(??___flge+3)^0,w,c
  4284  002FE0  A4D8               	btfss	status,2,c
  4285  002FE2  EFF5  F017         	goto	u3481
  4286  002FE6  EFF7  F017         	goto	u3480
  4287  002FEA                     u3481:
  4288  002FEA  EFFF  F017         	goto	l3655
  4289  002FEE                     u3480:
  4290  002FEE  0E00               	movlw	0
  4291  002FF0  6E18               	movwf	___flge@ff1^0,c
  4292  002FF2  0E00               	movlw	0
  4293  002FF4  6E19               	movwf	(___flge@ff1+1)^0,c
  4294  002FF6  0E00               	movlw	0
  4295  002FF8  6E1A               	movwf	(___flge@ff1+2)^0,c
  4296  002FFA  0E00               	movlw	0
  4297  002FFC  6E1B               	movwf	(___flge@ff1+3)^0,c
  4298  002FFE                     l3655:
  4299  002FFE  0E00               	movlw	0
  4300  003000  141C               	andwf	___flge@ff2^0,w,c
  4301  003002  6E20               	movwf	??___flge^0,c
  4302  003004  0E00               	movlw	0
  4303  003006  141D               	andwf	(___flge@ff2+1)^0,w,c
  4304  003008  6E21               	movwf	(??___flge+1)^0,c
  4305  00300A  0E80               	movlw	128
  4306  00300C  141E               	andwf	(___flge@ff2+2)^0,w,c
  4307  00300E  6E22               	movwf	(??___flge+2)^0,c
  4308  003010  0E7F               	movlw	127
  4309  003012  141F               	andwf	(___flge@ff2+3)^0,w,c
  4310  003014  6E23               	movwf	(??___flge+3)^0,c
  4311  003016  5020               	movf	??___flge^0,w,c
  4312  003018  1021               	iorwf	(??___flge+1)^0,w,c
  4313  00301A  1022               	iorwf	(??___flge+2)^0,w,c
  4314  00301C  1023               	iorwf	(??___flge+3)^0,w,c
  4315  00301E  A4D8               	btfss	status,2,c
  4316  003020  EF14  F018         	goto	u3491
  4317  003024  EF16  F018         	goto	u3490
  4318  003028                     u3491:
  4319  003028  EF1E  F018         	goto	l3659
  4320  00302C                     u3490:
  4321  00302C  0E00               	movlw	0
  4322  00302E  6E1C               	movwf	___flge@ff2^0,c
  4323  003030  0E00               	movlw	0
  4324  003032  6E1D               	movwf	(___flge@ff2+1)^0,c
  4325  003034  0E00               	movlw	0
  4326  003036  6E1E               	movwf	(___flge@ff2+2)^0,c
  4327  003038  0E00               	movlw	0
  4328  00303A  6E1F               	movwf	(___flge@ff2+3)^0,c
  4329  00303C                     l3659:
  4330  00303C  AE1B               	btfss	(___flge@ff1+3)^0,7,c
  4331  00303E  EF23  F018         	goto	u3501
  4332  003042  EF25  F018         	goto	u3500
  4333  003046                     u3501:
  4334  003046  EF2E  F018         	goto	l3663
  4335  00304A                     u3500:
  4336  00304A  6C18               	negf	___flge@ff1^0,c
  4337  00304C  1E19               	comf	(___flge@ff1+1)^0,f,c
  4338  00304E  B0D8               	btfsc	status,0,c
  4339  003050  2A19               	incf	(___flge@ff1+1)^0,f,c
  4340  003052  1E1A               	comf	(___flge@ff1+2)^0,f,c
  4341  003054  B0D8               	btfsc	status,0,c
  4342  003056  2A1A               	incf	(___flge@ff1+2)^0,f,c
  4343  003058  0E80               	movlw	128
  4344  00305A  561B               	subfwb	(___flge@ff1+3)^0,f,c
  4345  00305C                     l3663:
  4346  00305C  AE1F               	btfss	(___flge@ff2+3)^0,7,c
  4347  00305E  EF33  F018         	goto	u3511
  4348  003062  EF35  F018         	goto	u3510
  4349  003066                     u3511:
  4350  003066  EF3E  F018         	goto	l1012
  4351  00306A                     u3510:
  4352  00306A  6C1C               	negf	___flge@ff2^0,c
  4353  00306C  1E1D               	comf	(___flge@ff2+1)^0,f,c
  4354  00306E  B0D8               	btfsc	status,0,c
  4355  003070  2A1D               	incf	(___flge@ff2+1)^0,f,c
  4356  003072  1E1E               	comf	(___flge@ff2+2)^0,f,c
  4357  003074  B0D8               	btfsc	status,0,c
  4358  003076  2A1E               	incf	(___flge@ff2+2)^0,f,c
  4359  003078  0E80               	movlw	128
  4360  00307A  561F               	subfwb	(___flge@ff2+3)^0,f,c
  4361  00307C                     l1012:
  4362  00307C  0E00               	movlw	0
  4363  00307E  1A18               	xorwf	___flge@ff1^0,f,c
  4364  003080  0E00               	movlw	0
  4365  003082  1A19               	xorwf	(___flge@ff1+1)^0,f,c
  4366  003084  0E00               	movlw	0
  4367  003086  1A1A               	xorwf	(___flge@ff1+2)^0,f,c
  4368  003088  0E80               	movlw	128
  4369  00308A  1A1B               	xorwf	(___flge@ff1+3)^0,f,c
  4370  00308C  0E00               	movlw	0
  4371  00308E  1A1C               	xorwf	___flge@ff2^0,f,c
  4372  003090  0E00               	movlw	0
  4373  003092  1A1D               	xorwf	(___flge@ff2+1)^0,f,c
  4374  003094  0E00               	movlw	0
  4375  003096  1A1E               	xorwf	(___flge@ff2+2)^0,f,c
  4376  003098  0E80               	movlw	128
  4377  00309A  1A1F               	xorwf	(___flge@ff2+3)^0,f,c
  4378  00309C  501C               	movf	___flge@ff2^0,w,c
  4379  00309E  5C18               	subwf	___flge@ff1^0,w,c
  4380  0030A0  501D               	movf	(___flge@ff2+1)^0,w,c
  4381  0030A2  5819               	subwfb	(___flge@ff1+1)^0,w,c
  4382  0030A4  501E               	movf	(___flge@ff2+2)^0,w,c
  4383  0030A6  581A               	subwfb	(___flge@ff1+2)^0,w,c
  4384  0030A8  501F               	movf	(___flge@ff2+3)^0,w,c
  4385  0030AA  581B               	subwfb	(___flge@ff1+3)^0,w,c
  4386  0030AC  B0D8               	btfsc	status,0,c
  4387  0030AE  EF5B  F018         	goto	u3521
  4388  0030B2  EF5D  F018         	goto	u3520
  4389  0030B6                     u3521:
  4390  0030B6  EF60  F018         	goto	l3669
  4391  0030BA                     u3520:
  4392  0030BA  90D8               	bcf	status,0,c
  4393  0030BC  EF61  F018         	goto	l1017
  4394  0030C0                     l3669:
  4395  0030C0  80D8               	bsf	status,0,c
  4396  0030C2                     l1017:
  4397  0030C2  0012               	return		;funcret
  4398  0030C4                     __end_of___flge:
  4399                           	callstack 0
  4400                           
  4401 ;; *************** function ___fladd *****************
  4402 ;; Defined at:
  4403 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  b               4   48[COMRAM] unsigned char 
  4406 ;;  a               4   52[COMRAM] unsigned char 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  grs             1   63[COMRAM] unsigned char 
  4409 ;;  bexp            1   62[COMRAM] unsigned char 
  4410 ;;  aexp            1   61[COMRAM] unsigned char 
  4411 ;;  signs           1   60[COMRAM] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  4   48[COMRAM] unsigned char 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4421 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4422 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;Total ram usage:       16 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 7
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_left
  4432 ;;		_right
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	text17
  4437  0016AE                     __ptext17:
  4438                           	callstack 0
  4439  0016AE                     ___fladd:
  4440                           	callstack 20
  4441  0016AE  5034               	movf	(___fladd@b+3)^0,w,c
  4442  0016B0  0B80               	andlw	128
  4443  0016B2  6E3D               	movwf	___fladd@signs^0,c
  4444  0016B4  5034               	movf	(___fladd@b+3)^0,w,c
  4445  0016B6  2434               	addwf	(___fladd@b+3)^0,w,c
  4446  0016B8  6E3F               	movwf	___fladd@bexp^0,c
  4447  0016BA  AE33               	btfss	(___fladd@b+2)^0,7,c
  4448  0016BC  EF62  F00B         	goto	u2671
  4449  0016C0  EF64  F00B         	goto	u2670
  4450  0016C4                     u2671:
  4451  0016C4  EF65  F00B         	goto	l3187
  4452  0016C8                     u2670:
  4453  0016C8  803F               	bsf	___fladd@bexp^0,0,c
  4454  0016CA                     l3187:
  4455  0016CA  503F               	movf	___fladd@bexp^0,w,c
  4456  0016CC  B4D8               	btfsc	status,2,c
  4457  0016CE  EF6B  F00B         	goto	u2681
  4458  0016D2  EF6D  F00B         	goto	u2680
  4459  0016D6                     u2681:
  4460  0016D6  EF82  F00B         	goto	l3197
  4461  0016DA                     u2680:
  4462  0016DA  283F               	incf	___fladd@bexp^0,w,c
  4463  0016DC  A4D8               	btfss	status,2,c
  4464  0016DE  EF73  F00B         	goto	u2691
  4465  0016E2  EF75  F00B         	goto	u2690
  4466  0016E6                     u2691:
  4467  0016E6  EF7D  F00B         	goto	l3193
  4468  0016EA                     u2690:
  4469  0016EA  0E00               	movlw	0
  4470  0016EC  6E31               	movwf	___fladd@b^0,c
  4471  0016EE  0E00               	movlw	0
  4472  0016F0  6E32               	movwf	(___fladd@b+1)^0,c
  4473  0016F2  0E00               	movlw	0
  4474  0016F4  6E33               	movwf	(___fladd@b+2)^0,c
  4475  0016F6  0E00               	movlw	0
  4476  0016F8  6E34               	movwf	(___fladd@b+3)^0,c
  4477  0016FA                     l3193:
  4478  0016FA  8E33               	bsf	(___fladd@b+2)^0,7,c
  4479  0016FC  0E00               	movlw	0
  4480  0016FE  6E34               	movwf	(___fladd@b+3)^0,c
  4481  001700  EF8A  F00B         	goto	l3199
  4482  001704                     l3197:
  4483  001704  0E00               	movlw	0
  4484  001706  6E31               	movwf	___fladd@b^0,c
  4485  001708  0E00               	movlw	0
  4486  00170A  6E32               	movwf	(___fladd@b+1)^0,c
  4487  00170C  0E00               	movlw	0
  4488  00170E  6E33               	movwf	(___fladd@b+2)^0,c
  4489  001710  0E00               	movlw	0
  4490  001712  6E34               	movwf	(___fladd@b+3)^0,c
  4491  001714                     l3199:
  4492  001714  5038               	movf	(___fladd@a+3)^0,w,c
  4493  001716  0B80               	andlw	128
  4494  001718  6E3E               	movwf	___fladd@aexp^0,c
  4495  00171A  503D               	movf	___fladd@signs^0,w,c
  4496  00171C  183E               	xorwf	___fladd@aexp^0,w,c
  4497  00171E  B4D8               	btfsc	status,2,c
  4498  001720  EF94  F00B         	goto	u2701
  4499  001724  EF96  F00B         	goto	u2700
  4500  001728                     u2701:
  4501  001728  EF97  F00B         	goto	l3205
  4502  00172C                     u2700:
  4503  00172C  8C3D               	bsf	___fladd@signs^0,6,c
  4504  00172E                     l3205:
  4505  00172E  5038               	movf	(___fladd@a+3)^0,w,c
  4506  001730  2438               	addwf	(___fladd@a+3)^0,w,c
  4507  001732  6E3E               	movwf	___fladd@aexp^0,c
  4508  001734  AE37               	btfss	(___fladd@a+2)^0,7,c
  4509  001736  EF9F  F00B         	goto	u2711
  4510  00173A  EFA1  F00B         	goto	u2710
  4511  00173E                     u2711:
  4512  00173E  EFA2  F00B         	goto	l3211
  4513  001742                     u2710:
  4514  001742  803E               	bsf	___fladd@aexp^0,0,c
  4515  001744                     l3211:
  4516  001744  503E               	movf	___fladd@aexp^0,w,c
  4517  001746  B4D8               	btfsc	status,2,c
  4518  001748  EFA8  F00B         	goto	u2721
  4519  00174C  EFAA  F00B         	goto	u2720
  4520  001750                     u2721:
  4521  001750  EFBF  F00B         	goto	l3221
  4522  001754                     u2720:
  4523  001754  283E               	incf	___fladd@aexp^0,w,c
  4524  001756  A4D8               	btfss	status,2,c
  4525  001758  EFB0  F00B         	goto	u2731
  4526  00175C  EFB2  F00B         	goto	u2730
  4527  001760                     u2731:
  4528  001760  EFBA  F00B         	goto	l3217
  4529  001764                     u2730:
  4530  001764  0E00               	movlw	0
  4531  001766  6E35               	movwf	___fladd@a^0,c
  4532  001768  0E00               	movlw	0
  4533  00176A  6E36               	movwf	(___fladd@a+1)^0,c
  4534  00176C  0E00               	movlw	0
  4535  00176E  6E37               	movwf	(___fladd@a+2)^0,c
  4536  001770  0E00               	movlw	0
  4537  001772  6E38               	movwf	(___fladd@a+3)^0,c
  4538  001774                     l3217:
  4539  001774  8E37               	bsf	(___fladd@a+2)^0,7,c
  4540  001776  0E00               	movlw	0
  4541  001778  6E38               	movwf	(___fladd@a+3)^0,c
  4542  00177A  EFC7  F00B         	goto	l3223
  4543  00177E                     l3221:
  4544  00177E  0E00               	movlw	0
  4545  001780  6E35               	movwf	___fladd@a^0,c
  4546  001782  0E00               	movlw	0
  4547  001784  6E36               	movwf	(___fladd@a+1)^0,c
  4548  001786  0E00               	movlw	0
  4549  001788  6E37               	movwf	(___fladd@a+2)^0,c
  4550  00178A  0E00               	movlw	0
  4551  00178C  6E38               	movwf	(___fladd@a+3)^0,c
  4552  00178E                     l3223:
  4553  00178E  503F               	movf	___fladd@bexp^0,w,c
  4554  001790  5C3E               	subwf	___fladd@aexp^0,w,c
  4555  001792  B0D8               	btfsc	status,0,c
  4556  001794  EFCE  F00B         	goto	u2741
  4557  001798  EFD0  F00B         	goto	u2740
  4558  00179C                     u2741:
  4559  00179C  EFF7  F00B         	goto	l3259
  4560  0017A0                     u2740:
  4561  0017A0  AC3D               	btfss	___fladd@signs^0,6,c
  4562  0017A2  EFD5  F00B         	goto	u2751
  4563  0017A6  EFD7  F00B         	goto	u2750
  4564  0017AA                     u2751:
  4565  0017AA  EFD9  F00B         	goto	l3229
  4566  0017AE                     u2750:
  4567  0017AE  0E80               	movlw	128
  4568  0017B0  1A3D               	xorwf	___fladd@signs^0,f,c
  4569  0017B2                     l3229:
  4570  0017B2  C03F  F040         	movff	___fladd@bexp,___fladd@grs
  4571  0017B6  C03E  F03F         	movff	___fladd@aexp,___fladd@bexp
  4572  0017BA  C040  F03E         	movff	___fladd@grs,___fladd@aexp
  4573  0017BE  C031  F040         	movff	___fladd@b,___fladd@grs
  4574  0017C2  C035  F031         	movff	___fladd@a,___fladd@b
  4575  0017C6  C040  F035         	movff	___fladd@grs,___fladd@a
  4576  0017CA  C032  F040         	movff	___fladd@b+1,___fladd@grs
  4577  0017CE  C036  F032         	movff	___fladd@a+1,___fladd@b+1
  4578  0017D2  C040  F036         	movff	___fladd@grs,___fladd@a+1
  4579  0017D6  C033  F040         	movff	___fladd@b+2,___fladd@grs
  4580  0017DA  C037  F033         	movff	___fladd@a+2,___fladd@b+2
  4581  0017DE  C040  F037         	movff	___fladd@grs,___fladd@a+2
  4582  0017E2  C034  F040         	movff	___fladd@b+3,___fladd@grs
  4583  0017E6  C038  F034         	movff	___fladd@a+3,___fladd@b+3
  4584  0017EA  C040  F038         	movff	___fladd@grs,___fladd@a+3
  4585  0017EE                     l3259:
  4586  0017EE  0E00               	movlw	0
  4587  0017F0  6E40               	movwf	___fladd@grs^0,c
  4588  0017F2  503F               	movf	___fladd@bexp^0,w,c
  4589  0017F4  C03E  F039         	movff	___fladd@aexp,??___fladd
  4590  0017F8  6A3A               	clrf	(??___fladd+1)^0,c
  4591  0017FA  5E39               	subwf	??___fladd^0,f,c
  4592  0017FC  0E00               	movlw	0
  4593  0017FE  5A3A               	subwfb	(??___fladd+1)^0,f,c
  4594  001800  BE3A               	btfsc	(??___fladd+1)^0,7,c
  4595  001802  EF0C  F00C         	goto	u2761
  4596  001806  503A               	movf	(??___fladd+1)^0,w,c
  4597  001808  E109               	bnz	u2760
  4598  00180A  0E1A               	movlw	26
  4599  00180C  5C39               	subwf	??___fladd^0,w,c
  4600  00180E  A0D8               	btfss	status,0,c
  4601  001810  EF0C  F00C         	goto	u2761
  4602  001814  EF0E  F00C         	goto	u2760
  4603  001818                     u2761:
  4604  001818  EF45  F00C         	goto	l1276
  4605  00181C                     u2760:
  4606  00181C  5031               	movf	___fladd@b^0,w,c
  4607  00181E  1032               	iorwf	(___fladd@b+1)^0,w,c
  4608  001820  1033               	iorwf	(___fladd@b+2)^0,w,c
  4609  001822  1034               	iorwf	(___fladd@b+3)^0,w,c
  4610  001824  A4D8               	btfss	status,2,c
  4611  001826  EF17  F00C         	goto	u2771
  4612  00182A  EF1A  F00C         	goto	u2770
  4613  00182E                     u2771:
  4614  00182E  0E01               	movlw	1
  4615  001830  EF1B  F00C         	goto	u2780
  4616  001834                     u2770:
  4617  001834  0E00               	movlw	0
  4618  001836                     u2780:
  4619  001836  6E40               	movwf	___fladd@grs^0,c
  4620  001838  0E00               	movlw	0
  4621  00183A  6E31               	movwf	___fladd@b^0,c
  4622  00183C  0E00               	movlw	0
  4623  00183E  6E32               	movwf	(___fladd@b+1)^0,c
  4624  001840  0E00               	movlw	0
  4625  001842  6E33               	movwf	(___fladd@b+2)^0,c
  4626  001844  0E00               	movlw	0
  4627  001846  6E34               	movwf	(___fladd@b+3)^0,c
  4628  001848  C03E  F03F         	movff	___fladd@aexp,___fladd@bexp
  4629  00184C  EF4E  F00C         	goto	l1275
  4630  001850                     l1277:
  4631  001850  A040               	btfss	___fladd@grs^0,0,c
  4632  001852  EF2D  F00C         	goto	u2791
  4633  001856  EF2F  F00C         	goto	u2790
  4634  00185A                     u2791:
  4635  00185A  EF35  F00C         	goto	l3271
  4636  00185E                     u2790:
  4637  00185E  90D8               	bcf	status,0,c
  4638  001860  3040               	rrcf	___fladd@grs^0,w,c
  4639  001862  0901               	iorlw	1
  4640  001864  6E40               	movwf	___fladd@grs^0,c
  4641  001866  EF37  F00C         	goto	l3273
  4642  00186A                     l3271:
  4643  00186A  90D8               	bcf	status,0,c
  4644  00186C  3240               	rrcf	___fladd@grs^0,f,c
  4645  00186E                     l3273:
  4646  00186E  A031               	btfss	___fladd@b^0,0,c
  4647  001870  EF3C  F00C         	goto	u2801
  4648  001874  EF3E  F00C         	goto	u2800
  4649  001878                     u2801:
  4650  001878  EF3F  F00C         	goto	l3277
  4651  00187C                     u2800:
  4652  00187C  8E40               	bsf	___fladd@grs^0,7,c
  4653  00187E                     l3277:
  4654  00187E  3434               	rlcf	(___fladd@b+3)^0,w,c
  4655  001880  3234               	rrcf	(___fladd@b+3)^0,f,c
  4656  001882  3233               	rrcf	(___fladd@b+2)^0,f,c
  4657  001884  3232               	rrcf	(___fladd@b+1)^0,f,c
  4658  001886  3231               	rrcf	___fladd@b^0,f,c
  4659  001888  2A3F               	incf	___fladd@bexp^0,f,c
  4660  00188A                     l1276:
  4661  00188A  503E               	movf	___fladd@aexp^0,w,c
  4662  00188C  5C3F               	subwf	___fladd@bexp^0,w,c
  4663  00188E  A0D8               	btfss	status,0,c
  4664  001890  EF4C  F00C         	goto	u2811
  4665  001894  EF4E  F00C         	goto	u2810
  4666  001898                     u2811:
  4667  001898  EF28  F00C         	goto	l1277
  4668  00189C                     u2810:
  4669  00189C                     l1275:
  4670  00189C  BC3D               	btfsc	___fladd@signs^0,6,c
  4671  00189E  EF53  F00C         	goto	u2821
  4672  0018A2  EF55  F00C         	goto	u2820
  4673  0018A6                     u2821:
  4674  0018A6  EF95  F00C         	goto	l3305
  4675  0018AA                     u2820:
  4676  0018AA  503F               	movf	___fladd@bexp^0,w,c
  4677  0018AC  A4D8               	btfss	status,2,c
  4678  0018AE  EF5B  F00C         	goto	u2831
  4679  0018B2  EF5D  F00C         	goto	u2830
  4680  0018B6                     u2831:
  4681  0018B6  EF67  F00C         	goto	l3287
  4682  0018BA                     u2830:
  4683  0018BA  0E00               	movlw	0
  4684  0018BC  6E31               	movwf	?___fladd^0,c
  4685  0018BE  0E00               	movlw	0
  4686  0018C0  6E32               	movwf	(?___fladd+1)^0,c
  4687  0018C2  0E00               	movlw	0
  4688  0018C4  6E33               	movwf	(?___fladd+2)^0,c
  4689  0018C6  0E00               	movlw	0
  4690  0018C8  6E34               	movwf	(?___fladd+3)^0,c
  4691  0018CA  EFB6  F00D         	goto	l1284
  4692  0018CE                     l3287:
  4693  0018CE  5035               	movf	___fladd@a^0,w,c
  4694  0018D0  2631               	addwf	___fladd@b^0,f,c
  4695  0018D2  5036               	movf	(___fladd@a+1)^0,w,c
  4696  0018D4  2232               	addwfc	(___fladd@b+1)^0,f,c
  4697  0018D6  5037               	movf	(___fladd@a+2)^0,w,c
  4698  0018D8  2233               	addwfc	(___fladd@b+2)^0,f,c
  4699  0018DA  5038               	movf	(___fladd@a+3)^0,w,c
  4700  0018DC  2234               	addwfc	(___fladd@b+3)^0,f,c
  4701  0018DE  A034               	btfss	(___fladd@b+3)^0,0,c
  4702  0018E0  EF74  F00C         	goto	u2841
  4703  0018E4  EF76  F00C         	goto	u2840
  4704  0018E8                     u2841:
  4705  0018E8  EF22  F00D         	goto	l3341
  4706  0018EC                     u2840:
  4707  0018EC  A040               	btfss	___fladd@grs^0,0,c
  4708  0018EE  EF7B  F00C         	goto	u2851
  4709  0018F2  EF7D  F00C         	goto	u2850
  4710  0018F6                     u2851:
  4711  0018F6  EF83  F00C         	goto	l3295
  4712  0018FA                     u2850:
  4713  0018FA  90D8               	bcf	status,0,c
  4714  0018FC  3040               	rrcf	___fladd@grs^0,w,c
  4715  0018FE  0901               	iorlw	1
  4716  001900  6E40               	movwf	___fladd@grs^0,c
  4717  001902  EF85  F00C         	goto	l3297
  4718  001906                     l3295:
  4719  001906  90D8               	bcf	status,0,c
  4720  001908  3240               	rrcf	___fladd@grs^0,f,c
  4721  00190A                     l3297:
  4722  00190A  A031               	btfss	___fladd@b^0,0,c
  4723  00190C  EF8A  F00C         	goto	u2861
  4724  001910  EF8C  F00C         	goto	u2860
  4725  001914                     u2861:
  4726  001914  EF8D  F00C         	goto	l3301
  4727  001918                     u2860:
  4728  001918  8E40               	bsf	___fladd@grs^0,7,c
  4729  00191A                     l3301:
  4730  00191A  3434               	rlcf	(___fladd@b+3)^0,w,c
  4731  00191C  3234               	rrcf	(___fladd@b+3)^0,f,c
  4732  00191E  3233               	rrcf	(___fladd@b+2)^0,f,c
  4733  001920  3232               	rrcf	(___fladd@b+1)^0,f,c
  4734  001922  3231               	rrcf	___fladd@b^0,f,c
  4735  001924  2A3F               	incf	___fladd@bexp^0,f,c
  4736  001926  EF22  F00D         	goto	l3341
  4737  00192A                     l3305:
  4738  00192A  5035               	movf	___fladd@a^0,w,c
  4739  00192C  5C31               	subwf	___fladd@b^0,w,c
  4740  00192E  5036               	movf	(___fladd@a+1)^0,w,c
  4741  001930  5832               	subwfb	(___fladd@b+1)^0,w,c
  4742  001932  5037               	movf	(___fladd@a+2)^0,w,c
  4743  001934  5833               	subwfb	(___fladd@b+2)^0,w,c
  4744  001936  5034               	movf	(___fladd@b+3)^0,w,c
  4745  001938  0A80               	xorlw	128
  4746  00193A  6E39               	movwf	??___fladd^0,c
  4747  00193C  5038               	movf	(___fladd@a+3)^0,w,c
  4748  00193E  0A80               	xorlw	128
  4749  001940  5839               	subwfb	??___fladd^0,w,c
  4750  001942  B0D8               	btfsc	status,0,c
  4751  001944  EFA6  F00C         	goto	u2871
  4752  001948  EFA8  F00C         	goto	u2870
  4753  00194C                     u2871:
  4754  00194C  EFD3  F00C         	goto	l3315
  4755  001950                     u2870:
  4756  001950  5031               	movf	___fladd@b^0,w,c
  4757  001952  5C35               	subwf	___fladd@a^0,w,c
  4758  001954  6E39               	movwf	??___fladd^0,c
  4759  001956  5032               	movf	(___fladd@b+1)^0,w,c
  4760  001958  5836               	subwfb	(___fladd@a+1)^0,w,c
  4761  00195A  6E3A               	movwf	(??___fladd+1)^0,c
  4762  00195C  5033               	movf	(___fladd@b+2)^0,w,c
  4763  00195E  5837               	subwfb	(___fladd@a+2)^0,w,c
  4764  001960  6E3B               	movwf	(??___fladd+2)^0,c
  4765  001962  5034               	movf	(___fladd@b+3)^0,w,c
  4766  001964  5838               	subwfb	(___fladd@a+3)^0,w,c
  4767  001966  6E3C               	movwf	(??___fladd+3)^0,c
  4768  001968  0EFF               	movlw	255
  4769  00196A  2439               	addwf	??___fladd^0,w,c
  4770  00196C  6E31               	movwf	___fladd@b^0,c
  4771  00196E  0EFF               	movlw	255
  4772  001970  203A               	addwfc	(??___fladd+1)^0,w,c
  4773  001972  6E32               	movwf	(___fladd@b+1)^0,c
  4774  001974  0EFF               	movlw	255
  4775  001976  203B               	addwfc	(??___fladd+2)^0,w,c
  4776  001978  6E33               	movwf	(___fladd@b+2)^0,c
  4777  00197A  0EFF               	movlw	255
  4778  00197C  203C               	addwfc	(??___fladd+3)^0,w,c
  4779  00197E  6E34               	movwf	(___fladd@b+3)^0,c
  4780  001980  0E80               	movlw	128
  4781  001982  1A3D               	xorwf	___fladd@signs^0,f,c
  4782  001984  6C40               	negf	___fladd@grs^0,c
  4783  001986  5040               	movf	___fladd@grs^0,w,c
  4784  001988  A4D8               	btfss	status,2,c
  4785  00198A  EFC9  F00C         	goto	u2881
  4786  00198E  EFCB  F00C         	goto	u2880
  4787  001992                     u2881:
  4788  001992  EFDB  F00C         	goto	l1292
  4789  001996                     u2880:
  4790  001996  0E01               	movlw	1
  4791  001998  2631               	addwf	___fladd@b^0,f,c
  4792  00199A  0E00               	movlw	0
  4793  00199C  2232               	addwfc	(___fladd@b+1)^0,f,c
  4794  00199E  2233               	addwfc	(___fladd@b+2)^0,f,c
  4795  0019A0  2234               	addwfc	(___fladd@b+3)^0,f,c
  4796  0019A2  EFDB  F00C         	goto	l1292
  4797  0019A6                     l3315:
  4798  0019A6  5035               	movf	___fladd@a^0,w,c
  4799  0019A8  5E31               	subwf	___fladd@b^0,f,c
  4800  0019AA  5036               	movf	(___fladd@a+1)^0,w,c
  4801  0019AC  5A32               	subwfb	(___fladd@b+1)^0,f,c
  4802  0019AE  5037               	movf	(___fladd@a+2)^0,w,c
  4803  0019B0  5A33               	subwfb	(___fladd@b+2)^0,f,c
  4804  0019B2  5038               	movf	(___fladd@a+3)^0,w,c
  4805  0019B4  5A34               	subwfb	(___fladd@b+3)^0,f,c
  4806  0019B6                     l1292:
  4807  0019B6  5031               	movf	___fladd@b^0,w,c
  4808  0019B8  1032               	iorwf	(___fladd@b+1)^0,w,c
  4809  0019BA  1033               	iorwf	(___fladd@b+2)^0,w,c
  4810  0019BC  1034               	iorwf	(___fladd@b+3)^0,w,c
  4811  0019BE  A4D8               	btfss	status,2,c
  4812  0019C0  EFE4  F00C         	goto	u2891
  4813  0019C4  EFE6  F00C         	goto	u2890
  4814  0019C8                     u2891:
  4815  0019C8  EF1B  F00D         	goto	l3339
  4816  0019CC                     u2890:
  4817  0019CC  5040               	movf	___fladd@grs^0,w,c
  4818  0019CE  A4D8               	btfss	status,2,c
  4819  0019D0  EFEC  F00C         	goto	u2901
  4820  0019D4  EFEE  F00C         	goto	u2900
  4821  0019D8                     u2901:
  4822  0019D8  EF1B  F00D         	goto	l3339
  4823  0019DC                     u2900:
  4824  0019DC  0E00               	movlw	0
  4825  0019DE  6E31               	movwf	?___fladd^0,c
  4826  0019E0  0E00               	movlw	0
  4827  0019E2  6E32               	movwf	(?___fladd+1)^0,c
  4828  0019E4  0E00               	movlw	0
  4829  0019E6  6E33               	movwf	(?___fladd+2)^0,c
  4830  0019E8  0E00               	movlw	0
  4831  0019EA  6E34               	movwf	(?___fladd+3)^0,c
  4832  0019EC  EFB6  F00D         	goto	l1284
  4833  0019F0                     l3323:
  4834  0019F0  90D8               	bcf	status,0,c
  4835  0019F2  3631               	rlcf	___fladd@b^0,f,c
  4836  0019F4  3632               	rlcf	(___fladd@b+1)^0,f,c
  4837  0019F6  3633               	rlcf	(___fladd@b+2)^0,f,c
  4838  0019F8  3634               	rlcf	(___fladd@b+3)^0,f,c
  4839  0019FA  AE40               	btfss	___fladd@grs^0,7,c
  4840  0019FC  EF02  F00D         	goto	u2911
  4841  001A00  EF04  F00D         	goto	u2910
  4842  001A04                     u2911:
  4843  001A04  EF05  F00D         	goto	l3329
  4844  001A08                     u2910:
  4845  001A08  8031               	bsf	___fladd@b^0,0,c
  4846  001A0A                     l3329:
  4847  001A0A  A040               	btfss	___fladd@grs^0,0,c
  4848  001A0C  EF0A  F00D         	goto	u2921
  4849  001A10  EF0C  F00D         	goto	u2920
  4850  001A14                     u2921:
  4851  001A14  EF10  F00D         	goto	l3333
  4852  001A18                     u2920:
  4853  001A18  80D8               	bsf	status,0,c
  4854  001A1A  3640               	rlcf	___fladd@grs^0,f,c
  4855  001A1C  EF12  F00D         	goto	l3335
  4856  001A20                     l3333:
  4857  001A20  90D8               	bcf	status,0,c
  4858  001A22  3640               	rlcf	___fladd@grs^0,f,c
  4859  001A24                     l3335:
  4860  001A24  503F               	movf	___fladd@bexp^0,w,c
  4861  001A26  B4D8               	btfsc	status,2,c
  4862  001A28  EF18  F00D         	goto	u2931
  4863  001A2C  EF1A  F00D         	goto	u2930
  4864  001A30                     u2931:
  4865  001A30  EF1B  F00D         	goto	l3339
  4866  001A34                     u2930:
  4867  001A34  063F               	decf	___fladd@bexp^0,f,c
  4868  001A36                     l3339:
  4869  001A36  AE33               	btfss	(___fladd@b+2)^0,7,c
  4870  001A38  EF20  F00D         	goto	u2941
  4871  001A3C  EF22  F00D         	goto	u2940
  4872  001A40                     u2941:
  4873  001A40  EFF8  F00C         	goto	l3323
  4874  001A44                     u2940:
  4875  001A44                     l3341:
  4876  001A44  0E00               	movlw	0
  4877  001A46  6E3E               	movwf	___fladd@aexp^0,c
  4878  001A48  AE40               	btfss	___fladd@grs^0,7,c
  4879  001A4A  EF29  F00D         	goto	u2951
  4880  001A4E  EF2B  F00D         	goto	u2950
  4881  001A52                     u2951:
  4882  001A52  EF43  F00D         	goto	l1301
  4883  001A56                     u2950:
  4884  001A56  C040  F039         	movff	___fladd@grs,??___fladd
  4885  001A5A  0E7F               	movlw	127
  4886  001A5C  1639               	andwf	??___fladd^0,f,c
  4887  001A5E  B4D8               	btfsc	status,2,c
  4888  001A60  EF34  F00D         	goto	u2961
  4889  001A64  EF36  F00D         	goto	u2960
  4890  001A68                     u2961:
  4891  001A68  EF3A  F00D         	goto	l1302
  4892  001A6C                     u2960:
  4893  001A6C                     l3347:
  4894  001A6C  0E01               	movlw	1
  4895  001A6E  6E3E               	movwf	___fladd@aexp^0,c
  4896  001A70  EF43  F00D         	goto	l1301
  4897  001A74                     l1302:
  4898  001A74  A031               	btfss	___fladd@b^0,0,c
  4899  001A76  EF3F  F00D         	goto	u2971
  4900  001A7A  EF41  F00D         	goto	u2970
  4901  001A7E                     u2971:
  4902  001A7E  EF43  F00D         	goto	l1301
  4903  001A82                     u2970:
  4904  001A82  EF36  F00D         	goto	l3347
  4905  001A86                     l1301:
  4906  001A86  503E               	movf	___fladd@aexp^0,w,c
  4907  001A88  B4D8               	btfsc	status,2,c
  4908  001A8A  EF49  F00D         	goto	u2981
  4909  001A8E  EF4B  F00D         	goto	u2980
  4910  001A92                     u2981:
  4911  001A92  EF76  F00D         	goto	l3359
  4912  001A96                     u2980:
  4913  001A96  0E01               	movlw	1
  4914  001A98  2631               	addwf	___fladd@b^0,f,c
  4915  001A9A  0E00               	movlw	0
  4916  001A9C  2232               	addwfc	(___fladd@b+1)^0,f,c
  4917  001A9E  2233               	addwfc	(___fladd@b+2)^0,f,c
  4918  001AA0  2234               	addwfc	(___fladd@b+3)^0,f,c
  4919  001AA2  A034               	btfss	(___fladd@b+3)^0,0,c
  4920  001AA4  EF56  F00D         	goto	u2991
  4921  001AA8  EF58  F00D         	goto	u2990
  4922  001AAC                     u2991:
  4923  001AAC  EF76  F00D         	goto	l3359
  4924  001AB0                     u2990:
  4925  001AB0  C031  F039         	movff	___fladd@b,??___fladd
  4926  001AB4  C032  F03A         	movff	___fladd@b+1,??___fladd+1
  4927  001AB8  C033  F03B         	movff	___fladd@b+2,??___fladd+2
  4928  001ABC  C034  F03C         	movff	___fladd@b+3,??___fladd+3
  4929  001AC0  343C               	rlcf	(??___fladd+3)^0,w,c
  4930  001AC2  323C               	rrcf	(??___fladd+3)^0,f,c
  4931  001AC4  323B               	rrcf	(??___fladd+2)^0,f,c
  4932  001AC6  323A               	rrcf	(??___fladd+1)^0,f,c
  4933  001AC8  3239               	rrcf	??___fladd^0,f,c
  4934  001ACA  C039  F031         	movff	??___fladd,___fladd@b
  4935  001ACE  C03A  F032         	movff	??___fladd+1,___fladd@b+1
  4936  001AD2  C03B  F033         	movff	??___fladd+2,___fladd@b+2
  4937  001AD6  C03C  F034         	movff	??___fladd+3,___fladd@b+3
  4938  001ADA  283F               	incf	___fladd@bexp^0,w,c
  4939  001ADC  B4D8               	btfsc	status,2,c
  4940  001ADE  EF73  F00D         	goto	u3001
  4941  001AE2  EF75  F00D         	goto	u3000
  4942  001AE6                     u3001:
  4943  001AE6  EF76  F00D         	goto	l3359
  4944  001AEA                     u3000:
  4945  001AEA  2A3F               	incf	___fladd@bexp^0,f,c
  4946  001AEC                     l3359:
  4947  001AEC  283F               	incf	___fladd@bexp^0,w,c
  4948  001AEE  B4D8               	btfsc	status,2,c
  4949  001AF0  EF7C  F00D         	goto	u3011
  4950  001AF4  EF7E  F00D         	goto	u3010
  4951  001AF8                     u3011:
  4952  001AF8  EF86  F00D         	goto	l3363
  4953  001AFC                     u3010:
  4954  001AFC  503F               	movf	___fladd@bexp^0,w,c
  4955  001AFE  A4D8               	btfss	status,2,c
  4956  001B00  EF84  F00D         	goto	u3021
  4957  001B04  EF86  F00D         	goto	u3020
  4958  001B08                     u3021:
  4959  001B08  EF98  F00D         	goto	l3367
  4960  001B0C                     u3020:
  4961  001B0C                     l3363:
  4962  001B0C  0E00               	movlw	0
  4963  001B0E  6E31               	movwf	___fladd@b^0,c
  4964  001B10  0E00               	movlw	0
  4965  001B12  6E32               	movwf	(___fladd@b+1)^0,c
  4966  001B14  0E00               	movlw	0
  4967  001B16  6E33               	movwf	(___fladd@b+2)^0,c
  4968  001B18  0E00               	movlw	0
  4969  001B1A  6E34               	movwf	(___fladd@b+3)^0,c
  4970  001B1C  503F               	movf	___fladd@bexp^0,w,c
  4971  001B1E  A4D8               	btfss	status,2,c
  4972  001B20  EF94  F00D         	goto	u3031
  4973  001B24  EF96  F00D         	goto	u3030
  4974  001B28                     u3031:
  4975  001B28  EF98  F00D         	goto	l3367
  4976  001B2C                     u3030:
  4977  001B2C  0E00               	movlw	0
  4978  001B2E  6E3D               	movwf	___fladd@signs^0,c
  4979  001B30                     l3367:
  4980  001B30  A03F               	btfss	___fladd@bexp^0,0,c
  4981  001B32  EF9D  F00D         	goto	u3041
  4982  001B36  EF9F  F00D         	goto	u3040
  4983  001B3A                     u3041:
  4984  001B3A  EFA2  F00D         	goto	l3371
  4985  001B3E                     u3040:
  4986  001B3E  8E33               	bsf	(___fladd@b+2)^0,7,c
  4987  001B40  EFA3  F00D         	goto	l3373
  4988  001B44                     l3371:
  4989  001B44  9E33               	bcf	(___fladd@b+2)^0,7,c
  4990  001B46                     l3373:
  4991  001B46  90D8               	bcf	status,0,c
  4992  001B48  303F               	rrcf	___fladd@bexp^0,w,c
  4993  001B4A  6E34               	movwf	(___fladd@b+3)^0,c
  4994  001B4C  AE3D               	btfss	___fladd@signs^0,7,c
  4995  001B4E  EFAB  F00D         	goto	u3051
  4996  001B52  EFAD  F00D         	goto	u3050
  4997  001B56                     u3051:
  4998  001B56  EFAE  F00D         	goto	l3379
  4999  001B5A                     u3050:
  5000  001B5A  8E34               	bsf	(___fladd@b+3)^0,7,c
  5001  001B5C                     l3379:
  5002  001B5C  C031  F031         	movff	___fladd@b,?___fladd
  5003  001B60  C032  F032         	movff	___fladd@b+1,?___fladd+1
  5004  001B64  C033  F033         	movff	___fladd@b+2,?___fladd+2
  5005  001B68  C034  F034         	movff	___fladd@b+3,?___fladd+3
  5006  001B6C                     l1284:
  5007  001B6C  0012               	return		;funcret
  5008  001B6E                     __end_of___fladd:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function _forward *****************
  5012 ;; Defined at:
  5013 ;;		line 83 in file "DC_motors.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  mL              2   34[COMRAM] PTR struct .
  5016 ;;		 -> main@motorL(9), 
  5017 ;;  mR              2   36[COMRAM] PTR struct .
  5018 ;;		 -> main@motorR(9), 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;Total ram usage:        5 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; Hardware stack levels required when called: 9
  5037 ;; This function calls:
  5038 ;;		_DCmotors_setPWM
  5039 ;; This function is called by:
  5040 ;;		_main
  5041 ;;		_colourcards_readRGBC
  5042 ;;		_DCmotors_testing
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text18
  5047  00322E                     __ptext18:
  5048                           	callstack 0
  5049  00322E                     _forward:
  5050                           	callstack 21
  5051  00322E                     
  5052                           ;DC_motors.c: 84:     mL->direction = 1;
  5053  00322E  EE20 F001          	lfsr	2,1
  5054  003232  5023               	movf	forward@mL^0,w,c
  5055  003234  26D9               	addwf	fsr2l,f,c
  5056  003236  5024               	movf	(forward@mL+1)^0,w,c
  5057  003238  22DA               	addwfc	fsr2h,f,c
  5058  00323A  0E01               	movlw	1
  5059  00323C  6EDF               	movwf	indf2,c
  5060                           
  5061                           ;DC_motors.c: 85:     mR->direction = 1;
  5062  00323E  EE20 F001          	lfsr	2,1
  5063  003242  5025               	movf	forward@mR^0,w,c
  5064  003244  26D9               	addwf	fsr2l,f,c
  5065  003246  5026               	movf	(forward@mR+1)^0,w,c
  5066  003248  22DA               	addwfc	fsr2h,f,c
  5067  00324A  0E01               	movlw	1
  5068  00324C  6EDF               	movwf	indf2,c
  5069                           
  5070                           ;DC_motors.c: 88:     while((mL->power < 20) && (mR->power < 20)){
  5071  00324E  EF45  F019         	goto	l3861
  5072  003252                     l3853:
  5073                           
  5074                           ;DC_motors.c: 89:         mL->power += 10;
  5075  003252  C023  FFD9         	movff	forward@mL,fsr2l
  5076  003256  C024  FFDA         	movff	forward@mL+1,fsr2h
  5077  00325A  0E0A               	movlw	10
  5078  00325C  26DF               	addwf	indf2,f,c
  5079                           
  5080                           ;DC_motors.c: 90:         mR->power += 10;
  5081  00325E  C025  FFD9         	movff	forward@mR,fsr2l
  5082  003262  C026  FFDA         	movff	forward@mR+1,fsr2h
  5083  003266  0E0A               	movlw	10
  5084  003268  26DF               	addwf	indf2,f,c
  5085  00326A                     
  5086                           ;DC_motors.c: 92:         DCmotors_setPWM(mL);
  5087  00326A  C023  F018         	movff	forward@mL,DCmotors_setPWM@m
  5088  00326E  C024  F019         	movff	forward@mL+1,DCmotors_setPWM@m+1
  5089  003272  ECB3  F014         	call	_DCmotors_setPWM	;wreg free
  5090  003276                     
  5091                           ;DC_motors.c: 93:         DCmotors_setPWM(mR);
  5092  003276  C025  F018         	movff	forward@mR,DCmotors_setPWM@m
  5093  00327A  C026  F019         	movff	forward@mR+1,DCmotors_setPWM@m+1
  5094  00327E  ECB3  F014         	call	_DCmotors_setPWM	;wreg free
  5095  003282                     
  5096                           ;DC_motors.c: 94:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  5097  003282  0EA0               	movlw	160
  5098  003284                     u5997:
  5099  003284  D000               	nop2	
  5100  003286  2EE8               	decfsz	wreg,f,c
  5101  003288  D7FD               	bra	u5997
  5102  00328A                     l3861:
  5103                           
  5104                           ;DC_motors.c: 88:     while((mL->power < 20) && (mR->power < 20)){
  5105  00328A  C023  FFD9         	movff	forward@mL,fsr2l
  5106  00328E  C024  FFDA         	movff	forward@mL+1,fsr2h
  5107  003292  0E14               	movlw	20
  5108  003294  60DF               	cpfslt	indf2,c
  5109  003296  EF4F  F019         	goto	u3801
  5110  00329A  EF51  F019         	goto	u3800
  5111  00329E                     u3801:
  5112  00329E  EF5D  F019         	goto	l581
  5113  0032A2                     u3800:
  5114  0032A2  C025  FFD9         	movff	forward@mR,fsr2l
  5115  0032A6  C026  FFDA         	movff	forward@mR+1,fsr2h
  5116  0032AA  0E13               	movlw	19
  5117  0032AC  64DF               	cpfsgt	indf2,c
  5118  0032AE  EF5B  F019         	goto	u3811
  5119  0032B2  EF5D  F019         	goto	u3810
  5120  0032B6                     u3811:
  5121  0032B6  EF29  F019         	goto	l3853
  5122  0032BA                     u3810:
  5123  0032BA                     l581:
  5124  0032BA  0012               	return		;funcret
  5125  0032BC                     __end_of_forward:
  5126                           	callstack 0
  5127                           
  5128 ;; *************** function _colourclick_readRGBC2 *****************
  5129 ;; Defined at:
  5130 ;;		line 124 in file "colour_click.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  tmpval          2   22[COMRAM] PTR struct .
  5133 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
  5134 ;;  mode            1   24[COMRAM] unsigned char 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5146 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;Total ram usage:        5 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 11
  5153 ;; This function calls:
  5154 ;;		_colourclickLEDs_C
  5155 ;;		_colourclick_readRGBC
  5156 ;; This function is called by:
  5157 ;;		_colourcards_readRGBC
  5158 ;;		_colourcards_testingRGBC
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text19
  5163  002E6A                     __ptext19:
  5164                           	callstack 0
  5165  002E6A                     _colourclick_readRGBC2:
  5166                           	callstack 18
  5167  002E6A                     
  5168                           ;colour_click.c: 125:     colourclickLEDs_C(0);
  5169  002E6A  0E00               	movlw	0
  5170  002E6C  EC81  F01C         	call	_colourclickLEDs_C
  5171  002E70                     
  5172                           ;colour_click.c: 126:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5173  002E70  0E09               	movlw	9
  5174  002E72  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5175  002E74  0E1E               	movlw	30
  5176  002E76  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  5177  002E78  0EE4               	movlw	228
  5178  002E7A                     u6007:
  5179  002E7A  2EE8               	decfsz	wreg,f,c
  5180  002E7C  D7FE               	bra	u6007
  5181  002E7E  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  5182  002E80  D7FC               	bra	u6007
  5183  002E82  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5184  002E84  D7FA               	bra	u6007
  5185  002E86  D000               	nop2	
  5186  002E88                     
  5187                           ;colour_click.c: 128:     if (mode==1) {
  5188  002E88  0419               	decf	colourclick_readRGBC2@mode^0,w,c
  5189  002E8A  A4D8               	btfss	status,2,c
  5190  002E8C  EF4A  F017         	goto	u3821
  5191  002E90  EF4C  F017         	goto	u3820
  5192  002E94                     u3821:
  5193  002E94  EF7A  F017         	goto	l3899
  5194  002E98                     u3820:
  5195  002E98                     
  5196                           ;colour_click.c: 129:         LATGbits.LATG1 = 1;
  5197  002E98  827F               	bsf	127,1,c	;volatile
  5198  002E9A                     
  5199                           ;colour_click.c: 130:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5200  002E9A  0E52               	movlw	82
  5201  002E9C  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5202  002E9E  0E2B               	movlw	43
  5203  002EA0  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  5204  002EA2  0E00               	movlw	0
  5205  002EA4                     u6017:
  5206  002EA4  2EE8               	decfsz	wreg,f,c
  5207  002EA6  D7FE               	bra	u6017
  5208  002EA8  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  5209  002EAA  D7FC               	bra	u6017
  5210  002EAC  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5211  002EAE  D7FA               	bra	u6017
  5212  002EB0  D000               	nop2	
  5213  002EB2                     
  5214                           ;colour_click.c: 131:         colourclick_readRGBC(tmpval);
  5215  002EB2  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  5216  002EB6  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  5217  002EBA  ECEA  F019         	call	_colourclick_readRGBC	;wreg free
  5218  002EBE                     
  5219                           ;colour_click.c: 132:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5220  002EBE  0E52               	movlw	82
  5221  002EC0  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5222  002EC2  0E2B               	movlw	43
  5223  002EC4  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  5224  002EC6  0E00               	movlw	0
  5225  002EC8                     u6027:
  5226  002EC8  2EE8               	decfsz	wreg,f,c
  5227  002ECA  D7FE               	bra	u6027
  5228  002ECC  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  5229  002ECE  D7FC               	bra	u6027
  5230  002ED0  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5231  002ED2  D7FA               	bra	u6027
  5232  002ED4  D000               	nop2	
  5233  002ED6                     
  5234                           ;colour_click.c: 133:         LATGbits.LATG1 = 0;
  5235  002ED6  927F               	bcf	127,1,c	;volatile
  5236  002ED8                     l3897:
  5237                           
  5238                           ;colour_click.c: 134:         _delay((unsigned long)((20)*(64000000/4000.0)));
  5239  002ED8  0E02               	movlw	2
  5240  002EDA  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5241  002EDC  0EA0               	movlw	160
  5242  002EDE  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  5243  002EE0  0E92               	movlw	146
  5244  002EE2                     u6037:
  5245  002EE2  2EE8               	decfsz	wreg,f,c
  5246  002EE4  D7FE               	bra	u6037
  5247  002EE6  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  5248  002EE8  D7FC               	bra	u6037
  5249  002EEA  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5250  002EEC  D7FA               	bra	u6037
  5251  002EEE  D000               	nop2	
  5252                           
  5253                           ;colour_click.c: 135:     } else if (mode==2) {
  5254  002EF0  EFD0  F017         	goto	l3927
  5255  002EF4                     l3899:
  5256  002EF4  0E02               	movlw	2
  5257  002EF6  1819               	xorwf	colourclick_readRGBC2@mode^0,w,c
  5258  002EF8  A4D8               	btfss	status,2,c
  5259  002EFA  EF81  F017         	goto	u3831
  5260  002EFE  EF83  F017         	goto	u3830
  5261  002F02                     u3831:
  5262  002F02  EFA5  F017         	goto	l3913
  5263  002F06                     u3830:
  5264  002F06                     
  5265                           ;colour_click.c: 136:         LATAbits.LATA4 = 1;
  5266  002F06  8879               	bsf	121,4,c	;volatile
  5267  002F08                     
  5268                           ;colour_click.c: 137:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5269  002F08  0E52               	movlw	82
  5270  002F0A  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5271  002F0C  0E2B               	movlw	43
  5272  002F0E  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  5273  002F10  0E00               	movlw	0
  5274  002F12                     u6047:
  5275  002F12  2EE8               	decfsz	wreg,f,c
  5276  002F14  D7FE               	bra	u6047
  5277  002F16  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  5278  002F18  D7FC               	bra	u6047
  5279  002F1A  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5280  002F1C  D7FA               	bra	u6047
  5281  002F1E  D000               	nop2	
  5282  002F20                     
  5283                           ;colour_click.c: 138:         colourclick_readRGBC(tmpval);
  5284  002F20  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  5285  002F24  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  5286  002F28  ECEA  F019         	call	_colourclick_readRGBC	;wreg free
  5287  002F2C                     
  5288                           ;colour_click.c: 139:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5289  002F2C  0E52               	movlw	82
  5290  002F2E  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5291  002F30  0E2B               	movlw	43
  5292  002F32  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  5293  002F34  0E00               	movlw	0
  5294  002F36                     u6057:
  5295  002F36  2EE8               	decfsz	wreg,f,c
  5296  002F38  D7FE               	bra	u6057
  5297  002F3A  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  5298  002F3C  D7FC               	bra	u6057
  5299  002F3E  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5300  002F40  D7FA               	bra	u6057
  5301  002F42  D000               	nop2	
  5302  002F44                     
  5303                           ;colour_click.c: 140:         LATAbits.LATA4 = 0;
  5304  002F44  9879               	bcf	121,4,c	;volatile
  5305  002F46  EF6C  F017         	goto	l3897
  5306  002F4A                     l3913:
  5307  002F4A  0E03               	movlw	3
  5308  002F4C  1819               	xorwf	colourclick_readRGBC2@mode^0,w,c
  5309  002F4E  A4D8               	btfss	status,2,c
  5310  002F50  EFAC  F017         	goto	u3841
  5311  002F54  EFAE  F017         	goto	u3840
  5312  002F58                     u3841:
  5313  002F58  EFD0  F017         	goto	l3927
  5314  002F5C                     u3840:
  5315  002F5C                     
  5316                           ;colour_click.c: 143:         LATFbits.LATF7 = 1;
  5317  002F5C  8E7E               	bsf	126,7,c	;volatile
  5318  002F5E                     
  5319                           ;colour_click.c: 144:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5320  002F5E  0E52               	movlw	82
  5321  002F60  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5322  002F62  0E2B               	movlw	43
  5323  002F64  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  5324  002F66  0E00               	movlw	0
  5325  002F68                     u6067:
  5326  002F68  2EE8               	decfsz	wreg,f,c
  5327  002F6A  D7FE               	bra	u6067
  5328  002F6C  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  5329  002F6E  D7FC               	bra	u6067
  5330  002F70  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5331  002F72  D7FA               	bra	u6067
  5332  002F74  D000               	nop2	
  5333  002F76                     
  5334                           ;colour_click.c: 145:         colourclick_readRGBC(tmpval);
  5335  002F76  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  5336  002F7A  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  5337  002F7E  ECEA  F019         	call	_colourclick_readRGBC	;wreg free
  5338  002F82                     
  5339                           ;colour_click.c: 146:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5340  002F82  0E52               	movlw	82
  5341  002F84  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5342  002F86  0E2B               	movlw	43
  5343  002F88  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  5344  002F8A  0E00               	movlw	0
  5345  002F8C                     u6077:
  5346  002F8C  2EE8               	decfsz	wreg,f,c
  5347  002F8E  D7FE               	bra	u6077
  5348  002F90  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  5349  002F92  D7FC               	bra	u6077
  5350  002F94  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5351  002F96  D7FA               	bra	u6077
  5352  002F98  D000               	nop2	
  5353  002F9A                     
  5354                           ;colour_click.c: 147:         LATFbits.LATF7 = 0;
  5355  002F9A  9E7E               	bcf	126,7,c	;volatile
  5356  002F9C  EF6C  F017         	goto	l3897
  5357  002FA0                     l3927:
  5358                           
  5359                           ;colour_click.c: 151:     colourclickLEDs_C(1);
  5360  002FA0  0E01               	movlw	1
  5361  002FA2  EC81  F01C         	call	_colourclickLEDs_C
  5362  002FA6                     
  5363                           ;colour_click.c: 152:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5364  002FA6  0E09               	movlw	9
  5365  002FA8  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  5366  002FAA  0E1E               	movlw	30
  5367  002FAC  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  5368  002FAE  0EE4               	movlw	228
  5369  002FB0                     u6087:
  5370  002FB0  2EE8               	decfsz	wreg,f,c
  5371  002FB2  D7FE               	bra	u6087
  5372  002FB4  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  5373  002FB6  D7FC               	bra	u6087
  5374  002FB8  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  5375  002FBA  D7FA               	bra	u6087
  5376  002FBC  D000               	nop2	
  5377  002FBE  0012               	return		;funcret
  5378  002FC0                     __end_of_colourclick_readRGBC2:
  5379                           	callstack 0
  5380                           
  5381 ;; *************** function _colourclick_readRGBC *****************
  5382 ;; Defined at:
  5383 ;;		line 113 in file "colour_click.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;  tmpval          2   20[COMRAM] PTR struct .
  5386 ;;		 -> colourclick_calibration@initial(8), colourcards_testingRGBC@abs(8), main@current(8), 
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;		None
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      void 
  5391 ;; Registers used:
  5392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5402 ;;Total ram usage:        2 bytes
  5403 ;; Hardware stack levels used: 1
  5404 ;; Hardware stack levels required when called: 10
  5405 ;; This function calls:
  5406 ;;		_colourclick_readB
  5407 ;;		_colourclick_readC
  5408 ;;		_colourclick_readG
  5409 ;;		_colourclick_readR
  5410 ;; This function is called by:
  5411 ;;		_main
  5412 ;;		_colourcards_readRGBC
  5413 ;;		_colourclick_readRGBC2
  5414 ;;		_colourclick_calibration
  5415 ;;		_colourcards_testingRGBC
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text20
  5420  0033D4                     __ptext20:
  5421                           	callstack 0
  5422  0033D4                     _colourclick_readRGBC:
  5423                           	callstack 20
  5424  0033D4                     
  5425                           ;colour_click.c: 114:     tmpval->R = colourclick_readR();
  5426  0033D4  EC98  F01A         	call	_colourclick_readR	;wreg free
  5427  0033D8  C015  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
  5428  0033DC  C016  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
  5429  0033E0  C00E  FFDE         	movff	?_colourclick_readR,postinc2
  5430  0033E4  C00F  FFDD         	movff	?_colourclick_readR+1,postdec2
  5431                           
  5432                           ;colour_click.c: 115:     tmpval->G = colourclick_readG();
  5433  0033E8  ECC0  F01A         	call	_colourclick_readG	;wreg free
  5434  0033EC  EE20 F002          	lfsr	2,2
  5435  0033F0  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
  5436  0033F2  26D9               	addwf	fsr2l,f,c
  5437  0033F4  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  5438  0033F6  22DA               	addwfc	fsr2h,f,c
  5439  0033F8  C00E  FFDE         	movff	?_colourclick_readG,postinc2
  5440  0033FC  C00F  FFDD         	movff	?_colourclick_readG+1,postdec2
  5441                           
  5442                           ;colour_click.c: 116:     tmpval->B = colourclick_readB();
  5443  003400  EC10  F01B         	call	_colourclick_readB	;wreg free
  5444  003404  EE20 F004          	lfsr	2,4
  5445  003408  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
  5446  00340A  26D9               	addwf	fsr2l,f,c
  5447  00340C  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  5448  00340E  22DA               	addwfc	fsr2h,f,c
  5449  003410  C00E  FFDE         	movff	?_colourclick_readB,postinc2
  5450  003414  C00F  FFDD         	movff	?_colourclick_readB+1,postdec2
  5451                           
  5452                           ;colour_click.c: 117:     tmpval->C = colourclick_readC();
  5453  003418  ECE8  F01A         	call	_colourclick_readC	;wreg free
  5454  00341C  EE20 F006          	lfsr	2,6
  5455  003420  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
  5456  003422  26D9               	addwf	fsr2l,f,c
  5457  003424  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  5458  003426  22DA               	addwfc	fsr2h,f,c
  5459  003428  C00E  FFDE         	movff	?_colourclick_readC,postinc2
  5460  00342C  C00F  FFDD         	movff	?_colourclick_readC+1,postdec2
  5461  003430  0012               	return		;funcret
  5462  003432                     __end_of_colourclick_readRGBC:
  5463                           	callstack 0
  5464                           
  5465 ;; *************** function _colourclick_readR *****************
  5466 ;; Defined at:
  5467 ;;		line 45 in file "colour_click.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;		None
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  tmp             2   18[COMRAM] unsigned int 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  2   13[COMRAM] unsigned int 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5482 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5483 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5484 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5485 ;;Total ram usage:        7 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 9
  5488 ;; This function calls:
  5489 ;;		_I2C_2_Master_Read
  5490 ;;		_I2C_2_Master_RepStart
  5491 ;;		_I2C_2_Master_Start
  5492 ;;		_I2C_2_Master_Stop
  5493 ;;		_I2C_2_Master_Write
  5494 ;; This function is called by:
  5495 ;;		_colourclick_readRGBC
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text21
  5500  003530                     __ptext21:
  5501                           	callstack 0
  5502  003530                     _colourclick_readR:
  5503                           	callstack 20
  5504  003530                     
  5505                           ;colour_click.c: 46:  unsigned int tmp;;colour_click.c: 47:  I2C_2_Master_Start();
  5506  003530  EC3E  F01D         	call	_I2C_2_Master_Start	;wreg free
  5507                           
  5508                           ;colour_click.c: 48:  I2C_2_Master_Write(0x52 | 0x00);
  5509  003534  0E52               	movlw	82
  5510  003536  EC27  F01D         	call	_I2C_2_Master_Write
  5511                           
  5512                           ;colour_click.c: 49:  I2C_2_Master_Write(0xA0 | 0x16);
  5513  00353A  0EB6               	movlw	182
  5514  00353C  EC27  F01D         	call	_I2C_2_Master_Write
  5515                           
  5516                           ;colour_click.c: 50:  I2C_2_Master_RepStart();
  5517  003540  EC43  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5518                           
  5519                           ;colour_click.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  5520  003544  0E53               	movlw	83
  5521  003546  EC27  F01D         	call	_I2C_2_Master_Write
  5522                           
  5523                           ;colour_click.c: 52:  tmp=I2C_2_Master_Read(1);
  5524  00354A  0E01               	movlw	1
  5525  00354C  ECD0  F01B         	call	_I2C_2_Master_Read
  5526  003550  6E10               	movwf	??_colourclick_readR^0,c
  5527  003552  5010               	movf	??_colourclick_readR^0,w,c
  5528  003554  6E13               	movwf	colourclick_readR@tmp^0,c
  5529  003556  6A14               	clrf	(colourclick_readR@tmp+1)^0,c
  5530                           
  5531                           ;colour_click.c: 53:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  5532  003558  0E00               	movlw	0
  5533  00355A  ECD0  F01B         	call	_I2C_2_Master_Read
  5534  00355E  6E10               	movwf	??_colourclick_readR^0,c
  5535  003560  5010               	movf	??_colourclick_readR^0,w,c
  5536  003562  6E12               	movwf	(??_colourclick_readR+2)^0,c
  5537  003564  6A11               	clrf	(??_colourclick_readR+1)^0,c
  5538  003566  5013               	movf	colourclick_readR@tmp^0,w,c
  5539  003568  1011               	iorwf	(??_colourclick_readR+1)^0,w,c
  5540  00356A  6E13               	movwf	colourclick_readR@tmp^0,c
  5541  00356C  5014               	movf	(colourclick_readR@tmp+1)^0,w,c
  5542  00356E  1012               	iorwf	(??_colourclick_readR+2)^0,w,c
  5543  003570  6E14               	movwf	(colourclick_readR@tmp+1)^0,c
  5544                           
  5545                           ;colour_click.c: 54:  I2C_2_Master_Stop();
  5546  003572  EC39  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5547  003576                     
  5548                           ;colour_click.c: 55:  return tmp;
  5549  003576  C013  F00E         	movff	colourclick_readR@tmp,?_colourclick_readR
  5550  00357A  C014  F00F         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
  5551  00357E  0012               	return		;funcret
  5552  003580                     __end_of_colourclick_readR:
  5553                           	callstack 0
  5554                           
  5555 ;; *************** function _colourclick_readG *****************
  5556 ;; Defined at:
  5557 ;;		line 62 in file "colour_click.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;		None
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  tmp             2   18[COMRAM] unsigned int 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  2   13[COMRAM] unsigned int 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0, cstack
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5572 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5573 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5574 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5575 ;;Total ram usage:        7 bytes
  5576 ;; Hardware stack levels used: 1
  5577 ;; Hardware stack levels required when called: 9
  5578 ;; This function calls:
  5579 ;;		_I2C_2_Master_Read
  5580 ;;		_I2C_2_Master_RepStart
  5581 ;;		_I2C_2_Master_Start
  5582 ;;		_I2C_2_Master_Stop
  5583 ;;		_I2C_2_Master_Write
  5584 ;; This function is called by:
  5585 ;;		_colourclick_readRGBC
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text22
  5590  003580                     __ptext22:
  5591                           	callstack 0
  5592  003580                     _colourclick_readG:
  5593                           	callstack 20
  5594  003580                     
  5595                           ;colour_click.c: 63:  unsigned int tmp;;colour_click.c: 64:  I2C_2_Master_Start();
  5596  003580  EC3E  F01D         	call	_I2C_2_Master_Start	;wreg free
  5597                           
  5598                           ;colour_click.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  5599  003584  0E52               	movlw	82
  5600  003586  EC27  F01D         	call	_I2C_2_Master_Write
  5601                           
  5602                           ;colour_click.c: 66:  I2C_2_Master_Write(0xA0 | 0x18);
  5603  00358A  0EB8               	movlw	184
  5604  00358C  EC27  F01D         	call	_I2C_2_Master_Write
  5605                           
  5606                           ;colour_click.c: 67:  I2C_2_Master_RepStart();
  5607  003590  EC43  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5608                           
  5609                           ;colour_click.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  5610  003594  0E53               	movlw	83
  5611  003596  EC27  F01D         	call	_I2C_2_Master_Write
  5612                           
  5613                           ;colour_click.c: 69:  tmp=I2C_2_Master_Read(1);
  5614  00359A  0E01               	movlw	1
  5615  00359C  ECD0  F01B         	call	_I2C_2_Master_Read
  5616  0035A0  6E10               	movwf	??_colourclick_readG^0,c
  5617  0035A2  5010               	movf	??_colourclick_readG^0,w,c
  5618  0035A4  6E13               	movwf	colourclick_readG@tmp^0,c
  5619  0035A6  6A14               	clrf	(colourclick_readG@tmp+1)^0,c
  5620                           
  5621                           ;colour_click.c: 70:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  5622  0035A8  0E00               	movlw	0
  5623  0035AA  ECD0  F01B         	call	_I2C_2_Master_Read
  5624  0035AE  6E10               	movwf	??_colourclick_readG^0,c
  5625  0035B0  5010               	movf	??_colourclick_readG^0,w,c
  5626  0035B2  6E12               	movwf	(??_colourclick_readG+2)^0,c
  5627  0035B4  6A11               	clrf	(??_colourclick_readG+1)^0,c
  5628  0035B6  5013               	movf	colourclick_readG@tmp^0,w,c
  5629  0035B8  1011               	iorwf	(??_colourclick_readG+1)^0,w,c
  5630  0035BA  6E13               	movwf	colourclick_readG@tmp^0,c
  5631  0035BC  5014               	movf	(colourclick_readG@tmp+1)^0,w,c
  5632  0035BE  1012               	iorwf	(??_colourclick_readG+2)^0,w,c
  5633  0035C0  6E14               	movwf	(colourclick_readG@tmp+1)^0,c
  5634                           
  5635                           ;colour_click.c: 71:  I2C_2_Master_Stop();
  5636  0035C2  EC39  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5637  0035C6                     
  5638                           ;colour_click.c: 72:  return tmp;
  5639  0035C6  C013  F00E         	movff	colourclick_readG@tmp,?_colourclick_readG
  5640  0035CA  C014  F00F         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
  5641  0035CE  0012               	return		;funcret
  5642  0035D0                     __end_of_colourclick_readG:
  5643                           	callstack 0
  5644                           
  5645 ;; *************** function _colourclick_readC *****************
  5646 ;; Defined at:
  5647 ;;		line 96 in file "colour_click.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  tmp             2   18[COMRAM] unsigned int 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  2   13[COMRAM] unsigned int 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5662 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5663 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5664 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5665 ;;Total ram usage:        7 bytes
  5666 ;; Hardware stack levels used: 1
  5667 ;; Hardware stack levels required when called: 9
  5668 ;; This function calls:
  5669 ;;		_I2C_2_Master_Read
  5670 ;;		_I2C_2_Master_RepStart
  5671 ;;		_I2C_2_Master_Start
  5672 ;;		_I2C_2_Master_Stop
  5673 ;;		_I2C_2_Master_Write
  5674 ;; This function is called by:
  5675 ;;		_colourclick_readRGBC
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text23
  5680  0035D0                     __ptext23:
  5681                           	callstack 0
  5682  0035D0                     _colourclick_readC:
  5683                           	callstack 20
  5684  0035D0                     
  5685                           ;colour_click.c: 97:  unsigned int tmp;;colour_click.c: 98:  I2C_2_Master_Start();
  5686  0035D0  EC3E  F01D         	call	_I2C_2_Master_Start	;wreg free
  5687                           
  5688                           ;colour_click.c: 99:  I2C_2_Master_Write(0x52 | 0x00);
  5689  0035D4  0E52               	movlw	82
  5690  0035D6  EC27  F01D         	call	_I2C_2_Master_Write
  5691                           
  5692                           ;colour_click.c: 100:  I2C_2_Master_Write(0xA0 | 0x14);
  5693  0035DA  0EB4               	movlw	180
  5694  0035DC  EC27  F01D         	call	_I2C_2_Master_Write
  5695                           
  5696                           ;colour_click.c: 101:  I2C_2_Master_RepStart();
  5697  0035E0  EC43  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5698                           
  5699                           ;colour_click.c: 102:  I2C_2_Master_Write(0x52 | 0x01);
  5700  0035E4  0E53               	movlw	83
  5701  0035E6  EC27  F01D         	call	_I2C_2_Master_Write
  5702                           
  5703                           ;colour_click.c: 103:  tmp=I2C_2_Master_Read(1);
  5704  0035EA  0E01               	movlw	1
  5705  0035EC  ECD0  F01B         	call	_I2C_2_Master_Read
  5706  0035F0  6E10               	movwf	??_colourclick_readC^0,c
  5707  0035F2  5010               	movf	??_colourclick_readC^0,w,c
  5708  0035F4  6E13               	movwf	colourclick_readC@tmp^0,c
  5709  0035F6  6A14               	clrf	(colourclick_readC@tmp+1)^0,c
  5710                           
  5711                           ;colour_click.c: 104:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  5712  0035F8  0E00               	movlw	0
  5713  0035FA  ECD0  F01B         	call	_I2C_2_Master_Read
  5714  0035FE  6E10               	movwf	??_colourclick_readC^0,c
  5715  003600  5010               	movf	??_colourclick_readC^0,w,c
  5716  003602  6E12               	movwf	(??_colourclick_readC+2)^0,c
  5717  003604  6A11               	clrf	(??_colourclick_readC+1)^0,c
  5718  003606  5013               	movf	colourclick_readC@tmp^0,w,c
  5719  003608  1011               	iorwf	(??_colourclick_readC+1)^0,w,c
  5720  00360A  6E13               	movwf	colourclick_readC@tmp^0,c
  5721  00360C  5014               	movf	(colourclick_readC@tmp+1)^0,w,c
  5722  00360E  1012               	iorwf	(??_colourclick_readC+2)^0,w,c
  5723  003610  6E14               	movwf	(colourclick_readC@tmp+1)^0,c
  5724                           
  5725                           ;colour_click.c: 105:  I2C_2_Master_Stop();
  5726  003612  EC39  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5727  003616                     
  5728                           ;colour_click.c: 106:  return tmp;
  5729  003616  C013  F00E         	movff	colourclick_readC@tmp,?_colourclick_readC
  5730  00361A  C014  F00F         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
  5731  00361E  0012               	return		;funcret
  5732  003620                     __end_of_colourclick_readC:
  5733                           	callstack 0
  5734                           
  5735 ;; *************** function _colourclick_readB *****************
  5736 ;; Defined at:
  5737 ;;		line 79 in file "colour_click.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;		None
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  tmp             2   18[COMRAM] unsigned int 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  2   13[COMRAM] unsigned int 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5754 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5755 ;;Total ram usage:        7 bytes
  5756 ;; Hardware stack levels used: 1
  5757 ;; Hardware stack levels required when called: 9
  5758 ;; This function calls:
  5759 ;;		_I2C_2_Master_Read
  5760 ;;		_I2C_2_Master_RepStart
  5761 ;;		_I2C_2_Master_Start
  5762 ;;		_I2C_2_Master_Stop
  5763 ;;		_I2C_2_Master_Write
  5764 ;; This function is called by:
  5765 ;;		_colourclick_readRGBC
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           	psect	text24
  5770  003620                     __ptext24:
  5771                           	callstack 0
  5772  003620                     _colourclick_readB:
  5773                           	callstack 20
  5774  003620                     
  5775                           ;colour_click.c: 80:  unsigned int tmp;;colour_click.c: 81:  I2C_2_Master_Start();
  5776  003620  EC3E  F01D         	call	_I2C_2_Master_Start	;wreg free
  5777                           
  5778                           ;colour_click.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  5779  003624  0E52               	movlw	82
  5780  003626  EC27  F01D         	call	_I2C_2_Master_Write
  5781                           
  5782                           ;colour_click.c: 83:  I2C_2_Master_Write(0xA0 | 0x1A);
  5783  00362A  0EBA               	movlw	186
  5784  00362C  EC27  F01D         	call	_I2C_2_Master_Write
  5785                           
  5786                           ;colour_click.c: 84:  I2C_2_Master_RepStart();
  5787  003630  EC43  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  5788                           
  5789                           ;colour_click.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  5790  003634  0E53               	movlw	83
  5791  003636  EC27  F01D         	call	_I2C_2_Master_Write
  5792                           
  5793                           ;colour_click.c: 86:  tmp=I2C_2_Master_Read(1);
  5794  00363A  0E01               	movlw	1
  5795  00363C  ECD0  F01B         	call	_I2C_2_Master_Read
  5796  003640  6E10               	movwf	??_colourclick_readB^0,c
  5797  003642  5010               	movf	??_colourclick_readB^0,w,c
  5798  003644  6E13               	movwf	colourclick_readB@tmp^0,c
  5799  003646  6A14               	clrf	(colourclick_readB@tmp+1)^0,c
  5800                           
  5801                           ;colour_click.c: 87:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  5802  003648  0E00               	movlw	0
  5803  00364A  ECD0  F01B         	call	_I2C_2_Master_Read
  5804  00364E  6E10               	movwf	??_colourclick_readB^0,c
  5805  003650  5010               	movf	??_colourclick_readB^0,w,c
  5806  003652  6E12               	movwf	(??_colourclick_readB+2)^0,c
  5807  003654  6A11               	clrf	(??_colourclick_readB+1)^0,c
  5808  003656  5013               	movf	colourclick_readB@tmp^0,w,c
  5809  003658  1011               	iorwf	(??_colourclick_readB+1)^0,w,c
  5810  00365A  6E13               	movwf	colourclick_readB@tmp^0,c
  5811  00365C  5014               	movf	(colourclick_readB@tmp+1)^0,w,c
  5812  00365E  1012               	iorwf	(??_colourclick_readB+2)^0,w,c
  5813  003660  6E14               	movwf	(colourclick_readB@tmp+1)^0,c
  5814                           
  5815                           ;colour_click.c: 88:  I2C_2_Master_Stop();
  5816  003662  EC39  F01D         	call	_I2C_2_Master_Stop	;wreg free
  5817  003666                     
  5818                           ;colour_click.c: 89:  return tmp;
  5819  003666  C013  F00E         	movff	colourclick_readB@tmp,?_colourclick_readB
  5820  00366A  C014  F00F         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
  5821  00366E  0012               	return		;funcret
  5822  003670                     __end_of_colourclick_readB:
  5823                           	callstack 0
  5824                           
  5825 ;; *************** function _I2C_2_Master_Write *****************
  5826 ;; Defined at:
  5827 ;;		line 64 in file "I2C.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  data_byte       1    wreg     unsigned char 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  data_byte       1   10[COMRAM] unsigned char 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0, cstack
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5845 ;;Total ram usage:        1 bytes
  5846 ;; Hardware stack levels used: 1
  5847 ;; Hardware stack levels required when called: 8
  5848 ;; This function calls:
  5849 ;;		_I2C_2_Master_Idle
  5850 ;; This function is called by:
  5851 ;;		_interrupts_clear
  5852 ;;		_colourclick_writetoaddr
  5853 ;;		_colourclick_readR
  5854 ;;		_colourclick_readG
  5855 ;;		_colourclick_readB
  5856 ;;		_colourclick_readC
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text25
  5861  003A4E                     __ptext25:
  5862                           	callstack 0
  5863  003A4E                     _I2C_2_Master_Write:
  5864                           	callstack 18
  5865                           
  5866                           ;incstack = 0
  5867                           ;I2C_2_Master_Write@data_byte stored from wreg
  5868  003A4E  6E0B               	movwf	I2C_2_Master_Write@data_byte^0,c
  5869  003A50                     
  5870                           ;I2C.c: 65:   I2C_2_Master_Idle();
  5871  003A50  EC22  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5872  003A54                     
  5873                           ;I2C.c: 66:   SSP2BUF = data_byte;
  5874  003A54  C00B  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5875  003A58  0012               	return		;funcret
  5876  003A5A                     __end_of_I2C_2_Master_Write:
  5877                           	callstack 0
  5878                           
  5879 ;; *************** function _I2C_2_Master_Stop *****************
  5880 ;; Defined at:
  5881 ;;		line 55 in file "I2C.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5899 ;;Total ram usage:        0 bytes
  5900 ;; Hardware stack levels used: 1
  5901 ;; Hardware stack levels required when called: 8
  5902 ;; This function calls:
  5903 ;;		_I2C_2_Master_Idle
  5904 ;; This function is called by:
  5905 ;;		_interrupts_clear
  5906 ;;		_colourclick_writetoaddr
  5907 ;;		_colourclick_readR
  5908 ;;		_colourclick_readG
  5909 ;;		_colourclick_readB
  5910 ;;		_colourclick_readC
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text26
  5915  003A72                     __ptext26:
  5916                           	callstack 0
  5917  003A72                     _I2C_2_Master_Stop:
  5918                           	callstack 18
  5919  003A72                     
  5920                           ;I2C.c: 56:   I2C_2_Master_Idle();
  5921  003A72  EC22  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5922  003A76                     
  5923                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
  5924  003A76  010E               	movlb	14	; () banked
  5925  003A78  85DA               	bsf	218,2,b	;volatile
  5926  003A7A                     
  5927                           ; BSR set to: 14
  5928  003A7A  0012               	return		;funcret
  5929  003A7C                     __end_of_I2C_2_Master_Stop:
  5930                           	callstack 0
  5931                           
  5932 ;; *************** function _I2C_2_Master_Start *****************
  5933 ;; Defined at:
  5934 ;;		line 37 in file "I2C.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;		None
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		wreg, status,2, status,0, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;Total ram usage:        0 bytes
  5953 ;; Hardware stack levels used: 1
  5954 ;; Hardware stack levels required when called: 8
  5955 ;; This function calls:
  5956 ;;		_I2C_2_Master_Idle
  5957 ;; This function is called by:
  5958 ;;		_interrupts_clear
  5959 ;;		_colourclick_writetoaddr
  5960 ;;		_colourclick_readR
  5961 ;;		_colourclick_readG
  5962 ;;		_colourclick_readB
  5963 ;;		_colourclick_readC
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text27
  5968  003A7C                     __ptext27:
  5969                           	callstack 0
  5970  003A7C                     _I2C_2_Master_Start:
  5971                           	callstack 18
  5972  003A7C                     
  5973                           ;I2C.c: 38:   I2C_2_Master_Idle();
  5974  003A7C  EC22  F01C         	call	_I2C_2_Master_Idle	;wreg free
  5975  003A80                     
  5976                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
  5977  003A80  010E               	movlb	14	; () banked
  5978  003A82  81DA               	bsf	218,0,b	;volatile
  5979  003A84                     
  5980                           ; BSR set to: 14
  5981  003A84  0012               	return		;funcret
  5982  003A86                     __end_of_I2C_2_Master_Start:
  5983                           	callstack 0
  5984                           
  5985 ;; *************** function _I2C_2_Master_RepStart *****************
  5986 ;; Defined at:
  5987 ;;		line 46 in file "I2C.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;		None
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;Total ram usage:        0 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 8
  6008 ;; This function calls:
  6009 ;;		_I2C_2_Master_Idle
  6010 ;; This function is called by:
  6011 ;;		_colourclick_readR
  6012 ;;		_colourclick_readG
  6013 ;;		_colourclick_readB
  6014 ;;		_colourclick_readC
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text28
  6019  003A86                     __ptext28:
  6020                           	callstack 0
  6021  003A86                     _I2C_2_Master_RepStart:
  6022                           	callstack 20
  6023  003A86                     
  6024                           ;I2C.c: 47:   I2C_2_Master_Idle();
  6025  003A86  EC22  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6026  003A8A                     
  6027                           ;I2C.c: 48:   SSP2CON2bits.RSEN = 1;
  6028  003A8A  010E               	movlb	14	; () banked
  6029  003A8C  83DA               	bsf	218,1,b	;volatile
  6030  003A8E                     
  6031                           ; BSR set to: 14
  6032  003A8E  0012               	return		;funcret
  6033  003A90                     __end_of_I2C_2_Master_RepStart:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _I2C_2_Master_Read *****************
  6037 ;; Defined at:
  6038 ;;		line 73 in file "I2C.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  ack             1    wreg     unsigned char 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  ack             1   11[COMRAM] unsigned char 
  6043 ;;  tmp             1   12[COMRAM] unsigned char 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      unsigned char 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;Total ram usage:        3 bytes
  6058 ;; Hardware stack levels used: 1
  6059 ;; Hardware stack levels required when called: 8
  6060 ;; This function calls:
  6061 ;;		_I2C_2_Master_Idle
  6062 ;; This function is called by:
  6063 ;;		_colourclick_readR
  6064 ;;		_colourclick_readG
  6065 ;;		_colourclick_readB
  6066 ;;		_colourclick_readC
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text29
  6071  0037A0                     __ptext29:
  6072                           	callstack 0
  6073  0037A0                     _I2C_2_Master_Read:
  6074                           	callstack 20
  6075                           
  6076                           ; BSR set to: 14
  6077                           ;incstack = 0
  6078                           ;I2C_2_Master_Read@ack stored from wreg
  6079  0037A0  6E0C               	movwf	I2C_2_Master_Read@ack^0,c
  6080  0037A2                     
  6081                           ;I2C.c: 74:   unsigned char tmp;;I2C.c: 75:   I2C_2_Master_Idle();
  6082  0037A2  EC22  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6083  0037A6                     
  6084                           ;I2C.c: 76:   SSP2CON2bits.RCEN = 1;
  6085  0037A6  010E               	movlb	14	; () banked
  6086  0037A8  87DA               	bsf	218,3,b	;volatile
  6087                           
  6088                           ;I2C.c: 77:   I2C_2_Master_Idle();
  6089  0037AA  EC22  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6090  0037AE                     
  6091                           ;I2C.c: 78:   tmp = SSP2BUF;
  6092  0037AE  CED5 F00D          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6093                           
  6094                           ;I2C.c: 79:   I2C_2_Master_Idle();
  6095  0037B2  EC22  F01C         	call	_I2C_2_Master_Idle	;wreg free
  6096  0037B6                     
  6097                           ;I2C.c: 80:   SSP2CON2bits.ACKDT = !ack;
  6098  0037B6  500C               	movf	I2C_2_Master_Read@ack^0,w,c
  6099  0037B8  B4D8               	btfsc	status,2,c
  6100  0037BA  EFE1  F01B         	goto	u2531
  6101  0037BE  EFE5  F01B         	goto	u2530
  6102  0037C2                     u2531:
  6103  0037C2  6A0B               	clrf	??_I2C_2_Master_Read^0,c
  6104  0037C4  2A0B               	incf	??_I2C_2_Master_Read^0,f,c
  6105  0037C6  EFE6  F01B         	goto	u2548
  6106  0037CA                     u2530:
  6107  0037CA  6A0B               	clrf	??_I2C_2_Master_Read^0,c
  6108  0037CC                     u2548:
  6109  0037CC  3A0B               	swapf	??_I2C_2_Master_Read^0,f,c
  6110  0037CE  460B               	rlncf	??_I2C_2_Master_Read^0,f,c
  6111  0037D0  010E               	movlb	14	; () banked
  6112  0037D2  51DA               	movf	218,w,b	;volatile
  6113  0037D4  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
  6114  0037D6  0BDF               	andlw	-33
  6115  0037D8  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
  6116  0037DA  6FDA               	movwf	218,b	;volatile
  6117  0037DC                     
  6118                           ; BSR set to: 14
  6119                           ;I2C.c: 81:   SSP2CON2bits.ACKEN = 1;
  6120  0037DC  89DA               	bsf	218,4,b	;volatile
  6121  0037DE                     
  6122                           ; BSR set to: 14
  6123                           ;I2C.c: 82:   return tmp;
  6124  0037DE  500D               	movf	I2C_2_Master_Read@tmp^0,w,c
  6125  0037E0                     
  6126                           ; BSR set to: 14
  6127  0037E0  0012               	return		;funcret
  6128  0037E2                     __end_of_I2C_2_Master_Read:
  6129                           	callstack 0
  6130                           
  6131 ;; *************** function _I2C_2_Master_Idle *****************
  6132 ;; Defined at:
  6133 ;;		line 29 in file "I2C.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;		None
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;		None
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      void 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6151 ;;Total ram usage:        1 bytes
  6152 ;; Hardware stack levels used: 1
  6153 ;; Hardware stack levels required when called: 7
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_I2C_2_Master_Start
  6158 ;;		_I2C_2_Master_RepStart
  6159 ;;		_I2C_2_Master_Stop
  6160 ;;		_I2C_2_Master_Write
  6161 ;;		_I2C_2_Master_Read
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           	psect	text30
  6166  003844                     __ptext30:
  6167                           	callstack 0
  6168  003844                     _I2C_2_Master_Idle:
  6169                           	callstack 18
  6170  003844                     l437:
  6171  003844  010E               	movlb	14	; () banked
  6172  003846  B5D8               	btfsc	216,2,b	;volatile
  6173  003848  EF28  F01C         	goto	u2511
  6174  00384C  EF2A  F01C         	goto	u2510
  6175  003850                     u2511:
  6176  003850  EF22  F01C         	goto	l437
  6177  003854                     u2510:
  6178  003854                     
  6179                           ; BSR set to: 14
  6180  003854  CEDA F00A          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6181  003858  0E1F               	movlw	31
  6182  00385A  160A               	andwf	??_I2C_2_Master_Idle^0,f,c
  6183  00385C  A4D8               	btfss	status,2,c
  6184  00385E  EF33  F01C         	goto	u2521
  6185  003862  EF35  F01C         	goto	u2520
  6186  003866                     u2521:
  6187  003866  EF22  F01C         	goto	l437
  6188  00386A                     u2520:
  6189  00386A                     
  6190                           ; BSR set to: 14
  6191  00386A  0012               	return		;funcret
  6192  00386C                     __end_of_I2C_2_Master_Idle:
  6193                           	callstack 0
  6194                           
  6195 ;; *************** function _colourclickLEDs_C *****************
  6196 ;; Defined at:
  6197 ;;		line 46 in file "buttons_n_LEDs.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;  tog             1    wreg     unsigned char 
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  tog             1    9[COMRAM] unsigned char 
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  1    wreg      void 
  6204 ;; Registers used:
  6205 ;;		wreg
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6215 ;;Total ram usage:        1 bytes
  6216 ;; Hardware stack levels used: 1
  6217 ;; Hardware stack levels required when called: 7
  6218 ;; This function calls:
  6219 ;;		Nothing
  6220 ;; This function is called by:
  6221 ;;		_main
  6222 ;;		_colourclick_readRGBC2
  6223 ;;		_colourclick_calibration
  6224 ;;		_colourclickLEDs_init
  6225 ;;		_colourcards_testingRGBC
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229                           	psect	text31
  6230  003902                     __ptext31:
  6231                           	callstack 0
  6232  003902                     _colourclickLEDs_C:
  6233                           	callstack 21
  6234                           
  6235                           ; BSR set to: 14
  6236                           ;incstack = 0
  6237                           ;colourclickLEDs_C@tog stored from wreg
  6238  003902  6E0A               	movwf	colourclickLEDs_C@tog^0,c
  6239  003904                     
  6240                           ;buttons_n_LEDs.c: 47:     LATGbits.LATG1 = tog;
  6241  003904  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
  6242  003906  D002               	bra	u3635
  6243  003908  927F               	bcf	127,1,c	;volatile
  6244  00390A  D001               	bra	u3636
  6245  00390C                     u3635:
  6246  00390C  827F               	bsf	127,1,c	;volatile
  6247  00390E                     u3636:
  6248                           
  6249                           ;buttons_n_LEDs.c: 48:     LATAbits.LATA4 = tog;
  6250  00390E  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
  6251  003910  D002               	bra	u3645
  6252  003912  9879               	bcf	121,4,c	;volatile
  6253  003914  D001               	bra	u3646
  6254  003916                     u3645:
  6255  003916  8879               	bsf	121,4,c	;volatile
  6256  003918                     u3646:
  6257                           
  6258                           ;buttons_n_LEDs.c: 49:     LATFbits.LATF7 = tog;
  6259  003918  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
  6260  00391A  D002               	bra	u3655
  6261  00391C  9E7E               	bcf	126,7,c	;volatile
  6262  00391E  D001               	bra	u3656
  6263  003920                     u3655:
  6264  003920  8E7E               	bsf	126,7,c	;volatile
  6265  003922                     u3656:
  6266  003922  0012               	return		;funcret
  6267  003924                     __end_of_colourclickLEDs_C:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function _colourcards_normaliseRGBC *****************
  6271 ;; Defined at:
  6272 ;;		line 207 in file "colour_cards.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  abs             2   13[BANK0 ] PTR struct .
  6275 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
  6276 ;;  rel             2   15[BANK0 ] PTR struct .
  6277 ;;		 -> colourcards_testingRGBC@rel(12), colourcards_readRGBC@rel(12), 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  C               2   23[BANK0 ] unsigned int 
  6280 ;;  B               2   21[BANK0 ] unsigned int 
  6281 ;;  G               2   19[BANK0 ] unsigned int 
  6282 ;;  R               2   17[BANK0 ] unsigned int 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1    wreg      void 
  6285 ;; Registers used:
  6286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6292 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6295 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6296 ;;Total ram usage:       12 bytes
  6297 ;; Hardware stack levels used: 1
  6298 ;; Hardware stack levels required when called: 8
  6299 ;; This function calls:
  6300 ;;		___fldiv
  6301 ;;		___xxtofl
  6302 ;; This function is called by:
  6303 ;;		_colourcards_readRGBC
  6304 ;;		_colourcards_testingRGBC
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text32
  6309  002CEE                     __ptext32:
  6310                           	callstack 0
  6311  002CEE                     _colourcards_normaliseRGBC:
  6312                           	callstack 21
  6313  002CEE                     
  6314                           ;colour_cards.c: 208:     unsigned int R = abs->R;
  6315  002CEE  C06D  FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
  6316  002CF2  C06E  FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
  6317  002CF6  CFDE F071          	movff	postinc2,colourcards_normaliseRGBC@R
  6318  002CFA  CFDD F072          	movff	postdec2,colourcards_normaliseRGBC@R+1
  6319  002CFE                     
  6320                           ;colour_cards.c: 209:     unsigned int G = abs->G;
  6321  002CFE  0100               	movlb	0	; () banked
  6322  002D00  EE20 F002          	lfsr	2,2
  6323  002D04  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  6324  002D06  26D9               	addwf	fsr2l,f,c
  6325  002D08  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  6326  002D0A  22DA               	addwfc	fsr2h,f,c
  6327  002D0C  CFDE F073          	movff	postinc2,colourcards_normaliseRGBC@G
  6328  002D10  CFDD F074          	movff	postdec2,colourcards_normaliseRGBC@G+1
  6329  002D14                     
  6330                           ; BSR set to: 0
  6331                           ;colour_cards.c: 210:     unsigned int B = abs->B;
  6332  002D14  EE20 F004          	lfsr	2,4
  6333  002D18  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  6334  002D1A  26D9               	addwf	fsr2l,f,c
  6335  002D1C  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  6336  002D1E  22DA               	addwfc	fsr2h,f,c
  6337  002D20  CFDE F075          	movff	postinc2,colourcards_normaliseRGBC@B
  6338  002D24  CFDD F076          	movff	postdec2,colourcards_normaliseRGBC@B+1
  6339  002D28                     
  6340                           ; BSR set to: 0
  6341                           ;colour_cards.c: 211:     unsigned int C = abs->C;
  6342  002D28  EE20 F006          	lfsr	2,6
  6343  002D2C  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  6344  002D2E  26D9               	addwf	fsr2l,f,c
  6345  002D30  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  6346  002D32  22DA               	addwfc	fsr2h,f,c
  6347  002D34  CFDE F077          	movff	postinc2,colourcards_normaliseRGBC@C
  6348  002D38  CFDD F078          	movff	postdec2,colourcards_normaliseRGBC@C+1
  6349  002D3C                     
  6350                           ; BSR set to: 0
  6351                           ;colour_cards.c: 213:     rel->R = (float)R/(float)C;
  6352  002D3C  C071  F00A         	movff	colourcards_normaliseRGBC@R,___xxtofl@val
  6353  002D40  C072  F00B         	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
  6354  002D44  6A0C               	clrf	(___xxtofl@val+2)^0,c
  6355  002D46  6A0D               	clrf	(___xxtofl@val+3)^0,c
  6356  002D48  0E00               	movlw	0
  6357  002D4A  EC9D  F015         	call	___xxtofl
  6358  002D4E  C00A  F041         	movff	?___xxtofl,___fldiv@b
  6359  002D52  C00B  F042         	movff	?___xxtofl+1,___fldiv@b+1
  6360  002D56  C00C  F043         	movff	?___xxtofl+2,___fldiv@b+2
  6361  002D5A  C00D  F044         	movff	?___xxtofl+3,___fldiv@b+3
  6362  002D5E  C077  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  6363  002D62  C078  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  6364  002D66  6A0C               	clrf	(___xxtofl@val+2)^0,c
  6365  002D68  6A0D               	clrf	(___xxtofl@val+3)^0,c
  6366  002D6A  0E00               	movlw	0
  6367  002D6C  EC9D  F015         	call	___xxtofl
  6368  002D70  C00A  F045         	movff	?___xxtofl,___fldiv@a
  6369  002D74  C00B  F046         	movff	?___xxtofl+1,___fldiv@a+1
  6370  002D78  C00C  F047         	movff	?___xxtofl+2,___fldiv@a+2
  6371  002D7C  C00D  F048         	movff	?___xxtofl+3,___fldiv@a+3
  6372  002D80  ECCC  F00F         	call	___fldiv	;wreg free
  6373  002D84  C06F  FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
  6374  002D88  C070  FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
  6375  002D8C  C041  FFDE         	movff	?___fldiv,postinc2
  6376  002D90  C042  FFDE         	movff	?___fldiv+1,postinc2
  6377  002D94  C043  FFDE         	movff	?___fldiv+2,postinc2
  6378  002D98  C044  FFDE         	movff	?___fldiv+3,postinc2
  6379  002D9C                     
  6380                           ;colour_cards.c: 214:     rel->G = (float)G/(float)C;
  6381  002D9C  C073  F00A         	movff	colourcards_normaliseRGBC@G,___xxtofl@val
  6382  002DA0  C074  F00B         	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
  6383  002DA4  6A0C               	clrf	(___xxtofl@val+2)^0,c
  6384  002DA6  6A0D               	clrf	(___xxtofl@val+3)^0,c
  6385  002DA8  0E00               	movlw	0
  6386  002DAA  EC9D  F015         	call	___xxtofl
  6387  002DAE  C00A  F041         	movff	?___xxtofl,___fldiv@b
  6388  002DB2  C00B  F042         	movff	?___xxtofl+1,___fldiv@b+1
  6389  002DB6  C00C  F043         	movff	?___xxtofl+2,___fldiv@b+2
  6390  002DBA  C00D  F044         	movff	?___xxtofl+3,___fldiv@b+3
  6391  002DBE  C077  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  6392  002DC2  C078  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  6393  002DC6  6A0C               	clrf	(___xxtofl@val+2)^0,c
  6394  002DC8  6A0D               	clrf	(___xxtofl@val+3)^0,c
  6395  002DCA  0E00               	movlw	0
  6396  002DCC  EC9D  F015         	call	___xxtofl
  6397  002DD0  C00A  F045         	movff	?___xxtofl,___fldiv@a
  6398  002DD4  C00B  F046         	movff	?___xxtofl+1,___fldiv@a+1
  6399  002DD8  C00C  F047         	movff	?___xxtofl+2,___fldiv@a+2
  6400  002DDC  C00D  F048         	movff	?___xxtofl+3,___fldiv@a+3
  6401  002DE0  ECCC  F00F         	call	___fldiv	;wreg free
  6402  002DE4  0100               	movlb	0	; () banked
  6403  002DE6  EE20 F004          	lfsr	2,4
  6404  002DEA  516F               	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  6405  002DEC  26D9               	addwf	fsr2l,f,c
  6406  002DEE  5170               	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  6407  002DF0  22DA               	addwfc	fsr2h,f,c
  6408  002DF2  C041  FFDE         	movff	?___fldiv,postinc2
  6409  002DF6  C042  FFDE         	movff	?___fldiv+1,postinc2
  6410  002DFA  C043  FFDE         	movff	?___fldiv+2,postinc2
  6411  002DFE  C044  FFDE         	movff	?___fldiv+3,postinc2
  6412  002E02                     
  6413                           ; BSR set to: 0
  6414                           ;colour_cards.c: 215:     rel->B = (float)B/(float)C;
  6415  002E02  C075  F00A         	movff	colourcards_normaliseRGBC@B,___xxtofl@val
  6416  002E06  C076  F00B         	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
  6417  002E0A  6A0C               	clrf	(___xxtofl@val+2)^0,c
  6418  002E0C  6A0D               	clrf	(___xxtofl@val+3)^0,c
  6419  002E0E  0E00               	movlw	0
  6420  002E10  EC9D  F015         	call	___xxtofl
  6421  002E14  C00A  F041         	movff	?___xxtofl,___fldiv@b
  6422  002E18  C00B  F042         	movff	?___xxtofl+1,___fldiv@b+1
  6423  002E1C  C00C  F043         	movff	?___xxtofl+2,___fldiv@b+2
  6424  002E20  C00D  F044         	movff	?___xxtofl+3,___fldiv@b+3
  6425  002E24  C077  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  6426  002E28  C078  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  6427  002E2C  6A0C               	clrf	(___xxtofl@val+2)^0,c
  6428  002E2E  6A0D               	clrf	(___xxtofl@val+3)^0,c
  6429  002E30  0E00               	movlw	0
  6430  002E32  EC9D  F015         	call	___xxtofl
  6431  002E36  C00A  F045         	movff	?___xxtofl,___fldiv@a
  6432  002E3A  C00B  F046         	movff	?___xxtofl+1,___fldiv@a+1
  6433  002E3E  C00C  F047         	movff	?___xxtofl+2,___fldiv@a+2
  6434  002E42  C00D  F048         	movff	?___xxtofl+3,___fldiv@a+3
  6435  002E46  ECCC  F00F         	call	___fldiv	;wreg free
  6436  002E4A  0100               	movlb	0	; () banked
  6437  002E4C  EE20 F008          	lfsr	2,8
  6438  002E50  516F               	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  6439  002E52  26D9               	addwf	fsr2l,f,c
  6440  002E54  5170               	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  6441  002E56  22DA               	addwfc	fsr2h,f,c
  6442  002E58  C041  FFDE         	movff	?___fldiv,postinc2
  6443  002E5C  C042  FFDE         	movff	?___fldiv+1,postinc2
  6444  002E60  C043  FFDE         	movff	?___fldiv+2,postinc2
  6445  002E64  C044  FFDE         	movff	?___fldiv+3,postinc2
  6446  002E68                     
  6447                           ; BSR set to: 0
  6448  002E68  0012               	return		;funcret
  6449  002E6A                     __end_of_colourcards_normaliseRGBC:
  6450                           	callstack 0
  6451                           
  6452 ;; *************** function ___xxtofl *****************
  6453 ;; Defined at:
  6454 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  sign            1    wreg     unsigned char 
  6457 ;;  val             4    9[COMRAM] long 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  sign            1   17[COMRAM] unsigned char 
  6460 ;;  arg             4   19[COMRAM] unsigned long 
  6461 ;;  exp             1   18[COMRAM] unsigned char 
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  4    9[COMRAM] unsigned char 
  6464 ;; Registers used:
  6465 ;;		wreg, status,2, status,0
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6473 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6474 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6475 ;;Total ram usage:       14 bytes
  6476 ;; Hardware stack levels used: 1
  6477 ;; Hardware stack levels required when called: 7
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_colourcards_normaliseRGBC
  6482 ;;		_left
  6483 ;;		_right
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text33
  6488  002B3A                     __ptext33:
  6489                           	callstack 0
  6490  002B3A                     ___xxtofl:
  6491                           	callstack 20
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;incstack = 0
  6495                           ;___xxtofl@sign stored from wreg
  6496  002B3A  6E12               	movwf	___xxtofl@sign^0,c
  6497  002B3C  5012               	movf	___xxtofl@sign^0,w,c
  6498  002B3E  B4D8               	btfsc	status,2,c
  6499  002B40  EFA4  F015         	goto	u3531
  6500  002B44  EFA6  F015         	goto	u3530
  6501  002B48                     u3531:
  6502  002B48  EFC8  F015         	goto	l1402
  6503  002B4C                     u3530:
  6504  002B4C  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  6505  002B4E  EFAD  F015         	goto	u3540
  6506  002B52  EFAB  F015         	goto	u3541
  6507  002B56                     u3541:
  6508  002B56  EFC8  F015         	goto	l1402
  6509  002B5A                     u3540:
  6510  002B5A  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
  6511  002B5E  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
  6512  002B62  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
  6513  002B66  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
  6514  002B6A  1E0E               	comf	??___xxtofl^0,f,c
  6515  002B6C  1E0F               	comf	(??___xxtofl+1)^0,f,c
  6516  002B6E  1E10               	comf	(??___xxtofl+2)^0,f,c
  6517  002B70  1E11               	comf	(??___xxtofl+3)^0,f,c
  6518  002B72  2A0E               	incf	??___xxtofl^0,f,c
  6519  002B74  0E00               	movlw	0
  6520  002B76  220F               	addwfc	(??___xxtofl+1)^0,f,c
  6521  002B78  2210               	addwfc	(??___xxtofl+2)^0,f,c
  6522  002B7A  2211               	addwfc	(??___xxtofl+3)^0,f,c
  6523  002B7C  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
  6524  002B80  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
  6525  002B84  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
  6526  002B88  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
  6527  002B8C  EFD0  F015         	goto	l3679
  6528  002B90                     l1402:
  6529  002B90  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
  6530  002B94  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6531  002B98  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6532  002B9C  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6533  002BA0                     l3679:
  6534  002BA0  500A               	movf	___xxtofl@val^0,w,c
  6535  002BA2  100B               	iorwf	(___xxtofl@val+1)^0,w,c
  6536  002BA4  100C               	iorwf	(___xxtofl@val+2)^0,w,c
  6537  002BA6  100D               	iorwf	(___xxtofl@val+3)^0,w,c
  6538  002BA8  A4D8               	btfss	status,2,c
  6539  002BAA  EFD9  F015         	goto	u3551
  6540  002BAE  EFDB  F015         	goto	u3550
  6541  002BB2                     u3551:
  6542  002BB2  EFE5  F015         	goto	l3685
  6543  002BB6                     u3550:
  6544  002BB6  0E00               	movlw	0
  6545  002BB8  6E0A               	movwf	?___xxtofl^0,c
  6546  002BBA  0E00               	movlw	0
  6547  002BBC  6E0B               	movwf	(?___xxtofl+1)^0,c
  6548  002BBE  0E00               	movlw	0
  6549  002BC0  6E0C               	movwf	(?___xxtofl+2)^0,c
  6550  002BC2  0E00               	movlw	0
  6551  002BC4  6E0D               	movwf	(?___xxtofl+3)^0,c
  6552  002BC6  EF76  F016         	goto	l1405
  6553  002BCA                     l3685:
  6554  002BCA  0E96               	movlw	150
  6555  002BCC  6E13               	movwf	___xxtofl@exp^0,c
  6556  002BCE  EFEF  F015         	goto	l3689
  6557  002BD2                     l3687:
  6558  002BD2  2A13               	incf	___xxtofl@exp^0,f,c
  6559  002BD4  90D8               	bcf	status,0,c
  6560  002BD6  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  6561  002BD8  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  6562  002BDA  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  6563  002BDC  3214               	rrcf	___xxtofl@arg^0,f,c
  6564  002BDE                     l3689:
  6565  002BDE  0E00               	movlw	0
  6566  002BE0  1414               	andwf	___xxtofl@arg^0,w,c
  6567  002BE2  6E0E               	movwf	??___xxtofl^0,c
  6568  002BE4  0E00               	movlw	0
  6569  002BE6  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  6570  002BE8  6E0F               	movwf	(??___xxtofl+1)^0,c
  6571  002BEA  0E00               	movlw	0
  6572  002BEC  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  6573  002BEE  6E10               	movwf	(??___xxtofl+2)^0,c
  6574  002BF0  0EFE               	movlw	254
  6575  002BF2  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  6576  002BF4  6E11               	movwf	(??___xxtofl+3)^0,c
  6577  002BF6  500E               	movf	??___xxtofl^0,w,c
  6578  002BF8  100F               	iorwf	(??___xxtofl+1)^0,w,c
  6579  002BFA  1010               	iorwf	(??___xxtofl+2)^0,w,c
  6580  002BFC  1011               	iorwf	(??___xxtofl+3)^0,w,c
  6581  002BFE  A4D8               	btfss	status,2,c
  6582  002C00  EF04  F016         	goto	u3561
  6583  002C04  EF06  F016         	goto	u3560
  6584  002C08                     u3561:
  6585  002C08  EFE9  F015         	goto	l3687
  6586  002C0C                     u3560:
  6587  002C0C  EF14  F016         	goto	l1409
  6588  002C10                     l3691:
  6589  002C10  2A13               	incf	___xxtofl@exp^0,f,c
  6590  002C12  0E01               	movlw	1
  6591  002C14  2614               	addwf	___xxtofl@arg^0,f,c
  6592  002C16  0E00               	movlw	0
  6593  002C18  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
  6594  002C1A  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
  6595  002C1C  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
  6596  002C1E  90D8               	bcf	status,0,c
  6597  002C20  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  6598  002C22  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  6599  002C24  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  6600  002C26  3214               	rrcf	___xxtofl@arg^0,f,c
  6601  002C28                     l1409:
  6602  002C28  0E00               	movlw	0
  6603  002C2A  1414               	andwf	___xxtofl@arg^0,w,c
  6604  002C2C  6E0E               	movwf	??___xxtofl^0,c
  6605  002C2E  0E00               	movlw	0
  6606  002C30  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  6607  002C32  6E0F               	movwf	(??___xxtofl+1)^0,c
  6608  002C34  0E00               	movlw	0
  6609  002C36  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  6610  002C38  6E10               	movwf	(??___xxtofl+2)^0,c
  6611  002C3A  0EFF               	movlw	255
  6612  002C3C  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  6613  002C3E  6E11               	movwf	(??___xxtofl+3)^0,c
  6614  002C40  500E               	movf	??___xxtofl^0,w,c
  6615  002C42  100F               	iorwf	(??___xxtofl+1)^0,w,c
  6616  002C44  1010               	iorwf	(??___xxtofl+2)^0,w,c
  6617  002C46  1011               	iorwf	(??___xxtofl+3)^0,w,c
  6618  002C48  A4D8               	btfss	status,2,c
  6619  002C4A  EF29  F016         	goto	u3571
  6620  002C4E  EF2B  F016         	goto	u3570
  6621  002C52                     u3571:
  6622  002C52  EF08  F016         	goto	l3691
  6623  002C56                     u3570:
  6624  002C56  EF33  F016         	goto	l3699
  6625  002C5A                     l3697:
  6626  002C5A  0613               	decf	___xxtofl@exp^0,f,c
  6627  002C5C  90D8               	bcf	status,0,c
  6628  002C5E  3614               	rlcf	___xxtofl@arg^0,f,c
  6629  002C60  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
  6630  002C62  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
  6631  002C64  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
  6632  002C66                     l3699:
  6633  002C66  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
  6634  002C68  EF38  F016         	goto	u3581
  6635  002C6C  EF3A  F016         	goto	u3580
  6636  002C70                     u3581:
  6637  002C70  EF42  F016         	goto	l1416
  6638  002C74                     u3580:
  6639  002C74  0E02               	movlw	2
  6640  002C76  6013               	cpfslt	___xxtofl@exp^0,c
  6641  002C78  EF40  F016         	goto	u3591
  6642  002C7C  EF42  F016         	goto	u3590
  6643  002C80                     u3591:
  6644  002C80  EF2D  F016         	goto	l3697
  6645  002C84                     u3590:
  6646  002C84                     l1416:
  6647  002C84  B013               	btfsc	___xxtofl@exp^0,0,c
  6648  002C86  EF47  F016         	goto	u3601
  6649  002C8A  EF49  F016         	goto	u3600
  6650  002C8E                     u3601:
  6651  002C8E  EF4A  F016         	goto	l3705
  6652  002C92                     u3600:
  6653  002C92  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
  6654  002C94                     l3705:
  6655  002C94  90D8               	bcf	status,0,c
  6656  002C96  3213               	rrcf	___xxtofl@exp^0,f,c
  6657  002C98  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
  6658  002C9C  6A0F               	clrf	(??___xxtofl+1)^0,c
  6659  002C9E  6A10               	clrf	(??___xxtofl+2)^0,c
  6660  002CA0  6A11               	clrf	(??___xxtofl+3)^0,c
  6661  002CA2  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
  6662  002CA6  6A10               	clrf	(??___xxtofl+2)^0,c
  6663  002CA8  6A0F               	clrf	(??___xxtofl+1)^0,c
  6664  002CAA  6A0E               	clrf	??___xxtofl^0,c
  6665  002CAC  500E               	movf	??___xxtofl^0,w,c
  6666  002CAE  1214               	iorwf	___xxtofl@arg^0,f,c
  6667  002CB0  500F               	movf	(??___xxtofl+1)^0,w,c
  6668  002CB2  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
  6669  002CB4  5010               	movf	(??___xxtofl+2)^0,w,c
  6670  002CB6  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
  6671  002CB8  5011               	movf	(??___xxtofl+3)^0,w,c
  6672  002CBA  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
  6673  002CBC  5012               	movf	___xxtofl@sign^0,w,c
  6674  002CBE  B4D8               	btfsc	status,2,c
  6675  002CC0  EF64  F016         	goto	u3611
  6676  002CC4  EF66  F016         	goto	u3610
  6677  002CC8                     u3611:
  6678  002CC8  EF6E  F016         	goto	l3715
  6679  002CCC                     u3610:
  6680  002CCC  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  6681  002CCE  EF6D  F016         	goto	u3620
  6682  002CD2  EF6B  F016         	goto	u3621
  6683  002CD6                     u3621:
  6684  002CD6  EF6E  F016         	goto	l3715
  6685  002CDA                     u3620:
  6686  002CDA  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
  6687  002CDC                     l3715:
  6688  002CDC  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
  6689  002CE0  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
  6690  002CE4  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
  6691  002CE8  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
  6692  002CEC                     l1405:
  6693  002CEC  0012               	return		;funcret
  6694  002CEE                     __end_of___xxtofl:
  6695                           	callstack 0
  6696                           
  6697 ;; *************** function ___fldiv *****************
  6698 ;; Defined at:
  6699 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  b               4   64[COMRAM] unsigned char 
  6702 ;;  a               4   68[COMRAM] unsigned char 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  grs             4    7[BANK0 ] unsigned long 
  6705 ;;  rem             4    0[BANK0 ] unsigned long 
  6706 ;;  new_exp         2    5[BANK0 ] short 
  6707 ;;  aexp            1   12[BANK0 ] unsigned char 
  6708 ;;  bexp            1   11[BANK0 ] unsigned char 
  6709 ;;  sign            1    4[BANK0 ] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  4   64[COMRAM] unsigned char 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2, status,0
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6719 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;Total ram usage:       25 bytes
  6724 ;; Hardware stack levels used: 1
  6725 ;; Hardware stack levels required when called: 7
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_colourcards_normaliseRGBC
  6730 ;;		_left
  6731 ;;		_right
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text34
  6736  001F98                     __ptext34:
  6737                           	callstack 0
  6738  001F98                     ___fldiv:
  6739                           	callstack 20
  6740  001F98  5044               	movf	(___fldiv@b+3)^0,w,c
  6741  001F9A  0B80               	andlw	128
  6742  001F9C  0100               	movlb	0	; () banked
  6743  001F9E  6F64               	movwf	___fldiv@sign& (0+255),b
  6744  001FA0  5044               	movf	(___fldiv@b+3)^0,w,c
  6745  001FA2  2444               	addwf	(___fldiv@b+3)^0,w,c
  6746  001FA4  6F6B               	movwf	___fldiv@bexp& (0+255),b
  6747  001FA6                     
  6748                           ; BSR set to: 0
  6749  001FA6  AE43               	btfss	(___fldiv@b+2)^0,7,c
  6750  001FA8  EFD8  F00F         	goto	u3061
  6751  001FAC  EFDA  F00F         	goto	u3060
  6752  001FB0                     u3061:
  6753  001FB0  EFDB  F00F         	goto	l3389
  6754  001FB4                     u3060:
  6755  001FB4                     
  6756                           ; BSR set to: 0
  6757  001FB4  816B               	bsf	___fldiv@bexp& (0+255),0,b
  6758  001FB6                     l3389:
  6759                           
  6760                           ; BSR set to: 0
  6761  001FB6  516B               	movf	___fldiv@bexp& (0+255),w,b
  6762  001FB8  B4D8               	btfsc	status,2,c
  6763  001FBA  EFE1  F00F         	goto	u3071
  6764  001FBE  EFE3  F00F         	goto	u3070
  6765  001FC2                     u3071:
  6766  001FC2  EFF8  F00F         	goto	l3399
  6767  001FC6                     u3070:
  6768  001FC6                     
  6769                           ; BSR set to: 0
  6770  001FC6  296B               	incf	___fldiv@bexp& (0+255),w,b
  6771  001FC8  A4D8               	btfss	status,2,c
  6772  001FCA  EFE9  F00F         	goto	u3081
  6773  001FCE  EFEB  F00F         	goto	u3080
  6774  001FD2                     u3081:
  6775  001FD2  EFF3  F00F         	goto	l3395
  6776  001FD6                     u3080:
  6777  001FD6                     
  6778                           ; BSR set to: 0
  6779  001FD6  0E00               	movlw	0
  6780  001FD8  6E41               	movwf	___fldiv@b^0,c
  6781  001FDA  0E00               	movlw	0
  6782  001FDC  6E42               	movwf	(___fldiv@b+1)^0,c
  6783  001FDE  0E00               	movlw	0
  6784  001FE0  6E43               	movwf	(___fldiv@b+2)^0,c
  6785  001FE2  0E00               	movlw	0
  6786  001FE4  6E44               	movwf	(___fldiv@b+3)^0,c
  6787  001FE6                     l3395:
  6788                           
  6789                           ; BSR set to: 0
  6790  001FE6  8E43               	bsf	(___fldiv@b+2)^0,7,c
  6791  001FE8                     
  6792                           ; BSR set to: 0
  6793  001FE8  0E00               	movlw	0
  6794  001FEA  6E44               	movwf	(___fldiv@b+3)^0,c
  6795  001FEC  EF00  F010         	goto	l3401
  6796  001FF0                     l3399:
  6797                           
  6798                           ; BSR set to: 0
  6799  001FF0  0E00               	movlw	0
  6800  001FF2  6E41               	movwf	___fldiv@b^0,c
  6801  001FF4  0E00               	movlw	0
  6802  001FF6  6E42               	movwf	(___fldiv@b+1)^0,c
  6803  001FF8  0E00               	movlw	0
  6804  001FFA  6E43               	movwf	(___fldiv@b+2)^0,c
  6805  001FFC  0E00               	movlw	0
  6806  001FFE  6E44               	movwf	(___fldiv@b+3)^0,c
  6807  002000                     l3401:
  6808                           
  6809                           ; BSR set to: 0
  6810  002000  5048               	movf	(___fldiv@a+3)^0,w,c
  6811  002002  0B80               	andlw	128
  6812  002004  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  6813  002006                     
  6814                           ; BSR set to: 0
  6815  002006  5048               	movf	(___fldiv@a+3)^0,w,c
  6816  002008  2448               	addwf	(___fldiv@a+3)^0,w,c
  6817  00200A  6F6C               	movwf	___fldiv@aexp& (0+255),b
  6818  00200C                     
  6819                           ; BSR set to: 0
  6820  00200C  AE47               	btfss	(___fldiv@a+2)^0,7,c
  6821  00200E  EF0B  F010         	goto	u3091
  6822  002012  EF0D  F010         	goto	u3090
  6823  002016                     u3091:
  6824  002016  EF0E  F010         	goto	l3409
  6825  00201A                     u3090:
  6826  00201A                     
  6827                           ; BSR set to: 0
  6828  00201A  816C               	bsf	___fldiv@aexp& (0+255),0,b
  6829  00201C                     l3409:
  6830                           
  6831                           ; BSR set to: 0
  6832  00201C  516C               	movf	___fldiv@aexp& (0+255),w,b
  6833  00201E  B4D8               	btfsc	status,2,c
  6834  002020  EF14  F010         	goto	u3101
  6835  002024  EF16  F010         	goto	u3100
  6836  002028                     u3101:
  6837  002028  EF2B  F010         	goto	l3419
  6838  00202C                     u3100:
  6839  00202C                     
  6840                           ; BSR set to: 0
  6841  00202C  296C               	incf	___fldiv@aexp& (0+255),w,b
  6842  00202E  A4D8               	btfss	status,2,c
  6843  002030  EF1C  F010         	goto	u3111
  6844  002034  EF1E  F010         	goto	u3110
  6845  002038                     u3111:
  6846  002038  EF26  F010         	goto	l3415
  6847  00203C                     u3110:
  6848  00203C                     
  6849                           ; BSR set to: 0
  6850  00203C  0E00               	movlw	0
  6851  00203E  6E45               	movwf	___fldiv@a^0,c
  6852  002040  0E00               	movlw	0
  6853  002042  6E46               	movwf	(___fldiv@a+1)^0,c
  6854  002044  0E00               	movlw	0
  6855  002046  6E47               	movwf	(___fldiv@a+2)^0,c
  6856  002048  0E00               	movlw	0
  6857  00204A  6E48               	movwf	(___fldiv@a+3)^0,c
  6858  00204C                     l3415:
  6859                           
  6860                           ; BSR set to: 0
  6861  00204C  8E47               	bsf	(___fldiv@a+2)^0,7,c
  6862  00204E                     
  6863                           ; BSR set to: 0
  6864  00204E  0E00               	movlw	0
  6865  002050  6E48               	movwf	(___fldiv@a+3)^0,c
  6866  002052  EF33  F010         	goto	l3421
  6867  002056                     l3419:
  6868                           
  6869                           ; BSR set to: 0
  6870  002056  0E00               	movlw	0
  6871  002058  6E45               	movwf	___fldiv@a^0,c
  6872  00205A  0E00               	movlw	0
  6873  00205C  6E46               	movwf	(___fldiv@a+1)^0,c
  6874  00205E  0E00               	movlw	0
  6875  002060  6E47               	movwf	(___fldiv@a+2)^0,c
  6876  002062  0E00               	movlw	0
  6877  002064  6E48               	movwf	(___fldiv@a+3)^0,c
  6878  002066                     l3421:
  6879                           
  6880                           ; BSR set to: 0
  6881  002066  5045               	movf	___fldiv@a^0,w,c
  6882  002068  1046               	iorwf	(___fldiv@a+1)^0,w,c
  6883  00206A  1047               	iorwf	(___fldiv@a+2)^0,w,c
  6884  00206C  1048               	iorwf	(___fldiv@a+3)^0,w,c
  6885  00206E  A4D8               	btfss	status,2,c
  6886  002070  EF3C  F010         	goto	u3121
  6887  002074  EF3E  F010         	goto	u3120
  6888  002078                     u3121:
  6889  002078  EF56  F010         	goto	l3433
  6890  00207C                     u3120:
  6891  00207C                     
  6892                           ; BSR set to: 0
  6893  00207C  0E00               	movlw	0
  6894  00207E  6E41               	movwf	___fldiv@b^0,c
  6895  002080  0E00               	movlw	0
  6896  002082  6E42               	movwf	(___fldiv@b+1)^0,c
  6897  002084  0E00               	movlw	0
  6898  002086  6E43               	movwf	(___fldiv@b+2)^0,c
  6899  002088  0E00               	movlw	0
  6900  00208A  6E44               	movwf	(___fldiv@b+3)^0,c
  6901  00208C                     
  6902                           ; BSR set to: 0
  6903  00208C  0E80               	movlw	128
  6904  00208E  1243               	iorwf	(___fldiv@b+2)^0,f,c
  6905  002090  0E7F               	movlw	127
  6906  002092  1244               	iorwf	(___fldiv@b+3)^0,f,c
  6907  002094                     l3427:
  6908                           
  6909                           ; BSR set to: 0
  6910  002094  5164               	movf	___fldiv@sign& (0+255),w,b
  6911  002096  1244               	iorwf	(___fldiv@b+3)^0,f,c
  6912  002098                     
  6913                           ; BSR set to: 0
  6914  002098  C041  F041         	movff	___fldiv@b,?___fldiv
  6915  00209C  C042  F042         	movff	___fldiv@b+1,?___fldiv+1
  6916  0020A0  C043  F043         	movff	___fldiv@b+2,?___fldiv+2
  6917  0020A4  C044  F044         	movff	___fldiv@b+3,?___fldiv+3
  6918  0020A8  EF99  F011         	goto	l1329
  6919  0020AC                     l3433:
  6920                           
  6921                           ; BSR set to: 0
  6922  0020AC  516B               	movf	___fldiv@bexp& (0+255),w,b
  6923  0020AE  A4D8               	btfss	status,2,c
  6924  0020B0  EF5C  F010         	goto	u3131
  6925  0020B4  EF5E  F010         	goto	u3130
  6926  0020B8                     u3131:
  6927  0020B8  EF68  F010         	goto	l3441
  6928  0020BC                     u3130:
  6929  0020BC                     
  6930                           ; BSR set to: 0
  6931  0020BC  0E00               	movlw	0
  6932  0020BE  6E41               	movwf	?___fldiv^0,c
  6933  0020C0  0E00               	movlw	0
  6934  0020C2  6E42               	movwf	(?___fldiv+1)^0,c
  6935  0020C4  0E00               	movlw	0
  6936  0020C6  6E43               	movwf	(?___fldiv+2)^0,c
  6937  0020C8  0E00               	movlw	0
  6938  0020CA  6E44               	movwf	(?___fldiv+3)^0,c
  6939  0020CC  EF99  F011         	goto	l1329
  6940  0020D0                     l3441:
  6941                           
  6942                           ; BSR set to: 0
  6943  0020D0  516C               	movf	___fldiv@aexp& (0+255),w,b
  6944  0020D2  C06B  F049         	movff	___fldiv@bexp,??___fldiv
  6945  0020D6  6A4A               	clrf	(??___fldiv+1)^0,c
  6946  0020D8  5E49               	subwf	??___fldiv^0,f,c
  6947  0020DA  0E00               	movlw	0
  6948  0020DC  5A4A               	subwfb	(??___fldiv+1)^0,f,c
  6949  0020DE  0E7F               	movlw	127
  6950  0020E0  2449               	addwf	??___fldiv^0,w,c
  6951  0020E2  6F65               	movwf	___fldiv@new_exp& (0+255),b
  6952  0020E4  0E00               	movlw	0
  6953  0020E6  204A               	addwfc	(??___fldiv+1)^0,w,c
  6954  0020E8  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6955  0020EA                     
  6956                           ; BSR set to: 0
  6957  0020EA  C041  F060         	movff	___fldiv@b,___fldiv@rem
  6958  0020EE  C042  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  6959  0020F2  C043  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  6960  0020F6  C044  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  6961  0020FA                     
  6962                           ; BSR set to: 0
  6963  0020FA  0E00               	movlw	0
  6964  0020FC  6E41               	movwf	___fldiv@b^0,c
  6965  0020FE  0E00               	movlw	0
  6966  002100  6E42               	movwf	(___fldiv@b+1)^0,c
  6967  002102  0E00               	movlw	0
  6968  002104  6E43               	movwf	(___fldiv@b+2)^0,c
  6969  002106  0E00               	movlw	0
  6970  002108  6E44               	movwf	(___fldiv@b+3)^0,c
  6971  00210A                     
  6972                           ; BSR set to: 0
  6973  00210A  0E00               	movlw	0
  6974  00210C  6F67               	movwf	___fldiv@grs& (0+255),b
  6975  00210E  0E00               	movlw	0
  6976  002110  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  6977  002112  0E00               	movlw	0
  6978  002114  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  6979  002116  0E00               	movlw	0
  6980  002118  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  6981  00211A                     
  6982                           ; BSR set to: 0
  6983  00211A  0E00               	movlw	0
  6984  00211C  6F6C               	movwf	___fldiv@aexp& (0+255),b
  6985  00211E  EFC9  F010         	goto	l1331
  6986  002122                     l3451:
  6987                           
  6988                           ; BSR set to: 0
  6989  002122  516C               	movf	___fldiv@aexp& (0+255),w,b
  6990  002124  B4D8               	btfsc	status,2,c
  6991  002126  EF97  F010         	goto	u3141
  6992  00212A  EF99  F010         	goto	u3140
  6993  00212E                     u3141:
  6994  00212E  EFB0  F010         	goto	l3459
  6995  002132                     u3140:
  6996  002132                     
  6997                           ; BSR set to: 0
  6998  002132  90D8               	bcf	status,0,c
  6999  002134  3760               	rlcf	___fldiv@rem& (0+255),f,b
  7000  002136  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7001  002138  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7002  00213A  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7003  00213C  90D8               	bcf	status,0,c
  7004  00213E  3641               	rlcf	___fldiv@b^0,f,c
  7005  002140  3642               	rlcf	(___fldiv@b+1)^0,f,c
  7006  002142  3643               	rlcf	(___fldiv@b+2)^0,f,c
  7007  002144  3644               	rlcf	(___fldiv@b+3)^0,f,c
  7008  002146                     
  7009                           ; BSR set to: 0
  7010  002146  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7011  002148  EFA8  F010         	goto	u3151
  7012  00214C  EFAA  F010         	goto	u3150
  7013  002150                     u3151:
  7014  002150  EFAB  F010         	goto	l1334
  7015  002154                     u3150:
  7016  002154                     
  7017                           ; BSR set to: 0
  7018  002154  8041               	bsf	___fldiv@b^0,0,c
  7019  002156                     l1334:
  7020                           
  7021                           ; BSR set to: 0
  7022  002156  90D8               	bcf	status,0,c
  7023  002158  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7024  00215A  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7025  00215C  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7026  00215E  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7027  002160                     l3459:
  7028                           
  7029                           ; BSR set to: 0
  7030  002160  5045               	movf	___fldiv@a^0,w,c
  7031  002162  5D60               	subwf	___fldiv@rem& (0+255),w,b
  7032  002164  5046               	movf	(___fldiv@a+1)^0,w,c
  7033  002166  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7034  002168  5047               	movf	(___fldiv@a+2)^0,w,c
  7035  00216A  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7036  00216C  5048               	movf	(___fldiv@a+3)^0,w,c
  7037  00216E  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7038  002170  A0D8               	btfss	status,0,c
  7039  002172  EFBD  F010         	goto	u3161
  7040  002176  EFBF  F010         	goto	u3160
  7041  00217A                     u3161:
  7042  00217A  EFC8  F010         	goto	l3465
  7043  00217E                     u3160:
  7044  00217E                     
  7045                           ; BSR set to: 0
  7046  00217E  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7047  002180                     
  7048                           ; BSR set to: 0
  7049  002180  5045               	movf	___fldiv@a^0,w,c
  7050  002182  5F60               	subwf	___fldiv@rem& (0+255),f,b
  7051  002184  5046               	movf	(___fldiv@a+1)^0,w,c
  7052  002186  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7053  002188  5047               	movf	(___fldiv@a+2)^0,w,c
  7054  00218A  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7055  00218C  5048               	movf	(___fldiv@a+3)^0,w,c
  7056  00218E  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7057  002190                     l3465:
  7058                           
  7059                           ; BSR set to: 0
  7060  002190  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  7061  002192                     l1331:
  7062                           
  7063                           ; BSR set to: 0
  7064  002192  0E19               	movlw	25
  7065  002194  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  7066  002196  EFCF  F010         	goto	u3171
  7067  00219A  EFD1  F010         	goto	u3170
  7068  00219E                     u3171:
  7069  00219E  EF91  F010         	goto	l3451
  7070  0021A2                     u3170:
  7071  0021A2                     
  7072                           ; BSR set to: 0
  7073  0021A2  5160               	movf	___fldiv@rem& (0+255),w,b
  7074  0021A4  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7075  0021A6  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7076  0021A8  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7077  0021AA  B4D8               	btfsc	status,2,c
  7078  0021AC  EFDA  F010         	goto	u3181
  7079  0021B0  EFDC  F010         	goto	u3180
  7080  0021B4                     u3181:
  7081  0021B4  EFF4  F010         	goto	l3477
  7082  0021B8                     u3180:
  7083  0021B8                     
  7084                           ; BSR set to: 0
  7085  0021B8  8167               	bsf	___fldiv@grs& (0+255),0,b
  7086  0021BA  EFF4  F010         	goto	l3477
  7087  0021BE                     l3471:
  7088                           
  7089                           ; BSR set to: 0
  7090  0021BE  90D8               	bcf	status,0,c
  7091  0021C0  3641               	rlcf	___fldiv@b^0,f,c
  7092  0021C2  3642               	rlcf	(___fldiv@b+1)^0,f,c
  7093  0021C4  3643               	rlcf	(___fldiv@b+2)^0,f,c
  7094  0021C6  3644               	rlcf	(___fldiv@b+3)^0,f,c
  7095  0021C8                     
  7096                           ; BSR set to: 0
  7097  0021C8  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7098  0021CA  EFE9  F010         	goto	u3191
  7099  0021CE  EFEB  F010         	goto	u3190
  7100  0021D2                     u3191:
  7101  0021D2  EFEC  F010         	goto	l1340
  7102  0021D6                     u3190:
  7103  0021D6                     
  7104                           ; BSR set to: 0
  7105  0021D6  8041               	bsf	___fldiv@b^0,0,c
  7106  0021D8                     l1340:
  7107                           
  7108                           ; BSR set to: 0
  7109  0021D8  90D8               	bcf	status,0,c
  7110  0021DA  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7111  0021DC  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7112  0021DE  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7113  0021E0  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7114  0021E2  0765               	decf	___fldiv@new_exp& (0+255),f,b
  7115  0021E4  A0D8               	btfss	status,0,c
  7116  0021E6  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7117  0021E8                     l3477:
  7118                           
  7119                           ; BSR set to: 0
  7120  0021E8  AE43               	btfss	(___fldiv@b+2)^0,7,c
  7121  0021EA  EFF9  F010         	goto	u3201
  7122  0021EE  EFFB  F010         	goto	u3200
  7123  0021F2                     u3201:
  7124  0021F2  EFDF  F010         	goto	l3471
  7125  0021F6                     u3200:
  7126  0021F6                     
  7127                           ; BSR set to: 0
  7128  0021F6  0E00               	movlw	0
  7129  0021F8  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7130  0021FA                     
  7131                           ; BSR set to: 0
  7132  0021FA  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7133  0021FC  EF02  F011         	goto	u3211
  7134  002200  EF04  F011         	goto	u3210
  7135  002204                     u3211:
  7136  002204  EF28  F011         	goto	l1342
  7137  002208                     u3210:
  7138  002208                     
  7139                           ; BSR set to: 0
  7140  002208  0EFF               	movlw	255
  7141  00220A  1567               	andwf	___fldiv@grs& (0+255),w,b
  7142  00220C  6E49               	movwf	??___fldiv^0,c
  7143  00220E  0EFF               	movlw	255
  7144  002210  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7145  002212  6E4A               	movwf	(??___fldiv+1)^0,c
  7146  002214  0EFF               	movlw	255
  7147  002216  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7148  002218  6E4B               	movwf	(??___fldiv+2)^0,c
  7149  00221A  0E7F               	movlw	127
  7150  00221C  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7151  00221E  6E4C               	movwf	(??___fldiv+3)^0,c
  7152  002220  5049               	movf	??___fldiv^0,w,c
  7153  002222  104A               	iorwf	(??___fldiv+1)^0,w,c
  7154  002224  104B               	iorwf	(??___fldiv+2)^0,w,c
  7155  002226  104C               	iorwf	(??___fldiv+3)^0,w,c
  7156  002228  B4D8               	btfsc	status,2,c
  7157  00222A  EF19  F011         	goto	u3221
  7158  00222E  EF1B  F011         	goto	u3220
  7159  002232                     u3221:
  7160  002232  EF1F  F011         	goto	l1343
  7161  002236                     u3220:
  7162  002236                     l3485:
  7163                           
  7164                           ; BSR set to: 0
  7165  002236  0E01               	movlw	1
  7166  002238  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7167  00223A  EF28  F011         	goto	l1342
  7168  00223E                     l1343:
  7169                           
  7170                           ; BSR set to: 0
  7171  00223E  A041               	btfss	___fldiv@b^0,0,c
  7172  002240  EF24  F011         	goto	u3231
  7173  002244  EF26  F011         	goto	u3230
  7174  002248                     u3231:
  7175  002248  EF28  F011         	goto	l1342
  7176  00224C                     u3230:
  7177  00224C  EF1B  F011         	goto	l3485
  7178  002250                     l1342:
  7179                           
  7180                           ; BSR set to: 0
  7181  002250  516C               	movf	___fldiv@aexp& (0+255),w,b
  7182  002252  B4D8               	btfsc	status,2,c
  7183  002254  EF2E  F011         	goto	u3241
  7184  002258  EF30  F011         	goto	u3240
  7185  00225C                     u3241:
  7186  00225C  EF54  F011         	goto	l3497
  7187  002260                     u3240:
  7188  002260                     
  7189                           ; BSR set to: 0
  7190  002260  0E01               	movlw	1
  7191  002262  2641               	addwf	___fldiv@b^0,f,c
  7192  002264  0E00               	movlw	0
  7193  002266  2242               	addwfc	(___fldiv@b+1)^0,f,c
  7194  002268  2243               	addwfc	(___fldiv@b+2)^0,f,c
  7195  00226A  2244               	addwfc	(___fldiv@b+3)^0,f,c
  7196  00226C                     
  7197                           ; BSR set to: 0
  7198  00226C  A044               	btfss	(___fldiv@b+3)^0,0,c
  7199  00226E  EF3B  F011         	goto	u3251
  7200  002272  EF3D  F011         	goto	u3250
  7201  002276                     u3251:
  7202  002276  EF54  F011         	goto	l3497
  7203  00227A                     u3250:
  7204  00227A                     
  7205                           ; BSR set to: 0
  7206  00227A  C041  F049         	movff	___fldiv@b,??___fldiv
  7207  00227E  C042  F04A         	movff	___fldiv@b+1,??___fldiv+1
  7208  002282  C043  F04B         	movff	___fldiv@b+2,??___fldiv+2
  7209  002286  C044  F04C         	movff	___fldiv@b+3,??___fldiv+3
  7210  00228A  344C               	rlcf	(??___fldiv+3)^0,w,c
  7211  00228C  324C               	rrcf	(??___fldiv+3)^0,f,c
  7212  00228E  324B               	rrcf	(??___fldiv+2)^0,f,c
  7213  002290  324A               	rrcf	(??___fldiv+1)^0,f,c
  7214  002292  3249               	rrcf	??___fldiv^0,f,c
  7215  002294  C049  F041         	movff	??___fldiv,___fldiv@b
  7216  002298  C04A  F042         	movff	??___fldiv+1,___fldiv@b+1
  7217  00229C  C04B  F043         	movff	??___fldiv+2,___fldiv@b+2
  7218  0022A0  C04C  F044         	movff	??___fldiv+3,___fldiv@b+3
  7219  0022A4                     
  7220                           ; BSR set to: 0
  7221  0022A4  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  7222  0022A6  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7223  0022A8                     l3497:
  7224                           
  7225                           ; BSR set to: 0
  7226  0022A8  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7227  0022AA  EF5F  F011         	goto	u3261
  7228  0022AE  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7229  0022B0  E108               	bnz	u3260
  7230  0022B2  2965               	incf	___fldiv@new_exp& (0+255),w,b
  7231  0022B4  A0D8               	btfss	status,0,c
  7232  0022B6  EF5F  F011         	goto	u3261
  7233  0022BA  EF61  F011         	goto	u3260
  7234  0022BE                     u3261:
  7235  0022BE  EF6C  F011         	goto	l3501
  7236  0022C2                     u3260:
  7237  0022C2                     
  7238                           ; BSR set to: 0
  7239  0022C2  0E00               	movlw	0
  7240  0022C4  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7241  0022C6  6965               	setf	___fldiv@new_exp& (0+255),b
  7242  0022C8  0E00               	movlw	0
  7243  0022CA  6E41               	movwf	___fldiv@b^0,c
  7244  0022CC  0E00               	movlw	0
  7245  0022CE  6E42               	movwf	(___fldiv@b+1)^0,c
  7246  0022D0  0E00               	movlw	0
  7247  0022D2  6E43               	movwf	(___fldiv@b+2)^0,c
  7248  0022D4  0E00               	movlw	0
  7249  0022D6  6E44               	movwf	(___fldiv@b+3)^0,c
  7250  0022D8                     l3501:
  7251                           
  7252                           ; BSR set to: 0
  7253  0022D8  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7254  0022DA  EF79  F011         	goto	u3270
  7255  0022DE  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7256  0022E0  E106               	bnz	u3271
  7257  0022E2  0565               	decf	___fldiv@new_exp& (0+255),w,b
  7258  0022E4  B0D8               	btfsc	status,0,c
  7259  0022E6  EF77  F011         	goto	u3271
  7260  0022EA  EF79  F011         	goto	u3270
  7261  0022EE                     u3271:
  7262  0022EE  EF87  F011         	goto	l3505
  7263  0022F2                     u3270:
  7264  0022F2                     
  7265                           ; BSR set to: 0
  7266  0022F2  0E00               	movlw	0
  7267  0022F4  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7268  0022F6  0E00               	movlw	0
  7269  0022F8  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7270  0022FA  0E00               	movlw	0
  7271  0022FC  6E41               	movwf	___fldiv@b^0,c
  7272  0022FE  0E00               	movlw	0
  7273  002300  6E42               	movwf	(___fldiv@b+1)^0,c
  7274  002302  0E00               	movlw	0
  7275  002304  6E43               	movwf	(___fldiv@b+2)^0,c
  7276  002306  0E00               	movlw	0
  7277  002308  6E44               	movwf	(___fldiv@b+3)^0,c
  7278  00230A  0E00               	movlw	0
  7279  00230C  6F64               	movwf	___fldiv@sign& (0+255),b
  7280  00230E                     l3505:
  7281                           
  7282                           ; BSR set to: 0
  7283  00230E  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  7284  002312                     
  7285                           ; BSR set to: 0
  7286  002312  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  7287  002314  EF8E  F011         	goto	u3281
  7288  002318  EF90  F011         	goto	u3280
  7289  00231C                     u3281:
  7290  00231C  EF93  F011         	goto	l3511
  7291  002320                     u3280:
  7292  002320                     
  7293                           ; BSR set to: 0
  7294  002320  8E43               	bsf	(___fldiv@b+2)^0,7,c
  7295  002322  EF94  F011         	goto	l3513
  7296  002326                     l3511:
  7297                           
  7298                           ; BSR set to: 0
  7299  002326  9E43               	bcf	(___fldiv@b+2)^0,7,c
  7300  002328                     l3513:
  7301                           
  7302                           ; BSR set to: 0
  7303  002328  90D8               	bcf	status,0,c
  7304  00232A  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  7305  00232C  6E44               	movwf	(___fldiv@b+3)^0,c
  7306  00232E  EF4A  F010         	goto	l3427
  7307  002332                     l1329:
  7308                           
  7309                           ; BSR set to: 0
  7310  002332  0012               	return		;funcret
  7311  002334                     __end_of___fldiv:
  7312                           	callstack 0
  7313                           
  7314 ;; *************** function _clearance *****************
  7315 ;; Defined at:
  7316 ;;		line 122 in file "DC_motors.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  mL              2   40[COMRAM] PTR struct .
  7319 ;;		 -> main@motorL(9), 
  7320 ;;  mR              2   42[COMRAM] PTR struct .
  7321 ;;		 -> main@motorR(9), 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7336 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7337 ;;Total ram usage:        6 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; Hardware stack levels required when called: 10
  7340 ;; This function calls:
  7341 ;;		_reverse
  7342 ;;		_stop
  7343 ;; This function is called by:
  7344 ;;		_colourcards_readRGBC
  7345 ;;		_DCmotors_testing
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text35
  7350  003432                     __ptext35:
  7351                           	callstack 0
  7352  003432                     _clearance:
  7353                           	callstack 19
  7354  003432                     
  7355                           ;DC_motors.c: 123:     LATDbits.LATD3 = 0;
  7356  003432  967C               	bcf	124,3,c	;volatile
  7357  003434                     
  7358                           ;DC_motors.c: 124:     reverse(mL, mR);
  7359  003434  C029  F023         	movff	clearance@mL,reverse@mL
  7360  003438  C02A  F024         	movff	clearance@mL+1,reverse@mL+1
  7361  00343C  C02B  F025         	movff	clearance@mR,reverse@mR
  7362  003440  C02C  F026         	movff	clearance@mR+1,reverse@mR+1
  7363  003444  EC5E  F019         	call	_reverse	;wreg free
  7364  003448                     
  7365                           ;DC_motors.c: 125:     _delay((unsigned long)((350)*(64000000/4000.0)));
  7366  003448  0E1D               	movlw	29
  7367  00344A  6E2E               	movwf	(??_clearance+1)^0,c
  7368  00344C  0E69               	movlw	105
  7369  00344E  6E2D               	movwf	??_clearance^0,c
  7370  003450  0EA5               	movlw	165
  7371  003452                     u6097:
  7372  003452  2EE8               	decfsz	wreg,f,c
  7373  003454  D7FE               	bra	u6097
  7374  003456  2E2D               	decfsz	??_clearance^0,f,c
  7375  003458  D7FC               	bra	u6097
  7376  00345A  2E2E               	decfsz	(??_clearance+1)^0,f,c
  7377  00345C  D7FA               	bra	u6097
  7378  00345E  F000               	nop	
  7379  003460                     
  7380                           ;DC_motors.c: 126:     stop(mL, mR);
  7381  003460  C029  F023         	movff	clearance@mL,stop@mL
  7382  003464  C02A  F024         	movff	clearance@mL+1,stop@mL+1
  7383  003468  C02B  F025         	movff	clearance@mR,stop@mR
  7384  00346C  C02C  F026         	movff	clearance@mR+1,stop@mR+1
  7385  003470  ECA5  F019         	call	_stop	;wreg free
  7386                           
  7387                           ;DC_motors.c: 127:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7388  003474  0E52               	movlw	82
  7389  003476  6E2E               	movwf	(??_clearance+1)^0,c
  7390  003478  0E2B               	movlw	43
  7391  00347A  6E2D               	movwf	??_clearance^0,c
  7392  00347C  0E00               	movlw	0
  7393  00347E                     u6107:
  7394  00347E  2EE8               	decfsz	wreg,f,c
  7395  003480  D7FE               	bra	u6107
  7396  003482  2E2D               	decfsz	??_clearance^0,f,c
  7397  003484  D7FC               	bra	u6107
  7398  003486  2E2E               	decfsz	(??_clearance+1)^0,f,c
  7399  003488  D7FA               	bra	u6107
  7400  00348A  D000               	nop2	
  7401  00348C                     
  7402                           ;DC_motors.c: 128:     LATDbits.LATD3 = 0;
  7403  00348C  967C               	bcf	124,3,c	;volatile
  7404  00348E  0012               	return		;funcret
  7405  003490                     __end_of_clearance:
  7406                           	callstack 0
  7407                           
  7408 ;; *************** function _stop *****************
  7409 ;; Defined at:
  7410 ;;		line 135 in file "DC_motors.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;  mL              2   34[COMRAM] PTR struct .
  7413 ;;		 -> main@motorL(9), 
  7414 ;;  mR              2   36[COMRAM] PTR struct .
  7415 ;;		 -> main@motorR(9), 
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;		None
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  1    wreg      void 
  7420 ;; Registers used:
  7421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7429 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7430 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7431 ;;Total ram usage:        6 bytes
  7432 ;; Hardware stack levels used: 1
  7433 ;; Hardware stack levels required when called: 9
  7434 ;; This function calls:
  7435 ;;		_DCmotors_setPWM
  7436 ;; This function is called by:
  7437 ;;		_main
  7438 ;;		_colourcards_readRGBC
  7439 ;;		_clearance
  7440 ;;		_DCmotors_calibration
  7441 ;;		_DCmotors_testing
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text36
  7446  00334A                     __ptext36:
  7447                           	callstack 0
  7448  00334A                     _stop:
  7449                           	callstack 21
  7450  00334A                     
  7451                           ;DC_motors.c: 136:     LATDbits.LATD4 = 1;
  7452  00334A  887C               	bsf	124,4,c	;volatile
  7453                           
  7454                           ;DC_motors.c: 138:     while((mL->power > 0) && (mR->power > 0)){
  7455  00334C  EFC4  F019         	goto	l3743
  7456  003350                     l3735:
  7457                           
  7458                           ;DC_motors.c: 139:         mL->power -= 10;
  7459  003350  C023  FFD9         	movff	stop@mL,fsr2l
  7460  003354  C024  FFDA         	movff	stop@mL+1,fsr2h
  7461  003358  0E0A               	movlw	10
  7462  00335A  5EDF               	subwf	indf2,f,c
  7463                           
  7464                           ;DC_motors.c: 140:         mR->power -= 10;
  7465  00335C  C025  FFD9         	movff	stop@mR,fsr2l
  7466  003360  C026  FFDA         	movff	stop@mR+1,fsr2h
  7467  003364  0E0A               	movlw	10
  7468  003366  5EDF               	subwf	indf2,f,c
  7469  003368                     
  7470                           ;DC_motors.c: 143:         DCmotors_setPWM(mL);
  7471  003368  C023  F018         	movff	stop@mL,DCmotors_setPWM@m
  7472  00336C  C024  F019         	movff	stop@mL+1,DCmotors_setPWM@m+1
  7473  003370  ECB3  F014         	call	_DCmotors_setPWM	;wreg free
  7474  003374                     
  7475                           ;DC_motors.c: 144:         DCmotors_setPWM(mR);
  7476  003374  C025  F018         	movff	stop@mR,DCmotors_setPWM@m
  7477  003378  C026  F019         	movff	stop@mR+1,DCmotors_setPWM@m+1
  7478  00337C  ECB3  F014         	call	_DCmotors_setPWM	;wreg free
  7479  003380                     
  7480                           ;DC_motors.c: 145:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7481  003380  0EA0               	movlw	160
  7482  003382                     u6117:
  7483  003382  D000               	nop2	
  7484  003384  2EE8               	decfsz	wreg,f,c
  7485  003386  D7FD               	bra	u6117
  7486  003388                     l3743:
  7487                           
  7488                           ;DC_motors.c: 138:     while((mL->power > 0) && (mR->power > 0)){
  7489  003388  C023  FFD9         	movff	stop@mL,fsr2l
  7490  00338C  C024  FFDA         	movff	stop@mL+1,fsr2h
  7491  003390  50DF               	movf	indf2,w,c
  7492  003392  B4D8               	btfsc	status,2,c
  7493  003394  EFCE  F019         	goto	u3661
  7494  003398  EFD0  F019         	goto	u3660
  7495  00339C                     u3661:
  7496  00339C  EFDC  F019         	goto	l3747
  7497  0033A0                     u3660:
  7498  0033A0  C025  FFD9         	movff	stop@mR,fsr2l
  7499  0033A4  C026  FFDA         	movff	stop@mR+1,fsr2h
  7500  0033A8  50DF               	movf	indf2,w,c
  7501  0033AA  A4D8               	btfss	status,2,c
  7502  0033AC  EFDA  F019         	goto	u3671
  7503  0033B0  EFDC  F019         	goto	u3670
  7504  0033B4                     u3671:
  7505  0033B4  EFA8  F019         	goto	l3735
  7506  0033B8                     u3670:
  7507  0033B8                     l3747:
  7508                           
  7509                           ;DC_motors.c: 147:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7510  0033B8  0E29               	movlw	41
  7511  0033BA  6E28               	movwf	(??_stop+1)^0,c
  7512  0033BC  0E96               	movlw	150
  7513  0033BE  6E27               	movwf	??_stop^0,c
  7514  0033C0  0E7F               	movlw	127
  7515  0033C2                     u6127:
  7516  0033C2  2EE8               	decfsz	wreg,f,c
  7517  0033C4  D7FE               	bra	u6127
  7518  0033C6  2E27               	decfsz	??_stop^0,f,c
  7519  0033C8  D7FC               	bra	u6127
  7520  0033CA  2E28               	decfsz	(??_stop+1)^0,f,c
  7521  0033CC  D7FA               	bra	u6127
  7522  0033CE  F000               	nop	
  7523  0033D0                     
  7524                           ;DC_motors.c: 148:     LATDbits.LATD4 = 0;
  7525  0033D0  987C               	bcf	124,4,c	;volatile
  7526  0033D2  0012               	return		;funcret
  7527  0033D4                     __end_of_stop:
  7528                           	callstack 0
  7529                           
  7530 ;; *************** function _reverse *****************
  7531 ;; Defined at:
  7532 ;;		line 102 in file "DC_motors.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  mL              2   34[COMRAM] PTR struct .
  7535 ;;		 -> main@motorL(9), 
  7536 ;;  mR              2   36[COMRAM] PTR struct .
  7537 ;;		 -> main@motorR(9), 
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;		None
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7552 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;Total ram usage:        5 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 9
  7556 ;; This function calls:
  7557 ;;		_DCmotors_setPWM
  7558 ;; This function is called by:
  7559 ;;		_main
  7560 ;;		_colourcards_readRGBC
  7561 ;;		_clearance
  7562 ;;		_DCmotors_testing
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           	psect	text37
  7567  0032BC                     __ptext37:
  7568                           	callstack 0
  7569  0032BC                     _reverse:
  7570                           	callstack 21
  7571  0032BC                     
  7572                           ;DC_motors.c: 104:     mL->direction = 0;
  7573  0032BC  EE20 F001          	lfsr	2,1
  7574  0032C0  5023               	movf	reverse@mL^0,w,c
  7575  0032C2  26D9               	addwf	fsr2l,f,c
  7576  0032C4  5024               	movf	(reverse@mL+1)^0,w,c
  7577  0032C6  22DA               	addwfc	fsr2h,f,c
  7578  0032C8  0E00               	movlw	0
  7579  0032CA  6EDF               	movwf	indf2,c
  7580                           
  7581                           ;DC_motors.c: 105:     mR->direction = 0;
  7582  0032CC  EE20 F001          	lfsr	2,1
  7583  0032D0  5025               	movf	reverse@mR^0,w,c
  7584  0032D2  26D9               	addwf	fsr2l,f,c
  7585  0032D4  5026               	movf	(reverse@mR+1)^0,w,c
  7586  0032D6  22DA               	addwfc	fsr2h,f,c
  7587  0032D8  0E00               	movlw	0
  7588  0032DA  6EDF               	movwf	indf2,c
  7589                           
  7590                           ;DC_motors.c: 108:     while((mL->power < 50) && (mR->power < 50)){
  7591  0032DC  EF8C  F019         	goto	l3761
  7592  0032E0                     l3753:
  7593                           
  7594                           ;DC_motors.c: 109:         mL->power += 10;
  7595  0032E0  C023  FFD9         	movff	reverse@mL,fsr2l
  7596  0032E4  C024  FFDA         	movff	reverse@mL+1,fsr2h
  7597  0032E8  0E0A               	movlw	10
  7598  0032EA  26DF               	addwf	indf2,f,c
  7599                           
  7600                           ;DC_motors.c: 110:         mR->power += 10;
  7601  0032EC  C025  FFD9         	movff	reverse@mR,fsr2l
  7602  0032F0  C026  FFDA         	movff	reverse@mR+1,fsr2h
  7603  0032F4  0E0A               	movlw	10
  7604  0032F6  26DF               	addwf	indf2,f,c
  7605  0032F8                     
  7606                           ;DC_motors.c: 112:         DCmotors_setPWM(mL);
  7607  0032F8  C023  F018         	movff	reverse@mL,DCmotors_setPWM@m
  7608  0032FC  C024  F019         	movff	reverse@mL+1,DCmotors_setPWM@m+1
  7609  003300  ECB3  F014         	call	_DCmotors_setPWM	;wreg free
  7610  003304                     
  7611                           ;DC_motors.c: 113:         DCmotors_setPWM(mR);
  7612  003304  C025  F018         	movff	reverse@mR,DCmotors_setPWM@m
  7613  003308  C026  F019         	movff	reverse@mR+1,DCmotors_setPWM@m+1
  7614  00330C  ECB3  F014         	call	_DCmotors_setPWM	;wreg free
  7615  003310                     
  7616                           ;DC_motors.c: 114:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  7617  003310  0EA0               	movlw	160
  7618  003312                     u6137:
  7619  003312  D000               	nop2	
  7620  003314  2EE8               	decfsz	wreg,f,c
  7621  003316  D7FD               	bra	u6137
  7622  003318                     l3761:
  7623                           
  7624                           ;DC_motors.c: 108:     while((mL->power < 50) && (mR->power < 50)){
  7625  003318  C023  FFD9         	movff	reverse@mL,fsr2l
  7626  00331C  C024  FFDA         	movff	reverse@mL+1,fsr2h
  7627  003320  0E32               	movlw	50
  7628  003322  60DF               	cpfslt	indf2,c
  7629  003324  EF96  F019         	goto	u3681
  7630  003328  EF98  F019         	goto	u3680
  7631  00332C                     u3681:
  7632  00332C  EFA4  F019         	goto	l589
  7633  003330                     u3680:
  7634  003330  C025  FFD9         	movff	reverse@mR,fsr2l
  7635  003334  C026  FFDA         	movff	reverse@mR+1,fsr2h
  7636  003338  0E31               	movlw	49
  7637  00333A  64DF               	cpfsgt	indf2,c
  7638  00333C  EFA2  F019         	goto	u3691
  7639  003340  EFA4  F019         	goto	u3690
  7640  003344                     u3691:
  7641  003344  EF70  F019         	goto	l3753
  7642  003348                     u3690:
  7643  003348                     l589:
  7644  003348  0012               	return		;funcret
  7645  00334A                     __end_of_reverse:
  7646                           	callstack 0
  7647                           
  7648 ;; *************** function _DCmotors_setPWM *****************
  7649 ;; Defined at:
  7650 ;;		line 50 in file "DC_motors.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  m               2   23[COMRAM] PTR struct .
  7653 ;;		 -> main@motorR(9), main@motorL(9), 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;  PWMduty         2   32[COMRAM] int 
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7667 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7668 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7669 ;;Total ram usage:       11 bytes
  7670 ;; Hardware stack levels used: 1
  7671 ;; Hardware stack levels required when called: 8
  7672 ;; This function calls:
  7673 ;;		___awdiv
  7674 ;;		___wmul
  7675 ;; This function is called by:
  7676 ;;		_forward
  7677 ;;		_reverse
  7678 ;;		_stop
  7679 ;;		_left
  7680 ;;		_right
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           	psect	text38
  7685  002966                     __ptext38:
  7686                           	callstack 0
  7687  002966                     _DCmotors_setPWM:
  7688                           	callstack 21
  7689  002966                     
  7690                           ;DC_motors.c: 51:  int PWMduty;;DC_motors.c: 53:  if (m->direction){
  7691  002966  EE20 F001          	lfsr	2,1
  7692  00296A  5018               	movf	DCmotors_setPWM@m^0,w,c
  7693  00296C  26D9               	addwf	fsr2l,f,c
  7694  00296E  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7695  002970  22DA               	addwfc	fsr2h,f,c
  7696  002972  50DF               	movf	indf2,w,c
  7697  002974  B4D8               	btfsc	status,2,c
  7698  002976  EFBF  F014         	goto	u2631
  7699  00297A  EFC1  F014         	goto	u2630
  7700  00297E                     u2631:
  7701  00297E  EFF2  F014         	goto	l3171
  7702  002982                     u2630:
  7703  002982                     
  7704                           ;DC_motors.c: 54:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
  7705  002982  C018  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  7706  002986  C019  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  7707  00298A  50DF               	movf	indf2,w,c
  7708  00298C  6E1A               	movwf	??_DCmotors_setPWM^0,c
  7709  00298E  501A               	movf	??_DCmotors_setPWM^0,w,c
  7710  002990  6E0A               	movwf	___wmul@multiplier^0,c
  7711  002992  6A0B               	clrf	(___wmul@multiplier+1)^0,c
  7712  002994  EE20 F007          	lfsr	2,7
  7713  002998  5018               	movf	DCmotors_setPWM@m^0,w,c
  7714  00299A  26D9               	addwf	fsr2l,f,c
  7715  00299C  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7716  00299E  22DA               	addwfc	fsr2h,f,c
  7717  0029A0  CFDE F00C          	movff	postinc2,___wmul@multiplicand
  7718  0029A4  CFDD F00D          	movff	postdec2,___wmul@multiplicand+1
  7719  0029A8  EC4A  F01C         	call	___wmul	;wreg free
  7720  0029AC  C00A  F010         	movff	?___wmul,___awdiv@dividend
  7721  0029B0  C00B  F011         	movff	?___wmul+1,___awdiv@dividend+1
  7722  0029B4  0E00               	movlw	0
  7723  0029B6  6E13               	movwf	(___awdiv@divisor+1)^0,c
  7724  0029B8  0E64               	movlw	100
  7725  0029BA  6E12               	movwf	___awdiv@divisor^0,c
  7726  0029BC  EC62  F018         	call	___awdiv	;wreg free
  7727  0029C0  EE20 F007          	lfsr	2,7
  7728  0029C4  5018               	movf	DCmotors_setPWM@m^0,w,c
  7729  0029C6  26D9               	addwf	fsr2l,f,c
  7730  0029C8  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7731  0029CA  22DA               	addwfc	fsr2h,f,c
  7732  0029CC  CFDE F01B          	movff	postinc2,??_DCmotors_setPWM+1
  7733  0029D0  CFDD F01C          	movff	postdec2,??_DCmotors_setPWM+2
  7734  0029D4  5010               	movf	?___awdiv^0,w,c
  7735  0029D6  5C1B               	subwf	(??_DCmotors_setPWM+1)^0,w,c
  7736  0029D8  6E21               	movwf	DCmotors_setPWM@PWMduty^0,c
  7737  0029DA  5011               	movf	(?___awdiv+1)^0,w,c
  7738  0029DC  581C               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
  7739  0029DE  6E22               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
  7740                           
  7741                           ;DC_motors.c: 55:  } else {
  7742  0029E0  EF15  F015         	goto	l3173
  7743  0029E4                     l3171:
  7744                           
  7745                           ;DC_motors.c: 56:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  7746  0029E4  C018  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  7747  0029E8  C019  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  7748  0029EC  50DF               	movf	indf2,w,c
  7749  0029EE  6E1A               	movwf	??_DCmotors_setPWM^0,c
  7750  0029F0  501A               	movf	??_DCmotors_setPWM^0,w,c
  7751  0029F2  6E0A               	movwf	___wmul@multiplier^0,c
  7752  0029F4  6A0B               	clrf	(___wmul@multiplier+1)^0,c
  7753  0029F6  EE20 F007          	lfsr	2,7
  7754  0029FA  5018               	movf	DCmotors_setPWM@m^0,w,c
  7755  0029FC  26D9               	addwf	fsr2l,f,c
  7756  0029FE  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7757  002A00  22DA               	addwfc	fsr2h,f,c
  7758  002A02  CFDE F00C          	movff	postinc2,___wmul@multiplicand
  7759  002A06  CFDD F00D          	movff	postdec2,___wmul@multiplicand+1
  7760  002A0A  EC4A  F01C         	call	___wmul	;wreg free
  7761  002A0E  C00A  F010         	movff	?___wmul,___awdiv@dividend
  7762  002A12  C00B  F011         	movff	?___wmul+1,___awdiv@dividend+1
  7763  002A16  0E00               	movlw	0
  7764  002A18  6E13               	movwf	(___awdiv@divisor+1)^0,c
  7765  002A1A  0E64               	movlw	100
  7766  002A1C  6E12               	movwf	___awdiv@divisor^0,c
  7767  002A1E  EC62  F018         	call	___awdiv	;wreg free
  7768  002A22  C010  F021         	movff	?___awdiv,DCmotors_setPWM@PWMduty
  7769  002A26  C011  F022         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
  7770  002A2A                     l3173:
  7771                           
  7772                           ;DC_motors.c: 59:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  7773  002A2A  EE20 F002          	lfsr	2,2
  7774  002A2E  5018               	movf	DCmotors_setPWM@m^0,w,c
  7775  002A30  26D9               	addwf	fsr2l,f,c
  7776  002A32  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7777  002A34  22DA               	addwfc	fsr2h,f,c
  7778  002A36  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
  7779  002A3A  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
  7780  002A3E  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  7781  002A42  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  7782  002A46  C021  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
  7783  002A4A                     
  7784                           ;DC_motors.c: 61:  if (m->direction){
  7785  002A4A  EE20 F001          	lfsr	2,1
  7786  002A4E  5018               	movf	DCmotors_setPWM@m^0,w,c
  7787  002A50  26D9               	addwf	fsr2l,f,c
  7788  002A52  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7789  002A54  22DA               	addwfc	fsr2h,f,c
  7790  002A56  50DF               	movf	indf2,w,c
  7791  002A58  B4D8               	btfsc	status,2,c
  7792  002A5A  EF31  F015         	goto	u2641
  7793  002A5E  EF33  F015         	goto	u2640
  7794  002A62                     u2641:
  7795  002A62  EF68  F015         	goto	l3179
  7796  002A66                     u2640:
  7797  002A66                     
  7798                           ;DC_motors.c: 62:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
  7799  002A66  EE20 F004          	lfsr	2,4
  7800  002A6A  5018               	movf	DCmotors_setPWM@m^0,w,c
  7801  002A6C  26D9               	addwf	fsr2l,f,c
  7802  002A6E  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7803  002A70  22DA               	addwfc	fsr2h,f,c
  7804  002A72  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
  7805  002A76  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
  7806  002A7A  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  7807  002A7E  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  7808  002A82  EE10 F004          	lfsr	1,4
  7809  002A86  5018               	movf	DCmotors_setPWM@m^0,w,c
  7810  002A88  26E1               	addwf	fsr1l,f,c
  7811  002A8A  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7812  002A8C  22E2               	addwfc	fsr1h,f,c
  7813  002A8E  CFE6 F01C          	movff	postinc1,??_DCmotors_setPWM+2
  7814  002A92  CFE5 F01D          	movff	postdec1,??_DCmotors_setPWM+3
  7815  002A96  C01C  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  7816  002A9A  C01D  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  7817  002A9E  50E7               	movf	indf1,w,c
  7818  002AA0  6E1E               	movwf	(??_DCmotors_setPWM+4)^0,c
  7819  002AA2  EE10 F006          	lfsr	1,6
  7820  002AA6  5018               	movf	DCmotors_setPWM@m^0,w,c
  7821  002AA8  26E1               	addwf	fsr1l,f,c
  7822  002AAA  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7823  002AAC  22E2               	addwfc	fsr1h,f,c
  7824  002AAE  50E7               	movf	indf1,w,c
  7825  002AB0  6E1F               	movwf	(??_DCmotors_setPWM+5)^0,c
  7826  002AB2  0E01               	movlw	1
  7827  002AB4  6E20               	movwf	(??_DCmotors_setPWM+6)^0,c
  7828  002AB6  2A1F               	incf	(??_DCmotors_setPWM+5)^0,f,c
  7829  002AB8  EF60  F015         	goto	u2654
  7830  002ABC                     u2655:
  7831  002ABC  90D8               	bcf	status,0,c
  7832  002ABE  3620               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  7833  002AC0                     u2654:
  7834  002AC0  2E1F               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  7835  002AC2  EF5E  F015         	goto	u2655
  7836  002AC6  5020               	movf	(??_DCmotors_setPWM+6)^0,w,c
  7837  002AC8  101E               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
  7838  002ACA  6EDF               	movwf	indf2,c
  7839                           
  7840                           ;DC_motors.c: 63:  } else {
  7841  002ACC  EF9C  F015         	goto	l568
  7842  002AD0                     l3179:
  7843                           
  7844                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
  7845  002AD0  EE20 F004          	lfsr	2,4
  7846  002AD4  5018               	movf	DCmotors_setPWM@m^0,w,c
  7847  002AD6  26D9               	addwf	fsr2l,f,c
  7848  002AD8  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7849  002ADA  22DA               	addwfc	fsr2h,f,c
  7850  002ADC  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
  7851  002AE0  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
  7852  002AE4  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  7853  002AE8  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  7854  002AEC  EE10 F004          	lfsr	1,4
  7855  002AF0  5018               	movf	DCmotors_setPWM@m^0,w,c
  7856  002AF2  26E1               	addwf	fsr1l,f,c
  7857  002AF4  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7858  002AF6  22E2               	addwfc	fsr1h,f,c
  7859  002AF8  CFE6 F01C          	movff	postinc1,??_DCmotors_setPWM+2
  7860  002AFC  CFE5 F01D          	movff	postdec1,??_DCmotors_setPWM+3
  7861  002B00  C01C  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  7862  002B04  C01D  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  7863  002B08  50E7               	movf	indf1,w,c
  7864  002B0A  6E1E               	movwf	(??_DCmotors_setPWM+4)^0,c
  7865  002B0C  EE10 F006          	lfsr	1,6
  7866  002B10  5018               	movf	DCmotors_setPWM@m^0,w,c
  7867  002B12  26E1               	addwf	fsr1l,f,c
  7868  002B14  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  7869  002B16  22E2               	addwfc	fsr1h,f,c
  7870  002B18  50E7               	movf	indf1,w,c
  7871  002B1A  6E1F               	movwf	(??_DCmotors_setPWM+5)^0,c
  7872  002B1C  0E01               	movlw	1
  7873  002B1E  6E20               	movwf	(??_DCmotors_setPWM+6)^0,c
  7874  002B20  2A1F               	incf	(??_DCmotors_setPWM+5)^0,f,c
  7875  002B22  EF95  F015         	goto	u2664
  7876  002B26                     u2665:
  7877  002B26  90D8               	bcf	status,0,c
  7878  002B28  3620               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  7879  002B2A                     u2664:
  7880  002B2A  2E1F               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  7881  002B2C  EF93  F015         	goto	u2665
  7882  002B30  5020               	movf	(??_DCmotors_setPWM+6)^0,w,c
  7883  002B32  0AFF               	xorlw	255
  7884  002B34  141E               	andwf	(??_DCmotors_setPWM+4)^0,w,c
  7885  002B36  6EDF               	movwf	indf2,c
  7886  002B38                     l568:
  7887  002B38  0012               	return		;funcret
  7888  002B3A                     __end_of_DCmotors_setPWM:
  7889                           	callstack 0
  7890                           
  7891 ;; *************** function ___wmul *****************
  7892 ;; Defined at:
  7893 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;  multiplier      2    9[COMRAM] unsigned int 
  7896 ;;  multiplicand    2   11[COMRAM] unsigned int 
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  product         2   13[COMRAM] unsigned int 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  2    9[COMRAM] unsigned int 
  7901 ;; Registers used:
  7902 ;;		wreg, status,2, status,0, prodl, prodh
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7909 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7911 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7912 ;;Total ram usage:        6 bytes
  7913 ;; Hardware stack levels used: 1
  7914 ;; Hardware stack levels required when called: 7
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_DCmotors_setPWM
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text39
  7923  003894                     __ptext39:
  7924                           	callstack 0
  7925  003894                     ___wmul:
  7926                           	callstack 21
  7927  003894  500A               	movf	___wmul@multiplier^0,w,c
  7928  003896  020C               	mulwf	___wmul@multiplicand^0,c
  7929  003898  CFF3 F00E          	movff	prodl,___wmul@product
  7930  00389C  CFF4 F00F          	movff	prodh,___wmul@product+1
  7931  0038A0  500A               	movf	___wmul@multiplier^0,w,c
  7932  0038A2  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  7933  0038A4  50F3               	movf	243,w,c
  7934  0038A6  260F               	addwf	(___wmul@product+1)^0,f,c
  7935  0038A8  500B               	movf	(___wmul@multiplier+1)^0,w,c
  7936  0038AA  020C               	mulwf	___wmul@multiplicand^0,c
  7937  0038AC  50F3               	movf	243,w,c
  7938  0038AE  260F               	addwf	(___wmul@product+1)^0,f,c
  7939  0038B0  C00E  F00A         	movff	___wmul@product,?___wmul
  7940  0038B4  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  7941  0038B8  0012               	return		;funcret
  7942  0038BA                     __end_of___wmul:
  7943                           	callstack 0
  7944                           
  7945 ;; *************** function ___awdiv *****************
  7946 ;; Defined at:
  7947 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  dividend        2   15[COMRAM] int 
  7950 ;;  divisor         2   17[COMRAM] int 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  quotient        2   21[COMRAM] int 
  7953 ;;  sign            1   20[COMRAM] unsigned char 
  7954 ;;  counter         1   19[COMRAM] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  2   15[COMRAM] int 
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7967 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7968 ;;Total ram usage:        8 bytes
  7969 ;; Hardware stack levels used: 1
  7970 ;; Hardware stack levels required when called: 7
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		_DCmotors_setPWM
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text40
  7979  0030C4                     __ptext40:
  7980                           	callstack 0
  7981  0030C4                     ___awdiv:
  7982                           	callstack 21
  7983  0030C4  0E00               	movlw	0
  7984  0030C6  6E15               	movwf	___awdiv@sign^0,c
  7985  0030C8  BE13               	btfsc	(___awdiv@divisor+1)^0,7,c
  7986  0030CA  EF6B  F018         	goto	u2550
  7987  0030CE  EF69  F018         	goto	u2551
  7988  0030D2                     u2551:
  7989  0030D2  EF71  F018         	goto	l3101
  7990  0030D6                     u2550:
  7991  0030D6  6C12               	negf	___awdiv@divisor^0,c
  7992  0030D8  1E13               	comf	(___awdiv@divisor+1)^0,f,c
  7993  0030DA  B0D8               	btfsc	status,0,c
  7994  0030DC  2A13               	incf	(___awdiv@divisor+1)^0,f,c
  7995  0030DE  0E01               	movlw	1
  7996  0030E0  6E15               	movwf	___awdiv@sign^0,c
  7997  0030E2                     l3101:
  7998  0030E2  BE11               	btfsc	(___awdiv@dividend+1)^0,7,c
  7999  0030E4  EF78  F018         	goto	u2560
  8000  0030E8  EF76  F018         	goto	u2561
  8001  0030EC                     u2561:
  8002  0030EC  EF7E  F018         	goto	l3107
  8003  0030F0                     u2560:
  8004  0030F0  6C10               	negf	___awdiv@dividend^0,c
  8005  0030F2  1E11               	comf	(___awdiv@dividend+1)^0,f,c
  8006  0030F4  B0D8               	btfsc	status,0,c
  8007  0030F6  2A11               	incf	(___awdiv@dividend+1)^0,f,c
  8008  0030F8  0E01               	movlw	1
  8009  0030FA  1A15               	xorwf	___awdiv@sign^0,f,c
  8010  0030FC                     l3107:
  8011  0030FC  0E00               	movlw	0
  8012  0030FE  6E17               	movwf	(___awdiv@quotient+1)^0,c
  8013  003100  0E00               	movlw	0
  8014  003102  6E16               	movwf	___awdiv@quotient^0,c
  8015  003104  5012               	movf	___awdiv@divisor^0,w,c
  8016  003106  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
  8017  003108  B4D8               	btfsc	status,2,c
  8018  00310A  EF89  F018         	goto	u2571
  8019  00310E  EF8B  F018         	goto	u2570
  8020  003112                     u2571:
  8021  003112  EFB3  F018         	goto	l3129
  8022  003116                     u2570:
  8023  003116  0E01               	movlw	1
  8024  003118  6E14               	movwf	___awdiv@counter^0,c
  8025  00311A  EF93  F018         	goto	l3115
  8026  00311E                     l3113:
  8027  00311E  90D8               	bcf	status,0,c
  8028  003120  3612               	rlcf	___awdiv@divisor^0,f,c
  8029  003122  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
  8030  003124  2A14               	incf	___awdiv@counter^0,f,c
  8031  003126                     l3115:
  8032  003126  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
  8033  003128  EF98  F018         	goto	u2581
  8034  00312C  EF9A  F018         	goto	u2580
  8035  003130                     u2581:
  8036  003130  EF8F  F018         	goto	l3113
  8037  003134                     u2580:
  8038  003134                     l3117:
  8039  003134  90D8               	bcf	status,0,c
  8040  003136  3616               	rlcf	___awdiv@quotient^0,f,c
  8041  003138  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
  8042  00313A  5012               	movf	___awdiv@divisor^0,w,c
  8043  00313C  5C10               	subwf	___awdiv@dividend^0,w,c
  8044  00313E  5013               	movf	(___awdiv@divisor+1)^0,w,c
  8045  003140  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
  8046  003142  A0D8               	btfss	status,0,c
  8047  003144  EFA6  F018         	goto	u2591
  8048  003148  EFA8  F018         	goto	u2590
  8049  00314C                     u2591:
  8050  00314C  EFAD  F018         	goto	l3125
  8051  003150                     u2590:
  8052  003150  5012               	movf	___awdiv@divisor^0,w,c
  8053  003152  5E10               	subwf	___awdiv@dividend^0,f,c
  8054  003154  5013               	movf	(___awdiv@divisor+1)^0,w,c
  8055  003156  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
  8056  003158  8016               	bsf	___awdiv@quotient^0,0,c
  8057  00315A                     l3125:
  8058  00315A  90D8               	bcf	status,0,c
  8059  00315C  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
  8060  00315E  3212               	rrcf	___awdiv@divisor^0,f,c
  8061  003160  2E14               	decfsz	___awdiv@counter^0,f,c
  8062  003162  EF9A  F018         	goto	l3117
  8063  003166                     l3129:
  8064  003166  5015               	movf	___awdiv@sign^0,w,c
  8065  003168  B4D8               	btfsc	status,2,c
  8066  00316A  EFB9  F018         	goto	u2601
  8067  00316E  EFBB  F018         	goto	u2600
  8068  003172                     u2601:
  8069  003172  EFBF  F018         	goto	l3133
  8070  003176                     u2600:
  8071  003176  6C16               	negf	___awdiv@quotient^0,c
  8072  003178  1E17               	comf	(___awdiv@quotient+1)^0,f,c
  8073  00317A  B0D8               	btfsc	status,0,c
  8074  00317C  2A17               	incf	(___awdiv@quotient+1)^0,f,c
  8075  00317E                     l3133:
  8076  00317E  C016  F010         	movff	___awdiv@quotient,?___awdiv
  8077  003182  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
  8078  003186  0012               	return		;funcret
  8079  003188                     __end_of___awdiv:
  8080                           	callstack 0
  8081                           
  8082 ;; *************** function _checkbatterylevel *****************
  8083 ;; Defined at:
  8084 ;;		line 72 in file "DC_motors.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;		None
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  batterylevel    1   10[COMRAM] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  1    wreg      void 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8102 ;;Total ram usage:        1 bytes
  8103 ;; Hardware stack levels used: 1
  8104 ;; Hardware stack levels required when called: 8
  8105 ;; This function calls:
  8106 ;;		_ADC_getval
  8107 ;; This function is called by:
  8108 ;;		_main
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           	psect	text41
  8113  003964                     __ptext41:
  8114                           	callstack 0
  8115  003964                     _checkbatterylevel:
  8116                           	callstack 22
  8117  003964                     
  8118                           ;DC_motors.c: 73:     unsigned char batterylevel;;DC_motors.c: 74:     batterylevel = AD
      +                          C_getval();
  8119  003964  EC09  F01D         	call	_ADC_getval	;wreg free
  8120  003968  6E0B               	movwf	checkbatterylevel@batterylevel^0,c
  8121  00396A                     
  8122                           ;DC_motors.c: 75:     if (batterylevel<100) {LATDbits.LATD7 = 1;}
  8123  00396A  0E64               	movlw	100
  8124  00396C  600B               	cpfslt	checkbatterylevel@batterylevel^0,c
  8125  00396E  EFBB  F01C         	goto	u3881
  8126  003972  EFBD  F01C         	goto	u3880
  8127  003976                     u3881:
  8128  003976  EFC0  F01C         	goto	l571
  8129  00397A                     u3880:
  8130  00397A  8E7C               	bsf	124,7,c	;volatile
  8131  00397C  EFC1  F01C         	goto	l573
  8132  003980                     l571:
  8133  003980  9E7C               	bcf	124,7,c	;volatile
  8134  003982                     l573:
  8135  003982  0012               	return		;funcret
  8136  003984                     __end_of_checkbatterylevel:
  8137                           	callstack 0
  8138                           
  8139 ;; *************** function _ADC_getval *****************
  8140 ;; Defined at:
  8141 ;;		line 26 in file "ADC.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;		None
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;  tmpval          1    9[COMRAM] unsigned char 
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  1    wreg      unsigned char 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8158 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8159 ;;Total ram usage:        1 bytes
  8160 ;; Hardware stack levels used: 1
  8161 ;; Hardware stack levels required when called: 7
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_checkbatterylevel
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text42
  8170  003A12                     __ptext42:
  8171                           	callstack 0
  8172  003A12                     _ADC_getval:
  8173                           	callstack 22
  8174  003A12                     
  8175                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  8176  003A12  8060               	bsf	96,0,c	;volatile
  8177  003A14                     l365:
  8178  003A14  B060               	btfsc	96,0,c	;volatile
  8179  003A16  EF0F  F01D         	goto	u3871
  8180  003A1A  EF11  F01D         	goto	u3870
  8181  003A1E                     u3871:
  8182  003A1E  EF0A  F01D         	goto	l365
  8183  003A22                     u3870:
  8184  003A22                     
  8185                           ;ADC.c: 31:     tmpval = ADRESH;
  8186  003A22  CF64 F00A          	movff	3940,ADC_getval@tmpval	;volatile
  8187  003A26                     
  8188                           ;ADC.c: 34:     return tmpval;
  8189  003A26  500A               	movf	ADC_getval@tmpval^0,w,c
  8190  003A28  0012               	return		;funcret
  8191  003A2A                     __end_of_ADC_getval:
  8192                           	callstack 0
  8193                           
  8194 ;; *************** function _USART4_init *****************
  8195 ;; Defined at:
  8196 ;;		line 8 in file "serial_comm.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;		None
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;		None
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  1    wreg      void 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8214 ;;Total ram usage:        0 bytes
  8215 ;; Hardware stack levels used: 1
  8216 ;; Hardware stack levels required when called: 7
  8217 ;; This function calls:
  8218 ;;		Nothing
  8219 ;; This function is called by:
  8220 ;;		_main
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text43
  8225  003984                     __ptext43:
  8226                           	callstack 0
  8227  003984                     _USART4_init:
  8228                           	callstack 23
  8229  003984                     
  8230                           ;serial_comm.c: 9:     RC0PPS = 0x12;
  8231  003984  0E12               	movlw	18
  8232  003986  010E               	movlb	14	; () banked
  8233  003988  6F62               	movwf	98,b	;volatile
  8234                           
  8235                           ;serial_comm.c: 10:     RX4PPS = 0x11;
  8236  00398A  0E11               	movlw	17
  8237  00398C  6F15               	movwf	21,b	;volatile
  8238  00398E                     
  8239                           ; BSR set to: 14
  8240                           ;serial_comm.c: 11:     TRISCbits.TRISC1 = 1;
  8241  00398E  8283               	bsf	131,1,c	;volatile
  8242  003990                     
  8243                           ; BSR set to: 14
  8244                           ;serial_comm.c: 13:     BAUD4CONbits.BRG16 = 0;
  8245  003990  97E9               	bcf	233,3,b	;volatile
  8246  003992                     
  8247                           ; BSR set to: 14
  8248                           ;serial_comm.c: 14:     TX4STAbits.BRGH = 0;
  8249  003992  95E8               	bcf	232,2,b	;volatile
  8250                           
  8251                           ;serial_comm.c: 15:     SP4BRGL = 51;
  8252  003994  0E33               	movlw	51
  8253  003996  6FE5               	movwf	229,b	;volatile
  8254                           
  8255                           ;serial_comm.c: 16:     SP4BRGH = 0;
  8256  003998  0E00               	movlw	0
  8257  00399A  6FE6               	movwf	230,b	;volatile
  8258  00399C                     
  8259                           ; BSR set to: 14
  8260                           ;serial_comm.c: 18:     RC4STAbits.CREN = 1;
  8261  00399C  89E7               	bsf	231,4,b	;volatile
  8262  00399E                     
  8263                           ; BSR set to: 14
  8264                           ;serial_comm.c: 19:     TX4STAbits.TXEN = 1;
  8265  00399E  8BE8               	bsf	232,5,b	;volatile
  8266  0039A0                     
  8267                           ; BSR set to: 14
  8268                           ;serial_comm.c: 20:     RC4STAbits.SPEN = 1;
  8269  0039A0  8FE7               	bsf	231,7,b	;volatile
  8270  0039A2                     
  8271                           ; BSR set to: 14
  8272  0039A2  0012               	return		;funcret
  8273  0039A4                     __end_of_USART4_init:
  8274                           	callstack 0
  8275                           
  8276 ;; *************** function _DCmotors_init *****************
  8277 ;; Defined at:
  8278 ;;		line 10 in file "DC_motors.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  PWMperiod       1    wreg     unsigned char 
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;  PWMperiod       1    9[COMRAM] unsigned char 
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  1    wreg      void 
  8285 ;; Registers used:
  8286 ;;		wreg, status,2, cstack
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8296 ;;Total ram usage:        1 bytes
  8297 ;; Hardware stack levels used: 1
  8298 ;; Hardware stack levels required when called: 8
  8299 ;; This function calls:
  8300 ;;		_buggyLEDs_init
  8301 ;;		_clicker2LEDs_init
  8302 ;;		_clicker2buttons_init
  8303 ;; This function is called by:
  8304 ;;		_main
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           	psect	text44
  8309  003670                     __ptext44:
  8310                           	callstack 0
  8311  003670                     _DCmotors_init:
  8312                           	callstack 22
  8313                           
  8314                           ; BSR set to: 14
  8315                           ;incstack = 0
  8316                           ;DCmotors_init@PWMperiod stored from wreg
  8317  003670  6E0A               	movwf	DCmotors_init@PWMperiod^0,c
  8318  003672                     
  8319                           ;DC_motors.c: 12:     T2CONbits.CKPS=0b100;
  8320  003672  50BD               	movf	189,w,c	;volatile
  8321  003674  0B8F               	andlw	-113
  8322  003676  0940               	iorlw	64
  8323  003678  6EBD               	movwf	189,c	;volatile
  8324                           
  8325                           ;DC_motors.c: 13:     T2HLTbits.MODE=0b00000;
  8326  00367A  0EE0               	movlw	-32
  8327  00367C  16BE               	andwf	190,f,c	;volatile
  8328                           
  8329                           ;DC_motors.c: 14:     T2CLKCONbits.CS=0b0001;
  8330  00367E  50BF               	movf	191,w,c	;volatile
  8331  003680  0BF0               	andlw	-16
  8332  003682  0901               	iorlw	1
  8333  003684  6EBF               	movwf	191,c	;volatile
  8334  003686                     
  8335                           ;DC_motors.c: 17:     T2PR=PWMperiod;
  8336  003686  C00A  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  8337  00368A                     
  8338                           ;DC_motors.c: 18:     T2CONbits.ON=1;
  8339  00368A  8EBD               	bsf	189,7,c	;volatile
  8340  00368C                     
  8341                           ;DC_motors.c: 21:     TRISEbits.TRISE2=0;
  8342  00368C  9485               	bcf	133,2,c	;volatile
  8343  00368E                     
  8344                           ;DC_motors.c: 22:     TRISEbits.TRISE4=0;
  8345  00368E  9885               	bcf	133,4,c	;volatile
  8346  003690                     
  8347                           ;DC_motors.c: 23:     TRISCbits.TRISC7=0;
  8348  003690  9E83               	bcf	131,7,c	;volatile
  8349  003692                     
  8350                           ;DC_motors.c: 24:     TRISGbits.TRISG6=0;
  8351  003692  9C87               	bcf	135,6,c	;volatile
  8352  003694                     
  8353                           ;DC_motors.c: 26:     LATEbits.LATE2=0;
  8354  003694  947D               	bcf	125,2,c	;volatile
  8355  003696                     
  8356                           ;DC_motors.c: 27:     LATEbits.LATE4=0;
  8357  003696  987D               	bcf	125,4,c	;volatile
  8358  003698                     
  8359                           ;DC_motors.c: 28:     LATCbits.LATC7=0;
  8360  003698  9E7B               	bcf	123,7,c	;volatile
  8361  00369A                     
  8362                           ;DC_motors.c: 29:     LATGbits.LATG6=0;
  8363  00369A  9C7F               	bcf	127,6,c	;volatile
  8364                           
  8365                           ;DC_motors.c: 31:     PWM6DCH=0;
  8366  00369C  0E00               	movlw	0
  8367  00369E  6EA3               	movwf	163,c	;volatile
  8368                           
  8369                           ;DC_motors.c: 32:     PWM7DCH=0;
  8370  0036A0  0E00               	movlw	0
  8371  0036A2  6EA0               	movwf	160,c	;volatile
  8372  0036A4                     
  8373                           ;DC_motors.c: 34:     PWM6CONbits.EN = 1;
  8374  0036A4  8EA4               	bsf	164,7,c	;volatile
  8375  0036A6                     
  8376                           ;DC_motors.c: 35:     PWM7CONbits.EN = 1;
  8377  0036A6  8EA1               	bsf	161,7,c	;volatile
  8378                           
  8379                           ;DC_motors.c: 37:     RE2PPS=0x0A;
  8380  0036A8  0E0A               	movlw	10
  8381  0036AA  010E               	movlb	14	; () banked
  8382  0036AC  6F74               	movwf	116,b	;volatile
  8383                           
  8384                           ;DC_motors.c: 38:     RC7PPS=0x0B;
  8385  0036AE  0E0B               	movlw	11
  8386  0036B0  6F69               	movwf	105,b	;volatile
  8387  0036B2                     
  8388                           ; BSR set to: 14
  8389                           ;DC_motors.c: 41:     clicker2buttons_init();
  8390  0036B2  EC2D  F01D         	call	_clicker2buttons_init	;wreg free
  8391  0036B6                     
  8392                           ;DC_motors.c: 42:     clicker2LEDs_init();
  8393  0036B6  EC48  F01D         	call	_clicker2LEDs_init	;wreg free
  8394  0036BA                     
  8395                           ;DC_motors.c: 43:     buggyLEDs_init();
  8396  0036BA  EC15  F01D         	call	_buggyLEDs_init	;wreg free
  8397  0036BE  0012               	return		;funcret
  8398  0036C0                     __end_of_DCmotors_init:
  8399                           	callstack 0
  8400                           
  8401 ;; *************** function _clicker2buttons_init *****************
  8402 ;; Defined at:
  8403 ;;		line 8 in file "buttons_n_LEDs.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;		None
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;		None
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      void 
  8410 ;; Registers used:
  8411 ;;		None
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8421 ;;Total ram usage:        0 bytes
  8422 ;; Hardware stack levels used: 1
  8423 ;; Hardware stack levels required when called: 7
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_DCmotors_init
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text45
  8432  003A5A                     __ptext45:
  8433                           	callstack 0
  8434  003A5A                     _clicker2buttons_init:
  8435                           	callstack 22
  8436  003A5A                     
  8437                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
  8438  003A5A  8486               	bsf	134,2,c	;volatile
  8439                           
  8440                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
  8441  003A5C  8686               	bsf	134,3,c	;volatile
  8442                           
  8443                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
  8444  003A5E  010E               	movlb	14	; () banked
  8445  003A60  95B4               	bcf	180,2,b	;volatile
  8446                           
  8447                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
  8448  003A62  97B4               	bcf	180,3,b	;volatile
  8449  003A64                     
  8450                           ; BSR set to: 14
  8451  003A64  0012               	return		;funcret
  8452  003A66                     __end_of_clicker2buttons_init:
  8453                           	callstack 0
  8454                           
  8455 ;; *************** function _clicker2LEDs_init *****************
  8456 ;; Defined at:
  8457 ;;		line 20 in file "buttons_n_LEDs.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;		None
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;		None
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  1    wreg      void 
  8464 ;; Registers used:
  8465 ;;		None
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8475 ;;Total ram usage:        0 bytes
  8476 ;; Hardware stack levels used: 1
  8477 ;; Hardware stack levels required when called: 7
  8478 ;; This function calls:
  8479 ;;		Nothing
  8480 ;; This function is called by:
  8481 ;;		_DCmotors_init
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           	psect	text46
  8486  003A90                     __ptext46:
  8487                           	callstack 0
  8488  003A90                     _clicker2LEDs_init:
  8489                           	callstack 22
  8490  003A90                     
  8491                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
  8492  003A90  9E84               	bcf	132,7,c	;volatile
  8493                           
  8494                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
  8495  003A92  9688               	bcf	136,3,c	;volatile
  8496                           
  8497                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
  8498  003A94  9E7C               	bcf	124,7,c	;volatile
  8499                           
  8500                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
  8501  003A96  9680               	bcf	128,3,c	;volatile
  8502  003A98  0012               	return		;funcret
  8503  003A9A                     __end_of_clicker2LEDs_init:
  8504                           	callstack 0
  8505                           
  8506 ;; *************** function _buggyLEDs_init *****************
  8507 ;; Defined at:
  8508 ;;		line 56 in file "buttons_n_LEDs.c"
  8509 ;; Parameters:    Size  Location     Type
  8510 ;;		None
  8511 ;; Auto vars:     Size  Location     Type
  8512 ;;		None
  8513 ;; Return value:  Size  Location     Type
  8514 ;;                  1    wreg      void 
  8515 ;; Registers used:
  8516 ;;		None
  8517 ;; Tracked objects:
  8518 ;;		On entry : 0/0
  8519 ;;		On exit  : 0/0
  8520 ;;		Unchanged: 0/0
  8521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8526 ;;Total ram usage:        0 bytes
  8527 ;; Hardware stack levels used: 1
  8528 ;; Hardware stack levels required when called: 7
  8529 ;; This function calls:
  8530 ;;		Nothing
  8531 ;; This function is called by:
  8532 ;;		_DCmotors_init
  8533 ;; This function uses a non-reentrant model
  8534 ;;
  8535                           
  8536                           	psect	text47
  8537  003A2A                     __ptext47:
  8538                           	callstack 0
  8539  003A2A                     _buggyLEDs_init:
  8540                           	callstack 22
  8541  003A2A                     
  8542                           ;buttons_n_LEDs.c: 57:     TRISHbits.TRISH1 = 0;
  8543  003A2A  9288               	bcf	136,1,c	;volatile
  8544                           
  8545                           ;buttons_n_LEDs.c: 58:     TRISDbits.TRISD3 = 0;
  8546  003A2C  9684               	bcf	132,3,c	;volatile
  8547                           
  8548                           ;buttons_n_LEDs.c: 59:     TRISDbits.TRISD4 = 0;
  8549  003A2E  9884               	bcf	132,4,c	;volatile
  8550                           
  8551                           ;buttons_n_LEDs.c: 60:     TRISFbits.TRISF0 = 0;
  8552  003A30  9086               	bcf	134,0,c	;volatile
  8553                           
  8554                           ;buttons_n_LEDs.c: 61:     TRISHbits.TRISH0 = 0;
  8555  003A32  9088               	bcf	136,0,c	;volatile
  8556                           
  8557                           ;buttons_n_LEDs.c: 63:     LATHbits.LATH1 = 0;
  8558  003A34  9280               	bcf	128,1,c	;volatile
  8559                           
  8560                           ;buttons_n_LEDs.c: 64:     LATDbits.LATD3 = 0;
  8561  003A36  967C               	bcf	124,3,c	;volatile
  8562                           
  8563                           ;buttons_n_LEDs.c: 65:     LATDbits.LATD4 = 0;
  8564  003A38  987C               	bcf	124,4,c	;volatile
  8565                           
  8566                           ;buttons_n_LEDs.c: 66:     LATFbits.LATF0 = 0;
  8567  003A3A  907E               	bcf	126,0,c	;volatile
  8568                           
  8569                           ;buttons_n_LEDs.c: 67:     LATHbits.LATH0 = 0;
  8570  003A3C  9080               	bcf	128,0,c	;volatile
  8571  003A3E  0012               	return		;funcret
  8572  003A40                     __end_of_buggyLEDs_init:
  8573                           	callstack 0
  8574                           
  8575 ;; *************** function _ADC_init *****************
  8576 ;; Defined at:
  8577 ;;		line 8 in file "ADC.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;		None
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;		None
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		wreg, status,2
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;Total ram usage:        0 bytes
  8596 ;; Hardware stack levels used: 1
  8597 ;; Hardware stack levels required when called: 7
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_main
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           	psect	text48
  8606  0039DE                     __ptext48:
  8607                           	callstack 0
  8608  0039DE                     _ADC_init:
  8609                           	callstack 23
  8610  0039DE                     
  8611                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  8612  0039DE  8C86               	bsf	134,6,c	;volatile
  8613                           
  8614                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  8615  0039E0  010E               	movlb	14	; () banked
  8616  0039E2  8DB4               	bsf	180,6,b	;volatile
  8617                           
  8618                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  8619  0039E4  010F               	movlb	15	; () banked
  8620  0039E6  9958               	bcf	88,4,b	;volatile
  8621  0039E8                     
  8622                           ; BSR set to: 15
  8623                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  8624  0039E8  0EFC               	movlw	-4
  8625  0039EA  1758               	andwf	88,f,b	;volatile
  8626                           
  8627                           ;ADC.c: 16:     ADPCH=0b101110;
  8628  0039EC  0E2E               	movlw	46
  8629  0039EE  6F5F               	movwf	95,b	;volatile
  8630  0039F0                     
  8631                           ; BSR set to: 15
  8632                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  8633  0039F0  9460               	bcf	96,2,c	;volatile
  8634  0039F2                     
  8635                           ; BSR set to: 15
  8636                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  8637  0039F2  8860               	bsf	96,4,c	;volatile
  8638  0039F4                     
  8639                           ; BSR set to: 15
  8640                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  8641  0039F4  8E60               	bsf	96,7,c	;volatile
  8642  0039F6                     
  8643                           ; BSR set to: 15
  8644  0039F6  0012               	return		;funcret
  8645  0039F8                     __end_of_ADC_init:
  8646                           	callstack 0
  8647                           
  8648 ;; *************** function _LowISR *****************
  8649 ;; Defined at:
  8650 ;;		line 77 in file "interrupts.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;		None
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;		None
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8666 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8667 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8668 ;;Total ram usage:        3 bytes
  8669 ;; Hardware stack levels used: 1
  8670 ;; Hardware stack levels required when called: 6
  8671 ;; This function calls:
  8672 ;;		Nothing
  8673 ;; This function is called by:
  8674 ;;		Interrupt level 1
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           	psect	intcodelo
  8679  000018                     __pintcodelo:
  8680                           	callstack 0
  8681  000018                     _LowISR:
  8682                           	callstack 18
  8683                           
  8684                           ; BSR set to: 15
  8685                           ;incstack = 0
  8686  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8687  00001A  CFD8 F007          	movff	status,??_LowISR
  8688  00001E  CFE8 F008          	movff	wreg,??_LowISR+1
  8689  000022  CFE0 F009          	movff	bsr,??_LowISR+2
  8690  000026                     
  8691                           ;interrupts.c: 78:     if (PIR0bits.TMR0IF) {
  8692  000026  010E               	movlb	14	; () banked
  8693  000028  AB33               	btfss	51,5,b	;volatile
  8694  00002A  EF19  F000         	goto	i1u425_21
  8695  00002E  EF1B  F000         	goto	i1u425_20
  8696  000032                     i1u425_21:
  8697  000032  EF26  F000         	goto	i1l144
  8698  000036                     i1u425_20:
  8699  000036                     
  8700                           ; BSR set to: 14
  8701                           ;interrupts.c: 79:         returnhome_flag = 1;
  8702  000036  0E01               	movlw	1
  8703  000038  0100               	movlb	0	; () banked
  8704  00003A  6FB5               	movwf	_returnhome_flag& (0+255),b	;volatile
  8705                           
  8706                           ;interrupts.c: 80:         overtime_flag = 1;
  8707  00003C  0E01               	movlw	1
  8708  00003E  6FB4               	movwf	_overtime_flag& (0+255),b	;volatile
  8709                           
  8710                           ;interrupts.c: 81:         TMR0H=0b1011;
  8711  000040  0E0B               	movlw	11
  8712  000042  6ED4               	movwf	212,c	;volatile
  8713                           
  8714                           ;interrupts.c: 82:         TMR0L=0b11011011;
  8715  000044  0EDB               	movlw	219
  8716  000046  6ED3               	movwf	211,c	;volatile
  8717  000048                     
  8718                           ; BSR set to: 0
  8719                           ;interrupts.c: 83:         PIR0bits.TMR0IF = 0;
  8720  000048  010E               	movlb	14	; () banked
  8721  00004A  9B33               	bcf	51,5,b	;volatile
  8722  00004C                     i1l144:
  8723                           
  8724                           ; BSR set to: 14
  8725  00004C  C009  FFE0         	movff	??_LowISR+2,bsr
  8726  000050  C008  FFE8         	movff	??_LowISR+1,wreg
  8727  000054  C007  FFD8         	movff	??_LowISR,status
  8728  000058  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8729  00005A  0010               	retfie	
  8730  00005C                     __end_of_LowISR:
  8731                           	callstack 0
  8732                           
  8733 ;; *************** function _HighISR *****************
  8734 ;; Defined at:
  8735 ;;		line 64 in file "interrupts.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;		None
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;		None
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      void 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0, cstack
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;Total ram usage:        1 bytes
  8754 ;; Hardware stack levels used: 1
  8755 ;; Hardware stack levels required when called: 5
  8756 ;; This function calls:
  8757 ;;		i2_interrupts_clear
  8758 ;; This function is called by:
  8759 ;;		Interrupt level 2
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	intcode
  8764  000008                     __pintcode:
  8765                           	callstack 0
  8766  000008                     _HighISR:
  8767                           	callstack 18
  8768                           
  8769                           ; BSR set to: 14
  8770                           ;incstack = 0
  8771  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8772  00000A  EFAE  F01B         	goto	int_func
  8773                           
  8774                           	psect	intcode_body
  8775  00375C                     __pintcode_body:
  8776                           	callstack 18
  8777  00375C                     int_func:
  8778                           	callstack 18
  8779  00375C                     
  8780                           ;interrupts.c: 65:     if (PIR0bits.INT1IF) {
  8781  00375C  010E               	movlb	14	; () banked
  8782  00375E  A333               	btfss	51,1,b	;volatile
  8783  003760  EFB4  F01B         	goto	i2u422_41
  8784  003764  EFB6  F01B         	goto	i2u422_40
  8785  003768                     i2u422_41:
  8786  003768  EFCE  F01B         	goto	i2l138
  8787  00376C                     i2u422_40:
  8788  00376C                     
  8789                           ; BSR set to: 14
  8790                           ;interrupts.c: 66:         colourcard_flag = 1;
  8791  00376C  0E01               	movlw	1
  8792  00376E  0100               	movlb	0	; () banked
  8793  003770  6FB7               	movwf	_colourcard_flag& (0+255),b	;volatile
  8794  003772                     
  8795                           ; BSR set to: 0
  8796                           ;interrupts.c: 67:         LATDbits.LATD7 = !LATDbits.LATD7;
  8797  003772  AE7C               	btfss	124,7,c	;volatile
  8798  003774  EFBE  F01B         	goto	i2u423_41
  8799  003778  EFC2  F01B         	goto	i2u423_40
  8800  00377C                     i2u423_41:
  8801  00377C  6A06               	clrf	??_HighISR^0,c
  8802  00377E  2A06               	incf	??_HighISR^0,f,c
  8803  003780  EFC3  F01B         	goto	i2u424_48
  8804  003784                     i2u423_40:
  8805  003784  6A06               	clrf	??_HighISR^0,c
  8806  003786                     i2u424_48:
  8807  003786  3206               	rrcf	??_HighISR^0,f,c
  8808  003788  3206               	rrcf	??_HighISR^0,f,c
  8809  00378A  507C               	movf	124,w,c	;volatile
  8810  00378C  1806               	xorwf	??_HighISR^0,w,c
  8811  00378E  0B7F               	andlw	-129
  8812  003790  1806               	xorwf	??_HighISR^0,w,c
  8813  003792  6E7C               	movwf	124,c	;volatile
  8814  003794                     
  8815                           ;interrupts.c: 68:         interrupts_clear();
  8816  003794  ECFC  F01C         	call	i2_interrupts_clear	;wreg free
  8817  003798                     
  8818                           ;interrupts.c: 69:         PIR0bits.INT1IF = 0;
  8819  003798  010E               	movlb	14	; () banked
  8820  00379A  9333               	bcf	51,1,b	;volatile
  8821  00379C                     i2l138:
  8822                           
  8823                           ; BSR set to: 14
  8824  00379C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8825  00379E  0011               	retfie		f
  8826  0037A0                     __end_of_HighISR:
  8827                           	callstack 0
  8828                           
  8829 ;; *************** function i2_interrupts_clear *****************
  8830 ;; Defined at:
  8831 ;;		line 37 in file "interrupts.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;		None
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;		None
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, status,2, status,0, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8849 ;;Total ram usage:        0 bytes
  8850 ;; Hardware stack levels used: 1
  8851 ;; Hardware stack levels required when called: 4
  8852 ;; This function calls:
  8853 ;;		i2_I2C_2_Master_Start
  8854 ;;		i2_I2C_2_Master_Stop
  8855 ;;		i2_I2C_2_Master_Write
  8856 ;;		i2_interrupts_colourclick
  8857 ;; This function is called by:
  8858 ;;		_HighISR
  8859 ;; This function uses a non-reentrant model
  8860 ;;
  8861                           
  8862                           	psect	text51
  8863  0039F8                     __ptext51:
  8864                           	callstack 0
  8865  0039F8                     i2_interrupts_clear:
  8866                           	callstack 18
  8867  0039F8                     
  8868                           ;interrupts.c: 38:     I2C_2_Master_Start();
  8869  0039F8  EC52  F01D         	call	i2_I2C_2_Master_Start	;wreg free
  8870                           
  8871                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  8872  0039FC  0E52               	movlw	82
  8873  0039FE  EC33  F01D         	call	i2_I2C_2_Master_Write
  8874                           
  8875                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  8876  003A02  0EE6               	movlw	230
  8877  003A04  EC33  F01D         	call	i2_I2C_2_Master_Write
  8878                           
  8879                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  8880  003A08  EC4D  F01D         	call	i2_I2C_2_Master_Stop	;wreg free
  8881                           
  8882                           ;interrupts.c: 43:     interrupts_colourclick();
  8883  003A0C  EC87  F01B         	call	i2_interrupts_colourclick	;wreg free
  8884  003A10  0012               	return		;funcret
  8885  003A12                     __end_ofi2_interrupts_clear:
  8886                           	callstack 0
  8887                           
  8888 ;; *************** function i2_interrupts_colourclick *****************
  8889 ;; Defined at:
  8890 ;;		line 50 in file "interrupts.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;		None
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;		None
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  1    wreg      void 
  8897 ;; Registers used:
  8898 ;;		wreg, status,2, status,0, cstack
  8899 ;; Tracked objects:
  8900 ;;		On entry : 0/0
  8901 ;;		On exit  : 0/0
  8902 ;;		Unchanged: 0/0
  8903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8908 ;;Total ram usage:        1 bytes
  8909 ;; Hardware stack levels used: 1
  8910 ;; Hardware stack levels required when called: 3
  8911 ;; This function calls:
  8912 ;;		i2_colourclick_writetoaddr
  8913 ;; This function is called by:
  8914 ;;		i2_interrupts_clear
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           	psect	text52
  8919  00370E                     __ptext52:
  8920                           	callstack 0
  8921  00370E                     i2_interrupts_colourclick:
  8922                           	callstack 18
  8923  00370E                     
  8924                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
  8925  00370E  0E13               	movlw	19
  8926  003710  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  8927  003712  0E00               	movlw	0
  8928  003714  ECD2  F01C         	call	i2_colourclick_writetoaddr
  8929  003718                     
  8930                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8931  003718  0E3F               	movlw	63
  8932  00371A  6E05               	movwf	??i2_interrupts_colourclick^0,c
  8933  00371C  0E55               	movlw	85
  8934  00371E                     i2u614_47:
  8935  00371E  2EE8               	decfsz	wreg,f,c
  8936  003720  D7FE               	bra	i2u614_47
  8937  003722  2E05               	decfsz	??i2_interrupts_colourclick^0,f,c
  8938  003724  D7FC               	bra	i2u614_47
  8939  003726  F000               	nop	
  8940  003728                     
  8941                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
  8942  003728  0E04               	movlw	4
  8943  00372A  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  8944  00372C  0E0C               	movlw	12
  8945  00372E  ECD2  F01C         	call	i2_colourclick_writetoaddr
  8946  003732                     
  8947                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  8948  003732  C054  F003         	movff	_interrupts_lowerbound,i2colourclick_writetoaddr@value	;volatile
  8949  003736  0E04               	movlw	4
  8950  003738  ECD2  F01C         	call	i2_colourclick_writetoaddr
  8951  00373C                     
  8952                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  8953  00373C  5055               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  8954  00373E  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  8955  003740  0E05               	movlw	5
  8956  003742  ECD2  F01C         	call	i2_colourclick_writetoaddr
  8957  003746                     
  8958                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  8959  003746  C052  F003         	movff	_interrupts_upperbound,i2colourclick_writetoaddr@value	;volatile
  8960  00374A  0E06               	movlw	6
  8961  00374C  ECD2  F01C         	call	i2_colourclick_writetoaddr
  8962  003750                     
  8963                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  8964  003750  5053               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  8965  003752  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  8966  003754  0E07               	movlw	7
  8967  003756  ECD2  F01C         	call	i2_colourclick_writetoaddr
  8968  00375A  0012               	return		;funcret
  8969  00375C                     __end_ofi2_interrupts_colourclick:
  8970                           	callstack 0
  8971                           
  8972 ;; *************** function i2_colourclick_writetoaddr *****************
  8973 ;; Defined at:
  8974 ;;		line 33 in file "colour_click.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;  address         1    wreg     unsigned char 
  8977 ;;  value           1    2[COMRAM] unsigned char 
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;  address         1    3[COMRAM] unsigned char 
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  1    wreg      void 
  8982 ;; Registers used:
  8983 ;;		wreg, status,2, status,0, cstack
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8989 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8992 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;Total ram usage:        2 bytes
  8994 ;; Hardware stack levels used: 1
  8995 ;; Hardware stack levels required when called: 2
  8996 ;; This function calls:
  8997 ;;		i2_I2C_2_Master_Start
  8998 ;;		i2_I2C_2_Master_Stop
  8999 ;;		i2_I2C_2_Master_Write
  9000 ;; This function is called by:
  9001 ;;		i2_interrupts_colourclick
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text53
  9006  0039A4                     __ptext53:
  9007                           	callstack 0
  9008  0039A4                     i2_colourclick_writetoaddr:
  9009                           	callstack 18
  9010                           
  9011                           ;incstack = 0
  9012                           ;i2colourclick_writetoaddr@address stored from wreg
  9013  0039A4  6E04               	movwf	i2colourclick_writetoaddr@address^0,c
  9014  0039A6                     
  9015                           ;colour_click.c: 34:     I2C_2_Master_Start();
  9016  0039A6  EC52  F01D         	call	i2_I2C_2_Master_Start	;wreg free
  9017                           
  9018                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  9019  0039AA  0E52               	movlw	82
  9020  0039AC  EC33  F01D         	call	i2_I2C_2_Master_Write
  9021                           
  9022                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  9023  0039B0  5004               	movf	i2colourclick_writetoaddr@address^0,w,c
  9024  0039B2  0980               	iorlw	128
  9025  0039B4  EC33  F01D         	call	i2_I2C_2_Master_Write
  9026                           
  9027                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  9028  0039B8  5003               	movf	i2colourclick_writetoaddr@value^0,w,c
  9029  0039BA  EC33  F01D         	call	i2_I2C_2_Master_Write
  9030                           
  9031                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  9032  0039BE  EC4D  F01D         	call	i2_I2C_2_Master_Stop	;wreg free
  9033  0039C2  0012               	return		;funcret
  9034  0039C4                     __end_ofi2_colourclick_writetoaddr:
  9035                           	callstack 0
  9036                           
  9037 ;; *************** function i2_I2C_2_Master_Write *****************
  9038 ;; Defined at:
  9039 ;;		line 64 in file "I2C.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  data_byte       1    wreg     unsigned char 
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;  data_byte       1    1[COMRAM] unsigned char 
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  1    wreg      void 
  9046 ;; Registers used:
  9047 ;;		wreg, status,2, status,0, cstack
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9057 ;;Total ram usage:        1 bytes
  9058 ;; Hardware stack levels used: 1
  9059 ;; Hardware stack levels required when called: 1
  9060 ;; This function calls:
  9061 ;;		i2_I2C_2_Master_Idle
  9062 ;; This function is called by:
  9063 ;;		i2_interrupts_clear
  9064 ;;		i2_colourclick_writetoaddr
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text54
  9069  003A66                     __ptext54:
  9070                           	callstack 0
  9071  003A66                     i2_I2C_2_Master_Write:
  9072                           	callstack 18
  9073                           
  9074                           ;incstack = 0
  9075                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9076  003A66  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9077  003A68                     
  9078                           ;I2C.c: 65:   I2C_2_Master_Idle();
  9079  003A68  EC36  F01C         	call	i2_I2C_2_Master_Idle	;wreg free
  9080  003A6C                     
  9081                           ;I2C.c: 66:   SSP2BUF = data_byte;
  9082  003A6C  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9083  003A70  0012               	return		;funcret
  9084  003A72                     __end_ofi2_I2C_2_Master_Write:
  9085                           	callstack 0
  9086                           
  9087 ;; *************** function i2_I2C_2_Master_Stop *****************
  9088 ;; Defined at:
  9089 ;;		line 55 in file "I2C.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;		None
  9092 ;; Auto vars:     Size  Location     Type
  9093 ;;		None
  9094 ;; Return value:  Size  Location     Type
  9095 ;;                  1    wreg      void 
  9096 ;; Registers used:
  9097 ;;		wreg, status,2, status,0, cstack
  9098 ;; Tracked objects:
  9099 ;;		On entry : 0/0
  9100 ;;		On exit  : 0/0
  9101 ;;		Unchanged: 0/0
  9102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9107 ;;Total ram usage:        0 bytes
  9108 ;; Hardware stack levels used: 1
  9109 ;; Hardware stack levels required when called: 1
  9110 ;; This function calls:
  9111 ;;		i2_I2C_2_Master_Idle
  9112 ;; This function is called by:
  9113 ;;		i2_interrupts_clear
  9114 ;;		i2_colourclick_writetoaddr
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text55
  9119  003A9A                     __ptext55:
  9120                           	callstack 0
  9121  003A9A                     i2_I2C_2_Master_Stop:
  9122                           	callstack 18
  9123  003A9A                     
  9124                           ;I2C.c: 56:   I2C_2_Master_Idle();
  9125  003A9A  EC36  F01C         	call	i2_I2C_2_Master_Idle	;wreg free
  9126  003A9E                     
  9127                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
  9128  003A9E  010E               	movlb	14	; () banked
  9129  003AA0  85DA               	bsf	218,2,b	;volatile
  9130  003AA2                     
  9131                           ; BSR set to: 14
  9132  003AA2  0012               	return		;funcret
  9133  003AA4                     __end_ofi2_I2C_2_Master_Stop:
  9134                           	callstack 0
  9135                           
  9136 ;; *************** function i2_I2C_2_Master_Start *****************
  9137 ;; Defined at:
  9138 ;;		line 37 in file "I2C.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;		None
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;		None
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  1    wreg      void 
  9145 ;; Registers used:
  9146 ;;		wreg, status,2, status,0, cstack
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9156 ;;Total ram usage:        0 bytes
  9157 ;; Hardware stack levels used: 1
  9158 ;; Hardware stack levels required when called: 1
  9159 ;; This function calls:
  9160 ;;		i2_I2C_2_Master_Idle
  9161 ;; This function is called by:
  9162 ;;		i2_interrupts_clear
  9163 ;;		i2_colourclick_writetoaddr
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text56
  9168  003AA4                     __ptext56:
  9169                           	callstack 0
  9170  003AA4                     i2_I2C_2_Master_Start:
  9171                           	callstack 18
  9172  003AA4                     
  9173                           ;I2C.c: 38:   I2C_2_Master_Idle();
  9174  003AA4  EC36  F01C         	call	i2_I2C_2_Master_Idle	;wreg free
  9175  003AA8                     
  9176                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
  9177  003AA8  010E               	movlb	14	; () banked
  9178  003AAA  81DA               	bsf	218,0,b	;volatile
  9179  003AAC                     
  9180                           ; BSR set to: 14
  9181  003AAC  0012               	return		;funcret
  9182  003AAE                     __end_ofi2_I2C_2_Master_Start:
  9183                           	callstack 0
  9184                           
  9185 ;; *************** function i2_I2C_2_Master_Idle *****************
  9186 ;; Defined at:
  9187 ;;		line 29 in file "I2C.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;		None
  9190 ;; Auto vars:     Size  Location     Type
  9191 ;;		None
  9192 ;; Return value:  Size  Location     Type
  9193 ;;                  1    wreg      void 
  9194 ;; Registers used:
  9195 ;;		wreg, status,2, status,0
  9196 ;; Tracked objects:
  9197 ;;		On entry : 0/0
  9198 ;;		On exit  : 0/0
  9199 ;;		Unchanged: 0/0
  9200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9204 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9205 ;;Total ram usage:        1 bytes
  9206 ;; Hardware stack levels used: 1
  9207 ;; This function calls:
  9208 ;;		Nothing
  9209 ;; This function is called by:
  9210 ;;		i2_I2C_2_Master_Start
  9211 ;;		i2_I2C_2_Master_Stop
  9212 ;;		i2_I2C_2_Master_Write
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           	psect	text57
  9217  00386C                     __ptext57:
  9218                           	callstack 0
  9219  00386C                     i2_I2C_2_Master_Idle:
  9220                           	callstack 18
  9221  00386C                     i2l437:
  9222  00386C  010E               	movlb	14	; () banked
  9223  00386E  B5D8               	btfsc	216,2,b	;volatile
  9224  003870  EF3C  F01C         	goto	i2u261_41
  9225  003874  EF3E  F01C         	goto	i2u261_40
  9226  003878                     i2u261_41:
  9227  003878  EF36  F01C         	goto	i2l437
  9228  00387C                     i2u261_40:
  9229  00387C                     
  9230                           ; BSR set to: 14
  9231  00387C  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9232  003880  0E1F               	movlw	31
  9233  003882  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9234  003884  A4D8               	btfss	status,2,c
  9235  003886  EF47  F01C         	goto	i2u262_41
  9236  00388A  EF49  F01C         	goto	i2u262_40
  9237  00388E                     i2u262_41:
  9238  00388E  EF36  F01C         	goto	i2l437
  9239  003892                     i2u262_40:
  9240  003892                     
  9241                           ; BSR set to: 14
  9242  003892  0012               	return		;funcret
  9243  003894                     __end_ofi2_I2C_2_Master_Idle:
  9244                           	callstack 0
  9245                           
  9246                           	psect	rparam
  9247  0000                     
  9248                           	psect	temp
  9249  000056                     btemp:
  9250                           	callstack 0
  9251  000056                     	ds	1
  9252  0000                     int$flags	set	btemp
  9253  0000                     wtemp8	set	btemp+1
  9254  0000                     ttemp5	set	btemp+1
  9255  0000                     ttemp6	set	btemp+4
  9256  0000                     ttemp7	set	btemp+8
  9257                           
  9258                           	psect	idloc
  9259                           
  9260                           ;Config register IDLOC0 @ 0x200000
  9261                           ;	unspecified, using default values
  9262  200000                     	org	2097152
  9263  200000  0FFF               	dw	4095
  9264                           
  9265                           ;Config register IDLOC1 @ 0x200002
  9266                           ;	unspecified, using default values
  9267  200002                     	org	2097154
  9268  200002  0FFF               	dw	4095
  9269                           
  9270                           ;Config register IDLOC2 @ 0x200004
  9271                           ;	unspecified, using default values
  9272  200004                     	org	2097156
  9273  200004  0FFF               	dw	4095
  9274                           
  9275                           ;Config register IDLOC3 @ 0x200006
  9276                           ;	unspecified, using default values
  9277  200006                     	org	2097158
  9278  200006  0FFF               	dw	4095
  9279                           
  9280                           ;Config register IDLOC4 @ 0x200008
  9281                           ;	unspecified, using default values
  9282  200008                     	org	2097160
  9283  200008  0FFF               	dw	4095
  9284                           
  9285                           ;Config register IDLOC5 @ 0x20000A
  9286                           ;	unspecified, using default values
  9287  20000A                     	org	2097162
  9288  20000A  0FFF               	dw	4095
  9289                           
  9290                           ;Config register IDLOC6 @ 0x20000C
  9291                           ;	unspecified, using default values
  9292  20000C                     	org	2097164
  9293  20000C  0FFF               	dw	4095
  9294                           
  9295                           ;Config register IDLOC7 @ 0x20000E
  9296                           ;	unspecified, using default values
  9297  20000E                     	org	2097166
  9298  20000E  0FFF               	dw	4095
  9299                           
  9300                           	psect	config
  9301                           
  9302                           ;Config register CONFIG1L @ 0x300000
  9303                           ;	External Oscillator mode Selection bits
  9304                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9305                           ;	Power-up default value for COSC bits
  9306                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9307  300000                     	org	3145728
  9308  300000  AA                 	db	170
  9309                           
  9310                           ;Config register CONFIG1H @ 0x300001
  9311                           ;	unspecified, using default values
  9312                           ;	Clock Out Enable bit
  9313                           ;	CLKOUTEN = 0x1, unprogrammed default
  9314                           ;	Clock Switch Enable bit
  9315                           ;	CSWEN = 0x1, unprogrammed default
  9316                           ;	Fail-Safe Clock Monitor Enable bit
  9317                           ;	FCMEN = 0x1, unprogrammed default
  9318  300001                     	org	3145729
  9319  300001  FF                 	db	255
  9320                           
  9321                           ;Config register CONFIG2L @ 0x300002
  9322                           ;	unspecified, using default values
  9323                           ;	Master Clear Enable bit
  9324                           ;	MCLRE = 0x1, unprogrammed default
  9325                           ;	Power-up Timer Enable bit
  9326                           ;	PWRTE = 0x1, unprogrammed default
  9327                           ;	Low-power BOR enable bit
  9328                           ;	LPBOREN = 0x1, unprogrammed default
  9329                           ;	Brown-out Reset Enable bits
  9330                           ;	BOREN = 0x3, unprogrammed default
  9331  300002                     	org	3145730
  9332  300002  FF                 	db	255
  9333                           
  9334                           ;Config register CONFIG2H @ 0x300003
  9335                           ;	unspecified, using default values
  9336                           ;	Brown Out Reset Voltage selection bits
  9337                           ;	BORV = 0x3, unprogrammed default
  9338                           ;	ZCD Disable bit
  9339                           ;	ZCD = 0x1, unprogrammed default
  9340                           ;	PPSLOCK bit One-Way Set Enable bit
  9341                           ;	PPS1WAY = 0x1, unprogrammed default
  9342                           ;	Stack Full/Underflow Reset Enable bit
  9343                           ;	STVREN = 0x1, unprogrammed default
  9344                           ;	Debugger Enable bit
  9345                           ;	DEBUG = 0x1, unprogrammed default
  9346                           ;	Extended Instruction Set Enable bit
  9347                           ;	XINST = 0x1, unprogrammed default
  9348  300003                     	org	3145731
  9349  300003  FF                 	db	255
  9350                           
  9351                           ;Config register CONFIG3L @ 0x300004
  9352                           ;	WDT Period Select bits
  9353                           ;	WDTCPS = 0x1F, unprogrammed default
  9354                           ;	WDT operating mode
  9355                           ;	WDTE = OFF, WDT Disabled
  9356  300004                     	org	3145732
  9357  300004  9F                 	db	159
  9358                           
  9359                           ;Config register CONFIG3H @ 0x300005
  9360                           ;	unspecified, using default values
  9361                           ;	WDT Window Select bits
  9362                           ;	WDTCWS = 0x7, unprogrammed default
  9363                           ;	WDT input clock selector
  9364                           ;	WDTCCS = 0x7, unprogrammed default
  9365  300005                     	org	3145733
  9366  300005  FF                 	db	255
  9367                           
  9368                           ;Config register CONFIG4L @ 0x300006
  9369                           ;	unspecified, using default values
  9370                           ;	Write Protection Block 0
  9371                           ;	WRT0 = 0x1, unprogrammed default
  9372                           ;	Write Protection Block 1
  9373                           ;	WRT1 = 0x1, unprogrammed default
  9374                           ;	Write Protection Block 2
  9375                           ;	WRT2 = 0x1, unprogrammed default
  9376                           ;	Write Protection Block 3
  9377                           ;	WRT3 = 0x1, unprogrammed default
  9378                           ;	Write Protection Block 3
  9379                           ;	WRT4 = 0x1, unprogrammed default
  9380                           ;	Write Protection Block 3
  9381                           ;	WRT5 = 0x1, unprogrammed default
  9382                           ;	Write Protection Block 3
  9383                           ;	WRT6 = 0x1, unprogrammed default
  9384                           ;	Write Protection Block 3
  9385                           ;	WRT7 = 0x1, unprogrammed default
  9386  300006                     	org	3145734
  9387  300006  FF                 	db	255
  9388                           
  9389                           ;Config register CONFIG4H @ 0x300007
  9390                           ;	unspecified, using default values
  9391                           ;	Configuration Register Write Protection bit
  9392                           ;	WRTC = 0x1, unprogrammed default
  9393                           ;	Boot Block Write Protection bit
  9394                           ;	WRTB = 0x1, unprogrammed default
  9395                           ;	Data EEPROM Write Protection bit
  9396                           ;	WRTD = 0x1, unprogrammed default
  9397                           ;	Scanner Enable bit
  9398                           ;	SCANE = 0x1, unprogrammed default
  9399                           ;	Low Voltage Programming Enable bit
  9400                           ;	LVP = 0x1, unprogrammed default
  9401  300007                     	org	3145735
  9402  300007  FF                 	db	255
  9403                           
  9404                           ;Config register CONFIG5L @ 0x300008
  9405                           ;	unspecified, using default values
  9406                           ;	UserNVM Program Memory Code Protection bit
  9407                           ;	CP = 0x1, unprogrammed default
  9408                           ;	DataNVM Memory Code Protection bit
  9409                           ;	CPD = 0x1, unprogrammed default
  9410  300008                     	org	3145736
  9411  300008  FF                 	db	255
  9412                           
  9413                           ;Config register CONFIG5H @ 0x300009
  9414                           ;	unspecified, using default values
  9415  300009                     	org	3145737
  9416  300009  FF                 	db	255
  9417                           
  9418                           ;Config register CONFIG6L @ 0x30000A
  9419                           ;	unspecified, using default values
  9420                           ;	Table Read Protection Block 0
  9421                           ;	EBTR0 = 0x1, unprogrammed default
  9422                           ;	Table Read Protection Block 1
  9423                           ;	EBTR1 = 0x1, unprogrammed default
  9424                           ;	Table Read Protection Block 2
  9425                           ;	EBTR2 = 0x1, unprogrammed default
  9426                           ;	Table Read Protection Block 3
  9427                           ;	EBTR3 = 0x1, unprogrammed default
  9428                           ;	Table Read Protection Block 4
  9429                           ;	EBTR4 = 0x1, unprogrammed default
  9430                           ;	Table Read Protection Block 5
  9431                           ;	EBTR5 = 0x1, unprogrammed default
  9432                           ;	Table Read Protection Block 6
  9433                           ;	EBTR6 = 0x1, unprogrammed default
  9434                           ;	Table Read Protection Block 7
  9435                           ;	EBTR7 = 0x1, unprogrammed default
  9436  30000A                     	org	3145738
  9437  30000A  FF                 	db	255
  9438                           
  9439                           ;Config register CONFIG6H @ 0x30000B
  9440                           ;	unspecified, using default values
  9441                           ;	Boot Block Table Read Protection bit
  9442                           ;	EBTRB = 0x1, unprogrammed default
  9443  30000B                     	org	3145739
  9444  30000B  FF                 	db	255
  9445                           tosu	equ	0xFFF
  9446                           tosh	equ	0xFFE
  9447                           tosl	equ	0xFFD
  9448                           stkptr	equ	0xFFC
  9449                           pclatu	equ	0xFFB
  9450                           pclath	equ	0xFFA
  9451                           pcl	equ	0xFF9
  9452                           tblptru	equ	0xFF8
  9453                           tblptrh	equ	0xFF7
  9454                           tblptrl	equ	0xFF6
  9455                           tablat	equ	0xFF5
  9456                           prodh	equ	0xFF4
  9457                           prodl	equ	0xFF3
  9458                           indf0	equ	0xFEF
  9459                           postinc0	equ	0xFEE
  9460                           postdec0	equ	0xFED
  9461                           preinc0	equ	0xFEC
  9462                           plusw0	equ	0xFEB
  9463                           fsr0h	equ	0xFEA
  9464                           fsr0l	equ	0xFE9
  9465                           wreg	equ	0xFE8
  9466                           indf1	equ	0xFE7
  9467                           postinc1	equ	0xFE6
  9468                           postdec1	equ	0xFE5
  9469                           preinc1	equ	0xFE4
  9470                           plusw1	equ	0xFE3
  9471                           fsr1h	equ	0xFE2
  9472                           fsr1l	equ	0xFE1
  9473                           bsr	equ	0xFE0
  9474                           indf2	equ	0xFDF
  9475                           postinc2	equ	0xFDE
  9476                           postdec2	equ	0xFDD
  9477                           preinc2	equ	0xFDC
  9478                           plusw2	equ	0xFDB
  9479                           fsr2h	equ	0xFDA
  9480                           fsr2l	equ	0xFD9
  9481                           status	equ	0xFD8

Data Sizes:
    Strings     162
    Constant    0
    Data        0
    BSS         8
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      85
    BANK0           160     84      88
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S2978_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC@buf(BANK0[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC@buf(BANK0[100]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    clearance@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    clearance@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@initial(COMRAM[8]), colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC@rel(COMRAM[12]), colourcards_readRGBC@rel(BANK0[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_readRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S29$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S29$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _interrupts_clear->_interrupts_colourclick
    _interrupts_colourclick->_colourclick_writetoaddr
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _colourclick_calibration->_colourclick_readRGBC
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right
    _right->___fldiv
    _left->___fldiv
    ___flmul->___xxtofl
    ___flge->___xxtofl
    ___fladd->___flmul
    _forward->_DCmotors_setPWM
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    ___fldiv->___fladd
    _clearance->_stop
    _stop->_DCmotors_setPWM
    _reverse->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul
    _checkbatterylevel->_ADC_getval

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_interrupts_colourclick
    i2_interrupts_colourclick->i2_colourclick_writetoaddr
    i2_colourclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_colourcards_readRGBC
    _colourcards_readRGBC->_turnleft
    _colourcards_readRGBC->_turnright
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right
    _right->___fldiv
    _left->___fldiv
    _colourcards_normaliseRGBC->___fldiv

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  130985
                                             55 BANK0     29    29      0
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                  _colourclickLEDs_C
            _colourclick_calibration
                   _colourclick_init
               _colourclick_readRGBC
                            _forward
                    _interrupts_init
                            _reverse
                               _stop
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     772
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
             _interrupts_colourclick
 ---------------------------------------------------------------------------------
 (3) _interrupts_colourclick                               1     1      0     750
                                             13 COMRAM     1     1      0
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     816
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colourclick_writetoaddr                              2     1      1     750
                                             11 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourclick_calibration                             10    10      0    1290
                                             22 COMRAM    10    10      0
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                20    14      6  113632
                                             35 BANK0     20    14      6
                             ___flge
                          _clearance
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6   37162
                                             29 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6   36352
                                             29 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                               17    11      6   16868
                                             76 COMRAM     1     1      0
                                             13 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _left                                                17    11      6   16868
                                             76 COMRAM     1     1      0
                                             13 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2200
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    5958
                                             23 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2540
                                             48 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _forward                                              5     1      4    2575
                                             34 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC2                                5     2      3    2258
                                             22 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourclick_readRGBC                                 2     0      2    1148
                                             20 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (2) _colourclick_readR                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readG                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readC                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readB                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                             10 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourcards_normaliseRGBC                           12     8      4    5096
                                             13 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1234
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2007
                                             64 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _clearance                                            6     2      4   10514
                                             40 COMRAM     6     2      4
                            _reverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    6483
                                             34 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _reverse                                              5     1      4    2879
                                             34 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    1943
                                             23 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                             15 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                             10 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              9 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowISR                                               3     3      0       0
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              1     1      0     244
                                              5 COMRAM     1     1      0
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (9) i2_interrupts_clear                                   0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
           i2_interrupts_colourclick
 ---------------------------------------------------------------------------------
 (10) i2_interrupts_colourclick                            1     1      0     222
                                              4 COMRAM     1     1      0
          i2_colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (11) i2_colourclick_writetoaddr                           2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_readRGBC
     ___flge
       ___xxtofl (ARG)
     _clearance
       _reverse
         _DCmotors_setPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _DCmotors_setPWM
     _colourcards_normaliseRGBC
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
     _reverse
     _stop
     _turnleft
       _left
         _DCmotors_setPWM
         ___fladd
         ___fldiv
         ___flge
         ___flmul
         ___xxtofl
       _right
         _DCmotors_setPWM
         ___fladd
         ___fldiv
         ___flge
         ___flmul
         ___xxtofl
     _turnright
       _left
       _right
   _colourclickLEDs_C
   _colourclick_calibration
     _colourclickLEDs_C
     _colourclick_readRGBC
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colourclick_readRGBC
   _forward
   _interrupts_init
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _interrupts_colourclick
         _colourclick_writetoaddr
   _reverse
   _stop
   _timer0_init

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_interrupts_colourclick
       i2_colourclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      58       5       55.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AD       8        0.0%
DATA                 0      0      AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 03:52:52 2021

      colourcards_normaliseRGBC@rel 006F         colourclick_readRGBC2@tmpval 0017  
                      ___fldiv@aexp 006C                        ___fldiv@bexp 006B  
                      ___fldiv@sign 0064                                  l71 23EC  
                                l67 23D0               __end_of_DCmotors_init 36C0  
                      ___awdiv@sign 0015                                  bsr 000FE0  
               ___wmul@multiplicand 000C                                 l132 370C  
                               l126 3900                                 l311 357E  
                               l320 361E                                 l224 165A  
                               l401 3A4C                                 l305 3818  
                               l129 39DC                                 l314 35CE  
                               l323 3430                                 l331 2FBE  
                               l227 16AC                                 l404 3922  
                               l340 31C4                                 l308 3962  
                               l317 366E                                 l341 322C  
                               l262 2E68                                 l334 3188  
                               l407 3A3E                                 l600 33D2  
                               l440 386A                                 l362 39F6  
                               l610 2962                                 l338 31A4  
                               l434 3842                                 l443 3A84  
                               l611 2964                                 l339 31B4  
                               l452 3A58                                 l365 3A14  
                               l437 3844                                 l621 275C  
                               l446 3A8E                                 l622 275E  
                               l367 3A22                                 l455 37E0  
                               l480 39A2                                 l368 3A28  
                               l632 34DE                                 l561 36BE  
                               l449 3A7A                                 l395 3A64  
                               l571 3980                                 l627 352E  
                               l573 3982                                 l581 32BA  
                               l398 3A98                                 l568 2B38  
                               l592 348E                                 l744 3942  
                               l747 38B8                                 l589 3348  
                               l978 3186                                 wreg 000FE8  
                      ___flmul@aexp 0029                        ___flmul@bexp 002A  
                      ___flmul@sign 0024                        ___flmul@temp 002F  
             ?_colourclick_readRGBC 0015                        ___flmul@prod 002B  
               __size_of_ADC_getval 0018                                l1012 307C  
                              l1017 30C2                                l1301 1A86  
                              l1302 1A74                                l1402 2B90  
                              l1331 2192                                l1340 21D8  
                              l3101 30E2                                l1405 2CEC  
                              l1342 2250                                l1334 2156  
                              l3111 3116                                l3103 30F0  
                              l1343 223E                                l1416 2C84  
                              l4001 39F2                                l3121 3150  
                              l3113 311E                                l3105 30F8  
                              l1329 2332                                l1409 2C28  
                              l3201 171A                                l1361 1C32  
                              l1370 1EA0                                l4003 39F4  
                              l3131 3176                                l3123 3158  
                              l3115 3126                                l3107 30FC  
                              l1275 189C                                l3211 1744  
                              l3203 172C                                l1371 1E8E  
                              l4011 3800                                l1292 19B6  
                              l1284 1B6C                                l1276 188A  
                              l4021 368A                                l3133 317E  
                              l3125 315A                                l3117 3134  
                              l3109 3104                                l3053 3844  
                              l3061 3A50                                l3301 191A  
                              l1277 1850                                l3213 1754  
                              l3221 177E                                l3205 172E  
                              l1365 1F96                                l4101 3214  
                              l3141 3946                                l4013 380A  
                              l4005 37E2                                l4031 3694  
                              l4023 368C                                l3127 3160  
                              l3119 313A                                l3055 3854  
                              l3071 3A8A                                l3063 3A54  
                              l3151 35C6                                l3143 3530  
                              l3311 1986                                l3303 1924  
                              l3231 17B6                                l3223 178E  
                              l3215 1764                                l3207 1734  
                              l4103 3220                                l4015 3814  
                              l4007 37E6                                l4111 38EE  
                              l1368 1E28                                l4041 36A6  
                              l4033 3696                                l4025 368E  
                              l4017 3672                                l3129 3166  
                              l3401 2000                                l3081 37DC  
                              l3073 37A2                                l3057 3A7C  
                              l3065 3A72                                l3161 35D0  
                              l3145 3576                                l3313 1996  
                              l3305 192A                                l3241 17CA  
                              l3233 17BA                                l3225 17A0  
                              l3217 1774                                l3209 1742  
                              l4009 37F0                                l4121 38FA  
                              l4113 38F0                                l4105 38DE  
                              l1378 1F58                                l4043 36B2  
                              l4035 3698                                l4027 3690  
                              l4019 3686                                l3171 29E4  
                              l3411 202C                                l3403 2006  
                              l3083 37DE                                l3075 37A6  
                              l3059 3A80                                l3067 3A76  
                              l3155 3620                                l3163 3616  
                              l3331 1A18                                l3323 19F0  
                              l3307 1950                                l3315 19A6  
                              l3251 17DE                                l3243 17CE  
                              l3235 17BE                                l3227 17AE  
                              l3219 1776                                l4123 38FC  
                              l4115 38F2                                l4107 38E4  
                              l4051 392C                                l4045 36B6  
                              l4037 369A                                l4029 3692  
                              l4061 3990                                l3093 30C4  
                              l3173 2A2A                                l3501 22D8  
                              l3421 2066                                l3413 203C  
                              l3405 200C                                l3077 37AE  
                              l3069 3A86                                l3157 3666  
                              l3149 3580                                l3333 1A20  
                              l3325 19FA                                l3317 19CC  
                              l3309 1984                                l3341 1A44  
                              l3261 17F2                                l3253 17E2  
                              l3245 17D2                                l3237 17C2  
                              l3229 17B2                                l3181 16AE  
                              l4125 38FE                                l4117 38F4  
                              l4109 38EA                                l4053 3936  
                              l4047 36BA                                l4039 36A4  
                              l4063 3992                                l4071 3964  
                              l3095 30C8                                l3087 3894  
                              l3175 2A4A                                l3167 2966  
                              l3511 2326                                l3503 22F2  
                              l3423 207C                                l3415 204C  
                              l3407 201A                                l3079 37B6  
                              l3351 1A96                                l3343 1A48  
                              l3335 1A24                                l3327 1A08  
                              l3319 19DC                                l3271 186A  
                              l3263 181C                                l3255 17E6  
                              l3247 17D6                                l3239 17C6  
                              l3191 16EA                                l3183 16BA  
                              l4119 38F8                                l4055 3940  
                              l4065 399C                                l4057 3984  
                              l4073 396A                                l3097 30D6  
                              l3089 38B0                                l3177 2A66  
                              l3169 2982                                l3513 2328  
                              l3505 230E                                l3441 20D0  
                              l3425 208C                                l3433 20AC  
                              l3417 204E                                l3409 201C  
                              l3361 1AFC                                l3353 1AA2  
                              l3345 1A56                                l3337 1A34  
                              l3329 1A0A                                l3281 18AA  
                              l3273 186E                                l3265 1838  
                              l3257 17EA                                l3249 17DA  
                              l3193 16FA                                l3185 16C8  
                              l3601 1DF0                                l3521 1B6E  
                              l4081 31B2                                l4049 3924  
                              l4067 399E                                l4059 398E  
                              l4075 397A                                l3099 30DE  
                              l3179 2AD0                                l3507 2312  
                              l3451 2122                                l3443 20EA  
                              l3435 20BC                                l3427 2094  
                              l3419 2056                                l3371 1B44  
                              l3363 1B0C                                l3355 1AB0  
                              l3347 1A6C                                l3339 1A36  
                              l3291 18EC                                l3283 18BA  
                              l3275 187C                                l3267 1848  
                              l3259 17EE                                l3195 16FC  
                              l3187 16CA                                l3611 1E46  
                              l3603 1E0E                                l3531 1BAA  
                              l3523 1B7A                                l4091 31F0  
                              l4083 31C2                                l4069 39A0  
                              l3509 2320                                l3461 217E  
                              l3453 2132                                l3445 20FA  
                              l3437 20BC                                l3429 2098  
                              l3701 2C74                                l3373 1B46  
                              l3365 1B2C                                l3357 1AEA  
                              l3293 18FA                                l3277 187E  
                              l3269 185E                                l3189 16DA  
                              l3197 1704                                l3621 1EB0  
                              l3613 1E4A                                l3605 1E18  
                              l3541 1BDC                                l3533 1BBA  
                              l3525 1B88                                l4093 3208  
                              l4085 31C6                                l4077 3188  
                              l3471 21BE                                l3463 2180  
                              l3455 2146                                l3447 210A  
                              l3391 1FC6                                l3383 1F98  
                              l3711 2CCC                                l3703 2C92  
                              l3375 1B4C                                l3367 1B30  
                              l3359 1AEC                                l3295 1906  
                              l3287 18CE                                l3279 1888  
                              l3199 1714                                l3631 1F12  
                              l3623 1EBC                                l3615 1E58  
                              l3607 1E26                                l3551 1C1C  
                              l3543 1BEA                                l3535 1BC0  
                              l3527 1B8A                                l4095 320A  
                              l4087 31CC                                l4079 3196  
                              l3481 21FA                                l3473 21C8  
                              l3465 2190                                l3457 2154  
                              l3449 211A                                l3393 1FD6  
                              l3385 1FA6                                l3713 2CDA  
                              l3705 2C94                                l3377 1B5A  
                              l3369 1B3E                                l3297 190A  
                              l3289 18DE                                l3641 1F7A  
                              l3633 1F26                                l3625 1ECA  
                              l3617 1E86                                l3609 1E38  
                              l3561 1C66                                l3553 1C22  
                              l3545 1BEC                                l3537 1BD0  
                              l3529 1B9A                                l4601 2908  
                              l4097 3210                                l4089 31E4  
                              l3491 226C                                l3483 2208  
                              l3475 21D6                                l3467 21A2  
                              l3459 2160                                l3395 1FE6  
                              l3387 1FB4                                l3715 2CDC  
                              l3707 2C98                                l3731 3904  
                              l3379 1B5C                                l3299 1918  
                              l3651 2FC0                                l3643 1F7C  
                              l3635 1F40                                l3627 1EF4  
                              l3571 1CB6                                l3563 1C72  
                              l3555 1C42                                l3547 1BFC  
                              l3539 1BD6                                l4603 2918  
                              l4611 2646                                l4099 3212  
                              l3741 3380                                l3733 334A  
                              l3493 227A                                l3485 2236  
                              l3469 21B8                                l3477 21E8  
                              l3397 1FE8                                l3389 1FB6  
                              l3709 2CBC                                l3901 2F06  
                              l3661 304A                                l3653 2FEE  
                              l3637 1F5C                                l3645 1F82  
                              l3629 1EF8                                l3581 1CF8  
                              l3573 1CC2                                l3565 1C7C  
                              l3557 1C52                                l3549 1C0C  
                              l4605 291E                                l4621 2698  
                              l4613 2656                                l3751 32BC  
                              l3735 3350                                l3743 3388  
                              l3495 22A4                                l3479 21F6  
                              l3399 1FF0                                l3903 2F08  
                              l3663 305C                                l3655 2FFE  
                              l3647 1F86                                l3639 1F6C  
                              l3591 1D5A                                l3583 1D04  
                              l3575 1CCE                                l3567 1C92  
                              l4631 26DC                                l4623 26A4  
                              l4615 265C                                l4607 255A  
                              l4711 122C                                l4703 118A  
                              l3753 32E0                                l3761 3318  
                              l3745 33A0                                l3737 3368  
                              l3489 2260                                l3497 22A8  
                              l3681 2BB6                                l3673 2B3C  
                              l4641 2CEE                                l3921 2F82  
                              l3905 2F20                                l3913 2F4A  
                              l3665 306A                                l3657 302C  
                              l3593 1D66                                l3585 1D14  
                              l3577 1CDC                                l3569 1C9E  
                              l4633 26F4                                l4625 26B0  
                              l4617 2674                                l4609 2634  
                              l4721 130C                                l4705 11B0  
                              l4801 239E                                l3763 3330  
                              l3755 32F8                                l3747 33B8  
                              l3739 3374                                l3931 3432  
                              l3499 22C2                                l3691 2C10  
                              l3675 2B4C                                l4651 2D9C  
                              l4643 2CFE                                l3923 2F9A  
                              l3915 2F5C                                l3907 2F2C  
                              l3851 322E                                l3667 30BA  
                              l3659 303C                                l3595 1D82  
                              l3587 1D2E                                l3579 1CE8  
                              l4635 2702                                l4627 26BC  
                              l4619 2680                                l4723 1320  
                              l4707 11E2                                l4715 1276  
                              l3771 36DA                                l4811 23C0  
                              l4803 23AA                                l3757 3304  
                              l3749 33D0                                l3933 3434  
                              l3693 2C12                                l3685 2BCA  
                              l3677 2B5A                                l4653 2E02  
                              l4645 2D14                                l3765 33D4  
                              l3917 2F5E                                l3909 2F44  
                              l3853 3252                                l3861 328A  
                              l3669 30C0                                l3597 1DAC  
                              l3589 1D3E                                l4581 2862  
                              l4573 2760                                l4637 2712  
                              l4629 26C4                                l4661 34E0  
                              l4741 1446                                l4725 1338  
                              l4717 12A8                                l4733 139C  
                              l3773 36E4                                l4821 23EE  
                              l4813 23C4                                l4805 23B2  
                              l3759 3310                                l3935 3448  
                              l3695 2C1E                                l3687 2BD2  
                              l3679 2BA0                                l4647 2D28  
                              l3919 2F76                                l3927 2FA0  
                              l3863 32A2                                l3855 326A  
                              l3599 1DE2                                l4591 28B6  
                              l4583 287A                                l4575 283A  
                              l4639 2718                                l4663 34F2  
                              l4655 3490                                l4743 145E  
                              l4735 13CE                                l4751 14AE  
                              l4727 1366                                l4719 12DA  
                              l4671 0ECA                                l3775 36EE  
                              l3767 36C0                                l4831 2434  
                              l4823 23F4                                l4815 23C8  
                              l4807 23B6                                l3937 3460  
                              l3697 2C5A                                l3689 2BDE  
                              l4649 2D3C                                l3929 2FA6  
                              l3881 2E6A                                l3857 3276  
                              l4593 28C2                                l4585 2886  
                              l4577 284C                                l4665 3512  
                              l4657 34A2                                l4761 1590  
                              l4753 14E0                                l4745 148C  
                              l4737 1400                                l4729 1384  
                              l4681 0FB8                                l4673 0EFC  
                              l3961 382E                                l3953 381A  
                              l3777 36F8                                l3769 36CA  
                              l3865 39C4                                l4841 2476  
                              l4833 2440                                l4825 240E  
                              l4817 23CC                                l4809 23BA  
                              l3971 3A26                                l3939 348C  
                              l3699 2C66                                l3891 2EB2  
                              l3883 2E70                                l3859 3282  
                              l4587 289E                                l4595 28CA  
                              l4579 285C                                l4659 34C2  
                              l4771 15F8                                l4755 1512  
                              l4763 1598                                l4739 1432  
                              l4691 1084                                l4683 0FFE  
                              l4675 0F2E                                l4667 0EA4  
                              l3963 3830                                l3955 3824  
                              l3779 3702                                l4851 24D8  
                              l4843 248C                                l4835 2450  
                              l4827 2412                                l4819 23DE  
                              l3893 2EBE                                l3885 2E88  
                              l4597 28E2                                l4589 28AA  
                              l4781 165C                                l4773 161C  
                              l4765 15B2                                l4757 1544  
                              l4693 10B6                                l4685 1008  
                              l4677 0F60                                l4669 0EA8  
                              l3957 382A                                l3965 3A40  
                              l4861 2536                                l4853 24F6  
                              l4845 24A6                                l4837 2460  
                              l4829 2424                                l3975 3A5A  
                              l3895 2ED6                                l3887 2E98  
                              l4599 28FA                                l4783 168C  
                              l4775 163E                                l4767 15C6  
                              l4759 158A                                l4695 10E8  
                              l4679 0F86                                l3959 382C  
                              l3967 3A46                                l4855 2510  
                              l4847 24BA                                l4839 2474  
                              l4863 253E                                l4791 2334  
                              l3977 3A90                                l3969 3A12  
                              l3897 2ED8                                l3889 2E9A  
                              l4777 164E                                l4769 15EC  
                              l4697 110E                                l4689 1052  
                              l4857 251C                                l4849 24BC  
                              l4793 2372                                l3995 39DE  
                              l3979 3A2A                                l3899 2EF4  
                              l4779 1652                                l4699 1140  
                              l4859 252A                                l4795 237A  
                              l3997 39E8                                l4789 16A8  
                              l4797 2386                                l3999 39F0  
                              l4799 2396                                STR_1 0E01  
                              STR_2 0E9F                                STR_4 0E80  
                              STR_6 0E94                                u3000 1AEA  
                              u3001 1AE6                                u3010 1AFC  
                              u3011 1AF8                                u3100 202C  
                              u3020 1B0C                                u3101 2028  
                              u3021 1B08                                u3110 203C  
                              u3030 1B2C                                u3111 2038  
                              u3031 1B28                                u3200 21F6  
                              u3120 207C                                u3040 1B3E  
                      _BAUD4CONbits 000EE9                                u3201 21F2  
                              u3121 2078                                u3041 1B3A  
                              _LATE 000F7D                                u3210 2208  
                              u3130 20BC                                u3050 1B5A  
                              u3211 2204                                u3131 20B8  
                              u3051 1B56                                _LATG 000F7F  
                              u3220 2236                                u3140 2132  
                              u3060 1FB4                                u3300 1B9A  
                              u3221 2232                                u3141 212E  
                              u3061 1FB0                                u3301 1B96  
                              u3230 224C                                u3150 2154  
                              u3070 1FC6                                u2510 3854  
                              u3310 1BAA                                u3231 2248  
                              u3151 2150                                u3071 1FC2  
                              u2511 3850                                u3311 1BA6  
                              u2600 3176                                u3240 2260  
                              u3160 217E                                u3080 1FD6  
                              u2520 386A                                u3400 1E58  
                              u3320 1BEA                                u5000 10B6  
                              u2601 3172                                u3241 225C  
                              u3161 217A                                u3081 1FD2  
                              u2521 3866                                u3401 1E54  
                              u3321 1BE6                                u5001 10B2  
                              u3250 227A                                u3170 21A2  
                              u3090 201A                                u2530 37CA  
                              u3410 1E86                                u3330 1BFC  
                              u5010 10E8                                _T2PR 000FBC  
                              u3251 2276                                u3171 219E  
                              u3091 2016                                u2531 37C2  
                              u3411 1E82                                u3331 1BF8  
                              u5011 10E4                                u3260 22C2  
                              u3180 21B8                                u2700 172C  
                              u3500 304A                                u3420 1E9C  
                              u3340 1C0C                                u5100 14E0  
                              u5020 1140                                u3261 22BE  
                              u3181 21B4                                u2701 1728  
                              u3501 3046                                u3421 1E98  
                              u3341 1C08                                u5101 14DC  
                              u5021 113C                                u2550 30D6  
                              u2630 2982                                u3270 22F2  
                              u3190 21D6                                u2710 1742  
                              u3510 306A                                u3430 1EB0  
                              u3350 1C42                                u5110 1512  
                              u5030 11E2                                u2551 30D2  
                              u2631 297E                                u3271 22EE  
                              u3191 21D2                                u2711 173E  
                              u3511 3066                                u3431 1EAC  
                              u3351 1C3E                                u5111 150E  
                              u5031 11DE                                u2560 30F0  
                              u2640 2A66                                u3280 2320  
                              u3600 2C92                                u2800 187C  
                              u2720 1754                                u3520 30BA  
                              u3440 1ECA                                u3360 1C52  
                              u5120 1544                                u5040 12A8  
                              u5200 2424                                u2561 30EC  
                              u2641 2A62                                u3281 231C  
                              u3601 2C8E                                u2801 1878  
                              u2721 1750                                u3521 30B6  
                              u3441 1EC6                                u3361 1C4E  
                              u5121 1540                                u5041 12A4  
                              u5201 2420                                u2570 3116  
                              u3610 2CCC                                u3530 2B4C  
                              u2810 189C                                u2730 1764  
                              u3450 1F12                                u3370 1DCC  
                              u3290 1B88                                u5130 161C  
                              u5050 12DA                                u5210 2434  
                              u2571 3112                                u3611 2CC8  
                              u3531 2B48                                u2811 1898  
                              u2731 1760                                u3451 1F0E  
                              u3291 1B84                                u5131 1618  
                              u5051 12D6                                u5211 2430  
                              u2580 3134                                u3620 2CDA  
                              u3540 2B5A                                u2548 37CC  
                              u2900 19DC                                u2820 18AA  
                              u2740 17A0                                u3460 1F40  
                              u3380 1E26                                u5140 163E  
                              u5060 130C                                u5220 2450  
                              u2581 3130                                u3621 2CD6  
                              u3541 2B56                                u2901 19D8  
                              u2821 18A6                                u2741 179C  
                              u3461 1F3C                                u3381 1E22  
                              u5141 163A                                u5061 1308  
                              u5221 244C                                u2590 3150  
                              u2654 2AC0                                u3550 2BB6  
                              u2910 1A08                                u2830 18BA  
                              u2750 17AE                                u2670 16C8  
                              u3470 1F7A                                u3390 1E46  
                              u5150 164E                                u5070 13CE  
                              u5230 2460                                u2591 314C  
                              u2655 2ABC                                u3551 2BB2  
                              u6007 2E7A                                u2911 1A04  
                              u2831 18B6                                u2751 17AA  
                              u2671 16C4                                u3471 1F76  
                              u3391 1E42                                u3375 1DC2  
                              u5151 164A                                u5071 13CA  
                              u5231 245C                                u2664 2B2A  
                              u3560 2C0C                                u3800 32A2  
                              u2920 1A18                                u2840 18EC  
                              u2760 181C                                u2680 16DA  
                              u3480 2FEE                                u5160 16A0  
                              u5080 1400                                u2665 2B26  
                              u3561 2C08                                u6017 2EA4  
                              u3801 329E                                u2921 1A14  
                              u2841 18E8                                u2761 1818  
                              u2681 16D6                                u3481 2FEA  
                              u5161 169A                                u5081 13FC  
                              u3570 2C56                                u3810 32BA  
                              u2930 1A34                                u2850 18FA  
                              u2770 1834                                u2690 16EA  
                              u3490 302C                                u5170 16A2  
                              u5090 1432                                u6107 347E  
                              u3571 2C52                                u3635 390C  
                              u6027 2EC8                                u3811 32B6  
                              u2931 1A30                                u2851 18F6  
                              u2771 182E                                u2691 16E6  
                              u3491 3028                                u5091 142E  
                              u3660 33A0                                u3580 2C74  
                              u3636 390E                                u3820 2E98  
                              u2940 1A44                                u2860 1918  
                              u2780 1836                                u3900 31A4  
                              u5180 23DE                                u3661 339C  
                              u6117 3382                                u3581 2C70  
                              u3645 3916                                u6037 2EE2  
                              u3821 2E94                                u2941 1A40  
                              u2861 1914                                u3901 31A0  
                              u5181 23DA                                u3670 33B8  
                              u3590 2C84                                u3646 3918  
                              u3830 2F06                                u2950 1A56  
                              u2870 1950                                u2790 185E  
                              u3910 31B2                                u5190 23EC  
                              u6127 33C2                                u3671 33B4  
                              u3591 2C80                                u3655 3920  
                              u6047 2F12                                u3831 2F02  
                              u2951 1A52                                u2871 194C  
                              u2791 185A                                u3911 31AE  
                              u5191 23E8                                u3680 3330  
                              u3656 3922                                u3840 2F5C  
                              u2960 1A6C                                u2880 1996  
                              u3920 31C2                                u3681 332C  
                              u6137 3312                                u3841 2F58  
                              u6057 2F36                                u2961 1A68  
                              u2881 1992                                u3921 31BE  
                              u3690 3348                                u2970 1A82  
                              u2890 19CC                                u3691 3344  
                              u6067 2F68                                u2971 1A7E  
                              u2891 19C8                                u2980 1A96  
                              u4900 26DC                                u6077 2F8C  
                              u2981 1A92                                u4901 26D8  
                              u3870 3A22                                u2990 1AB0  
                              u4830 287A                                u4910 26F4  
                              u3871 3A1E                                u6087 2FB0  
                              u2991 1AAC                                u4831 2876  
                              u4911 26F0                                u3880 397A  
                              u4840 289E                                u4920 275C  
                              u3881 3976                                u6097 3452  
                              u4841 289A                                u4921 2758  
                              u4850 28E2                                u4930 34A2  
                              u3890 3196                                u4851 28DE  
                              u4931 349E                                u3891 3192  
                              u4860 28FA                                u4940 34F2  
                              u4861 28F6                                u4941 34EE  
                              u4870 2962                                u4950 0EFC  
                              u4871 295E                                u4951 0EF8  
                              u4880 2674                                u4960 0F2E  
                              u4881 2670                                u4961 0F2A  
                              u5817 2400                                u4890 2698  
                              u4970 0F60                                u4891 2694  
                              u5907 1358                                u4971 0F5C  
                              u5827 2498                                u4980 0FB8  
                              u5917 1452                                u4981 0FB4  
                              u5837 24CA                                u4990 1084  
                              u5927 147E                                u4991 1080  
                              u5847 2502                                u5937 15A4  
                              u5857 36D0                                u5947 15CE  
                              u5867 37F6                                u5957 26BE  
                              u5877 31D6                                u5967 2708  
                              u5887 31FA                                u5977 28C4  
                              u5897 132C                                u5987 290E  
                              u5997 3284                         main@current 009A  
           __end_of_interrupts_init 3902             __end_of_DCmotors_setPWM 2B3A  
                              _main 2334                                _left 2760  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 0056                                _stop 334A  
                              prodh 000FF4                                prodl 000FF3  
                              start 005C                    __end_of_ADC_init 39F8  
                   ___fldiv@new_exp 0065                     __end_of_HighISR 37A0  
                      ___param_bank 000000              ?_colourclick_readRGBC2 0017  
            ??_clicker2buttons_init 000A                     __end_of___fladd 1B6E  
                             ?_main 0001                               ?_left 006D  
                             _ADPCH 000F5F                     __end_of___fldiv 2334  
                   __end_of___awdiv 3188                               STR_10 0E6D  
                             STR_12 0E87                               STR_14 0E9A  
                             STR_16 0E8E                               STR_18 0E78  
                             STR_19 0E41                     __end_of___flmul 1F98  
                             ?_stop 0023                     ___awdiv@divisor 0012  
                             i1l144 004C                               i2l132 375A  
                             i2l129 3A10                               i2l138 379C  
                             i2l308 39C2                               i2l440 3892  
                             i2l443 3AAC                               i2l452 3A70  
                             i2l437 386C                               i2l449 3AA2  
        ?i2_colourclick_writetoaddr 0003             _colourclick_writetoaddr 3944  
                   ___awdiv@counter 0014                               _TMR0H 000FD4  
                             _TMR0L 000FD3            __end_of_interrupts_clear 39DE  
        __end_of_I2C_2_Master_Start 3A86          __end_of_I2C_2_Master_Write 3A5A  
          ?_colourclick_calibration 0001                     __end_of_forward 32BC  
              colourclickLEDs_C@tog 000A                               _right 255A  
                 _clicker2LEDs_init 3A90                               left@i 007B  
   __size_of_interrupts_colourclick 004E                     __end_of_reverse 334A  
            DCmotors_init@PWMperiod 000A                  ?_clicker2LEDs_init 0001  
                             ttemp5 0057                               ttemp6 005A  
                             ttemp7 005E                               status 000FD8  
                             wtemp8 0057               _I2C_2_Master_RepStart 3A86  
                   __initialization 38BA                 ??_clicker2LEDs_init 000A  
                      __end_of_main 255A                        __end_of_left 2966  
                      __end_of_stop 33D4  __size_of_colourcards_normaliseRGBC 017C  
     __size_of_colourcards_readRGBC 080A                              ??_main 0097  
                            ??_left 004D                              ??_stop 0027  
                     __activetblptr 000001        __size_ofi2_I2C_2_Master_Idle 0028  
 __end_ofi2_colourclick_writetoaddr 39C4              ??_colourclick_readRGBC 0017  
      __size_ofi2_I2C_2_Master_Stop 000A           __end_of_clicker2LEDs_init 3A9A  
                   _colourcard_flag 00B7                              _ADRESH 000F64  
         __size_of_colourclick_init 0038                              ?_right 006D  
                  ___awdiv@dividend 0010                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                              i1l4341 0048  
                            i1l4337 0026                              i1l4339 0036  
                            i2l3137 386C                              i2l3139 387C  
                            i2l4251 39F8                              i2l4331 3772  
                            i2l4333 3794                              i2l4335 3798  
                            i2l4327 375C                              i2l3721 3AA8  
                            i2l4329 376C                              i2l3723 3A9A  
                            i2l3725 3A9E                              i2l3719 3AA4  
                            i2l3727 3A68                              i2l3729 3A6C  
                            i2l3849 39A6                              i2l3981 370E  
                            i2l3991 3746                              i2l3983 3718  
                            i2l3993 3750                              i2l3985 3728  
                            i2l3987 3732                              i2l3989 373C  
                  ?_interrupts_init 0001                    ?_DCmotors_setPWM 0018  
                         ??_HighISR 0006                              _RX4PPS 000E15  
    i2colourclick_writetoaddr@value 0003                              _TX4REG 000EE4  
                  __end_of___xxtofl 2CEE                              _LowISR 0018  
                      ??_ADC_getval 000A                              ___flge 2FC0  
            colourcards_readRGBC@mL 0085              colourcards_readRGBC@mR 0087  
                         ??___fladd 0039                              ___wmul 3894  
                         ??___fldiv 0049                           ??___awdiv 0014  
                         ??___flmul 0020   __size_ofi2_interrupts_colourclick 004E  
                      ?_timer0_init 0001           ?i2_interrupts_colourclick 0001  
            _interrupts_colourclick 36C0                    ??_buggyLEDs_init 000A  
                i2_interrupts_clear 39F8           ??_colourclick_writetoaddr 000D  
                  ___awdiv@quotient 0016                              isa$std 000001  
 __end_of_colourcards_normaliseRGBC 2E6A                              left@mL 006D  
                            left@mR 006F                           ??_forward 0027  
               ?i2_interrupts_clear 0001                              right@i 007B  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptru 000FF8                           ?_ADC_init 0001  
                         ??_reverse 0027                              stop@mL 0023  
                            stop@mR 0025                  __end_of_ADC_getval 3A2A  
                      ?_USART4_init 0001                          ___flge@ff1 0018  
                        ___flge@ff2 001C                        ___xxtofl@arg 0014  
                      ___xxtofl@exp 0013                        ___xxtofl@val 000A  
                  __end_of_turnleft 3530                          __accesstop 0060  
           __end_of__initialization 38CC              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                ??i2_interrupts_clear 0006  
                    __pcstackCOMRAM 0001                       __end_of_right 2760  
                __size_of_clearance 005E       checkbatterylevel@batterylevel 000B  
                        ??_ADC_init 000A          __size_of_clicker2LEDs_init 000A  
                           ??_right 004D       __size_of_colourclickLEDs_init 000E  
   __end_of_colourclick_writetoaddr 3964                          __pbssBANK0 00B4  
                        __pnvCOMRAM 004E                   _checkbatterylevel 3964  
           ??_colourclick_readRGBC2 001A       __size_ofi2_I2C_2_Master_Start 000A  
     __size_ofi2_I2C_2_Master_Write 000C                  ?_checkbatterylevel 0001  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
                           ?___flge 0018                             ?___wmul 000A  
               ??_checkbatterylevel 000B                             _INT1PPS 000DF1  
       ??i2_colourclick_writetoaddr 0004                           ?___xxtofl 000A  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                 ?_interrupts_clear 0001                             _PWM6DCH 000FA3  
                           _PWM7DCH 000FA0                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5                  ??_interrupts_clear 000F  
                  _colourclick_init 37E2           __end_of_checkbatterylevel 3984  
            __size_of_DCmotors_init 0050                             _HighISR 0008  
                 __end_of_clearance 3490                           _ADREFbits 000F58  
                _I2C_2_Master_Start 3A7C                 i2_I2C_2_Master_Idle 386C  
                _I2C_2_Master_Write 3A4E                             __Hparam 0000  
               i2_I2C_2_Master_Stop 3A9A                  __size_of_turnright 0050  
  __size_of_colourclick_calibration 00A6                             __Lparam 0000  
                   __size_of_LowISR 0044                     __size_of___flge 0104  
                           ___fladd 16AE                             ___fldiv 1F98  
                           ___awdiv 30C4             colourcards_readRGBC@abs 0083  
                           ___flmul 1B6E             colourcards_readRGBC@rel 008B  
                   __size_of___wmul 0026                 ?_I2C_2_Master_Start 0001  
               ?_I2C_2_Master_Write 0001                        __psmallconst 0E00  
                           __pcinit 38BA                             __ramtop 0E00  
              __size_of_timer0_init 0020                             __ptext0 2334  
                           __ptext1 3924                             __ptext2 38DE  
                           __ptext3 39C4                             __ptext4 36C0  
                           __ptext5 37E2                             __ptext6 3944  
                           __ptext7 3A40                             __ptext8 381A  
                           __ptext9 3188       __size_of_clicker2buttons_init 000C  
                         ?_turnleft 007D                ?i2_I2C_2_Master_Idle 0001  
                         _T2CONbits 000FBD                             _forward 322E  
                        ??___xxtofl 000E                ?i2_I2C_2_Master_Stop 0001  
                        _right$3221 0077                           _T2HLTbits 000FBE  
                           _reverse 32BC                ??_I2C_2_Master_Start 000B  
                           left@deg 0071                ??_I2C_2_Master_Write 000B  
                    __pintcode_body 375C                end_of_initialization 38CC  
      __end_of_colourcards_readRGBC 16AE                    ADC_getval@tmpval 000A  
  __end_ofi2_interrupts_colourclick 375C                __size_of_USART4_init 0020  
                           int_func 375C           i2_colourclick_writetoaddr 39A4  
                           right@mL 006D                             right@mR 006F  
           ?_interrupts_colourclick 0001                             postdec1 000FE5  
                           postdec2 000FDD                             postinc1 000FE6  
                           postinc2 000FDE      colourclick_calibration@initial 0019  
      colourclick_writetoaddr@value 000C                       _DCmotors_init 3670  
                         _PORTFbits 000F8E                          ??_turnleft 004E  
             ??i2_I2C_2_Master_Idle 0001               ??i2_I2C_2_Master_Stop 0002  
                       ___fladd@grs 0040                       ___xxtofl@sign 0012  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                   __end_of_turnright 34E0  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 0067  
                       ___fldiv@rem 0060       __size_of_colourclick_readRGBC 005E  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 000B  
              colourclick_readB@tmp 0013                colourclick_readC@tmp 0013  
        __size_of_checkbatterylevel 0020                colourclick_readG@tmp 0013  
              colourclick_readR@tmp 0013                         ___flmul@grs 0025  
    __end_of_interrupts_colourclick 370E                          main@motorL 00A2  
                        main@motorR 00AB                      __end_of_LowISR 005C  
          __size_of_interrupts_init 0024            __size_of_DCmotors_setPWM 01D4  
                    __end_of___flge 30C4          colourclick_readRGBC@tmpval 0015  
                    ?_DCmotors_init 0001                      __end_of___wmul 38BA  
        ?_colourcards_normaliseRGBC 006D                 start_initialization 38BA  
                  _unknowncard_flag 00B6                     _returnhome_flag 00B5  
           _colourclick_calibration 3188         __size_ofi2_interrupts_clear 001A  
                          ??_LowISR 0007            i2_interrupts_colourclick 370E  
                      turnright@deg 0081      __size_of_colourclick_readRGBC2 0156  
     __end_of_colourclick_readRGBC2 2FC0            ?_colourclick_writetoaddr 000C  
        colourcards_normaliseRGBC@B 0075          colourcards_normaliseRGBC@C 0077  
        colourcards_normaliseRGBC@G 0073          colourcards_normaliseRGBC@R 0071  
                          ??___flge 0020        __end_of_colourclickLEDs_init 3A4E  
                          ??___wmul 000E            __end_of_colourclick_init 381A  
     i2I2C_2_Master_Write@data_byte 0002                _colourcards_readRGBC 0EA4  
      __end_ofi2_I2C_2_Master_Start 3AAE        __end_ofi2_I2C_2_Master_Write 3A72  
                         ___fladd@a 0035                           ___fladd@b 0031  
                         ___fldiv@a 0045                           ___fldiv@b 0041  
                         ___flmul@a 001C                           ___flmul@b 0018  
                       __pbssCOMRAM 0052                       __pcstackBANK0 0060  
           __size_of_buggyLEDs_init 0016                   __size_of___xxtofl 01B4  
                          ?_HighISR 0001           __size_of_interrupts_clear 001A  
                         _clearance 3432                           _left$3220 0077  
                         __pintcode 0008                     ??_DCmotors_init 000A  
                          ?___fladd 0031                            ?___fldiv 0041  
                          ?___awdiv 0010                            ?___flmul 0018  
__size_ofi2_colourclick_writetoaddr 0020               ?_colourcards_readRGBC 0083  
                       __pintcodelo 0018                          right@delay 0073  
              I2C_2_Master_Read@ack 000C                   ??_interrupts_init 000F  
                 ??_DCmotors_setPWM 001A                I2C_2_Master_Read@tmp 000D  
             _interrupts_lowerbound 0054                         __smallconst 0E00  
                          ?_forward 0023                   _I2C_2_Master_Idle 3844  
                 _I2C_2_Master_Init 381A                   _I2C_2_Master_Read 37A0  
                 _I2C_2_Master_Stop 3A72                   __size_of_turnleft 0050  
                          _ADC_init 39DE                            ?_reverse 0023  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                  ?_I2C_2_Master_Stop 0001  
                    __size_of_right 0206           ??_colourclick_calibration 0017  
      __end_of_clicker2buttons_init 3A66                 ??_I2C_2_Master_Idle 000A  
               ??_I2C_2_Master_Init 000A                 ??_I2C_2_Master_Read 000B  
                    ___wmul@product 000E                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 000B                            _LATCbits 000F7B  
                 _colourclickLEDs_C 3902                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _IPR0bits 000E1F                            _PIE0bits 000E29  
                ?_colourclickLEDs_C 0001                            i1u425_20 0036  
                          i1u425_21 0032                            i2u261_40 387C  
                          i2u261_41 3878                            i2u262_40 3892  
                          i2u422_40 376C                            i2u262_41 388E  
                          i2u422_41 3768                            i2u423_40 3784  
                          i2u423_41 377C                            _PIR0bits 000E33  
                          i2u424_48 3786                            i2u614_47 371E  
                          _PIR4bits 000E37                          ?_clearance 0029  
                     ??_timer0_init 000A                            _SSP2CON2 000EDA  
            DCmotors_setPWM@PWMduty 0021                            _SSP2STAT 000ED8  
               ??_colourclickLEDs_C 000A                   _colourclick_readB 3620  
                 _colourclick_readC 35D0                   _colourclick_readG 3580  
                 _colourclick_readR 3530                          _ADCON0bits 000F60  
         __end_of_I2C_2_Master_Idle 386C           __end_of_I2C_2_Master_Init 3844  
         __end_of_I2C_2_Master_Read 37E2                   ___wmul@multiplier 000A  
                ?_colourclick_readB 000E                  ?_colourclick_readC 000E  
                ?_colourclick_readG 000E                  ?_colourclick_readR 000E  
         __end_of_I2C_2_Master_Stop 3A7C               _interrupts_upperbound 0052  
       I2C_2_Master_Write@data_byte 000B                           main@start 0099  
                         left@delay 0073                 ??_colourclick_readB 0010  
               ??_colourclick_readC 0010                 ??_colourclick_readG 0010  
               ??_colourclick_readR 0010                       ??_USART4_init 000A  
       __size_of_I2C_2_Master_Start 000A                _colourclickLEDs_init 3A40  
       __size_of_I2C_2_Master_Write 000C                           _turnright 3490  
         __end_of_colourclickLEDs_C 3924                         turnleft@deg 0081  
    __size_of_I2C_2_Master_RepStart 000A       __end_of_I2C_2_Master_RepStart 3A90  
                  __size_of_HighISR 3798                i2_I2C_2_Master_Start 3AA4  
              i2_I2C_2_Master_Write 3A66                            __Hrparam 0000  
                       turnright@mL 007D                         turnright@mR 007F  
                        _ADC_getval 3A12        __end_of_colourclick_readRGBC 3432  
                          __Lrparam 0000                        __Lsmallconst 0E00  
         __end_of_colourclick_readB 3670           __end_of_colourclick_readC 3620  
         __end_of_colourclick_readG 35D0           __end_of_colourclick_readR 3580  
                         forward@mL 0023                           forward@mR 0025  
            ??_colourcards_readRGBC 0089         __end_ofi2_I2C_2_Master_Idle 3894  
                  __size_of___fladd 04C0         __end_ofi2_I2C_2_Master_Stop 3AA4  
                  __size_of___fldiv 039C                    __size_of___awdiv 00C4  
                  __size_of___flmul 042A     __end_of_colourclick_calibration 322E  
                        _ANSELBbits 000E9A                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                 __end_of_timer0_init 3944  
       ??_colourcards_normaliseRGBC 004D                            ___xxtofl 2B3A  
                        _T0CON0bits 000FD5                          _T0CON1bits 000FD6  
                    _buggyLEDs_init 3A2A                    __size_of_forward 008E  
                          __ptext10 0EA4                            __ptext11 3490  
                          __ptext20 33D4                            __ptext12 34E0  
                          __ptext21 3530                            __ptext13 255A  
                          __ptext30 3844                            __ptext22 3580  
                          __ptext14 2760                            __ptext31 3902  
                          __ptext23 35D0                            __ptext15 1B6E  
                          __ptext40 30C4                            __ptext32 2CEE  
                          __ptext24 3620                            __ptext16 2FC0  
                          __ptext41 3964                            __ptext33 2B3A  
                          __ptext25 3A4E                            __ptext17 16AE  
                          __ptext42 3A12                            __ptext34 1F98  
                          __ptext26 3A72                            __ptext18 322E  
                          __ptext51 39F8                            __ptext43 3984  
                          __ptext35 3432                            __ptext27 3A7C  
                          __ptext19 2E6A                            __ptext52 370E  
                          __ptext44 3670                            __ptext36 334A  
                          __ptext28 3A86                            __ptext53 39A4  
                          __ptext45 3A5A                            __ptext37 32BC  
                          __ptext29 37A0                            __ptext54 3A66  
                          __ptext46 3A90                            __ptext38 2966  
                          __ptext55 3A9A                            __ptext47 3A2A  
                          __ptext39 3894                            __ptext56 3AA4  
                          __ptext48 39DE                            __ptext57 386C  
                  __size_of_reverse 008E               ?_colourclickLEDs_init 0001  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
        ??i2_interrupts_colourclick 0005                          ?_turnright 007D  
                     __size_of_main 0226                       __size_of_left 0206  
                     __size_of_stop 008A               ?i2_I2C_2_Master_Start 0001  
             ?i2_I2C_2_Master_Write 0001                 __end_of_USART4_init 39A4  
                  _interrupts_clear 39C4                           reverse@mL 0023  
                         reverse@mR 0025                         ??_clearance 002D  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 0056                   ?_colourclick_init 0001  
                ??_colourclick_init 000E          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
                  DCmotors_setPWM@m 0018                _clicker2buttons_init 3A5A  
        __size_of_I2C_2_Master_Stop 000A                            _turnleft 34E0  
                        turnleft@mL 007D                          turnleft@mR 007F  
            __end_of_buggyLEDs_init 3A40                          _INTCONbits 000FF2  
  __size_of_colourclick_writetoaddr 0020                         clearance@mL 0029  
                       clearance@mR 002B      colourclick_writetoaddr@address 000D  
  i2colourclick_writetoaddr@address 0004                         _PWM6CONbits 000FA4  
                       _PWM7CONbits 000FA1                            intlevel1 0000  
                          intlevel2 0000          __size_of_colourclickLEDs_C 0022  
        __end_ofi2_interrupts_clear 3A12                  _turnright_calangle 004E  
                          right@deg 0071           _colourcards_normaliseRGBC 2CEE  
                 _turnleft_calangle 0050                     _interrupts_init 38DE  
                   _DCmotors_setPWM 2966                         ?_ADC_getval 0001  
        __size_of_colourclick_readB 0050          __size_of_colourclick_readC 0050  
        __size_of_colourclick_readG 0050          __size_of_colourclick_readR 0050  
             _colourclick_readRGBC2 2E6A                         _timer0_init 3924  
             ?_clicker2buttons_init 0001           colourclick_readRGBC2@mode 0019  
                   ?_buggyLEDs_init 0001                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C              ??_colourclickLEDs_init 000B  
              _colourclick_readRGBC 33D4                       ___fladd@signs 003D  
                       _USART4_init 3984            ??_interrupts_colourclick 000E  
                        _TX4STAbits 000EE8                         ??_turnright 004E  
            ??i2_I2C_2_Master_Start 0002                       _overtime_flag 00B4  
                      ___fladd@aexp 003E              ??i2_I2C_2_Master_Write 0002  
                      ___fladd@bexp 003F        colourcards_normaliseRGBC@abs 006D  
