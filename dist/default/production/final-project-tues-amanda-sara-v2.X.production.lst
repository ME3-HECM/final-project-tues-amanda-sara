

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 03:46:26 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 05/05/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F67K40 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	nvCOMRAM
   115  00004E                     __pnvCOMRAM:
   116                           	callstack 0
   117  00004E                     _turnright_calangle:
   118                           	callstack 0
   119  00004E                     	ds	2
   120  000050                     _turnleft_calangle:
   121                           	callstack 0
   122  000050                     	ds	2
   123  0000                     _INT1PPS	set	3569
   124  0000                     _RC7PPS	set	3689
   125  0000                     _RE2PPS	set	3700
   126  0000                     _TX4REG	set	3812
   127  0000                     _RC4REG	set	3811
   128  0000                     _PIR4bits	set	3639
   129  0000                     _RC4STAbits	set	3815
   130  0000                     _SP4BRGH	set	3814
   131  0000                     _SP4BRGL	set	3813
   132  0000                     _TX4STAbits	set	3816
   133  0000                     _BAUD4CONbits	set	3817
   134  0000                     _RX4PPS	set	3605
   135  0000                     _RC0PPS	set	3682
   136  0000                     _SSP2BUF	set	3797
   137  0000                     _SSP2CON2bits	set	3802
   138  0000                     _SSP2CON2	set	3802
   139  0000                     _SSP2STAT	set	3800
   140  0000                     _RD6PPS	set	3696
   141  0000                     _RD5PPS	set	3695
   142  0000                     _SSP2CLKPPS	set	3612
   143  0000                     _SSP2DATPPS	set	3613
   144  0000                     _ANSELDbits	set	3751
   145  0000                     _SSP2ADD	set	3798
   146  0000                     _SSP2CON1bits	set	3801
   147  0000                     _ANSELFbits	set	3764
   148  0000                     _PIR0bits	set	3635
   149  0000                     _IPR0bits	set	3615
   150  0000                     _PIE0bits	set	3625
   151  0000                     _ANSELBbits	set	3738
   152  0000                     _ADPCH	set	3935
   153  0000                     _ADREFbits	set	3928
   154  0000                     _T0CON0bits	set	4053
   155  0000                     _T0CON1bits	set	4054
   156  0000                     _PWM7CONbits	set	4001
   157  0000                     _PWM6CONbits	set	4004
   158  0000                     _LATCbits	set	3963
   159  0000                     _LATEbits	set	3965
   160  0000                     _TRISEbits	set	3973
   161  0000                     _T2PR	set	4028
   162  0000                     _T2CLKCONbits	set	4031
   163  0000                     _T2HLTbits	set	4030
   164  0000                     _T2CONbits	set	4029
   165  0000                     _TRISCbits	set	3971
   166  0000                     _TRISAbits	set	3969
   167  0000                     _TRISGbits	set	3975
   168  0000                     _TRISHbits	set	3976
   169  0000                     _TRISDbits	set	3972
   170  0000                     _ADRESH	set	3940
   171  0000                     _ADCON0bits	set	3936
   172  0000                     _TRISFbits	set	3974
   173  0000                     _LATAbits	set	3961
   174  0000                     _LATGbits	set	3967
   175  0000                     _TMR0L	set	4051
   176  0000                     _TMR0H	set	4052
   177  0000                     _INTCONbits	set	4082
   178  0000                     _TRISBbits	set	3970
   179  0000                     _LATHbits	set	3968
   180  0000                     _LATFbits	set	3966
   181  0000                     _LATDbits	set	3964
   182  0000                     _PORTFbits	set	3982
   183  0000                     _LATG	set	3967
   184  0000                     _PWM7DCH	set	4000
   185  0000                     _LATE	set	3965
   186  0000                     _PWM6DCH	set	4003
   187                           
   188                           	psect	smallconst
   189  000E00                     __psmallconst:
   190                           	callstack 0
   191  000E00  00                 	db	0
   192  000E01                     STR_1:
   193                           
   194                           ; BSR set to: 14
   195  000E01  52                 	db	82	;'R'
   196  000E02  47                 	db	71	;'G'
   197  000E03  42                 	db	66	;'B'
   198  000E04  43                 	db	67	;'C'
   199  000E05  3A                 	db	58	;':'
   200  000E06  20                 	db	32
   201  000E07  25                 	db	37
   202  000E08  69                 	db	105	;'i'
   203  000E09  20                 	db	32
   204  000E0A  25                 	db	37
   205  000E0B  69                 	db	105	;'i'
   206  000E0C  20                 	db	32
   207  000E0D  25                 	db	37
   208  000E0E  69                 	db	105	;'i'
   209  000E0F  20                 	db	32
   210  000E10  25                 	db	37
   211  000E11  69                 	db	105	;'i'
   212  000E12  20                 	db	32
   213  000E13  20                 	db	32
   214  000E14  20                 	db	32
   215  000E15  20                 	db	32
   216  000E16  20                 	db	32
   217  000E17  52                 	db	82	;'R'
   218  000E18  47                 	db	71	;'G'
   219  000E19  42                 	db	66	;'B'
   220  000E1A  43                 	db	67	;'C'
   221  000E1B  5F                 	db	95	;'_'
   222  000E1C  72                 	db	114	;'r'
   223  000E1D  65                 	db	101	;'e'
   224  000E1E  6C                 	db	108	;'l'
   225  000E1F  3A                 	db	58	;':'
   226  000E20  20                 	db	32
   227  000E21  25                 	db	37
   228  000E22  2E                 	db	46
   229  000E23  33                 	db	51	;'3'
   230  000E24  66                 	db	102	;'f'
   231  000E25  20                 	db	32
   232  000E26  25                 	db	37
   233  000E27  2E                 	db	46
   234  000E28  33                 	db	51	;'3'
   235  000E29  66                 	db	102	;'f'
   236  000E2A  20                 	db	32
   237  000E2B  25                 	db	37
   238  000E2C  2E                 	db	46
   239  000E2D  33                 	db	51	;'3'
   240  000E2E  66                 	db	102	;'f'
   241  000E2F  20                 	db	32
   242  000E30  20                 	db	32
   243  000E31  20                 	db	32
   244  000E32  20                 	db	32
   245  000E33  20                 	db	32
   246  000E34  43                 	db	67	;'C'
   247  000E35  6F                 	db	111	;'o'
   248  000E36  6C                 	db	108	;'l'
   249  000E37  6F                 	db	111	;'o'
   250  000E38  75                 	db	117	;'u'
   251  000E39  72                 	db	114	;'r'
   252  000E3A  3A                 	db	58	;':'
   253  000E3B  20                 	db	32
   254  000E3C  25                 	db	37
   255  000E3D  73                 	db	115	;'s'
   256  000E3E  0A                 	db	10
   257  000E3F  0D                 	db	13
   258  000E40  00                 	db	0
   259  000E41                     
   260                           ; BSR set to: 14
   261  000E41  52                 	db	82	;'R'
   262  000E42  47                 	db	71	;'G'
   263  000E43  42                 	db	66	;'B'
   264  000E44  43                 	db	67	;'C'
   265  000E45  3A                 	db	58	;':'
   266  000E46  20                 	db	32
   267  000E47  25                 	db	37
   268  000E48  69                 	db	105	;'i'
   269  000E49  20                 	db	32
   270  000E4A  25                 	db	37
   271  000E4B  69                 	db	105	;'i'
   272  000E4C  20                 	db	32
   273  000E4D  25                 	db	37
   274  000E4E  69                 	db	105	;'i'
   275  000E4F  20                 	db	32
   276  000E50  25                 	db	37
   277  000E51  69                 	db	105	;'i'
   278  000E52  20                 	db	32
   279  000E53  20                 	db	32
   280  000E54  20                 	db	32
   281  000E55  20                 	db	32
   282  000E56  20                 	db	32
   283  000E57  54                 	db	84	;'T'
   284  000E58  68                 	db	104	;'h'
   285  000E59  72                 	db	114	;'r'
   286  000E5A  65                 	db	101	;'e'
   287  000E5B  73                 	db	115	;'s'
   288  000E5C  68                 	db	104	;'h'
   289  000E5D  6F                 	db	111	;'o'
   290  000E5E  6C                 	db	108	;'l'
   291  000E5F  64                 	db	100	;'d'
   292  000E60  3A                 	db	58	;':'
   293  000E61  20                 	db	32
   294  000E62  25                 	db	37
   295  000E63  69                 	db	105	;'i'
   296  000E64  20                 	db	32
   297  000E65  25                 	db	37
   298  000E66  69                 	db	105	;'i'
   299  000E67  20                 	db	32
   300  000E68  25                 	db	37
   301  000E69  69                 	db	105	;'i'
   302  000E6A  0A                 	db	10
   303  000E6B  0D                 	db	13
   304  000E6C  00                 	db	0
   305  000E6D                     STR_10:
   306                           
   307                           ; BSR set to: 14
   308  000E6D  6C                 	db	108	;'l'
   309  000E6E  69                 	db	105	;'i'
   310  000E6F  67                 	db	103	;'g'
   311  000E70  68                 	db	104	;'h'
   312  000E71  74                 	db	116	;'t'
   313  000E72  20                 	db	32
   314  000E73  62                 	db	98	;'b'
   315  000E74  6C                 	db	108	;'l'
   316  000E75  75                 	db	117	;'u'
   317  000E76  65                 	db	101	;'e'
   318  000E77  00                 	db	0
   319  000E78                     
   320                           ; BSR set to: 14
   321  000E78  75                 	db	117	;'u'
   322  000E79  6E                 	db	110	;'n'
   323  000E7A  6B                 	db	107	;'k'
   324  000E7B  6E                 	db	110	;'n'
   325  000E7C  6F                 	db	111	;'o'
   326  000E7D  77                 	db	119	;'w'
   327  000E7E  6E                 	db	110	;'n'
   328  000E7F  00                 	db	0
   329  000E80                     
   330                           ; BSR set to: 14
   331  000E80  6F                 	db	111	;'o'
   332  000E81  72                 	db	114	;'r'
   333  000E82  61                 	db	97	;'a'
   334  000E83  6E                 	db	110	;'n'
   335  000E84  67                 	db	103	;'g'
   336  000E85  65                 	db	101	;'e'
   337  000E86  00                 	db	0
   338  000E87                     
   339                           ; BSR set to: 14
   340  000E87  79                 	db	121	;'y'
   341  000E88  65                 	db	101	;'e'
   342  000E89  6C                 	db	108	;'l'
   343  000E8A  6C                 	db	108	;'l'
   344  000E8B  6F                 	db	111	;'o'
   345  000E8C  77                 	db	119	;'w'
   346  000E8D  00                 	db	0
   347  000E8E                     
   348                           ; BSR set to: 14
   349  000E8E  77                 	db	119	;'w'
   350  000E8F  68                 	db	104	;'h'
   351  000E90  69                 	db	105	;'i'
   352  000E91  74                 	db	116	;'t'
   353  000E92  65                 	db	101	;'e'
   354  000E93  00                 	db	0
   355  000E94                     
   356                           ; BSR set to: 14
   357  000E94  67                 	db	103	;'g'
   358  000E95  72                 	db	114	;'r'
   359  000E96  65                 	db	101	;'e'
   360  000E97  65                 	db	101	;'e'
   361  000E98  6E                 	db	110	;'n'
   362  000E99  00                 	db	0
   363  000E9A                     
   364                           ; BSR set to: 14
   365  000E9A  70                 	db	112	;'p'
   366  000E9B  69                 	db	105	;'i'
   367  000E9C  6E                 	db	110	;'n'
   368  000E9D  6B                 	db	107	;'k'
   369  000E9E  00                 	db	0
   370  000E9F                     
   371                           ; BSR set to: 14
   372  000E9F  72                 	db	114	;'r'
   373  000EA0  65                 	db	101	;'e'
   374  000EA1  64                 	db	100	;'d'
   375  000EA2  00                 	db	0
   376  000EA3  00                 	db	0	; dummy byte at the end
   377  0000                     
   378                           ; #config settings
   379                           
   380                           	psect	cinit
   381  003CE4                     __pcinit:
   382                           	callstack 0
   383  003CE4                     start_initialization:
   384                           	callstack 0
   385  003CE4                     __initialization:
   386                           	callstack 0
   387                           
   388                           ; Clear objects allocated to BANK0 (4 bytes)
   389  003CE4  0100               	movlb	0
   390  003CE6  6BB7               	clrf	(__pbssBANK0+3)& (0+255),b
   391  003CE8  6BB6               	clrf	(__pbssBANK0+2)& (0+255),b
   392  003CEA  6BB5               	clrf	(__pbssBANK0+1)& (0+255),b
   393  003CEC  6BB4               	clrf	__pbssBANK0& (0+255),b
   394                           
   395                           ; Clear objects allocated to COMRAM (4 bytes)
   396  003CEE  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   397  003CF0  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   398  003CF2  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   399  003CF4  6A52               	clrf	__pbssCOMRAM& (0+255),c
   400  003CF6                     end_of_initialization:
   401                           	callstack 0
   402  003CF6                     __end_of__initialization:
   403                           	callstack 0
   404  003CF6  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   405  003CF8  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   406  003CFA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   407  003CFC  6EF8               	movwf	tblptru,c
   408  003CFE  0E0E               	movlw	high __Lsmallconst
   409  003D00  6EF7               	movwf	tblptrh,c
   410  003D02  0100               	movlb	0
   411  003D04  EF09  F013         	goto	_main	;jump to C main() function
   412                           
   413                           	psect	bssCOMRAM
   414  000052                     __pbssCOMRAM:
   415                           	callstack 0
   416  000052                     _interrupts_upperbound:
   417                           	callstack 0
   418  000052                     	ds	2
   419  000054                     _interrupts_lowerbound:
   420                           	callstack 0
   421  000054                     	ds	2
   422                           
   423                           	psect	bssBANK0
   424  0000B4                     __pbssBANK0:
   425                           	callstack 0
   426  0000B4                     _overtime_flag:
   427                           	callstack 0
   428  0000B4                     	ds	1
   429  0000B5                     _returnhome_flag:
   430                           	callstack 0
   431  0000B5                     	ds	1
   432  0000B6                     _unknowncard_flag:
   433                           	callstack 0
   434  0000B6                     	ds	1
   435  0000B7                     _colourcard_flag:
   436                           	callstack 0
   437  0000B7                     	ds	1
   438                           
   439                           	psect	cstackBANK0
   440  000060                     __pcstackBANK0:
   441                           	callstack 0
   442  000060                     ___fldiv@rem:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x0
   446  000060                     	ds	4
   447  000064                     ___fldiv@sign:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x4
   451  000064                     	ds	1
   452  000065                     ___fldiv@new_exp:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x5
   456  000065                     	ds	2
   457  000067                     ___fldiv@grs:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x7
   461  000067                     	ds	4
   462  00006B                     ___fldiv@bexp:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0xB
   466  00006B                     	ds	1
   467  00006C                     ___fldiv@aexp:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0xC
   471  00006C                     	ds	1
   472  00006D                     colourcards_normaliseRGBC@abs:
   473                           	callstack 0
   474  00006D                     left@mL:
   475                           	callstack 0
   476  00006D                     right@mL:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xD
   480  00006D                     	ds	2
   481  00006F                     colourcards_normaliseRGBC@rel:
   482                           	callstack 0
   483  00006F                     left@mR:
   484                           	callstack 0
   485  00006F                     right@mR:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0xF
   489  00006F                     	ds	2
   490  000071                     colourcards_normaliseRGBC@R:
   491                           	callstack 0
   492  000071                     left@deg:
   493                           	callstack 0
   494  000071                     right@deg:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x11
   498  000071                     	ds	2
   499  000073                     colourcards_normaliseRGBC@G:
   500                           	callstack 0
   501  000073                     left@delay:
   502                           	callstack 0
   503  000073                     right@delay:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x13
   507  000073                     	ds	2
   508  000075                     colourcards_normaliseRGBC@B:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x15
   512  000075                     	ds	2
   513  000077                     colourcards_normaliseRGBC@C:
   514                           	callstack 0
   515  000077                     _left$3193:
   516                           	callstack 0
   517  000077                     _right$3194:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0x17
   521  000077                     	ds	4
   522  00007B                     left@i:
   523                           	callstack 0
   524  00007B                     right@i:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x1B
   528  00007B                     	ds	2
   529  00007D                     turnleft@mL:
   530                           	callstack 0
   531  00007D                     turnright@mL:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x1D
   535  00007D                     	ds	2
   536  00007F                     turnleft@mR:
   537                           	callstack 0
   538  00007F                     turnright@mR:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1F
   542  00007F                     	ds	2
   543  000081                     turnleft@deg:
   544                           	callstack 0
   545  000081                     turnright@deg:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x21
   549  000081                     	ds	2
   550  000083                     colourcards_readRGBC@abs:
   551                           	callstack 0
   552  000083                     DCmotors_calibration@mL:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x23
   556  000083                     	ds	2
   557  000085                     colourcards_readRGBC@mL:
   558                           	callstack 0
   559  000085                     DCmotors_calibration@mR:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x25
   563  000085                     	ds	2
   564  000087                     ??_DCmotors_calibration:
   565  000087                     colourcards_readRGBC@mR:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x27
   569  000087                     	ds	2
   570  000089                     ??_colourcards_readRGBC:
   571  000089                     DCmotors_calibration@okay:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x29
   575  000089                     	ds	2
   576  00008B                     colourcards_readRGBC@rel:
   577                           	callstack 0
   578                           
   579                           ; 12 bytes @ 0x2B
   580  00008B                     	ds	12
   581  000097                     ??_main:
   582                           
   583                           ; 1 bytes @ 0x37
   584  000097                     	ds	2
   585  000099                     main@start:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x39
   589  000099                     	ds	1
   590  00009A                     main@current:
   591                           	callstack 0
   592                           
   593                           ; 8 bytes @ 0x3A
   594  00009A                     	ds	8
   595  0000A2                     main@motorL:
   596                           	callstack 0
   597                           
   598                           ; 9 bytes @ 0x42
   599  0000A2                     	ds	9
   600  0000AB                     main@motorR:
   601                           	callstack 0
   602                           
   603                           ; 9 bytes @ 0x4B
   604  0000AB                     	ds	9
   605                           
   606                           	psect	cstackCOMRAM
   607  000001                     __pcstackCOMRAM:
   608                           	callstack 0
   609  000001                     ??i2_I2C_2_Master_Idle:
   610  000001                     
   611                           ; 1 bytes @ 0x0
   612  000001                     	ds	1
   613  000002                     i2I2C_2_Master_Write@data_byte:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x1
   617  000002                     	ds	1
   618  000003                     i2colourclick_writetoaddr@value:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x2
   622  000003                     	ds	1
   623  000004                     i2colourclick_writetoaddr@address:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x3
   627  000004                     	ds	1
   628  000005                     ??i2_interrupts_colourclick:
   629                           
   630                           ; 1 bytes @ 0x4
   631  000005                     	ds	1
   632  000006                     ??_HighISR:
   633  000006                     
   634                           ; 1 bytes @ 0x5
   635  000006                     	ds	1
   636  000007                     ??_LowISR:
   637                           
   638                           ; 1 bytes @ 0x6
   639  000007                     	ds	3
   640  00000A                     ??_adjdelay:
   641  00000A                     ??_I2C_2_Master_Idle:
   642  00000A                     ?___wmul:
   643                           	callstack 0
   644  00000A                     ?___xxtofl:
   645                           	callstack 0
   646  00000A                     ADC_getval@tmpval:
   647                           	callstack 0
   648  00000A                     colourclickLEDs_C@tog:
   649                           	callstack 0
   650  00000A                     DCmotors_init@PWMperiod:
   651                           	callstack 0
   652  00000A                     ___wmul@multiplier:
   653                           	callstack 0
   654  00000A                     ___xxtofl@val:
   655                           	callstack 0
   656                           
   657                           ; 4 bytes @ 0x9
   658  00000A                     	ds	1
   659  00000B                     ??_I2C_2_Master_Read:
   660  00000B                     I2C_2_Master_Write@data_byte:
   661                           	callstack 0
   662  00000B                     checkbatterylevel@batterylevel:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0xA
   666  00000B                     	ds	1
   667  00000C                     colourclick_writetoaddr@value:
   668                           	callstack 0
   669  00000C                     I2C_2_Master_Read@ack:
   670                           	callstack 0
   671  00000C                     adjdelay@mode:
   672                           	callstack 0
   673  00000C                     ___wmul@multiplicand:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0xB
   677  00000C                     	ds	1
   678  00000D                     colourclick_writetoaddr@address:
   679                           	callstack 0
   680  00000D                     I2C_2_Master_Read@tmp:
   681                           	callstack 0
   682  00000D                     adjdelay@i:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0xC
   686  00000D                     	ds	1
   687  00000E                     ??_colourclick_init:
   688  00000E                     ??_interrupts_colourclick:
   689  00000E                     ??___xxtofl:
   690  00000E                     ?_colourclick_readR:
   691                           	callstack 0
   692  00000E                     ?_colourclick_readG:
   693                           	callstack 0
   694  00000E                     ?_colourclick_readB:
   695                           	callstack 0
   696  00000E                     ?_colourclick_readC:
   697                           	callstack 0
   698  00000E                     ___wmul@product:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0xD
   702  00000E                     	ds	1
   703  00000F                     
   704                           ; 1 bytes @ 0xE
   705  00000F                     	ds	1
   706  000010                     ??_colourclick_readR:
   707  000010                     ??_colourclick_readG:
   708  000010                     ??_colourclick_readB:
   709  000010                     ??_colourclick_readC:
   710  000010                     ?___awdiv:
   711                           	callstack 0
   712  000010                     ___awdiv@dividend:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0xF
   716  000010                     	ds	2
   717  000012                     ___xxtofl@sign:
   718                           	callstack 0
   719  000012                     ___awdiv@divisor:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x11
   723  000012                     	ds	1
   724  000013                     ___xxtofl@exp:
   725                           	callstack 0
   726  000013                     colourclick_readR@tmp:
   727                           	callstack 0
   728  000013                     colourclick_readG@tmp:
   729                           	callstack 0
   730  000013                     colourclick_readB@tmp:
   731                           	callstack 0
   732  000013                     colourclick_readC@tmp:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x12
   736  000013                     	ds	1
   737  000014                     ___awdiv@counter:
   738                           	callstack 0
   739  000014                     ___xxtofl@arg:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x13
   743  000014                     	ds	1
   744  000015                     ___awdiv@sign:
   745                           	callstack 0
   746  000015                     colourclick_readRGBC@tmpval:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x14
   750  000015                     	ds	1
   751  000016                     ___awdiv@quotient:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x15
   755  000016                     	ds	1
   756  000017                     ??_colourclick_calibration:
   757  000017                     colourclick_readRGBC2@tmpval:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x16
   761  000017                     	ds	1
   762  000018                     ?___flmul:
   763                           	callstack 0
   764  000018                     DCmotors_setPWM@m:
   765                           	callstack 0
   766  000018                     ___flge@ff1:
   767                           	callstack 0
   768  000018                     ___flmul@b:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x17
   772  000018                     	ds	1
   773  000019                     colourclick_readRGBC2@mode:
   774                           	callstack 0
   775  000019                     colourclick_calibration@initial:
   776                           	callstack 0
   777                           
   778                           ; 8 bytes @ 0x18
   779  000019                     	ds	1
   780  00001A                     ??_colourclick_readRGBC2:
   781  00001A                     ??_DCmotors_setPWM:
   782                           
   783                           ; 1 bytes @ 0x19
   784  00001A                     	ds	2
   785  00001C                     ___flge@ff2:
   786                           	callstack 0
   787  00001C                     ___flmul@a:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x1B
   791  00001C                     	ds	4
   792  000020                     ??___flmul:
   793  000020                     ??___flge:
   794                           
   795                           ; 1 bytes @ 0x1F
   796  000020                     	ds	1
   797  000021                     DCmotors_setPWM@PWMduty:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x20
   801  000021                     	ds	2
   802  000023                     forward@mL:
   803                           	callstack 0
   804  000023                     reverse@mL:
   805                           	callstack 0
   806  000023                     stop@mL:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x22
   810  000023                     	ds	1
   811  000024                     ___flmul@sign:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x23
   815  000024                     	ds	1
   816  000025                     forward@mR:
   817                           	callstack 0
   818  000025                     reverse@mR:
   819                           	callstack 0
   820  000025                     stop@mR:
   821                           	callstack 0
   822  000025                     ___flmul@grs:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x24
   826  000025                     	ds	2
   827  000027                     ??_stop:
   828  000027                     
   829                           ; 1 bytes @ 0x26
   830  000027                     	ds	2
   831  000029                     ___flmul@aexp:
   832                           	callstack 0
   833  000029                     clearance@mL:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x28
   837  000029                     	ds	1
   838  00002A                     ___flmul@bexp:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x29
   842  00002A                     	ds	1
   843  00002B                     clearance@mR:
   844                           	callstack 0
   845  00002B                     ___flmul@prod:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x2A
   849  00002B                     	ds	2
   850  00002D                     ??_clearance:
   851                           
   852                           ; 1 bytes @ 0x2C
   853  00002D                     	ds	2
   854  00002F                     ___flmul@temp:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x2E
   858  00002F                     	ds	2
   859  000031                     ?___fladd:
   860                           	callstack 0
   861  000031                     ___fladd@b:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x30
   865  000031                     	ds	4
   866  000035                     ___fladd@a:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x34
   870  000035                     	ds	4
   871  000039                     ??___fladd:
   872                           
   873                           ; 1 bytes @ 0x38
   874  000039                     	ds	4
   875  00003D                     ___fladd@signs:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x3C
   879  00003D                     	ds	1
   880  00003E                     ___fladd@aexp:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x3D
   884  00003E                     	ds	1
   885  00003F                     ___fladd@bexp:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x3E
   889  00003F                     	ds	1
   890  000040                     ___fladd@grs:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x3F
   894  000040                     	ds	1
   895  000041                     ?___fldiv:
   896                           	callstack 0
   897  000041                     ___fldiv@b:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x40
   901  000041                     	ds	4
   902  000045                     ___fldiv@a:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x44
   906  000045                     	ds	4
   907  000049                     ??___fldiv:
   908                           
   909                           ; 1 bytes @ 0x48
   910  000049                     	ds	4
   911  00004D                     ??_left:
   912  00004D                     ??_right:
   913                           
   914                           ; 1 bytes @ 0x4C
   915  00004D                     	ds	1
   916  00004E                     
   917                           ; 1 bytes @ 0x4D
   918 ;;
   919 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   920 ;;
   921 ;; *************** function _main *****************
   922 ;; Defined at:
   923 ;;		line 7 in file "main.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  motorR          9   75[BANK0 ] struct .
   928 ;;  motorL          9   66[BANK0 ] struct .
   929 ;;  current         8   58[BANK0 ] struct .
   930 ;;  PWMperiod       1    0        unsigned char 
   931 ;;  start           1   57[BANK0 ] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   942 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   943 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   944 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;Total ram usage:       29 bytes
   946 ;; Hardware stack levels required when called: 13
   947 ;; This function calls:
   948 ;;		_ADC_init
   949 ;;		_DCmotors_calibration
   950 ;;		_DCmotors_init
   951 ;;		_USART4_init
   952 ;;		_checkbatterylevel
   953 ;;		_colourcards_readRGBC
   954 ;;		_colourclickLEDs_C
   955 ;;		_colourclick_calibration
   956 ;;		_colourclick_init
   957 ;;		_colourclick_readRGBC
   958 ;;		_forward
   959 ;;		_interrupts_init
   960 ;;		_reverse
   961 ;;		_stop
   962 ;;		_timer0_init
   963 ;; This function is called by:
   964 ;;		Startup code after reset
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text0
   969  002612                     __ptext0:
   970                           	callstack 0
   971  002612                     _main:
   972                           	callstack 18
   973  002612                     
   974                           ;main.c: 11:     RGBC_val current;;main.c: 12:     unsigned char start = 0;
   975  002612  0E00               	movlw	0
   976  002614  0100               	movlb	0	; () banked
   977  002616  6F99               	movwf	main@start& (0+255),b
   978                           
   979                           ;main.c: 14:     turnleft_calangle = 360;
   980  002618  0E01               	movlw	1
   981  00261A  6E51               	movwf	(_turnleft_calangle+1)^0,c	;volatile
   982  00261C  0E68               	movlw	104
   983  00261E  6E50               	movwf	_turnleft_calangle^0,c	;volatile
   984                           
   985                           ;main.c: 15:     turnright_calangle = 360;
   986  002620  0E01               	movlw	1
   987  002622  6E4F               	movwf	(_turnright_calangle+1)^0,c	;volatile
   988  002624  0E68               	movlw	104
   989  002626  6E4E               	movwf	_turnright_calangle^0,c	;volatile
   990                           
   991                           ;main.c: 16:     interrupts_lowerbound = 0;
   992  002628  0E00               	movlw	0
   993  00262A  6E55               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
   994  00262C  0E00               	movlw	0
   995  00262E  6E54               	movwf	_interrupts_lowerbound^0,c	;volatile
   996                           
   997                           ;main.c: 17:     interrupts_upperbound = 0;
   998  002630  0E00               	movlw	0
   999  002632  6E53               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1000  002634  0E00               	movlw	0
  1001  002636  6E52               	movwf	_interrupts_upperbound^0,c	;volatile
  1002                           
  1003                           ;main.c: 18:     colourcard_flag = 0;
  1004  002638  0E00               	movlw	0
  1005  00263A  6FB7               	movwf	_colourcard_flag& (0+255),b	;volatile
  1006                           
  1007                           ;main.c: 19:     unknowncard_flag = 0;
  1008  00263C  0E00               	movlw	0
  1009  00263E  6FB6               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1010                           
  1011                           ;main.c: 20:     returnhome_flag = 0;
  1012  002640  0E00               	movlw	0
  1013  002642  6FB5               	movwf	_returnhome_flag& (0+255),b	;volatile
  1014                           
  1015                           ;main.c: 21:     overtime_flag = 0;
  1016  002644  0E00               	movlw	0
  1017  002646  6FB4               	movwf	_overtime_flag& (0+255),b	;volatile
  1018                           
  1019                           ;main.c: 23:     DC_motor motorL;;main.c: 24:     motorL.power=0;
  1020  002648  0E00               	movlw	0
  1021  00264A  6FA2               	movwf	main@motorL& (0+255),b
  1022                           
  1023                           ;main.c: 25:     motorL.direction=1;
  1024  00264C  0E01               	movlw	1
  1025  00264E  6FA3               	movwf	(main@motorL+1)& (0+255),b
  1026  002650                     
  1027                           ; BSR set to: 0
  1028                           ;main.c: 26:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1029  002650  0EA3               	movlw	163
  1030  002652  6FA4               	movwf	(main@motorL+2)& (0+255),b
  1031  002654  0E0F               	movlw	15
  1032  002656  6FA5               	movwf	(main@motorL+3)& (0+255),b
  1033  002658                     
  1034                           ; BSR set to: 0
  1035                           ;main.c: 27:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1036  002658  0E7D               	movlw	125
  1037  00265A  6FA6               	movwf	(main@motorL+4)& (0+255),b
  1038  00265C  0E0F               	movlw	15
  1039  00265E  6FA7               	movwf	(main@motorL+5)& (0+255),b
  1040                           
  1041                           ;main.c: 28:     motorL.dir_pin=4;
  1042  002660  0E04               	movlw	4
  1043  002662  6FA8               	movwf	(main@motorL+6)& (0+255),b
  1044  002664                     
  1045                           ; BSR set to: 0
  1046                           ;main.c: 29:     motorL.PWMperiod=PWMperiod;
  1047  002664  0E00               	movlw	0
  1048  002666  6FAA               	movwf	(main@motorL+8)& (0+255),b
  1049  002668  0E63               	movlw	99
  1050  00266A  6FA9               	movwf	(main@motorL+7)& (0+255),b
  1051                           
  1052                           ;main.c: 31:     DC_motor motorR;;main.c: 32:     motorR.power=0;
  1053  00266C  0E00               	movlw	0
  1054  00266E  6FAB               	movwf	main@motorR& (0+255),b
  1055                           
  1056                           ;main.c: 33:     motorR.direction=1;
  1057  002670  0E01               	movlw	1
  1058  002672  6FAC               	movwf	(main@motorR+1)& (0+255),b
  1059  002674                     
  1060                           ; BSR set to: 0
  1061                           ;main.c: 34:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1062  002674  0EA0               	movlw	160
  1063  002676  6FAD               	movwf	(main@motorR+2)& (0+255),b
  1064  002678  0E0F               	movlw	15
  1065  00267A  6FAE               	movwf	(main@motorR+3)& (0+255),b
  1066  00267C                     
  1067                           ; BSR set to: 0
  1068                           ;main.c: 35:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1069  00267C  0E7F               	movlw	127
  1070  00267E  6FAF               	movwf	(main@motorR+4)& (0+255),b
  1071  002680  0E0F               	movlw	15
  1072  002682  6FB0               	movwf	(main@motorR+5)& (0+255),b
  1073                           
  1074                           ;main.c: 36:     motorR.dir_pin=6;
  1075  002684  0E06               	movlw	6
  1076  002686  6FB1               	movwf	(main@motorR+6)& (0+255),b
  1077  002688                     
  1078                           ; BSR set to: 0
  1079                           ;main.c: 37:     motorR.PWMperiod=PWMperiod;
  1080  002688  0E00               	movlw	0
  1081  00268A  6FB3               	movwf	(main@motorR+8)& (0+255),b
  1082  00268C  0E63               	movlw	99
  1083  00268E  6FB2               	movwf	(main@motorR+7)& (0+255),b
  1084  002690                     
  1085                           ; BSR set to: 0
  1086                           ;main.c: 39:     ADC_init();
  1087  002690  EC04  F01F         	call	_ADC_init	;wreg free
  1088  002694                     
  1089                           ;main.c: 40:     colourclick_init();
  1090  002694  EC06  F01E         	call	_colourclick_init	;wreg free
  1091  002698                     
  1092                           ;main.c: 41:     DCmotors_init(PWMperiod);
  1093  002698  0E63               	movlw	99
  1094  00269A  ECFD  F01C         	call	_DCmotors_init
  1095  00269E                     
  1096                           ;main.c: 42:     timer0_init();
  1097  00269E  ECA7  F01E         	call	_timer0_init	;wreg free
  1098  0026A2                     
  1099                           ;main.c: 43:     USART4_init();
  1100  0026A2  ECD7  F01E         	call	_USART4_init	;wreg free
  1101  0026A6                     
  1102                           ;main.c: 44:     checkbatterylevel();
  1103  0026A6  ECC7  F01E         	call	_checkbatterylevel	;wreg free
  1104  0026AA                     
  1105                           ;main.c: 49:     DCmotors_calibration(&motorL, &motorR);
  1106  0026AA  0EA2               	movlw	low main@motorL
  1107  0026AC  0100               	movlb	0	; () banked
  1108  0026AE  6F83               	movwf	DCmotors_calibration@mL& (0+255),b
  1109  0026B0  0E00               	movlw	high main@motorL
  1110  0026B2  6F84               	movwf	(DCmotors_calibration@mL+1)& (0+255),b
  1111  0026B4  0EAB               	movlw	low main@motorR
  1112  0026B6  6F85               	movwf	DCmotors_calibration@mR& (0+255),b
  1113  0026B8  0E00               	movlw	high main@motorR
  1114  0026BA  6F86               	movwf	(DCmotors_calibration@mR+1)& (0+255),b
  1115  0026BC  EC9A  F011         	call	_DCmotors_calibration	;wreg free
  1116  0026C0                     
  1117                           ;main.c: 55:     colourclick_calibration();
  1118  0026C0  ECC3  F01B         	call	_colourclick_calibration	;wreg free
  1119  0026C4                     l69:
  1120  0026C4  A48E               	btfss	142,2,c	;volatile
  1121  0026C6  EF67  F013         	goto	u5361
  1122  0026CA  EF69  F013         	goto	u5360
  1123  0026CE                     u5361:
  1124  0026CE  EF70  F013         	goto	l73
  1125  0026D2                     u5360:
  1126  0026D2  B68E               	btfsc	142,3,c	;volatile
  1127  0026D4  EF6E  F013         	goto	u5371
  1128  0026D8  EF70  F013         	goto	u5370
  1129  0026DC                     u5371:
  1130  0026DC  EF62  F013         	goto	l69
  1131  0026E0                     u5370:
  1132  0026E0                     l73:
  1133                           
  1134                           ;main.c: 62:     LATDbits.LATD3 = 1;
  1135  0026E0  867C               	bsf	124,3,c	;volatile
  1136  0026E2                     
  1137                           ;main.c: 63:     colourclickLEDs_C(1);
  1138  0026E2  0E01               	movlw	1
  1139  0026E4  EC96  F01E         	call	_colourclickLEDs_C
  1140  0026E8                     
  1141                           ;main.c: 64:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1142  0026E8  0E52               	movlw	82
  1143  0026EA  0100               	movlb	0	; () banked
  1144  0026EC  6F98               	movwf	(??_main+1)& (0+255),b
  1145  0026EE  0E2B               	movlw	43
  1146  0026F0  6F97               	movwf	??_main& (0+255),b
  1147  0026F2  0E00               	movlw	0
  1148  0026F4                     u5867:
  1149  0026F4  2EE8               	decfsz	wreg,f,c
  1150  0026F6  D7FE               	bra	u5867
  1151  0026F8  2F97               	decfsz	??_main& (0+255),f,b
  1152  0026FA  D7FC               	bra	u5867
  1153  0026FC  2F98               	decfsz	(??_main+1)& (0+255),f,b
  1154  0026FE  D7FA               	bra	u5867
  1155  002700  F000               	nop	
  1156  002702                     
  1157                           ;main.c: 65:     interrupts_init();
  1158  002702  EC84  F01E         	call	_interrupts_init	;wreg free
  1159  002706                     l4957:
  1160                           
  1161                           ;main.c: 71:         if (start==0 && colourcard_flag==1) {
  1162  002706  0100               	movlb	0	; () banked
  1163  002708  5199               	movf	main@start& (0+255),w,b
  1164  00270A  A4D8               	btfss	status,2,c
  1165  00270C  EF8A  F013         	goto	u5381
  1166  002710  EF8C  F013         	goto	u5380
  1167  002714                     u5381:
  1168  002714  EF9A  F013         	goto	l4963
  1169  002718                     u5380:
  1170  002718                     
  1171                           ; BSR set to: 0
  1172  002718  05B7               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1173  00271A  A4D8               	btfss	status,2,c
  1174  00271C  EF92  F013         	goto	u5391
  1175  002720  EF94  F013         	goto	u5390
  1176  002724                     u5391:
  1177  002724  EF9A  F013         	goto	l4963
  1178  002728                     u5390:
  1179  002728                     
  1180                           ; BSR set to: 0
  1181                           ;main.c: 72:             colourcard_flag = 0;
  1182  002728  0E00               	movlw	0
  1183  00272A  6FB7               	movwf	_colourcard_flag& (0+255),b	;volatile
  1184                           
  1185                           ;main.c: 73:             start = 1;
  1186  00272C  0E01               	movlw	1
  1187  00272E  6F99               	movwf	main@start& (0+255),b
  1188                           
  1189                           ;main.c: 74:         } else if (start==1 && colourcard_flag==1) {
  1190  002730  EF83  F013         	goto	l4957
  1191  002734                     l4963:
  1192                           
  1193                           ; BSR set to: 0
  1194  002734  0599               	decf	main@start& (0+255),w,b
  1195  002736  A4D8               	btfss	status,2,c
  1196  002738  EFA0  F013         	goto	u5401
  1197  00273C  EFA2  F013         	goto	u5400
  1198  002740                     u5401:
  1199  002740  EF19  F014         	goto	l4993
  1200  002744                     u5400:
  1201  002744                     
  1202                           ; BSR set to: 0
  1203  002744  05B7               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1204  002746  A4D8               	btfss	status,2,c
  1205  002748  EFA8  F013         	goto	u5411
  1206  00274C  EFAA  F013         	goto	u5410
  1207  002750                     u5411:
  1208  002750  EF19  F014         	goto	l4993
  1209  002754                     u5410:
  1210  002754                     
  1211                           ; BSR set to: 0
  1212                           ;main.c: 75:             stop(&motorL, &motorR);
  1213  002754  0EA2               	movlw	low main@motorL
  1214  002756  6E23               	movwf	stop@mL^0,c
  1215  002758  0E00               	movlw	high main@motorL
  1216  00275A  6E24               	movwf	(stop@mL+1)^0,c
  1217  00275C  0EAB               	movlw	low main@motorR
  1218  00275E  6E25               	movwf	stop@mR^0,c
  1219  002760  0E00               	movlw	high main@motorR
  1220  002762  6E26               	movwf	(stop@mR+1)^0,c
  1221  002764  EC7E  F01B         	call	_stop	;wreg free
  1222  002768                     
  1223                           ;main.c: 76:             LATFbits.LATF0 = 1;
  1224  002768  807E               	bsf	126,0,c	;volatile
  1225  00276A                     
  1226                           ;main.c: 77:             LATHbits.LATH0 = 1;
  1227  00276A  8080               	bsf	128,0,c	;volatile
  1228                           
  1229                           ;main.c: 78:             reverse(&motorL, &motorR);
  1230  00276C  0EA2               	movlw	low main@motorL
  1231  00276E  6E23               	movwf	reverse@mL^0,c
  1232  002770  0E00               	movlw	high main@motorL
  1233  002772  6E24               	movwf	(reverse@mL+1)^0,c
  1234  002774  0EAB               	movlw	low main@motorR
  1235  002776  6E25               	movwf	reverse@mR^0,c
  1236  002778  0E00               	movlw	high main@motorR
  1237  00277A  6E26               	movwf	(reverse@mR+1)^0,c
  1238  00277C  EC37  F01B         	call	_reverse	;wreg free
  1239  002780                     
  1240                           ;main.c: 79:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1241  002780  0E09               	movlw	9
  1242  002782  0100               	movlb	0	; () banked
  1243  002784  6F98               	movwf	(??_main+1)& (0+255),b
  1244  002786  0E1E               	movlw	30
  1245  002788  6F97               	movwf	??_main& (0+255),b
  1246  00278A  0EE4               	movlw	228
  1247  00278C                     u5877:
  1248  00278C  2EE8               	decfsz	wreg,f,c
  1249  00278E  D7FE               	bra	u5877
  1250  002790  2F97               	decfsz	??_main& (0+255),f,b
  1251  002792  D7FC               	bra	u5877
  1252  002794  2F98               	decfsz	(??_main+1)& (0+255),f,b
  1253  002796  D7FA               	bra	u5877
  1254  002798  F000               	nop	
  1255  00279A                     
  1256                           ;main.c: 80:             stop(&motorL, &motorR);
  1257  00279A  0EA2               	movlw	low main@motorL
  1258  00279C  6E23               	movwf	stop@mL^0,c
  1259  00279E  0E00               	movlw	high main@motorL
  1260  0027A0  6E24               	movwf	(stop@mL+1)^0,c
  1261  0027A2  0EAB               	movlw	low main@motorR
  1262  0027A4  6E25               	movwf	stop@mR^0,c
  1263  0027A6  0E00               	movlw	high main@motorR
  1264  0027A8  6E26               	movwf	(stop@mR+1)^0,c
  1265  0027AA  EC7E  F01B         	call	_stop	;wreg free
  1266  0027AE                     
  1267                           ;main.c: 81:             LATFbits.LATF0 = 0;
  1268  0027AE  907E               	bcf	126,0,c	;volatile
  1269  0027B0                     
  1270                           ;main.c: 82:             LATHbits.LATH0 = 0;
  1271  0027B0  9080               	bcf	128,0,c	;volatile
  1272                           
  1273                           ;main.c: 83:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1274  0027B2  0E52               	movlw	82
  1275  0027B4  0100               	movlb	0	; () banked
  1276  0027B6  6F98               	movwf	(??_main+1)& (0+255),b
  1277  0027B8  0E2B               	movlw	43
  1278  0027BA  6F97               	movwf	??_main& (0+255),b
  1279  0027BC  0E00               	movlw	0
  1280  0027BE                     u5887:
  1281  0027BE  2EE8               	decfsz	wreg,f,c
  1282  0027C0  D7FE               	bra	u5887
  1283  0027C2  2F97               	decfsz	??_main& (0+255),f,b
  1284  0027C4  D7FC               	bra	u5887
  1285  0027C6  2F98               	decfsz	(??_main+1)& (0+255),f,b
  1286  0027C8  D7FA               	bra	u5887
  1287  0027CA  F000               	nop	
  1288  0027CC                     
  1289                           ;main.c: 85:             colourcards_readRGBC(&current, &motorL, &motorR);
  1290  0027CC  0E9A               	movlw	low main@current
  1291  0027CE  0100               	movlb	0	; () banked
  1292  0027D0  6F83               	movwf	colourcards_readRGBC@abs& (0+255),b
  1293  0027D2  0E00               	movlw	high main@current
  1294  0027D4  6F84               	movwf	(colourcards_readRGBC@abs+1)& (0+255),b
  1295  0027D6  0EA2               	movlw	low main@motorL
  1296  0027D8  6F85               	movwf	colourcards_readRGBC@mL& (0+255),b
  1297  0027DA  0E00               	movlw	high main@motorL
  1298  0027DC  6F86               	movwf	(colourcards_readRGBC@mL+1)& (0+255),b
  1299  0027DE  0EAB               	movlw	low main@motorR
  1300  0027E0  6F87               	movwf	colourcards_readRGBC@mR& (0+255),b
  1301  0027E2  0E00               	movlw	high main@motorR
  1302  0027E4  6F88               	movwf	(colourcards_readRGBC@mR+1)& (0+255),b
  1303  0027E6  EC52  F007         	call	_colourcards_readRGBC	;wreg free
  1304  0027EA                     
  1305                           ;main.c: 86:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1306  0027EA  0E52               	movlw	82
  1307  0027EC  0100               	movlb	0	; () banked
  1308  0027EE  6F98               	movwf	(??_main+1)& (0+255),b
  1309  0027F0  0E2B               	movlw	43
  1310  0027F2  6F97               	movwf	??_main& (0+255),b
  1311  0027F4  0E00               	movlw	0
  1312  0027F6                     u5897:
  1313  0027F6  2EE8               	decfsz	wreg,f,c
  1314  0027F8  D7FE               	bra	u5897
  1315  0027FA  2F97               	decfsz	??_main& (0+255),f,b
  1316  0027FC  D7FC               	bra	u5897
  1317  0027FE  2F98               	decfsz	(??_main+1)& (0+255),f,b
  1318  002800  D7FA               	bra	u5897
  1319  002802  F000               	nop	
  1320  002804                     
  1321                           ;main.c: 88:             colourclick_readRGBC(&current);
  1322  002804  0E9A               	movlw	low main@current
  1323  002806  6E15               	movwf	colourclick_readRGBC@tmpval^0,c
  1324  002808  0E00               	movlw	high main@current
  1325  00280A  6E16               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  1326  00280C  ECFF  F01B         	call	_colourclick_readRGBC	;wreg free
  1327  002810                     
  1328                           ;main.c: 89:             interrupts_upperbound = current.C + 100;
  1329  002810  0E64               	movlw	100
  1330  002812  0100               	movlb	0	; () banked
  1331  002814  25A0               	addwf	(main@current+6)& (0+255),w,b
  1332  002816  6E52               	movwf	_interrupts_upperbound^0,c	;volatile
  1333  002818  0E00               	movlw	0
  1334  00281A  21A1               	addwfc	(main@current+7)& (0+255),w,b
  1335  00281C  6E53               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1336  00281E                     
  1337                           ; BSR set to: 0
  1338                           ;main.c: 90:             interrupts_lowerbound = current.C - 150;
  1339  00281E  0E6A               	movlw	106
  1340  002820  25A0               	addwf	(main@current+6)& (0+255),w,b
  1341  002822  6E54               	movwf	_interrupts_lowerbound^0,c	;volatile
  1342  002824  0EFF               	movlw	255
  1343  002826  21A1               	addwfc	(main@current+7)& (0+255),w,b
  1344  002828  6E55               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1345  00282A                     
  1346                           ; BSR set to: 0
  1347                           ;main.c: 92:             colourcard_flag = 0;
  1348  00282A  0E00               	movlw	0
  1349  00282C  6FB7               	movwf	_colourcard_flag& (0+255),b	;volatile
  1350                           
  1351                           ;main.c: 93:         } else {forward(&motorL, &motorR);}
  1352  00282E  EF83  F013         	goto	l4957
  1353  002832                     l4993:
  1354                           
  1355                           ; BSR set to: 0
  1356  002832  0EA2               	movlw	low main@motorL
  1357  002834  6E23               	movwf	forward@mL^0,c
  1358  002836  0E00               	movlw	high main@motorL
  1359  002838  6E24               	movwf	(forward@mL+1)^0,c
  1360  00283A  0EAB               	movlw	low main@motorR
  1361  00283C  6E25               	movwf	forward@mR^0,c
  1362  00283E  0E00               	movlw	high main@motorR
  1363  002840  6E26               	movwf	(forward@mR+1)^0,c
  1364  002842  ECF0  F01A         	call	_forward	;wreg free
  1365  002846  EF83  F013         	goto	l4957
  1366  00284A  EF2E  F000         	goto	start
  1367  00284E                     __end_of_main:
  1368                           	callstack 0
  1369                           
  1370 ;; *************** function _timer0_init *****************
  1371 ;; Defined at:
  1372 ;;		line 8 in file "timers.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 7
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text1
  1401  003D4E                     __ptext1:
  1402                           	callstack 0
  1403  003D4E                     _timer0_init:
  1404                           	callstack 23
  1405  003D4E                     
  1406                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  1407  003D4E  50D6               	movf	214,w,c	;volatile
  1408  003D50  0B1F               	andlw	-225
  1409  003D52  0940               	iorlw	64
  1410  003D54  6ED6               	movwf	214,c	;volatile
  1411  003D56                     
  1412                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  1413  003D56  88D6               	bsf	214,4,c	;volatile
  1414                           
  1415                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  1416  003D58  50D6               	movf	214,w,c	;volatile
  1417  003D5A  0BF0               	andlw	-16
  1418  003D5C  0908               	iorlw	8
  1419  003D5E  6ED6               	movwf	214,c	;volatile
  1420  003D60                     
  1421                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  1422  003D60  88D5               	bsf	213,4,c	;volatile
  1423                           
  1424                           ;timers.c: 14:     TMR0H=0b1011;
  1425  003D62  0E0B               	movlw	11
  1426  003D64  6ED4               	movwf	212,c	;volatile
  1427                           
  1428                           ;timers.c: 15:     TMR0L=0b11011011;
  1429  003D66  0EDB               	movlw	219
  1430  003D68  6ED3               	movwf	211,c	;volatile
  1431  003D6A                     
  1432                           ;timers.c: 16:     T0CON0bits.T0EN=1;
  1433  003D6A  8ED5               	bsf	213,7,c	;volatile
  1434  003D6C  0012               	return		;funcret
  1435  003D6E                     __end_of_timer0_init:
  1436                           	callstack 0
  1437                           
  1438 ;; *************** function _interrupts_init *****************
  1439 ;; Defined at:
  1440 ;;		line 12 in file "interrupts.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; Hardware stack levels required when called: 12
  1461 ;; This function calls:
  1462 ;;		_interrupts_clear
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text2
  1469  003D08                     __ptext2:
  1470                           	callstack 0
  1471  003D08                     _interrupts_init:
  1472                           	callstack 18
  1473  003D08                     
  1474                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 1;
  1475  003D08  8282               	bsf	130,1,c	;volatile
  1476                           
  1477                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  1478  003D0A  010E               	movlb	14	; () banked
  1479  003D0C  939A               	bcf	154,1,b	;volatile
  1480  003D0E                     
  1481                           ; BSR set to: 14
  1482                           ;interrupts.c: 15:     INT1PPS=0x09;
  1483  003D0E  0E09               	movlw	9
  1484  003D10  010D               	movlb	13	; () banked
  1485  003D12  6FF1               	movwf	241,b	;volatile
  1486  003D14                     
  1487                           ; BSR set to: 13
  1488                           ;interrupts.c: 17:     PIE0bits.INT1IE = 1;
  1489  003D14  010E               	movlb	14	; () banked
  1490  003D16  8329               	bsf	41,1,b	;volatile
  1491  003D18                     
  1492                           ; BSR set to: 14
  1493                           ;interrupts.c: 18:     PIE0bits.TMR0IE = 1;
  1494  003D18  8B29               	bsf	41,5,b	;volatile
  1495  003D1A                     
  1496                           ; BSR set to: 14
  1497                           ;interrupts.c: 20:     IPR0bits.INT1IP = 1;
  1498  003D1A  831F               	bsf	31,1,b	;volatile
  1499  003D1C                     
  1500                           ; BSR set to: 14
  1501                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 0;
  1502  003D1C  9B1F               	bcf	31,5,b	;volatile
  1503  003D1E                     
  1504                           ; BSR set to: 14
  1505                           ;interrupts.c: 23:     interrupts_clear();
  1506  003D1E  ECF7  F01E         	call	_interrupts_clear	;wreg free
  1507  003D22                     
  1508                           ;interrupts.c: 25:     INTCONbits.INT1EDG = 0;
  1509  003D22  92F2               	bcf	242,1,c	;volatile
  1510  003D24                     
  1511                           ;interrupts.c: 26:     INTCONbits.IPEN = 1;
  1512  003D24  8AF2               	bsf	242,5,c	;volatile
  1513  003D26                     
  1514                           ;interrupts.c: 27:     INTCONbits.PEIE = 1;
  1515  003D26  8CF2               	bsf	242,6,c	;volatile
  1516  003D28                     
  1517                           ;interrupts.c: 28:     INTCONbits.GIE = 1;
  1518  003D28  8EF2               	bsf	242,7,c	;volatile
  1519  003D2A  0012               	return		;funcret
  1520  003D2C                     __end_of_interrupts_init:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _interrupts_clear *****************
  1524 ;; Defined at:
  1525 ;;		line 37 in file "interrupts.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2, status,0, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1543 ;;Total ram usage:        0 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 11
  1546 ;; This function calls:
  1547 ;;		_I2C_2_Master_Start
  1548 ;;		_I2C_2_Master_Stop
  1549 ;;		_I2C_2_Master_Write
  1550 ;;		_interrupts_colourclick
  1551 ;; This function is called by:
  1552 ;;		_interrupts_init
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text3
  1557  003DEE                     __ptext3:
  1558                           	callstack 0
  1559  003DEE                     _interrupts_clear:
  1560                           	callstack 18
  1561  003DEE                     
  1562                           ;interrupts.c: 38:     I2C_2_Master_Start();
  1563  003DEE  EC53  F01F         	call	_I2C_2_Master_Start	;wreg free
  1564                           
  1565                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  1566  003DF2  0E52               	movlw	82
  1567  003DF4  EC3C  F01F         	call	_I2C_2_Master_Write
  1568                           
  1569                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  1570  003DF8  0EE6               	movlw	230
  1571  003DFA  EC3C  F01F         	call	_I2C_2_Master_Write
  1572                           
  1573                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  1574  003DFE  EC4E  F01F         	call	_I2C_2_Master_Stop	;wreg free
  1575                           
  1576                           ;interrupts.c: 43:     interrupts_colourclick();
  1577  003E02  EC75  F01D         	call	_interrupts_colourclick	;wreg free
  1578  003E06  0012               	return		;funcret
  1579  003E08                     __end_of_interrupts_clear:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _interrupts_colourclick *****************
  1583 ;; Defined at:
  1584 ;;		line 50 in file "interrupts.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1602 ;;Total ram usage:        1 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 10
  1605 ;; This function calls:
  1606 ;;		_colourclick_writetoaddr
  1607 ;; This function is called by:
  1608 ;;		_interrupts_clear
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text4
  1613  003AEA                     __ptext4:
  1614                           	callstack 0
  1615  003AEA                     _interrupts_colourclick:
  1616                           	callstack 18
  1617  003AEA                     
  1618                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
  1619  003AEA  0E13               	movlw	19
  1620  003AEC  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1621  003AEE  0E00               	movlw	0
  1622  003AF0  ECB7  F01E         	call	_colourclick_writetoaddr
  1623  003AF4                     
  1624                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1625  003AF4  0E3F               	movlw	63
  1626  003AF6  6E0E               	movwf	??_interrupts_colourclick^0,c
  1627  003AF8  0E55               	movlw	85
  1628  003AFA                     u5907:
  1629  003AFA  2EE8               	decfsz	wreg,f,c
  1630  003AFC  D7FE               	bra	u5907
  1631  003AFE  2E0E               	decfsz	??_interrupts_colourclick^0,f,c
  1632  003B00  D7FC               	bra	u5907
  1633  003B02  F000               	nop	
  1634  003B04                     
  1635                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
  1636  003B04  0E04               	movlw	4
  1637  003B06  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1638  003B08  0E0C               	movlw	12
  1639  003B0A  ECB7  F01E         	call	_colourclick_writetoaddr
  1640  003B0E                     
  1641                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  1642  003B0E  C054  F00C         	movff	_interrupts_lowerbound,colourclick_writetoaddr@value	;volatile
  1643  003B12  0E04               	movlw	4
  1644  003B14  ECB7  F01E         	call	_colourclick_writetoaddr
  1645  003B18                     
  1646                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  1647  003B18  5055               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  1648  003B1A  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1649  003B1C  0E05               	movlw	5
  1650  003B1E  ECB7  F01E         	call	_colourclick_writetoaddr
  1651  003B22                     
  1652                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  1653  003B22  C052  F00C         	movff	_interrupts_upperbound,colourclick_writetoaddr@value	;volatile
  1654  003B26  0E06               	movlw	6
  1655  003B28  ECB7  F01E         	call	_colourclick_writetoaddr
  1656  003B2C                     
  1657                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  1658  003B2C  5053               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  1659  003B2E  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1660  003B30  0E07               	movlw	7
  1661  003B32  ECB7  F01E         	call	_colourclick_writetoaddr
  1662  003B36  0012               	return		;funcret
  1663  003B38                     __end_of_interrupts_colourclick:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function _colourclick_init *****************
  1667 ;; Defined at:
  1668 ;;		line 12 in file "colour_click.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;Total ram usage:        1 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 10
  1689 ;; This function calls:
  1690 ;;		_I2C_2_Master_Init
  1691 ;;		_colourclickLEDs_init
  1692 ;;		_colourclick_writetoaddr
  1693 ;; This function is called by:
  1694 ;;		_main
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text5
  1699  003C0C                     __ptext5:
  1700                           	callstack 0
  1701  003C0C                     _colourclick_init:
  1702                           	callstack 20
  1703  003C0C                     
  1704                           ;colour_click.c: 14:     I2C_2_Master_Init();
  1705  003C0C  EC22  F01E         	call	_I2C_2_Master_Init	;wreg free
  1706  003C10                     
  1707                           ;colour_click.c: 17:   colourclick_writetoaddr(0x00, 0x01);
  1708  003C10  0E01               	movlw	1
  1709  003C12  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1710  003C14  0E00               	movlw	0
  1711  003C16  ECB7  F01E         	call	_colourclick_writetoaddr
  1712  003C1A                     
  1713                           ;colour_click.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1714  003C1A  0E3F               	movlw	63
  1715  003C1C  6E0E               	movwf	??_colourclick_init^0,c
  1716  003C1E  0E55               	movlw	85
  1717  003C20                     u5917:
  1718  003C20  2EE8               	decfsz	wreg,f,c
  1719  003C22  D7FE               	bra	u5917
  1720  003C24  2E0E               	decfsz	??_colourclick_init^0,f,c
  1721  003C26  D7FC               	bra	u5917
  1722  003C28  F000               	nop	
  1723  003C2A                     
  1724                           ;colour_click.c: 21:  colourclick_writetoaddr(0x00, 0x03);
  1725  003C2A  0E03               	movlw	3
  1726  003C2C  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1727  003C2E  0E00               	movlw	0
  1728  003C30  ECB7  F01E         	call	_colourclick_writetoaddr
  1729  003C34                     
  1730                           ;colour_click.c: 24:  colourclick_writetoaddr(0x01, 0xD5);
  1731  003C34  0ED5               	movlw	213
  1732  003C36  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  1733  003C38  0E01               	movlw	1
  1734  003C3A  ECB7  F01E         	call	_colourclick_writetoaddr
  1735  003C3E                     
  1736                           ;colour_click.c: 26:     colourclickLEDs_init();
  1737  003C3E  EC35  F01F         	call	_colourclickLEDs_init	;wreg free
  1738  003C42  0012               	return		;funcret
  1739  003C44                     __end_of_colourclick_init:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _colourclick_writetoaddr *****************
  1743 ;; Defined at:
  1744 ;;		line 33 in file "colour_click.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  address         1    wreg     unsigned char 
  1747 ;;  value           1   11[COMRAM] unsigned char 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  address         1   12[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1759 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1763 ;;Total ram usage:        2 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; Hardware stack levels required when called: 9
  1766 ;; This function calls:
  1767 ;;		_I2C_2_Master_Start
  1768 ;;		_I2C_2_Master_Stop
  1769 ;;		_I2C_2_Master_Write
  1770 ;; This function is called by:
  1771 ;;		_interrupts_colourclick
  1772 ;;		_colourclick_init
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text6
  1777  003D6E                     __ptext6:
  1778                           	callstack 0
  1779  003D6E                     _colourclick_writetoaddr:
  1780                           	callstack 18
  1781                           
  1782                           ;incstack = 0
  1783                           ;colourclick_writetoaddr@address stored from wreg
  1784  003D6E  6E0D               	movwf	colourclick_writetoaddr@address^0,c
  1785  003D70                     
  1786                           ;colour_click.c: 34:     I2C_2_Master_Start();
  1787  003D70  EC53  F01F         	call	_I2C_2_Master_Start	;wreg free
  1788                           
  1789                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  1790  003D74  0E52               	movlw	82
  1791  003D76  EC3C  F01F         	call	_I2C_2_Master_Write
  1792                           
  1793                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  1794  003D7A  500D               	movf	colourclick_writetoaddr@address^0,w,c
  1795  003D7C  0980               	iorlw	128
  1796  003D7E  EC3C  F01F         	call	_I2C_2_Master_Write
  1797                           
  1798                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  1799  003D82  500C               	movf	colourclick_writetoaddr@value^0,w,c
  1800  003D84  EC3C  F01F         	call	_I2C_2_Master_Write
  1801                           
  1802                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  1803  003D88  EC4E  F01F         	call	_I2C_2_Master_Stop	;wreg free
  1804  003D8C  0012               	return		;funcret
  1805  003D8E                     __end_of_colourclick_writetoaddr:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function _colourclickLEDs_init *****************
  1809 ;; Defined at:
  1810 ;;		line 32 in file "buttons_n_LEDs.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 8
  1831 ;; This function calls:
  1832 ;;		_colourclickLEDs_C
  1833 ;; This function is called by:
  1834 ;;		_colourclick_init
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text7
  1839  003E6A                     __ptext7:
  1840                           	callstack 0
  1841  003E6A                     _colourclickLEDs_init:
  1842                           	callstack 21
  1843  003E6A                     
  1844                           ;buttons_n_LEDs.c: 34:     TRISGbits.TRISG1 = 0;
  1845  003E6A  9287               	bcf	135,1,c	;volatile
  1846                           
  1847                           ;buttons_n_LEDs.c: 35:     TRISAbits.TRISA4 = 0;
  1848  003E6C  9881               	bcf	129,4,c	;volatile
  1849                           
  1850                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF7 = 0;
  1851  003E6E  9E86               	bcf	134,7,c	;volatile
  1852  003E70                     
  1853                           ;buttons_n_LEDs.c: 39:     colourclickLEDs_C(0);
  1854  003E70  0E00               	movlw	0
  1855  003E72  EC96  F01E         	call	_colourclickLEDs_C
  1856  003E76  0012               	return		;funcret
  1857  003E78                     __end_of_colourclickLEDs_init:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _I2C_2_Master_Init *****************
  1861 ;; Defined at:
  1862 ;;		line 8 in file "I2C.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 7
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_colourclick_init
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text8
  1891  003C44                     __ptext8:
  1892                           	callstack 0
  1893  003C44                     _I2C_2_Master_Init:
  1894                           	callstack 22
  1895  003C44                     
  1896                           ;I2C.c: 10:   SSP2CON1bits.SSPM= 0b1000;
  1897  003C44  010E               	movlb	14	; () banked
  1898  003C46  51D9               	movf	217,w,b	;volatile
  1899  003C48  0BF0               	andlw	-16
  1900  003C4A  0908               	iorlw	8
  1901  003C4C  6FD9               	movwf	217,b	;volatile
  1902  003C4E                     
  1903                           ; BSR set to: 14
  1904                           ;I2C.c: 11:   SSP2CON1bits.SSPEN = 1;
  1905  003C4E  8BD9               	bsf	217,5,b	;volatile
  1906                           
  1907                           ;I2C.c: 12:   SSP2ADD = (64000000/(4*100000))-1;
  1908  003C50  0E9F               	movlw	159
  1909  003C52  6FD6               	movwf	214,b	;volatile
  1910  003C54                     
  1911                           ; BSR set to: 14
  1912                           ;I2C.c: 15:   TRISDbits.TRISD5 = 1;
  1913  003C54  8A84               	bsf	132,5,c	;volatile
  1914  003C56                     
  1915                           ; BSR set to: 14
  1916                           ;I2C.c: 16:   TRISDbits.TRISD6 = 1;
  1917  003C56  8C84               	bsf	132,6,c	;volatile
  1918  003C58                     
  1919                           ; BSR set to: 14
  1920                           ;I2C.c: 17:   ANSELDbits.ANSELD5=0;
  1921  003C58  9BA7               	bcf	167,5,b	;volatile
  1922  003C5A                     
  1923                           ; BSR set to: 14
  1924                           ;I2C.c: 18:   ANSELDbits.ANSELD6=0;
  1925  003C5A  9DA7               	bcf	167,6,b	;volatile
  1926                           
  1927                           ;I2C.c: 19:   SSP2DATPPS=0x1D;
  1928  003C5C  0E1D               	movlw	29
  1929  003C5E  6F1D               	movwf	29,b	;volatile
  1930                           
  1931                           ;I2C.c: 20:   SSP2CLKPPS=0x1E;
  1932  003C60  0E1E               	movlw	30
  1933  003C62  6F1C               	movwf	28,b	;volatile
  1934                           
  1935                           ;I2C.c: 21:   RD5PPS=0x1C;
  1936  003C64  0E1C               	movlw	28
  1937  003C66  6F6F               	movwf	111,b	;volatile
  1938                           
  1939                           ;I2C.c: 22:   RD6PPS=0x1B;
  1940  003C68  0E1B               	movlw	27
  1941  003C6A  6F70               	movwf	112,b	;volatile
  1942  003C6C                     
  1943                           ; BSR set to: 14
  1944  003C6C  0012               	return		;funcret
  1945  003C6E                     __end_of_I2C_2_Master_Init:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _colourclick_calibration *****************
  1949 ;; Defined at:
  1950 ;;		line 159 in file "colour_click.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  initial         8   24[COMRAM] struct .
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1965 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1966 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1967 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;Total ram usage:       10 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 11
  1971 ;; This function calls:
  1972 ;;		_colourclickLEDs_C
  1973 ;;		_colourclick_readRGBC
  1974 ;; This function is called by:
  1975 ;;		_main
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text9
  1980  003786                     __ptext9:
  1981                           	callstack 0
  1982  003786                     _colourclick_calibration:
  1983                           	callstack 19
  1984  003786                     l334:
  1985  003786  B48E               	btfsc	142,2,c	;volatile
  1986  003788  EFC8  F01B         	goto	u4101
  1987  00378C  EFCA  F01B         	goto	u4100
  1988  003790                     u4101:
  1989  003790  EFC3  F01B         	goto	l334
  1990  003794                     u4100:
  1991  003794                     
  1992                           ;colour_click.c: 162:     LATDbits.LATD3 = 1;
  1993  003794  867C               	bsf	124,3,c	;volatile
  1994  003796                     
  1995                           ;colour_click.c: 163:     colourclickLEDs_C(1);
  1996  003796  0E01               	movlw	1
  1997  003798  EC96  F01E         	call	_colourclickLEDs_C
  1998  00379C                     
  1999                           ;colour_click.c: 164:     LATDbits.LATD7 = 1;
  2000  00379C  8E7C               	bsf	124,7,c	;volatile
  2001  00379E                     
  2002                           ;colour_click.c: 165:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2003  00379E  0E52               	movlw	82
  2004  0037A0  6E18               	movwf	(??_colourclick_calibration+1)^0,c
  2005  0037A2  0E2B               	movlw	43
  2006  0037A4  6E17               	movwf	??_colourclick_calibration^0,c
  2007  0037A6  0E00               	movlw	0
  2008  0037A8                     u5927:
  2009  0037A8  2EE8               	decfsz	wreg,f,c
  2010  0037AA  D7FE               	bra	u5927
  2011  0037AC  2E17               	decfsz	??_colourclick_calibration^0,f,c
  2012  0037AE  D7FC               	bra	u5927
  2013  0037B0  2E18               	decfsz	(??_colourclick_calibration+1)^0,f,c
  2014  0037B2  D7FA               	bra	u5927
  2015  0037B4  D000               	nop2	
  2016  0037B6                     
  2017                           ;colour_click.c: 166:     colourclick_readRGBC(&initial);
  2018  0037B6  0E19               	movlw	low colourclick_calibration@initial
  2019  0037B8  6E15               	movwf	colourclick_readRGBC@tmpval^0,c
  2020  0037BA  0E00               	movlw	high colourclick_calibration@initial
  2021  0037BC  6E16               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2022  0037BE  ECFF  F01B         	call	_colourclick_readRGBC	;wreg free
  2023  0037C2                     
  2024                           ;colour_click.c: 167:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2025  0037C2  0E52               	movlw	82
  2026  0037C4  6E18               	movwf	(??_colourclick_calibration+1)^0,c
  2027  0037C6  0E2B               	movlw	43
  2028  0037C8  6E17               	movwf	??_colourclick_calibration^0,c
  2029  0037CA  0E00               	movlw	0
  2030  0037CC                     u5937:
  2031  0037CC  2EE8               	decfsz	wreg,f,c
  2032  0037CE  D7FE               	bra	u5937
  2033  0037D0  2E17               	decfsz	??_colourclick_calibration^0,f,c
  2034  0037D2  D7FC               	bra	u5937
  2035  0037D4  2E18               	decfsz	(??_colourclick_calibration+1)^0,f,c
  2036  0037D6  D7FA               	bra	u5937
  2037  0037D8  D000               	nop2	
  2038  0037DA                     
  2039                           ;colour_click.c: 168:     LATDbits.LATD7 = 0;
  2040  0037DA  9E7C               	bcf	124,7,c	;volatile
  2041  0037DC                     
  2042                           ;colour_click.c: 170:     interrupts_lowerbound = initial.C - 150;
  2043  0037DC  0E6A               	movlw	106
  2044  0037DE  241F               	addwf	(colourclick_calibration@initial+6)^0,w,c
  2045  0037E0  6E54               	movwf	_interrupts_lowerbound^0,c	;volatile
  2046  0037E2  0EFF               	movlw	255
  2047  0037E4  2020               	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2048  0037E6  6E55               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  2049  0037E8                     
  2050                           ;colour_click.c: 171:     interrupts_upperbound = initial.C + 100;
  2051  0037E8  0E64               	movlw	100
  2052  0037EA  241F               	addwf	(colourclick_calibration@initial+6)^0,w,c
  2053  0037EC  6E52               	movwf	_interrupts_upperbound^0,c	;volatile
  2054  0037EE  0E00               	movlw	0
  2055  0037F0  2020               	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2056  0037F2  6E53               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  2057  0037F4                     
  2058                           ;colour_click.c: 173:     LATDbits.LATD3 = 0;
  2059  0037F4  967C               	bcf	124,3,c	;volatile
  2060  0037F6                     
  2061                           ;colour_click.c: 174:     colourclickLEDs_C(0);
  2062  0037F6  0E00               	movlw	0
  2063  0037F8  EC96  F01E         	call	_colourclickLEDs_C
  2064  0037FC  0012               	return		;funcret
  2065  0037FE                     __end_of_colourclick_calibration:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _colourcards_readRGBC *****************
  2069 ;; Defined at:
  2070 ;;		line 13 in file "colour_cards.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  abs             2   35[BANK0 ] PTR struct .
  2073 ;;		 -> main@current(8), 
  2074 ;;  mL              2   37[BANK0 ] PTR struct .
  2075 ;;		 -> main@motorL(9), 
  2076 ;;  mR              2   39[BANK0 ] PTR struct .
  2077 ;;		 -> main@motorR(9), 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  rel            12   43[BANK0 ] struct .
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2089 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2093 ;;Total ram usage:       20 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 12
  2096 ;; This function calls:
  2097 ;;		___flge
  2098 ;;		_clearance
  2099 ;;		_colourcards_normaliseRGBC
  2100 ;;		_colourclick_readRGBC
  2101 ;;		_colourclick_readRGBC2
  2102 ;;		_forward
  2103 ;;		_reverse
  2104 ;;		_stop
  2105 ;;		_turnleft
  2106 ;;		_turnright
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text10
  2113  000EA4                     __ptext10:
  2114                           	callstack 0
  2115  000EA4                     _colourcards_readRGBC:
  2116                           	callstack 18
  2117  000EA4                     
  2118                           ;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
  2119  000EA4  010E               	movlb	14	; () banked
  2120  000EA6  9329               	bcf	41,1,b	;volatile
  2121  000EA8                     
  2122                           ; BSR set to: 14
  2123                           ;colour_cards.c: 18:     RGB_rel rel;;colour_cards.c: 19:     colourclick_readRGBC(abs);
  2124  000EA8  C083  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  2125  000EAC  C084  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  2126  000EB0  ECFF  F01B         	call	_colourclick_readRGBC	;wreg free
  2127                           
  2128                           ;colour_cards.c: 20:     colourcards_normaliseRGBC(abs, &rel);
  2129  000EB4  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2130  000EB8  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2131  000EBC  0E8B               	movlw	low colourcards_readRGBC@rel
  2132  000EBE  0100               	movlb	0	; () banked
  2133  000EC0  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2134  000EC2  0E00               	movlw	high colourcards_readRGBC@rel
  2135  000EC4  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2136  000EC6  ECF1  F017         	call	_colourcards_normaliseRGBC	;wreg free
  2137  000ECA                     
  2138                           ;colour_cards.c: 24:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  2139  000ECA  0E71               	movlw	113
  2140  000ECC  6E18               	movwf	___flge@ff1^0,c
  2141  000ECE  0E3D               	movlw	61
  2142  000ED0  6E19               	movwf	(___flge@ff1+1)^0,c
  2143  000ED2  0E0A               	movlw	10
  2144  000ED4  6E1A               	movwf	(___flge@ff1+2)^0,c
  2145  000ED6  0E3F               	movlw	63
  2146  000ED8  6E1B               	movwf	(___flge@ff1+3)^0,c
  2147  000EDA  C08B  F01C         	movff	colourcards_readRGBC@rel,___flge@ff2
  2148  000EDE  C08C  F01D         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2149  000EE2  C08D  F01E         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2150  000EE6  C08E  F01F         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2151  000EEA  EC0C  F01A         	call	___flge	;wreg free
  2152  000EEE  B0D8               	btfsc	status,0,c
  2153  000EF0  EF7C  F007         	goto	u5131
  2154  000EF4  EF7E  F007         	goto	u5130
  2155  000EF8                     u5131:
  2156  000EF8  EF29  F008         	goto	l4817
  2157  000EFC                     u5130:
  2158  000EFC  C08F  F018         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2159  000F00  C090  F019         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2160  000F04  C091  F01A         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2161  000F08  C092  F01B         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2162  000F0C  0E48               	movlw	72
  2163  000F0E  6E1C               	movwf	___flge@ff2^0,c
  2164  000F10  0EE1               	movlw	225
  2165  000F12  6E1D               	movwf	(___flge@ff2+1)^0,c
  2166  000F14  0E7A               	movlw	122
  2167  000F16  6E1E               	movwf	(___flge@ff2+2)^0,c
  2168  000F18  0E3E               	movlw	62
  2169  000F1A  6E1F               	movwf	(___flge@ff2+3)^0,c
  2170  000F1C  EC0C  F01A         	call	___flge	;wreg free
  2171  000F20  B0D8               	btfsc	status,0,c
  2172  000F22  EF95  F007         	goto	u5141
  2173  000F26  EF97  F007         	goto	u5140
  2174  000F2A                     u5141:
  2175  000F2A  EF29  F008         	goto	l4817
  2176  000F2E                     u5140:
  2177  000F2E  C093  F018         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2178  000F32  C094  F019         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2179  000F36  C095  F01A         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2180  000F3A  C096  F01B         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2181  000F3E  0EEC               	movlw	236
  2182  000F40  6E1C               	movwf	___flge@ff2^0,c
  2183  000F42  0E51               	movlw	81
  2184  000F44  6E1D               	movwf	(___flge@ff2+1)^0,c
  2185  000F46  0E38               	movlw	56
  2186  000F48  6E1E               	movwf	(___flge@ff2+2)^0,c
  2187  000F4A  0E3E               	movlw	62
  2188  000F4C  6E1F               	movwf	(___flge@ff2+3)^0,c
  2189  000F4E  EC0C  F01A         	call	___flge	;wreg free
  2190  000F52  B0D8               	btfsc	status,0,c
  2191  000F54  EFAE  F007         	goto	u5151
  2192  000F58  EFB0  F007         	goto	u5150
  2193  000F5C                     u5151:
  2194  000F5C  EF29  F008         	goto	l4817
  2195  000F60                     u5150:
  2196  000F60                     
  2197                           ;colour_cards.c: 25:         colourclick_readRGBC2(abs, 3);
  2198  000F60  C083  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2199  000F64  C084  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2200  000F68  0E03               	movlw	3
  2201  000F6A  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  2202  000F6C  EC61  F019         	call	_colourclick_readRGBC2	;wreg free
  2203                           
  2204                           ;colour_cards.c: 26:         colourcards_normaliseRGBC(abs, &rel);
  2205  000F70  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2206  000F74  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2207  000F78  0E8B               	movlw	low colourcards_readRGBC@rel
  2208  000F7A  0100               	movlb	0	; () banked
  2209  000F7C  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2210  000F7E  0E00               	movlw	high colourcards_readRGBC@rel
  2211  000F80  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2212  000F82  ECF1  F017         	call	_colourcards_normaliseRGBC	;wreg free
  2213  000F86                     
  2214                           ;colour_cards.c: 27:         if (rel.G<0.185) {
  2215  000F86  C08F  F018         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2216  000F8A  C090  F019         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2217  000F8E  C091  F01A         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2218  000F92  C092  F01B         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2219  000F96  0EA4               	movlw	164
  2220  000F98  6E1C               	movwf	___flge@ff2^0,c
  2221  000F9A  0E70               	movlw	112
  2222  000F9C  6E1D               	movwf	(___flge@ff2+1)^0,c
  2223  000F9E  0E3D               	movlw	61
  2224  000FA0  6E1E               	movwf	(___flge@ff2+2)^0,c
  2225  000FA2  0E3E               	movlw	62
  2226  000FA4  6E1F               	movwf	(___flge@ff2+3)^0,c
  2227  000FA6  EC0C  F01A         	call	___flge	;wreg free
  2228  000FAA  B0D8               	btfsc	status,0,c
  2229  000FAC  EFDA  F007         	goto	u5161
  2230  000FB0  EFDC  F007         	goto	u5160
  2231  000FB4                     u5161:
  2232  000FB4  EF04  F008         	goto	l4813
  2233  000FB8                     u5160:
  2234  000FB8                     
  2235                           ;colour_cards.c: 29:             clearance(mL, mR);
  2236  000FB8  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2237  000FBC  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2238  000FC0  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2239  000FC4  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2240  000FC8  EC2E  F01C         	call	_clearance	;wreg free
  2241                           
  2242                           ;colour_cards.c: 30:             turnright(mL, mR, 90);
  2243  000FCC  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2244  000FD0  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2245  000FD4  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2246  000FD8  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2247  000FDC  0E00               	movlw	0
  2248  000FDE  0100               	movlb	0	; () banked
  2249  000FE0  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2250  000FE2  0E5A               	movlw	90
  2251  000FE4  6F81               	movwf	turnright@deg& (0+255),b
  2252  000FE6  EC25  F01D         	call	_turnright	;wreg free
  2253                           
  2254                           ;colour_cards.c: 31:             stop(mL, mR);
  2255  000FEA  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2256  000FEE  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2257  000FF2  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2258  000FF6  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2259  000FFA  EC7E  F01B         	call	_stop	;wreg free
  2260  000FFE                     l4811:
  2261                           
  2262                           ;colour_cards.c: 32:             unknowncard_flag = 0;
  2263  000FFE  0E00               	movlw	0
  2264  001000  0100               	movlb	0	; () banked
  2265  001002  6FB6               	movwf	_unknowncard_flag& (0+255),b	;volatile
  2266                           
  2267                           ;colour_cards.c: 33:         } else {
  2268  001004  EF54  F00B         	goto	l4917
  2269  001008                     l4813:
  2270                           
  2271                           ;colour_cards.c: 35:             clearance(mL, mR);
  2272  001008  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2273  00100C  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2274  001010  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2275  001014  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2276  001018  EC2E  F01C         	call	_clearance	;wreg free
  2277                           
  2278                           ;colour_cards.c: 36:             turnright(mL, mR, 135);
  2279  00101C  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2280  001020  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2281  001024  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2282  001028  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2283  00102C  0E00               	movlw	0
  2284  00102E  0100               	movlb	0	; () banked
  2285  001030  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2286  001032  0E87               	movlw	135
  2287  001034  6F81               	movwf	turnright@deg& (0+255),b
  2288  001036  EC25  F01D         	call	_turnright	;wreg free
  2289                           
  2290                           ;colour_cards.c: 37:             stop(mL, mR);
  2291  00103A  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2292  00103E  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2293  001042  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2294  001046  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2295  00104A  EC7E  F01B         	call	_stop	;wreg free
  2296  00104E  EFFF  F007         	goto	l4811
  2297  001052                     l4817:
  2298  001052  C08B  F018         	movff	colourcards_readRGBC@rel,___flge@ff1
  2299  001056  C08C  F019         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2300  00105A  C08D  F01A         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2301  00105E  C08E  F01B         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2302  001062  0EAE               	movlw	174
  2303  001064  6E1C               	movwf	___flge@ff2^0,c
  2304  001066  0E47               	movlw	71
  2305  001068  6E1D               	movwf	(___flge@ff2+1)^0,c
  2306  00106A  0EE1               	movlw	225
  2307  00106C  6E1E               	movwf	(___flge@ff2+2)^0,c
  2308  00106E  0E3E               	movlw	62
  2309  001070  6E1F               	movwf	(___flge@ff2+3)^0,c
  2310  001072  EC0C  F01A         	call	___flge	;wreg free
  2311  001076  B0D8               	btfsc	status,0,c
  2312  001078  EF40  F008         	goto	u5171
  2313  00107C  EF42  F008         	goto	u5170
  2314  001080                     u5171:
  2315  001080  EF3B  F009         	goto	l4843
  2316  001084                     u5170:
  2317  001084  0E9A               	movlw	154
  2318  001086  6E18               	movwf	___flge@ff1^0,c
  2319  001088  0E99               	movlw	153
  2320  00108A  6E19               	movwf	(___flge@ff1+1)^0,c
  2321  00108C  0E99               	movlw	153
  2322  00108E  6E1A               	movwf	(___flge@ff1+2)^0,c
  2323  001090  0E3E               	movlw	62
  2324  001092  6E1B               	movwf	(___flge@ff1+3)^0,c
  2325  001094  C08F  F01C         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2326  001098  C090  F01D         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2327  00109C  C091  F01E         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2328  0010A0  C092  F01F         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2329  0010A4  EC0C  F01A         	call	___flge	;wreg free
  2330  0010A8  B0D8               	btfsc	status,0,c
  2331  0010AA  EF59  F008         	goto	u5181
  2332  0010AE  EF5B  F008         	goto	u5180
  2333  0010B2                     u5181:
  2334  0010B2  EF3B  F009         	goto	l4843
  2335  0010B6                     u5180:
  2336  0010B6  0E14               	movlw	20
  2337  0010B8  6E18               	movwf	___flge@ff1^0,c
  2338  0010BA  0EAE               	movlw	174
  2339  0010BC  6E19               	movwf	(___flge@ff1+1)^0,c
  2340  0010BE  0E47               	movlw	71
  2341  0010C0  6E1A               	movwf	(___flge@ff1+2)^0,c
  2342  0010C2  0E3E               	movlw	62
  2343  0010C4  6E1B               	movwf	(___flge@ff1+3)^0,c
  2344  0010C6  C093  F01C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2345  0010CA  C094  F01D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2346  0010CE  C095  F01E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2347  0010D2  C096  F01F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2348  0010D6  EC0C  F01A         	call	___flge	;wreg free
  2349  0010DA  B0D8               	btfsc	status,0,c
  2350  0010DC  EF72  F008         	goto	u5191
  2351  0010E0  EF74  F008         	goto	u5190
  2352  0010E4                     u5191:
  2353  0010E4  EF3B  F009         	goto	l4843
  2354  0010E8                     u5190:
  2355  0010E8                     
  2356                           ;colour_cards.c: 43:         colourclick_readRGBC2(abs, 1);
  2357  0010E8  C083  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2358  0010EC  C084  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2359  0010F0  0E01               	movlw	1
  2360  0010F2  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  2361  0010F4  EC61  F019         	call	_colourclick_readRGBC2	;wreg free
  2362                           
  2363                           ;colour_cards.c: 44:         colourcards_normaliseRGBC(abs, &rel);
  2364  0010F8  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2365  0010FC  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2366  001100  0E8B               	movlw	low colourcards_readRGBC@rel
  2367  001102  0100               	movlb	0	; () banked
  2368  001104  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2369  001106  0E00               	movlw	high colourcards_readRGBC@rel
  2370  001108  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2371  00110A  ECF1  F017         	call	_colourcards_normaliseRGBC	;wreg free
  2372  00110E                     
  2373                           ;colour_cards.c: 45:         if (rel.B<0.125) {
  2374  00110E  C093  F018         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2375  001112  C094  F019         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2376  001116  C095  F01A         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2377  00111A  C096  F01B         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2378  00111E  0E00               	movlw	0
  2379  001120  6E1C               	movwf	___flge@ff2^0,c
  2380  001122  0E00               	movlw	0
  2381  001124  6E1D               	movwf	(___flge@ff2+1)^0,c
  2382  001126  0E00               	movlw	0
  2383  001128  6E1E               	movwf	(___flge@ff2+2)^0,c
  2384  00112A  0E3E               	movlw	62
  2385  00112C  6E1F               	movwf	(___flge@ff2+3)^0,c
  2386  00112E  EC0C  F01A         	call	___flge	;wreg free
  2387  001132  B0D8               	btfsc	status,0,c
  2388  001134  EF9E  F008         	goto	u5201
  2389  001138  EFA0  F008         	goto	u5200
  2390  00113C                     u5201:
  2391  00113C  EFC5  F008         	goto	l4831
  2392  001140                     u5200:
  2393  001140                     
  2394                           ;colour_cards.c: 47:             clearance(mL, mR);
  2395  001140  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2396  001144  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2397  001148  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2398  00114C  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2399  001150  EC2E  F01C         	call	_clearance	;wreg free
  2400                           
  2401                           ;colour_cards.c: 48:             turnleft(mL, mR, 90);
  2402  001154  C085  F07D         	movff	colourcards_readRGBC@mL,turnleft@mL
  2403  001158  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2404  00115C  C087  F07F         	movff	colourcards_readRGBC@mR,turnleft@mR
  2405  001160  C088  F080         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2406  001164  0E00               	movlw	0
  2407  001166  0100               	movlb	0	; () banked
  2408  001168  6F82               	movwf	(turnleft@deg+1)& (0+255),b
  2409  00116A  0E5A               	movlw	90
  2410  00116C  6F81               	movwf	turnleft@deg& (0+255),b
  2411  00116E  EC4D  F01D         	call	_turnleft	;wreg free
  2412                           
  2413                           ;colour_cards.c: 49:             stop(mL, mR);
  2414  001172  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2415  001176  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2416  00117A  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2417  00117E  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2418  001182  EC7E  F01B         	call	_stop	;wreg free
  2419  001186  EFFF  F007         	goto	l4811
  2420  00118A                     l4831:
  2421                           
  2422                           ;colour_cards.c: 52:             colourclick_readRGBC2(abs, 2);
  2423  00118A  C083  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2424  00118E  C084  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2425  001192  0E02               	movlw	2
  2426  001194  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  2427  001196  EC61  F019         	call	_colourclick_readRGBC2	;wreg free
  2428                           
  2429                           ;colour_cards.c: 53:             colourcards_normaliseRGBC(abs, &rel);
  2430  00119A  C083  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2431  00119E  C084  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2432  0011A2  0E8B               	movlw	low colourcards_readRGBC@rel
  2433  0011A4  0100               	movlb	0	; () banked
  2434  0011A6  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2435  0011A8  0E00               	movlw	high colourcards_readRGBC@rel
  2436  0011AA  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2437  0011AC  ECF1  F017         	call	_colourcards_normaliseRGBC	;wreg free
  2438  0011B0                     
  2439                           ;colour_cards.c: 54:             if (rel.R<0.115) {
  2440  0011B0  C08B  F018         	movff	colourcards_readRGBC@rel,___flge@ff1
  2441  0011B4  C08C  F019         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2442  0011B8  C08D  F01A         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2443  0011BC  C08E  F01B         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2444  0011C0  0E1F               	movlw	31
  2445  0011C2  6E1C               	movwf	___flge@ff2^0,c
  2446  0011C4  0E85               	movlw	133
  2447  0011C6  6E1D               	movwf	(___flge@ff2+1)^0,c
  2448  0011C8  0EEB               	movlw	235
  2449  0011CA  6E1E               	movwf	(___flge@ff2+2)^0,c
  2450  0011CC  0E3D               	movlw	61
  2451  0011CE  6E1F               	movwf	(___flge@ff2+3)^0,c
  2452  0011D0  EC0C  F01A         	call	___flge	;wreg free
  2453  0011D4  B0D8               	btfsc	status,0,c
  2454  0011D6  EFEF  F008         	goto	u5211
  2455  0011DA  EFF1  F008         	goto	u5210
  2456  0011DE                     u5211:
  2457  0011DE  EF16  F009         	goto	l4839
  2458  0011E2                     u5210:
  2459  0011E2                     
  2460                           ;colour_cards.c: 56:                 clearance(mL, mR);
  2461  0011E2  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2462  0011E6  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2463  0011EA  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2464  0011EE  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2465  0011F2  EC2E  F01C         	call	_clearance	;wreg free
  2466                           
  2467                           ;colour_cards.c: 57:                 turnright(mL, mR, 180);
  2468  0011F6  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2469  0011FA  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2470  0011FE  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2471  001202  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2472  001206  0E00               	movlw	0
  2473  001208  0100               	movlb	0	; () banked
  2474  00120A  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2475  00120C  0EB4               	movlw	180
  2476  00120E  6F81               	movwf	turnright@deg& (0+255),b
  2477  001210  EC25  F01D         	call	_turnright	;wreg free
  2478                           
  2479                           ;colour_cards.c: 58:                 stop(mL, mR);
  2480  001214  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2481  001218  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2482  00121C  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2483  001220  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2484  001224  EC7E  F01B         	call	_stop	;wreg free
  2485  001228  EFFF  F007         	goto	l4811
  2486  00122C                     l4839:
  2487                           
  2488                           ;colour_cards.c: 62:                 clearance(mL, mR);
  2489  00122C  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2490  001230  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2491  001234  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2492  001238  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2493  00123C  EC2E  F01C         	call	_clearance	;wreg free
  2494                           
  2495                           ;colour_cards.c: 63:                 turnleft(mL, mR, 135);
  2496  001240  C085  F07D         	movff	colourcards_readRGBC@mL,turnleft@mL
  2497  001244  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2498  001248  C087  F07F         	movff	colourcards_readRGBC@mR,turnleft@mR
  2499  00124C  C088  F080         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2500  001250  0E00               	movlw	0
  2501  001252  0100               	movlb	0	; () banked
  2502  001254  6F82               	movwf	(turnleft@deg+1)& (0+255),b
  2503  001256  0E87               	movlw	135
  2504  001258  6F81               	movwf	turnleft@deg& (0+255),b
  2505  00125A  EC4D  F01D         	call	_turnleft	;wreg free
  2506                           
  2507                           ;colour_cards.c: 64:                 stop(mL, mR);
  2508  00125E  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2509  001262  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2510  001266  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2511  00126A  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2512  00126E  EC7E  F01B         	call	_stop	;wreg free
  2513  001272  EFFF  F007         	goto	l4811
  2514  001276                     l4843:
  2515  001276  0E48               	movlw	72
  2516  001278  6E18               	movwf	___flge@ff1^0,c
  2517  00127A  0EE1               	movlw	225
  2518  00127C  6E19               	movwf	(___flge@ff1+1)^0,c
  2519  00127E  0EFA               	movlw	250
  2520  001280  6E1A               	movwf	(___flge@ff1+2)^0,c
  2521  001282  0E3E               	movlw	62
  2522  001284  6E1B               	movwf	(___flge@ff1+3)^0,c
  2523  001286  C08B  F01C         	movff	colourcards_readRGBC@rel,___flge@ff2
  2524  00128A  C08C  F01D         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2525  00128E  C08D  F01E         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2526  001292  C08E  F01F         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2527  001296  EC0C  F01A         	call	___flge	;wreg free
  2528  00129A  B0D8               	btfsc	status,0,c
  2529  00129C  EF52  F009         	goto	u5221
  2530  0012A0  EF54  F009         	goto	u5220
  2531  0012A4                     u5221:
  2532  0012A4  EFCE  F009         	goto	l4861
  2533  0012A8                     u5220:
  2534  0012A8  0E85               	movlw	133
  2535  0012AA  6E18               	movwf	___flge@ff1^0,c
  2536  0012AC  0EEB               	movlw	235
  2537  0012AE  6E19               	movwf	(___flge@ff1+1)^0,c
  2538  0012B0  0E91               	movlw	145
  2539  0012B2  6E1A               	movwf	(___flge@ff1+2)^0,c
  2540  0012B4  0E3E               	movlw	62
  2541  0012B6  6E1B               	movwf	(___flge@ff1+3)^0,c
  2542  0012B8  C08F  F01C         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2543  0012BC  C090  F01D         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2544  0012C0  C091  F01E         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2545  0012C4  C092  F01F         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2546  0012C8  EC0C  F01A         	call	___flge	;wreg free
  2547  0012CC  B0D8               	btfsc	status,0,c
  2548  0012CE  EF6B  F009         	goto	u5231
  2549  0012D2  EF6D  F009         	goto	u5230
  2550  0012D6                     u5231:
  2551  0012D6  EFCE  F009         	goto	l4861
  2552  0012DA                     u5230:
  2553  0012DA  0EEC               	movlw	236
  2554  0012DC  6E18               	movwf	___flge@ff1^0,c
  2555  0012DE  0E51               	movlw	81
  2556  0012E0  6E19               	movwf	(___flge@ff1+1)^0,c
  2557  0012E2  0E38               	movlw	56
  2558  0012E4  6E1A               	movwf	(___flge@ff1+2)^0,c
  2559  0012E6  0E3E               	movlw	62
  2560  0012E8  6E1B               	movwf	(___flge@ff1+3)^0,c
  2561  0012EA  C093  F01C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2562  0012EE  C094  F01D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2563  0012F2  C095  F01E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2564  0012F6  C096  F01F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2565  0012FA  EC0C  F01A         	call	___flge	;wreg free
  2566  0012FE  B0D8               	btfsc	status,0,c
  2567  001300  EF84  F009         	goto	u5241
  2568  001304  EF86  F009         	goto	u5240
  2569  001308                     u5241:
  2570  001308  EFCE  F009         	goto	l4861
  2571  00130C                     u5240:
  2572  00130C                     
  2573                           ;colour_cards.c: 71:         reverse(mL, mR);
  2574  00130C  C085  F023         	movff	colourcards_readRGBC@mL,reverse@mL
  2575  001310  C086  F024         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  2576  001314  C087  F025         	movff	colourcards_readRGBC@mR,reverse@mR
  2577  001318  C088  F026         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  2578  00131C  EC37  F01B         	call	_reverse	;wreg free
  2579  001320                     
  2580                           ;colour_cards.c: 72:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  2581  001320  0E72               	movlw	114
  2582  001322  0100               	movlb	0	; () banked
  2583  001324  6F8A               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2584  001326  0EA3               	movlw	163
  2585  001328  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2586  00132A  0E9B               	movlw	155
  2587  00132C                     u5947:
  2588  00132C  2EE8               	decfsz	wreg,f,c
  2589  00132E  D7FE               	bra	u5947
  2590  001330  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2591  001332  D7FC               	bra	u5947
  2592  001334  2F8A               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2593  001336  D7FA               	bra	u5947
  2594  001338                     
  2595                           ;colour_cards.c: 73:         stop(mL, mR);
  2596  001338  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2597  00133C  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2598  001340  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2599  001344  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2600  001348  EC7E  F01B         	call	_stop	;wreg free
  2601                           
  2602                           ;colour_cards.c: 74:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2603  00134C  0E09               	movlw	9
  2604  00134E  0100               	movlb	0	; () banked
  2605  001350  6F8A               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2606  001352  0E1E               	movlw	30
  2607  001354  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2608  001356  0EE4               	movlw	228
  2609  001358                     u5957:
  2610  001358  2EE8               	decfsz	wreg,f,c
  2611  00135A  D7FE               	bra	u5957
  2612  00135C  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2613  00135E  D7FC               	bra	u5957
  2614  001360  2F8A               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2615  001362  D7FA               	bra	u5957
  2616  001364  F000               	nop	
  2617  001366                     
  2618                           ;colour_cards.c: 75:         turnright(mL, mR, 90);
  2619  001366  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2620  00136A  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2621  00136E  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2622  001372  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2623  001376  0E00               	movlw	0
  2624  001378  0100               	movlb	0	; () banked
  2625  00137A  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2626  00137C  0E5A               	movlw	90
  2627  00137E  6F81               	movwf	turnright@deg& (0+255),b
  2628  001380  EC25  F01D         	call	_turnright	;wreg free
  2629  001384                     l4857:
  2630                           
  2631                           ;colour_cards.c: 76:         stop(mL, mR);
  2632  001384  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2633  001388  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2634  00138C  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2635  001390  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2636  001394  EC7E  F01B         	call	_stop	;wreg free
  2637  001398  EFFF  F007         	goto	l4811
  2638  00139C                     l4861:
  2639  00139C  0E48               	movlw	72
  2640  00139E  6E18               	movwf	___flge@ff1^0,c
  2641  0013A0  0EE1               	movlw	225
  2642  0013A2  6E19               	movwf	(___flge@ff1+1)^0,c
  2643  0013A4  0EFA               	movlw	250
  2644  0013A6  6E1A               	movwf	(___flge@ff1+2)^0,c
  2645  0013A8  0E3E               	movlw	62
  2646  0013AA  6E1B               	movwf	(___flge@ff1+3)^0,c
  2647  0013AC  C08B  F01C         	movff	colourcards_readRGBC@rel,___flge@ff2
  2648  0013B0  C08C  F01D         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2649  0013B4  C08D  F01E         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2650  0013B8  C08E  F01F         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2651  0013BC  EC0C  F01A         	call	___flge	;wreg free
  2652  0013C0  B0D8               	btfsc	status,0,c
  2653  0013C2  EFE5  F009         	goto	u5251
  2654  0013C6  EFE7  F009         	goto	u5250
  2655  0013CA                     u5251:
  2656  0013CA  EF57  F00A         	goto	l4879
  2657  0013CE                     u5250:
  2658  0013CE  C08F  F018         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2659  0013D2  C090  F019         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2660  0013D6  C091  F01A         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2661  0013DA  C092  F01B         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2662  0013DE  0ECD               	movlw	205
  2663  0013E0  6E1C               	movwf	___flge@ff2^0,c
  2664  0013E2  0ECC               	movlw	204
  2665  0013E4  6E1D               	movwf	(___flge@ff2+1)^0,c
  2666  0013E6  0E8C               	movlw	140
  2667  0013E8  6E1E               	movwf	(___flge@ff2+2)^0,c
  2668  0013EA  0E3E               	movlw	62
  2669  0013EC  6E1F               	movwf	(___flge@ff2+3)^0,c
  2670  0013EE  EC0C  F01A         	call	___flge	;wreg free
  2671  0013F2  B0D8               	btfsc	status,0,c
  2672  0013F4  EFFE  F009         	goto	u5261
  2673  0013F8  EF00  F00A         	goto	u5260
  2674  0013FC                     u5261:
  2675  0013FC  EF57  F00A         	goto	l4879
  2676  001400                     u5260:
  2677  001400  0E14               	movlw	20
  2678  001402  6E18               	movwf	___flge@ff1^0,c
  2679  001404  0EAE               	movlw	174
  2680  001406  6E19               	movwf	(___flge@ff1+1)^0,c
  2681  001408  0E47               	movlw	71
  2682  00140A  6E1A               	movwf	(___flge@ff1+2)^0,c
  2683  00140C  0E3E               	movlw	62
  2684  00140E  6E1B               	movwf	(___flge@ff1+3)^0,c
  2685  001410  C093  F01C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2686  001414  C094  F01D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2687  001418  C095  F01E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2688  00141C  C096  F01F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2689  001420  EC0C  F01A         	call	___flge	;wreg free
  2690  001424  B0D8               	btfsc	status,0,c
  2691  001426  EF17  F00A         	goto	u5271
  2692  00142A  EF19  F00A         	goto	u5270
  2693  00142E                     u5271:
  2694  00142E  EF57  F00A         	goto	l4879
  2695  001432                     u5270:
  2696  001432                     
  2697                           ;colour_cards.c: 81:         reverse(mL, mR);
  2698  001432  C085  F023         	movff	colourcards_readRGBC@mL,reverse@mL
  2699  001436  C086  F024         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  2700  00143A  C087  F025         	movff	colourcards_readRGBC@mR,reverse@mR
  2701  00143E  C088  F026         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  2702  001442  EC37  F01B         	call	_reverse	;wreg free
  2703  001446                     
  2704                           ;colour_cards.c: 82:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  2705  001446  0E72               	movlw	114
  2706  001448  0100               	movlb	0	; () banked
  2707  00144A  6F8A               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2708  00144C  0EA3               	movlw	163
  2709  00144E  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2710  001450  0E9B               	movlw	155
  2711  001452                     u5967:
  2712  001452  2EE8               	decfsz	wreg,f,c
  2713  001454  D7FE               	bra	u5967
  2714  001456  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2715  001458  D7FC               	bra	u5967
  2716  00145A  2F8A               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2717  00145C  D7FA               	bra	u5967
  2718  00145E                     
  2719                           ;colour_cards.c: 83:         stop(mL, mR);
  2720  00145E  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2721  001462  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2722  001466  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2723  00146A  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2724  00146E  EC7E  F01B         	call	_stop	;wreg free
  2725                           
  2726                           ;colour_cards.c: 84:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2727  001472  0E09               	movlw	9
  2728  001474  0100               	movlb	0	; () banked
  2729  001476  6F8A               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2730  001478  0E1E               	movlw	30
  2731  00147A  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2732  00147C  0EE4               	movlw	228
  2733  00147E                     u5977:
  2734  00147E  2EE8               	decfsz	wreg,f,c
  2735  001480  D7FE               	bra	u5977
  2736  001482  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2737  001484  D7FC               	bra	u5977
  2738  001486  2F8A               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2739  001488  D7FA               	bra	u5977
  2740  00148A  F000               	nop	
  2741  00148C                     
  2742                           ;colour_cards.c: 85:         turnleft(mL, mR, 90);
  2743  00148C  C085  F07D         	movff	colourcards_readRGBC@mL,turnleft@mL
  2744  001490  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  2745  001494  C087  F07F         	movff	colourcards_readRGBC@mR,turnleft@mR
  2746  001498  C088  F080         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  2747  00149C  0E00               	movlw	0
  2748  00149E  0100               	movlb	0	; () banked
  2749  0014A0  6F82               	movwf	(turnleft@deg+1)& (0+255),b
  2750  0014A2  0E5A               	movlw	90
  2751  0014A4  6F81               	movwf	turnleft@deg& (0+255),b
  2752  0014A6  EC4D  F01D         	call	_turnleft	;wreg free
  2753  0014AA  EFC2  F009         	goto	l4857
  2754  0014AE                     l4879:
  2755  0014AE  C08B  F018         	movff	colourcards_readRGBC@rel,___flge@ff1
  2756  0014B2  C08C  F019         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2757  0014B6  C08D  F01A         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2758  0014BA  C08E  F01B         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2759  0014BE  0ED7               	movlw	215
  2760  0014C0  6E1C               	movwf	___flge@ff2^0,c
  2761  0014C2  0EA3               	movlw	163
  2762  0014C4  6E1D               	movwf	(___flge@ff2+1)^0,c
  2763  0014C6  0EF0               	movlw	240
  2764  0014C8  6E1E               	movwf	(___flge@ff2+2)^0,c
  2765  0014CA  0E3E               	movlw	62
  2766  0014CC  6E1F               	movwf	(___flge@ff2+3)^0,c
  2767  0014CE  EC0C  F01A         	call	___flge	;wreg free
  2768  0014D2  B0D8               	btfsc	status,0,c
  2769  0014D4  EF6E  F00A         	goto	u5281
  2770  0014D8  EF70  F00A         	goto	u5280
  2771  0014DC                     u5281:
  2772  0014DC  EFCC  F00A         	goto	l4891
  2773  0014E0                     u5280:
  2774  0014E0  0E3D               	movlw	61
  2775  0014E2  6E18               	movwf	___flge@ff1^0,c
  2776  0014E4  0E0A               	movlw	10
  2777  0014E6  6E19               	movwf	(___flge@ff1+1)^0,c
  2778  0014E8  0E97               	movlw	151
  2779  0014EA  6E1A               	movwf	(___flge@ff1+2)^0,c
  2780  0014EC  0E3E               	movlw	62
  2781  0014EE  6E1B               	movwf	(___flge@ff1+3)^0,c
  2782  0014F0  C08F  F01C         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2783  0014F4  C090  F01D         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2784  0014F8  C091  F01E         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2785  0014FC  C092  F01F         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2786  001500  EC0C  F01A         	call	___flge	;wreg free
  2787  001504  B0D8               	btfsc	status,0,c
  2788  001506  EF87  F00A         	goto	u5291
  2789  00150A  EF89  F00A         	goto	u5290
  2790  00150E                     u5291:
  2791  00150E  EFCC  F00A         	goto	l4891
  2792  001512                     u5290:
  2793  001512  0E3D               	movlw	61
  2794  001514  6E18               	movwf	___flge@ff1^0,c
  2795  001516  0E0A               	movlw	10
  2796  001518  6E19               	movwf	(___flge@ff1+1)^0,c
  2797  00151A  0E57               	movlw	87
  2798  00151C  6E1A               	movwf	(___flge@ff1+2)^0,c
  2799  00151E  0E3E               	movlw	62
  2800  001520  6E1B               	movwf	(___flge@ff1+3)^0,c
  2801  001522  C093  F01C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2802  001526  C094  F01D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2803  00152A  C095  F01E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2804  00152E  C096  F01F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2805  001532  EC0C  F01A         	call	___flge	;wreg free
  2806  001536  B0D8               	btfsc	status,0,c
  2807  001538  EFA0  F00A         	goto	u5301
  2808  00153C  EFA2  F00A         	goto	u5300
  2809  001540                     u5301:
  2810  001540  EFCC  F00A         	goto	l4891
  2811  001544                     u5300:
  2812  001544                     
  2813                           ;colour_cards.c: 91:         clearance(mL, mR);
  2814  001544  C085  F029         	movff	colourcards_readRGBC@mL,clearance@mL
  2815  001548  C086  F02A         	movff	colourcards_readRGBC@mL+1,clearance@mL+1
  2816  00154C  C087  F02B         	movff	colourcards_readRGBC@mR,clearance@mR
  2817  001550  C088  F02C         	movff	colourcards_readRGBC@mR+1,clearance@mR+1
  2818  001554  EC2E  F01C         	call	_clearance	;wreg free
  2819                           
  2820                           ;colour_cards.c: 92:         turnright(mL, mR, 180);
  2821  001558  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2822  00155C  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2823  001560  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2824  001564  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2825  001568  0E00               	movlw	0
  2826  00156A  0100               	movlb	0	; () banked
  2827  00156C  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2828  00156E  0EB4               	movlw	180
  2829  001570  6F81               	movwf	turnright@deg& (0+255),b
  2830  001572  EC25  F01D         	call	_turnright	;wreg free
  2831                           
  2832                           ;colour_cards.c: 93:         stop(mL, mR);
  2833  001576  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2834  00157A  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2835  00157E  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2836  001582  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2837  001586  EC7E  F01B         	call	_stop	;wreg free
  2838  00158A                     
  2839                           ;colour_cards.c: 94:         unknowncard_flag = 0;
  2840  00158A  0E00               	movlw	0
  2841  00158C  0100               	movlb	0	; () banked
  2842  00158E  6FB6               	movwf	_unknowncard_flag& (0+255),b	;volatile
  2843  001590                     
  2844                           ; BSR set to: 0
  2845                           ;colour_cards.c: 95:         returnhome_flag = 1;
  2846  001590  0E01               	movlw	1
  2847  001592  6FB5               	movwf	_returnhome_flag& (0+255),b	;volatile
  2848                           
  2849                           ;colour_cards.c: 97:     } else {
  2850  001594  EF54  F00B         	goto	l4917
  2851  001598                     l4891:
  2852                           
  2853                           ;colour_cards.c: 99:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  2854  001598  0E52               	movlw	82
  2855  00159A  0100               	movlb	0	; () banked
  2856  00159C  6F8A               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  2857  00159E  0E2B               	movlw	43
  2858  0015A0  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2859  0015A2  0E00               	movlw	0
  2860  0015A4                     u5987:
  2861  0015A4  2EE8               	decfsz	wreg,f,c
  2862  0015A6  D7FE               	bra	u5987
  2863  0015A8  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2864  0015AA  D7FC               	bra	u5987
  2865  0015AC  2F8A               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  2866  0015AE  D7FA               	bra	u5987
  2867  0015B0  F000               	nop	
  2868  0015B2                     
  2869                           ;colour_cards.c: 100:         forward(mL, mR);
  2870  0015B2  C085  F023         	movff	colourcards_readRGBC@mL,forward@mL
  2871  0015B6  C086  F024         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  2872  0015BA  C087  F025         	movff	colourcards_readRGBC@mR,forward@mR
  2873  0015BE  C088  F026         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  2874  0015C2  ECF0  F01A         	call	_forward	;wreg free
  2875  0015C6                     
  2876                           ;colour_cards.c: 101:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2877  0015C6  0ED0               	movlw	208
  2878  0015C8  0100               	movlb	0	; () banked
  2879  0015CA  6F89               	movwf	??_colourcards_readRGBC& (0+255),b
  2880  0015CC  0EC9               	movlw	201
  2881  0015CE                     u5997:
  2882  0015CE  2EE8               	decfsz	wreg,f,c
  2883  0015D0  D7FE               	bra	u5997
  2884  0015D2  2F89               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  2885  0015D4  D7FC               	bra	u5997
  2886  0015D6  D000               	nop2	
  2887                           
  2888                           ;colour_cards.c: 102:         stop(mL, mR);
  2889  0015D8  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2890  0015DC  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2891  0015E0  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2892  0015E4  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2893  0015E8  EC7E  F01B         	call	_stop	;wreg free
  2894  0015EC                     
  2895                           ;colour_cards.c: 103:         colourclick_readRGBC(abs);
  2896  0015EC  C083  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  2897  0015F0  C084  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  2898  0015F4  ECFF  F01B         	call	_colourclick_readRGBC	;wreg free
  2899  0015F8                     
  2900                           ;colour_cards.c: 104:         if ((abs->C < interrupts_lowerbound) || (abs->C > interrup
      +                          ts_upperbound)) {
  2901  0015F8  0100               	movlb	0	; () banked
  2902  0015FA  EE20 F006          	lfsr	2,6
  2903  0015FE  5183               	movf	colourcards_readRGBC@abs& (0+255),w,b
  2904  001600  26D9               	addwf	fsr2l,f,c
  2905  001602  5184               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  2906  001604  22DA               	addwfc	fsr2h,f,c
  2907  001606  5054               	movf	_interrupts_lowerbound^0,w,c	;volatile
  2908  001608  5CDE               	subwf	postinc2,w,c
  2909  00160A  5055               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2910  00160C  58DE               	subwfb	postinc2,w,c
  2911  00160E  A0D8               	btfss	status,0,c
  2912  001610  EF0C  F00B         	goto	u5311
  2913  001614  EF0E  F00B         	goto	u5310
  2914  001618                     u5311:
  2915  001618  EF1F  F00B         	goto	l4903
  2916  00161C                     u5310:
  2917  00161C                     
  2918                           ; BSR set to: 0
  2919  00161C  EE20 F006          	lfsr	2,6
  2920  001620  5183               	movf	colourcards_readRGBC@abs& (0+255),w,b
  2921  001622  26D9               	addwf	fsr2l,f,c
  2922  001624  5184               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  2923  001626  22DA               	addwfc	fsr2h,f,c
  2924  001628  50DE               	movf	postinc2,w,c
  2925  00162A  5C52               	subwf	_interrupts_upperbound^0,w,c	;volatile
  2926  00162C  50DE               	movf	postinc2,w,c
  2927  00162E  5853               	subwfb	(_interrupts_upperbound+1)^0,w,c	;volatile
  2928  001630  B0D8               	btfsc	status,0,c
  2929  001632  EF1D  F00B         	goto	u5321
  2930  001636  EF1F  F00B         	goto	u5320
  2931  00163A                     u5321:
  2932  00163A  EFFF  F007         	goto	l4811
  2933  00163E                     u5320:
  2934  00163E                     l4903:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;colour_cards.c: 105:             if (unknowncard_flag<3) {
  2938  00163E  0E03               	movlw	3
  2939  001640  61B6               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
  2940  001642  EF25  F00B         	goto	u5331
  2941  001646  EF27  F00B         	goto	u5330
  2942  00164A                     u5331:
  2943  00164A  EF2D  F00B         	goto	l226
  2944  00164E                     u5330:
  2945  00164E                     
  2946                           ; BSR set to: 0
  2947                           ;colour_cards.c: 106:                 PIR0bits.INT1IF = 1;
  2948  00164E  010E               	movlb	14	; () banked
  2949  001650  8333               	bsf	51,1,b	;volatile
  2950  001652                     
  2951                           ; BSR set to: 14
  2952                           ;colour_cards.c: 107:                 unknowncard_flag++;
  2953  001652  0100               	movlb	0	; () banked
  2954  001654  2BB6               	incf	_unknowncard_flag& (0+255),f,b	;volatile
  2955                           
  2956                           ;colour_cards.c: 108:             } else {
  2957  001656  EF54  F00B         	goto	l4917
  2958  00165A                     l226:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;colour_cards.c: 109:                 LATHbits.LATH3 = 1;
  2962  00165A  8680               	bsf	128,3,c	;volatile
  2963  00165C                     
  2964                           ; BSR set to: 0
  2965                           ;colour_cards.c: 110:                 turnright(mL, mR, 180);
  2966  00165C  C085  F07D         	movff	colourcards_readRGBC@mL,turnright@mL
  2967  001660  C086  F07E         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2968  001664  C087  F07F         	movff	colourcards_readRGBC@mR,turnright@mR
  2969  001668  C088  F080         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2970  00166C  0E00               	movlw	0
  2971  00166E  6F82               	movwf	(turnright@deg+1)& (0+255),b
  2972  001670  0EB4               	movlw	180
  2973  001672  6F81               	movwf	turnright@deg& (0+255),b
  2974  001674  EC25  F01D         	call	_turnright	;wreg free
  2975                           
  2976                           ;colour_cards.c: 111:                 stop(mL, mR);
  2977  001678  C085  F023         	movff	colourcards_readRGBC@mL,stop@mL
  2978  00167C  C086  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2979  001680  C087  F025         	movff	colourcards_readRGBC@mR,stop@mR
  2980  001684  C088  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2981  001688  EC7E  F01B         	call	_stop	;wreg free
  2982  00168C                     
  2983                           ;colour_cards.c: 112:                 returnhome_flag = !returnhome_flag;
  2984  00168C  0100               	movlb	0	; () banked
  2985  00168E  51B5               	movf	_returnhome_flag& (0+255),w,b	;volatile
  2986  001690  B4D8               	btfsc	status,2,c
  2987  001692  EF4D  F00B         	goto	u5341
  2988  001696  EF50  F00B         	goto	u5340
  2989  00169A                     u5341:
  2990  00169A  0E01               	movlw	1
  2991  00169C  EF51  F00B         	goto	u5350
  2992  0016A0                     u5340:
  2993  0016A0  0E00               	movlw	0
  2994  0016A2                     u5350:
  2995  0016A2  6FB5               	movwf	_returnhome_flag& (0+255),b	;volatile
  2996  0016A4  EFFF  F007         	goto	l4811
  2997  0016A8                     l4917:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;colour_cards.c: 120:     PIE0bits.INT1IE = 1;
  3001  0016A8  010E               	movlb	14	; () banked
  3002  0016AA  8329               	bsf	41,1,b	;volatile
  3003  0016AC                     
  3004                           ; BSR set to: 14
  3005  0016AC  0012               	return		;funcret
  3006  0016AE                     __end_of_colourcards_readRGBC:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _forward *****************
  3010 ;; Defined at:
  3011 ;;		line 83 in file "DC_motors.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  mL              2   34[COMRAM] PTR struct .
  3014 ;;		 -> main@motorL(9), 
  3015 ;;  mR              2   36[COMRAM] PTR struct .
  3016 ;;		 -> main@motorR(9), 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;Total ram usage:        5 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 9
  3035 ;; This function calls:
  3036 ;;		_DCmotors_setPWM
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;;		_colourcards_readRGBC
  3040 ;;		_DCmotors_testing
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text11
  3045  0035E0                     __ptext11:
  3046                           	callstack 0
  3047  0035E0                     _forward:
  3048                           	callstack 21
  3049  0035E0                     
  3050                           ;DC_motors.c: 84:     mL->direction = 1;
  3051  0035E0  EE20 F001          	lfsr	2,1
  3052  0035E4  5023               	movf	forward@mL^0,w,c
  3053  0035E6  26D9               	addwf	fsr2l,f,c
  3054  0035E8  5024               	movf	(forward@mL+1)^0,w,c
  3055  0035EA  22DA               	addwfc	fsr2h,f,c
  3056  0035EC  0E01               	movlw	1
  3057  0035EE  6EDF               	movwf	indf2,c
  3058                           
  3059                           ;DC_motors.c: 85:     mR->direction = 1;
  3060  0035F0  EE20 F001          	lfsr	2,1
  3061  0035F4  5025               	movf	forward@mR^0,w,c
  3062  0035F6  26D9               	addwf	fsr2l,f,c
  3063  0035F8  5026               	movf	(forward@mR+1)^0,w,c
  3064  0035FA  22DA               	addwfc	fsr2h,f,c
  3065  0035FC  0E01               	movlw	1
  3066  0035FE  6EDF               	movwf	indf2,c
  3067                           
  3068                           ;DC_motors.c: 88:     while((mL->power < 20) && (mR->power < 20)){
  3069  003600  EF1E  F01B         	goto	l3853
  3070  003604                     l3845:
  3071                           
  3072                           ;DC_motors.c: 89:         mL->power += 10;
  3073  003604  C023  FFD9         	movff	forward@mL,fsr2l
  3074  003608  C024  FFDA         	movff	forward@mL+1,fsr2h
  3075  00360C  0E0A               	movlw	10
  3076  00360E  26DF               	addwf	indf2,f,c
  3077                           
  3078                           ;DC_motors.c: 90:         mR->power += 10;
  3079  003610  C025  FFD9         	movff	forward@mR,fsr2l
  3080  003614  C026  FFDA         	movff	forward@mR+1,fsr2h
  3081  003618  0E0A               	movlw	10
  3082  00361A  26DF               	addwf	indf2,f,c
  3083  00361C                     
  3084                           ;DC_motors.c: 92:         DCmotors_setPWM(mL);
  3085  00361C  C023  F018         	movff	forward@mL,DCmotors_setPWM@m
  3086  003620  C024  F019         	movff	forward@mL+1,DCmotors_setPWM@m+1
  3087  003624  EC2D  F016         	call	_DCmotors_setPWM	;wreg free
  3088  003628                     
  3089                           ;DC_motors.c: 93:         DCmotors_setPWM(mR);
  3090  003628  C025  F018         	movff	forward@mR,DCmotors_setPWM@m
  3091  00362C  C026  F019         	movff	forward@mR+1,DCmotors_setPWM@m+1
  3092  003630  EC2D  F016         	call	_DCmotors_setPWM	;wreg free
  3093  003634                     
  3094                           ;DC_motors.c: 94:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  3095  003634  0EA0               	movlw	160
  3096  003636                     u6007:
  3097  003636  D000               	nop2	
  3098  003638  2EE8               	decfsz	wreg,f,c
  3099  00363A  D7FD               	bra	u6007
  3100  00363C                     l3853:
  3101                           
  3102                           ;DC_motors.c: 88:     while((mL->power < 20) && (mR->power < 20)){
  3103  00363C  C023  FFD9         	movff	forward@mL,fsr2l
  3104  003640  C024  FFDA         	movff	forward@mL+1,fsr2h
  3105  003644  0E14               	movlw	20
  3106  003646  60DF               	cpfslt	indf2,c
  3107  003648  EF28  F01B         	goto	u3771
  3108  00364C  EF2A  F01B         	goto	u3770
  3109  003650                     u3771:
  3110  003650  EF36  F01B         	goto	l577
  3111  003654                     u3770:
  3112  003654  C025  FFD9         	movff	forward@mR,fsr2l
  3113  003658  C026  FFDA         	movff	forward@mR+1,fsr2h
  3114  00365C  0E13               	movlw	19
  3115  00365E  64DF               	cpfsgt	indf2,c
  3116  003660  EF34  F01B         	goto	u3781
  3117  003664  EF36  F01B         	goto	u3780
  3118  003668                     u3781:
  3119  003668  EF02  F01B         	goto	l3845
  3120  00366C                     u3780:
  3121  00366C                     l577:
  3122  00366C  0012               	return		;funcret
  3123  00366E                     __end_of_forward:
  3124                           	callstack 0
  3125                           
  3126 ;; *************** function _colourclick_readRGBC2 *****************
  3127 ;; Defined at:
  3128 ;;		line 124 in file "colour_click.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  tmpval          2   22[COMRAM] PTR struct .
  3131 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
  3132 ;;  mode            1   24[COMRAM] unsigned char 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3144 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3146 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3147 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3148 ;;Total ram usage:        5 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 11
  3151 ;; This function calls:
  3152 ;;		_colourclickLEDs_C
  3153 ;;		_colourclick_readRGBC
  3154 ;; This function is called by:
  3155 ;;		_colourcards_readRGBC
  3156 ;;		_colourcards_testingRGBC
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text12
  3161  0032C2                     __ptext12:
  3162                           	callstack 0
  3163  0032C2                     _colourclick_readRGBC2:
  3164                           	callstack 18
  3165  0032C2                     
  3166                           ;colour_click.c: 125:     colourclickLEDs_C(0);
  3167  0032C2  0E00               	movlw	0
  3168  0032C4  EC96  F01E         	call	_colourclickLEDs_C
  3169  0032C8                     
  3170                           ;colour_click.c: 126:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3171  0032C8  0E09               	movlw	9
  3172  0032CA  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3173  0032CC  0E1E               	movlw	30
  3174  0032CE  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3175  0032D0  0EE4               	movlw	228
  3176  0032D2                     u6017:
  3177  0032D2  2EE8               	decfsz	wreg,f,c
  3178  0032D4  D7FE               	bra	u6017
  3179  0032D6  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3180  0032D8  D7FC               	bra	u6017
  3181  0032DA  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3182  0032DC  D7FA               	bra	u6017
  3183  0032DE  D000               	nop2	
  3184  0032E0                     
  3185                           ;colour_click.c: 128:     if (mode==1) {
  3186  0032E0  0419               	decf	colourclick_readRGBC2@mode^0,w,c
  3187  0032E2  A4D8               	btfss	status,2,c
  3188  0032E4  EF76  F019         	goto	u3791
  3189  0032E8  EF78  F019         	goto	u3790
  3190  0032EC                     u3791:
  3191  0032EC  EFA6  F019         	goto	l3891
  3192  0032F0                     u3790:
  3193  0032F0                     
  3194                           ;colour_click.c: 129:         LATGbits.LATG1 = 1;
  3195  0032F0  827F               	bsf	127,1,c	;volatile
  3196  0032F2                     
  3197                           ;colour_click.c: 130:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3198  0032F2  0E52               	movlw	82
  3199  0032F4  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3200  0032F6  0E2B               	movlw	43
  3201  0032F8  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3202  0032FA  0E00               	movlw	0
  3203  0032FC                     u6027:
  3204  0032FC  2EE8               	decfsz	wreg,f,c
  3205  0032FE  D7FE               	bra	u6027
  3206  003300  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3207  003302  D7FC               	bra	u6027
  3208  003304  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3209  003306  D7FA               	bra	u6027
  3210  003308  D000               	nop2	
  3211  00330A                     
  3212                           ;colour_click.c: 131:         colourclick_readRGBC(tmpval);
  3213  00330A  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  3214  00330E  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  3215  003312  ECFF  F01B         	call	_colourclick_readRGBC	;wreg free
  3216  003316                     
  3217                           ;colour_click.c: 132:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3218  003316  0E52               	movlw	82
  3219  003318  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3220  00331A  0E2B               	movlw	43
  3221  00331C  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3222  00331E  0E00               	movlw	0
  3223  003320                     u6037:
  3224  003320  2EE8               	decfsz	wreg,f,c
  3225  003322  D7FE               	bra	u6037
  3226  003324  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3227  003326  D7FC               	bra	u6037
  3228  003328  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3229  00332A  D7FA               	bra	u6037
  3230  00332C  D000               	nop2	
  3231  00332E                     
  3232                           ;colour_click.c: 133:         LATGbits.LATG1 = 0;
  3233  00332E  927F               	bcf	127,1,c	;volatile
  3234  003330                     l3889:
  3235                           
  3236                           ;colour_click.c: 134:         _delay((unsigned long)((20)*(64000000/4000.0)));
  3237  003330  0E02               	movlw	2
  3238  003332  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3239  003334  0EA0               	movlw	160
  3240  003336  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3241  003338  0E92               	movlw	146
  3242  00333A                     u6047:
  3243  00333A  2EE8               	decfsz	wreg,f,c
  3244  00333C  D7FE               	bra	u6047
  3245  00333E  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3246  003340  D7FC               	bra	u6047
  3247  003342  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3248  003344  D7FA               	bra	u6047
  3249  003346  D000               	nop2	
  3250                           
  3251                           ;colour_click.c: 135:     } else if (mode==2) {
  3252  003348  EFFC  F019         	goto	l3919
  3253  00334C                     l3891:
  3254  00334C  0E02               	movlw	2
  3255  00334E  1819               	xorwf	colourclick_readRGBC2@mode^0,w,c
  3256  003350  A4D8               	btfss	status,2,c
  3257  003352  EFAD  F019         	goto	u3801
  3258  003356  EFAF  F019         	goto	u3800
  3259  00335A                     u3801:
  3260  00335A  EFD1  F019         	goto	l3905
  3261  00335E                     u3800:
  3262  00335E                     
  3263                           ;colour_click.c: 136:         LATAbits.LATA4 = 1;
  3264  00335E  8879               	bsf	121,4,c	;volatile
  3265  003360                     
  3266                           ;colour_click.c: 137:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3267  003360  0E52               	movlw	82
  3268  003362  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3269  003364  0E2B               	movlw	43
  3270  003366  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3271  003368  0E00               	movlw	0
  3272  00336A                     u6057:
  3273  00336A  2EE8               	decfsz	wreg,f,c
  3274  00336C  D7FE               	bra	u6057
  3275  00336E  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3276  003370  D7FC               	bra	u6057
  3277  003372  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3278  003374  D7FA               	bra	u6057
  3279  003376  D000               	nop2	
  3280  003378                     
  3281                           ;colour_click.c: 138:         colourclick_readRGBC(tmpval);
  3282  003378  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  3283  00337C  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  3284  003380  ECFF  F01B         	call	_colourclick_readRGBC	;wreg free
  3285  003384                     
  3286                           ;colour_click.c: 139:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3287  003384  0E52               	movlw	82
  3288  003386  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3289  003388  0E2B               	movlw	43
  3290  00338A  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3291  00338C  0E00               	movlw	0
  3292  00338E                     u6067:
  3293  00338E  2EE8               	decfsz	wreg,f,c
  3294  003390  D7FE               	bra	u6067
  3295  003392  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3296  003394  D7FC               	bra	u6067
  3297  003396  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3298  003398  D7FA               	bra	u6067
  3299  00339A  D000               	nop2	
  3300  00339C                     
  3301                           ;colour_click.c: 140:         LATAbits.LATA4 = 0;
  3302  00339C  9879               	bcf	121,4,c	;volatile
  3303  00339E  EF98  F019         	goto	l3889
  3304  0033A2                     l3905:
  3305  0033A2  0E03               	movlw	3
  3306  0033A4  1819               	xorwf	colourclick_readRGBC2@mode^0,w,c
  3307  0033A6  A4D8               	btfss	status,2,c
  3308  0033A8  EFD8  F019         	goto	u3811
  3309  0033AC  EFDA  F019         	goto	u3810
  3310  0033B0                     u3811:
  3311  0033B0  EFFC  F019         	goto	l3919
  3312  0033B4                     u3810:
  3313  0033B4                     
  3314                           ;colour_click.c: 143:         LATFbits.LATF7 = 1;
  3315  0033B4  8E7E               	bsf	126,7,c	;volatile
  3316  0033B6                     
  3317                           ;colour_click.c: 144:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3318  0033B6  0E52               	movlw	82
  3319  0033B8  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3320  0033BA  0E2B               	movlw	43
  3321  0033BC  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3322  0033BE  0E00               	movlw	0
  3323  0033C0                     u6077:
  3324  0033C0  2EE8               	decfsz	wreg,f,c
  3325  0033C2  D7FE               	bra	u6077
  3326  0033C4  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3327  0033C6  D7FC               	bra	u6077
  3328  0033C8  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3329  0033CA  D7FA               	bra	u6077
  3330  0033CC  D000               	nop2	
  3331  0033CE                     
  3332                           ;colour_click.c: 145:         colourclick_readRGBC(tmpval);
  3333  0033CE  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  3334  0033D2  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  3335  0033D6  ECFF  F01B         	call	_colourclick_readRGBC	;wreg free
  3336  0033DA                     
  3337                           ;colour_click.c: 146:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3338  0033DA  0E52               	movlw	82
  3339  0033DC  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3340  0033DE  0E2B               	movlw	43
  3341  0033E0  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3342  0033E2  0E00               	movlw	0
  3343  0033E4                     u6087:
  3344  0033E4  2EE8               	decfsz	wreg,f,c
  3345  0033E6  D7FE               	bra	u6087
  3346  0033E8  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3347  0033EA  D7FC               	bra	u6087
  3348  0033EC  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3349  0033EE  D7FA               	bra	u6087
  3350  0033F0  D000               	nop2	
  3351  0033F2                     
  3352                           ;colour_click.c: 147:         LATFbits.LATF7 = 0;
  3353  0033F2  9E7E               	bcf	126,7,c	;volatile
  3354  0033F4  EF98  F019         	goto	l3889
  3355  0033F8                     l3919:
  3356                           
  3357                           ;colour_click.c: 151:     colourclickLEDs_C(1);
  3358  0033F8  0E01               	movlw	1
  3359  0033FA  EC96  F01E         	call	_colourclickLEDs_C
  3360  0033FE                     
  3361                           ;colour_click.c: 152:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3362  0033FE  0E09               	movlw	9
  3363  003400  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3364  003402  0E1E               	movlw	30
  3365  003404  6E1A               	movwf	??_colourclick_readRGBC2^0,c
  3366  003406  0EE4               	movlw	228
  3367  003408                     u6097:
  3368  003408  2EE8               	decfsz	wreg,f,c
  3369  00340A  D7FE               	bra	u6097
  3370  00340C  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
  3371  00340E  D7FC               	bra	u6097
  3372  003410  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3373  003412  D7FA               	bra	u6097
  3374  003414  D000               	nop2	
  3375  003416  0012               	return		;funcret
  3376  003418                     __end_of_colourclick_readRGBC2:
  3377                           	callstack 0
  3378                           
  3379 ;; *************** function _colourclick_readRGBC *****************
  3380 ;; Defined at:
  3381 ;;		line 113 in file "colour_click.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  tmpval          2   20[COMRAM] PTR struct .
  3384 ;;		 -> colourclick_calibration@initial(8), colourcards_testingRGBC@abs(8), main@current(8), 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3400 ;;Total ram usage:        2 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; Hardware stack levels required when called: 10
  3403 ;; This function calls:
  3404 ;;		_colourclick_readB
  3405 ;;		_colourclick_readC
  3406 ;;		_colourclick_readG
  3407 ;;		_colourclick_readR
  3408 ;; This function is called by:
  3409 ;;		_main
  3410 ;;		_colourcards_readRGBC
  3411 ;;		_colourclick_readRGBC2
  3412 ;;		_colourclick_calibration
  3413 ;;		_colourcards_testingRGBC
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text13
  3418  0037FE                     __ptext13:
  3419                           	callstack 0
  3420  0037FE                     _colourclick_readRGBC:
  3421                           	callstack 20
  3422  0037FE                     
  3423                           ;colour_click.c: 114:     tmpval->R = colourclick_readR();
  3424  0037FE  EC5D  F01C         	call	_colourclick_readR	;wreg free
  3425  003802  C015  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
  3426  003806  C016  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
  3427  00380A  C00E  FFDE         	movff	?_colourclick_readR,postinc2
  3428  00380E  C00F  FFDD         	movff	?_colourclick_readR+1,postdec2
  3429                           
  3430                           ;colour_click.c: 115:     tmpval->G = colourclick_readG();
  3431  003812  EC85  F01C         	call	_colourclick_readG	;wreg free
  3432  003816  EE20 F002          	lfsr	2,2
  3433  00381A  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
  3434  00381C  26D9               	addwf	fsr2l,f,c
  3435  00381E  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  3436  003820  22DA               	addwfc	fsr2h,f,c
  3437  003822  C00E  FFDE         	movff	?_colourclick_readG,postinc2
  3438  003826  C00F  FFDD         	movff	?_colourclick_readG+1,postdec2
  3439                           
  3440                           ;colour_click.c: 116:     tmpval->B = colourclick_readB();
  3441  00382A  ECD5  F01C         	call	_colourclick_readB	;wreg free
  3442  00382E  EE20 F004          	lfsr	2,4
  3443  003832  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
  3444  003834  26D9               	addwf	fsr2l,f,c
  3445  003836  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  3446  003838  22DA               	addwfc	fsr2h,f,c
  3447  00383A  C00E  FFDE         	movff	?_colourclick_readB,postinc2
  3448  00383E  C00F  FFDD         	movff	?_colourclick_readB+1,postdec2
  3449                           
  3450                           ;colour_click.c: 117:     tmpval->C = colourclick_readC();
  3451  003842  ECAD  F01C         	call	_colourclick_readC	;wreg free
  3452  003846  EE20 F006          	lfsr	2,6
  3453  00384A  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
  3454  00384C  26D9               	addwf	fsr2l,f,c
  3455  00384E  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  3456  003850  22DA               	addwfc	fsr2h,f,c
  3457  003852  C00E  FFDE         	movff	?_colourclick_readC,postinc2
  3458  003856  C00F  FFDD         	movff	?_colourclick_readC+1,postdec2
  3459  00385A  0012               	return		;funcret
  3460  00385C                     __end_of_colourclick_readRGBC:
  3461                           	callstack 0
  3462                           
  3463 ;; *************** function _colourclick_readR *****************
  3464 ;; Defined at:
  3465 ;;		line 45 in file "colour_click.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  tmp             2   18[COMRAM] unsigned int 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  2   13[COMRAM] unsigned int 
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;Total ram usage:        7 bytes
  3484 ;; Hardware stack levels used: 1
  3485 ;; Hardware stack levels required when called: 9
  3486 ;; This function calls:
  3487 ;;		_I2C_2_Master_Read
  3488 ;;		_I2C_2_Master_RepStart
  3489 ;;		_I2C_2_Master_Start
  3490 ;;		_I2C_2_Master_Stop
  3491 ;;		_I2C_2_Master_Write
  3492 ;; This function is called by:
  3493 ;;		_colourclick_readRGBC
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text14
  3498  0038BA                     __ptext14:
  3499                           	callstack 0
  3500  0038BA                     _colourclick_readR:
  3501                           	callstack 20
  3502  0038BA                     
  3503                           ;colour_click.c: 46:  unsigned int tmp;;colour_click.c: 47:  I2C_2_Master_Start();
  3504  0038BA  EC53  F01F         	call	_I2C_2_Master_Start	;wreg free
  3505                           
  3506                           ;colour_click.c: 48:  I2C_2_Master_Write(0x52 | 0x00);
  3507  0038BE  0E52               	movlw	82
  3508  0038C0  EC3C  F01F         	call	_I2C_2_Master_Write
  3509                           
  3510                           ;colour_click.c: 49:  I2C_2_Master_Write(0xA0 | 0x16);
  3511  0038C4  0EB6               	movlw	182
  3512  0038C6  EC3C  F01F         	call	_I2C_2_Master_Write
  3513                           
  3514                           ;colour_click.c: 50:  I2C_2_Master_RepStart();
  3515  0038CA  EC58  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  3516                           
  3517                           ;colour_click.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  3518  0038CE  0E53               	movlw	83
  3519  0038D0  EC3C  F01F         	call	_I2C_2_Master_Write
  3520                           
  3521                           ;colour_click.c: 52:  tmp=I2C_2_Master_Read(1);
  3522  0038D4  0E01               	movlw	1
  3523  0038D6  ECE5  F01D         	call	_I2C_2_Master_Read
  3524  0038DA  6E10               	movwf	??_colourclick_readR^0,c
  3525  0038DC  5010               	movf	??_colourclick_readR^0,w,c
  3526  0038DE  6E13               	movwf	colourclick_readR@tmp^0,c
  3527  0038E0  6A14               	clrf	(colourclick_readR@tmp+1)^0,c
  3528                           
  3529                           ;colour_click.c: 53:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  3530  0038E2  0E00               	movlw	0
  3531  0038E4  ECE5  F01D         	call	_I2C_2_Master_Read
  3532  0038E8  6E10               	movwf	??_colourclick_readR^0,c
  3533  0038EA  5010               	movf	??_colourclick_readR^0,w,c
  3534  0038EC  6E12               	movwf	(??_colourclick_readR+2)^0,c
  3535  0038EE  6A11               	clrf	(??_colourclick_readR+1)^0,c
  3536  0038F0  5013               	movf	colourclick_readR@tmp^0,w,c
  3537  0038F2  1011               	iorwf	(??_colourclick_readR+1)^0,w,c
  3538  0038F4  6E13               	movwf	colourclick_readR@tmp^0,c
  3539  0038F6  5014               	movf	(colourclick_readR@tmp+1)^0,w,c
  3540  0038F8  1012               	iorwf	(??_colourclick_readR+2)^0,w,c
  3541  0038FA  6E14               	movwf	(colourclick_readR@tmp+1)^0,c
  3542                           
  3543                           ;colour_click.c: 54:  I2C_2_Master_Stop();
  3544  0038FC  EC4E  F01F         	call	_I2C_2_Master_Stop	;wreg free
  3545  003900                     
  3546                           ;colour_click.c: 55:  return tmp;
  3547  003900  C013  F00E         	movff	colourclick_readR@tmp,?_colourclick_readR
  3548  003904  C014  F00F         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
  3549  003908  0012               	return		;funcret
  3550  00390A                     __end_of_colourclick_readR:
  3551                           	callstack 0
  3552                           
  3553 ;; *************** function _colourclick_readG *****************
  3554 ;; Defined at:
  3555 ;;		line 62 in file "colour_click.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;		None
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  tmp             2   18[COMRAM] unsigned int 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2   13[COMRAM] unsigned int 
  3562 ;; Registers used:
  3563 ;;		wreg, status,2, status,0, cstack
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3571 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;Total ram usage:        7 bytes
  3574 ;; Hardware stack levels used: 1
  3575 ;; Hardware stack levels required when called: 9
  3576 ;; This function calls:
  3577 ;;		_I2C_2_Master_Read
  3578 ;;		_I2C_2_Master_RepStart
  3579 ;;		_I2C_2_Master_Start
  3580 ;;		_I2C_2_Master_Stop
  3581 ;;		_I2C_2_Master_Write
  3582 ;; This function is called by:
  3583 ;;		_colourclick_readRGBC
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text15
  3588  00390A                     __ptext15:
  3589                           	callstack 0
  3590  00390A                     _colourclick_readG:
  3591                           	callstack 20
  3592  00390A                     
  3593                           ;colour_click.c: 63:  unsigned int tmp;;colour_click.c: 64:  I2C_2_Master_Start();
  3594  00390A  EC53  F01F         	call	_I2C_2_Master_Start	;wreg free
  3595                           
  3596                           ;colour_click.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  3597  00390E  0E52               	movlw	82
  3598  003910  EC3C  F01F         	call	_I2C_2_Master_Write
  3599                           
  3600                           ;colour_click.c: 66:  I2C_2_Master_Write(0xA0 | 0x18);
  3601  003914  0EB8               	movlw	184
  3602  003916  EC3C  F01F         	call	_I2C_2_Master_Write
  3603                           
  3604                           ;colour_click.c: 67:  I2C_2_Master_RepStart();
  3605  00391A  EC58  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  3606                           
  3607                           ;colour_click.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  3608  00391E  0E53               	movlw	83
  3609  003920  EC3C  F01F         	call	_I2C_2_Master_Write
  3610                           
  3611                           ;colour_click.c: 69:  tmp=I2C_2_Master_Read(1);
  3612  003924  0E01               	movlw	1
  3613  003926  ECE5  F01D         	call	_I2C_2_Master_Read
  3614  00392A  6E10               	movwf	??_colourclick_readG^0,c
  3615  00392C  5010               	movf	??_colourclick_readG^0,w,c
  3616  00392E  6E13               	movwf	colourclick_readG@tmp^0,c
  3617  003930  6A14               	clrf	(colourclick_readG@tmp+1)^0,c
  3618                           
  3619                           ;colour_click.c: 70:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  3620  003932  0E00               	movlw	0
  3621  003934  ECE5  F01D         	call	_I2C_2_Master_Read
  3622  003938  6E10               	movwf	??_colourclick_readG^0,c
  3623  00393A  5010               	movf	??_colourclick_readG^0,w,c
  3624  00393C  6E12               	movwf	(??_colourclick_readG+2)^0,c
  3625  00393E  6A11               	clrf	(??_colourclick_readG+1)^0,c
  3626  003940  5013               	movf	colourclick_readG@tmp^0,w,c
  3627  003942  1011               	iorwf	(??_colourclick_readG+1)^0,w,c
  3628  003944  6E13               	movwf	colourclick_readG@tmp^0,c
  3629  003946  5014               	movf	(colourclick_readG@tmp+1)^0,w,c
  3630  003948  1012               	iorwf	(??_colourclick_readG+2)^0,w,c
  3631  00394A  6E14               	movwf	(colourclick_readG@tmp+1)^0,c
  3632                           
  3633                           ;colour_click.c: 71:  I2C_2_Master_Stop();
  3634  00394C  EC4E  F01F         	call	_I2C_2_Master_Stop	;wreg free
  3635  003950                     
  3636                           ;colour_click.c: 72:  return tmp;
  3637  003950  C013  F00E         	movff	colourclick_readG@tmp,?_colourclick_readG
  3638  003954  C014  F00F         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
  3639  003958  0012               	return		;funcret
  3640  00395A                     __end_of_colourclick_readG:
  3641                           	callstack 0
  3642                           
  3643 ;; *************** function _colourclick_readC *****************
  3644 ;; Defined at:
  3645 ;;		line 96 in file "colour_click.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  tmp             2   18[COMRAM] unsigned int 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  2   13[COMRAM] unsigned int 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3660 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;Total ram usage:        7 bytes
  3664 ;; Hardware stack levels used: 1
  3665 ;; Hardware stack levels required when called: 9
  3666 ;; This function calls:
  3667 ;;		_I2C_2_Master_Read
  3668 ;;		_I2C_2_Master_RepStart
  3669 ;;		_I2C_2_Master_Start
  3670 ;;		_I2C_2_Master_Stop
  3671 ;;		_I2C_2_Master_Write
  3672 ;; This function is called by:
  3673 ;;		_colourclick_readRGBC
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text16
  3678  00395A                     __ptext16:
  3679                           	callstack 0
  3680  00395A                     _colourclick_readC:
  3681                           	callstack 20
  3682  00395A                     
  3683                           ;colour_click.c: 97:  unsigned int tmp;;colour_click.c: 98:  I2C_2_Master_Start();
  3684  00395A  EC53  F01F         	call	_I2C_2_Master_Start	;wreg free
  3685                           
  3686                           ;colour_click.c: 99:  I2C_2_Master_Write(0x52 | 0x00);
  3687  00395E  0E52               	movlw	82
  3688  003960  EC3C  F01F         	call	_I2C_2_Master_Write
  3689                           
  3690                           ;colour_click.c: 100:  I2C_2_Master_Write(0xA0 | 0x14);
  3691  003964  0EB4               	movlw	180
  3692  003966  EC3C  F01F         	call	_I2C_2_Master_Write
  3693                           
  3694                           ;colour_click.c: 101:  I2C_2_Master_RepStart();
  3695  00396A  EC58  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  3696                           
  3697                           ;colour_click.c: 102:  I2C_2_Master_Write(0x52 | 0x01);
  3698  00396E  0E53               	movlw	83
  3699  003970  EC3C  F01F         	call	_I2C_2_Master_Write
  3700                           
  3701                           ;colour_click.c: 103:  tmp=I2C_2_Master_Read(1);
  3702  003974  0E01               	movlw	1
  3703  003976  ECE5  F01D         	call	_I2C_2_Master_Read
  3704  00397A  6E10               	movwf	??_colourclick_readC^0,c
  3705  00397C  5010               	movf	??_colourclick_readC^0,w,c
  3706  00397E  6E13               	movwf	colourclick_readC@tmp^0,c
  3707  003980  6A14               	clrf	(colourclick_readC@tmp+1)^0,c
  3708                           
  3709                           ;colour_click.c: 104:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  3710  003982  0E00               	movlw	0
  3711  003984  ECE5  F01D         	call	_I2C_2_Master_Read
  3712  003988  6E10               	movwf	??_colourclick_readC^0,c
  3713  00398A  5010               	movf	??_colourclick_readC^0,w,c
  3714  00398C  6E12               	movwf	(??_colourclick_readC+2)^0,c
  3715  00398E  6A11               	clrf	(??_colourclick_readC+1)^0,c
  3716  003990  5013               	movf	colourclick_readC@tmp^0,w,c
  3717  003992  1011               	iorwf	(??_colourclick_readC+1)^0,w,c
  3718  003994  6E13               	movwf	colourclick_readC@tmp^0,c
  3719  003996  5014               	movf	(colourclick_readC@tmp+1)^0,w,c
  3720  003998  1012               	iorwf	(??_colourclick_readC+2)^0,w,c
  3721  00399A  6E14               	movwf	(colourclick_readC@tmp+1)^0,c
  3722                           
  3723                           ;colour_click.c: 105:  I2C_2_Master_Stop();
  3724  00399C  EC4E  F01F         	call	_I2C_2_Master_Stop	;wreg free
  3725  0039A0                     
  3726                           ;colour_click.c: 106:  return tmp;
  3727  0039A0  C013  F00E         	movff	colourclick_readC@tmp,?_colourclick_readC
  3728  0039A4  C014  F00F         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
  3729  0039A8  0012               	return		;funcret
  3730  0039AA                     __end_of_colourclick_readC:
  3731                           	callstack 0
  3732                           
  3733 ;; *************** function _colourclick_readB *****************
  3734 ;; Defined at:
  3735 ;;		line 79 in file "colour_click.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  tmp             2   18[COMRAM] unsigned int 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  2   13[COMRAM] unsigned int 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3752 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3753 ;;Total ram usage:        7 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 9
  3756 ;; This function calls:
  3757 ;;		_I2C_2_Master_Read
  3758 ;;		_I2C_2_Master_RepStart
  3759 ;;		_I2C_2_Master_Start
  3760 ;;		_I2C_2_Master_Stop
  3761 ;;		_I2C_2_Master_Write
  3762 ;; This function is called by:
  3763 ;;		_colourclick_readRGBC
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text17
  3768  0039AA                     __ptext17:
  3769                           	callstack 0
  3770  0039AA                     _colourclick_readB:
  3771                           	callstack 20
  3772  0039AA                     
  3773                           ;colour_click.c: 80:  unsigned int tmp;;colour_click.c: 81:  I2C_2_Master_Start();
  3774  0039AA  EC53  F01F         	call	_I2C_2_Master_Start	;wreg free
  3775                           
  3776                           ;colour_click.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  3777  0039AE  0E52               	movlw	82
  3778  0039B0  EC3C  F01F         	call	_I2C_2_Master_Write
  3779                           
  3780                           ;colour_click.c: 83:  I2C_2_Master_Write(0xA0 | 0x1A);
  3781  0039B4  0EBA               	movlw	186
  3782  0039B6  EC3C  F01F         	call	_I2C_2_Master_Write
  3783                           
  3784                           ;colour_click.c: 84:  I2C_2_Master_RepStart();
  3785  0039BA  EC58  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  3786                           
  3787                           ;colour_click.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  3788  0039BE  0E53               	movlw	83
  3789  0039C0  EC3C  F01F         	call	_I2C_2_Master_Write
  3790                           
  3791                           ;colour_click.c: 86:  tmp=I2C_2_Master_Read(1);
  3792  0039C4  0E01               	movlw	1
  3793  0039C6  ECE5  F01D         	call	_I2C_2_Master_Read
  3794  0039CA  6E10               	movwf	??_colourclick_readB^0,c
  3795  0039CC  5010               	movf	??_colourclick_readB^0,w,c
  3796  0039CE  6E13               	movwf	colourclick_readB@tmp^0,c
  3797  0039D0  6A14               	clrf	(colourclick_readB@tmp+1)^0,c
  3798                           
  3799                           ;colour_click.c: 87:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  3800  0039D2  0E00               	movlw	0
  3801  0039D4  ECE5  F01D         	call	_I2C_2_Master_Read
  3802  0039D8  6E10               	movwf	??_colourclick_readB^0,c
  3803  0039DA  5010               	movf	??_colourclick_readB^0,w,c
  3804  0039DC  6E12               	movwf	(??_colourclick_readB+2)^0,c
  3805  0039DE  6A11               	clrf	(??_colourclick_readB+1)^0,c
  3806  0039E0  5013               	movf	colourclick_readB@tmp^0,w,c
  3807  0039E2  1011               	iorwf	(??_colourclick_readB+1)^0,w,c
  3808  0039E4  6E13               	movwf	colourclick_readB@tmp^0,c
  3809  0039E6  5014               	movf	(colourclick_readB@tmp+1)^0,w,c
  3810  0039E8  1012               	iorwf	(??_colourclick_readB+2)^0,w,c
  3811  0039EA  6E14               	movwf	(colourclick_readB@tmp+1)^0,c
  3812                           
  3813                           ;colour_click.c: 88:  I2C_2_Master_Stop();
  3814  0039EC  EC4E  F01F         	call	_I2C_2_Master_Stop	;wreg free
  3815  0039F0                     
  3816                           ;colour_click.c: 89:  return tmp;
  3817  0039F0  C013  F00E         	movff	colourclick_readB@tmp,?_colourclick_readB
  3818  0039F4  C014  F00F         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
  3819  0039F8  0012               	return		;funcret
  3820  0039FA                     __end_of_colourclick_readB:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function _I2C_2_Master_Write *****************
  3824 ;; Defined at:
  3825 ;;		line 64 in file "I2C.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  data_byte       1    wreg     unsigned char 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  data_byte       1   10[COMRAM] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;Total ram usage:        1 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 8
  3846 ;; This function calls:
  3847 ;;		_I2C_2_Master_Idle
  3848 ;; This function is called by:
  3849 ;;		_interrupts_clear
  3850 ;;		_colourclick_writetoaddr
  3851 ;;		_colourclick_readR
  3852 ;;		_colourclick_readG
  3853 ;;		_colourclick_readB
  3854 ;;		_colourclick_readC
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text18
  3859  003E78                     __ptext18:
  3860                           	callstack 0
  3861  003E78                     _I2C_2_Master_Write:
  3862                           	callstack 18
  3863                           
  3864                           ;incstack = 0
  3865                           ;I2C_2_Master_Write@data_byte stored from wreg
  3866  003E78  6E0B               	movwf	I2C_2_Master_Write@data_byte^0,c
  3867  003E7A                     
  3868                           ;I2C.c: 65:   I2C_2_Master_Idle();
  3869  003E7A  EC37  F01E         	call	_I2C_2_Master_Idle	;wreg free
  3870  003E7E                     
  3871                           ;I2C.c: 66:   SSP2BUF = data_byte;
  3872  003E7E  C00B  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3873  003E82  0012               	return		;funcret
  3874  003E84                     __end_of_I2C_2_Master_Write:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _I2C_2_Master_Stop *****************
  3878 ;; Defined at:
  3879 ;;		line 55 in file "I2C.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3897 ;;Total ram usage:        0 bytes
  3898 ;; Hardware stack levels used: 1
  3899 ;; Hardware stack levels required when called: 8
  3900 ;; This function calls:
  3901 ;;		_I2C_2_Master_Idle
  3902 ;; This function is called by:
  3903 ;;		_interrupts_clear
  3904 ;;		_colourclick_writetoaddr
  3905 ;;		_colourclick_readR
  3906 ;;		_colourclick_readG
  3907 ;;		_colourclick_readB
  3908 ;;		_colourclick_readC
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text19
  3913  003E9C                     __ptext19:
  3914                           	callstack 0
  3915  003E9C                     _I2C_2_Master_Stop:
  3916                           	callstack 18
  3917  003E9C                     
  3918                           ;I2C.c: 56:   I2C_2_Master_Idle();
  3919  003E9C  EC37  F01E         	call	_I2C_2_Master_Idle	;wreg free
  3920  003EA0                     
  3921                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
  3922  003EA0  010E               	movlb	14	; () banked
  3923  003EA2  85DA               	bsf	218,2,b	;volatile
  3924  003EA4                     
  3925                           ; BSR set to: 14
  3926  003EA4  0012               	return		;funcret
  3927  003EA6                     __end_of_I2C_2_Master_Stop:
  3928                           	callstack 0
  3929                           
  3930 ;; *************** function _I2C_2_Master_Start *****************
  3931 ;; Defined at:
  3932 ;;		line 37 in file "I2C.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;Total ram usage:        0 bytes
  3951 ;; Hardware stack levels used: 1
  3952 ;; Hardware stack levels required when called: 8
  3953 ;; This function calls:
  3954 ;;		_I2C_2_Master_Idle
  3955 ;; This function is called by:
  3956 ;;		_interrupts_clear
  3957 ;;		_colourclick_writetoaddr
  3958 ;;		_colourclick_readR
  3959 ;;		_colourclick_readG
  3960 ;;		_colourclick_readB
  3961 ;;		_colourclick_readC
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text20
  3966  003EA6                     __ptext20:
  3967                           	callstack 0
  3968  003EA6                     _I2C_2_Master_Start:
  3969                           	callstack 18
  3970  003EA6                     
  3971                           ;I2C.c: 38:   I2C_2_Master_Idle();
  3972  003EA6  EC37  F01E         	call	_I2C_2_Master_Idle	;wreg free
  3973  003EAA                     
  3974                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
  3975  003EAA  010E               	movlb	14	; () banked
  3976  003EAC  81DA               	bsf	218,0,b	;volatile
  3977  003EAE                     
  3978                           ; BSR set to: 14
  3979  003EAE  0012               	return		;funcret
  3980  003EB0                     __end_of_I2C_2_Master_Start:
  3981                           	callstack 0
  3982                           
  3983 ;; *************** function _I2C_2_Master_RepStart *****************
  3984 ;; Defined at:
  3985 ;;		line 46 in file "I2C.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;Total ram usage:        0 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; Hardware stack levels required when called: 8
  4006 ;; This function calls:
  4007 ;;		_I2C_2_Master_Idle
  4008 ;; This function is called by:
  4009 ;;		_colourclick_readR
  4010 ;;		_colourclick_readG
  4011 ;;		_colourclick_readB
  4012 ;;		_colourclick_readC
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text21
  4017  003EB0                     __ptext21:
  4018                           	callstack 0
  4019  003EB0                     _I2C_2_Master_RepStart:
  4020                           	callstack 20
  4021  003EB0                     
  4022                           ;I2C.c: 47:   I2C_2_Master_Idle();
  4023  003EB0  EC37  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4024  003EB4                     
  4025                           ;I2C.c: 48:   SSP2CON2bits.RSEN = 1;
  4026  003EB4  010E               	movlb	14	; () banked
  4027  003EB6  83DA               	bsf	218,1,b	;volatile
  4028  003EB8                     
  4029                           ; BSR set to: 14
  4030  003EB8  0012               	return		;funcret
  4031  003EBA                     __end_of_I2C_2_Master_RepStart:
  4032                           	callstack 0
  4033                           
  4034 ;; *************** function _I2C_2_Master_Read *****************
  4035 ;; Defined at:
  4036 ;;		line 73 in file "I2C.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  ack             1    wreg     unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  ack             1   11[COMRAM] unsigned char 
  4041 ;;  tmp             1   12[COMRAM] unsigned char 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      unsigned char 
  4044 ;; Registers used:
  4045 ;;		wreg, status,2, status,0, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;Total ram usage:        3 bytes
  4056 ;; Hardware stack levels used: 1
  4057 ;; Hardware stack levels required when called: 8
  4058 ;; This function calls:
  4059 ;;		_I2C_2_Master_Idle
  4060 ;; This function is called by:
  4061 ;;		_colourclick_readR
  4062 ;;		_colourclick_readG
  4063 ;;		_colourclick_readB
  4064 ;;		_colourclick_readC
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text22
  4069  003BCA                     __ptext22:
  4070                           	callstack 0
  4071  003BCA                     _I2C_2_Master_Read:
  4072                           	callstack 20
  4073                           
  4074                           ; BSR set to: 14
  4075                           ;incstack = 0
  4076                           ;I2C_2_Master_Read@ack stored from wreg
  4077  003BCA  6E0C               	movwf	I2C_2_Master_Read@ack^0,c
  4078  003BCC                     
  4079                           ;I2C.c: 74:   unsigned char tmp;;I2C.c: 75:   I2C_2_Master_Idle();
  4080  003BCC  EC37  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4081  003BD0                     
  4082                           ;I2C.c: 76:   SSP2CON2bits.RCEN = 1;
  4083  003BD0  010E               	movlb	14	; () banked
  4084  003BD2  87DA               	bsf	218,3,b	;volatile
  4085                           
  4086                           ;I2C.c: 77:   I2C_2_Master_Idle();
  4087  003BD4  EC37  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4088  003BD8                     
  4089                           ;I2C.c: 78:   tmp = SSP2BUF;
  4090  003BD8  CED5 F00D          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4091                           
  4092                           ;I2C.c: 79:   I2C_2_Master_Idle();
  4093  003BDC  EC37  F01E         	call	_I2C_2_Master_Idle	;wreg free
  4094  003BE0                     
  4095                           ;I2C.c: 80:   SSP2CON2bits.ACKDT = !ack;
  4096  003BE0  500C               	movf	I2C_2_Master_Read@ack^0,w,c
  4097  003BE2  B4D8               	btfsc	status,2,c
  4098  003BE4  EFF6  F01D         	goto	u2501
  4099  003BE8  EFFA  F01D         	goto	u2500
  4100  003BEC                     u2501:
  4101  003BEC  6A0B               	clrf	??_I2C_2_Master_Read^0,c
  4102  003BEE  2A0B               	incf	??_I2C_2_Master_Read^0,f,c
  4103  003BF0  EFFB  F01D         	goto	u2518
  4104  003BF4                     u2500:
  4105  003BF4  6A0B               	clrf	??_I2C_2_Master_Read^0,c
  4106  003BF6                     u2518:
  4107  003BF6  3A0B               	swapf	??_I2C_2_Master_Read^0,f,c
  4108  003BF8  460B               	rlncf	??_I2C_2_Master_Read^0,f,c
  4109  003BFA  010E               	movlb	14	; () banked
  4110  003BFC  51DA               	movf	218,w,b	;volatile
  4111  003BFE  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
  4112  003C00  0BDF               	andlw	-33
  4113  003C02  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
  4114  003C04  6FDA               	movwf	218,b	;volatile
  4115  003C06                     
  4116                           ; BSR set to: 14
  4117                           ;I2C.c: 81:   SSP2CON2bits.ACKEN = 1;
  4118  003C06  89DA               	bsf	218,4,b	;volatile
  4119  003C08                     
  4120                           ; BSR set to: 14
  4121                           ;I2C.c: 82:   return tmp;
  4122  003C08  500D               	movf	I2C_2_Master_Read@tmp^0,w,c
  4123  003C0A                     
  4124                           ; BSR set to: 14
  4125  003C0A  0012               	return		;funcret
  4126  003C0C                     __end_of_I2C_2_Master_Read:
  4127                           	callstack 0
  4128                           
  4129 ;; *************** function _I2C_2_Master_Idle *****************
  4130 ;; Defined at:
  4131 ;;		line 29 in file "I2C.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2, status,0
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4149 ;;Total ram usage:        1 bytes
  4150 ;; Hardware stack levels used: 1
  4151 ;; Hardware stack levels required when called: 7
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_I2C_2_Master_Start
  4156 ;;		_I2C_2_Master_RepStart
  4157 ;;		_I2C_2_Master_Stop
  4158 ;;		_I2C_2_Master_Write
  4159 ;;		_I2C_2_Master_Read
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text23
  4164  003C6E                     __ptext23:
  4165                           	callstack 0
  4166  003C6E                     _I2C_2_Master_Idle:
  4167                           	callstack 18
  4168  003C6E                     l433:
  4169  003C6E  010E               	movlb	14	; () banked
  4170  003C70  B5D8               	btfsc	216,2,b	;volatile
  4171  003C72  EF3D  F01E         	goto	u2481
  4172  003C76  EF3F  F01E         	goto	u2480
  4173  003C7A                     u2481:
  4174  003C7A  EF37  F01E         	goto	l433
  4175  003C7E                     u2480:
  4176  003C7E                     
  4177                           ; BSR set to: 14
  4178  003C7E  CEDA F00A          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4179  003C82  0E1F               	movlw	31
  4180  003C84  160A               	andwf	??_I2C_2_Master_Idle^0,f,c
  4181  003C86  A4D8               	btfss	status,2,c
  4182  003C88  EF48  F01E         	goto	u2491
  4183  003C8C  EF4A  F01E         	goto	u2490
  4184  003C90                     u2491:
  4185  003C90  EF37  F01E         	goto	l433
  4186  003C94                     u2490:
  4187  003C94                     
  4188                           ; BSR set to: 14
  4189  003C94  0012               	return		;funcret
  4190  003C96                     __end_of_I2C_2_Master_Idle:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _colourclickLEDs_C *****************
  4194 ;; Defined at:
  4195 ;;		line 46 in file "buttons_n_LEDs.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  tog             1    wreg     unsigned char 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  tog             1    9[COMRAM] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;Total ram usage:        1 bytes
  4214 ;; Hardware stack levels used: 1
  4215 ;; Hardware stack levels required when called: 7
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_main
  4220 ;;		_colourclick_readRGBC2
  4221 ;;		_colourclick_calibration
  4222 ;;		_colourclickLEDs_init
  4223 ;;		_colourcards_testingRGBC
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text24
  4228  003D2C                     __ptext24:
  4229                           	callstack 0
  4230  003D2C                     _colourclickLEDs_C:
  4231                           	callstack 21
  4232                           
  4233                           ; BSR set to: 14
  4234                           ;incstack = 0
  4235                           ;colourclickLEDs_C@tog stored from wreg
  4236  003D2C  6E0A               	movwf	colourclickLEDs_C@tog^0,c
  4237  003D2E                     
  4238                           ;buttons_n_LEDs.c: 47:     LATGbits.LATG1 = tog;
  4239  003D2E  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
  4240  003D30  D002               	bra	u3605
  4241  003D32  927F               	bcf	127,1,c	;volatile
  4242  003D34  D001               	bra	u3606
  4243  003D36                     u3605:
  4244  003D36  827F               	bsf	127,1,c	;volatile
  4245  003D38                     u3606:
  4246                           
  4247                           ;buttons_n_LEDs.c: 48:     LATAbits.LATA4 = tog;
  4248  003D38  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
  4249  003D3A  D002               	bra	u3615
  4250  003D3C  9879               	bcf	121,4,c	;volatile
  4251  003D3E  D001               	bra	u3616
  4252  003D40                     u3615:
  4253  003D40  8879               	bsf	121,4,c	;volatile
  4254  003D42                     u3616:
  4255                           
  4256                           ;buttons_n_LEDs.c: 49:     LATFbits.LATF7 = tog;
  4257  003D42  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
  4258  003D44  D002               	bra	u3625
  4259  003D46  9E7E               	bcf	126,7,c	;volatile
  4260  003D48  D001               	bra	u3626
  4261  003D4A                     u3625:
  4262  003D4A  8E7E               	bsf	126,7,c	;volatile
  4263  003D4C                     u3626:
  4264  003D4C  0012               	return		;funcret
  4265  003D4E                     __end_of_colourclickLEDs_C:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _colourcards_normaliseRGBC *****************
  4269 ;; Defined at:
  4270 ;;		line 207 in file "colour_cards.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  abs             2   13[BANK0 ] PTR struct .
  4273 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
  4274 ;;  rel             2   15[BANK0 ] PTR struct .
  4275 ;;		 -> colourcards_testingRGBC@rel(12), colourcards_readRGBC@rel(12), 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  C               2   23[BANK0 ] unsigned int 
  4278 ;;  B               2   21[BANK0 ] unsigned int 
  4279 ;;  G               2   19[BANK0 ] unsigned int 
  4280 ;;  R               2   17[BANK0 ] unsigned int 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      void 
  4283 ;; Registers used:
  4284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4290 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4293 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;Total ram usage:       12 bytes
  4295 ;; Hardware stack levels used: 1
  4296 ;; Hardware stack levels required when called: 8
  4297 ;; This function calls:
  4298 ;;		___fldiv
  4299 ;;		___xxtofl
  4300 ;; This function is called by:
  4301 ;;		_colourcards_readRGBC
  4302 ;;		_colourcards_testingRGBC
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text25
  4307  002FE2                     __ptext25:
  4308                           	callstack 0
  4309  002FE2                     _colourcards_normaliseRGBC:
  4310                           	callstack 21
  4311  002FE2                     
  4312                           ;colour_cards.c: 208:     unsigned int R = abs->R;
  4313  002FE2  C06D  FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
  4314  002FE6  C06E  FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
  4315  002FEA  CFDE F071          	movff	postinc2,colourcards_normaliseRGBC@R
  4316  002FEE  CFDD F072          	movff	postdec2,colourcards_normaliseRGBC@R+1
  4317  002FF2                     
  4318                           ;colour_cards.c: 209:     unsigned int G = abs->G;
  4319  002FF2  0100               	movlb	0	; () banked
  4320  002FF4  EE20 F002          	lfsr	2,2
  4321  002FF8  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  4322  002FFA  26D9               	addwf	fsr2l,f,c
  4323  002FFC  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  4324  002FFE  22DA               	addwfc	fsr2h,f,c
  4325  003000  CFDE F073          	movff	postinc2,colourcards_normaliseRGBC@G
  4326  003004  CFDD F074          	movff	postdec2,colourcards_normaliseRGBC@G+1
  4327  003008                     
  4328                           ; BSR set to: 0
  4329                           ;colour_cards.c: 210:     unsigned int B = abs->B;
  4330  003008  EE20 F004          	lfsr	2,4
  4331  00300C  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  4332  00300E  26D9               	addwf	fsr2l,f,c
  4333  003010  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  4334  003012  22DA               	addwfc	fsr2h,f,c
  4335  003014  CFDE F075          	movff	postinc2,colourcards_normaliseRGBC@B
  4336  003018  CFDD F076          	movff	postdec2,colourcards_normaliseRGBC@B+1
  4337  00301C                     
  4338                           ; BSR set to: 0
  4339                           ;colour_cards.c: 211:     unsigned int C = abs->C;
  4340  00301C  EE20 F006          	lfsr	2,6
  4341  003020  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  4342  003022  26D9               	addwf	fsr2l,f,c
  4343  003024  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  4344  003026  22DA               	addwfc	fsr2h,f,c
  4345  003028  CFDE F077          	movff	postinc2,colourcards_normaliseRGBC@C
  4346  00302C  CFDD F078          	movff	postdec2,colourcards_normaliseRGBC@C+1
  4347  003030                     
  4348                           ; BSR set to: 0
  4349                           ;colour_cards.c: 213:     rel->R = (float)R/(float)C;
  4350  003030  C071  F00A         	movff	colourcards_normaliseRGBC@R,___xxtofl@val
  4351  003034  C072  F00B         	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
  4352  003038  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4353  00303A  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4354  00303C  0E00               	movlw	0
  4355  00303E  EC17  F017         	call	___xxtofl
  4356  003042  C00A  F041         	movff	?___xxtofl,___fldiv@b
  4357  003046  C00B  F042         	movff	?___xxtofl+1,___fldiv@b+1
  4358  00304A  C00C  F043         	movff	?___xxtofl+2,___fldiv@b+2
  4359  00304E  C00D  F044         	movff	?___xxtofl+3,___fldiv@b+3
  4360  003052  C077  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  4361  003056  C078  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  4362  00305A  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4363  00305C  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4364  00305E  0E00               	movlw	0
  4365  003060  EC17  F017         	call	___xxtofl
  4366  003064  C00A  F045         	movff	?___xxtofl,___fldiv@a
  4367  003068  C00B  F046         	movff	?___xxtofl+1,___fldiv@a+1
  4368  00306C  C00C  F047         	movff	?___xxtofl+2,___fldiv@a+2
  4369  003070  C00D  F048         	movff	?___xxtofl+3,___fldiv@a+3
  4370  003074  ECCC  F00F         	call	___fldiv	;wreg free
  4371  003078  C06F  FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
  4372  00307C  C070  FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
  4373  003080  C041  FFDE         	movff	?___fldiv,postinc2
  4374  003084  C042  FFDE         	movff	?___fldiv+1,postinc2
  4375  003088  C043  FFDE         	movff	?___fldiv+2,postinc2
  4376  00308C  C044  FFDE         	movff	?___fldiv+3,postinc2
  4377  003090                     
  4378                           ;colour_cards.c: 214:     rel->G = (float)G/(float)C;
  4379  003090  C073  F00A         	movff	colourcards_normaliseRGBC@G,___xxtofl@val
  4380  003094  C074  F00B         	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
  4381  003098  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4382  00309A  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4383  00309C  0E00               	movlw	0
  4384  00309E  EC17  F017         	call	___xxtofl
  4385  0030A2  C00A  F041         	movff	?___xxtofl,___fldiv@b
  4386  0030A6  C00B  F042         	movff	?___xxtofl+1,___fldiv@b+1
  4387  0030AA  C00C  F043         	movff	?___xxtofl+2,___fldiv@b+2
  4388  0030AE  C00D  F044         	movff	?___xxtofl+3,___fldiv@b+3
  4389  0030B2  C077  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  4390  0030B6  C078  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  4391  0030BA  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4392  0030BC  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4393  0030BE  0E00               	movlw	0
  4394  0030C0  EC17  F017         	call	___xxtofl
  4395  0030C4  C00A  F045         	movff	?___xxtofl,___fldiv@a
  4396  0030C8  C00B  F046         	movff	?___xxtofl+1,___fldiv@a+1
  4397  0030CC  C00C  F047         	movff	?___xxtofl+2,___fldiv@a+2
  4398  0030D0  C00D  F048         	movff	?___xxtofl+3,___fldiv@a+3
  4399  0030D4  ECCC  F00F         	call	___fldiv	;wreg free
  4400  0030D8  0100               	movlb	0	; () banked
  4401  0030DA  EE20 F004          	lfsr	2,4
  4402  0030DE  516F               	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  4403  0030E0  26D9               	addwf	fsr2l,f,c
  4404  0030E2  5170               	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  4405  0030E4  22DA               	addwfc	fsr2h,f,c
  4406  0030E6  C041  FFDE         	movff	?___fldiv,postinc2
  4407  0030EA  C042  FFDE         	movff	?___fldiv+1,postinc2
  4408  0030EE  C043  FFDE         	movff	?___fldiv+2,postinc2
  4409  0030F2  C044  FFDE         	movff	?___fldiv+3,postinc2
  4410  0030F6                     
  4411                           ; BSR set to: 0
  4412                           ;colour_cards.c: 215:     rel->B = (float)B/(float)C;
  4413  0030F6  C075  F00A         	movff	colourcards_normaliseRGBC@B,___xxtofl@val
  4414  0030FA  C076  F00B         	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
  4415  0030FE  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4416  003100  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4417  003102  0E00               	movlw	0
  4418  003104  EC17  F017         	call	___xxtofl
  4419  003108  C00A  F041         	movff	?___xxtofl,___fldiv@b
  4420  00310C  C00B  F042         	movff	?___xxtofl+1,___fldiv@b+1
  4421  003110  C00C  F043         	movff	?___xxtofl+2,___fldiv@b+2
  4422  003114  C00D  F044         	movff	?___xxtofl+3,___fldiv@b+3
  4423  003118  C077  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  4424  00311C  C078  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  4425  003120  6A0C               	clrf	(___xxtofl@val+2)^0,c
  4426  003122  6A0D               	clrf	(___xxtofl@val+3)^0,c
  4427  003124  0E00               	movlw	0
  4428  003126  EC17  F017         	call	___xxtofl
  4429  00312A  C00A  F045         	movff	?___xxtofl,___fldiv@a
  4430  00312E  C00B  F046         	movff	?___xxtofl+1,___fldiv@a+1
  4431  003132  C00C  F047         	movff	?___xxtofl+2,___fldiv@a+2
  4432  003136  C00D  F048         	movff	?___xxtofl+3,___fldiv@a+3
  4433  00313A  ECCC  F00F         	call	___fldiv	;wreg free
  4434  00313E  0100               	movlb	0	; () banked
  4435  003140  EE20 F008          	lfsr	2,8
  4436  003144  516F               	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  4437  003146  26D9               	addwf	fsr2l,f,c
  4438  003148  5170               	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  4439  00314A  22DA               	addwfc	fsr2h,f,c
  4440  00314C  C041  FFDE         	movff	?___fldiv,postinc2
  4441  003150  C042  FFDE         	movff	?___fldiv+1,postinc2
  4442  003154  C043  FFDE         	movff	?___fldiv+2,postinc2
  4443  003158  C044  FFDE         	movff	?___fldiv+3,postinc2
  4444  00315C                     
  4445                           ; BSR set to: 0
  4446  00315C  0012               	return		;funcret
  4447  00315E                     __end_of_colourcards_normaliseRGBC:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function _clearance *****************
  4451 ;; Defined at:
  4452 ;;		line 122 in file "DC_motors.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  mL              2   40[COMRAM] PTR struct .
  4455 ;;		 -> main@motorL(9), 
  4456 ;;  mR              2   42[COMRAM] PTR struct .
  4457 ;;		 -> main@motorR(9), 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4472 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;Total ram usage:        6 bytes
  4474 ;; Hardware stack levels used: 1
  4475 ;; Hardware stack levels required when called: 10
  4476 ;; This function calls:
  4477 ;;		_reverse
  4478 ;;		_stop
  4479 ;; This function is called by:
  4480 ;;		_colourcards_readRGBC
  4481 ;;		_DCmotors_testing
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text26
  4486  00385C                     __ptext26:
  4487                           	callstack 0
  4488  00385C                     _clearance:
  4489                           	callstack 19
  4490  00385C                     
  4491                           ;DC_motors.c: 123:     LATDbits.LATD3 = 0;
  4492  00385C  967C               	bcf	124,3,c	;volatile
  4493  00385E                     
  4494                           ;DC_motors.c: 124:     reverse(mL, mR);
  4495  00385E  C029  F023         	movff	clearance@mL,reverse@mL
  4496  003862  C02A  F024         	movff	clearance@mL+1,reverse@mL+1
  4497  003866  C02B  F025         	movff	clearance@mR,reverse@mR
  4498  00386A  C02C  F026         	movff	clearance@mR+1,reverse@mR+1
  4499  00386E  EC37  F01B         	call	_reverse	;wreg free
  4500  003872                     
  4501                           ;DC_motors.c: 125:     _delay((unsigned long)((350)*(64000000/4000.0)));
  4502  003872  0E1D               	movlw	29
  4503  003874  6E2E               	movwf	(??_clearance+1)^0,c
  4504  003876  0E69               	movlw	105
  4505  003878  6E2D               	movwf	??_clearance^0,c
  4506  00387A  0EA5               	movlw	165
  4507  00387C                     u6107:
  4508  00387C  2EE8               	decfsz	wreg,f,c
  4509  00387E  D7FE               	bra	u6107
  4510  003880  2E2D               	decfsz	??_clearance^0,f,c
  4511  003882  D7FC               	bra	u6107
  4512  003884  2E2E               	decfsz	(??_clearance+1)^0,f,c
  4513  003886  D7FA               	bra	u6107
  4514  003888  F000               	nop	
  4515  00388A                     
  4516                           ;DC_motors.c: 126:     stop(mL, mR);
  4517  00388A  C029  F023         	movff	clearance@mL,stop@mL
  4518  00388E  C02A  F024         	movff	clearance@mL+1,stop@mL+1
  4519  003892  C02B  F025         	movff	clearance@mR,stop@mR
  4520  003896  C02C  F026         	movff	clearance@mR+1,stop@mR+1
  4521  00389A  EC7E  F01B         	call	_stop	;wreg free
  4522                           
  4523                           ;DC_motors.c: 127:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  4524  00389E  0E52               	movlw	82
  4525  0038A0  6E2E               	movwf	(??_clearance+1)^0,c
  4526  0038A2  0E2B               	movlw	43
  4527  0038A4  6E2D               	movwf	??_clearance^0,c
  4528  0038A6  0E00               	movlw	0
  4529  0038A8                     u6117:
  4530  0038A8  2EE8               	decfsz	wreg,f,c
  4531  0038AA  D7FE               	bra	u6117
  4532  0038AC  2E2D               	decfsz	??_clearance^0,f,c
  4533  0038AE  D7FC               	bra	u6117
  4534  0038B0  2E2E               	decfsz	(??_clearance+1)^0,f,c
  4535  0038B2  D7FA               	bra	u6117
  4536  0038B4  D000               	nop2	
  4537  0038B6                     
  4538                           ;DC_motors.c: 128:     LATDbits.LATD3 = 0;
  4539  0038B6  967C               	bcf	124,3,c	;volatile
  4540  0038B8  0012               	return		;funcret
  4541  0038BA                     __end_of_clearance:
  4542                           	callstack 0
  4543                           
  4544 ;; *************** function _reverse *****************
  4545 ;; Defined at:
  4546 ;;		line 102 in file "DC_motors.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  mL              2   34[COMRAM] PTR struct .
  4549 ;;		 -> main@motorL(9), 
  4550 ;;  mR              2   36[COMRAM] PTR struct .
  4551 ;;		 -> main@motorR(9), 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4566 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4567 ;;Total ram usage:        5 bytes
  4568 ;; Hardware stack levels used: 1
  4569 ;; Hardware stack levels required when called: 9
  4570 ;; This function calls:
  4571 ;;		_DCmotors_setPWM
  4572 ;; This function is called by:
  4573 ;;		_main
  4574 ;;		_colourcards_readRGBC
  4575 ;;		_clearance
  4576 ;;		_DCmotors_testing
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text27
  4581  00366E                     __ptext27:
  4582                           	callstack 0
  4583  00366E                     _reverse:
  4584                           	callstack 21
  4585  00366E                     
  4586                           ;DC_motors.c: 104:     mL->direction = 0;
  4587  00366E  EE20 F001          	lfsr	2,1
  4588  003672  5023               	movf	reverse@mL^0,w,c
  4589  003674  26D9               	addwf	fsr2l,f,c
  4590  003676  5024               	movf	(reverse@mL+1)^0,w,c
  4591  003678  22DA               	addwfc	fsr2h,f,c
  4592  00367A  0E00               	movlw	0
  4593  00367C  6EDF               	movwf	indf2,c
  4594                           
  4595                           ;DC_motors.c: 105:     mR->direction = 0;
  4596  00367E  EE20 F001          	lfsr	2,1
  4597  003682  5025               	movf	reverse@mR^0,w,c
  4598  003684  26D9               	addwf	fsr2l,f,c
  4599  003686  5026               	movf	(reverse@mR+1)^0,w,c
  4600  003688  22DA               	addwfc	fsr2h,f,c
  4601  00368A  0E00               	movlw	0
  4602  00368C  6EDF               	movwf	indf2,c
  4603                           
  4604                           ;DC_motors.c: 108:     while((mL->power < 50) && (mR->power < 50)){
  4605  00368E  EF65  F01B         	goto	l3753
  4606  003692                     l3745:
  4607                           
  4608                           ;DC_motors.c: 109:         mL->power += 10;
  4609  003692  C023  FFD9         	movff	reverse@mL,fsr2l
  4610  003696  C024  FFDA         	movff	reverse@mL+1,fsr2h
  4611  00369A  0E0A               	movlw	10
  4612  00369C  26DF               	addwf	indf2,f,c
  4613                           
  4614                           ;DC_motors.c: 110:         mR->power += 10;
  4615  00369E  C025  FFD9         	movff	reverse@mR,fsr2l
  4616  0036A2  C026  FFDA         	movff	reverse@mR+1,fsr2h
  4617  0036A6  0E0A               	movlw	10
  4618  0036A8  26DF               	addwf	indf2,f,c
  4619  0036AA                     
  4620                           ;DC_motors.c: 112:         DCmotors_setPWM(mL);
  4621  0036AA  C023  F018         	movff	reverse@mL,DCmotors_setPWM@m
  4622  0036AE  C024  F019         	movff	reverse@mL+1,DCmotors_setPWM@m+1
  4623  0036B2  EC2D  F016         	call	_DCmotors_setPWM	;wreg free
  4624  0036B6                     
  4625                           ;DC_motors.c: 113:         DCmotors_setPWM(mR);
  4626  0036B6  C025  F018         	movff	reverse@mR,DCmotors_setPWM@m
  4627  0036BA  C026  F019         	movff	reverse@mR+1,DCmotors_setPWM@m+1
  4628  0036BE  EC2D  F016         	call	_DCmotors_setPWM	;wreg free
  4629  0036C2                     
  4630                           ;DC_motors.c: 114:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  4631  0036C2  0EA0               	movlw	160
  4632  0036C4                     u6127:
  4633  0036C4  D000               	nop2	
  4634  0036C6  2EE8               	decfsz	wreg,f,c
  4635  0036C8  D7FD               	bra	u6127
  4636  0036CA                     l3753:
  4637                           
  4638                           ;DC_motors.c: 108:     while((mL->power < 50) && (mR->power < 50)){
  4639  0036CA  C023  FFD9         	movff	reverse@mL,fsr2l
  4640  0036CE  C024  FFDA         	movff	reverse@mL+1,fsr2h
  4641  0036D2  0E32               	movlw	50
  4642  0036D4  60DF               	cpfslt	indf2,c
  4643  0036D6  EF6F  F01B         	goto	u3651
  4644  0036DA  EF71  F01B         	goto	u3650
  4645  0036DE                     u3651:
  4646  0036DE  EF7D  F01B         	goto	l585
  4647  0036E2                     u3650:
  4648  0036E2  C025  FFD9         	movff	reverse@mR,fsr2l
  4649  0036E6  C026  FFDA         	movff	reverse@mR+1,fsr2h
  4650  0036EA  0E31               	movlw	49
  4651  0036EC  64DF               	cpfsgt	indf2,c
  4652  0036EE  EF7B  F01B         	goto	u3661
  4653  0036F2  EF7D  F01B         	goto	u3660
  4654  0036F6                     u3661:
  4655  0036F6  EF49  F01B         	goto	l3745
  4656  0036FA                     u3660:
  4657  0036FA                     l585:
  4658  0036FA  0012               	return		;funcret
  4659  0036FC                     __end_of_reverse:
  4660                           	callstack 0
  4661                           
  4662 ;; *************** function _checkbatterylevel *****************
  4663 ;; Defined at:
  4664 ;;		line 72 in file "DC_motors.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  batterylevel    1   10[COMRAM] unsigned char 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;Total ram usage:        1 bytes
  4683 ;; Hardware stack levels used: 1
  4684 ;; Hardware stack levels required when called: 8
  4685 ;; This function calls:
  4686 ;;		_ADC_getval
  4687 ;; This function is called by:
  4688 ;;		_main
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text28
  4693  003D8E                     __ptext28:
  4694                           	callstack 0
  4695  003D8E                     _checkbatterylevel:
  4696                           	callstack 22
  4697  003D8E                     
  4698                           ;DC_motors.c: 73:     unsigned char batterylevel;;DC_motors.c: 74:     batterylevel = AD
      +                          C_getval();
  4699  003D8E  EC1E  F01F         	call	_ADC_getval	;wreg free
  4700  003D92  6E0B               	movwf	checkbatterylevel@batterylevel^0,c
  4701  003D94                     
  4702                           ;DC_motors.c: 75:     if (batterylevel<100) {LATDbits.LATD7 = 1;}
  4703  003D94  0E64               	movlw	100
  4704  003D96  600B               	cpfslt	checkbatterylevel@batterylevel^0,c
  4705  003D98  EFD0  F01E         	goto	u3961
  4706  003D9C  EFD2  F01E         	goto	u3960
  4707  003DA0                     u3961:
  4708  003DA0  EFD5  F01E         	goto	l567
  4709  003DA4                     u3960:
  4710  003DA4  8E7C               	bsf	124,7,c	;volatile
  4711  003DA6  EFD6  F01E         	goto	l569
  4712  003DAA                     l567:
  4713  003DAA  9E7C               	bcf	124,7,c	;volatile
  4714  003DAC                     l569:
  4715  003DAC  0012               	return		;funcret
  4716  003DAE                     __end_of_checkbatterylevel:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _ADC_getval *****************
  4720 ;; Defined at:
  4721 ;;		line 26 in file "ADC.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  tmpval          1    9[COMRAM] unsigned char 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      unsigned char 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;Total ram usage:        1 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; Hardware stack levels required when called: 7
  4742 ;; This function calls:
  4743 ;;		Nothing
  4744 ;; This function is called by:
  4745 ;;		_checkbatterylevel
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text29
  4750  003E3C                     __ptext29:
  4751                           	callstack 0
  4752  003E3C                     _ADC_getval:
  4753                           	callstack 22
  4754  003E3C                     
  4755                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  4756  003E3C  8060               	bsf	96,0,c	;volatile
  4757  003E3E                     l361:
  4758  003E3E  B060               	btfsc	96,0,c	;volatile
  4759  003E40  EF24  F01F         	goto	u3841
  4760  003E44  EF26  F01F         	goto	u3840
  4761  003E48                     u3841:
  4762  003E48  EF1F  F01F         	goto	l361
  4763  003E4C                     u3840:
  4764  003E4C                     
  4765                           ;ADC.c: 31:     tmpval = ADRESH;
  4766  003E4C  CF64 F00A          	movff	3940,ADC_getval@tmpval	;volatile
  4767  003E50                     
  4768                           ;ADC.c: 34:     return tmpval;
  4769  003E50  500A               	movf	ADC_getval@tmpval^0,w,c
  4770  003E52  0012               	return		;funcret
  4771  003E54                     __end_of_ADC_getval:
  4772                           	callstack 0
  4773                           
  4774 ;; *************** function _USART4_init *****************
  4775 ;; Defined at:
  4776 ;;		line 8 in file "serial_comm.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;		None
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;		None
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4794 ;;Total ram usage:        0 bytes
  4795 ;; Hardware stack levels used: 1
  4796 ;; Hardware stack levels required when called: 7
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_main
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text30
  4805  003DAE                     __ptext30:
  4806                           	callstack 0
  4807  003DAE                     _USART4_init:
  4808                           	callstack 23
  4809  003DAE                     
  4810                           ;serial_comm.c: 9:     RC0PPS = 0x12;
  4811  003DAE  0E12               	movlw	18
  4812  003DB0  010E               	movlb	14	; () banked
  4813  003DB2  6F62               	movwf	98,b	;volatile
  4814                           
  4815                           ;serial_comm.c: 10:     RX4PPS = 0x11;
  4816  003DB4  0E11               	movlw	17
  4817  003DB6  6F15               	movwf	21,b	;volatile
  4818  003DB8                     
  4819                           ; BSR set to: 14
  4820                           ;serial_comm.c: 11:     TRISCbits.TRISC1 = 1;
  4821  003DB8  8283               	bsf	131,1,c	;volatile
  4822  003DBA                     
  4823                           ; BSR set to: 14
  4824                           ;serial_comm.c: 13:     BAUD4CONbits.BRG16 = 0;
  4825  003DBA  97E9               	bcf	233,3,b	;volatile
  4826  003DBC                     
  4827                           ; BSR set to: 14
  4828                           ;serial_comm.c: 14:     TX4STAbits.BRGH = 0;
  4829  003DBC  95E8               	bcf	232,2,b	;volatile
  4830                           
  4831                           ;serial_comm.c: 15:     SP4BRGL = 51;
  4832  003DBE  0E33               	movlw	51
  4833  003DC0  6FE5               	movwf	229,b	;volatile
  4834                           
  4835                           ;serial_comm.c: 16:     SP4BRGH = 0;
  4836  003DC2  0E00               	movlw	0
  4837  003DC4  6FE6               	movwf	230,b	;volatile
  4838  003DC6                     
  4839                           ; BSR set to: 14
  4840                           ;serial_comm.c: 18:     RC4STAbits.CREN = 1;
  4841  003DC6  89E7               	bsf	231,4,b	;volatile
  4842  003DC8                     
  4843                           ; BSR set to: 14
  4844                           ;serial_comm.c: 19:     TX4STAbits.TXEN = 1;
  4845  003DC8  8BE8               	bsf	232,5,b	;volatile
  4846  003DCA                     
  4847                           ; BSR set to: 14
  4848                           ;serial_comm.c: 20:     RC4STAbits.SPEN = 1;
  4849  003DCA  8FE7               	bsf	231,7,b	;volatile
  4850  003DCC                     
  4851                           ; BSR set to: 14
  4852  003DCC  0012               	return		;funcret
  4853  003DCE                     __end_of_USART4_init:
  4854                           	callstack 0
  4855                           
  4856 ;; *************** function _DCmotors_init *****************
  4857 ;; Defined at:
  4858 ;;		line 10 in file "DC_motors.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  PWMperiod       1    wreg     unsigned char 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  PWMperiod       1    9[COMRAM] unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      void 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4876 ;;Total ram usage:        1 bytes
  4877 ;; Hardware stack levels used: 1
  4878 ;; Hardware stack levels required when called: 8
  4879 ;; This function calls:
  4880 ;;		_buggyLEDs_init
  4881 ;;		_clicker2LEDs_init
  4882 ;;		_clicker2buttons_init
  4883 ;; This function is called by:
  4884 ;;		_main
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text31
  4889  0039FA                     __ptext31:
  4890                           	callstack 0
  4891  0039FA                     _DCmotors_init:
  4892                           	callstack 22
  4893                           
  4894                           ; BSR set to: 14
  4895                           ;incstack = 0
  4896                           ;DCmotors_init@PWMperiod stored from wreg
  4897  0039FA  6E0A               	movwf	DCmotors_init@PWMperiod^0,c
  4898  0039FC                     
  4899                           ;DC_motors.c: 12:     T2CONbits.CKPS=0b100;
  4900  0039FC  50BD               	movf	189,w,c	;volatile
  4901  0039FE  0B8F               	andlw	-113
  4902  003A00  0940               	iorlw	64
  4903  003A02  6EBD               	movwf	189,c	;volatile
  4904                           
  4905                           ;DC_motors.c: 13:     T2HLTbits.MODE=0b00000;
  4906  003A04  0EE0               	movlw	-32
  4907  003A06  16BE               	andwf	190,f,c	;volatile
  4908                           
  4909                           ;DC_motors.c: 14:     T2CLKCONbits.CS=0b0001;
  4910  003A08  50BF               	movf	191,w,c	;volatile
  4911  003A0A  0BF0               	andlw	-16
  4912  003A0C  0901               	iorlw	1
  4913  003A0E  6EBF               	movwf	191,c	;volatile
  4914  003A10                     
  4915                           ;DC_motors.c: 17:     T2PR=PWMperiod;
  4916  003A10  C00A  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  4917  003A14                     
  4918                           ;DC_motors.c: 18:     T2CONbits.ON=1;
  4919  003A14  8EBD               	bsf	189,7,c	;volatile
  4920  003A16                     
  4921                           ;DC_motors.c: 21:     TRISEbits.TRISE2=0;
  4922  003A16  9485               	bcf	133,2,c	;volatile
  4923  003A18                     
  4924                           ;DC_motors.c: 22:     TRISEbits.TRISE4=0;
  4925  003A18  9885               	bcf	133,4,c	;volatile
  4926  003A1A                     
  4927                           ;DC_motors.c: 23:     TRISCbits.TRISC7=0;
  4928  003A1A  9E83               	bcf	131,7,c	;volatile
  4929  003A1C                     
  4930                           ;DC_motors.c: 24:     TRISGbits.TRISG6=0;
  4931  003A1C  9C87               	bcf	135,6,c	;volatile
  4932  003A1E                     
  4933                           ;DC_motors.c: 26:     LATEbits.LATE2=0;
  4934  003A1E  947D               	bcf	125,2,c	;volatile
  4935  003A20                     
  4936                           ;DC_motors.c: 27:     LATEbits.LATE4=0;
  4937  003A20  987D               	bcf	125,4,c	;volatile
  4938  003A22                     
  4939                           ;DC_motors.c: 28:     LATCbits.LATC7=0;
  4940  003A22  9E7B               	bcf	123,7,c	;volatile
  4941  003A24                     
  4942                           ;DC_motors.c: 29:     LATGbits.LATG6=0;
  4943  003A24  9C7F               	bcf	127,6,c	;volatile
  4944                           
  4945                           ;DC_motors.c: 31:     PWM6DCH=0;
  4946  003A26  0E00               	movlw	0
  4947  003A28  6EA3               	movwf	163,c	;volatile
  4948                           
  4949                           ;DC_motors.c: 32:     PWM7DCH=0;
  4950  003A2A  0E00               	movlw	0
  4951  003A2C  6EA0               	movwf	160,c	;volatile
  4952  003A2E                     
  4953                           ;DC_motors.c: 34:     PWM6CONbits.EN = 1;
  4954  003A2E  8EA4               	bsf	164,7,c	;volatile
  4955  003A30                     
  4956                           ;DC_motors.c: 35:     PWM7CONbits.EN = 1;
  4957  003A30  8EA1               	bsf	161,7,c	;volatile
  4958                           
  4959                           ;DC_motors.c: 37:     RE2PPS=0x0A;
  4960  003A32  0E0A               	movlw	10
  4961  003A34  010E               	movlb	14	; () banked
  4962  003A36  6F74               	movwf	116,b	;volatile
  4963                           
  4964                           ;DC_motors.c: 38:     RC7PPS=0x0B;
  4965  003A38  0E0B               	movlw	11
  4966  003A3A  6F69               	movwf	105,b	;volatile
  4967  003A3C                     
  4968                           ; BSR set to: 14
  4969                           ;DC_motors.c: 41:     clicker2buttons_init();
  4970  003A3C  EC42  F01F         	call	_clicker2buttons_init	;wreg free
  4971  003A40                     
  4972                           ;DC_motors.c: 42:     clicker2LEDs_init();
  4973  003A40  EC5D  F01F         	call	_clicker2LEDs_init	;wreg free
  4974  003A44                     
  4975                           ;DC_motors.c: 43:     buggyLEDs_init();
  4976  003A44  EC2A  F01F         	call	_buggyLEDs_init	;wreg free
  4977  003A48  0012               	return		;funcret
  4978  003A4A                     __end_of_DCmotors_init:
  4979                           	callstack 0
  4980                           
  4981 ;; *************** function _clicker2buttons_init *****************
  4982 ;; Defined at:
  4983 ;;		line 8 in file "buttons_n_LEDs.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;		None
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;		None
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		None
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;Total ram usage:        0 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; Hardware stack levels required when called: 7
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_DCmotors_init
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text32
  5012  003E84                     __ptext32:
  5013                           	callstack 0
  5014  003E84                     _clicker2buttons_init:
  5015                           	callstack 22
  5016  003E84                     
  5017                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
  5018  003E84  8486               	bsf	134,2,c	;volatile
  5019                           
  5020                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
  5021  003E86  8686               	bsf	134,3,c	;volatile
  5022                           
  5023                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
  5024  003E88  010E               	movlb	14	; () banked
  5025  003E8A  95B4               	bcf	180,2,b	;volatile
  5026                           
  5027                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
  5028  003E8C  97B4               	bcf	180,3,b	;volatile
  5029  003E8E                     
  5030                           ; BSR set to: 14
  5031  003E8E  0012               	return		;funcret
  5032  003E90                     __end_of_clicker2buttons_init:
  5033                           	callstack 0
  5034                           
  5035 ;; *************** function _clicker2LEDs_init *****************
  5036 ;; Defined at:
  5037 ;;		line 20 in file "buttons_n_LEDs.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		None
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5055 ;;Total ram usage:        0 bytes
  5056 ;; Hardware stack levels used: 1
  5057 ;; Hardware stack levels required when called: 7
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_DCmotors_init
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text33
  5066  003EBA                     __ptext33:
  5067                           	callstack 0
  5068  003EBA                     _clicker2LEDs_init:
  5069                           	callstack 22
  5070  003EBA                     
  5071                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
  5072  003EBA  9E84               	bcf	132,7,c	;volatile
  5073                           
  5074                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
  5075  003EBC  9688               	bcf	136,3,c	;volatile
  5076                           
  5077                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
  5078  003EBE  9E7C               	bcf	124,7,c	;volatile
  5079                           
  5080                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
  5081  003EC0  9680               	bcf	128,3,c	;volatile
  5082  003EC2  0012               	return		;funcret
  5083  003EC4                     __end_of_clicker2LEDs_init:
  5084                           	callstack 0
  5085                           
  5086 ;; *************** function _buggyLEDs_init *****************
  5087 ;; Defined at:
  5088 ;;		line 56 in file "buttons_n_LEDs.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;		None
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;		None
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		None
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5106 ;;Total ram usage:        0 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; Hardware stack levels required when called: 7
  5109 ;; This function calls:
  5110 ;;		Nothing
  5111 ;; This function is called by:
  5112 ;;		_DCmotors_init
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text34
  5117  003E54                     __ptext34:
  5118                           	callstack 0
  5119  003E54                     _buggyLEDs_init:
  5120                           	callstack 22
  5121  003E54                     
  5122                           ;buttons_n_LEDs.c: 57:     TRISHbits.TRISH1 = 0;
  5123  003E54  9288               	bcf	136,1,c	;volatile
  5124                           
  5125                           ;buttons_n_LEDs.c: 58:     TRISDbits.TRISD3 = 0;
  5126  003E56  9684               	bcf	132,3,c	;volatile
  5127                           
  5128                           ;buttons_n_LEDs.c: 59:     TRISDbits.TRISD4 = 0;
  5129  003E58  9884               	bcf	132,4,c	;volatile
  5130                           
  5131                           ;buttons_n_LEDs.c: 60:     TRISFbits.TRISF0 = 0;
  5132  003E5A  9086               	bcf	134,0,c	;volatile
  5133                           
  5134                           ;buttons_n_LEDs.c: 61:     TRISHbits.TRISH0 = 0;
  5135  003E5C  9088               	bcf	136,0,c	;volatile
  5136                           
  5137                           ;buttons_n_LEDs.c: 63:     LATHbits.LATH1 = 0;
  5138  003E5E  9280               	bcf	128,1,c	;volatile
  5139                           
  5140                           ;buttons_n_LEDs.c: 64:     LATDbits.LATD3 = 0;
  5141  003E60  967C               	bcf	124,3,c	;volatile
  5142                           
  5143                           ;buttons_n_LEDs.c: 65:     LATDbits.LATD4 = 0;
  5144  003E62  987C               	bcf	124,4,c	;volatile
  5145                           
  5146                           ;buttons_n_LEDs.c: 66:     LATFbits.LATF0 = 0;
  5147  003E64  907E               	bcf	126,0,c	;volatile
  5148                           
  5149                           ;buttons_n_LEDs.c: 67:     LATHbits.LATH0 = 0;
  5150  003E66  9080               	bcf	128,0,c	;volatile
  5151  003E68  0012               	return		;funcret
  5152  003E6A                     __end_of_buggyLEDs_init:
  5153                           	callstack 0
  5154                           
  5155 ;; *************** function _DCmotors_calibration *****************
  5156 ;; Defined at:
  5157 ;;		line 234 in file "DC_motors.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  mL              2   35[BANK0 ] PTR struct .
  5160 ;;		 -> main@motorL(9), 
  5161 ;;  mR              2   37[BANK0 ] PTR struct .
  5162 ;;		 -> main@motorR(9), 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  okay            1   41[BANK0 ] unsigned char 
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      void 
  5167 ;; Registers used:
  5168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5174 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;Total ram usage:        7 bytes
  5179 ;; Hardware stack levels used: 1
  5180 ;; Hardware stack levels required when called: 11
  5181 ;; This function calls:
  5182 ;;		_adjdelay
  5183 ;;		_stop
  5184 ;;		_turnleft
  5185 ;;		_turnright
  5186 ;; This function is called by:
  5187 ;;		_main
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           	psect	text35
  5192  002334                     __ptext35:
  5193                           	callstack 0
  5194  002334                     _DCmotors_calibration:
  5195                           	callstack 19
  5196  002334                     
  5197                           ;DC_motors.c: 235:     unsigned char okay = 0;
  5198  002334  0E00               	movlw	0
  5199  002336  0100               	movlb	0	; () banked
  5200  002338  6F89               	movwf	DCmotors_calibration@okay& (0+255),b
  5201  00233A                     l631:
  5202  00233A  A48E               	btfss	142,2,c	;volatile
  5203  00233C  EFA2  F011         	goto	u5001
  5204  002340  EFA4  F011         	goto	u5000
  5205  002344                     u5001:
  5206  002344  EFFF  F012         	goto	l636
  5207  002348                     u5000:
  5208  002348  B68E               	btfsc	142,3,c	;volatile
  5209  00234A  EFA9  F011         	goto	u5011
  5210  00234E  EFAB  F011         	goto	u5010
  5211  002352                     u5011:
  5212  002352  EF9D  F011         	goto	l631
  5213  002356                     u5010:
  5214  002356  EFFF  F012         	goto	l636
  5215  00235A                     l637:
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;DC_motors.c: 239:         LATDbits.LATD3 = 1;
  5219  00235A  867C               	bsf	124,3,c	;volatile
  5220  00235C                     
  5221                           ; BSR set to: 0
  5222                           ;DC_motors.c: 240:         _delay((unsigned long)((100)*(64000000/4000.0)));
  5223  00235C  0E09               	movlw	9
  5224  00235E  0100               	movlb	0	; () banked
  5225  002360  6F88               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5226  002362  0E1E               	movlw	30
  5227  002364  6F87               	movwf	??_DCmotors_calibration& (0+255),b
  5228  002366  0EE4               	movlw	228
  5229  002368                     u6137:
  5230  002368  2EE8               	decfsz	wreg,f,c
  5231  00236A  D7FE               	bra	u6137
  5232  00236C  2F87               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5233  00236E  D7FC               	bra	u6137
  5234  002370  2F88               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5235  002372  D7FA               	bra	u6137
  5236  002374  F000               	nop	
  5237  002376                     
  5238                           ;DC_motors.c: 241:         turnright(mL, mR, 360);
  5239  002376  C083  F07D         	movff	DCmotors_calibration@mL,turnright@mL
  5240  00237A  C084  F07E         	movff	DCmotors_calibration@mL+1,turnright@mL+1
  5241  00237E  C085  F07F         	movff	DCmotors_calibration@mR,turnright@mR
  5242  002382  C086  F080         	movff	DCmotors_calibration@mR+1,turnright@mR+1
  5243  002386  0E01               	movlw	1
  5244  002388  0100               	movlb	0	; () banked
  5245  00238A  6F82               	movwf	(turnright@deg+1)& (0+255),b
  5246  00238C  0E68               	movlw	104
  5247  00238E  6F81               	movwf	turnright@deg& (0+255),b
  5248  002390  EC25  F01D         	call	_turnright	;wreg free
  5249  002394                     
  5250                           ;DC_motors.c: 242:         stop(mL, mR);
  5251  002394  C083  F023         	movff	DCmotors_calibration@mL,stop@mL
  5252  002398  C084  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
  5253  00239C  C085  F025         	movff	DCmotors_calibration@mR,stop@mR
  5254  0023A0  C086  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
  5255  0023A4  EC7E  F01B         	call	_stop	;wreg free
  5256  0023A8                     l638:
  5257  0023A8  A48E               	btfss	142,2,c	;volatile
  5258  0023AA  EFD9  F011         	goto	u5021
  5259  0023AE  EFDB  F011         	goto	u5020
  5260  0023B2                     u5021:
  5261  0023B2  EFE2  F011         	goto	l642
  5262  0023B6                     u5020:
  5263  0023B6  B68E               	btfsc	142,3,c	;volatile
  5264  0023B8  EFE0  F011         	goto	u5031
  5265  0023BC  EFE2  F011         	goto	u5030
  5266  0023C0                     u5031:
  5267  0023C0  EFD4  F011         	goto	l638
  5268  0023C4                     u5030:
  5269  0023C4                     l642:
  5270                           
  5271                           ;DC_motors.c: 245:         LATDbits.LATD3 = 0;
  5272  0023C4  967C               	bcf	124,3,c	;volatile
  5273  0023C6                     
  5274                           ;DC_motors.c: 246:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5275  0023C6  0E52               	movlw	82
  5276  0023C8  0100               	movlb	0	; () banked
  5277  0023CA  6F88               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5278  0023CC  0E2B               	movlw	43
  5279  0023CE  6F87               	movwf	??_DCmotors_calibration& (0+255),b
  5280  0023D0  0E00               	movlw	0
  5281  0023D2                     u6147:
  5282  0023D2  2EE8               	decfsz	wreg,f,c
  5283  0023D4  D7FE               	bra	u6147
  5284  0023D6  2F87               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5285  0023D8  D7FC               	bra	u6147
  5286  0023DA  2F88               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5287  0023DC  D7FA               	bra	u6147
  5288  0023DE  F000               	nop	
  5289  0023E0                     
  5290                           ;DC_motors.c: 247:         adjdelay(1);
  5291  0023E0  0E01               	movlw	1
  5292  0023E2  ECAF  F018         	call	_adjdelay
  5293  0023E6                     
  5294                           ;DC_motors.c: 248:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5295  0023E6  0E52               	movlw	82
  5296  0023E8  0100               	movlb	0	; () banked
  5297  0023EA  6F88               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5298  0023EC  0E2B               	movlw	43
  5299  0023EE  6F87               	movwf	??_DCmotors_calibration& (0+255),b
  5300  0023F0  0E00               	movlw	0
  5301  0023F2                     u6157:
  5302  0023F2  2EE8               	decfsz	wreg,f,c
  5303  0023F4  D7FE               	bra	u6157
  5304  0023F6  2F87               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5305  0023F8  D7FC               	bra	u6157
  5306  0023FA  2F88               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5307  0023FC  D7FA               	bra	u6157
  5308  0023FE  F000               	nop	
  5309  002400                     
  5310                           ;DC_motors.c: 250:         LATDbits.LATD3 = 1;
  5311  002400  867C               	bsf	124,3,c	;volatile
  5312  002402                     
  5313                           ;DC_motors.c: 251:         _delay((unsigned long)((100)*(64000000/4000.0)));
  5314  002402  0E09               	movlw	9
  5315  002404  0100               	movlb	0	; () banked
  5316  002406  6F88               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5317  002408  0E1E               	movlw	30
  5318  00240A  6F87               	movwf	??_DCmotors_calibration& (0+255),b
  5319  00240C  0EE4               	movlw	228
  5320  00240E                     u6167:
  5321  00240E  2EE8               	decfsz	wreg,f,c
  5322  002410  D7FE               	bra	u6167
  5323  002412  2F87               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5324  002414  D7FC               	bra	u6167
  5325  002416  2F88               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5326  002418  D7FA               	bra	u6167
  5327  00241A  F000               	nop	
  5328  00241C                     
  5329                           ;DC_motors.c: 252:         turnleft(mL, mR, 360);
  5330  00241C  C083  F07D         	movff	DCmotors_calibration@mL,turnleft@mL
  5331  002420  C084  F07E         	movff	DCmotors_calibration@mL+1,turnleft@mL+1
  5332  002424  C085  F07F         	movff	DCmotors_calibration@mR,turnleft@mR
  5333  002428  C086  F080         	movff	DCmotors_calibration@mR+1,turnleft@mR+1
  5334  00242C  0E01               	movlw	1
  5335  00242E  0100               	movlb	0	; () banked
  5336  002430  6F82               	movwf	(turnleft@deg+1)& (0+255),b
  5337  002432  0E68               	movlw	104
  5338  002434  6F81               	movwf	turnleft@deg& (0+255),b
  5339  002436  EC4D  F01D         	call	_turnleft	;wreg free
  5340  00243A                     
  5341                           ;DC_motors.c: 253:         stop(mL, mR);
  5342  00243A  C083  F023         	movff	DCmotors_calibration@mL,stop@mL
  5343  00243E  C084  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
  5344  002442  C085  F025         	movff	DCmotors_calibration@mR,stop@mR
  5345  002446  C086  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
  5346  00244A  EC7E  F01B         	call	_stop	;wreg free
  5347  00244E                     l643:
  5348  00244E  A48E               	btfss	142,2,c	;volatile
  5349  002450  EF2C  F012         	goto	u5041
  5350  002454  EF2E  F012         	goto	u5040
  5351  002458                     u5041:
  5352  002458  EF35  F012         	goto	l647
  5353  00245C                     u5040:
  5354  00245C  B68E               	btfsc	142,3,c	;volatile
  5355  00245E  EF33  F012         	goto	u5051
  5356  002462  EF35  F012         	goto	u5050
  5357  002466                     u5051:
  5358  002466  EF27  F012         	goto	l643
  5359  00246A                     u5050:
  5360  00246A                     l647:
  5361                           
  5362                           ;DC_motors.c: 256:         LATDbits.LATD3 = 0;
  5363  00246A  967C               	bcf	124,3,c	;volatile
  5364  00246C                     
  5365                           ;DC_motors.c: 257:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5366  00246C  0E52               	movlw	82
  5367  00246E  0100               	movlb	0	; () banked
  5368  002470  6F88               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5369  002472  0E2B               	movlw	43
  5370  002474  6F87               	movwf	??_DCmotors_calibration& (0+255),b
  5371  002476  0E00               	movlw	0
  5372  002478                     u6177:
  5373  002478  2EE8               	decfsz	wreg,f,c
  5374  00247A  D7FE               	bra	u6177
  5375  00247C  2F87               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5376  00247E  D7FC               	bra	u6177
  5377  002480  2F88               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5378  002482  D7FA               	bra	u6177
  5379  002484  F000               	nop	
  5380  002486                     
  5381                           ;DC_motors.c: 258:         adjdelay(2);
  5382  002486  0E02               	movlw	2
  5383  002488  ECAF  F018         	call	_adjdelay
  5384  00248C                     
  5385                           ;DC_motors.c: 259:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5386  00248C  0E52               	movlw	82
  5387  00248E  0100               	movlb	0	; () banked
  5388  002490  6F88               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5389  002492  0E2B               	movlw	43
  5390  002494  6F87               	movwf	??_DCmotors_calibration& (0+255),b
  5391  002496  0E00               	movlw	0
  5392  002498                     u6187:
  5393  002498  2EE8               	decfsz	wreg,f,c
  5394  00249A  D7FE               	bra	u6187
  5395  00249C  2F87               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5396  00249E  D7FC               	bra	u6187
  5397  0024A0  2F88               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5398  0024A2  D7FA               	bra	u6187
  5399  0024A4  F000               	nop	
  5400  0024A6                     
  5401                           ;DC_motors.c: 262:         LATDbits.LATD3 = 1;
  5402  0024A6  867C               	bsf	124,3,c	;volatile
  5403  0024A8                     
  5404                           ;DC_motors.c: 263:         _delay((unsigned long)((100)*(64000000/4000.0)));
  5405  0024A8  0E09               	movlw	9
  5406  0024AA  0100               	movlb	0	; () banked
  5407  0024AC  6F88               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5408  0024AE  0E1E               	movlw	30
  5409  0024B0  6F87               	movwf	??_DCmotors_calibration& (0+255),b
  5410  0024B2  0EE4               	movlw	228
  5411  0024B4                     u6197:
  5412  0024B4  2EE8               	decfsz	wreg,f,c
  5413  0024B6  D7FE               	bra	u6197
  5414  0024B8  2F87               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5415  0024BA  D7FC               	bra	u6197
  5416  0024BC  2F88               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5417  0024BE  D7FA               	bra	u6197
  5418  0024C0  F000               	nop	
  5419  0024C2                     
  5420                           ;DC_motors.c: 264:         turnright(mL, mR, 90);
  5421  0024C2  C083  F07D         	movff	DCmotors_calibration@mL,turnright@mL
  5422  0024C6  C084  F07E         	movff	DCmotors_calibration@mL+1,turnright@mL+1
  5423  0024CA  C085  F07F         	movff	DCmotors_calibration@mR,turnright@mR
  5424  0024CE  C086  F080         	movff	DCmotors_calibration@mR+1,turnright@mR+1
  5425  0024D2  0E00               	movlw	0
  5426  0024D4  0100               	movlb	0	; () banked
  5427  0024D6  6F82               	movwf	(turnright@deg+1)& (0+255),b
  5428  0024D8  0E5A               	movlw	90
  5429  0024DA  6F81               	movwf	turnright@deg& (0+255),b
  5430  0024DC  EC25  F01D         	call	_turnright	;wreg free
  5431  0024E0                     
  5432                           ;DC_motors.c: 265:         stop(mL, mR);
  5433  0024E0  C083  F023         	movff	DCmotors_calibration@mL,stop@mL
  5434  0024E4  C084  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
  5435  0024E8  C085  F025         	movff	DCmotors_calibration@mR,stop@mR
  5436  0024EC  C086  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
  5437  0024F0  EC7E  F01B         	call	_stop	;wreg free
  5438  0024F4                     
  5439                           ;DC_motors.c: 266:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5440  0024F4  0E52               	movlw	82
  5441  0024F6  0100               	movlb	0	; () banked
  5442  0024F8  6F88               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5443  0024FA  0E2B               	movlw	43
  5444  0024FC  6F87               	movwf	??_DCmotors_calibration& (0+255),b
  5445  0024FE  0E00               	movlw	0
  5446  002500                     u6207:
  5447  002500  2EE8               	decfsz	wreg,f,c
  5448  002502  D7FE               	bra	u6207
  5449  002504  2F87               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5450  002506  D7FC               	bra	u6207
  5451  002508  2F88               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5452  00250A  D7FA               	bra	u6207
  5453  00250C  F000               	nop	
  5454  00250E                     
  5455                           ;DC_motors.c: 268:         turnleft(mL, mR, 90);
  5456  00250E  C083  F07D         	movff	DCmotors_calibration@mL,turnleft@mL
  5457  002512  C084  F07E         	movff	DCmotors_calibration@mL+1,turnleft@mL+1
  5458  002516  C085  F07F         	movff	DCmotors_calibration@mR,turnleft@mR
  5459  00251A  C086  F080         	movff	DCmotors_calibration@mR+1,turnleft@mR+1
  5460  00251E  0E00               	movlw	0
  5461  002520  0100               	movlb	0	; () banked
  5462  002522  6F82               	movwf	(turnleft@deg+1)& (0+255),b
  5463  002524  0E5A               	movlw	90
  5464  002526  6F81               	movwf	turnleft@deg& (0+255),b
  5465  002528  EC4D  F01D         	call	_turnleft	;wreg free
  5466  00252C                     
  5467                           ;DC_motors.c: 269:         stop(mL, mR);
  5468  00252C  C083  F023         	movff	DCmotors_calibration@mL,stop@mL
  5469  002530  C084  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
  5470  002534  C085  F025         	movff	DCmotors_calibration@mR,stop@mR
  5471  002538  C086  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
  5472  00253C  EC7E  F01B         	call	_stop	;wreg free
  5473  002540                     
  5474                           ;DC_motors.c: 270:         LATDbits.LATD3 = 0;
  5475  002540  967C               	bcf	124,3,c	;volatile
  5476  002542                     
  5477                           ;DC_motors.c: 271:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5478  002542  0E52               	movlw	82
  5479  002544  0100               	movlb	0	; () banked
  5480  002546  6F88               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5481  002548  0E2B               	movlw	43
  5482  00254A  6F87               	movwf	??_DCmotors_calibration& (0+255),b
  5483  00254C  0E00               	movlw	0
  5484  00254E                     u6217:
  5485  00254E  2EE8               	decfsz	wreg,f,c
  5486  002550  D7FE               	bra	u6217
  5487  002552  2F87               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5488  002554  D7FC               	bra	u6217
  5489  002556  2F88               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5490  002558  D7FA               	bra	u6217
  5491  00255A  F000               	nop	
  5492  00255C                     
  5493                           ;DC_motors.c: 274:         LATHbits.LATH3 = 1;
  5494  00255C  8680               	bsf	128,3,c	;volatile
  5495  00255E                     
  5496                           ;DC_motors.c: 275:         LATDbits.LATD7 = 1;
  5497  00255E  8E7C               	bsf	124,7,c	;volatile
  5498  002560                     l648:
  5499  002560  A48E               	btfss	142,2,c	;volatile
  5500  002562  EFB5  F012         	goto	u5061
  5501  002566  EFB7  F012         	goto	u5060
  5502  00256A                     u5061:
  5503  00256A  EFBE  F012         	goto	l652
  5504  00256E                     u5060:
  5505  00256E  B68E               	btfsc	142,3,c	;volatile
  5506  002570  EFBC  F012         	goto	u5071
  5507  002574  EFBE  F012         	goto	u5070
  5508  002578                     u5071:
  5509  002578  EFB0  F012         	goto	l648
  5510  00257C                     u5070:
  5511  00257C                     l652:
  5512                           
  5513                           ;DC_motors.c: 277:         if(!PORTFbits.RF2 && PORTFbits.RF3){
  5514  00257C  B48E               	btfsc	142,2,c	;volatile
  5515  00257E  EFC3  F012         	goto	u5081
  5516  002582  EFC5  F012         	goto	u5080
  5517  002586                     u5081:
  5518  002586  EFD2  F012         	goto	l653
  5519  00258A                     u5080:
  5520  00258A  A68E               	btfss	142,3,c	;volatile
  5521  00258C  EFCA  F012         	goto	u5091
  5522  002590  EFCC  F012         	goto	u5090
  5523  002594                     u5091:
  5524  002594  EFD2  F012         	goto	l653
  5525  002598                     u5090:
  5526  002598                     
  5527                           ;DC_motors.c: 278:             LATDbits.LATD7 = 0;
  5528  002598  9E7C               	bcf	124,7,c	;volatile
  5529  00259A                     
  5530                           ;DC_motors.c: 279:             okay = 1;
  5531  00259A  0E01               	movlw	1
  5532  00259C  0100               	movlb	0	; () banked
  5533  00259E  6F89               	movwf	DCmotors_calibration@okay& (0+255),b
  5534                           
  5535                           ;DC_motors.c: 280:         } else if(!PORTFbits.RF3 && PORTFbits.RF2){
  5536  0025A0  EFE4  F012         	goto	l4787
  5537  0025A4                     l653:
  5538  0025A4  B68E               	btfsc	142,3,c	;volatile
  5539  0025A6  EFD7  F012         	goto	u5101
  5540  0025AA  EFD9  F012         	goto	u5100
  5541  0025AE                     u5101:
  5542  0025AE  EFE4  F012         	goto	l4787
  5543  0025B2                     u5100:
  5544  0025B2  A48E               	btfss	142,2,c	;volatile
  5545  0025B4  EFDE  F012         	goto	u5111
  5546  0025B8  EFE0  F012         	goto	u5110
  5547  0025BC                     u5111:
  5548  0025BC  EFE4  F012         	goto	l4787
  5549  0025C0                     u5110:
  5550  0025C0                     
  5551                           ;DC_motors.c: 281:             LATHbits.LATH3 = 0;
  5552  0025C0  9680               	bcf	128,3,c	;volatile
  5553  0025C2                     
  5554                           ;DC_motors.c: 282:             okay = 0;
  5555  0025C2  0E00               	movlw	0
  5556  0025C4  0100               	movlb	0	; () banked
  5557  0025C6  6F89               	movwf	DCmotors_calibration@okay& (0+255),b
  5558  0025C8                     l4787:
  5559                           
  5560                           ;DC_motors.c: 284:         _delay((unsigned long)((200)*(64000000/4000.0)));
  5561  0025C8  0E11               	movlw	17
  5562  0025CA  0100               	movlb	0	; () banked
  5563  0025CC  6F88               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5564  0025CE  0E3C               	movlw	60
  5565  0025D0  6F87               	movwf	??_DCmotors_calibration& (0+255),b
  5566  0025D2  0ECB               	movlw	203
  5567  0025D4                     u6227:
  5568  0025D4  2EE8               	decfsz	wreg,f,c
  5569  0025D6  D7FE               	bra	u6227
  5570  0025D8  2F87               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5571  0025DA  D7FC               	bra	u6227
  5572  0025DC  2F88               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5573  0025DE  D7FA               	bra	u6227
  5574  0025E0                     
  5575                           ;DC_motors.c: 285:         LATHbits.LATH3 = 0;
  5576  0025E0  9680               	bcf	128,3,c	;volatile
  5577  0025E2                     
  5578                           ;DC_motors.c: 286:         LATDbits.LATD7 = 0;
  5579  0025E2  9E7C               	bcf	124,7,c	;volatile
  5580  0025E4                     
  5581                           ;DC_motors.c: 287:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  5582  0025E4  0E52               	movlw	82
  5583  0025E6  0100               	movlb	0	; () banked
  5584  0025E8  6F88               	movwf	(??_DCmotors_calibration+1)& (0+255),b
  5585  0025EA  0E2B               	movlw	43
  5586  0025EC  6F87               	movwf	??_DCmotors_calibration& (0+255),b
  5587  0025EE  0E00               	movlw	0
  5588  0025F0                     u6237:
  5589  0025F0  2EE8               	decfsz	wreg,f,c
  5590  0025F2  D7FE               	bra	u6237
  5591  0025F4  2F87               	decfsz	??_DCmotors_calibration& (0+255),f,b
  5592  0025F6  D7FC               	bra	u6237
  5593  0025F8  2F88               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
  5594  0025FA  D7FA               	bra	u6237
  5595  0025FC  F000               	nop	
  5596  0025FE                     l636:
  5597                           
  5598                           ;DC_motors.c: 237:     while(okay<1){
  5599  0025FE  0100               	movlb	0	; () banked
  5600  002600  5189               	movf	DCmotors_calibration@okay& (0+255),w,b
  5601  002602  B4D8               	btfsc	status,2,c
  5602  002604  EF06  F013         	goto	u5121
  5603  002608  EF08  F013         	goto	u5120
  5604  00260C                     u5121:
  5605  00260C  EFAD  F011         	goto	l637
  5606  002610                     u5120:
  5607  002610                     
  5608                           ; BSR set to: 0
  5609  002610  0012               	return		;funcret
  5610  002612                     __end_of_DCmotors_calibration:
  5611                           	callstack 0
  5612                           
  5613 ;; *************** function _turnright *****************
  5614 ;; Defined at:
  5615 ;;		line 225 in file "DC_motors.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  mL              2   29[BANK0 ] PTR struct .
  5618 ;;		 -> main@motorL(9), 
  5619 ;;  mR              2   31[BANK0 ] PTR struct .
  5620 ;;		 -> main@motorR(9), 
  5621 ;;  deg             2   33[BANK0 ] unsigned int 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5633 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5636 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5637 ;;Total ram usage:        6 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 10
  5640 ;; This function calls:
  5641 ;;		_left
  5642 ;;		_right
  5643 ;; This function is called by:
  5644 ;;		_colourcards_readRGBC
  5645 ;;		_DCmotors_calibration
  5646 ;;		_DCmotors_testing
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text36
  5651  003A4A                     __ptext36:
  5652                           	callstack 0
  5653  003A4A                     _turnright:
  5654                           	callstack 19
  5655  003A4A                     
  5656                           ;DC_motors.c: 226:     if (returnhome_flag==0) {right(mL, mR, deg);}
  5657  003A4A  0100               	movlb	0	; () banked
  5658  003A4C  51B5               	movf	_returnhome_flag& (0+255),w,b	;volatile
  5659  003A4E  A4D8               	btfss	status,2,c
  5660  003A50  EF2C  F01D         	goto	u4981
  5661  003A54  EF2E  F01D         	goto	u4980
  5662  003A58                     u4981:
  5663  003A58  EF3E  F01D         	goto	l4709
  5664  003A5C                     u4980:
  5665  003A5C                     
  5666                           ; BSR set to: 0
  5667  003A5C  C07D  F06D         	movff	turnright@mL,right@mL
  5668  003A60  C07E  F06E         	movff	turnright@mL+1,right@mL+1
  5669  003A64  C07F  F06F         	movff	turnright@mR,right@mR
  5670  003A68  C080  F070         	movff	turnright@mR+1,right@mR+1
  5671  003A6C  C081  F071         	movff	turnright@deg,right@deg
  5672  003A70  C082  F072         	movff	turnright@deg+1,right@deg+1
  5673  003A74  EC27  F014         	call	_right	;wreg free
  5674  003A78  EF4C  F01D         	goto	l628
  5675  003A7C                     l4709:
  5676                           
  5677                           ; BSR set to: 0
  5678  003A7C  C07D  F06D         	movff	turnright@mL,left@mL
  5679  003A80  C07E  F06E         	movff	turnright@mL+1,left@mL+1
  5680  003A84  C07F  F06F         	movff	turnright@mR,left@mR
  5681  003A88  C080  F070         	movff	turnright@mR+1,left@mR+1
  5682  003A8C  C081  F071         	movff	turnright@deg,left@deg
  5683  003A90  C082  F072         	movff	turnright@deg+1,left@deg+1
  5684  003A94  EC2A  F015         	call	_left	;wreg free
  5685  003A98                     l628:
  5686  003A98  0012               	return		;funcret
  5687  003A9A                     __end_of_turnright:
  5688                           	callstack 0
  5689                           
  5690 ;; *************** function _turnleft *****************
  5691 ;; Defined at:
  5692 ;;		line 216 in file "DC_motors.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  mL              2   29[BANK0 ] PTR struct .
  5695 ;;		 -> main@motorL(9), 
  5696 ;;  mR              2   31[BANK0 ] PTR struct .
  5697 ;;		 -> main@motorR(9), 
  5698 ;;  deg             2   33[BANK0 ] unsigned int 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5710 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5713 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5714 ;;Total ram usage:        6 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 10
  5717 ;; This function calls:
  5718 ;;		_left
  5719 ;;		_right
  5720 ;; This function is called by:
  5721 ;;		_colourcards_readRGBC
  5722 ;;		_DCmotors_calibration
  5723 ;;		_DCmotors_testing
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text37
  5728  003A9A                     __ptext37:
  5729                           	callstack 0
  5730  003A9A                     _turnleft:
  5731                           	callstack 19
  5732  003A9A                     
  5733                           ;DC_motors.c: 217:     if (returnhome_flag==0) {left(mL, mR, deg);}
  5734  003A9A  0100               	movlb	0	; () banked
  5735  003A9C  51B5               	movf	_returnhome_flag& (0+255),w,b	;volatile
  5736  003A9E  A4D8               	btfss	status,2,c
  5737  003AA0  EF54  F01D         	goto	u4991
  5738  003AA4  EF56  F01D         	goto	u4990
  5739  003AA8                     u4991:
  5740  003AA8  EF66  F01D         	goto	l4715
  5741  003AAC                     u4990:
  5742  003AAC                     
  5743                           ; BSR set to: 0
  5744  003AAC  C07D  F06D         	movff	turnleft@mL,left@mL
  5745  003AB0  C07E  F06E         	movff	turnleft@mL+1,left@mL+1
  5746  003AB4  C07F  F06F         	movff	turnleft@mR,left@mR
  5747  003AB8  C080  F070         	movff	turnleft@mR+1,left@mR+1
  5748  003ABC  C081  F071         	movff	turnleft@deg,left@deg
  5749  003AC0  C082  F072         	movff	turnleft@deg+1,left@deg+1
  5750  003AC4  EC2A  F015         	call	_left	;wreg free
  5751  003AC8  EF74  F01D         	goto	l623
  5752  003ACC                     l4715:
  5753                           
  5754                           ; BSR set to: 0
  5755  003ACC  C07D  F06D         	movff	turnleft@mL,right@mL
  5756  003AD0  C07E  F06E         	movff	turnleft@mL+1,right@mL+1
  5757  003AD4  C07F  F06F         	movff	turnleft@mR,right@mR
  5758  003AD8  C080  F070         	movff	turnleft@mR+1,right@mR+1
  5759  003ADC  C081  F071         	movff	turnleft@deg,right@deg
  5760  003AE0  C082  F072         	movff	turnleft@deg+1,right@deg+1
  5761  003AE4  EC27  F014         	call	_right	;wreg free
  5762  003AE8                     l623:
  5763  003AE8  0012               	return		;funcret
  5764  003AEA                     __end_of_turnleft:
  5765                           	callstack 0
  5766                           
  5767 ;; *************** function _right *****************
  5768 ;; Defined at:
  5769 ;;		line 185 in file "DC_motors.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  mL              2   13[BANK0 ] PTR struct .
  5772 ;;		 -> main@motorL(9), 
  5773 ;;  mR              2   15[BANK0 ] PTR struct .
  5774 ;;		 -> main@motorR(9), 
  5775 ;;  deg             2   17[BANK0 ] unsigned int 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  delay           4   19[BANK0 ] unsigned int 
  5778 ;;  i               2   27[BANK0 ] unsigned int 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      void 
  5781 ;; Registers used:
  5782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5788 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5789 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5790 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5791 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5792 ;;Total ram usage:       17 bytes
  5793 ;; Hardware stack levels used: 1
  5794 ;; Hardware stack levels required when called: 9
  5795 ;; This function calls:
  5796 ;;		_DCmotors_setPWM
  5797 ;;		___fladd
  5798 ;;		___fldiv
  5799 ;;		___flge
  5800 ;;		___flmul
  5801 ;;		___xxtofl
  5802 ;; This function is called by:
  5803 ;;		_turnleft
  5804 ;;		_turnright
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           	psect	text38
  5809  00284E                     __ptext38:
  5810                           	callstack 0
  5811  00284E                     _right:
  5812                           	callstack 19
  5813  00284E                     
  5814                           ;DC_motors.c: 187:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  5815  00284E  0E23               	movlw	35
  5816  002850  6E35               	movwf	___fladd@a^0,c
  5817  002852  0EDB               	movlw	219
  5818  002854  6E36               	movwf	(___fladd@a+1)^0,c
  5819  002856  0E7B               	movlw	123
  5820  002858  6E37               	movwf	(___fladd@a+2)^0,c
  5821  00285A  0E42               	movlw	66
  5822  00285C  6E38               	movwf	(___fladd@a+3)^0,c
  5823  00285E  0E6F               	movlw	111
  5824  002860  6E1C               	movwf	___flmul@a^0,c
  5825  002862  0EF0               	movlw	240
  5826  002864  6E1D               	movwf	(___flmul@a+1)^0,c
  5827  002866  0E01               	movlw	1
  5828  002868  6E1E               	movwf	(___flmul@a+2)^0,c
  5829  00286A  0E40               	movlw	64
  5830  00286C  6E1F               	movwf	(___flmul@a+3)^0,c
  5831  00286E  C071  F00A         	movff	right@deg,___xxtofl@val
  5832  002872  C072  F00B         	movff	right@deg+1,___xxtofl@val+1
  5833  002876  6A0C               	clrf	(___xxtofl@val+2)^0,c
  5834  002878  6A0D               	clrf	(___xxtofl@val+3)^0,c
  5835  00287A  0E00               	movlw	0
  5836  00287C  EC17  F017         	call	___xxtofl
  5837  002880  C00A  F018         	movff	?___xxtofl,___flmul@b
  5838  002884  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  5839  002888  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  5840  00288C  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  5841  002890  ECB7  F00D         	call	___flmul	;wreg free
  5842  002894  C018  F031         	movff	?___flmul,___fladd@b
  5843  002898  C019  F032         	movff	?___flmul+1,___fladd@b+1
  5844  00289C  C01A  F033         	movff	?___flmul+2,___fladd@b+2
  5845  0028A0  C01B  F034         	movff	?___flmul+3,___fladd@b+3
  5846  0028A4  EC57  F00B         	call	___fladd	;wreg free
  5847  0028A8  C031  F077         	movff	?___fladd,_right$3194
  5848  0028AC  C032  F078         	movff	?___fladd+1,_right$3194+1
  5849  0028B0  C033  F079         	movff	?___fladd+2,_right$3194+2
  5850  0028B4  C034  F07A         	movff	?___fladd+3,_right$3194+3
  5851                           
  5852                           ;DC_motors.c: 187:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  5853  0028B8  0E00               	movlw	0
  5854  0028BA  6E1C               	movwf	___flmul@a^0,c
  5855  0028BC  0E00               	movlw	0
  5856  0028BE  6E1D               	movwf	(___flmul@a+1)^0,c
  5857  0028C0  0EB4               	movlw	180
  5858  0028C2  6E1E               	movwf	(___flmul@a+2)^0,c
  5859  0028C4  0E43               	movlw	67
  5860  0028C6  6E1F               	movwf	(___flmul@a+3)^0,c
  5861  0028C8  C077  F018         	movff	_right$3194,___flmul@b
  5862  0028CC  C078  F019         	movff	_right$3194+1,___flmul@b+1
  5863  0028D0  C079  F01A         	movff	_right$3194+2,___flmul@b+2
  5864  0028D4  C07A  F01B         	movff	_right$3194+3,___flmul@b+3
  5865  0028D8  ECB7  F00D         	call	___flmul	;wreg free
  5866  0028DC  C018  F041         	movff	?___flmul,___fldiv@b
  5867  0028E0  C019  F042         	movff	?___flmul+1,___fldiv@b+1
  5868  0028E4  C01A  F043         	movff	?___flmul+2,___fldiv@b+2
  5869  0028E8  C01B  F044         	movff	?___flmul+3,___fldiv@b+3
  5870  0028EC  C04E  F00A         	movff	_turnright_calangle,___xxtofl@val	;volatile
  5871  0028F0  C04F  F00B         	movff	_turnright_calangle+1,___xxtofl@val+1	;volatile
  5872  0028F4  0E00               	movlw	0
  5873  0028F6  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  5874  0028F8  0EFF               	movlw	-1
  5875  0028FA  6E0C               	movwf	(___xxtofl@val+2)^0,c
  5876  0028FC  6E0D               	movwf	(___xxtofl@val+3)^0,c
  5877  0028FE  0E01               	movlw	1
  5878  002900  EC17  F017         	call	___xxtofl
  5879  002904  C00A  F045         	movff	?___xxtofl,___fldiv@a
  5880  002908  C00B  F046         	movff	?___xxtofl+1,___fldiv@a+1
  5881  00290C  C00C  F047         	movff	?___xxtofl+2,___fldiv@a+2
  5882  002910  C00D  F048         	movff	?___xxtofl+3,___fldiv@a+3
  5883  002914  ECCC  F00F         	call	___fldiv	;wreg free
  5884  002918  C041  F073         	movff	?___fldiv,right@delay
  5885  00291C  C042  F074         	movff	?___fldiv+1,right@delay+1
  5886  002920  C043  F075         	movff	?___fldiv+2,right@delay+2
  5887  002924  C044  F076         	movff	?___fldiv+3,right@delay+3
  5888  002928                     
  5889                           ;DC_motors.c: 190:     mL->direction = 1;
  5890  002928  0100               	movlb	0	; () banked
  5891  00292A  EE20 F001          	lfsr	2,1
  5892  00292E  516D               	movf	right@mL& (0+255),w,b
  5893  002930  26D9               	addwf	fsr2l,f,c
  5894  002932  516E               	movf	(right@mL+1)& (0+255),w,b
  5895  002934  22DA               	addwfc	fsr2h,f,c
  5896  002936  0E01               	movlw	1
  5897  002938  6EDF               	movwf	indf2,c
  5898  00293A                     
  5899                           ; BSR set to: 0
  5900                           ;DC_motors.c: 191:     mR->direction = 0;
  5901  00293A  EE20 F001          	lfsr	2,1
  5902  00293E  516F               	movf	right@mR& (0+255),w,b
  5903  002940  26D9               	addwf	fsr2l,f,c
  5904  002942  5170               	movf	(right@mR+1)& (0+255),w,b
  5905  002944  22DA               	addwfc	fsr2h,f,c
  5906  002946  0E00               	movlw	0
  5907  002948  6EDF               	movwf	indf2,c
  5908  00294A                     
  5909                           ; BSR set to: 0
  5910                           ;DC_motors.c: 194:     LATHbits.LATH0 = 1;
  5911  00294A  8080               	bsf	128,0,c	;volatile
  5912                           
  5913                           ;DC_motors.c: 195:     while((mL->power < 70) || (mR->power < 70)){
  5914  00294C  EFDC  F014         	goto	l4679
  5915  002950                     l4665:
  5916                           
  5917                           ;DC_motors.c: 197:         if (mL->power < 70) {mL->power += 10;}
  5918  002950  C06D  FFD9         	movff	right@mL,fsr2l
  5919  002954  C06E  FFDA         	movff	right@mL+1,fsr2h
  5920  002958  0E46               	movlw	70
  5921  00295A  60DF               	cpfslt	indf2,c
  5922  00295C  EFB2  F014         	goto	u4931
  5923  002960  EFB4  F014         	goto	u4930
  5924  002964                     u4931:
  5925  002964  EFBA  F014         	goto	l4669
  5926  002968                     u4930:
  5927  002968  C06D  FFD9         	movff	right@mL,fsr2l
  5928  00296C  C06E  FFDA         	movff	right@mL+1,fsr2h
  5929  002970  0E0A               	movlw	10
  5930  002972  26DF               	addwf	indf2,f,c
  5931  002974                     l4669:
  5932                           
  5933                           ;DC_motors.c: 198:         if (mR->power < 70) {mR->power += 10;}
  5934  002974  C06F  FFD9         	movff	right@mR,fsr2l
  5935  002978  C070  FFDA         	movff	right@mR+1,fsr2h
  5936  00297C  0E46               	movlw	70
  5937  00297E  60DF               	cpfslt	indf2,c
  5938  002980  EFC4  F014         	goto	u4941
  5939  002984  EFC6  F014         	goto	u4940
  5940  002988                     u4941:
  5941  002988  EFCC  F014         	goto	l4673
  5942  00298C                     u4940:
  5943  00298C  C06F  FFD9         	movff	right@mR,fsr2l
  5944  002990  C070  FFDA         	movff	right@mR+1,fsr2h
  5945  002994  0E0A               	movlw	10
  5946  002996  26DF               	addwf	indf2,f,c
  5947  002998                     l4673:
  5948                           
  5949                           ;DC_motors.c: 201:         DCmotors_setPWM(mL);
  5950  002998  C06D  F018         	movff	right@mL,DCmotors_setPWM@m
  5951  00299C  C06E  F019         	movff	right@mL+1,DCmotors_setPWM@m+1
  5952  0029A0  EC2D  F016         	call	_DCmotors_setPWM	;wreg free
  5953  0029A4                     
  5954                           ;DC_motors.c: 202:         DCmotors_setPWM(mR);
  5955  0029A4  C06F  F018         	movff	right@mR,DCmotors_setPWM@m
  5956  0029A8  C070  F019         	movff	right@mR+1,DCmotors_setPWM@m+1
  5957  0029AC  EC2D  F016         	call	_DCmotors_setPWM	;wreg free
  5958  0029B0                     
  5959                           ;DC_motors.c: 203:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  5960  0029B0  0EA0               	movlw	160
  5961  0029B2                     u6247:
  5962  0029B2  D000               	nop2	
  5963  0029B4  2EE8               	decfsz	wreg,f,c
  5964  0029B6  D7FD               	bra	u6247
  5965  0029B8                     l4679:
  5966                           
  5967                           ;DC_motors.c: 195:     while((mL->power < 70) || (mR->power < 70)){
  5968  0029B8  C06D  FFD9         	movff	right@mL,fsr2l
  5969  0029BC  C06E  FFDA         	movff	right@mL+1,fsr2h
  5970  0029C0  0E45               	movlw	69
  5971  0029C2  64DF               	cpfsgt	indf2,c
  5972  0029C4  EFE6  F014         	goto	u4951
  5973  0029C8  EFE8  F014         	goto	u4950
  5974  0029CC                     u4951:
  5975  0029CC  EFA8  F014         	goto	l4665
  5976  0029D0                     u4950:
  5977  0029D0  C06F  FFD9         	movff	right@mR,fsr2l
  5978  0029D4  C070  FFDA         	movff	right@mR+1,fsr2h
  5979  0029D8  0E45               	movlw	69
  5980  0029DA  64DF               	cpfsgt	indf2,c
  5981  0029DC  EFF2  F014         	goto	u4961
  5982  0029E0  EFF4  F014         	goto	u4960
  5983  0029E4                     u4961:
  5984  0029E4  EFA8  F014         	goto	l4665
  5985  0029E8                     u4960:
  5986  0029E8                     
  5987                           ;DC_motors.c: 206:     unsigned int i;;DC_motors.c: 207:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  5988  0029E8  0E00               	movlw	0
  5989  0029EA  0100               	movlb	0	; () banked
  5990  0029EC  6F7C               	movwf	(right@i+1)& (0+255),b
  5991  0029EE  0E00               	movlw	0
  5992  0029F0  6F7B               	movwf	right@i& (0+255),b
  5993  0029F2  EF06  F015         	goto	l4689
  5994  0029F6                     l4685:
  5995  0029F6  0E15               	movlw	21
  5996  0029F8  6E4D               	movwf	??_right^0,c
  5997  0029FA  0EC6               	movlw	198
  5998  0029FC                     u6257:
  5999  0029FC  2EE8               	decfsz	wreg,f,c
  6000  0029FE  D7FE               	bra	u6257
  6001  002A00  2E4D               	decfsz	??_right^0,f,c
  6002  002A02  D7FC               	bra	u6257
  6003  002A04  D000               	nop2	
  6004  002A06  0100               	movlb	0	; () banked
  6005  002A08  4B7B               	infsnz	right@i& (0+255),f,b
  6006  002A0A  2B7C               	incf	(right@i+1)& (0+255),f,b
  6007  002A0C                     l4689:
  6008                           
  6009                           ; BSR set to: 0
  6010  002A0C  C07B  F00A         	movff	right@i,___xxtofl@val
  6011  002A10  C07C  F00B         	movff	right@i+1,___xxtofl@val+1
  6012  002A14  6A0C               	clrf	(___xxtofl@val+2)^0,c
  6013  002A16  6A0D               	clrf	(___xxtofl@val+3)^0,c
  6014  002A18  0E00               	movlw	0
  6015  002A1A  EC17  F017         	call	___xxtofl
  6016  002A1E  C00A  F018         	movff	?___xxtofl,___flge@ff1
  6017  002A22  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  6018  002A26  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  6019  002A2A  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  6020  002A2E  C073  F01C         	movff	right@delay,___flge@ff2
  6021  002A32  C074  F01D         	movff	right@delay+1,___flge@ff2+1
  6022  002A36  C075  F01E         	movff	right@delay+2,___flge@ff2+2
  6023  002A3A  C076  F01F         	movff	right@delay+3,___flge@ff2+3
  6024  002A3E  EC0C  F01A         	call	___flge	;wreg free
  6025  002A42  A0D8               	btfss	status,0,c
  6026  002A44  EF26  F015         	goto	u4971
  6027  002A48  EF28  F015         	goto	u4970
  6028  002A4C                     u4971:
  6029  002A4C  EFFB  F014         	goto	l4685
  6030  002A50                     u4970:
  6031  002A50                     
  6032                           ;DC_motors.c: 209:     LATHbits.LATH0 = 0;
  6033  002A50  9080               	bcf	128,0,c	;volatile
  6034  002A52  0012               	return		;funcret
  6035  002A54                     __end_of_right:
  6036                           	callstack 0
  6037                           
  6038 ;; *************** function _left *****************
  6039 ;; Defined at:
  6040 ;;		line 155 in file "DC_motors.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  mL              2   13[BANK0 ] PTR struct .
  6043 ;;		 -> main@motorL(9), 
  6044 ;;  mR              2   15[BANK0 ] PTR struct .
  6045 ;;		 -> main@motorR(9), 
  6046 ;;  deg             2   17[BANK0 ] unsigned int 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  delay           4   19[BANK0 ] unsigned int 
  6049 ;;  i               2   27[BANK0 ] unsigned int 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6059 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6063 ;;Total ram usage:       17 bytes
  6064 ;; Hardware stack levels used: 1
  6065 ;; Hardware stack levels required when called: 9
  6066 ;; This function calls:
  6067 ;;		_DCmotors_setPWM
  6068 ;;		___fladd
  6069 ;;		___fldiv
  6070 ;;		___flge
  6071 ;;		___flmul
  6072 ;;		___xxtofl
  6073 ;; This function is called by:
  6074 ;;		_turnleft
  6075 ;;		_turnright
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text39
  6080  002A54                     __ptext39:
  6081                           	callstack 0
  6082  002A54                     _left:
  6083                           	callstack 19
  6084  002A54                     
  6085                           ;DC_motors.c: 157:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  6086  002A54  0E4A               	movlw	74
  6087  002A56  6E35               	movwf	___fladd@a^0,c
  6088  002A58  0E0C               	movlw	12
  6089  002A5A  6E36               	movwf	(___fladd@a+1)^0,c
  6090  002A5C  0EFC               	movlw	252
  6091  002A5E  6E37               	movwf	(___fladd@a+2)^0,c
  6092  002A60  0E41               	movlw	65
  6093  002A62  6E38               	movwf	(___fladd@a+3)^0,c
  6094  002A64  0E7D               	movlw	125
  6095  002A66  6E1C               	movwf	___flmul@a^0,c
  6096  002A68  0E3F               	movlw	63
  6097  002A6A  6E1D               	movwf	(___flmul@a+1)^0,c
  6098  002A6C  0E15               	movlw	21
  6099  002A6E  6E1E               	movwf	(___flmul@a+2)^0,c
  6100  002A70  0E40               	movlw	64
  6101  002A72  6E1F               	movwf	(___flmul@a+3)^0,c
  6102  002A74  C071  F00A         	movff	left@deg,___xxtofl@val
  6103  002A78  C072  F00B         	movff	left@deg+1,___xxtofl@val+1
  6104  002A7C  6A0C               	clrf	(___xxtofl@val+2)^0,c
  6105  002A7E  6A0D               	clrf	(___xxtofl@val+3)^0,c
  6106  002A80  0E00               	movlw	0
  6107  002A82  EC17  F017         	call	___xxtofl
  6108  002A86  C00A  F018         	movff	?___xxtofl,___flmul@b
  6109  002A8A  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
  6110  002A8E  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
  6111  002A92  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
  6112  002A96  ECB7  F00D         	call	___flmul	;wreg free
  6113  002A9A  C018  F031         	movff	?___flmul,___fladd@b
  6114  002A9E  C019  F032         	movff	?___flmul+1,___fladd@b+1
  6115  002AA2  C01A  F033         	movff	?___flmul+2,___fladd@b+2
  6116  002AA6  C01B  F034         	movff	?___flmul+3,___fladd@b+3
  6117  002AAA  EC57  F00B         	call	___fladd	;wreg free
  6118  002AAE  C031  F077         	movff	?___fladd,_left$3193
  6119  002AB2  C032  F078         	movff	?___fladd+1,_left$3193+1
  6120  002AB6  C033  F079         	movff	?___fladd+2,_left$3193+2
  6121  002ABA  C034  F07A         	movff	?___fladd+3,_left$3193+3
  6122                           
  6123                           ;DC_motors.c: 157:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  6124  002ABE  0E00               	movlw	0
  6125  002AC0  6E1C               	movwf	___flmul@a^0,c
  6126  002AC2  0E00               	movlw	0
  6127  002AC4  6E1D               	movwf	(___flmul@a+1)^0,c
  6128  002AC6  0EB4               	movlw	180
  6129  002AC8  6E1E               	movwf	(___flmul@a+2)^0,c
  6130  002ACA  0E43               	movlw	67
  6131  002ACC  6E1F               	movwf	(___flmul@a+3)^0,c
  6132  002ACE  C077  F018         	movff	_left$3193,___flmul@b
  6133  002AD2  C078  F019         	movff	_left$3193+1,___flmul@b+1
  6134  002AD6  C079  F01A         	movff	_left$3193+2,___flmul@b+2
  6135  002ADA  C07A  F01B         	movff	_left$3193+3,___flmul@b+3
  6136  002ADE  ECB7  F00D         	call	___flmul	;wreg free
  6137  002AE2  C018  F041         	movff	?___flmul,___fldiv@b
  6138  002AE6  C019  F042         	movff	?___flmul+1,___fldiv@b+1
  6139  002AEA  C01A  F043         	movff	?___flmul+2,___fldiv@b+2
  6140  002AEE  C01B  F044         	movff	?___flmul+3,___fldiv@b+3
  6141  002AF2  C050  F00A         	movff	_turnleft_calangle,___xxtofl@val	;volatile
  6142  002AF6  C051  F00B         	movff	_turnleft_calangle+1,___xxtofl@val+1	;volatile
  6143  002AFA  0E00               	movlw	0
  6144  002AFC  BE0B               	btfsc	(___xxtofl@val+1)^0,7,c
  6145  002AFE  0EFF               	movlw	-1
  6146  002B00  6E0C               	movwf	(___xxtofl@val+2)^0,c
  6147  002B02  6E0D               	movwf	(___xxtofl@val+3)^0,c
  6148  002B04  0E01               	movlw	1
  6149  002B06  EC17  F017         	call	___xxtofl
  6150  002B0A  C00A  F045         	movff	?___xxtofl,___fldiv@a
  6151  002B0E  C00B  F046         	movff	?___xxtofl+1,___fldiv@a+1
  6152  002B12  C00C  F047         	movff	?___xxtofl+2,___fldiv@a+2
  6153  002B16  C00D  F048         	movff	?___xxtofl+3,___fldiv@a+3
  6154  002B1A  ECCC  F00F         	call	___fldiv	;wreg free
  6155  002B1E  C041  F073         	movff	?___fldiv,left@delay
  6156  002B22  C042  F074         	movff	?___fldiv+1,left@delay+1
  6157  002B26  C043  F075         	movff	?___fldiv+2,left@delay+2
  6158  002B2A  C044  F076         	movff	?___fldiv+3,left@delay+3
  6159  002B2E                     
  6160                           ;DC_motors.c: 160:     mL->direction = 0;
  6161  002B2E  0100               	movlb	0	; () banked
  6162  002B30  EE20 F001          	lfsr	2,1
  6163  002B34  516D               	movf	left@mL& (0+255),w,b
  6164  002B36  26D9               	addwf	fsr2l,f,c
  6165  002B38  516E               	movf	(left@mL+1)& (0+255),w,b
  6166  002B3A  22DA               	addwfc	fsr2h,f,c
  6167  002B3C  0E00               	movlw	0
  6168  002B3E  6EDF               	movwf	indf2,c
  6169  002B40                     
  6170                           ; BSR set to: 0
  6171                           ;DC_motors.c: 161:     mR->direction = 1;
  6172  002B40  EE20 F001          	lfsr	2,1
  6173  002B44  516F               	movf	left@mR& (0+255),w,b
  6174  002B46  26D9               	addwf	fsr2l,f,c
  6175  002B48  5170               	movf	(left@mR+1)& (0+255),w,b
  6176  002B4A  22DA               	addwfc	fsr2h,f,c
  6177  002B4C  0E01               	movlw	1
  6178  002B4E  6EDF               	movwf	indf2,c
  6179  002B50                     
  6180                           ; BSR set to: 0
  6181                           ;DC_motors.c: 164:     LATFbits.LATF0 = 1;
  6182  002B50  807E               	bsf	126,0,c	;volatile
  6183                           
  6184                           ;DC_motors.c: 165:     while((mL->power < 70) || (mR->power < 70)){
  6185  002B52  EFDF  F015         	goto	l4645
  6186  002B56                     l4631:
  6187                           
  6188                           ;DC_motors.c: 167:         if (mL->power < 70) {mL->power += 10;}
  6189  002B56  C06D  FFD9         	movff	left@mL,fsr2l
  6190  002B5A  C06E  FFDA         	movff	left@mL+1,fsr2h
  6191  002B5E  0E46               	movlw	70
  6192  002B60  60DF               	cpfslt	indf2,c
  6193  002B62  EFB5  F015         	goto	u4881
  6194  002B66  EFB7  F015         	goto	u4880
  6195  002B6A                     u4881:
  6196  002B6A  EFBD  F015         	goto	l4635
  6197  002B6E                     u4880:
  6198  002B6E  C06D  FFD9         	movff	left@mL,fsr2l
  6199  002B72  C06E  FFDA         	movff	left@mL+1,fsr2h
  6200  002B76  0E0A               	movlw	10
  6201  002B78  26DF               	addwf	indf2,f,c
  6202  002B7A                     l4635:
  6203                           
  6204                           ;DC_motors.c: 168:         if (mR->power < 70) {mR->power += 10;}
  6205  002B7A  C06F  FFD9         	movff	left@mR,fsr2l
  6206  002B7E  C070  FFDA         	movff	left@mR+1,fsr2h
  6207  002B82  0E46               	movlw	70
  6208  002B84  60DF               	cpfslt	indf2,c
  6209  002B86  EFC7  F015         	goto	u4891
  6210  002B8A  EFC9  F015         	goto	u4890
  6211  002B8E                     u4891:
  6212  002B8E  EFCF  F015         	goto	l4639
  6213  002B92                     u4890:
  6214  002B92  C06F  FFD9         	movff	left@mR,fsr2l
  6215  002B96  C070  FFDA         	movff	left@mR+1,fsr2h
  6216  002B9A  0E0A               	movlw	10
  6217  002B9C  26DF               	addwf	indf2,f,c
  6218  002B9E                     l4639:
  6219                           
  6220                           ;DC_motors.c: 171:         DCmotors_setPWM(mL);
  6221  002B9E  C06D  F018         	movff	left@mL,DCmotors_setPWM@m
  6222  002BA2  C06E  F019         	movff	left@mL+1,DCmotors_setPWM@m+1
  6223  002BA6  EC2D  F016         	call	_DCmotors_setPWM	;wreg free
  6224  002BAA                     
  6225                           ;DC_motors.c: 172:         DCmotors_setPWM(mR);
  6226  002BAA  C06F  F018         	movff	left@mR,DCmotors_setPWM@m
  6227  002BAE  C070  F019         	movff	left@mR+1,DCmotors_setPWM@m+1
  6228  002BB2  EC2D  F016         	call	_DCmotors_setPWM	;wreg free
  6229  002BB6                     
  6230                           ;DC_motors.c: 173:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  6231  002BB6  0EA0               	movlw	160
  6232  002BB8                     u6267:
  6233  002BB8  D000               	nop2	
  6234  002BBA  2EE8               	decfsz	wreg,f,c
  6235  002BBC  D7FD               	bra	u6267
  6236  002BBE                     l4645:
  6237                           
  6238                           ;DC_motors.c: 165:     while((mL->power < 70) || (mR->power < 70)){
  6239  002BBE  C06D  FFD9         	movff	left@mL,fsr2l
  6240  002BC2  C06E  FFDA         	movff	left@mL+1,fsr2h
  6241  002BC6  0E45               	movlw	69
  6242  002BC8  64DF               	cpfsgt	indf2,c
  6243  002BCA  EFE9  F015         	goto	u4901
  6244  002BCE  EFEB  F015         	goto	u4900
  6245  002BD2                     u4901:
  6246  002BD2  EFAB  F015         	goto	l4631
  6247  002BD6                     u4900:
  6248  002BD6  C06F  FFD9         	movff	left@mR,fsr2l
  6249  002BDA  C070  FFDA         	movff	left@mR+1,fsr2h
  6250  002BDE  0E45               	movlw	69
  6251  002BE0  64DF               	cpfsgt	indf2,c
  6252  002BE2  EFF5  F015         	goto	u4911
  6253  002BE6  EFF7  F015         	goto	u4910
  6254  002BEA                     u4911:
  6255  002BEA  EFAB  F015         	goto	l4631
  6256  002BEE                     u4910:
  6257  002BEE                     
  6258                           ;DC_motors.c: 176:     unsigned int i;;DC_motors.c: 177:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  6259  002BEE  0E00               	movlw	0
  6260  002BF0  0100               	movlb	0	; () banked
  6261  002BF2  6F7C               	movwf	(left@i+1)& (0+255),b
  6262  002BF4  0E00               	movlw	0
  6263  002BF6  6F7B               	movwf	left@i& (0+255),b
  6264  002BF8  EF09  F016         	goto	l4655
  6265  002BFC                     l4651:
  6266  002BFC  0E15               	movlw	21
  6267  002BFE  6E4D               	movwf	??_left^0,c
  6268  002C00  0EC6               	movlw	198
  6269  002C02                     u6277:
  6270  002C02  2EE8               	decfsz	wreg,f,c
  6271  002C04  D7FE               	bra	u6277
  6272  002C06  2E4D               	decfsz	??_left^0,f,c
  6273  002C08  D7FC               	bra	u6277
  6274  002C0A  D000               	nop2	
  6275  002C0C  0100               	movlb	0	; () banked
  6276  002C0E  4B7B               	infsnz	left@i& (0+255),f,b
  6277  002C10  2B7C               	incf	(left@i+1)& (0+255),f,b
  6278  002C12                     l4655:
  6279                           
  6280                           ; BSR set to: 0
  6281  002C12  C07B  F00A         	movff	left@i,___xxtofl@val
  6282  002C16  C07C  F00B         	movff	left@i+1,___xxtofl@val+1
  6283  002C1A  6A0C               	clrf	(___xxtofl@val+2)^0,c
  6284  002C1C  6A0D               	clrf	(___xxtofl@val+3)^0,c
  6285  002C1E  0E00               	movlw	0
  6286  002C20  EC17  F017         	call	___xxtofl
  6287  002C24  C00A  F018         	movff	?___xxtofl,___flge@ff1
  6288  002C28  C00B  F019         	movff	?___xxtofl+1,___flge@ff1+1
  6289  002C2C  C00C  F01A         	movff	?___xxtofl+2,___flge@ff1+2
  6290  002C30  C00D  F01B         	movff	?___xxtofl+3,___flge@ff1+3
  6291  002C34  C073  F01C         	movff	left@delay,___flge@ff2
  6292  002C38  C074  F01D         	movff	left@delay+1,___flge@ff2+1
  6293  002C3C  C075  F01E         	movff	left@delay+2,___flge@ff2+2
  6294  002C40  C076  F01F         	movff	left@delay+3,___flge@ff2+3
  6295  002C44  EC0C  F01A         	call	___flge	;wreg free
  6296  002C48  A0D8               	btfss	status,0,c
  6297  002C4A  EF29  F016         	goto	u4921
  6298  002C4E  EF2B  F016         	goto	u4920
  6299  002C52                     u4921:
  6300  002C52  EFFE  F015         	goto	l4651
  6301  002C56                     u4920:
  6302  002C56                     
  6303                           ;DC_motors.c: 178:     LATFbits.LATF0 = 0;
  6304  002C56  907E               	bcf	126,0,c	;volatile
  6305  002C58  0012               	return		;funcret
  6306  002C5A                     __end_of_left:
  6307                           	callstack 0
  6308                           
  6309 ;; *************** function ___xxtofl *****************
  6310 ;; Defined at:
  6311 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  sign            1    wreg     unsigned char 
  6314 ;;  val             4    9[COMRAM] long 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  sign            1   17[COMRAM] unsigned char 
  6317 ;;  arg             4   19[COMRAM] unsigned long 
  6318 ;;  exp             1   18[COMRAM] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  4    9[COMRAM] unsigned char 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6329 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6331 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6332 ;;Total ram usage:       14 bytes
  6333 ;; Hardware stack levels used: 1
  6334 ;; Hardware stack levels required when called: 7
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_colourcards_normaliseRGBC
  6339 ;;		_left
  6340 ;;		_right
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text40
  6345  002E2E                     __ptext40:
  6346                           	callstack 0
  6347  002E2E                     ___xxtofl:
  6348                           	callstack 20
  6349                           
  6350                           ;incstack = 0
  6351                           ;___xxtofl@sign stored from wreg
  6352  002E2E  6E12               	movwf	___xxtofl@sign^0,c
  6353  002E30  5012               	movf	___xxtofl@sign^0,w,c
  6354  002E32  B4D8               	btfsc	status,2,c
  6355  002E34  EF1E  F017         	goto	u3501
  6356  002E38  EF20  F017         	goto	u3500
  6357  002E3C                     u3501:
  6358  002E3C  EF42  F017         	goto	l1398
  6359  002E40                     u3500:
  6360  002E40  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  6361  002E42  EF27  F017         	goto	u3510
  6362  002E46  EF25  F017         	goto	u3511
  6363  002E4A                     u3511:
  6364  002E4A  EF42  F017         	goto	l1398
  6365  002E4E                     u3510:
  6366  002E4E  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
  6367  002E52  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
  6368  002E56  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
  6369  002E5A  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
  6370  002E5E  1E0E               	comf	??___xxtofl^0,f,c
  6371  002E60  1E0F               	comf	(??___xxtofl+1)^0,f,c
  6372  002E62  1E10               	comf	(??___xxtofl+2)^0,f,c
  6373  002E64  1E11               	comf	(??___xxtofl+3)^0,f,c
  6374  002E66  2A0E               	incf	??___xxtofl^0,f,c
  6375  002E68  0E00               	movlw	0
  6376  002E6A  220F               	addwfc	(??___xxtofl+1)^0,f,c
  6377  002E6C  2210               	addwfc	(??___xxtofl+2)^0,f,c
  6378  002E6E  2211               	addwfc	(??___xxtofl+3)^0,f,c
  6379  002E70  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
  6380  002E74  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
  6381  002E78  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
  6382  002E7C  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
  6383  002E80  EF4A  F017         	goto	l3671
  6384  002E84                     l1398:
  6385  002E84  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
  6386  002E88  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6387  002E8C  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6388  002E90  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6389  002E94                     l3671:
  6390  002E94  500A               	movf	___xxtofl@val^0,w,c
  6391  002E96  100B               	iorwf	(___xxtofl@val+1)^0,w,c
  6392  002E98  100C               	iorwf	(___xxtofl@val+2)^0,w,c
  6393  002E9A  100D               	iorwf	(___xxtofl@val+3)^0,w,c
  6394  002E9C  A4D8               	btfss	status,2,c
  6395  002E9E  EF53  F017         	goto	u3521
  6396  002EA2  EF55  F017         	goto	u3520
  6397  002EA6                     u3521:
  6398  002EA6  EF5F  F017         	goto	l3677
  6399  002EAA                     u3520:
  6400  002EAA  0E00               	movlw	0
  6401  002EAC  6E0A               	movwf	?___xxtofl^0,c
  6402  002EAE  0E00               	movlw	0
  6403  002EB0  6E0B               	movwf	(?___xxtofl+1)^0,c
  6404  002EB2  0E00               	movlw	0
  6405  002EB4  6E0C               	movwf	(?___xxtofl+2)^0,c
  6406  002EB6  0E00               	movlw	0
  6407  002EB8  6E0D               	movwf	(?___xxtofl+3)^0,c
  6408  002EBA  EFF0  F017         	goto	l1401
  6409  002EBE                     l3677:
  6410  002EBE  0E96               	movlw	150
  6411  002EC0  6E13               	movwf	___xxtofl@exp^0,c
  6412  002EC2  EF69  F017         	goto	l3681
  6413  002EC6                     l3679:
  6414  002EC6  2A13               	incf	___xxtofl@exp^0,f,c
  6415  002EC8  90D8               	bcf	status,0,c
  6416  002ECA  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  6417  002ECC  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  6418  002ECE  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  6419  002ED0  3214               	rrcf	___xxtofl@arg^0,f,c
  6420  002ED2                     l3681:
  6421  002ED2  0E00               	movlw	0
  6422  002ED4  1414               	andwf	___xxtofl@arg^0,w,c
  6423  002ED6  6E0E               	movwf	??___xxtofl^0,c
  6424  002ED8  0E00               	movlw	0
  6425  002EDA  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  6426  002EDC  6E0F               	movwf	(??___xxtofl+1)^0,c
  6427  002EDE  0E00               	movlw	0
  6428  002EE0  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  6429  002EE2  6E10               	movwf	(??___xxtofl+2)^0,c
  6430  002EE4  0EFE               	movlw	254
  6431  002EE6  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  6432  002EE8  6E11               	movwf	(??___xxtofl+3)^0,c
  6433  002EEA  500E               	movf	??___xxtofl^0,w,c
  6434  002EEC  100F               	iorwf	(??___xxtofl+1)^0,w,c
  6435  002EEE  1010               	iorwf	(??___xxtofl+2)^0,w,c
  6436  002EF0  1011               	iorwf	(??___xxtofl+3)^0,w,c
  6437  002EF2  A4D8               	btfss	status,2,c
  6438  002EF4  EF7E  F017         	goto	u3531
  6439  002EF8  EF80  F017         	goto	u3530
  6440  002EFC                     u3531:
  6441  002EFC  EF63  F017         	goto	l3679
  6442  002F00                     u3530:
  6443  002F00  EF8E  F017         	goto	l1405
  6444  002F04                     l3683:
  6445  002F04  2A13               	incf	___xxtofl@exp^0,f,c
  6446  002F06  0E01               	movlw	1
  6447  002F08  2614               	addwf	___xxtofl@arg^0,f,c
  6448  002F0A  0E00               	movlw	0
  6449  002F0C  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
  6450  002F0E  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
  6451  002F10  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
  6452  002F12  90D8               	bcf	status,0,c
  6453  002F14  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
  6454  002F16  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
  6455  002F18  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
  6456  002F1A  3214               	rrcf	___xxtofl@arg^0,f,c
  6457  002F1C                     l1405:
  6458  002F1C  0E00               	movlw	0
  6459  002F1E  1414               	andwf	___xxtofl@arg^0,w,c
  6460  002F20  6E0E               	movwf	??___xxtofl^0,c
  6461  002F22  0E00               	movlw	0
  6462  002F24  1415               	andwf	(___xxtofl@arg+1)^0,w,c
  6463  002F26  6E0F               	movwf	(??___xxtofl+1)^0,c
  6464  002F28  0E00               	movlw	0
  6465  002F2A  1416               	andwf	(___xxtofl@arg+2)^0,w,c
  6466  002F2C  6E10               	movwf	(??___xxtofl+2)^0,c
  6467  002F2E  0EFF               	movlw	255
  6468  002F30  1417               	andwf	(___xxtofl@arg+3)^0,w,c
  6469  002F32  6E11               	movwf	(??___xxtofl+3)^0,c
  6470  002F34  500E               	movf	??___xxtofl^0,w,c
  6471  002F36  100F               	iorwf	(??___xxtofl+1)^0,w,c
  6472  002F38  1010               	iorwf	(??___xxtofl+2)^0,w,c
  6473  002F3A  1011               	iorwf	(??___xxtofl+3)^0,w,c
  6474  002F3C  A4D8               	btfss	status,2,c
  6475  002F3E  EFA3  F017         	goto	u3541
  6476  002F42  EFA5  F017         	goto	u3540
  6477  002F46                     u3541:
  6478  002F46  EF82  F017         	goto	l3683
  6479  002F4A                     u3540:
  6480  002F4A  EFAD  F017         	goto	l3691
  6481  002F4E                     l3689:
  6482  002F4E  0613               	decf	___xxtofl@exp^0,f,c
  6483  002F50  90D8               	bcf	status,0,c
  6484  002F52  3614               	rlcf	___xxtofl@arg^0,f,c
  6485  002F54  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
  6486  002F56  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
  6487  002F58  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
  6488  002F5A                     l3691:
  6489  002F5A  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
  6490  002F5C  EFB2  F017         	goto	u3551
  6491  002F60  EFB4  F017         	goto	u3550
  6492  002F64                     u3551:
  6493  002F64  EFBC  F017         	goto	l1412
  6494  002F68                     u3550:
  6495  002F68  0E02               	movlw	2
  6496  002F6A  6013               	cpfslt	___xxtofl@exp^0,c
  6497  002F6C  EFBA  F017         	goto	u3561
  6498  002F70  EFBC  F017         	goto	u3560
  6499  002F74                     u3561:
  6500  002F74  EFA7  F017         	goto	l3689
  6501  002F78                     u3560:
  6502  002F78                     l1412:
  6503  002F78  B013               	btfsc	___xxtofl@exp^0,0,c
  6504  002F7A  EFC1  F017         	goto	u3571
  6505  002F7E  EFC3  F017         	goto	u3570
  6506  002F82                     u3571:
  6507  002F82  EFC4  F017         	goto	l3697
  6508  002F86                     u3570:
  6509  002F86  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
  6510  002F88                     l3697:
  6511  002F88  90D8               	bcf	status,0,c
  6512  002F8A  3213               	rrcf	___xxtofl@exp^0,f,c
  6513  002F8C  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
  6514  002F90  6A0F               	clrf	(??___xxtofl+1)^0,c
  6515  002F92  6A10               	clrf	(??___xxtofl+2)^0,c
  6516  002F94  6A11               	clrf	(??___xxtofl+3)^0,c
  6517  002F96  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
  6518  002F9A  6A10               	clrf	(??___xxtofl+2)^0,c
  6519  002F9C  6A0F               	clrf	(??___xxtofl+1)^0,c
  6520  002F9E  6A0E               	clrf	??___xxtofl^0,c
  6521  002FA0  500E               	movf	??___xxtofl^0,w,c
  6522  002FA2  1214               	iorwf	___xxtofl@arg^0,f,c
  6523  002FA4  500F               	movf	(??___xxtofl+1)^0,w,c
  6524  002FA6  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
  6525  002FA8  5010               	movf	(??___xxtofl+2)^0,w,c
  6526  002FAA  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
  6527  002FAC  5011               	movf	(??___xxtofl+3)^0,w,c
  6528  002FAE  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
  6529  002FB0  5012               	movf	___xxtofl@sign^0,w,c
  6530  002FB2  B4D8               	btfsc	status,2,c
  6531  002FB4  EFDE  F017         	goto	u3581
  6532  002FB8  EFE0  F017         	goto	u3580
  6533  002FBC                     u3581:
  6534  002FBC  EFE8  F017         	goto	l3707
  6535  002FC0                     u3580:
  6536  002FC0  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
  6537  002FC2  EFE7  F017         	goto	u3590
  6538  002FC6  EFE5  F017         	goto	u3591
  6539  002FCA                     u3591:
  6540  002FCA  EFE8  F017         	goto	l3707
  6541  002FCE                     u3590:
  6542  002FCE  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
  6543  002FD0                     l3707:
  6544  002FD0  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
  6545  002FD4  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
  6546  002FD8  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
  6547  002FDC  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
  6548  002FE0                     l1401:
  6549  002FE0  0012               	return		;funcret
  6550  002FE2                     __end_of___xxtofl:
  6551                           	callstack 0
  6552                           
  6553 ;; *************** function ___flmul *****************
  6554 ;; Defined at:
  6555 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  b               4   23[COMRAM] unsigned char 
  6558 ;;  a               4   27[COMRAM] unsigned char 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  prod            4   42[COMRAM] struct .
  6561 ;;  grs             4   36[COMRAM] unsigned long 
  6562 ;;  temp            2   46[COMRAM] struct .
  6563 ;;  bexp            1   41[COMRAM] unsigned char 
  6564 ;;  aexp            1   40[COMRAM] unsigned char 
  6565 ;;  sign            1   35[COMRAM] unsigned char 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  4   23[COMRAM] unsigned char 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0, prodl, prodh
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6575 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6576 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6577 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6578 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6579 ;;Total ram usage:       25 bytes
  6580 ;; Hardware stack levels used: 1
  6581 ;; Hardware stack levels required when called: 7
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_left
  6586 ;;		_right
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           	psect	text41
  6591  001B6E                     __ptext41:
  6592                           	callstack 0
  6593  001B6E                     ___flmul:
  6594                           	callstack 20
  6595  001B6E  501B               	movf	(___flmul@b+3)^0,w,c
  6596  001B70  0B80               	andlw	128
  6597  001B72  6E24               	movwf	___flmul@sign^0,c
  6598  001B74  501B               	movf	(___flmul@b+3)^0,w,c
  6599  001B76  241B               	addwf	(___flmul@b+3)^0,w,c
  6600  001B78  6E2A               	movwf	___flmul@bexp^0,c
  6601  001B7A  AE1A               	btfss	(___flmul@b+2)^0,7,c
  6602  001B7C  EFC2  F00D         	goto	u3261
  6603  001B80  EFC4  F00D         	goto	u3260
  6604  001B84                     u3261:
  6605  001B84  EFC5  F00D         	goto	l3519
  6606  001B88                     u3260:
  6607  001B88  802A               	bsf	___flmul@bexp^0,0,c
  6608  001B8A                     l3519:
  6609  001B8A  502A               	movf	___flmul@bexp^0,w,c
  6610  001B8C  B4D8               	btfsc	status,2,c
  6611  001B8E  EFCB  F00D         	goto	u3271
  6612  001B92  EFCD  F00D         	goto	u3270
  6613  001B96                     u3271:
  6614  001B96  EFE0  F00D         	goto	l3527
  6615  001B9A                     u3270:
  6616  001B9A  282A               	incf	___flmul@bexp^0,w,c
  6617  001B9C  A4D8               	btfss	status,2,c
  6618  001B9E  EFD3  F00D         	goto	u3281
  6619  001BA2  EFD5  F00D         	goto	u3280
  6620  001BA6                     u3281:
  6621  001BA6  EFDD  F00D         	goto	l3525
  6622  001BAA                     u3280:
  6623  001BAA  0E00               	movlw	0
  6624  001BAC  6E18               	movwf	___flmul@b^0,c
  6625  001BAE  0E00               	movlw	0
  6626  001BB0  6E19               	movwf	(___flmul@b+1)^0,c
  6627  001BB2  0E00               	movlw	0
  6628  001BB4  6E1A               	movwf	(___flmul@b+2)^0,c
  6629  001BB6  0E00               	movlw	0
  6630  001BB8  6E1B               	movwf	(___flmul@b+3)^0,c
  6631  001BBA                     l3525:
  6632  001BBA  8E1A               	bsf	(___flmul@b+2)^0,7,c
  6633  001BBC  EFE8  F00D         	goto	l3529
  6634  001BC0                     l3527:
  6635  001BC0  0E00               	movlw	0
  6636  001BC2  6E18               	movwf	___flmul@b^0,c
  6637  001BC4  0E00               	movlw	0
  6638  001BC6  6E19               	movwf	(___flmul@b+1)^0,c
  6639  001BC8  0E00               	movlw	0
  6640  001BCA  6E1A               	movwf	(___flmul@b+2)^0,c
  6641  001BCC  0E00               	movlw	0
  6642  001BCE  6E1B               	movwf	(___flmul@b+3)^0,c
  6643  001BD0                     l3529:
  6644  001BD0  501F               	movf	(___flmul@a+3)^0,w,c
  6645  001BD2  0B80               	andlw	128
  6646  001BD4  1A24               	xorwf	___flmul@sign^0,f,c
  6647  001BD6  501F               	movf	(___flmul@a+3)^0,w,c
  6648  001BD8  241F               	addwf	(___flmul@a+3)^0,w,c
  6649  001BDA  6E29               	movwf	___flmul@aexp^0,c
  6650  001BDC  AE1E               	btfss	(___flmul@a+2)^0,7,c
  6651  001BDE  EFF3  F00D         	goto	u3291
  6652  001BE2  EFF5  F00D         	goto	u3290
  6653  001BE6                     u3291:
  6654  001BE6  EFF6  F00D         	goto	l3537
  6655  001BEA                     u3290:
  6656  001BEA  8029               	bsf	___flmul@aexp^0,0,c
  6657  001BEC                     l3537:
  6658  001BEC  5029               	movf	___flmul@aexp^0,w,c
  6659  001BEE  B4D8               	btfsc	status,2,c
  6660  001BF0  EFFC  F00D         	goto	u3301
  6661  001BF4  EFFE  F00D         	goto	u3300
  6662  001BF8                     u3301:
  6663  001BF8  EF11  F00E         	goto	l3545
  6664  001BFC                     u3300:
  6665  001BFC  2829               	incf	___flmul@aexp^0,w,c
  6666  001BFE  A4D8               	btfss	status,2,c
  6667  001C00  EF04  F00E         	goto	u3311
  6668  001C04  EF06  F00E         	goto	u3310
  6669  001C08                     u3311:
  6670  001C08  EF0E  F00E         	goto	l3543
  6671  001C0C                     u3310:
  6672  001C0C  0E00               	movlw	0
  6673  001C0E  6E1C               	movwf	___flmul@a^0,c
  6674  001C10  0E00               	movlw	0
  6675  001C12  6E1D               	movwf	(___flmul@a+1)^0,c
  6676  001C14  0E00               	movlw	0
  6677  001C16  6E1E               	movwf	(___flmul@a+2)^0,c
  6678  001C18  0E00               	movlw	0
  6679  001C1A  6E1F               	movwf	(___flmul@a+3)^0,c
  6680  001C1C                     l3543:
  6681  001C1C  8E1E               	bsf	(___flmul@a+2)^0,7,c
  6682  001C1E  EF19  F00E         	goto	l1357
  6683  001C22                     l3545:
  6684  001C22  0E00               	movlw	0
  6685  001C24  6E1C               	movwf	___flmul@a^0,c
  6686  001C26  0E00               	movlw	0
  6687  001C28  6E1D               	movwf	(___flmul@a+1)^0,c
  6688  001C2A  0E00               	movlw	0
  6689  001C2C  6E1E               	movwf	(___flmul@a+2)^0,c
  6690  001C2E  0E00               	movlw	0
  6691  001C30  6E1F               	movwf	(___flmul@a+3)^0,c
  6692  001C32                     l1357:
  6693  001C32  5029               	movf	___flmul@aexp^0,w,c
  6694  001C34  B4D8               	btfsc	status,2,c
  6695  001C36  EF1F  F00E         	goto	u3321
  6696  001C3A  EF21  F00E         	goto	u3320
  6697  001C3E                     u3321:
  6698  001C3E  EF29  F00E         	goto	l3549
  6699  001C42                     u3320:
  6700  001C42  502A               	movf	___flmul@bexp^0,w,c
  6701  001C44  A4D8               	btfss	status,2,c
  6702  001C46  EF27  F00E         	goto	u3331
  6703  001C4A  EF29  F00E         	goto	u3330
  6704  001C4E                     u3331:
  6705  001C4E  EF33  F00E         	goto	l3553
  6706  001C52                     u3330:
  6707  001C52                     l3549:
  6708  001C52  0E00               	movlw	0
  6709  001C54  6E18               	movwf	?___flmul^0,c
  6710  001C56  0E00               	movlw	0
  6711  001C58  6E19               	movwf	(?___flmul+1)^0,c
  6712  001C5A  0E00               	movlw	0
  6713  001C5C  6E1A               	movwf	(?___flmul+2)^0,c
  6714  001C5E  0E00               	movlw	0
  6715  001C60  6E1B               	movwf	(?___flmul+3)^0,c
  6716  001C62  EFCB  F00F         	goto	l1361
  6717  001C66                     l3553:
  6718  001C66  501E               	movf	(___flmul@a+2)^0,w,c
  6719  001C68  0218               	mulwf	___flmul@b^0,c
  6720  001C6A  CFF3 F02F          	movff	prodl,___flmul@temp
  6721  001C6E  CFF4 F030          	movff	prodh,___flmul@temp+1
  6722  001C72  502F               	movf	___flmul@temp^0,w,c
  6723  001C74  6E25               	movwf	___flmul@grs^0,c
  6724  001C76  6A26               	clrf	(___flmul@grs+1)^0,c
  6725  001C78  6A27               	clrf	(___flmul@grs+2)^0,c
  6726  001C7A  6A28               	clrf	(___flmul@grs+3)^0,c
  6727  001C7C  5030               	movf	(___flmul@temp+1)^0,w,c
  6728  001C7E  6E2B               	movwf	___flmul@prod^0,c
  6729  001C80  6A2C               	clrf	(___flmul@prod+1)^0,c
  6730  001C82  6A2D               	clrf	(___flmul@prod+2)^0,c
  6731  001C84  6A2E               	clrf	(___flmul@prod+3)^0,c
  6732  001C86  501D               	movf	(___flmul@a+1)^0,w,c
  6733  001C88  0219               	mulwf	(___flmul@b+1)^0,c
  6734  001C8A  CFF3 F02F          	movff	prodl,___flmul@temp
  6735  001C8E  CFF4 F030          	movff	prodh,___flmul@temp+1
  6736  001C92  502F               	movf	___flmul@temp^0,w,c
  6737  001C94  2625               	addwf	___flmul@grs^0,f,c
  6738  001C96  0E00               	movlw	0
  6739  001C98  2226               	addwfc	(___flmul@grs+1)^0,f,c
  6740  001C9A  2227               	addwfc	(___flmul@grs+2)^0,f,c
  6741  001C9C  2228               	addwfc	(___flmul@grs+3)^0,f,c
  6742  001C9E  5030               	movf	(___flmul@temp+1)^0,w,c
  6743  001CA0  262B               	addwf	___flmul@prod^0,f,c
  6744  001CA2  0E00               	movlw	0
  6745  001CA4  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6746  001CA6  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6747  001CA8  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6748  001CAA  501C               	movf	___flmul@a^0,w,c
  6749  001CAC  021A               	mulwf	(___flmul@b+2)^0,c
  6750  001CAE  CFF3 F02F          	movff	prodl,___flmul@temp
  6751  001CB2  CFF4 F030          	movff	prodh,___flmul@temp+1
  6752  001CB6  502F               	movf	___flmul@temp^0,w,c
  6753  001CB8  2625               	addwf	___flmul@grs^0,f,c
  6754  001CBA  0E00               	movlw	0
  6755  001CBC  2226               	addwfc	(___flmul@grs+1)^0,f,c
  6756  001CBE  2227               	addwfc	(___flmul@grs+2)^0,f,c
  6757  001CC0  2228               	addwfc	(___flmul@grs+3)^0,f,c
  6758  001CC2  5030               	movf	(___flmul@temp+1)^0,w,c
  6759  001CC4  262B               	addwf	___flmul@prod^0,f,c
  6760  001CC6  0E00               	movlw	0
  6761  001CC8  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6762  001CCA  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6763  001CCC  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6764  001CCE  C027  F028         	movff	___flmul@grs+2,___flmul@grs+3
  6765  001CD2  C026  F027         	movff	___flmul@grs+1,___flmul@grs+2
  6766  001CD6  C025  F026         	movff	___flmul@grs,___flmul@grs+1
  6767  001CDA  6A25               	clrf	___flmul@grs^0,c
  6768  001CDC  501C               	movf	___flmul@a^0,w,c
  6769  001CDE  0219               	mulwf	(___flmul@b+1)^0,c
  6770  001CE0  CFF3 F02F          	movff	prodl,___flmul@temp
  6771  001CE4  CFF4 F030          	movff	prodh,___flmul@temp+1
  6772  001CE8  502F               	movf	___flmul@temp^0,w,c
  6773  001CEA  2625               	addwf	___flmul@grs^0,f,c
  6774  001CEC  5030               	movf	(___flmul@temp+1)^0,w,c
  6775  001CEE  2226               	addwfc	(___flmul@grs+1)^0,f,c
  6776  001CF0  0E00               	movlw	0
  6777  001CF2  2227               	addwfc	(___flmul@grs+2)^0,f,c
  6778  001CF4  0E00               	movlw	0
  6779  001CF6  2228               	addwfc	(___flmul@grs+3)^0,f,c
  6780  001CF8  501D               	movf	(___flmul@a+1)^0,w,c
  6781  001CFA  0218               	mulwf	___flmul@b^0,c
  6782  001CFC  CFF3 F02F          	movff	prodl,___flmul@temp
  6783  001D00  CFF4 F030          	movff	prodh,___flmul@temp+1
  6784  001D04  502F               	movf	___flmul@temp^0,w,c
  6785  001D06  2625               	addwf	___flmul@grs^0,f,c
  6786  001D08  5030               	movf	(___flmul@temp+1)^0,w,c
  6787  001D0A  2226               	addwfc	(___flmul@grs+1)^0,f,c
  6788  001D0C  0E00               	movlw	0
  6789  001D0E  2227               	addwfc	(___flmul@grs+2)^0,f,c
  6790  001D10  0E00               	movlw	0
  6791  001D12  2228               	addwfc	(___flmul@grs+3)^0,f,c
  6792  001D14  C027  F028         	movff	___flmul@grs+2,___flmul@grs+3
  6793  001D18  C026  F027         	movff	___flmul@grs+1,___flmul@grs+2
  6794  001D1C  C025  F026         	movff	___flmul@grs,___flmul@grs+1
  6795  001D20  6A25               	clrf	___flmul@grs^0,c
  6796  001D22  501C               	movf	___flmul@a^0,w,c
  6797  001D24  0218               	mulwf	___flmul@b^0,c
  6798  001D26  CFF3 F02F          	movff	prodl,___flmul@temp
  6799  001D2A  CFF4 F030          	movff	prodh,___flmul@temp+1
  6800  001D2E  502F               	movf	___flmul@temp^0,w,c
  6801  001D30  2625               	addwf	___flmul@grs^0,f,c
  6802  001D32  5030               	movf	(___flmul@temp+1)^0,w,c
  6803  001D34  2226               	addwfc	(___flmul@grs+1)^0,f,c
  6804  001D36  0E00               	movlw	0
  6805  001D38  2227               	addwfc	(___flmul@grs+2)^0,f,c
  6806  001D3A  0E00               	movlw	0
  6807  001D3C  2228               	addwfc	(___flmul@grs+3)^0,f,c
  6808  001D3E  501E               	movf	(___flmul@a+2)^0,w,c
  6809  001D40  0219               	mulwf	(___flmul@b+1)^0,c
  6810  001D42  CFF3 F02F          	movff	prodl,___flmul@temp
  6811  001D46  CFF4 F030          	movff	prodh,___flmul@temp+1
  6812  001D4A  502F               	movf	___flmul@temp^0,w,c
  6813  001D4C  262B               	addwf	___flmul@prod^0,f,c
  6814  001D4E  5030               	movf	(___flmul@temp+1)^0,w,c
  6815  001D50  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6816  001D52  0E00               	movlw	0
  6817  001D54  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6818  001D56  0E00               	movlw	0
  6819  001D58  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6820  001D5A  501D               	movf	(___flmul@a+1)^0,w,c
  6821  001D5C  021A               	mulwf	(___flmul@b+2)^0,c
  6822  001D5E  CFF3 F02F          	movff	prodl,___flmul@temp
  6823  001D62  CFF4 F030          	movff	prodh,___flmul@temp+1
  6824  001D66  502F               	movf	___flmul@temp^0,w,c
  6825  001D68  262B               	addwf	___flmul@prod^0,f,c
  6826  001D6A  5030               	movf	(___flmul@temp+1)^0,w,c
  6827  001D6C  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6828  001D6E  0E00               	movlw	0
  6829  001D70  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6830  001D72  0E00               	movlw	0
  6831  001D74  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6832  001D76  501E               	movf	(___flmul@a+2)^0,w,c
  6833  001D78  021A               	mulwf	(___flmul@b+2)^0,c
  6834  001D7A  CFF3 F02F          	movff	prodl,___flmul@temp
  6835  001D7E  CFF4 F030          	movff	prodh,___flmul@temp+1
  6836  001D82  502F               	movf	___flmul@temp^0,w,c
  6837  001D84  6E20               	movwf	??___flmul^0,c
  6838  001D86  5030               	movf	(___flmul@temp+1)^0,w,c
  6839  001D88  6E21               	movwf	(??___flmul+1)^0,c
  6840  001D8A  6A22               	clrf	(??___flmul+2)^0,c
  6841  001D8C  6A23               	clrf	(??___flmul+3)^0,c
  6842  001D8E  C022  F023         	movff	??___flmul+2,??___flmul+3
  6843  001D92  C021  F022         	movff	??___flmul+1,??___flmul+2
  6844  001D96  C020  F021         	movff	??___flmul,??___flmul+1
  6845  001D9A  6A20               	clrf	??___flmul^0,c
  6846  001D9C  5020               	movf	??___flmul^0,w,c
  6847  001D9E  262B               	addwf	___flmul@prod^0,f,c
  6848  001DA0  5021               	movf	(??___flmul+1)^0,w,c
  6849  001DA2  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6850  001DA4  5022               	movf	(??___flmul+2)^0,w,c
  6851  001DA6  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6852  001DA8  5023               	movf	(??___flmul+3)^0,w,c
  6853  001DAA  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6854  001DAC  C025  F020         	movff	___flmul@grs,??___flmul
  6855  001DB0  C026  F021         	movff	___flmul@grs+1,??___flmul+1
  6856  001DB4  C027  F022         	movff	___flmul@grs+2,??___flmul+2
  6857  001DB8  C028  F023         	movff	___flmul@grs+3,??___flmul+3
  6858  001DBC  0E19               	movlw	25
  6859  001DBE  EFE6  F00E         	goto	u3340
  6860  001DC2                     u3345:
  6861  001DC2  90D8               	bcf	status,0,c
  6862  001DC4  3223               	rrcf	(??___flmul+3)^0,f,c
  6863  001DC6  3222               	rrcf	(??___flmul+2)^0,f,c
  6864  001DC8  3221               	rrcf	(??___flmul+1)^0,f,c
  6865  001DCA  3220               	rrcf	??___flmul^0,f,c
  6866  001DCC                     u3340:
  6867  001DCC  2EE8               	decfsz	wreg,f,c
  6868  001DCE  EFE1  F00E         	goto	u3345
  6869  001DD2  5020               	movf	??___flmul^0,w,c
  6870  001DD4  262B               	addwf	___flmul@prod^0,f,c
  6871  001DD6  5021               	movf	(??___flmul+1)^0,w,c
  6872  001DD8  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6873  001DDA  5022               	movf	(??___flmul+2)^0,w,c
  6874  001DDC  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6875  001DDE  5023               	movf	(??___flmul+3)^0,w,c
  6876  001DE0  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6877  001DE2  C027  F028         	movff	___flmul@grs+2,___flmul@grs+3
  6878  001DE6  C026  F027         	movff	___flmul@grs+1,___flmul@grs+2
  6879  001DEA  C025  F026         	movff	___flmul@grs,___flmul@grs+1
  6880  001DEE  6A25               	clrf	___flmul@grs^0,c
  6881  001DF0  5029               	movf	___flmul@aexp^0,w,c
  6882  001DF2  C02A  F020         	movff	___flmul@bexp,??___flmul
  6883  001DF6  6A21               	clrf	(??___flmul+1)^0,c
  6884  001DF8  2620               	addwf	??___flmul^0,f,c
  6885  001DFA  0E00               	movlw	0
  6886  001DFC  2221               	addwfc	(??___flmul+1)^0,f,c
  6887  001DFE  0E82               	movlw	130
  6888  001E00  2420               	addwf	??___flmul^0,w,c
  6889  001E02  6E2F               	movwf	___flmul@temp^0,c
  6890  001E04  0EFF               	movlw	255
  6891  001E06  2021               	addwfc	(??___flmul+1)^0,w,c
  6892  001E08  6E30               	movwf	(___flmul@temp+1)^0,c
  6893  001E0A  EF1C  F00F         	goto	l3601
  6894  001E0E                     l3595:
  6895  001E0E  90D8               	bcf	status,0,c
  6896  001E10  362B               	rlcf	___flmul@prod^0,f,c
  6897  001E12  362C               	rlcf	(___flmul@prod+1)^0,f,c
  6898  001E14  362D               	rlcf	(___flmul@prod+2)^0,f,c
  6899  001E16  362E               	rlcf	(___flmul@prod+3)^0,f,c
  6900  001E18  AE28               	btfss	(___flmul@grs+3)^0,7,c
  6901  001E1A  EF11  F00F         	goto	u3351
  6902  001E1E  EF13  F00F         	goto	u3350
  6903  001E22                     u3351:
  6904  001E22  EF14  F00F         	goto	l1364
  6905  001E26                     u3350:
  6906  001E26  802B               	bsf	___flmul@prod^0,0,c
  6907  001E28                     l1364:
  6908  001E28  90D8               	bcf	status,0,c
  6909  001E2A  3625               	rlcf	___flmul@grs^0,f,c
  6910  001E2C  3626               	rlcf	(___flmul@grs+1)^0,f,c
  6911  001E2E  3627               	rlcf	(___flmul@grs+2)^0,f,c
  6912  001E30  3628               	rlcf	(___flmul@grs+3)^0,f,c
  6913  001E32  062F               	decf	___flmul@temp^0,f,c
  6914  001E34  A0D8               	btfss	status,0,c
  6915  001E36  0630               	decf	(___flmul@temp+1)^0,f,c
  6916  001E38                     l3601:
  6917  001E38  AE2D               	btfss	(___flmul@prod+2)^0,7,c
  6918  001E3A  EF21  F00F         	goto	u3361
  6919  001E3E  EF23  F00F         	goto	u3360
  6920  001E42                     u3361:
  6921  001E42  EF07  F00F         	goto	l3595
  6922  001E46                     u3360:
  6923  001E46  0E00               	movlw	0
  6924  001E48  6E29               	movwf	___flmul@aexp^0,c
  6925  001E4A  AE28               	btfss	(___flmul@grs+3)^0,7,c
  6926  001E4C  EF2A  F00F         	goto	u3371
  6927  001E50  EF2C  F00F         	goto	u3370
  6928  001E54                     u3371:
  6929  001E54  EF50  F00F         	goto	l1366
  6930  001E58                     u3370:
  6931  001E58  0EFF               	movlw	255
  6932  001E5A  1425               	andwf	___flmul@grs^0,w,c
  6933  001E5C  6E20               	movwf	??___flmul^0,c
  6934  001E5E  0EFF               	movlw	255
  6935  001E60  1426               	andwf	(___flmul@grs+1)^0,w,c
  6936  001E62  6E21               	movwf	(??___flmul+1)^0,c
  6937  001E64  0EFF               	movlw	255
  6938  001E66  1427               	andwf	(___flmul@grs+2)^0,w,c
  6939  001E68  6E22               	movwf	(??___flmul+2)^0,c
  6940  001E6A  0E7F               	movlw	127
  6941  001E6C  1428               	andwf	(___flmul@grs+3)^0,w,c
  6942  001E6E  6E23               	movwf	(??___flmul+3)^0,c
  6943  001E70  5020               	movf	??___flmul^0,w,c
  6944  001E72  1021               	iorwf	(??___flmul+1)^0,w,c
  6945  001E74  1022               	iorwf	(??___flmul+2)^0,w,c
  6946  001E76  1023               	iorwf	(??___flmul+3)^0,w,c
  6947  001E78  B4D8               	btfsc	status,2,c
  6948  001E7A  EF41  F00F         	goto	u3381
  6949  001E7E  EF43  F00F         	goto	u3380
  6950  001E82                     u3381:
  6951  001E82  EF47  F00F         	goto	l1367
  6952  001E86                     u3380:
  6953  001E86                     l3609:
  6954  001E86  0E01               	movlw	1
  6955  001E88  6E29               	movwf	___flmul@aexp^0,c
  6956  001E8A  EF50  F00F         	goto	l1366
  6957  001E8E                     l1367:
  6958  001E8E  A02B               	btfss	___flmul@prod^0,0,c
  6959  001E90  EF4C  F00F         	goto	u3391
  6960  001E94  EF4E  F00F         	goto	u3390
  6961  001E98                     u3391:
  6962  001E98  EF50  F00F         	goto	l1366
  6963  001E9C                     u3390:
  6964  001E9C  EF43  F00F         	goto	l3609
  6965  001EA0                     l1366:
  6966  001EA0  5029               	movf	___flmul@aexp^0,w,c
  6967  001EA2  B4D8               	btfsc	status,2,c
  6968  001EA4  EF56  F00F         	goto	u3401
  6969  001EA8  EF58  F00F         	goto	u3400
  6970  001EAC                     u3401:
  6971  001EAC  EF7C  F00F         	goto	l3621
  6972  001EB0                     u3400:
  6973  001EB0  0E01               	movlw	1
  6974  001EB2  262B               	addwf	___flmul@prod^0,f,c
  6975  001EB4  0E00               	movlw	0
  6976  001EB6  222C               	addwfc	(___flmul@prod+1)^0,f,c
  6977  001EB8  222D               	addwfc	(___flmul@prod+2)^0,f,c
  6978  001EBA  222E               	addwfc	(___flmul@prod+3)^0,f,c
  6979  001EBC  A02E               	btfss	(___flmul@prod+3)^0,0,c
  6980  001EBE  EF63  F00F         	goto	u3411
  6981  001EC2  EF65  F00F         	goto	u3410
  6982  001EC6                     u3411:
  6983  001EC6  EF7C  F00F         	goto	l3621
  6984  001ECA                     u3410:
  6985  001ECA  C02B  F020         	movff	___flmul@prod,??___flmul
  6986  001ECE  C02C  F021         	movff	___flmul@prod+1,??___flmul+1
  6987  001ED2  C02D  F022         	movff	___flmul@prod+2,??___flmul+2
  6988  001ED6  C02E  F023         	movff	___flmul@prod+3,??___flmul+3
  6989  001EDA  3423               	rlcf	(??___flmul+3)^0,w,c
  6990  001EDC  3223               	rrcf	(??___flmul+3)^0,f,c
  6991  001EDE  3222               	rrcf	(??___flmul+2)^0,f,c
  6992  001EE0  3221               	rrcf	(??___flmul+1)^0,f,c
  6993  001EE2  3220               	rrcf	??___flmul^0,f,c
  6994  001EE4  C020  F02B         	movff	??___flmul,___flmul@prod
  6995  001EE8  C021  F02C         	movff	??___flmul+1,___flmul@prod+1
  6996  001EEC  C022  F02D         	movff	??___flmul+2,___flmul@prod+2
  6997  001EF0  C023  F02E         	movff	??___flmul+3,___flmul@prod+3
  6998  001EF4  4A2F               	infsnz	___flmul@temp^0,f,c
  6999  001EF6  2A30               	incf	(___flmul@temp+1)^0,f,c
  7000  001EF8                     l3621:
  7001  001EF8  BE30               	btfsc	(___flmul@temp+1)^0,7,c
  7002  001EFA  EF87  F00F         	goto	u3421
  7003  001EFE  5030               	movf	(___flmul@temp+1)^0,w,c
  7004  001F00  E108               	bnz	u3420
  7005  001F02  282F               	incf	___flmul@temp^0,w,c
  7006  001F04  A0D8               	btfss	status,0,c
  7007  001F06  EF87  F00F         	goto	u3421
  7008  001F0A  EF89  F00F         	goto	u3420
  7009  001F0E                     u3421:
  7010  001F0E  EF93  F00F         	goto	l3625
  7011  001F12                     u3420:
  7012  001F12  0E00               	movlw	0
  7013  001F14  6E2B               	movwf	___flmul@prod^0,c
  7014  001F16  0E00               	movlw	0
  7015  001F18  6E2C               	movwf	(___flmul@prod+1)^0,c
  7016  001F1A  0E80               	movlw	128
  7017  001F1C  6E2D               	movwf	(___flmul@prod+2)^0,c
  7018  001F1E  0E7F               	movlw	127
  7019  001F20  6E2E               	movwf	(___flmul@prod+3)^0,c
  7020  001F22  EFC1  F00F         	goto	l3637
  7021  001F26                     l3625:
  7022  001F26  BE30               	btfsc	(___flmul@temp+1)^0,7,c
  7023  001F28  EFA0  F00F         	goto	u3430
  7024  001F2C  5030               	movf	(___flmul@temp+1)^0,w,c
  7025  001F2E  E106               	bnz	u3431
  7026  001F30  042F               	decf	___flmul@temp^0,w,c
  7027  001F32  B0D8               	btfsc	status,0,c
  7028  001F34  EF9E  F00F         	goto	u3431
  7029  001F38  EFA0  F00F         	goto	u3430
  7030  001F3C                     u3431:
  7031  001F3C  EFAC  F00F         	goto	l1374
  7032  001F40                     u3430:
  7033  001F40  0E00               	movlw	0
  7034  001F42  6E2B               	movwf	___flmul@prod^0,c
  7035  001F44  0E00               	movlw	0
  7036  001F46  6E2C               	movwf	(___flmul@prod+1)^0,c
  7037  001F48  0E00               	movlw	0
  7038  001F4A  6E2D               	movwf	(___flmul@prod+2)^0,c
  7039  001F4C  0E00               	movlw	0
  7040  001F4E  6E2E               	movwf	(___flmul@prod+3)^0,c
  7041  001F50  0E00               	movlw	0
  7042  001F52  6E24               	movwf	___flmul@sign^0,c
  7043  001F54  EFC1  F00F         	goto	l3637
  7044  001F58                     l1374:
  7045  001F58  C02F  F02A         	movff	___flmul@temp,___flmul@bexp
  7046  001F5C  0EFF               	movlw	255
  7047  001F5E  162B               	andwf	___flmul@prod^0,f,c
  7048  001F60  0EFF               	movlw	255
  7049  001F62  162C               	andwf	(___flmul@prod+1)^0,f,c
  7050  001F64  0E7F               	movlw	127
  7051  001F66  162D               	andwf	(___flmul@prod+2)^0,f,c
  7052  001F68  0E00               	movlw	0
  7053  001F6A  162E               	andwf	(___flmul@prod+3)^0,f,c
  7054  001F6C  A02A               	btfss	___flmul@bexp^0,0,c
  7055  001F6E  EFBB  F00F         	goto	u3441
  7056  001F72  EFBD  F00F         	goto	u3440
  7057  001F76                     u3441:
  7058  001F76  EFBE  F00F         	goto	l3635
  7059  001F7A                     u3440:
  7060  001F7A  8E2D               	bsf	(___flmul@prod+2)^0,7,c
  7061  001F7C                     l3635:
  7062  001F7C  90D8               	bcf	status,0,c
  7063  001F7E  302A               	rrcf	___flmul@bexp^0,w,c
  7064  001F80  6E2E               	movwf	(___flmul@prod+3)^0,c
  7065  001F82                     l3637:
  7066  001F82  5024               	movf	___flmul@sign^0,w,c
  7067  001F84  122E               	iorwf	(___flmul@prod+3)^0,f,c
  7068  001F86  C02B  F018         	movff	___flmul@prod,?___flmul
  7069  001F8A  C02C  F019         	movff	___flmul@prod+1,?___flmul+1
  7070  001F8E  C02D  F01A         	movff	___flmul@prod+2,?___flmul+2
  7071  001F92  C02E  F01B         	movff	___flmul@prod+3,?___flmul+3
  7072  001F96                     l1361:
  7073  001F96  0012               	return		;funcret
  7074  001F98                     __end_of___flmul:
  7075                           	callstack 0
  7076                           
  7077 ;; *************** function ___flge *****************
  7078 ;; Defined at:
  7079 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  ff1             4   23[COMRAM] unsigned char 
  7082 ;;  ff2             4   27[COMRAM] unsigned char 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;		None
  7085 ;; Return value:  Size  Location     Type
  7086 ;;		None               void
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7094 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7096 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7097 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7098 ;;Total ram usage:       12 bytes
  7099 ;; Hardware stack levels used: 1
  7100 ;; Hardware stack levels required when called: 7
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_colourcards_readRGBC
  7105 ;;		_left
  7106 ;;		_right
  7107 ;;		_colourcards_testingRGBC
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	text42
  7112  003418                     __ptext42:
  7113                           	callstack 0
  7114  003418                     ___flge:
  7115                           	callstack 20
  7116  003418  0E00               	movlw	0
  7117  00341A  1418               	andwf	___flge@ff1^0,w,c
  7118  00341C  6E20               	movwf	??___flge^0,c
  7119  00341E  0E00               	movlw	0
  7120  003420  1419               	andwf	(___flge@ff1+1)^0,w,c
  7121  003422  6E21               	movwf	(??___flge+1)^0,c
  7122  003424  0E80               	movlw	128
  7123  003426  141A               	andwf	(___flge@ff1+2)^0,w,c
  7124  003428  6E22               	movwf	(??___flge+2)^0,c
  7125  00342A  0E7F               	movlw	127
  7126  00342C  141B               	andwf	(___flge@ff1+3)^0,w,c
  7127  00342E  6E23               	movwf	(??___flge+3)^0,c
  7128  003430  5020               	movf	??___flge^0,w,c
  7129  003432  1021               	iorwf	(??___flge+1)^0,w,c
  7130  003434  1022               	iorwf	(??___flge+2)^0,w,c
  7131  003436  1023               	iorwf	(??___flge+3)^0,w,c
  7132  003438  A4D8               	btfss	status,2,c
  7133  00343A  EF21  F01A         	goto	u3451
  7134  00343E  EF23  F01A         	goto	u3450
  7135  003442                     u3451:
  7136  003442  EF2B  F01A         	goto	l3647
  7137  003446                     u3450:
  7138  003446  0E00               	movlw	0
  7139  003448  6E18               	movwf	___flge@ff1^0,c
  7140  00344A  0E00               	movlw	0
  7141  00344C  6E19               	movwf	(___flge@ff1+1)^0,c
  7142  00344E  0E00               	movlw	0
  7143  003450  6E1A               	movwf	(___flge@ff1+2)^0,c
  7144  003452  0E00               	movlw	0
  7145  003454  6E1B               	movwf	(___flge@ff1+3)^0,c
  7146  003456                     l3647:
  7147  003456  0E00               	movlw	0
  7148  003458  141C               	andwf	___flge@ff2^0,w,c
  7149  00345A  6E20               	movwf	??___flge^0,c
  7150  00345C  0E00               	movlw	0
  7151  00345E  141D               	andwf	(___flge@ff2+1)^0,w,c
  7152  003460  6E21               	movwf	(??___flge+1)^0,c
  7153  003462  0E80               	movlw	128
  7154  003464  141E               	andwf	(___flge@ff2+2)^0,w,c
  7155  003466  6E22               	movwf	(??___flge+2)^0,c
  7156  003468  0E7F               	movlw	127
  7157  00346A  141F               	andwf	(___flge@ff2+3)^0,w,c
  7158  00346C  6E23               	movwf	(??___flge+3)^0,c
  7159  00346E  5020               	movf	??___flge^0,w,c
  7160  003470  1021               	iorwf	(??___flge+1)^0,w,c
  7161  003472  1022               	iorwf	(??___flge+2)^0,w,c
  7162  003474  1023               	iorwf	(??___flge+3)^0,w,c
  7163  003476  A4D8               	btfss	status,2,c
  7164  003478  EF40  F01A         	goto	u3461
  7165  00347C  EF42  F01A         	goto	u3460
  7166  003480                     u3461:
  7167  003480  EF4A  F01A         	goto	l3651
  7168  003484                     u3460:
  7169  003484  0E00               	movlw	0
  7170  003486  6E1C               	movwf	___flge@ff2^0,c
  7171  003488  0E00               	movlw	0
  7172  00348A  6E1D               	movwf	(___flge@ff2+1)^0,c
  7173  00348C  0E00               	movlw	0
  7174  00348E  6E1E               	movwf	(___flge@ff2+2)^0,c
  7175  003490  0E00               	movlw	0
  7176  003492  6E1F               	movwf	(___flge@ff2+3)^0,c
  7177  003494                     l3651:
  7178  003494  AE1B               	btfss	(___flge@ff1+3)^0,7,c
  7179  003496  EF4F  F01A         	goto	u3471
  7180  00349A  EF51  F01A         	goto	u3470
  7181  00349E                     u3471:
  7182  00349E  EF5A  F01A         	goto	l3655
  7183  0034A2                     u3470:
  7184  0034A2  6C18               	negf	___flge@ff1^0,c
  7185  0034A4  1E19               	comf	(___flge@ff1+1)^0,f,c
  7186  0034A6  B0D8               	btfsc	status,0,c
  7187  0034A8  2A19               	incf	(___flge@ff1+1)^0,f,c
  7188  0034AA  1E1A               	comf	(___flge@ff1+2)^0,f,c
  7189  0034AC  B0D8               	btfsc	status,0,c
  7190  0034AE  2A1A               	incf	(___flge@ff1+2)^0,f,c
  7191  0034B0  0E80               	movlw	128
  7192  0034B2  561B               	subfwb	(___flge@ff1+3)^0,f,c
  7193  0034B4                     l3655:
  7194  0034B4  AE1F               	btfss	(___flge@ff2+3)^0,7,c
  7195  0034B6  EF5F  F01A         	goto	u3481
  7196  0034BA  EF61  F01A         	goto	u3480
  7197  0034BE                     u3481:
  7198  0034BE  EF6A  F01A         	goto	l1008
  7199  0034C2                     u3480:
  7200  0034C2  6C1C               	negf	___flge@ff2^0,c
  7201  0034C4  1E1D               	comf	(___flge@ff2+1)^0,f,c
  7202  0034C6  B0D8               	btfsc	status,0,c
  7203  0034C8  2A1D               	incf	(___flge@ff2+1)^0,f,c
  7204  0034CA  1E1E               	comf	(___flge@ff2+2)^0,f,c
  7205  0034CC  B0D8               	btfsc	status,0,c
  7206  0034CE  2A1E               	incf	(___flge@ff2+2)^0,f,c
  7207  0034D0  0E80               	movlw	128
  7208  0034D2  561F               	subfwb	(___flge@ff2+3)^0,f,c
  7209  0034D4                     l1008:
  7210  0034D4  0E00               	movlw	0
  7211  0034D6  1A18               	xorwf	___flge@ff1^0,f,c
  7212  0034D8  0E00               	movlw	0
  7213  0034DA  1A19               	xorwf	(___flge@ff1+1)^0,f,c
  7214  0034DC  0E00               	movlw	0
  7215  0034DE  1A1A               	xorwf	(___flge@ff1+2)^0,f,c
  7216  0034E0  0E80               	movlw	128
  7217  0034E2  1A1B               	xorwf	(___flge@ff1+3)^0,f,c
  7218  0034E4  0E00               	movlw	0
  7219  0034E6  1A1C               	xorwf	___flge@ff2^0,f,c
  7220  0034E8  0E00               	movlw	0
  7221  0034EA  1A1D               	xorwf	(___flge@ff2+1)^0,f,c
  7222  0034EC  0E00               	movlw	0
  7223  0034EE  1A1E               	xorwf	(___flge@ff2+2)^0,f,c
  7224  0034F0  0E80               	movlw	128
  7225  0034F2  1A1F               	xorwf	(___flge@ff2+3)^0,f,c
  7226  0034F4  501C               	movf	___flge@ff2^0,w,c
  7227  0034F6  5C18               	subwf	___flge@ff1^0,w,c
  7228  0034F8  501D               	movf	(___flge@ff2+1)^0,w,c
  7229  0034FA  5819               	subwfb	(___flge@ff1+1)^0,w,c
  7230  0034FC  501E               	movf	(___flge@ff2+2)^0,w,c
  7231  0034FE  581A               	subwfb	(___flge@ff1+2)^0,w,c
  7232  003500  501F               	movf	(___flge@ff2+3)^0,w,c
  7233  003502  581B               	subwfb	(___flge@ff1+3)^0,w,c
  7234  003504  B0D8               	btfsc	status,0,c
  7235  003506  EF87  F01A         	goto	u3491
  7236  00350A  EF89  F01A         	goto	u3490
  7237  00350E                     u3491:
  7238  00350E  EF8C  F01A         	goto	l3661
  7239  003512                     u3490:
  7240  003512  90D8               	bcf	status,0,c
  7241  003514  EF8D  F01A         	goto	l1013
  7242  003518                     l3661:
  7243  003518  80D8               	bsf	status,0,c
  7244  00351A                     l1013:
  7245  00351A  0012               	return		;funcret
  7246  00351C                     __end_of___flge:
  7247                           	callstack 0
  7248                           
  7249 ;; *************** function ___fldiv *****************
  7250 ;; Defined at:
  7251 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  b               4   64[COMRAM] unsigned char 
  7254 ;;  a               4   68[COMRAM] unsigned char 
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;  grs             4    7[BANK0 ] unsigned long 
  7257 ;;  rem             4    0[BANK0 ] unsigned long 
  7258 ;;  new_exp         2    5[BANK0 ] short 
  7259 ;;  aexp            1   12[BANK0 ] unsigned char 
  7260 ;;  bexp            1   11[BANK0 ] unsigned char 
  7261 ;;  sign            1    4[BANK0 ] unsigned char 
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  4   64[COMRAM] unsigned char 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2, status,0
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7271 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7272 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7273 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7274 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7275 ;;Total ram usage:       25 bytes
  7276 ;; Hardware stack levels used: 1
  7277 ;; Hardware stack levels required when called: 7
  7278 ;; This function calls:
  7279 ;;		Nothing
  7280 ;; This function is called by:
  7281 ;;		_colourcards_normaliseRGBC
  7282 ;;		_left
  7283 ;;		_right
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text43
  7288  001F98                     __ptext43:
  7289                           	callstack 0
  7290  001F98                     ___fldiv:
  7291                           	callstack 20
  7292  001F98  5044               	movf	(___fldiv@b+3)^0,w,c
  7293  001F9A  0B80               	andlw	128
  7294  001F9C  0100               	movlb	0	; () banked
  7295  001F9E  6F64               	movwf	___fldiv@sign& (0+255),b
  7296  001FA0  5044               	movf	(___fldiv@b+3)^0,w,c
  7297  001FA2  2444               	addwf	(___fldiv@b+3)^0,w,c
  7298  001FA4  6F6B               	movwf	___fldiv@bexp& (0+255),b
  7299  001FA6                     
  7300                           ; BSR set to: 0
  7301  001FA6  AE43               	btfss	(___fldiv@b+2)^0,7,c
  7302  001FA8  EFD8  F00F         	goto	u3031
  7303  001FAC  EFDA  F00F         	goto	u3030
  7304  001FB0                     u3031:
  7305  001FB0  EFDB  F00F         	goto	l3381
  7306  001FB4                     u3030:
  7307  001FB4                     
  7308                           ; BSR set to: 0
  7309  001FB4  816B               	bsf	___fldiv@bexp& (0+255),0,b
  7310  001FB6                     l3381:
  7311                           
  7312                           ; BSR set to: 0
  7313  001FB6  516B               	movf	___fldiv@bexp& (0+255),w,b
  7314  001FB8  B4D8               	btfsc	status,2,c
  7315  001FBA  EFE1  F00F         	goto	u3041
  7316  001FBE  EFE3  F00F         	goto	u3040
  7317  001FC2                     u3041:
  7318  001FC2  EFF8  F00F         	goto	l3391
  7319  001FC6                     u3040:
  7320  001FC6                     
  7321                           ; BSR set to: 0
  7322  001FC6  296B               	incf	___fldiv@bexp& (0+255),w,b
  7323  001FC8  A4D8               	btfss	status,2,c
  7324  001FCA  EFE9  F00F         	goto	u3051
  7325  001FCE  EFEB  F00F         	goto	u3050
  7326  001FD2                     u3051:
  7327  001FD2  EFF3  F00F         	goto	l3387
  7328  001FD6                     u3050:
  7329  001FD6                     
  7330                           ; BSR set to: 0
  7331  001FD6  0E00               	movlw	0
  7332  001FD8  6E41               	movwf	___fldiv@b^0,c
  7333  001FDA  0E00               	movlw	0
  7334  001FDC  6E42               	movwf	(___fldiv@b+1)^0,c
  7335  001FDE  0E00               	movlw	0
  7336  001FE0  6E43               	movwf	(___fldiv@b+2)^0,c
  7337  001FE2  0E00               	movlw	0
  7338  001FE4  6E44               	movwf	(___fldiv@b+3)^0,c
  7339  001FE6                     l3387:
  7340                           
  7341                           ; BSR set to: 0
  7342  001FE6  8E43               	bsf	(___fldiv@b+2)^0,7,c
  7343  001FE8                     
  7344                           ; BSR set to: 0
  7345  001FE8  0E00               	movlw	0
  7346  001FEA  6E44               	movwf	(___fldiv@b+3)^0,c
  7347  001FEC  EF00  F010         	goto	l3393
  7348  001FF0                     l3391:
  7349                           
  7350                           ; BSR set to: 0
  7351  001FF0  0E00               	movlw	0
  7352  001FF2  6E41               	movwf	___fldiv@b^0,c
  7353  001FF4  0E00               	movlw	0
  7354  001FF6  6E42               	movwf	(___fldiv@b+1)^0,c
  7355  001FF8  0E00               	movlw	0
  7356  001FFA  6E43               	movwf	(___fldiv@b+2)^0,c
  7357  001FFC  0E00               	movlw	0
  7358  001FFE  6E44               	movwf	(___fldiv@b+3)^0,c
  7359  002000                     l3393:
  7360                           
  7361                           ; BSR set to: 0
  7362  002000  5048               	movf	(___fldiv@a+3)^0,w,c
  7363  002002  0B80               	andlw	128
  7364  002004  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  7365  002006                     
  7366                           ; BSR set to: 0
  7367  002006  5048               	movf	(___fldiv@a+3)^0,w,c
  7368  002008  2448               	addwf	(___fldiv@a+3)^0,w,c
  7369  00200A  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7370  00200C                     
  7371                           ; BSR set to: 0
  7372  00200C  AE47               	btfss	(___fldiv@a+2)^0,7,c
  7373  00200E  EF0B  F010         	goto	u3061
  7374  002012  EF0D  F010         	goto	u3060
  7375  002016                     u3061:
  7376  002016  EF0E  F010         	goto	l3401
  7377  00201A                     u3060:
  7378  00201A                     
  7379                           ; BSR set to: 0
  7380  00201A  816C               	bsf	___fldiv@aexp& (0+255),0,b
  7381  00201C                     l3401:
  7382                           
  7383                           ; BSR set to: 0
  7384  00201C  516C               	movf	___fldiv@aexp& (0+255),w,b
  7385  00201E  B4D8               	btfsc	status,2,c
  7386  002020  EF14  F010         	goto	u3071
  7387  002024  EF16  F010         	goto	u3070
  7388  002028                     u3071:
  7389  002028  EF2B  F010         	goto	l3411
  7390  00202C                     u3070:
  7391  00202C                     
  7392                           ; BSR set to: 0
  7393  00202C  296C               	incf	___fldiv@aexp& (0+255),w,b
  7394  00202E  A4D8               	btfss	status,2,c
  7395  002030  EF1C  F010         	goto	u3081
  7396  002034  EF1E  F010         	goto	u3080
  7397  002038                     u3081:
  7398  002038  EF26  F010         	goto	l3407
  7399  00203C                     u3080:
  7400  00203C                     
  7401                           ; BSR set to: 0
  7402  00203C  0E00               	movlw	0
  7403  00203E  6E45               	movwf	___fldiv@a^0,c
  7404  002040  0E00               	movlw	0
  7405  002042  6E46               	movwf	(___fldiv@a+1)^0,c
  7406  002044  0E00               	movlw	0
  7407  002046  6E47               	movwf	(___fldiv@a+2)^0,c
  7408  002048  0E00               	movlw	0
  7409  00204A  6E48               	movwf	(___fldiv@a+3)^0,c
  7410  00204C                     l3407:
  7411                           
  7412                           ; BSR set to: 0
  7413  00204C  8E47               	bsf	(___fldiv@a+2)^0,7,c
  7414  00204E                     
  7415                           ; BSR set to: 0
  7416  00204E  0E00               	movlw	0
  7417  002050  6E48               	movwf	(___fldiv@a+3)^0,c
  7418  002052  EF33  F010         	goto	l3413
  7419  002056                     l3411:
  7420                           
  7421                           ; BSR set to: 0
  7422  002056  0E00               	movlw	0
  7423  002058  6E45               	movwf	___fldiv@a^0,c
  7424  00205A  0E00               	movlw	0
  7425  00205C  6E46               	movwf	(___fldiv@a+1)^0,c
  7426  00205E  0E00               	movlw	0
  7427  002060  6E47               	movwf	(___fldiv@a+2)^0,c
  7428  002062  0E00               	movlw	0
  7429  002064  6E48               	movwf	(___fldiv@a+3)^0,c
  7430  002066                     l3413:
  7431                           
  7432                           ; BSR set to: 0
  7433  002066  5045               	movf	___fldiv@a^0,w,c
  7434  002068  1046               	iorwf	(___fldiv@a+1)^0,w,c
  7435  00206A  1047               	iorwf	(___fldiv@a+2)^0,w,c
  7436  00206C  1048               	iorwf	(___fldiv@a+3)^0,w,c
  7437  00206E  A4D8               	btfss	status,2,c
  7438  002070  EF3C  F010         	goto	u3091
  7439  002074  EF3E  F010         	goto	u3090
  7440  002078                     u3091:
  7441  002078  EF56  F010         	goto	l3425
  7442  00207C                     u3090:
  7443  00207C                     
  7444                           ; BSR set to: 0
  7445  00207C  0E00               	movlw	0
  7446  00207E  6E41               	movwf	___fldiv@b^0,c
  7447  002080  0E00               	movlw	0
  7448  002082  6E42               	movwf	(___fldiv@b+1)^0,c
  7449  002084  0E00               	movlw	0
  7450  002086  6E43               	movwf	(___fldiv@b+2)^0,c
  7451  002088  0E00               	movlw	0
  7452  00208A  6E44               	movwf	(___fldiv@b+3)^0,c
  7453  00208C                     
  7454                           ; BSR set to: 0
  7455  00208C  0E80               	movlw	128
  7456  00208E  1243               	iorwf	(___fldiv@b+2)^0,f,c
  7457  002090  0E7F               	movlw	127
  7458  002092  1244               	iorwf	(___fldiv@b+3)^0,f,c
  7459  002094                     l3419:
  7460                           
  7461                           ; BSR set to: 0
  7462  002094  5164               	movf	___fldiv@sign& (0+255),w,b
  7463  002096  1244               	iorwf	(___fldiv@b+3)^0,f,c
  7464  002098                     
  7465                           ; BSR set to: 0
  7466  002098  C041  F041         	movff	___fldiv@b,?___fldiv
  7467  00209C  C042  F042         	movff	___fldiv@b+1,?___fldiv+1
  7468  0020A0  C043  F043         	movff	___fldiv@b+2,?___fldiv+2
  7469  0020A4  C044  F044         	movff	___fldiv@b+3,?___fldiv+3
  7470  0020A8  EF99  F011         	goto	l1325
  7471  0020AC                     l3425:
  7472                           
  7473                           ; BSR set to: 0
  7474  0020AC  516B               	movf	___fldiv@bexp& (0+255),w,b
  7475  0020AE  A4D8               	btfss	status,2,c
  7476  0020B0  EF5C  F010         	goto	u3101
  7477  0020B4  EF5E  F010         	goto	u3100
  7478  0020B8                     u3101:
  7479  0020B8  EF68  F010         	goto	l3433
  7480  0020BC                     u3100:
  7481  0020BC                     
  7482                           ; BSR set to: 0
  7483  0020BC  0E00               	movlw	0
  7484  0020BE  6E41               	movwf	?___fldiv^0,c
  7485  0020C0  0E00               	movlw	0
  7486  0020C2  6E42               	movwf	(?___fldiv+1)^0,c
  7487  0020C4  0E00               	movlw	0
  7488  0020C6  6E43               	movwf	(?___fldiv+2)^0,c
  7489  0020C8  0E00               	movlw	0
  7490  0020CA  6E44               	movwf	(?___fldiv+3)^0,c
  7491  0020CC  EF99  F011         	goto	l1325
  7492  0020D0                     l3433:
  7493                           
  7494                           ; BSR set to: 0
  7495  0020D0  516C               	movf	___fldiv@aexp& (0+255),w,b
  7496  0020D2  C06B  F049         	movff	___fldiv@bexp,??___fldiv
  7497  0020D6  6A4A               	clrf	(??___fldiv+1)^0,c
  7498  0020D8  5E49               	subwf	??___fldiv^0,f,c
  7499  0020DA  0E00               	movlw	0
  7500  0020DC  5A4A               	subwfb	(??___fldiv+1)^0,f,c
  7501  0020DE  0E7F               	movlw	127
  7502  0020E0  2449               	addwf	??___fldiv^0,w,c
  7503  0020E2  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7504  0020E4  0E00               	movlw	0
  7505  0020E6  204A               	addwfc	(??___fldiv+1)^0,w,c
  7506  0020E8  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7507  0020EA                     
  7508                           ; BSR set to: 0
  7509  0020EA  C041  F060         	movff	___fldiv@b,___fldiv@rem
  7510  0020EE  C042  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  7511  0020F2  C043  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  7512  0020F6  C044  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  7513  0020FA                     
  7514                           ; BSR set to: 0
  7515  0020FA  0E00               	movlw	0
  7516  0020FC  6E41               	movwf	___fldiv@b^0,c
  7517  0020FE  0E00               	movlw	0
  7518  002100  6E42               	movwf	(___fldiv@b+1)^0,c
  7519  002102  0E00               	movlw	0
  7520  002104  6E43               	movwf	(___fldiv@b+2)^0,c
  7521  002106  0E00               	movlw	0
  7522  002108  6E44               	movwf	(___fldiv@b+3)^0,c
  7523  00210A                     
  7524                           ; BSR set to: 0
  7525  00210A  0E00               	movlw	0
  7526  00210C  6F67               	movwf	___fldiv@grs& (0+255),b
  7527  00210E  0E00               	movlw	0
  7528  002110  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  7529  002112  0E00               	movlw	0
  7530  002114  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  7531  002116  0E00               	movlw	0
  7532  002118  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  7533  00211A                     
  7534                           ; BSR set to: 0
  7535  00211A  0E00               	movlw	0
  7536  00211C  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7537  00211E  EFC9  F010         	goto	l1327
  7538  002122                     l3443:
  7539                           
  7540                           ; BSR set to: 0
  7541  002122  516C               	movf	___fldiv@aexp& (0+255),w,b
  7542  002124  B4D8               	btfsc	status,2,c
  7543  002126  EF97  F010         	goto	u3111
  7544  00212A  EF99  F010         	goto	u3110
  7545  00212E                     u3111:
  7546  00212E  EFB0  F010         	goto	l3451
  7547  002132                     u3110:
  7548  002132                     
  7549                           ; BSR set to: 0
  7550  002132  90D8               	bcf	status,0,c
  7551  002134  3760               	rlcf	___fldiv@rem& (0+255),f,b
  7552  002136  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7553  002138  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7554  00213A  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7555  00213C  90D8               	bcf	status,0,c
  7556  00213E  3641               	rlcf	___fldiv@b^0,f,c
  7557  002140  3642               	rlcf	(___fldiv@b+1)^0,f,c
  7558  002142  3643               	rlcf	(___fldiv@b+2)^0,f,c
  7559  002144  3644               	rlcf	(___fldiv@b+3)^0,f,c
  7560  002146                     
  7561                           ; BSR set to: 0
  7562  002146  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7563  002148  EFA8  F010         	goto	u3121
  7564  00214C  EFAA  F010         	goto	u3120
  7565  002150                     u3121:
  7566  002150  EFAB  F010         	goto	l1330
  7567  002154                     u3120:
  7568  002154                     
  7569                           ; BSR set to: 0
  7570  002154  8041               	bsf	___fldiv@b^0,0,c
  7571  002156                     l1330:
  7572                           
  7573                           ; BSR set to: 0
  7574  002156  90D8               	bcf	status,0,c
  7575  002158  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7576  00215A  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7577  00215C  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7578  00215E  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7579  002160                     l3451:
  7580                           
  7581                           ; BSR set to: 0
  7582  002160  5045               	movf	___fldiv@a^0,w,c
  7583  002162  5D60               	subwf	___fldiv@rem& (0+255),w,b
  7584  002164  5046               	movf	(___fldiv@a+1)^0,w,c
  7585  002166  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7586  002168  5047               	movf	(___fldiv@a+2)^0,w,c
  7587  00216A  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7588  00216C  5048               	movf	(___fldiv@a+3)^0,w,c
  7589  00216E  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7590  002170  A0D8               	btfss	status,0,c
  7591  002172  EFBD  F010         	goto	u3131
  7592  002176  EFBF  F010         	goto	u3130
  7593  00217A                     u3131:
  7594  00217A  EFC8  F010         	goto	l3457
  7595  00217E                     u3130:
  7596  00217E                     
  7597                           ; BSR set to: 0
  7598  00217E  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7599  002180                     
  7600                           ; BSR set to: 0
  7601  002180  5045               	movf	___fldiv@a^0,w,c
  7602  002182  5F60               	subwf	___fldiv@rem& (0+255),f,b
  7603  002184  5046               	movf	(___fldiv@a+1)^0,w,c
  7604  002186  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7605  002188  5047               	movf	(___fldiv@a+2)^0,w,c
  7606  00218A  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7607  00218C  5048               	movf	(___fldiv@a+3)^0,w,c
  7608  00218E  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7609  002190                     l3457:
  7610                           
  7611                           ; BSR set to: 0
  7612  002190  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  7613  002192                     l1327:
  7614                           
  7615                           ; BSR set to: 0
  7616  002192  0E19               	movlw	25
  7617  002194  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  7618  002196  EFCF  F010         	goto	u3141
  7619  00219A  EFD1  F010         	goto	u3140
  7620  00219E                     u3141:
  7621  00219E  EF91  F010         	goto	l3443
  7622  0021A2                     u3140:
  7623  0021A2                     
  7624                           ; BSR set to: 0
  7625  0021A2  5160               	movf	___fldiv@rem& (0+255),w,b
  7626  0021A4  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7627  0021A6  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7628  0021A8  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7629  0021AA  B4D8               	btfsc	status,2,c
  7630  0021AC  EFDA  F010         	goto	u3151
  7631  0021B0  EFDC  F010         	goto	u3150
  7632  0021B4                     u3151:
  7633  0021B4  EFF4  F010         	goto	l3469
  7634  0021B8                     u3150:
  7635  0021B8                     
  7636                           ; BSR set to: 0
  7637  0021B8  8167               	bsf	___fldiv@grs& (0+255),0,b
  7638  0021BA  EFF4  F010         	goto	l3469
  7639  0021BE                     l3463:
  7640                           
  7641                           ; BSR set to: 0
  7642  0021BE  90D8               	bcf	status,0,c
  7643  0021C0  3641               	rlcf	___fldiv@b^0,f,c
  7644  0021C2  3642               	rlcf	(___fldiv@b+1)^0,f,c
  7645  0021C4  3643               	rlcf	(___fldiv@b+2)^0,f,c
  7646  0021C6  3644               	rlcf	(___fldiv@b+3)^0,f,c
  7647  0021C8                     
  7648                           ; BSR set to: 0
  7649  0021C8  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7650  0021CA  EFE9  F010         	goto	u3161
  7651  0021CE  EFEB  F010         	goto	u3160
  7652  0021D2                     u3161:
  7653  0021D2  EFEC  F010         	goto	l1336
  7654  0021D6                     u3160:
  7655  0021D6                     
  7656                           ; BSR set to: 0
  7657  0021D6  8041               	bsf	___fldiv@b^0,0,c
  7658  0021D8                     l1336:
  7659                           
  7660                           ; BSR set to: 0
  7661  0021D8  90D8               	bcf	status,0,c
  7662  0021DA  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7663  0021DC  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7664  0021DE  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7665  0021E0  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7666  0021E2  0765               	decf	___fldiv@new_exp& (0+255),f,b
  7667  0021E4  A0D8               	btfss	status,0,c
  7668  0021E6  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7669  0021E8                     l3469:
  7670                           
  7671                           ; BSR set to: 0
  7672  0021E8  AE43               	btfss	(___fldiv@b+2)^0,7,c
  7673  0021EA  EFF9  F010         	goto	u3171
  7674  0021EE  EFFB  F010         	goto	u3170
  7675  0021F2                     u3171:
  7676  0021F2  EFDF  F010         	goto	l3463
  7677  0021F6                     u3170:
  7678  0021F6                     
  7679                           ; BSR set to: 0
  7680  0021F6  0E00               	movlw	0
  7681  0021F8  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7682  0021FA                     
  7683                           ; BSR set to: 0
  7684  0021FA  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7685  0021FC  EF02  F011         	goto	u3181
  7686  002200  EF04  F011         	goto	u3180
  7687  002204                     u3181:
  7688  002204  EF28  F011         	goto	l1338
  7689  002208                     u3180:
  7690  002208                     
  7691                           ; BSR set to: 0
  7692  002208  0EFF               	movlw	255
  7693  00220A  1567               	andwf	___fldiv@grs& (0+255),w,b
  7694  00220C  6E49               	movwf	??___fldiv^0,c
  7695  00220E  0EFF               	movlw	255
  7696  002210  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7697  002212  6E4A               	movwf	(??___fldiv+1)^0,c
  7698  002214  0EFF               	movlw	255
  7699  002216  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7700  002218  6E4B               	movwf	(??___fldiv+2)^0,c
  7701  00221A  0E7F               	movlw	127
  7702  00221C  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7703  00221E  6E4C               	movwf	(??___fldiv+3)^0,c
  7704  002220  5049               	movf	??___fldiv^0,w,c
  7705  002222  104A               	iorwf	(??___fldiv+1)^0,w,c
  7706  002224  104B               	iorwf	(??___fldiv+2)^0,w,c
  7707  002226  104C               	iorwf	(??___fldiv+3)^0,w,c
  7708  002228  B4D8               	btfsc	status,2,c
  7709  00222A  EF19  F011         	goto	u3191
  7710  00222E  EF1B  F011         	goto	u3190
  7711  002232                     u3191:
  7712  002232  EF1F  F011         	goto	l1339
  7713  002236                     u3190:
  7714  002236                     l3477:
  7715                           
  7716                           ; BSR set to: 0
  7717  002236  0E01               	movlw	1
  7718  002238  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7719  00223A  EF28  F011         	goto	l1338
  7720  00223E                     l1339:
  7721                           
  7722                           ; BSR set to: 0
  7723  00223E  A041               	btfss	___fldiv@b^0,0,c
  7724  002240  EF24  F011         	goto	u3201
  7725  002244  EF26  F011         	goto	u3200
  7726  002248                     u3201:
  7727  002248  EF28  F011         	goto	l1338
  7728  00224C                     u3200:
  7729  00224C  EF1B  F011         	goto	l3477
  7730  002250                     l1338:
  7731                           
  7732                           ; BSR set to: 0
  7733  002250  516C               	movf	___fldiv@aexp& (0+255),w,b
  7734  002252  B4D8               	btfsc	status,2,c
  7735  002254  EF2E  F011         	goto	u3211
  7736  002258  EF30  F011         	goto	u3210
  7737  00225C                     u3211:
  7738  00225C  EF54  F011         	goto	l3489
  7739  002260                     u3210:
  7740  002260                     
  7741                           ; BSR set to: 0
  7742  002260  0E01               	movlw	1
  7743  002262  2641               	addwf	___fldiv@b^0,f,c
  7744  002264  0E00               	movlw	0
  7745  002266  2242               	addwfc	(___fldiv@b+1)^0,f,c
  7746  002268  2243               	addwfc	(___fldiv@b+2)^0,f,c
  7747  00226A  2244               	addwfc	(___fldiv@b+3)^0,f,c
  7748  00226C                     
  7749                           ; BSR set to: 0
  7750  00226C  A044               	btfss	(___fldiv@b+3)^0,0,c
  7751  00226E  EF3B  F011         	goto	u3221
  7752  002272  EF3D  F011         	goto	u3220
  7753  002276                     u3221:
  7754  002276  EF54  F011         	goto	l3489
  7755  00227A                     u3220:
  7756  00227A                     
  7757                           ; BSR set to: 0
  7758  00227A  C041  F049         	movff	___fldiv@b,??___fldiv
  7759  00227E  C042  F04A         	movff	___fldiv@b+1,??___fldiv+1
  7760  002282  C043  F04B         	movff	___fldiv@b+2,??___fldiv+2
  7761  002286  C044  F04C         	movff	___fldiv@b+3,??___fldiv+3
  7762  00228A  344C               	rlcf	(??___fldiv+3)^0,w,c
  7763  00228C  324C               	rrcf	(??___fldiv+3)^0,f,c
  7764  00228E  324B               	rrcf	(??___fldiv+2)^0,f,c
  7765  002290  324A               	rrcf	(??___fldiv+1)^0,f,c
  7766  002292  3249               	rrcf	??___fldiv^0,f,c
  7767  002294  C049  F041         	movff	??___fldiv,___fldiv@b
  7768  002298  C04A  F042         	movff	??___fldiv+1,___fldiv@b+1
  7769  00229C  C04B  F043         	movff	??___fldiv+2,___fldiv@b+2
  7770  0022A0  C04C  F044         	movff	??___fldiv+3,___fldiv@b+3
  7771  0022A4                     
  7772                           ; BSR set to: 0
  7773  0022A4  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  7774  0022A6  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7775  0022A8                     l3489:
  7776                           
  7777                           ; BSR set to: 0
  7778  0022A8  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7779  0022AA  EF5F  F011         	goto	u3231
  7780  0022AE  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7781  0022B0  E108               	bnz	u3230
  7782  0022B2  2965               	incf	___fldiv@new_exp& (0+255),w,b
  7783  0022B4  A0D8               	btfss	status,0,c
  7784  0022B6  EF5F  F011         	goto	u3231
  7785  0022BA  EF61  F011         	goto	u3230
  7786  0022BE                     u3231:
  7787  0022BE  EF6C  F011         	goto	l3493
  7788  0022C2                     u3230:
  7789  0022C2                     
  7790                           ; BSR set to: 0
  7791  0022C2  0E00               	movlw	0
  7792  0022C4  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7793  0022C6  6965               	setf	___fldiv@new_exp& (0+255),b
  7794  0022C8  0E00               	movlw	0
  7795  0022CA  6E41               	movwf	___fldiv@b^0,c
  7796  0022CC  0E00               	movlw	0
  7797  0022CE  6E42               	movwf	(___fldiv@b+1)^0,c
  7798  0022D0  0E00               	movlw	0
  7799  0022D2  6E43               	movwf	(___fldiv@b+2)^0,c
  7800  0022D4  0E00               	movlw	0
  7801  0022D6  6E44               	movwf	(___fldiv@b+3)^0,c
  7802  0022D8                     l3493:
  7803                           
  7804                           ; BSR set to: 0
  7805  0022D8  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7806  0022DA  EF79  F011         	goto	u3240
  7807  0022DE  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7808  0022E0  E106               	bnz	u3241
  7809  0022E2  0565               	decf	___fldiv@new_exp& (0+255),w,b
  7810  0022E4  B0D8               	btfsc	status,0,c
  7811  0022E6  EF77  F011         	goto	u3241
  7812  0022EA  EF79  F011         	goto	u3240
  7813  0022EE                     u3241:
  7814  0022EE  EF87  F011         	goto	l3497
  7815  0022F2                     u3240:
  7816  0022F2                     
  7817                           ; BSR set to: 0
  7818  0022F2  0E00               	movlw	0
  7819  0022F4  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7820  0022F6  0E00               	movlw	0
  7821  0022F8  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7822  0022FA  0E00               	movlw	0
  7823  0022FC  6E41               	movwf	___fldiv@b^0,c
  7824  0022FE  0E00               	movlw	0
  7825  002300  6E42               	movwf	(___fldiv@b+1)^0,c
  7826  002302  0E00               	movlw	0
  7827  002304  6E43               	movwf	(___fldiv@b+2)^0,c
  7828  002306  0E00               	movlw	0
  7829  002308  6E44               	movwf	(___fldiv@b+3)^0,c
  7830  00230A  0E00               	movlw	0
  7831  00230C  6F64               	movwf	___fldiv@sign& (0+255),b
  7832  00230E                     l3497:
  7833                           
  7834                           ; BSR set to: 0
  7835  00230E  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  7836  002312                     
  7837                           ; BSR set to: 0
  7838  002312  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  7839  002314  EF8E  F011         	goto	u3251
  7840  002318  EF90  F011         	goto	u3250
  7841  00231C                     u3251:
  7842  00231C  EF93  F011         	goto	l3503
  7843  002320                     u3250:
  7844  002320                     
  7845                           ; BSR set to: 0
  7846  002320  8E43               	bsf	(___fldiv@b+2)^0,7,c
  7847  002322  EF94  F011         	goto	l3505
  7848  002326                     l3503:
  7849                           
  7850                           ; BSR set to: 0
  7851  002326  9E43               	bcf	(___fldiv@b+2)^0,7,c
  7852  002328                     l3505:
  7853                           
  7854                           ; BSR set to: 0
  7855  002328  90D8               	bcf	status,0,c
  7856  00232A  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  7857  00232C  6E44               	movwf	(___fldiv@b+3)^0,c
  7858  00232E  EF4A  F010         	goto	l3419
  7859  002332                     l1325:
  7860                           
  7861                           ; BSR set to: 0
  7862  002332  0012               	return		;funcret
  7863  002334                     __end_of___fldiv:
  7864                           	callstack 0
  7865                           
  7866 ;; *************** function ___fladd *****************
  7867 ;; Defined at:
  7868 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;  b               4   48[COMRAM] unsigned char 
  7871 ;;  a               4   52[COMRAM] unsigned char 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;  grs             1   63[COMRAM] unsigned char 
  7874 ;;  bexp            1   62[COMRAM] unsigned char 
  7875 ;;  aexp            1   61[COMRAM] unsigned char 
  7876 ;;  signs           1   60[COMRAM] unsigned char 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  4   48[COMRAM] unsigned char 
  7879 ;; Registers used:
  7880 ;;		wreg, status,2, status,0
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7886 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7888 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;Total ram usage:       16 bytes
  7891 ;; Hardware stack levels used: 1
  7892 ;; Hardware stack levels required when called: 7
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_left
  7897 ;;		_right
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text44
  7902  0016AE                     __ptext44:
  7903                           	callstack 0
  7904  0016AE                     ___fladd:
  7905                           	callstack 20
  7906  0016AE  5034               	movf	(___fladd@b+3)^0,w,c
  7907  0016B0  0B80               	andlw	128
  7908  0016B2  6E3D               	movwf	___fladd@signs^0,c
  7909  0016B4  5034               	movf	(___fladd@b+3)^0,w,c
  7910  0016B6  2434               	addwf	(___fladd@b+3)^0,w,c
  7911  0016B8  6E3F               	movwf	___fladd@bexp^0,c
  7912  0016BA  AE33               	btfss	(___fladd@b+2)^0,7,c
  7913  0016BC  EF62  F00B         	goto	u2641
  7914  0016C0  EF64  F00B         	goto	u2640
  7915  0016C4                     u2641:
  7916  0016C4  EF65  F00B         	goto	l3179
  7917  0016C8                     u2640:
  7918  0016C8  803F               	bsf	___fladd@bexp^0,0,c
  7919  0016CA                     l3179:
  7920  0016CA  503F               	movf	___fladd@bexp^0,w,c
  7921  0016CC  B4D8               	btfsc	status,2,c
  7922  0016CE  EF6B  F00B         	goto	u2651
  7923  0016D2  EF6D  F00B         	goto	u2650
  7924  0016D6                     u2651:
  7925  0016D6  EF82  F00B         	goto	l3189
  7926  0016DA                     u2650:
  7927  0016DA  283F               	incf	___fladd@bexp^0,w,c
  7928  0016DC  A4D8               	btfss	status,2,c
  7929  0016DE  EF73  F00B         	goto	u2661
  7930  0016E2  EF75  F00B         	goto	u2660
  7931  0016E6                     u2661:
  7932  0016E6  EF7D  F00B         	goto	l3185
  7933  0016EA                     u2660:
  7934  0016EA  0E00               	movlw	0
  7935  0016EC  6E31               	movwf	___fladd@b^0,c
  7936  0016EE  0E00               	movlw	0
  7937  0016F0  6E32               	movwf	(___fladd@b+1)^0,c
  7938  0016F2  0E00               	movlw	0
  7939  0016F4  6E33               	movwf	(___fladd@b+2)^0,c
  7940  0016F6  0E00               	movlw	0
  7941  0016F8  6E34               	movwf	(___fladd@b+3)^0,c
  7942  0016FA                     l3185:
  7943  0016FA  8E33               	bsf	(___fladd@b+2)^0,7,c
  7944  0016FC  0E00               	movlw	0
  7945  0016FE  6E34               	movwf	(___fladd@b+3)^0,c
  7946  001700  EF8A  F00B         	goto	l3191
  7947  001704                     l3189:
  7948  001704  0E00               	movlw	0
  7949  001706  6E31               	movwf	___fladd@b^0,c
  7950  001708  0E00               	movlw	0
  7951  00170A  6E32               	movwf	(___fladd@b+1)^0,c
  7952  00170C  0E00               	movlw	0
  7953  00170E  6E33               	movwf	(___fladd@b+2)^0,c
  7954  001710  0E00               	movlw	0
  7955  001712  6E34               	movwf	(___fladd@b+3)^0,c
  7956  001714                     l3191:
  7957  001714  5038               	movf	(___fladd@a+3)^0,w,c
  7958  001716  0B80               	andlw	128
  7959  001718  6E3E               	movwf	___fladd@aexp^0,c
  7960  00171A  503D               	movf	___fladd@signs^0,w,c
  7961  00171C  183E               	xorwf	___fladd@aexp^0,w,c
  7962  00171E  B4D8               	btfsc	status,2,c
  7963  001720  EF94  F00B         	goto	u2671
  7964  001724  EF96  F00B         	goto	u2670
  7965  001728                     u2671:
  7966  001728  EF97  F00B         	goto	l3197
  7967  00172C                     u2670:
  7968  00172C  8C3D               	bsf	___fladd@signs^0,6,c
  7969  00172E                     l3197:
  7970  00172E  5038               	movf	(___fladd@a+3)^0,w,c
  7971  001730  2438               	addwf	(___fladd@a+3)^0,w,c
  7972  001732  6E3E               	movwf	___fladd@aexp^0,c
  7973  001734  AE37               	btfss	(___fladd@a+2)^0,7,c
  7974  001736  EF9F  F00B         	goto	u2681
  7975  00173A  EFA1  F00B         	goto	u2680
  7976  00173E                     u2681:
  7977  00173E  EFA2  F00B         	goto	l3203
  7978  001742                     u2680:
  7979  001742  803E               	bsf	___fladd@aexp^0,0,c
  7980  001744                     l3203:
  7981  001744  503E               	movf	___fladd@aexp^0,w,c
  7982  001746  B4D8               	btfsc	status,2,c
  7983  001748  EFA8  F00B         	goto	u2691
  7984  00174C  EFAA  F00B         	goto	u2690
  7985  001750                     u2691:
  7986  001750  EFBF  F00B         	goto	l3213
  7987  001754                     u2690:
  7988  001754  283E               	incf	___fladd@aexp^0,w,c
  7989  001756  A4D8               	btfss	status,2,c
  7990  001758  EFB0  F00B         	goto	u2701
  7991  00175C  EFB2  F00B         	goto	u2700
  7992  001760                     u2701:
  7993  001760  EFBA  F00B         	goto	l3209
  7994  001764                     u2700:
  7995  001764  0E00               	movlw	0
  7996  001766  6E35               	movwf	___fladd@a^0,c
  7997  001768  0E00               	movlw	0
  7998  00176A  6E36               	movwf	(___fladd@a+1)^0,c
  7999  00176C  0E00               	movlw	0
  8000  00176E  6E37               	movwf	(___fladd@a+2)^0,c
  8001  001770  0E00               	movlw	0
  8002  001772  6E38               	movwf	(___fladd@a+3)^0,c
  8003  001774                     l3209:
  8004  001774  8E37               	bsf	(___fladd@a+2)^0,7,c
  8005  001776  0E00               	movlw	0
  8006  001778  6E38               	movwf	(___fladd@a+3)^0,c
  8007  00177A  EFC7  F00B         	goto	l3215
  8008  00177E                     l3213:
  8009  00177E  0E00               	movlw	0
  8010  001780  6E35               	movwf	___fladd@a^0,c
  8011  001782  0E00               	movlw	0
  8012  001784  6E36               	movwf	(___fladd@a+1)^0,c
  8013  001786  0E00               	movlw	0
  8014  001788  6E37               	movwf	(___fladd@a+2)^0,c
  8015  00178A  0E00               	movlw	0
  8016  00178C  6E38               	movwf	(___fladd@a+3)^0,c
  8017  00178E                     l3215:
  8018  00178E  503F               	movf	___fladd@bexp^0,w,c
  8019  001790  5C3E               	subwf	___fladd@aexp^0,w,c
  8020  001792  B0D8               	btfsc	status,0,c
  8021  001794  EFCE  F00B         	goto	u2711
  8022  001798  EFD0  F00B         	goto	u2710
  8023  00179C                     u2711:
  8024  00179C  EFF7  F00B         	goto	l3251
  8025  0017A0                     u2710:
  8026  0017A0  AC3D               	btfss	___fladd@signs^0,6,c
  8027  0017A2  EFD5  F00B         	goto	u2721
  8028  0017A6  EFD7  F00B         	goto	u2720
  8029  0017AA                     u2721:
  8030  0017AA  EFD9  F00B         	goto	l3221
  8031  0017AE                     u2720:
  8032  0017AE  0E80               	movlw	128
  8033  0017B0  1A3D               	xorwf	___fladd@signs^0,f,c
  8034  0017B2                     l3221:
  8035  0017B2  C03F  F040         	movff	___fladd@bexp,___fladd@grs
  8036  0017B6  C03E  F03F         	movff	___fladd@aexp,___fladd@bexp
  8037  0017BA  C040  F03E         	movff	___fladd@grs,___fladd@aexp
  8038  0017BE  C031  F040         	movff	___fladd@b,___fladd@grs
  8039  0017C2  C035  F031         	movff	___fladd@a,___fladd@b
  8040  0017C6  C040  F035         	movff	___fladd@grs,___fladd@a
  8041  0017CA  C032  F040         	movff	___fladd@b+1,___fladd@grs
  8042  0017CE  C036  F032         	movff	___fladd@a+1,___fladd@b+1
  8043  0017D2  C040  F036         	movff	___fladd@grs,___fladd@a+1
  8044  0017D6  C033  F040         	movff	___fladd@b+2,___fladd@grs
  8045  0017DA  C037  F033         	movff	___fladd@a+2,___fladd@b+2
  8046  0017DE  C040  F037         	movff	___fladd@grs,___fladd@a+2
  8047  0017E2  C034  F040         	movff	___fladd@b+3,___fladd@grs
  8048  0017E6  C038  F034         	movff	___fladd@a+3,___fladd@b+3
  8049  0017EA  C040  F038         	movff	___fladd@grs,___fladd@a+3
  8050  0017EE                     l3251:
  8051  0017EE  0E00               	movlw	0
  8052  0017F0  6E40               	movwf	___fladd@grs^0,c
  8053  0017F2  503F               	movf	___fladd@bexp^0,w,c
  8054  0017F4  C03E  F039         	movff	___fladd@aexp,??___fladd
  8055  0017F8  6A3A               	clrf	(??___fladd+1)^0,c
  8056  0017FA  5E39               	subwf	??___fladd^0,f,c
  8057  0017FC  0E00               	movlw	0
  8058  0017FE  5A3A               	subwfb	(??___fladd+1)^0,f,c
  8059  001800  BE3A               	btfsc	(??___fladd+1)^0,7,c
  8060  001802  EF0C  F00C         	goto	u2731
  8061  001806  503A               	movf	(??___fladd+1)^0,w,c
  8062  001808  E109               	bnz	u2730
  8063  00180A  0E1A               	movlw	26
  8064  00180C  5C39               	subwf	??___fladd^0,w,c
  8065  00180E  A0D8               	btfss	status,0,c
  8066  001810  EF0C  F00C         	goto	u2731
  8067  001814  EF0E  F00C         	goto	u2730
  8068  001818                     u2731:
  8069  001818  EF45  F00C         	goto	l1272
  8070  00181C                     u2730:
  8071  00181C  5031               	movf	___fladd@b^0,w,c
  8072  00181E  1032               	iorwf	(___fladd@b+1)^0,w,c
  8073  001820  1033               	iorwf	(___fladd@b+2)^0,w,c
  8074  001822  1034               	iorwf	(___fladd@b+3)^0,w,c
  8075  001824  A4D8               	btfss	status,2,c
  8076  001826  EF17  F00C         	goto	u2741
  8077  00182A  EF1A  F00C         	goto	u2740
  8078  00182E                     u2741:
  8079  00182E  0E01               	movlw	1
  8080  001830  EF1B  F00C         	goto	u2750
  8081  001834                     u2740:
  8082  001834  0E00               	movlw	0
  8083  001836                     u2750:
  8084  001836  6E40               	movwf	___fladd@grs^0,c
  8085  001838  0E00               	movlw	0
  8086  00183A  6E31               	movwf	___fladd@b^0,c
  8087  00183C  0E00               	movlw	0
  8088  00183E  6E32               	movwf	(___fladd@b+1)^0,c
  8089  001840  0E00               	movlw	0
  8090  001842  6E33               	movwf	(___fladd@b+2)^0,c
  8091  001844  0E00               	movlw	0
  8092  001846  6E34               	movwf	(___fladd@b+3)^0,c
  8093  001848  C03E  F03F         	movff	___fladd@aexp,___fladd@bexp
  8094  00184C  EF4E  F00C         	goto	l1271
  8095  001850                     l1273:
  8096  001850  A040               	btfss	___fladd@grs^0,0,c
  8097  001852  EF2D  F00C         	goto	u2761
  8098  001856  EF2F  F00C         	goto	u2760
  8099  00185A                     u2761:
  8100  00185A  EF35  F00C         	goto	l3263
  8101  00185E                     u2760:
  8102  00185E  90D8               	bcf	status,0,c
  8103  001860  3040               	rrcf	___fladd@grs^0,w,c
  8104  001862  0901               	iorlw	1
  8105  001864  6E40               	movwf	___fladd@grs^0,c
  8106  001866  EF37  F00C         	goto	l3265
  8107  00186A                     l3263:
  8108  00186A  90D8               	bcf	status,0,c
  8109  00186C  3240               	rrcf	___fladd@grs^0,f,c
  8110  00186E                     l3265:
  8111  00186E  A031               	btfss	___fladd@b^0,0,c
  8112  001870  EF3C  F00C         	goto	u2771
  8113  001874  EF3E  F00C         	goto	u2770
  8114  001878                     u2771:
  8115  001878  EF3F  F00C         	goto	l3269
  8116  00187C                     u2770:
  8117  00187C  8E40               	bsf	___fladd@grs^0,7,c
  8118  00187E                     l3269:
  8119  00187E  3434               	rlcf	(___fladd@b+3)^0,w,c
  8120  001880  3234               	rrcf	(___fladd@b+3)^0,f,c
  8121  001882  3233               	rrcf	(___fladd@b+2)^0,f,c
  8122  001884  3232               	rrcf	(___fladd@b+1)^0,f,c
  8123  001886  3231               	rrcf	___fladd@b^0,f,c
  8124  001888  2A3F               	incf	___fladd@bexp^0,f,c
  8125  00188A                     l1272:
  8126  00188A  503E               	movf	___fladd@aexp^0,w,c
  8127  00188C  5C3F               	subwf	___fladd@bexp^0,w,c
  8128  00188E  A0D8               	btfss	status,0,c
  8129  001890  EF4C  F00C         	goto	u2781
  8130  001894  EF4E  F00C         	goto	u2780
  8131  001898                     u2781:
  8132  001898  EF28  F00C         	goto	l1273
  8133  00189C                     u2780:
  8134  00189C                     l1271:
  8135  00189C  BC3D               	btfsc	___fladd@signs^0,6,c
  8136  00189E  EF53  F00C         	goto	u2791
  8137  0018A2  EF55  F00C         	goto	u2790
  8138  0018A6                     u2791:
  8139  0018A6  EF95  F00C         	goto	l3297
  8140  0018AA                     u2790:
  8141  0018AA  503F               	movf	___fladd@bexp^0,w,c
  8142  0018AC  A4D8               	btfss	status,2,c
  8143  0018AE  EF5B  F00C         	goto	u2801
  8144  0018B2  EF5D  F00C         	goto	u2800
  8145  0018B6                     u2801:
  8146  0018B6  EF67  F00C         	goto	l3279
  8147  0018BA                     u2800:
  8148  0018BA  0E00               	movlw	0
  8149  0018BC  6E31               	movwf	?___fladd^0,c
  8150  0018BE  0E00               	movlw	0
  8151  0018C0  6E32               	movwf	(?___fladd+1)^0,c
  8152  0018C2  0E00               	movlw	0
  8153  0018C4  6E33               	movwf	(?___fladd+2)^0,c
  8154  0018C6  0E00               	movlw	0
  8155  0018C8  6E34               	movwf	(?___fladd+3)^0,c
  8156  0018CA  EFB6  F00D         	goto	l1280
  8157  0018CE                     l3279:
  8158  0018CE  5035               	movf	___fladd@a^0,w,c
  8159  0018D0  2631               	addwf	___fladd@b^0,f,c
  8160  0018D2  5036               	movf	(___fladd@a+1)^0,w,c
  8161  0018D4  2232               	addwfc	(___fladd@b+1)^0,f,c
  8162  0018D6  5037               	movf	(___fladd@a+2)^0,w,c
  8163  0018D8  2233               	addwfc	(___fladd@b+2)^0,f,c
  8164  0018DA  5038               	movf	(___fladd@a+3)^0,w,c
  8165  0018DC  2234               	addwfc	(___fladd@b+3)^0,f,c
  8166  0018DE  A034               	btfss	(___fladd@b+3)^0,0,c
  8167  0018E0  EF74  F00C         	goto	u2811
  8168  0018E4  EF76  F00C         	goto	u2810
  8169  0018E8                     u2811:
  8170  0018E8  EF22  F00D         	goto	l3333
  8171  0018EC                     u2810:
  8172  0018EC  A040               	btfss	___fladd@grs^0,0,c
  8173  0018EE  EF7B  F00C         	goto	u2821
  8174  0018F2  EF7D  F00C         	goto	u2820
  8175  0018F6                     u2821:
  8176  0018F6  EF83  F00C         	goto	l3287
  8177  0018FA                     u2820:
  8178  0018FA  90D8               	bcf	status,0,c
  8179  0018FC  3040               	rrcf	___fladd@grs^0,w,c
  8180  0018FE  0901               	iorlw	1
  8181  001900  6E40               	movwf	___fladd@grs^0,c
  8182  001902  EF85  F00C         	goto	l3289
  8183  001906                     l3287:
  8184  001906  90D8               	bcf	status,0,c
  8185  001908  3240               	rrcf	___fladd@grs^0,f,c
  8186  00190A                     l3289:
  8187  00190A  A031               	btfss	___fladd@b^0,0,c
  8188  00190C  EF8A  F00C         	goto	u2831
  8189  001910  EF8C  F00C         	goto	u2830
  8190  001914                     u2831:
  8191  001914  EF8D  F00C         	goto	l3293
  8192  001918                     u2830:
  8193  001918  8E40               	bsf	___fladd@grs^0,7,c
  8194  00191A                     l3293:
  8195  00191A  3434               	rlcf	(___fladd@b+3)^0,w,c
  8196  00191C  3234               	rrcf	(___fladd@b+3)^0,f,c
  8197  00191E  3233               	rrcf	(___fladd@b+2)^0,f,c
  8198  001920  3232               	rrcf	(___fladd@b+1)^0,f,c
  8199  001922  3231               	rrcf	___fladd@b^0,f,c
  8200  001924  2A3F               	incf	___fladd@bexp^0,f,c
  8201  001926  EF22  F00D         	goto	l3333
  8202  00192A                     l3297:
  8203  00192A  5035               	movf	___fladd@a^0,w,c
  8204  00192C  5C31               	subwf	___fladd@b^0,w,c
  8205  00192E  5036               	movf	(___fladd@a+1)^0,w,c
  8206  001930  5832               	subwfb	(___fladd@b+1)^0,w,c
  8207  001932  5037               	movf	(___fladd@a+2)^0,w,c
  8208  001934  5833               	subwfb	(___fladd@b+2)^0,w,c
  8209  001936  5034               	movf	(___fladd@b+3)^0,w,c
  8210  001938  0A80               	xorlw	128
  8211  00193A  6E39               	movwf	??___fladd^0,c
  8212  00193C  5038               	movf	(___fladd@a+3)^0,w,c
  8213  00193E  0A80               	xorlw	128
  8214  001940  5839               	subwfb	??___fladd^0,w,c
  8215  001942  B0D8               	btfsc	status,0,c
  8216  001944  EFA6  F00C         	goto	u2841
  8217  001948  EFA8  F00C         	goto	u2840
  8218  00194C                     u2841:
  8219  00194C  EFD3  F00C         	goto	l3307
  8220  001950                     u2840:
  8221  001950  5031               	movf	___fladd@b^0,w,c
  8222  001952  5C35               	subwf	___fladd@a^0,w,c
  8223  001954  6E39               	movwf	??___fladd^0,c
  8224  001956  5032               	movf	(___fladd@b+1)^0,w,c
  8225  001958  5836               	subwfb	(___fladd@a+1)^0,w,c
  8226  00195A  6E3A               	movwf	(??___fladd+1)^0,c
  8227  00195C  5033               	movf	(___fladd@b+2)^0,w,c
  8228  00195E  5837               	subwfb	(___fladd@a+2)^0,w,c
  8229  001960  6E3B               	movwf	(??___fladd+2)^0,c
  8230  001962  5034               	movf	(___fladd@b+3)^0,w,c
  8231  001964  5838               	subwfb	(___fladd@a+3)^0,w,c
  8232  001966  6E3C               	movwf	(??___fladd+3)^0,c
  8233  001968  0EFF               	movlw	255
  8234  00196A  2439               	addwf	??___fladd^0,w,c
  8235  00196C  6E31               	movwf	___fladd@b^0,c
  8236  00196E  0EFF               	movlw	255
  8237  001970  203A               	addwfc	(??___fladd+1)^0,w,c
  8238  001972  6E32               	movwf	(___fladd@b+1)^0,c
  8239  001974  0EFF               	movlw	255
  8240  001976  203B               	addwfc	(??___fladd+2)^0,w,c
  8241  001978  6E33               	movwf	(___fladd@b+2)^0,c
  8242  00197A  0EFF               	movlw	255
  8243  00197C  203C               	addwfc	(??___fladd+3)^0,w,c
  8244  00197E  6E34               	movwf	(___fladd@b+3)^0,c
  8245  001980  0E80               	movlw	128
  8246  001982  1A3D               	xorwf	___fladd@signs^0,f,c
  8247  001984  6C40               	negf	___fladd@grs^0,c
  8248  001986  5040               	movf	___fladd@grs^0,w,c
  8249  001988  A4D8               	btfss	status,2,c
  8250  00198A  EFC9  F00C         	goto	u2851
  8251  00198E  EFCB  F00C         	goto	u2850
  8252  001992                     u2851:
  8253  001992  EFDB  F00C         	goto	l1288
  8254  001996                     u2850:
  8255  001996  0E01               	movlw	1
  8256  001998  2631               	addwf	___fladd@b^0,f,c
  8257  00199A  0E00               	movlw	0
  8258  00199C  2232               	addwfc	(___fladd@b+1)^0,f,c
  8259  00199E  2233               	addwfc	(___fladd@b+2)^0,f,c
  8260  0019A0  2234               	addwfc	(___fladd@b+3)^0,f,c
  8261  0019A2  EFDB  F00C         	goto	l1288
  8262  0019A6                     l3307:
  8263  0019A6  5035               	movf	___fladd@a^0,w,c
  8264  0019A8  5E31               	subwf	___fladd@b^0,f,c
  8265  0019AA  5036               	movf	(___fladd@a+1)^0,w,c
  8266  0019AC  5A32               	subwfb	(___fladd@b+1)^0,f,c
  8267  0019AE  5037               	movf	(___fladd@a+2)^0,w,c
  8268  0019B0  5A33               	subwfb	(___fladd@b+2)^0,f,c
  8269  0019B2  5038               	movf	(___fladd@a+3)^0,w,c
  8270  0019B4  5A34               	subwfb	(___fladd@b+3)^0,f,c
  8271  0019B6                     l1288:
  8272  0019B6  5031               	movf	___fladd@b^0,w,c
  8273  0019B8  1032               	iorwf	(___fladd@b+1)^0,w,c
  8274  0019BA  1033               	iorwf	(___fladd@b+2)^0,w,c
  8275  0019BC  1034               	iorwf	(___fladd@b+3)^0,w,c
  8276  0019BE  A4D8               	btfss	status,2,c
  8277  0019C0  EFE4  F00C         	goto	u2861
  8278  0019C4  EFE6  F00C         	goto	u2860
  8279  0019C8                     u2861:
  8280  0019C8  EF1B  F00D         	goto	l3331
  8281  0019CC                     u2860:
  8282  0019CC  5040               	movf	___fladd@grs^0,w,c
  8283  0019CE  A4D8               	btfss	status,2,c
  8284  0019D0  EFEC  F00C         	goto	u2871
  8285  0019D4  EFEE  F00C         	goto	u2870
  8286  0019D8                     u2871:
  8287  0019D8  EF1B  F00D         	goto	l3331
  8288  0019DC                     u2870:
  8289  0019DC  0E00               	movlw	0
  8290  0019DE  6E31               	movwf	?___fladd^0,c
  8291  0019E0  0E00               	movlw	0
  8292  0019E2  6E32               	movwf	(?___fladd+1)^0,c
  8293  0019E4  0E00               	movlw	0
  8294  0019E6  6E33               	movwf	(?___fladd+2)^0,c
  8295  0019E8  0E00               	movlw	0
  8296  0019EA  6E34               	movwf	(?___fladd+3)^0,c
  8297  0019EC  EFB6  F00D         	goto	l1280
  8298  0019F0                     l3315:
  8299  0019F0  90D8               	bcf	status,0,c
  8300  0019F2  3631               	rlcf	___fladd@b^0,f,c
  8301  0019F4  3632               	rlcf	(___fladd@b+1)^0,f,c
  8302  0019F6  3633               	rlcf	(___fladd@b+2)^0,f,c
  8303  0019F8  3634               	rlcf	(___fladd@b+3)^0,f,c
  8304  0019FA  AE40               	btfss	___fladd@grs^0,7,c
  8305  0019FC  EF02  F00D         	goto	u2881
  8306  001A00  EF04  F00D         	goto	u2880
  8307  001A04                     u2881:
  8308  001A04  EF05  F00D         	goto	l3321
  8309  001A08                     u2880:
  8310  001A08  8031               	bsf	___fladd@b^0,0,c
  8311  001A0A                     l3321:
  8312  001A0A  A040               	btfss	___fladd@grs^0,0,c
  8313  001A0C  EF0A  F00D         	goto	u2891
  8314  001A10  EF0C  F00D         	goto	u2890
  8315  001A14                     u2891:
  8316  001A14  EF10  F00D         	goto	l3325
  8317  001A18                     u2890:
  8318  001A18  80D8               	bsf	status,0,c
  8319  001A1A  3640               	rlcf	___fladd@grs^0,f,c
  8320  001A1C  EF12  F00D         	goto	l3327
  8321  001A20                     l3325:
  8322  001A20  90D8               	bcf	status,0,c
  8323  001A22  3640               	rlcf	___fladd@grs^0,f,c
  8324  001A24                     l3327:
  8325  001A24  503F               	movf	___fladd@bexp^0,w,c
  8326  001A26  B4D8               	btfsc	status,2,c
  8327  001A28  EF18  F00D         	goto	u2901
  8328  001A2C  EF1A  F00D         	goto	u2900
  8329  001A30                     u2901:
  8330  001A30  EF1B  F00D         	goto	l3331
  8331  001A34                     u2900:
  8332  001A34  063F               	decf	___fladd@bexp^0,f,c
  8333  001A36                     l3331:
  8334  001A36  AE33               	btfss	(___fladd@b+2)^0,7,c
  8335  001A38  EF20  F00D         	goto	u2911
  8336  001A3C  EF22  F00D         	goto	u2910
  8337  001A40                     u2911:
  8338  001A40  EFF8  F00C         	goto	l3315
  8339  001A44                     u2910:
  8340  001A44                     l3333:
  8341  001A44  0E00               	movlw	0
  8342  001A46  6E3E               	movwf	___fladd@aexp^0,c
  8343  001A48  AE40               	btfss	___fladd@grs^0,7,c
  8344  001A4A  EF29  F00D         	goto	u2921
  8345  001A4E  EF2B  F00D         	goto	u2920
  8346  001A52                     u2921:
  8347  001A52  EF43  F00D         	goto	l1297
  8348  001A56                     u2920:
  8349  001A56  C040  F039         	movff	___fladd@grs,??___fladd
  8350  001A5A  0E7F               	movlw	127
  8351  001A5C  1639               	andwf	??___fladd^0,f,c
  8352  001A5E  B4D8               	btfsc	status,2,c
  8353  001A60  EF34  F00D         	goto	u2931
  8354  001A64  EF36  F00D         	goto	u2930
  8355  001A68                     u2931:
  8356  001A68  EF3A  F00D         	goto	l1298
  8357  001A6C                     u2930:
  8358  001A6C                     l3339:
  8359  001A6C  0E01               	movlw	1
  8360  001A6E  6E3E               	movwf	___fladd@aexp^0,c
  8361  001A70  EF43  F00D         	goto	l1297
  8362  001A74                     l1298:
  8363  001A74  A031               	btfss	___fladd@b^0,0,c
  8364  001A76  EF3F  F00D         	goto	u2941
  8365  001A7A  EF41  F00D         	goto	u2940
  8366  001A7E                     u2941:
  8367  001A7E  EF43  F00D         	goto	l1297
  8368  001A82                     u2940:
  8369  001A82  EF36  F00D         	goto	l3339
  8370  001A86                     l1297:
  8371  001A86  503E               	movf	___fladd@aexp^0,w,c
  8372  001A88  B4D8               	btfsc	status,2,c
  8373  001A8A  EF49  F00D         	goto	u2951
  8374  001A8E  EF4B  F00D         	goto	u2950
  8375  001A92                     u2951:
  8376  001A92  EF76  F00D         	goto	l3351
  8377  001A96                     u2950:
  8378  001A96  0E01               	movlw	1
  8379  001A98  2631               	addwf	___fladd@b^0,f,c
  8380  001A9A  0E00               	movlw	0
  8381  001A9C  2232               	addwfc	(___fladd@b+1)^0,f,c
  8382  001A9E  2233               	addwfc	(___fladd@b+2)^0,f,c
  8383  001AA0  2234               	addwfc	(___fladd@b+3)^0,f,c
  8384  001AA2  A034               	btfss	(___fladd@b+3)^0,0,c
  8385  001AA4  EF56  F00D         	goto	u2961
  8386  001AA8  EF58  F00D         	goto	u2960
  8387  001AAC                     u2961:
  8388  001AAC  EF76  F00D         	goto	l3351
  8389  001AB0                     u2960:
  8390  001AB0  C031  F039         	movff	___fladd@b,??___fladd
  8391  001AB4  C032  F03A         	movff	___fladd@b+1,??___fladd+1
  8392  001AB8  C033  F03B         	movff	___fladd@b+2,??___fladd+2
  8393  001ABC  C034  F03C         	movff	___fladd@b+3,??___fladd+3
  8394  001AC0  343C               	rlcf	(??___fladd+3)^0,w,c
  8395  001AC2  323C               	rrcf	(??___fladd+3)^0,f,c
  8396  001AC4  323B               	rrcf	(??___fladd+2)^0,f,c
  8397  001AC6  323A               	rrcf	(??___fladd+1)^0,f,c
  8398  001AC8  3239               	rrcf	??___fladd^0,f,c
  8399  001ACA  C039  F031         	movff	??___fladd,___fladd@b
  8400  001ACE  C03A  F032         	movff	??___fladd+1,___fladd@b+1
  8401  001AD2  C03B  F033         	movff	??___fladd+2,___fladd@b+2
  8402  001AD6  C03C  F034         	movff	??___fladd+3,___fladd@b+3
  8403  001ADA  283F               	incf	___fladd@bexp^0,w,c
  8404  001ADC  B4D8               	btfsc	status,2,c
  8405  001ADE  EF73  F00D         	goto	u2971
  8406  001AE2  EF75  F00D         	goto	u2970
  8407  001AE6                     u2971:
  8408  001AE6  EF76  F00D         	goto	l3351
  8409  001AEA                     u2970:
  8410  001AEA  2A3F               	incf	___fladd@bexp^0,f,c
  8411  001AEC                     l3351:
  8412  001AEC  283F               	incf	___fladd@bexp^0,w,c
  8413  001AEE  B4D8               	btfsc	status,2,c
  8414  001AF0  EF7C  F00D         	goto	u2981
  8415  001AF4  EF7E  F00D         	goto	u2980
  8416  001AF8                     u2981:
  8417  001AF8  EF86  F00D         	goto	l3355
  8418  001AFC                     u2980:
  8419  001AFC  503F               	movf	___fladd@bexp^0,w,c
  8420  001AFE  A4D8               	btfss	status,2,c
  8421  001B00  EF84  F00D         	goto	u2991
  8422  001B04  EF86  F00D         	goto	u2990
  8423  001B08                     u2991:
  8424  001B08  EF98  F00D         	goto	l3359
  8425  001B0C                     u2990:
  8426  001B0C                     l3355:
  8427  001B0C  0E00               	movlw	0
  8428  001B0E  6E31               	movwf	___fladd@b^0,c
  8429  001B10  0E00               	movlw	0
  8430  001B12  6E32               	movwf	(___fladd@b+1)^0,c
  8431  001B14  0E00               	movlw	0
  8432  001B16  6E33               	movwf	(___fladd@b+2)^0,c
  8433  001B18  0E00               	movlw	0
  8434  001B1A  6E34               	movwf	(___fladd@b+3)^0,c
  8435  001B1C  503F               	movf	___fladd@bexp^0,w,c
  8436  001B1E  A4D8               	btfss	status,2,c
  8437  001B20  EF94  F00D         	goto	u3001
  8438  001B24  EF96  F00D         	goto	u3000
  8439  001B28                     u3001:
  8440  001B28  EF98  F00D         	goto	l3359
  8441  001B2C                     u3000:
  8442  001B2C  0E00               	movlw	0
  8443  001B2E  6E3D               	movwf	___fladd@signs^0,c
  8444  001B30                     l3359:
  8445  001B30  A03F               	btfss	___fladd@bexp^0,0,c
  8446  001B32  EF9D  F00D         	goto	u3011
  8447  001B36  EF9F  F00D         	goto	u3010
  8448  001B3A                     u3011:
  8449  001B3A  EFA2  F00D         	goto	l3363
  8450  001B3E                     u3010:
  8451  001B3E  8E33               	bsf	(___fladd@b+2)^0,7,c
  8452  001B40  EFA3  F00D         	goto	l3365
  8453  001B44                     l3363:
  8454  001B44  9E33               	bcf	(___fladd@b+2)^0,7,c
  8455  001B46                     l3365:
  8456  001B46  90D8               	bcf	status,0,c
  8457  001B48  303F               	rrcf	___fladd@bexp^0,w,c
  8458  001B4A  6E34               	movwf	(___fladd@b+3)^0,c
  8459  001B4C  AE3D               	btfss	___fladd@signs^0,7,c
  8460  001B4E  EFAB  F00D         	goto	u3021
  8461  001B52  EFAD  F00D         	goto	u3020
  8462  001B56                     u3021:
  8463  001B56  EFAE  F00D         	goto	l3371
  8464  001B5A                     u3020:
  8465  001B5A  8E34               	bsf	(___fladd@b+3)^0,7,c
  8466  001B5C                     l3371:
  8467  001B5C  C031  F031         	movff	___fladd@b,?___fladd
  8468  001B60  C032  F032         	movff	___fladd@b+1,?___fladd+1
  8469  001B64  C033  F033         	movff	___fladd@b+2,?___fladd+2
  8470  001B68  C034  F034         	movff	___fladd@b+3,?___fladd+3
  8471  001B6C                     l1280:
  8472  001B6C  0012               	return		;funcret
  8473  001B6E                     __end_of___fladd:
  8474                           	callstack 0
  8475                           
  8476 ;; *************** function _stop *****************
  8477 ;; Defined at:
  8478 ;;		line 135 in file "DC_motors.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;  mL              2   34[COMRAM] PTR struct .
  8481 ;;		 -> main@motorL(9), 
  8482 ;;  mR              2   36[COMRAM] PTR struct .
  8483 ;;		 -> main@motorR(9), 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;		None
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      void 
  8488 ;; Registers used:
  8489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8499 ;;Total ram usage:        6 bytes
  8500 ;; Hardware stack levels used: 1
  8501 ;; Hardware stack levels required when called: 9
  8502 ;; This function calls:
  8503 ;;		_DCmotors_setPWM
  8504 ;; This function is called by:
  8505 ;;		_main
  8506 ;;		_colourcards_readRGBC
  8507 ;;		_clearance
  8508 ;;		_DCmotors_calibration
  8509 ;;		_DCmotors_testing
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text45
  8514  0036FC                     __ptext45:
  8515                           	callstack 0
  8516  0036FC                     _stop:
  8517                           	callstack 21
  8518  0036FC                     
  8519                           ;DC_motors.c: 136:     LATDbits.LATD4 = 1;
  8520  0036FC  887C               	bsf	124,4,c	;volatile
  8521                           
  8522                           ;DC_motors.c: 138:     while((mL->power > 0) && (mR->power > 0)){
  8523  0036FE  EF9D  F01B         	goto	l3735
  8524  003702                     l3727:
  8525                           
  8526                           ;DC_motors.c: 139:         mL->power -= 10;
  8527  003702  C023  FFD9         	movff	stop@mL,fsr2l
  8528  003706  C024  FFDA         	movff	stop@mL+1,fsr2h
  8529  00370A  0E0A               	movlw	10
  8530  00370C  5EDF               	subwf	indf2,f,c
  8531                           
  8532                           ;DC_motors.c: 140:         mR->power -= 10;
  8533  00370E  C025  FFD9         	movff	stop@mR,fsr2l
  8534  003712  C026  FFDA         	movff	stop@mR+1,fsr2h
  8535  003716  0E0A               	movlw	10
  8536  003718  5EDF               	subwf	indf2,f,c
  8537  00371A                     
  8538                           ;DC_motors.c: 143:         DCmotors_setPWM(mL);
  8539  00371A  C023  F018         	movff	stop@mL,DCmotors_setPWM@m
  8540  00371E  C024  F019         	movff	stop@mL+1,DCmotors_setPWM@m+1
  8541  003722  EC2D  F016         	call	_DCmotors_setPWM	;wreg free
  8542  003726                     
  8543                           ;DC_motors.c: 144:         DCmotors_setPWM(mR);
  8544  003726  C025  F018         	movff	stop@mR,DCmotors_setPWM@m
  8545  00372A  C026  F019         	movff	stop@mR+1,DCmotors_setPWM@m+1
  8546  00372E  EC2D  F016         	call	_DCmotors_setPWM	;wreg free
  8547  003732                     
  8548                           ;DC_motors.c: 145:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8549  003732  0EA0               	movlw	160
  8550  003734                     u6287:
  8551  003734  D000               	nop2	
  8552  003736  2EE8               	decfsz	wreg,f,c
  8553  003738  D7FD               	bra	u6287
  8554  00373A                     l3735:
  8555                           
  8556                           ;DC_motors.c: 138:     while((mL->power > 0) && (mR->power > 0)){
  8557  00373A  C023  FFD9         	movff	stop@mL,fsr2l
  8558  00373E  C024  FFDA         	movff	stop@mL+1,fsr2h
  8559  003742  50DF               	movf	indf2,w,c
  8560  003744  B4D8               	btfsc	status,2,c
  8561  003746  EFA7  F01B         	goto	u3631
  8562  00374A  EFA9  F01B         	goto	u3630
  8563  00374E                     u3631:
  8564  00374E  EFB5  F01B         	goto	l3739
  8565  003752                     u3630:
  8566  003752  C025  FFD9         	movff	stop@mR,fsr2l
  8567  003756  C026  FFDA         	movff	stop@mR+1,fsr2h
  8568  00375A  50DF               	movf	indf2,w,c
  8569  00375C  A4D8               	btfss	status,2,c
  8570  00375E  EFB3  F01B         	goto	u3641
  8571  003762  EFB5  F01B         	goto	u3640
  8572  003766                     u3641:
  8573  003766  EF81  F01B         	goto	l3727
  8574  00376A                     u3640:
  8575  00376A                     l3739:
  8576                           
  8577                           ;DC_motors.c: 147:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8578  00376A  0E29               	movlw	41
  8579  00376C  6E28               	movwf	(??_stop+1)^0,c
  8580  00376E  0E96               	movlw	150
  8581  003770  6E27               	movwf	??_stop^0,c
  8582  003772  0E7F               	movlw	127
  8583  003774                     u6297:
  8584  003774  2EE8               	decfsz	wreg,f,c
  8585  003776  D7FE               	bra	u6297
  8586  003778  2E27               	decfsz	??_stop^0,f,c
  8587  00377A  D7FC               	bra	u6297
  8588  00377C  2E28               	decfsz	(??_stop+1)^0,f,c
  8589  00377E  D7FA               	bra	u6297
  8590  003780  F000               	nop	
  8591  003782                     
  8592                           ;DC_motors.c: 148:     LATDbits.LATD4 = 0;
  8593  003782  987C               	bcf	124,4,c	;volatile
  8594  003784  0012               	return		;funcret
  8595  003786                     __end_of_stop:
  8596                           	callstack 0
  8597                           
  8598 ;; *************** function _DCmotors_setPWM *****************
  8599 ;; Defined at:
  8600 ;;		line 50 in file "DC_motors.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  m               2   23[COMRAM] PTR struct .
  8603 ;;		 -> main@motorR(9), main@motorL(9), 
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;  PWMduty         2   32[COMRAM] int 
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  1    wreg      void 
  8608 ;; Registers used:
  8609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8610 ;; Tracked objects:
  8611 ;;		On entry : 0/0
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8617 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8618 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8619 ;;Total ram usage:       11 bytes
  8620 ;; Hardware stack levels used: 1
  8621 ;; Hardware stack levels required when called: 8
  8622 ;; This function calls:
  8623 ;;		___awdiv
  8624 ;;		___wmul
  8625 ;; This function is called by:
  8626 ;;		_forward
  8627 ;;		_reverse
  8628 ;;		_stop
  8629 ;;		_left
  8630 ;;		_right
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text46
  8635  002C5A                     __ptext46:
  8636                           	callstack 0
  8637  002C5A                     _DCmotors_setPWM:
  8638                           	callstack 21
  8639  002C5A                     
  8640                           ;DC_motors.c: 51:  int PWMduty;;DC_motors.c: 53:  if (m->direction){
  8641  002C5A  EE20 F001          	lfsr	2,1
  8642  002C5E  5018               	movf	DCmotors_setPWM@m^0,w,c
  8643  002C60  26D9               	addwf	fsr2l,f,c
  8644  002C62  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8645  002C64  22DA               	addwfc	fsr2h,f,c
  8646  002C66  50DF               	movf	indf2,w,c
  8647  002C68  B4D8               	btfsc	status,2,c
  8648  002C6A  EF39  F016         	goto	u2601
  8649  002C6E  EF3B  F016         	goto	u2600
  8650  002C72                     u2601:
  8651  002C72  EF6C  F016         	goto	l3163
  8652  002C76                     u2600:
  8653  002C76                     
  8654                           ;DC_motors.c: 54:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
  8655  002C76  C018  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  8656  002C7A  C019  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  8657  002C7E  50DF               	movf	indf2,w,c
  8658  002C80  6E1A               	movwf	??_DCmotors_setPWM^0,c
  8659  002C82  501A               	movf	??_DCmotors_setPWM^0,w,c
  8660  002C84  6E0A               	movwf	___wmul@multiplier^0,c
  8661  002C86  6A0B               	clrf	(___wmul@multiplier+1)^0,c
  8662  002C88  EE20 F007          	lfsr	2,7
  8663  002C8C  5018               	movf	DCmotors_setPWM@m^0,w,c
  8664  002C8E  26D9               	addwf	fsr2l,f,c
  8665  002C90  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8666  002C92  22DA               	addwfc	fsr2h,f,c
  8667  002C94  CFDE F00C          	movff	postinc2,___wmul@multiplicand
  8668  002C98  CFDD F00D          	movff	postdec2,___wmul@multiplicand+1
  8669  002C9C  EC5F  F01E         	call	___wmul	;wreg free
  8670  002CA0  C00A  F010         	movff	?___wmul,___awdiv@dividend
  8671  002CA4  C00B  F011         	movff	?___wmul+1,___awdiv@dividend+1
  8672  002CA8  0E00               	movlw	0
  8673  002CAA  6E13               	movwf	(___awdiv@divisor+1)^0,c
  8674  002CAC  0E64               	movlw	100
  8675  002CAE  6E12               	movwf	___awdiv@divisor^0,c
  8676  002CB0  EC8E  F01A         	call	___awdiv	;wreg free
  8677  002CB4  EE20 F007          	lfsr	2,7
  8678  002CB8  5018               	movf	DCmotors_setPWM@m^0,w,c
  8679  002CBA  26D9               	addwf	fsr2l,f,c
  8680  002CBC  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8681  002CBE  22DA               	addwfc	fsr2h,f,c
  8682  002CC0  CFDE F01B          	movff	postinc2,??_DCmotors_setPWM+1
  8683  002CC4  CFDD F01C          	movff	postdec2,??_DCmotors_setPWM+2
  8684  002CC8  5010               	movf	?___awdiv^0,w,c
  8685  002CCA  5C1B               	subwf	(??_DCmotors_setPWM+1)^0,w,c
  8686  002CCC  6E21               	movwf	DCmotors_setPWM@PWMduty^0,c
  8687  002CCE  5011               	movf	(?___awdiv+1)^0,w,c
  8688  002CD0  581C               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
  8689  002CD2  6E22               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
  8690                           
  8691                           ;DC_motors.c: 55:  } else {
  8692  002CD4  EF8F  F016         	goto	l3165
  8693  002CD8                     l3163:
  8694                           
  8695                           ;DC_motors.c: 56:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  8696  002CD8  C018  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  8697  002CDC  C019  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  8698  002CE0  50DF               	movf	indf2,w,c
  8699  002CE2  6E1A               	movwf	??_DCmotors_setPWM^0,c
  8700  002CE4  501A               	movf	??_DCmotors_setPWM^0,w,c
  8701  002CE6  6E0A               	movwf	___wmul@multiplier^0,c
  8702  002CE8  6A0B               	clrf	(___wmul@multiplier+1)^0,c
  8703  002CEA  EE20 F007          	lfsr	2,7
  8704  002CEE  5018               	movf	DCmotors_setPWM@m^0,w,c
  8705  002CF0  26D9               	addwf	fsr2l,f,c
  8706  002CF2  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8707  002CF4  22DA               	addwfc	fsr2h,f,c
  8708  002CF6  CFDE F00C          	movff	postinc2,___wmul@multiplicand
  8709  002CFA  CFDD F00D          	movff	postdec2,___wmul@multiplicand+1
  8710  002CFE  EC5F  F01E         	call	___wmul	;wreg free
  8711  002D02  C00A  F010         	movff	?___wmul,___awdiv@dividend
  8712  002D06  C00B  F011         	movff	?___wmul+1,___awdiv@dividend+1
  8713  002D0A  0E00               	movlw	0
  8714  002D0C  6E13               	movwf	(___awdiv@divisor+1)^0,c
  8715  002D0E  0E64               	movlw	100
  8716  002D10  6E12               	movwf	___awdiv@divisor^0,c
  8717  002D12  EC8E  F01A         	call	___awdiv	;wreg free
  8718  002D16  C010  F021         	movff	?___awdiv,DCmotors_setPWM@PWMduty
  8719  002D1A  C011  F022         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
  8720  002D1E                     l3165:
  8721                           
  8722                           ;DC_motors.c: 59:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  8723  002D1E  EE20 F002          	lfsr	2,2
  8724  002D22  5018               	movf	DCmotors_setPWM@m^0,w,c
  8725  002D24  26D9               	addwf	fsr2l,f,c
  8726  002D26  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8727  002D28  22DA               	addwfc	fsr2h,f,c
  8728  002D2A  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
  8729  002D2E  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
  8730  002D32  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  8731  002D36  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  8732  002D3A  C021  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
  8733  002D3E                     
  8734                           ;DC_motors.c: 61:  if (m->direction){
  8735  002D3E  EE20 F001          	lfsr	2,1
  8736  002D42  5018               	movf	DCmotors_setPWM@m^0,w,c
  8737  002D44  26D9               	addwf	fsr2l,f,c
  8738  002D46  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8739  002D48  22DA               	addwfc	fsr2h,f,c
  8740  002D4A  50DF               	movf	indf2,w,c
  8741  002D4C  B4D8               	btfsc	status,2,c
  8742  002D4E  EFAB  F016         	goto	u2611
  8743  002D52  EFAD  F016         	goto	u2610
  8744  002D56                     u2611:
  8745  002D56  EFE2  F016         	goto	l3171
  8746  002D5A                     u2610:
  8747  002D5A                     
  8748                           ;DC_motors.c: 62:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
  8749  002D5A  EE20 F004          	lfsr	2,4
  8750  002D5E  5018               	movf	DCmotors_setPWM@m^0,w,c
  8751  002D60  26D9               	addwf	fsr2l,f,c
  8752  002D62  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8753  002D64  22DA               	addwfc	fsr2h,f,c
  8754  002D66  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
  8755  002D6A  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
  8756  002D6E  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  8757  002D72  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  8758  002D76  EE10 F004          	lfsr	1,4
  8759  002D7A  5018               	movf	DCmotors_setPWM@m^0,w,c
  8760  002D7C  26E1               	addwf	fsr1l,f,c
  8761  002D7E  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8762  002D80  22E2               	addwfc	fsr1h,f,c
  8763  002D82  CFE6 F01C          	movff	postinc1,??_DCmotors_setPWM+2
  8764  002D86  CFE5 F01D          	movff	postdec1,??_DCmotors_setPWM+3
  8765  002D8A  C01C  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  8766  002D8E  C01D  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  8767  002D92  50E7               	movf	indf1,w,c
  8768  002D94  6E1E               	movwf	(??_DCmotors_setPWM+4)^0,c
  8769  002D96  EE10 F006          	lfsr	1,6
  8770  002D9A  5018               	movf	DCmotors_setPWM@m^0,w,c
  8771  002D9C  26E1               	addwf	fsr1l,f,c
  8772  002D9E  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8773  002DA0  22E2               	addwfc	fsr1h,f,c
  8774  002DA2  50E7               	movf	indf1,w,c
  8775  002DA4  6E1F               	movwf	(??_DCmotors_setPWM+5)^0,c
  8776  002DA6  0E01               	movlw	1
  8777  002DA8  6E20               	movwf	(??_DCmotors_setPWM+6)^0,c
  8778  002DAA  2A1F               	incf	(??_DCmotors_setPWM+5)^0,f,c
  8779  002DAC  EFDA  F016         	goto	u2624
  8780  002DB0                     u2625:
  8781  002DB0  90D8               	bcf	status,0,c
  8782  002DB2  3620               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  8783  002DB4                     u2624:
  8784  002DB4  2E1F               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  8785  002DB6  EFD8  F016         	goto	u2625
  8786  002DBA  5020               	movf	(??_DCmotors_setPWM+6)^0,w,c
  8787  002DBC  101E               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
  8788  002DBE  6EDF               	movwf	indf2,c
  8789                           
  8790                           ;DC_motors.c: 63:  } else {
  8791  002DC0  EF16  F017         	goto	l564
  8792  002DC4                     l3171:
  8793                           
  8794                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
  8795  002DC4  EE20 F004          	lfsr	2,4
  8796  002DC8  5018               	movf	DCmotors_setPWM@m^0,w,c
  8797  002DCA  26D9               	addwf	fsr2l,f,c
  8798  002DCC  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8799  002DCE  22DA               	addwfc	fsr2h,f,c
  8800  002DD0  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
  8801  002DD4  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
  8802  002DD8  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  8803  002DDC  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  8804  002DE0  EE10 F004          	lfsr	1,4
  8805  002DE4  5018               	movf	DCmotors_setPWM@m^0,w,c
  8806  002DE6  26E1               	addwf	fsr1l,f,c
  8807  002DE8  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8808  002DEA  22E2               	addwfc	fsr1h,f,c
  8809  002DEC  CFE6 F01C          	movff	postinc1,??_DCmotors_setPWM+2
  8810  002DF0  CFE5 F01D          	movff	postdec1,??_DCmotors_setPWM+3
  8811  002DF4  C01C  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  8812  002DF8  C01D  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  8813  002DFC  50E7               	movf	indf1,w,c
  8814  002DFE  6E1E               	movwf	(??_DCmotors_setPWM+4)^0,c
  8815  002E00  EE10 F006          	lfsr	1,6
  8816  002E04  5018               	movf	DCmotors_setPWM@m^0,w,c
  8817  002E06  26E1               	addwf	fsr1l,f,c
  8818  002E08  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
  8819  002E0A  22E2               	addwfc	fsr1h,f,c
  8820  002E0C  50E7               	movf	indf1,w,c
  8821  002E0E  6E1F               	movwf	(??_DCmotors_setPWM+5)^0,c
  8822  002E10  0E01               	movlw	1
  8823  002E12  6E20               	movwf	(??_DCmotors_setPWM+6)^0,c
  8824  002E14  2A1F               	incf	(??_DCmotors_setPWM+5)^0,f,c
  8825  002E16  EF0F  F017         	goto	u2634
  8826  002E1A                     u2635:
  8827  002E1A  90D8               	bcf	status,0,c
  8828  002E1C  3620               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  8829  002E1E                     u2634:
  8830  002E1E  2E1F               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  8831  002E20  EF0D  F017         	goto	u2635
  8832  002E24  5020               	movf	(??_DCmotors_setPWM+6)^0,w,c
  8833  002E26  0AFF               	xorlw	255
  8834  002E28  141E               	andwf	(??_DCmotors_setPWM+4)^0,w,c
  8835  002E2A  6EDF               	movwf	indf2,c
  8836  002E2C                     l564:
  8837  002E2C  0012               	return		;funcret
  8838  002E2E                     __end_of_DCmotors_setPWM:
  8839                           	callstack 0
  8840                           
  8841 ;; *************** function ___wmul *****************
  8842 ;; Defined at:
  8843 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;  multiplier      2    9[COMRAM] unsigned int 
  8846 ;;  multiplicand    2   11[COMRAM] unsigned int 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;  product         2   13[COMRAM] unsigned int 
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  2    9[COMRAM] unsigned int 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0, prodl, prodh
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8862 ;;Total ram usage:        6 bytes
  8863 ;; Hardware stack levels used: 1
  8864 ;; Hardware stack levels required when called: 7
  8865 ;; This function calls:
  8866 ;;		Nothing
  8867 ;; This function is called by:
  8868 ;;		_DCmotors_setPWM
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text47
  8873  003CBE                     __ptext47:
  8874                           	callstack 0
  8875  003CBE                     ___wmul:
  8876                           	callstack 21
  8877  003CBE  500A               	movf	___wmul@multiplier^0,w,c
  8878  003CC0  020C               	mulwf	___wmul@multiplicand^0,c
  8879  003CC2  CFF3 F00E          	movff	prodl,___wmul@product
  8880  003CC6  CFF4 F00F          	movff	prodh,___wmul@product+1
  8881  003CCA  500A               	movf	___wmul@multiplier^0,w,c
  8882  003CCC  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  8883  003CCE  50F3               	movf	243,w,c
  8884  003CD0  260F               	addwf	(___wmul@product+1)^0,f,c
  8885  003CD2  500B               	movf	(___wmul@multiplier+1)^0,w,c
  8886  003CD4  020C               	mulwf	___wmul@multiplicand^0,c
  8887  003CD6  50F3               	movf	243,w,c
  8888  003CD8  260F               	addwf	(___wmul@product+1)^0,f,c
  8889  003CDA  C00E  F00A         	movff	___wmul@product,?___wmul
  8890  003CDE  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  8891  003CE2  0012               	return		;funcret
  8892  003CE4                     __end_of___wmul:
  8893                           	callstack 0
  8894                           
  8895 ;; *************** function ___awdiv *****************
  8896 ;; Defined at:
  8897 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  dividend        2   15[COMRAM] int 
  8900 ;;  divisor         2   17[COMRAM] int 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  quotient        2   21[COMRAM] int 
  8903 ;;  sign            1   20[COMRAM] unsigned char 
  8904 ;;  counter         1   19[COMRAM] unsigned char 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  2   15[COMRAM] int 
  8907 ;; Registers used:
  8908 ;;		wreg, status,2, status,0
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8915 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;Total ram usage:        8 bytes
  8919 ;; Hardware stack levels used: 1
  8920 ;; Hardware stack levels required when called: 7
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_DCmotors_setPWM
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text48
  8929  00351C                     __ptext48:
  8930                           	callstack 0
  8931  00351C                     ___awdiv:
  8932                           	callstack 21
  8933  00351C  0E00               	movlw	0
  8934  00351E  6E15               	movwf	___awdiv@sign^0,c
  8935  003520  BE13               	btfsc	(___awdiv@divisor+1)^0,7,c
  8936  003522  EF97  F01A         	goto	u2520
  8937  003526  EF95  F01A         	goto	u2521
  8938  00352A                     u2521:
  8939  00352A  EF9D  F01A         	goto	l3093
  8940  00352E                     u2520:
  8941  00352E  6C12               	negf	___awdiv@divisor^0,c
  8942  003530  1E13               	comf	(___awdiv@divisor+1)^0,f,c
  8943  003532  B0D8               	btfsc	status,0,c
  8944  003534  2A13               	incf	(___awdiv@divisor+1)^0,f,c
  8945  003536  0E01               	movlw	1
  8946  003538  6E15               	movwf	___awdiv@sign^0,c
  8947  00353A                     l3093:
  8948  00353A  BE11               	btfsc	(___awdiv@dividend+1)^0,7,c
  8949  00353C  EFA4  F01A         	goto	u2530
  8950  003540  EFA2  F01A         	goto	u2531
  8951  003544                     u2531:
  8952  003544  EFAA  F01A         	goto	l3099
  8953  003548                     u2530:
  8954  003548  6C10               	negf	___awdiv@dividend^0,c
  8955  00354A  1E11               	comf	(___awdiv@dividend+1)^0,f,c
  8956  00354C  B0D8               	btfsc	status,0,c
  8957  00354E  2A11               	incf	(___awdiv@dividend+1)^0,f,c
  8958  003550  0E01               	movlw	1
  8959  003552  1A15               	xorwf	___awdiv@sign^0,f,c
  8960  003554                     l3099:
  8961  003554  0E00               	movlw	0
  8962  003556  6E17               	movwf	(___awdiv@quotient+1)^0,c
  8963  003558  0E00               	movlw	0
  8964  00355A  6E16               	movwf	___awdiv@quotient^0,c
  8965  00355C  5012               	movf	___awdiv@divisor^0,w,c
  8966  00355E  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
  8967  003560  B4D8               	btfsc	status,2,c
  8968  003562  EFB5  F01A         	goto	u2541
  8969  003566  EFB7  F01A         	goto	u2540
  8970  00356A                     u2541:
  8971  00356A  EFDF  F01A         	goto	l3121
  8972  00356E                     u2540:
  8973  00356E  0E01               	movlw	1
  8974  003570  6E14               	movwf	___awdiv@counter^0,c
  8975  003572  EFBF  F01A         	goto	l3107
  8976  003576                     l3105:
  8977  003576  90D8               	bcf	status,0,c
  8978  003578  3612               	rlcf	___awdiv@divisor^0,f,c
  8979  00357A  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
  8980  00357C  2A14               	incf	___awdiv@counter^0,f,c
  8981  00357E                     l3107:
  8982  00357E  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
  8983  003580  EFC4  F01A         	goto	u2551
  8984  003584  EFC6  F01A         	goto	u2550
  8985  003588                     u2551:
  8986  003588  EFBB  F01A         	goto	l3105
  8987  00358C                     u2550:
  8988  00358C                     l3109:
  8989  00358C  90D8               	bcf	status,0,c
  8990  00358E  3616               	rlcf	___awdiv@quotient^0,f,c
  8991  003590  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
  8992  003592  5012               	movf	___awdiv@divisor^0,w,c
  8993  003594  5C10               	subwf	___awdiv@dividend^0,w,c
  8994  003596  5013               	movf	(___awdiv@divisor+1)^0,w,c
  8995  003598  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
  8996  00359A  A0D8               	btfss	status,0,c
  8997  00359C  EFD2  F01A         	goto	u2561
  8998  0035A0  EFD4  F01A         	goto	u2560
  8999  0035A4                     u2561:
  9000  0035A4  EFD9  F01A         	goto	l3117
  9001  0035A8                     u2560:
  9002  0035A8  5012               	movf	___awdiv@divisor^0,w,c
  9003  0035AA  5E10               	subwf	___awdiv@dividend^0,f,c
  9004  0035AC  5013               	movf	(___awdiv@divisor+1)^0,w,c
  9005  0035AE  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
  9006  0035B0  8016               	bsf	___awdiv@quotient^0,0,c
  9007  0035B2                     l3117:
  9008  0035B2  90D8               	bcf	status,0,c
  9009  0035B4  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
  9010  0035B6  3212               	rrcf	___awdiv@divisor^0,f,c
  9011  0035B8  2E14               	decfsz	___awdiv@counter^0,f,c
  9012  0035BA  EFC6  F01A         	goto	l3109
  9013  0035BE                     l3121:
  9014  0035BE  5015               	movf	___awdiv@sign^0,w,c
  9015  0035C0  B4D8               	btfsc	status,2,c
  9016  0035C2  EFE5  F01A         	goto	u2571
  9017  0035C6  EFE7  F01A         	goto	u2570
  9018  0035CA                     u2571:
  9019  0035CA  EFEB  F01A         	goto	l3125
  9020  0035CE                     u2570:
  9021  0035CE  6C16               	negf	___awdiv@quotient^0,c
  9022  0035D0  1E17               	comf	(___awdiv@quotient+1)^0,f,c
  9023  0035D2  B0D8               	btfsc	status,0,c
  9024  0035D4  2A17               	incf	(___awdiv@quotient+1)^0,f,c
  9025  0035D6                     l3125:
  9026  0035D6  C016  F010         	movff	___awdiv@quotient,?___awdiv
  9027  0035DA  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
  9028  0035DE  0012               	return		;funcret
  9029  0035E0                     __end_of___awdiv:
  9030                           	callstack 0
  9031                           
  9032 ;; *************** function _adjdelay *****************
  9033 ;; Defined at:
  9034 ;;		line 295 in file "DC_motors.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;  mode            1    wreg     unsigned char 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  mode            1   11[COMRAM] unsigned char 
  9039 ;;  i               1   12[COMRAM] unsigned char 
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9053 ;;Total ram usage:        4 bytes
  9054 ;; Hardware stack levels used: 1
  9055 ;; Hardware stack levels required when called: 7
  9056 ;; This function calls:
  9057 ;;		Nothing
  9058 ;; This function is called by:
  9059 ;;		_DCmotors_calibration
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text49
  9064  00315E                     __ptext49:
  9065                           	callstack 0
  9066  00315E                     _adjdelay:
  9067                           	callstack 22
  9068                           
  9069                           ;incstack = 0
  9070                           ;adjdelay@mode stored from wreg
  9071  00315E  6E0C               	movwf	adjdelay@mode^0,c
  9072  003160                     
  9073                           ;DC_motors.c: 296:     unsigned char i;;DC_motors.c: 297:     for (i=0; i<10; i++) {
  9074  003160  0E00               	movlw	0
  9075  003162  6E0D               	movwf	adjdelay@i^0,c
  9076  003164                     l3979:
  9077                           
  9078                           ;DC_motors.c: 298:         if (mode==1){
  9079  003164  040C               	decf	adjdelay@mode^0,w,c
  9080  003166  A4D8               	btfss	status,2,c
  9081  003168  EFB8  F018         	goto	u3851
  9082  00316C  EFBA  F018         	goto	u3850
  9083  003170                     u3851:
  9084  003170  EF0A  F019         	goto	l4005
  9085  003174                     u3850:
  9086  003174                     
  9087                           ;DC_motors.c: 299:             if (!PORTFbits.RF2 && PORTFbits.RF3) {
  9088  003174  B48E               	btfsc	142,2,c	;volatile
  9089  003176  EFBF  F018         	goto	u3861
  9090  00317A  EFC1  F018         	goto	u3860
  9091  00317E                     u3861:
  9092  00317E  EFDC  F018         	goto	l663
  9093  003182                     u3860:
  9094  003182  A68E               	btfss	142,3,c	;volatile
  9095  003184  EFC6  F018         	goto	u3871
  9096  003188  EFC8  F018         	goto	u3870
  9097  00318C                     u3871:
  9098  00318C  EFDC  F018         	goto	l663
  9099  003190                     u3870:
  9100  003190                     
  9101                           ;DC_motors.c: 300:                 LATDbits.LATD7 = 1;
  9102  003190  8E7C               	bsf	124,7,c	;volatile
  9103  003192                     
  9104                           ;DC_motors.c: 301:                 turnright_calangle -= 5;
  9105  003192  0EFB               	movlw	251
  9106  003194  264E               	addwf	_turnright_calangle^0,f,c	;volatile
  9107  003196  0EFF               	movlw	255
  9108  003198  224F               	addwfc	(_turnright_calangle+1)^0,f,c	;volatile
  9109  00319A                     
  9110                           ;DC_motors.c: 302:                 _delay((unsigned long)((800)*(64000000/4000.0)));
  9111  00319A  0E41               	movlw	65
  9112  00319C  6E0B               	movwf	(??_adjdelay+1)^0,c
  9113  00319E  0EF0               	movlw	240
  9114  0031A0  6E0A               	movwf	??_adjdelay^0,c
  9115  0031A2  0E33               	movlw	51
  9116  0031A4                     u6307:
  9117  0031A4  2EE8               	decfsz	wreg,f,c
  9118  0031A6  D7FE               	bra	u6307
  9119  0031A8  2E0A               	decfsz	??_adjdelay^0,f,c
  9120  0031AA  D7FC               	bra	u6307
  9121  0031AC  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  9122  0031AE  D7FA               	bra	u6307
  9123  0031B0  F000               	nop	
  9124  0031B2                     
  9125                           ;DC_motors.c: 303:                 LATDbits.LATD7 = 0;
  9126  0031B2  9E7C               	bcf	124,7,c	;volatile
  9127                           
  9128                           ;DC_motors.c: 304:             } else if (!PORTFbits.RF3 && PORTFbits.RF2) {
  9129  0031B4  EFFC  F018         	goto	l4003
  9130  0031B8                     l663:
  9131  0031B8  B68E               	btfsc	142,3,c	;volatile
  9132  0031BA  EFE1  F018         	goto	u3881
  9133  0031BE  EFE3  F018         	goto	u3880
  9134  0031C2                     u3881:
  9135  0031C2  EFFC  F018         	goto	l4003
  9136  0031C6                     u3880:
  9137  0031C6  A48E               	btfss	142,2,c	;volatile
  9138  0031C8  EFE8  F018         	goto	u3891
  9139  0031CC  EFEA  F018         	goto	u3890
  9140  0031D0                     u3891:
  9141  0031D0  EFFC  F018         	goto	l4003
  9142  0031D4                     u3890:
  9143  0031D4                     
  9144                           ;DC_motors.c: 305:                 LATHbits.LATH3 = 1;
  9145  0031D4  8680               	bsf	128,3,c	;volatile
  9146  0031D6                     
  9147                           ;DC_motors.c: 306:                 turnright_calangle += 5;
  9148  0031D6  0E05               	movlw	5
  9149  0031D8  264E               	addwf	_turnright_calangle^0,f,c	;volatile
  9150  0031DA  0E00               	movlw	0
  9151  0031DC  224F               	addwfc	(_turnright_calangle+1)^0,f,c	;volatile
  9152  0031DE                     
  9153                           ;DC_motors.c: 307:                 _delay((unsigned long)((800)*(64000000/4000.0)));
  9154  0031DE  0E41               	movlw	65
  9155  0031E0  6E0B               	movwf	(??_adjdelay+1)^0,c
  9156  0031E2  0EF0               	movlw	240
  9157  0031E4  6E0A               	movwf	??_adjdelay^0,c
  9158  0031E6  0E33               	movlw	51
  9159  0031E8                     u6317:
  9160  0031E8  2EE8               	decfsz	wreg,f,c
  9161  0031EA  D7FE               	bra	u6317
  9162  0031EC  2E0A               	decfsz	??_adjdelay^0,f,c
  9163  0031EE  D7FC               	bra	u6317
  9164  0031F0  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  9165  0031F2  D7FA               	bra	u6317
  9166  0031F4  F000               	nop	
  9167  0031F6                     
  9168                           ;DC_motors.c: 308:                 LATHbits.LATH3 = 0;
  9169  0031F6  9680               	bcf	128,3,c	;volatile
  9170  0031F8                     l4003:
  9171                           
  9172                           ;DC_motors.c: 310:             _delay((unsigned long)((200)*(64000000/4000.0)));
  9173  0031F8  0E11               	movlw	17
  9174  0031FA  6E0B               	movwf	(??_adjdelay+1)^0,c
  9175  0031FC  0E3C               	movlw	60
  9176  0031FE  6E0A               	movwf	??_adjdelay^0,c
  9177  003200  0ECB               	movlw	203
  9178  003202                     u6327:
  9179  003202  2EE8               	decfsz	wreg,f,c
  9180  003204  D7FE               	bra	u6327
  9181  003206  2E0A               	decfsz	??_adjdelay^0,f,c
  9182  003208  D7FC               	bra	u6327
  9183  00320A  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  9184  00320C  D7FA               	bra	u6327
  9185  00320E  F000               	nop	
  9186                           
  9187                           ;DC_motors.c: 312:         } else if (mode==2) {
  9188  003210  EF57  F019         	goto	l4031
  9189  003214                     l4005:
  9190  003214  0E02               	movlw	2
  9191  003216  180C               	xorwf	adjdelay@mode^0,w,c
  9192  003218  A4D8               	btfss	status,2,c
  9193  00321A  EF11  F019         	goto	u3901
  9194  00321E  EF13  F019         	goto	u3900
  9195  003222                     u3901:
  9196  003222  EF57  F019         	goto	l4031
  9197  003226                     u3900:
  9198  003226                     
  9199                           ;DC_motors.c: 313:             if (!PORTFbits.RF3 && PORTFbits.RF2) {
  9200  003226  B68E               	btfsc	142,3,c	;volatile
  9201  003228  EF18  F019         	goto	u3911
  9202  00322C  EF1A  F019         	goto	u3910
  9203  003230                     u3911:
  9204  003230  EF35  F019         	goto	l668
  9205  003234                     u3910:
  9206  003234  A48E               	btfss	142,2,c	;volatile
  9207  003236  EF1F  F019         	goto	u3921
  9208  00323A  EF21  F019         	goto	u3920
  9209  00323E                     u3921:
  9210  00323E  EF35  F019         	goto	l668
  9211  003242                     u3920:
  9212  003242                     
  9213                           ;DC_motors.c: 314:                 LATHbits.LATH3 = 1;
  9214  003242  8680               	bsf	128,3,c	;volatile
  9215  003244                     
  9216                           ;DC_motors.c: 315:                 turnleft_calangle -= 5;
  9217  003244  0EFB               	movlw	251
  9218  003246  2650               	addwf	_turnleft_calangle^0,f,c	;volatile
  9219  003248  0EFF               	movlw	255
  9220  00324A  2251               	addwfc	(_turnleft_calangle+1)^0,f,c	;volatile
  9221  00324C                     
  9222                           ;DC_motors.c: 316:                 _delay((unsigned long)((800)*(64000000/4000.0)));
  9223  00324C  0E41               	movlw	65
  9224  00324E  6E0B               	movwf	(??_adjdelay+1)^0,c
  9225  003250  0EF0               	movlw	240
  9226  003252  6E0A               	movwf	??_adjdelay^0,c
  9227  003254  0E33               	movlw	51
  9228  003256                     u6337:
  9229  003256  2EE8               	decfsz	wreg,f,c
  9230  003258  D7FE               	bra	u6337
  9231  00325A  2E0A               	decfsz	??_adjdelay^0,f,c
  9232  00325C  D7FC               	bra	u6337
  9233  00325E  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  9234  003260  D7FA               	bra	u6337
  9235  003262  F000               	nop	
  9236  003264                     
  9237                           ;DC_motors.c: 317:                 LATHbits.LATH3 = 0;
  9238  003264  9680               	bcf	128,3,c	;volatile
  9239                           
  9240                           ;DC_motors.c: 318:             } else if (!PORTFbits.RF2 && PORTFbits.RF3) {
  9241  003266  EFFC  F018         	goto	l4003
  9242  00326A                     l668:
  9243  00326A  B48E               	btfsc	142,2,c	;volatile
  9244  00326C  EF3A  F019         	goto	u3931
  9245  003270  EF3C  F019         	goto	u3930
  9246  003274                     u3931:
  9247  003274  EFFC  F018         	goto	l4003
  9248  003278                     u3930:
  9249  003278  A68E               	btfss	142,3,c	;volatile
  9250  00327A  EF41  F019         	goto	u3941
  9251  00327E  EF43  F019         	goto	u3940
  9252  003282                     u3941:
  9253  003282  EFFC  F018         	goto	l4003
  9254  003286                     u3940:
  9255  003286                     
  9256                           ;DC_motors.c: 319:                 LATDbits.LATD7 = 1;
  9257  003286  8E7C               	bsf	124,7,c	;volatile
  9258  003288                     
  9259                           ;DC_motors.c: 320:                 turnleft_calangle += 5;
  9260  003288  0E05               	movlw	5
  9261  00328A  2650               	addwf	_turnleft_calangle^0,f,c	;volatile
  9262  00328C  0E00               	movlw	0
  9263  00328E  2251               	addwfc	(_turnleft_calangle+1)^0,f,c	;volatile
  9264  003290                     
  9265                           ;DC_motors.c: 321:                 _delay((unsigned long)((800)*(64000000/4000.0)));
  9266  003290  0E41               	movlw	65
  9267  003292  6E0B               	movwf	(??_adjdelay+1)^0,c
  9268  003294  0EF0               	movlw	240
  9269  003296  6E0A               	movwf	??_adjdelay^0,c
  9270  003298  0E33               	movlw	51
  9271  00329A                     u6347:
  9272  00329A  2EE8               	decfsz	wreg,f,c
  9273  00329C  D7FE               	bra	u6347
  9274  00329E  2E0A               	decfsz	??_adjdelay^0,f,c
  9275  0032A0  D7FC               	bra	u6347
  9276  0032A2  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
  9277  0032A4  D7FA               	bra	u6347
  9278  0032A6  F000               	nop	
  9279  0032A8                     
  9280                           ;DC_motors.c: 322:                 LATDbits.LATD7 = 0;
  9281  0032A8  9E7C               	bcf	124,7,c	;volatile
  9282  0032AA  EFFC  F018         	goto	l4003
  9283  0032AE                     l4031:
  9284                           
  9285                           ;DC_motors.c: 326:     }
  9286  0032AE  2A0D               	incf	adjdelay@i^0,f,c
  9287  0032B0  0E09               	movlw	9
  9288  0032B2  640D               	cpfsgt	adjdelay@i^0,c
  9289  0032B4  EF5E  F019         	goto	u3951
  9290  0032B8  EF60  F019         	goto	u3950
  9291  0032BC                     u3951:
  9292  0032BC  EFB2  F018         	goto	l3979
  9293  0032C0                     u3950:
  9294  0032C0  0012               	return		;funcret
  9295  0032C2                     __end_of_adjdelay:
  9296                           	callstack 0
  9297                           
  9298 ;; *************** function _ADC_init *****************
  9299 ;; Defined at:
  9300 ;;		line 8 in file "ADC.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;		None
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;		None
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      void 
  9307 ;; Registers used:
  9308 ;;		wreg, status,2
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9318 ;;Total ram usage:        0 bytes
  9319 ;; Hardware stack levels used: 1
  9320 ;; Hardware stack levels required when called: 7
  9321 ;; This function calls:
  9322 ;;		Nothing
  9323 ;; This function is called by:
  9324 ;;		_main
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           	psect	text50
  9329  003E08                     __ptext50:
  9330                           	callstack 0
  9331  003E08                     _ADC_init:
  9332                           	callstack 23
  9333  003E08                     
  9334                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  9335  003E08  8C86               	bsf	134,6,c	;volatile
  9336                           
  9337                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  9338  003E0A  010E               	movlb	14	; () banked
  9339  003E0C  8DB4               	bsf	180,6,b	;volatile
  9340                           
  9341                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  9342  003E0E  010F               	movlb	15	; () banked
  9343  003E10  9958               	bcf	88,4,b	;volatile
  9344  003E12                     
  9345                           ; BSR set to: 15
  9346                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  9347  003E12  0EFC               	movlw	-4
  9348  003E14  1758               	andwf	88,f,b	;volatile
  9349                           
  9350                           ;ADC.c: 16:     ADPCH=0b101110;
  9351  003E16  0E2E               	movlw	46
  9352  003E18  6F5F               	movwf	95,b	;volatile
  9353  003E1A                     
  9354                           ; BSR set to: 15
  9355                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  9356  003E1A  9460               	bcf	96,2,c	;volatile
  9357  003E1C                     
  9358                           ; BSR set to: 15
  9359                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  9360  003E1C  8860               	bsf	96,4,c	;volatile
  9361  003E1E                     
  9362                           ; BSR set to: 15
  9363                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  9364  003E1E  8E60               	bsf	96,7,c	;volatile
  9365  003E20                     
  9366                           ; BSR set to: 15
  9367  003E20  0012               	return		;funcret
  9368  003E22                     __end_of_ADC_init:
  9369                           	callstack 0
  9370                           
  9371 ;; *************** function _LowISR *****************
  9372 ;; Defined at:
  9373 ;;		line 77 in file "interrupts.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;		None
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;		None
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  1    wreg      void 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9389 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9391 ;;Total ram usage:        3 bytes
  9392 ;; Hardware stack levels used: 1
  9393 ;; Hardware stack levels required when called: 6
  9394 ;; This function calls:
  9395 ;;		Nothing
  9396 ;; This function is called by:
  9397 ;;		Interrupt level 1
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	intcodelo
  9402  000018                     __pintcodelo:
  9403                           	callstack 0
  9404  000018                     _LowISR:
  9405                           	callstack 18
  9406                           
  9407                           ; BSR set to: 15
  9408                           ;incstack = 0
  9409  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9410  00001A  CFD8 F007          	movff	status,??_LowISR
  9411  00001E  CFE8 F008          	movff	wreg,??_LowISR+1
  9412  000022  CFE0 F009          	movff	bsr,??_LowISR+2
  9413  000026                     
  9414                           ;interrupts.c: 78:     if (PIR0bits.TMR0IF) {
  9415  000026  010E               	movlb	14	; () banked
  9416  000028  AB33               	btfss	51,5,b	;volatile
  9417  00002A  EF19  F000         	goto	i1u443_21
  9418  00002E  EF1B  F000         	goto	i1u443_20
  9419  000032                     i1u443_21:
  9420  000032  EF26  F000         	goto	i1l146
  9421  000036                     i1u443_20:
  9422  000036                     
  9423                           ; BSR set to: 14
  9424                           ;interrupts.c: 79:         returnhome_flag = 1;
  9425  000036  0E01               	movlw	1
  9426  000038  0100               	movlb	0	; () banked
  9427  00003A  6FB5               	movwf	_returnhome_flag& (0+255),b	;volatile
  9428                           
  9429                           ;interrupts.c: 80:         overtime_flag = 1;
  9430  00003C  0E01               	movlw	1
  9431  00003E  6FB4               	movwf	_overtime_flag& (0+255),b	;volatile
  9432                           
  9433                           ;interrupts.c: 81:         TMR0H=0b1011;
  9434  000040  0E0B               	movlw	11
  9435  000042  6ED4               	movwf	212,c	;volatile
  9436                           
  9437                           ;interrupts.c: 82:         TMR0L=0b11011011;
  9438  000044  0EDB               	movlw	219
  9439  000046  6ED3               	movwf	211,c	;volatile
  9440  000048                     
  9441                           ; BSR set to: 0
  9442                           ;interrupts.c: 83:         PIR0bits.TMR0IF = 0;
  9443  000048  010E               	movlb	14	; () banked
  9444  00004A  9B33               	bcf	51,5,b	;volatile
  9445  00004C                     i1l146:
  9446                           
  9447                           ; BSR set to: 14
  9448  00004C  C009  FFE0         	movff	??_LowISR+2,bsr
  9449  000050  C008  FFE8         	movff	??_LowISR+1,wreg
  9450  000054  C007  FFD8         	movff	??_LowISR,status
  9451  000058  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9452  00005A  0010               	retfie	
  9453  00005C                     __end_of_LowISR:
  9454                           	callstack 0
  9455                           
  9456 ;; *************** function _HighISR *****************
  9457 ;; Defined at:
  9458 ;;		line 64 in file "interrupts.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;		None
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;		None
  9463 ;; Return value:  Size  Location     Type
  9464 ;;                  1    wreg      void 
  9465 ;; Registers used:
  9466 ;;		wreg, status,2, status,0, cstack
  9467 ;; Tracked objects:
  9468 ;;		On entry : 0/0
  9469 ;;		On exit  : 0/0
  9470 ;;		Unchanged: 0/0
  9471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9476 ;;Total ram usage:        1 bytes
  9477 ;; Hardware stack levels used: 1
  9478 ;; Hardware stack levels required when called: 5
  9479 ;; This function calls:
  9480 ;;		i2_interrupts_clear
  9481 ;; This function is called by:
  9482 ;;		Interrupt level 2
  9483 ;; This function uses a non-reentrant model
  9484 ;;
  9485                           
  9486                           	psect	intcode
  9487  000008                     __pintcode:
  9488                           	callstack 0
  9489  000008                     _HighISR:
  9490                           	callstack 18
  9491                           
  9492                           ; BSR set to: 14
  9493                           ;incstack = 0
  9494  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9495  00000A  EFC3  F01D         	goto	int_func
  9496                           
  9497                           	psect	intcode_body
  9498  003B86                     __pintcode_body:
  9499                           	callstack 18
  9500  003B86                     int_func:
  9501                           	callstack 18
  9502  003B86                     
  9503                           ;interrupts.c: 65:     if (PIR0bits.INT1IF) {
  9504  003B86  010E               	movlb	14	; () banked
  9505  003B88  A333               	btfss	51,1,b	;volatile
  9506  003B8A  EFC9  F01D         	goto	i2u440_41
  9507  003B8E  EFCB  F01D         	goto	i2u440_40
  9508  003B92                     i2u440_41:
  9509  003B92  EFE3  F01D         	goto	i2l140
  9510  003B96                     i2u440_40:
  9511  003B96                     
  9512                           ; BSR set to: 14
  9513                           ;interrupts.c: 66:         colourcard_flag = 1;
  9514  003B96  0E01               	movlw	1
  9515  003B98  0100               	movlb	0	; () banked
  9516  003B9A  6FB7               	movwf	_colourcard_flag& (0+255),b	;volatile
  9517  003B9C                     
  9518                           ; BSR set to: 0
  9519                           ;interrupts.c: 67:         LATDbits.LATD7 = !LATDbits.LATD7;
  9520  003B9C  AE7C               	btfss	124,7,c	;volatile
  9521  003B9E  EFD3  F01D         	goto	i2u441_41
  9522  003BA2  EFD7  F01D         	goto	i2u441_40
  9523  003BA6                     i2u441_41:
  9524  003BA6  6A06               	clrf	??_HighISR^0,c
  9525  003BA8  2A06               	incf	??_HighISR^0,f,c
  9526  003BAA  EFD8  F01D         	goto	i2u442_48
  9527  003BAE                     i2u441_40:
  9528  003BAE  6A06               	clrf	??_HighISR^0,c
  9529  003BB0                     i2u442_48:
  9530  003BB0  3206               	rrcf	??_HighISR^0,f,c
  9531  003BB2  3206               	rrcf	??_HighISR^0,f,c
  9532  003BB4  507C               	movf	124,w,c	;volatile
  9533  003BB6  1806               	xorwf	??_HighISR^0,w,c
  9534  003BB8  0B7F               	andlw	-129
  9535  003BBA  1806               	xorwf	??_HighISR^0,w,c
  9536  003BBC  6E7C               	movwf	124,c	;volatile
  9537  003BBE                     
  9538                           ;interrupts.c: 68:         interrupts_clear();
  9539  003BBE  EC11  F01F         	call	i2_interrupts_clear	;wreg free
  9540  003BC2                     
  9541                           ;interrupts.c: 69:         PIR0bits.INT1IF = 0;
  9542  003BC2  010E               	movlb	14	; () banked
  9543  003BC4  9333               	bcf	51,1,b	;volatile
  9544  003BC6                     i2l140:
  9545                           
  9546                           ; BSR set to: 14
  9547  003BC6  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9548  003BC8  0011               	retfie		f
  9549  003BCA                     __end_of_HighISR:
  9550                           	callstack 0
  9551                           
  9552 ;; *************** function i2_interrupts_clear *****************
  9553 ;; Defined at:
  9554 ;;		line 37 in file "interrupts.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2, status,0, cstack
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9572 ;;Total ram usage:        0 bytes
  9573 ;; Hardware stack levels used: 1
  9574 ;; Hardware stack levels required when called: 4
  9575 ;; This function calls:
  9576 ;;		i2_I2C_2_Master_Start
  9577 ;;		i2_I2C_2_Master_Stop
  9578 ;;		i2_I2C_2_Master_Write
  9579 ;;		i2_interrupts_colourclick
  9580 ;; This function is called by:
  9581 ;;		_HighISR
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           	psect	text53
  9586  003E22                     __ptext53:
  9587                           	callstack 0
  9588  003E22                     i2_interrupts_clear:
  9589                           	callstack 18
  9590  003E22                     
  9591                           ;interrupts.c: 38:     I2C_2_Master_Start();
  9592  003E22  EC67  F01F         	call	i2_I2C_2_Master_Start	;wreg free
  9593                           
  9594                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  9595  003E26  0E52               	movlw	82
  9596  003E28  EC48  F01F         	call	i2_I2C_2_Master_Write
  9597                           
  9598                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  9599  003E2C  0EE6               	movlw	230
  9600  003E2E  EC48  F01F         	call	i2_I2C_2_Master_Write
  9601                           
  9602                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  9603  003E32  EC62  F01F         	call	i2_I2C_2_Master_Stop	;wreg free
  9604                           
  9605                           ;interrupts.c: 43:     interrupts_colourclick();
  9606  003E36  EC9C  F01D         	call	i2_interrupts_colourclick	;wreg free
  9607  003E3A  0012               	return		;funcret
  9608  003E3C                     __end_ofi2_interrupts_clear:
  9609                           	callstack 0
  9610                           
  9611 ;; *************** function i2_interrupts_colourclick *****************
  9612 ;; Defined at:
  9613 ;;		line 50 in file "interrupts.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;		None
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;		None
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  1    wreg      void 
  9620 ;; Registers used:
  9621 ;;		wreg, status,2, status,0, cstack
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;Total ram usage:        1 bytes
  9632 ;; Hardware stack levels used: 1
  9633 ;; Hardware stack levels required when called: 3
  9634 ;; This function calls:
  9635 ;;		i2_colourclick_writetoaddr
  9636 ;; This function is called by:
  9637 ;;		i2_interrupts_clear
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           	psect	text54
  9642  003B38                     __ptext54:
  9643                           	callstack 0
  9644  003B38                     i2_interrupts_colourclick:
  9645                           	callstack 18
  9646  003B38                     
  9647                           ;interrupts.c: 51:     colourclick_writetoaddr(0x00, 0b10011);
  9648  003B38  0E13               	movlw	19
  9649  003B3A  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9650  003B3C  0E00               	movlw	0
  9651  003B3E  ECE7  F01E         	call	i2_colourclick_writetoaddr
  9652  003B42                     
  9653                           ;interrupts.c: 52:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9654  003B42  0E3F               	movlw	63
  9655  003B44  6E05               	movwf	??i2_interrupts_colourclick^0,c
  9656  003B46  0E55               	movlw	85
  9657  003B48                     i2u635_47:
  9658  003B48  2EE8               	decfsz	wreg,f,c
  9659  003B4A  D7FE               	bra	i2u635_47
  9660  003B4C  2E05               	decfsz	??i2_interrupts_colourclick^0,f,c
  9661  003B4E  D7FC               	bra	i2u635_47
  9662  003B50  F000               	nop	
  9663  003B52                     
  9664                           ;interrupts.c: 53:     colourclick_writetoaddr(0x0C, 0b0100);
  9665  003B52  0E04               	movlw	4
  9666  003B54  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9667  003B56  0E0C               	movlw	12
  9668  003B58  ECE7  F01E         	call	i2_colourclick_writetoaddr
  9669  003B5C                     
  9670                           ;interrupts.c: 54:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  9671  003B5C  C054  F003         	movff	_interrupts_lowerbound,i2colourclick_writetoaddr@value	;volatile
  9672  003B60  0E04               	movlw	4
  9673  003B62  ECE7  F01E         	call	i2_colourclick_writetoaddr
  9674  003B66                     
  9675                           ;interrupts.c: 55:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  9676  003B66  5055               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  9677  003B68  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9678  003B6A  0E05               	movlw	5
  9679  003B6C  ECE7  F01E         	call	i2_colourclick_writetoaddr
  9680  003B70                     
  9681                           ;interrupts.c: 56:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  9682  003B70  C052  F003         	movff	_interrupts_upperbound,i2colourclick_writetoaddr@value	;volatile
  9683  003B74  0E06               	movlw	6
  9684  003B76  ECE7  F01E         	call	i2_colourclick_writetoaddr
  9685  003B7A                     
  9686                           ;interrupts.c: 57:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  9687  003B7A  5053               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  9688  003B7C  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9689  003B7E  0E07               	movlw	7
  9690  003B80  ECE7  F01E         	call	i2_colourclick_writetoaddr
  9691  003B84  0012               	return		;funcret
  9692  003B86                     __end_ofi2_interrupts_colourclick:
  9693                           	callstack 0
  9694                           
  9695 ;; *************** function i2_colourclick_writetoaddr *****************
  9696 ;; Defined at:
  9697 ;;		line 33 in file "colour_click.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  address         1    wreg     unsigned char 
  9700 ;;  value           1    2[COMRAM] unsigned char 
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;  address         1    3[COMRAM] unsigned char 
  9703 ;; Return value:  Size  Location     Type
  9704 ;;                  1    wreg      void 
  9705 ;; Registers used:
  9706 ;;		wreg, status,2, status,0, cstack
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/0
  9709 ;;		On exit  : 0/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9712 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9716 ;;Total ram usage:        2 bytes
  9717 ;; Hardware stack levels used: 1
  9718 ;; Hardware stack levels required when called: 2
  9719 ;; This function calls:
  9720 ;;		i2_I2C_2_Master_Start
  9721 ;;		i2_I2C_2_Master_Stop
  9722 ;;		i2_I2C_2_Master_Write
  9723 ;; This function is called by:
  9724 ;;		i2_interrupts_colourclick
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           	psect	text55
  9729  003DCE                     __ptext55:
  9730                           	callstack 0
  9731  003DCE                     i2_colourclick_writetoaddr:
  9732                           	callstack 18
  9733                           
  9734                           ;incstack = 0
  9735                           ;i2colourclick_writetoaddr@address stored from wreg
  9736  003DCE  6E04               	movwf	i2colourclick_writetoaddr@address^0,c
  9737  003DD0                     
  9738                           ;colour_click.c: 34:     I2C_2_Master_Start();
  9739  003DD0  EC67  F01F         	call	i2_I2C_2_Master_Start	;wreg free
  9740                           
  9741                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  9742  003DD4  0E52               	movlw	82
  9743  003DD6  EC48  F01F         	call	i2_I2C_2_Master_Write
  9744                           
  9745                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  9746  003DDA  5004               	movf	i2colourclick_writetoaddr@address^0,w,c
  9747  003DDC  0980               	iorlw	128
  9748  003DDE  EC48  F01F         	call	i2_I2C_2_Master_Write
  9749                           
  9750                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  9751  003DE2  5003               	movf	i2colourclick_writetoaddr@value^0,w,c
  9752  003DE4  EC48  F01F         	call	i2_I2C_2_Master_Write
  9753                           
  9754                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  9755  003DE8  EC62  F01F         	call	i2_I2C_2_Master_Stop	;wreg free
  9756  003DEC  0012               	return		;funcret
  9757  003DEE                     __end_ofi2_colourclick_writetoaddr:
  9758                           	callstack 0
  9759                           
  9760 ;; *************** function i2_I2C_2_Master_Write *****************
  9761 ;; Defined at:
  9762 ;;		line 64 in file "I2C.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  data_byte       1    wreg     unsigned char 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  data_byte       1    1[COMRAM] unsigned char 
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  1    wreg      void 
  9769 ;; Registers used:
  9770 ;;		wreg, status,2, status,0, cstack
  9771 ;; Tracked objects:
  9772 ;;		On entry : 0/0
  9773 ;;		On exit  : 0/0
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9780 ;;Total ram usage:        1 bytes
  9781 ;; Hardware stack levels used: 1
  9782 ;; Hardware stack levels required when called: 1
  9783 ;; This function calls:
  9784 ;;		i2_I2C_2_Master_Idle
  9785 ;; This function is called by:
  9786 ;;		i2_interrupts_clear
  9787 ;;		i2_colourclick_writetoaddr
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text56
  9792  003E90                     __ptext56:
  9793                           	callstack 0
  9794  003E90                     i2_I2C_2_Master_Write:
  9795                           	callstack 18
  9796                           
  9797                           ;incstack = 0
  9798                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9799  003E90  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9800  003E92                     
  9801                           ;I2C.c: 65:   I2C_2_Master_Idle();
  9802  003E92  EC4B  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
  9803  003E96                     
  9804                           ;I2C.c: 66:   SSP2BUF = data_byte;
  9805  003E96  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9806  003E9A  0012               	return		;funcret
  9807  003E9C                     __end_ofi2_I2C_2_Master_Write:
  9808                           	callstack 0
  9809                           
  9810 ;; *************** function i2_I2C_2_Master_Stop *****************
  9811 ;; Defined at:
  9812 ;;		line 55 in file "I2C.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;		None
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;		None
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		wreg, status,2, status,0, cstack
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;Total ram usage:        0 bytes
  9831 ;; Hardware stack levels used: 1
  9832 ;; Hardware stack levels required when called: 1
  9833 ;; This function calls:
  9834 ;;		i2_I2C_2_Master_Idle
  9835 ;; This function is called by:
  9836 ;;		i2_interrupts_clear
  9837 ;;		i2_colourclick_writetoaddr
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841                           	psect	text57
  9842  003EC4                     __ptext57:
  9843                           	callstack 0
  9844  003EC4                     i2_I2C_2_Master_Stop:
  9845                           	callstack 18
  9846  003EC4                     
  9847                           ;I2C.c: 56:   I2C_2_Master_Idle();
  9848  003EC4  EC4B  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
  9849  003EC8                     
  9850                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
  9851  003EC8  010E               	movlb	14	; () banked
  9852  003ECA  85DA               	bsf	218,2,b	;volatile
  9853  003ECC                     
  9854                           ; BSR set to: 14
  9855  003ECC  0012               	return		;funcret
  9856  003ECE                     __end_ofi2_I2C_2_Master_Stop:
  9857                           	callstack 0
  9858                           
  9859 ;; *************** function i2_I2C_2_Master_Start *****************
  9860 ;; Defined at:
  9861 ;;		line 37 in file "I2C.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;		None
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;		None
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  1    wreg      void 
  9868 ;; Registers used:
  9869 ;;		wreg, status,2, status,0, cstack
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9879 ;;Total ram usage:        0 bytes
  9880 ;; Hardware stack levels used: 1
  9881 ;; Hardware stack levels required when called: 1
  9882 ;; This function calls:
  9883 ;;		i2_I2C_2_Master_Idle
  9884 ;; This function is called by:
  9885 ;;		i2_interrupts_clear
  9886 ;;		i2_colourclick_writetoaddr
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text58
  9891  003ECE                     __ptext58:
  9892                           	callstack 0
  9893  003ECE                     i2_I2C_2_Master_Start:
  9894                           	callstack 18
  9895  003ECE                     
  9896                           ;I2C.c: 38:   I2C_2_Master_Idle();
  9897  003ECE  EC4B  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
  9898  003ED2                     
  9899                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
  9900  003ED2  010E               	movlb	14	; () banked
  9901  003ED4  81DA               	bsf	218,0,b	;volatile
  9902  003ED6                     
  9903                           ; BSR set to: 14
  9904  003ED6  0012               	return		;funcret
  9905  003ED8                     __end_ofi2_I2C_2_Master_Start:
  9906                           	callstack 0
  9907                           
  9908 ;; *************** function i2_I2C_2_Master_Idle *****************
  9909 ;; Defined at:
  9910 ;;		line 29 in file "I2C.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;		None
  9913 ;; Auto vars:     Size  Location     Type
  9914 ;;		None
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  1    wreg      void 
  9917 ;; Registers used:
  9918 ;;		wreg, status,2, status,0
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9928 ;;Total ram usage:        1 bytes
  9929 ;; Hardware stack levels used: 1
  9930 ;; This function calls:
  9931 ;;		Nothing
  9932 ;; This function is called by:
  9933 ;;		i2_I2C_2_Master_Start
  9934 ;;		i2_I2C_2_Master_Stop
  9935 ;;		i2_I2C_2_Master_Write
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939                           	psect	text59
  9940  003C96                     __ptext59:
  9941                           	callstack 0
  9942  003C96                     i2_I2C_2_Master_Idle:
  9943                           	callstack 18
  9944  003C96                     i2l433:
  9945  003C96  010E               	movlb	14	; () banked
  9946  003C98  B5D8               	btfsc	216,2,b	;volatile
  9947  003C9A  EF51  F01E         	goto	i2u258_41
  9948  003C9E  EF53  F01E         	goto	i2u258_40
  9949  003CA2                     i2u258_41:
  9950  003CA2  EF4B  F01E         	goto	i2l433
  9951  003CA6                     i2u258_40:
  9952  003CA6                     
  9953                           ; BSR set to: 14
  9954  003CA6  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9955  003CAA  0E1F               	movlw	31
  9956  003CAC  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9957  003CAE  A4D8               	btfss	status,2,c
  9958  003CB0  EF5C  F01E         	goto	i2u259_41
  9959  003CB4  EF5E  F01E         	goto	i2u259_40
  9960  003CB8                     i2u259_41:
  9961  003CB8  EF4B  F01E         	goto	i2l433
  9962  003CBC                     i2u259_40:
  9963  003CBC                     
  9964                           ; BSR set to: 14
  9965  003CBC  0012               	return		;funcret
  9966  003CBE                     __end_ofi2_I2C_2_Master_Idle:
  9967                           	callstack 0
  9968                           
  9969                           	psect	rparam
  9970  0000                     
  9971                           	psect	temp
  9972  000056                     btemp:
  9973                           	callstack 0
  9974  000056                     	ds	1
  9975  0000                     int$flags	set	btemp
  9976  0000                     wtemp8	set	btemp+1
  9977  0000                     ttemp5	set	btemp+1
  9978  0000                     ttemp6	set	btemp+4
  9979  0000                     ttemp7	set	btemp+8
  9980                           
  9981                           	psect	idloc
  9982                           
  9983                           ;Config register IDLOC0 @ 0x200000
  9984                           ;	unspecified, using default values
  9985  200000                     	org	2097152
  9986  200000  0FFF               	dw	4095
  9987                           
  9988                           ;Config register IDLOC1 @ 0x200002
  9989                           ;	unspecified, using default values
  9990  200002                     	org	2097154
  9991  200002  0FFF               	dw	4095
  9992                           
  9993                           ;Config register IDLOC2 @ 0x200004
  9994                           ;	unspecified, using default values
  9995  200004                     	org	2097156
  9996  200004  0FFF               	dw	4095
  9997                           
  9998                           ;Config register IDLOC3 @ 0x200006
  9999                           ;	unspecified, using default values
 10000  200006                     	org	2097158
 10001  200006  0FFF               	dw	4095
 10002                           
 10003                           ;Config register IDLOC4 @ 0x200008
 10004                           ;	unspecified, using default values
 10005  200008                     	org	2097160
 10006  200008  0FFF               	dw	4095
 10007                           
 10008                           ;Config register IDLOC5 @ 0x20000A
 10009                           ;	unspecified, using default values
 10010  20000A                     	org	2097162
 10011  20000A  0FFF               	dw	4095
 10012                           
 10013                           ;Config register IDLOC6 @ 0x20000C
 10014                           ;	unspecified, using default values
 10015  20000C                     	org	2097164
 10016  20000C  0FFF               	dw	4095
 10017                           
 10018                           ;Config register IDLOC7 @ 0x20000E
 10019                           ;	unspecified, using default values
 10020  20000E                     	org	2097166
 10021  20000E  0FFF               	dw	4095
 10022                           
 10023                           	psect	config
 10024                           
 10025                           ;Config register CONFIG1L @ 0x300000
 10026                           ;	External Oscillator mode Selection bits
 10027                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10028                           ;	Power-up default value for COSC bits
 10029                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10030  300000                     	org	3145728
 10031  300000  AA                 	db	170
 10032                           
 10033                           ;Config register CONFIG1H @ 0x300001
 10034                           ;	unspecified, using default values
 10035                           ;	Clock Out Enable bit
 10036                           ;	CLKOUTEN = 0x1, unprogrammed default
 10037                           ;	Clock Switch Enable bit
 10038                           ;	CSWEN = 0x1, unprogrammed default
 10039                           ;	Fail-Safe Clock Monitor Enable bit
 10040                           ;	FCMEN = 0x1, unprogrammed default
 10041  300001                     	org	3145729
 10042  300001  FF                 	db	255
 10043                           
 10044                           ;Config register CONFIG2L @ 0x300002
 10045                           ;	unspecified, using default values
 10046                           ;	Master Clear Enable bit
 10047                           ;	MCLRE = 0x1, unprogrammed default
 10048                           ;	Power-up Timer Enable bit
 10049                           ;	PWRTE = 0x1, unprogrammed default
 10050                           ;	Low-power BOR enable bit
 10051                           ;	LPBOREN = 0x1, unprogrammed default
 10052                           ;	Brown-out Reset Enable bits
 10053                           ;	BOREN = 0x3, unprogrammed default
 10054  300002                     	org	3145730
 10055  300002  FF                 	db	255
 10056                           
 10057                           ;Config register CONFIG2H @ 0x300003
 10058                           ;	unspecified, using default values
 10059                           ;	Brown Out Reset Voltage selection bits
 10060                           ;	BORV = 0x3, unprogrammed default
 10061                           ;	ZCD Disable bit
 10062                           ;	ZCD = 0x1, unprogrammed default
 10063                           ;	PPSLOCK bit One-Way Set Enable bit
 10064                           ;	PPS1WAY = 0x1, unprogrammed default
 10065                           ;	Stack Full/Underflow Reset Enable bit
 10066                           ;	STVREN = 0x1, unprogrammed default
 10067                           ;	Debugger Enable bit
 10068                           ;	DEBUG = 0x1, unprogrammed default
 10069                           ;	Extended Instruction Set Enable bit
 10070                           ;	XINST = 0x1, unprogrammed default
 10071  300003                     	org	3145731
 10072  300003  FF                 	db	255
 10073                           
 10074                           ;Config register CONFIG3L @ 0x300004
 10075                           ;	WDT Period Select bits
 10076                           ;	WDTCPS = 0x1F, unprogrammed default
 10077                           ;	WDT operating mode
 10078                           ;	WDTE = OFF, WDT Disabled
 10079  300004                     	org	3145732
 10080  300004  9F                 	db	159
 10081                           
 10082                           ;Config register CONFIG3H @ 0x300005
 10083                           ;	unspecified, using default values
 10084                           ;	WDT Window Select bits
 10085                           ;	WDTCWS = 0x7, unprogrammed default
 10086                           ;	WDT input clock selector
 10087                           ;	WDTCCS = 0x7, unprogrammed default
 10088  300005                     	org	3145733
 10089  300005  FF                 	db	255
 10090                           
 10091                           ;Config register CONFIG4L @ 0x300006
 10092                           ;	unspecified, using default values
 10093                           ;	Write Protection Block 0
 10094                           ;	WRT0 = 0x1, unprogrammed default
 10095                           ;	Write Protection Block 1
 10096                           ;	WRT1 = 0x1, unprogrammed default
 10097                           ;	Write Protection Block 2
 10098                           ;	WRT2 = 0x1, unprogrammed default
 10099                           ;	Write Protection Block 3
 10100                           ;	WRT3 = 0x1, unprogrammed default
 10101                           ;	Write Protection Block 3
 10102                           ;	WRT4 = 0x1, unprogrammed default
 10103                           ;	Write Protection Block 3
 10104                           ;	WRT5 = 0x1, unprogrammed default
 10105                           ;	Write Protection Block 3
 10106                           ;	WRT6 = 0x1, unprogrammed default
 10107                           ;	Write Protection Block 3
 10108                           ;	WRT7 = 0x1, unprogrammed default
 10109  300006                     	org	3145734
 10110  300006  FF                 	db	255
 10111                           
 10112                           ;Config register CONFIG4H @ 0x300007
 10113                           ;	unspecified, using default values
 10114                           ;	Configuration Register Write Protection bit
 10115                           ;	WRTC = 0x1, unprogrammed default
 10116                           ;	Boot Block Write Protection bit
 10117                           ;	WRTB = 0x1, unprogrammed default
 10118                           ;	Data EEPROM Write Protection bit
 10119                           ;	WRTD = 0x1, unprogrammed default
 10120                           ;	Scanner Enable bit
 10121                           ;	SCANE = 0x1, unprogrammed default
 10122                           ;	Low Voltage Programming Enable bit
 10123                           ;	LVP = 0x1, unprogrammed default
 10124  300007                     	org	3145735
 10125  300007  FF                 	db	255
 10126                           
 10127                           ;Config register CONFIG5L @ 0x300008
 10128                           ;	unspecified, using default values
 10129                           ;	UserNVM Program Memory Code Protection bit
 10130                           ;	CP = 0x1, unprogrammed default
 10131                           ;	DataNVM Memory Code Protection bit
 10132                           ;	CPD = 0x1, unprogrammed default
 10133  300008                     	org	3145736
 10134  300008  FF                 	db	255
 10135                           
 10136                           ;Config register CONFIG5H @ 0x300009
 10137                           ;	unspecified, using default values
 10138  300009                     	org	3145737
 10139  300009  FF                 	db	255
 10140                           
 10141                           ;Config register CONFIG6L @ 0x30000A
 10142                           ;	unspecified, using default values
 10143                           ;	Table Read Protection Block 0
 10144                           ;	EBTR0 = 0x1, unprogrammed default
 10145                           ;	Table Read Protection Block 1
 10146                           ;	EBTR1 = 0x1, unprogrammed default
 10147                           ;	Table Read Protection Block 2
 10148                           ;	EBTR2 = 0x1, unprogrammed default
 10149                           ;	Table Read Protection Block 3
 10150                           ;	EBTR3 = 0x1, unprogrammed default
 10151                           ;	Table Read Protection Block 4
 10152                           ;	EBTR4 = 0x1, unprogrammed default
 10153                           ;	Table Read Protection Block 5
 10154                           ;	EBTR5 = 0x1, unprogrammed default
 10155                           ;	Table Read Protection Block 6
 10156                           ;	EBTR6 = 0x1, unprogrammed default
 10157                           ;	Table Read Protection Block 7
 10158                           ;	EBTR7 = 0x1, unprogrammed default
 10159  30000A                     	org	3145738
 10160  30000A  FF                 	db	255
 10161                           
 10162                           ;Config register CONFIG6H @ 0x30000B
 10163                           ;	unspecified, using default values
 10164                           ;	Boot Block Table Read Protection bit
 10165                           ;	EBTRB = 0x1, unprogrammed default
 10166  30000B                     	org	3145739
 10167  30000B  FF                 	db	255
 10168                           tosu	equ	0xFFF
 10169                           tosh	equ	0xFFE
 10170                           tosl	equ	0xFFD
 10171                           stkptr	equ	0xFFC
 10172                           pclatu	equ	0xFFB
 10173                           pclath	equ	0xFFA
 10174                           pcl	equ	0xFF9
 10175                           tblptru	equ	0xFF8
 10176                           tblptrh	equ	0xFF7
 10177                           tblptrl	equ	0xFF6
 10178                           tablat	equ	0xFF5
 10179                           prodh	equ	0xFF4
 10180                           prodl	equ	0xFF3
 10181                           indf0	equ	0xFEF
 10182                           postinc0	equ	0xFEE
 10183                           postdec0	equ	0xFED
 10184                           preinc0	equ	0xFEC
 10185                           plusw0	equ	0xFEB
 10186                           fsr0h	equ	0xFEA
 10187                           fsr0l	equ	0xFE9
 10188                           wreg	equ	0xFE8
 10189                           indf1	equ	0xFE7
 10190                           postinc1	equ	0xFE6
 10191                           postdec1	equ	0xFE5
 10192                           preinc1	equ	0xFE4
 10193                           plusw1	equ	0xFE3
 10194                           fsr1h	equ	0xFE2
 10195                           fsr1l	equ	0xFE1
 10196                           bsr	equ	0xFE0
 10197                           indf2	equ	0xFDF
 10198                           postinc2	equ	0xFDE
 10199                           postdec2	equ	0xFDD
 10200                           preinc2	equ	0xFDC
 10201                           plusw2	equ	0xFDB
 10202                           fsr2h	equ	0xFDA
 10203                           fsr2l	equ	0xFD9
 10204                           status	equ	0xFD8

Data Sizes:
    Strings     162
    Constant    0
    Data        0
    BSS         8
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      85
    BANK0           160     84      88
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S2954_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC@buf(BANK0[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC@buf(BANK0[100]), 

    DCmotors_calibration@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    DCmotors_calibration@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    clearance@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    clearance@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@initial(COMRAM[8]), colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC@rel(COMRAM[12]), colourcards_readRGBC@rel(BANK0[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_readRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S29$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S29$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _interrupts_clear->_interrupts_colourclick
    _interrupts_colourclick->_colourclick_writetoaddr
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _colourclick_calibration->_colourclick_readRGBC
    _forward->_DCmotors_setPWM
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    _clearance->_stop
    _reverse->_DCmotors_setPWM
    _checkbatterylevel->_ADC_getval
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right
    _right->___fldiv
    _left->___fldiv
    ___flmul->___xxtofl
    ___flge->___xxtofl
    ___fldiv->___fladd
    ___fladd->___flmul
    _stop->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_interrupts_colourclick
    i2_interrupts_colourclick->i2_colourclick_writetoaddr
    i2_colourclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_colourcards_readRGBC
    _colourcards_readRGBC->_turnleft
    _colourcards_readRGBC->_turnright
    _colourcards_normaliseRGBC->___fldiv
    _DCmotors_calibration->_turnleft
    _DCmotors_calibration->_turnright
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right
    _right->___fldiv
    _left->___fldiv

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  211850
                                             55 BANK0     29    29      0
                           _ADC_init
               _DCmotors_calibration
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                  _colourclickLEDs_C
            _colourclick_calibration
                   _colourclick_init
               _colourclick_readRGBC
                            _forward
                    _interrupts_init
                            _reverse
                               _stop
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     772
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
             _interrupts_colourclick
 ---------------------------------------------------------------------------------
 (3) _interrupts_colourclick                               1     1      0     750
                                             13 COMRAM     1     1      0
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     816
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colourclick_writetoaddr                              2     1      1     750
                                             11 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourclick_calibration                             10    10      0    1290
                                             22 COMRAM    10    10      0
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                20    14      6  113632
                                             35 BANK0     20    14      6
                             ___flge
                          _clearance
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (1) _forward                                              5     1      4    2575
                                             34 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC2                                5     2      3    2258
                                             22 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourclick_readRGBC                                 2     0      2    1148
                                             20 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (2) _colourclick_readR                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readG                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readC                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readB                                    7     5      2     113
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                             10 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourcards_normaliseRGBC                           12     8      4    5096
                                             13 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _clearance                                            6     2      4   10514
                                             40 COMRAM     6     2      4
                            _reverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse                                              5     1      4    2879
                                             34 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                             10 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              9 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_calibration                                 7     3      4   80803
                                             35 BANK0      7     3      4
                           _adjdelay
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6   37162
                                             29 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6   36352
                                             29 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                               17    11      6   16868
                                             76 COMRAM     1     1      0
                                             13 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _left                                                17    11      6   16868
                                             76 COMRAM     1     1      0
                                             13 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1234
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2200
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    5958
                                             23 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2007
                                             64 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2540
                                             48 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    6483
                                             34 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    1943
                                             23 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                             15 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _adjdelay                                             4     4      0      90
                                              9 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowISR                                               3     3      0       0
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              1     1      0     244
                                              5 COMRAM     1     1      0
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (9) i2_interrupts_clear                                   0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
           i2_interrupts_colourclick
 ---------------------------------------------------------------------------------
 (10) i2_interrupts_colourclick                            1     1      0     222
                                              4 COMRAM     1     1      0
          i2_colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (11) i2_colourclick_writetoaddr                           2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_calibration
     _adjdelay
     _stop
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _turnleft
       _left
         _DCmotors_setPWM
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flge
           ___xxtofl (ARG)
         ___flmul
         ___xxtofl
       _right
         _DCmotors_setPWM
         ___fladd
         ___fldiv
         ___flge
         ___flmul
         ___xxtofl
     _turnright
       _left
       _right
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_readRGBC
     ___flge
     _clearance
       _reverse
         _DCmotors_setPWM
       _stop
     _colourcards_normaliseRGBC
       ___fldiv
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
     _reverse
     _stop
     _turnleft
     _turnright
   _colourclickLEDs_C
   _colourclick_calibration
     _colourclickLEDs_C
     _colourclick_readRGBC
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colourclick_readRGBC
   _forward
   _interrupts_init
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _interrupts_colourclick
         _colourclick_writetoaddr
   _reverse
   _stop
   _timer0_init

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_interrupts_colourclick
       i2_colourclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      58       5       55.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AD       8        0.0%
DATA                 0      0      AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 03:46:26 2021

      colourcards_normaliseRGBC@rel 006F         colourclick_readRGBC2@tmpval 0017  
                      ___fldiv@aexp 006C                        ___fldiv@bexp 006B  
                      ___fldiv@sign 0064                                  l73 26E0  
                                l69 26C4               __end_of_DCmotors_init 3A4A  
                      ___awdiv@sign 0015                                  bsr 000FE0  
               ___wmul@multiplicand 000C                                 l131 3E06  
                               l134 3B36                                 l311 3908  
                               l400 3D4C                                 l320 39A8  
                               l128 3D2A                                 l305 3C42  
                               l314 3958                                 l226 165A  
                               l403 3E68                                 l323 385A  
                               l331 3416                                 l308 3D8C  
                               l317 39F8                                 l229 16AC  
                               l334 3786                                 l430 3C6C  
                               l264 315C                                 l336 3794  
                               l361 3E3E                                 l433 3C6E  
                               l337 37FC                                 l442 3EB8  
                               l363 3E4C                                 l451 3C0A  
                               l364 3E52                                 l436 3C94  
                               l445 3EA4                                 l358 3E20  
                               l606 2C56                                 l607 2C58  
                               l623 3AE8                                 l631 233A  
                               l391 3E8E                                 l439 3EAE  
                               l448 3E82                                 l617 2A50  
                               l618 2A52                                 l642 23C4  
                               l394 3EC2                                 l643 244E  
                               l564 2E2C                                 l628 3A98  
                               l652 257C                                 l636 25FE  
                               l476 3DCC                                 l740 3D6C  
                               l653 25A4                                 l637 235A  
                               l557 3A48                                 l397 3E76  
                               l638 23A8                                 l671 32C0  
                               l663 31B8                                 l743 3CE2  
                               l647 246A                                 l567 3DAA  
                               l648 2560                                 l657 2610  
                               l569 3DAC                                 l585 36FA  
                               l577 366C                                 l668 326A  
                               l596 3784                                 l588 38B8  
                               l974 35DE                                 wreg 000FE8  
                      ___flmul@aexp 0029                        ___flmul@bexp 002A  
                      ___flmul@sign 0024                        ___flmul@temp 002F  
             ?_colourclick_readRGBC 0015                        ___flmul@prod 002B  
               __size_of_ADC_getval 0018                                l1013 351A  
                              l1008 34D4                                l1401 2FE0  
                              l1330 2156                                l1412 2F78  
                              l3101 355C                                l1325 2332  
                              l1405 2F1C                                l3111 3592  
                              l3103 356E                                l1271 189C  
                              l1327 2192                                l1280 1B6C  
                              l1272 188A                                l1336 21D8  
                              l4001 31F6                                l3113 35A8  
                              l3105 3576                                l3121 35BE  
                              l1273 1850                                l3201 1742  
                              l1361 1F96                                l1338 2250  
                              l4011 3242                                l4003 31F8  
                              l3123 35CE                                l3115 35B0  
                              l3107 357E                                l3211 1776  
                              l3203 1744                                l1339 223E  
                              l3051 3EAA                                l1364 1E28  
                              l4021 3286                                l4013 3244  
                              l4005 3214                                l3125 35D6  
                              l3117 35B2                                l3109 358C  
                              l3301 1984                                l3221 17B2  
                              l3205 1754                                l3213 177E  
                              l1357 1C32                                l4101 3A44  
                              l3045 3C6E                                l3061 3EB0  
                              l3053 3E7A                                l3141 390A  
                              l3133 3D70                                l1374 1F58  
                              l1366 1EA0                                l4023 3288  
                              l4015 324C                                l4007 3226  
                              l4031 32AE                                l3119 35B8  
                              l3311 19DC                                l3303 1986  
                              l3231 17C6                                l3223 17B6  
                              l3215 178E                                l3207 1764  
                              l1367 1E8E                                l4111 3DAE  
                              l3047 3C7E                                l3071 3BE0  
                              l3063 3EB4                                l3055 3E7E  
                              l3143 3950                                l3135 38BA  
                              l4103 3D4E                                l1288 19B6  
                              l4033 32B0                                l4025 3290  
                              l4017 3264                                l4009 3234  
                              l3081 3CDA                                l3161 2C76  
                              l1297 1A86                                l3321 1A0A  
                              l3305 1996                                l3241 17DA  
                              l3233 17CA                                l3225 17BA  
                              l3217 17A0                                l3209 1774  
                              l3401 201C                                l4121 3DC8  
                              l4113 3DB8                                l3073 3C06  
                              l3065 3BCC                                l3049 3EA6  
                              l3057 3E9C                                l3153 395A  
                              l3137 3900                                l4105 3D56  
                              l1298 1A74                                l4051 3E12  
                              l4027 32A8                                l4019 3278  
                              l3091 3536                                l3171 2DC4  
                              l3163 2CD8                                l3323 1A18  
                              l3315 19F0                                l3331 1A36  
                              l3307 19A6                                l3243 17DE  
                              l3235 17CE                                l3227 17BE  
                              l3219 17AE                                l3251 17EE  
                              l3403 202C                                l3411 2056  
                              l4123 3DCA                                l4115 3DBA  
                              l3075 3C08                                l3067 3BD0  
                              l3059 3EA0                                l3147 39AA  
                              l3155 39A0                                l4211 3796  
                              l4107 3D60                                l4053 3E1A  
                              l3093 353A                                l3085 351C  
                              l3165 2D1E                                l3325 1A20  
                              l3317 19FA                                l3309 19CC  
                              l3333 1A44                                l3261 185E  
                              l3253 17F2                                l3245 17E2  
                              l3237 17D2                                l3229 17C2  
                              l3181 16DA                                l3173 16AE  
                              l3501 2320                                l3421 2098  
                              l3413 2066                                l3405 203C  
                              l4117 3DBC                                l4125 3D8E  
                              l3069 3BD8                                l3149 39F0  
                              l4221 37DA                                l4213 379C  
                              l4061 3C10                                l4109 3D6A  
                              l1398 2E84                                l4055 3E1C  
                              l3095 3548                                l3087 3520  
                              l3079 3CBE                                l3167 2D3E  
                              l3159 2C5A                                l3343 1A96  
                              l3351 1AEC                                l3335 1A48  
                              l3327 1A24                                l3319 1A08  
                              l3271 1888                                l3263 186A  
                              l3255 181C                                l3247 17E6  
                              l3239 17D6                                l3191 1714  
                              l3183 16EA                                l3175 16BA  
                              l3503 2326                                l3415 207C  
                              l3407 204C                                l4071 39FC  
                              l4119 3DC6                                l4127 3D94  
                              l4223 37DC                                l4215 379E  
                              l4063 3C1A                                l4231 3D08  
                              l4057 3E1E                                l4049 3E08  
                              l3097 3550                                l3089 352E  
                              l3169 2D5A                                l3361 1B3E  
                              l3353 1AFC                                l3345 1AA2  
                              l3337 1A56                                l3329 1A34  
                              l3281 18DE                                l3273 18AA  
                              l3265 186E                                l3257 1838  
                              l3249 17EA                                l3193 171A  
                              l3185 16FA                                l3177 16C8  
                              l3505 2328                                l3441 211A  
                              l3433 20D0                                l3417 208C  
                              l3425 20AC                                l3409 204E  
                              l3601 1E38                                l3521 1B9A  
                              l3513 1B6E                                l4081 3A1A  
                              l4073 3A10                                l4129 3DA4  
                              l4225 37E8                                l4217 37B6  
                              l4209 3786                                l4065 3C2A  
                              l4241 3D1C                                l4233 3D0E  
                              l3099 3554                                l3371 1B5C  
                              l3363 1B44                                l3355 1B0C  
                              l3347 1AB0                                l3339 1A6C  
                              l3291 1918                                l3283 18EC  
                              l3275 18BA                                l3267 187C  
                              l3259 1848                                l3195 172C  
                              l3187 16FC                                l3179 16CA  
                              l3451 2160                                l3443 2122  
                              l3435 20EA                                l3427 20BC  
                              l3419 2094                                l3603 1E46  
                              l3531 1BD6                                l3523 1BAA  
                              l3515 1B7A                                l4091 3A24  
                              l4083 3A1C                                l4075 3A14  
                              l4227 37F4                                l4219 37C2  
                              l4067 3C34                                l4059 3C0C  
                              l4251 3D28                                l4243 3D1E  
                              l4235 3D14                                l3365 1B46  
                              l3357 1B2C                                l3349 1AEA  
                              l3293 191A                                l3285 18FA  
                              l3269 187E                                l3197 172E  
                              l3189 1704                                l3461 21B8  
                              l3453 217E                                l3445 2132  
                              l3437 20FA                                l3429 20BC  
                              l3381 1FB6                                l3613 1EB0  
                              l3621 1EF8                                l3605 1E4A  
                              l3541 1C0C                                l3533 1BDC  
                              l3525 1BBA                                l3517 1B88  
                              l3701 2FB0                                l4093 3A2E  
                              l4085 3A1E                                l4077 3A16  
                              l4229 37F6                                l4069 3C3E  
                              l4245 3D22                                l4237 3D18  
                              l3367 1B4C                                l3359 1B30  
                              l3295 1924                                l3287 1906  
                              l3279 18CE                                l3199 1734  
                              l3471 21F6                                l3463 21BE  
                              l3455 2180                                l3447 2146  
                              l3439 210A                                l3383 1FC6  
                              l3391 1FF0                                l3375 1F98  
                              l3631 1F6C                                l3623 1F12  
                              l3615 1EBC                                l3607 1E58  
                              l3543 1C1C                                l3535 1BEA  
                              l3527 1BC0                                l3519 1B8A  
                              l3703 2FC0                                l4095 3A30  
                              l4087 3A20                                l4079 3A18  
                              l4247 3D24                                l4239 3D1A  
                              l3369 1B5A                                l3289 190A  
                              l3297 192A                                l3481 2260  
                              l3473 21FA                                l3465 21C8  
                              l3457 2190                                l3449 2154  
                              l3393 2000                                l3385 1FD6  
                              l3377 1FA6                                l3633 1F7A  
                              l3625 1F26                                l3617 1ECA  
                              l3609 1E86                                l3561 1C9E  
                              l3553 1C66                                l3545 1C22  
                              l3537 1BEC                                l3529 1BD0  
                              l3705 2FCE                                l4097 3A3C  
                              l4089 3A22                                l4249 3D26  
                              l3731 3726                                l3299 1950  
                              l3491 22C2                                l3483 226C  
                              l3475 2208                                l3467 21D6  
                              l3459 21A2                                l3395 2006  
                              l3387 1FE6                                l3379 1FB4  
                              l3651 3494                                l3643 3418  
                              l3635 1F7C                                l3627 1F40  
                              l3619 1EF4                                l3571 1CE8  
                              l3563 1CB6                                l3555 1C72  
                              l3547 1C42                                l3539 1BFC  
                              l3707 2FD0                                l4099 3A40  
                              l3723 3D2E                                l3741 3782  
                              l3733 3732                                l3725 36FC  
                              l3493 22D8                                l3485 227A  
                              l3477 2236                                l3469 21E8  
                              l3397 200C                                l3389 1FE8  
                              l3661 3518                                l3653 34A2  
                              l3645 3446                                l3629 1F5C  
                              l3637 1F82                                l3581 1D3E  
                              l3573 1CF8                                l3565 1CC2  
                              l3557 1C7C                                l3549 1C52  
                              l4701 3090                                l3901 339C  
                              l3727 3702                                l3735 373A  
                              l3495 22F2                                l3487 22A4  
                              l3399 201A                                l3655 34B4  
                              l3647 3456                                l3639 1F86  
                              l3591 1DE2                                l3583 1D5A  
                              l3575 1D04                                l3567 1CCE  
                              l3559 1C92                                l3671 2E94  
                              l4631 2B56                                l4623 2A54  
                              l4711 3A9A                                l3751 36C2  
                              l3743 366E                                l4703 30F6  
                              l3911 33CE                                l3737 3752  
                              l3729 371A                                l3497 230E  
                              l3489 22A8                                l3657 34C2  
                              l3649 3484                                l3593 1DF0  
                              l3585 1D66                                l3577 1D14  
                              l3569 1CDC                                l3681 2ED2  
                              l3673 2EAA                                l3665 2E30  
                              l4641 2BAA                                l4633 2B6E  
                              l4625 2B2E                                l4713 3AAC  
                              l4705 3A4A                                l4721 235C  
                              l3745 3692                                l3753 36CA  
                              l3921 33FE                                l3913 33DA  
                              l3905 33A2                                l4801 0EFC  
                              l3761 3AF4                                l3739 376A  
                              l3499 2312                                l3659 3512  
                              l3595 1E0E                                l3587 1D82  
                              l3579 1D2E                                l3691 2F5A  
                              l3683 2F04                                l3667 2E40  
                              l4651 2BFC                                l4643 2BB6  
                              l4635 2B7A                                l4627 2B40  
                              l4715 3ACC                                l4707 3A5C  
                              l4731 23E0                                l4723 2376  
                              l3755 36E2                                l3747 36AA  
                              l3931 38B6                                l3923 385C  
                              l3915 33F2                                l3907 33B4  
                              l3851 3634                                l3843 35E0  
                              l4811 0FFE                                l4803 0F2E  
                              l3771 3B2C                                l3763 3B04  
                              l3597 1E18                                l3589 1DAC  
                              l3693 2F68                                l3685 2F06  
                              l3677 2EBE                                l3669 2E4E  
                              l4653 2C0C                                l4637 2B92  
                              l4645 2BBE                                l4629 2B50  
                              l4661 293A                                l4709 3A7C  
                              l4741 243A                                l4733 23E6  
                              l4725 2394                                l4717 2334  
                              l3749 36B6                                l3925 385E  
                              l3757 37FE                                l3909 33B6  
                              l3845 3604                                l3853 363C  
                              l4901 161C                                l4821 10B6  
                              l4813 1008                                l4805 0F60  
                              l3765 3B0E                                l3599 1E26  
                              l3695 2F86                                l3687 2F12  
                              l3679 2EC6                                l4655 2C12  
                              l4647 2BD6                                l4639 2B9E  
                              l4671 298C                                l4663 294A  
                              l4751 24A6                                l4743 245C  
                              l4735 2400                                l4727 23B6  
                              l4719 2348                                l3927 3872  
                              l3919 33F8                                l3855 3654  
                              l3847 361C                                l4911 168C  
                              l4903 163E                                l4831 118A  
                              l4823 10E8                                l4807 0F86  
                              l3951 3C56                                l3767 3B18  
                              l3759 3AEA                                l3697 2F88  
                              l3689 2F4E                                l4649 2BEE  
                              l4681 29D0                                l4673 2998  
                              l4665 2950                                l4657 284E  
                              l4761 250E                                l4753 24A8  
                              l4745 246C                                l4737 2402  
                              l4729 23C6                                l3961 3E3C  
                              l3929 388A                                l3881 32F2  
                              l3873 32C2                                l3849 3628  
                              l4905 164E                                l4833 11B0  
                              l4825 110E                                l4809 0FB8  
                              l4817 1052                                l3953 3C58  
                              l3945 3C44                                l3769 3B22  
                              l3857 3DEE                                l4921 2650  
                              l3699 2F8C                                l4683 29E8  
                              l4675 29A4                                l4667 2968  
                              l4659 2928                                l4771 255E  
                              l4763 252C                                l4755 24C2  
                              l4747 2486                                l4739 241C  
                              l3971 3E54                                l3963 3E50  
                              l4691 2FE2                                l3883 330A  
                              l3891 334C                                l3875 32C8  
                              l4907 1652                                l4851 1320  
                              l4835 11E2                                l4827 1140  
                              l4819 1084                                l4843 1276  
                              l3955 3C5A                                l3947 3C4E  
                              l4931 2688                                l4923 2658  
                              l3981 3174                                l3973 3160  
                              l4685 29F6                                l4677 29B0  
                              l4669 2974                                l4781 25B2  
                              l4773 256E                                l4765 2540  
                              l4757 24E0                                l4749 248C  
                              l4693 2FF2                                l3893 335E  
                              l3885 3316                                l3877 32E0  
                              l4909 165C                                l4853 1338  
                              l4845 12A8                                l4861 139C  
                              l4917 16A8                                l3949 3C54  
                              l3957 3E6A                                l4941 26A2  
                              l4933 2690                                l4925 2664  
                              l3991 31B2                                l3983 3182  
                              l4687 2A06                                l4679 29B8  
                              l4791 25E2                                l4783 25C0  
                              l4775 258A                                l4767 2542  
                              l4759 24F4                                l3967 3E84  
                              l4695 3008                                l3895 3360  
                              l3887 332E                                l3879 32F0  
                              l4871 145E                                l4863 13CE  
                              l4855 1366                                l4847 12DA  
                              l4839 122C                                l3959 3E70  
                              l4951 26E2                                l4943 26A6  
                              l4935 2694                                l4927 2674  
                              l4919 2612                                l3993 31C6  
                              l3985 3190                                l4689 2A0C  
                              l4793 25E4                                l4785 25C2  
                              l4777 2598                                l4769 255C  
                              l3969 3EBA                                l4697 301C  
                              l3897 3378                                l3889 3330  
                              l4881 14E0                                l4873 148C  
                              l4865 1400                                l4857 1384  
                              l4849 130C                                l4961 2728  
                              l4953 26E8                                l4945 26AA  
                              l4937 2698                                l4929 267C  
                              l3995 31D4                                l3987 3192  
                              l3979 3164                                l4787 25C8  
                              l4779 259A                                l4699 3030  
                              l3899 3384                                l4883 1512  
                              l4891 1598                                l4867 1432  
                              l4795 0EA4                                l4971 276A  
                              l4963 2734                                l4955 2702  
                              l4947 26C0                                l4939 269E  
                              l3997 31D6                                l3989 319A  
                              l4789 25E0                                l4893 15B2  
                              l4885 1544                                l4869 1446  
                              l4797 0EA8                                l4981 27CC  
                              l4973 2780                                l4965 2744  
                              l4957 2706                                l4949 26D2  
                              l3999 31DE                                l4895 15C6  
                              l4887 158A                                l4879 14AE  
                              l4799 0ECA                                l4991 282A  
                              l4983 27EA                                l4975 279A  
                              l4967 2754                                l4959 2718  
                              l4897 15EC                                l4889 1590  
                              l4985 2804                                l4977 27AE  
                              l4969 2768                                l4993 2832  
                              l4899 15F8                                l4987 2810  
                              l4979 27B0                                l4989 281E  
                              STR_1 0E01                                STR_2 0E9F  
                              STR_4 0E80                                STR_6 0E94  
                              u3000 1B2C                                u3001 1B28  
                              u3010 1B3E                                u3011 1B3A  
                              u3020 1B5A                                u3100 20BC  
                              u3021 1B56                                u3101 20B8  
                              u3110 2132                                u3030 1FB4  
                              u3111 212E                                u3031 1FB0  
                              u3200 224C                                u3120 2154  
                              u3040 1FC6                        _BAUD4CONbits 000EE9  
                              u3201 2248                                u3121 2150  
                              u3041 1FC2                                _LATE 000F7D  
                              u3210 2260                                u3130 217E  
                              u3050 1FD6                                u3211 225C  
                              u3131 217A                                u3051 1FD2  
                              _LATG 000F7F                                u3220 227A  
                              u3140 21A2                                u3060 201A  
                              u3300 1BFC                                u2500 3BF4  
                              u4100 3794                                u3221 2276  
                              u3141 219E                                u3061 2016  
                              u3301 1BF8                                u2501 3BEC  
                              u4101 3790                                u3230 22C2  
                              u3150 21B8                                u3070 202C  
                              u3310 1C0C                                u3231 22BE  
                              u3151 21B4                                u3071 2028  
                              u3311 1C08                                u2520 352E  
                              u2600 2C76                                u3240 22F2  
                              u3160 21D6                                u3080 203C  
                              u3400 1EB0                                u3320 1C42  
                              u5000 2348                                u2521 352A  
                              u2601 2C72                                u3241 22EE  
                              u3161 21D2                                u3081 2038  
                              u3401 1EAC                                u3321 1C3E  
                              u5001 2344                                u2530 3548  
                              u2610 2D5A                                u3250 2320  
                              u3170 21F6                                u3090 207C  
                              u3410 1ECA                                u3330 1C52  
                              u5010 2356                                _T2PR 000FBC  
                              u2531 3544                                u2611 2D56  
                              u3251 231C                                u3171 21F2  
                              u3091 2078                                u3411 1EC6  
                              u3331 1C4E                                u5011 2352  
                              u2540 356E                                u2700 1764  
                              u3180 2208                                u3420 1F12  
                              u3340 1DCC                                u3260 1B88  
                              u3500 2E40                                u5100 25B2  
                              u5020 23B6                                u2541 356A  
                              u2701 1760                                u3181 2204  
                              u3421 1F0E                                u3261 1B84  
                              u3501 2E3C                                u5101 25AE  
                              u5021 23B2                                u2550 358C  
                              u2710 17A0                                u3190 2236  
                              u3430 1F40                                u3350 1E26  
                              u3270 1B9A                                u3510 2E4E  
                              u5110 25C0                                u5030 23C4  
                              u2518 3BF6                                u2551 3588  
                              u2711 179C                                u3191 2232  
                              u3431 1F3C                                u3351 1E22  
                              u3271 1B96                                u3511 2E4A  
                              u5111 25BC                                u5031 23C0  
                              u2560 35A8                                u2624 2DB4  
                              u2800 18BA                                u2720 17AE  
                              u2640 16C8                                u3440 1F7A  
                              u3360 1E46                                u3280 1BAA  
                              u3520 2EAA                                u5120 2610  
                              u5040 245C                                u2480 3C7E  
                              u5200 1140                                u2561 35A4  
                              u2625 2DB0                                u2801 18B6  
                              u2721 17AA                                u2641 16C4  
                              u3441 1F76                                u3361 1E42  
                              u3345 1DC2                                u3281 1BA6  
                              u3521 2EA6                                u5121 260C  
                              u5041 2458                                u2481 3C7A  
                              u5201 113C                                u2570 35CE  
                              u2634 2E1E                                u2810 18EC  
                              u2730 181C                                u2650 16DA  
                              u3450 3446                                u3370 1E58  
                              u3290 1BEA                                u3530 2F00  
                              u5050 246A                                u2490 3C94  
                              u5210 11E2                                u5130 0EFC  
                              u2571 35CA                                u2635 2E1A  
                              u2811 18E8                                u2731 1818  
                              u2651 16D6                                u3451 3442  
                              u3371 1E54                                u3291 1BE6  
                              u3531 2EFC                                u5051 2466  
                              u2491 3C90                                u5211 11DE  
                              u5131 0EF8                                u2900 1A34  
                              u2820 18FA                                u2740 1834  
                              u2660 16EA                                u3460 3484  
                              u3380 1E86                                u3540 2F4A  
                              u5060 256E                                u5300 1544  
                              u5220 12A8                                u5140 0F2E  
                              u2901 1A30                                u2821 18F6  
                              u2741 182E                                u2661 16E6  
                              u3461 3480                                u3381 1E82  
                              u3541 2F46                                u5061 256A  
                              u3605 3D36                                u5301 1540  
                              u5221 12A4                                u5141 0F2A  
                              u3630 3752                                u2910 1A44  
                              u2830 1918                                u2750 1836  
                              u2670 172C                                u3470 34A2  
                              u3390 1E9C                                u3550 2F68  
                              u5070 257C                                u3606 3D38  
                              u5310 161C                                u5230 12DA  
                              u5150 0F60                                u3631 374E  
                              u2911 1A40                                u2831 1914  
                              u2671 1728                                u3471 349E  
                              u3391 1E98                                u3551 2F64  
                              u5071 2578                                u3615 3D40  
                              u6007 3636                                u5311 1618  
                              u5231 12D6                                u5151 0F5C  
                              u3640 376A                                u2920 1A56  
                              u2840 1950                                u2760 185E  
                              u2680 1742                                u3480 34C2  
                              u3560 2F78                                u5080 258A  
                              u3616 3D42                                u3800 335E  
                              u5320 163E                                u5240 130C  
                              u5160 0FB8                                u5400 2744  
                              u3641 3766                                u2921 1A52  
                              u2841 194C                                u2761 185A  
                              u2681 173E                                u3481 34BE  
                              u3561 2F74                                u5081 2586  
                              u3625 3D4A                                u3801 335A  
                              u6017 32D2                                u5321 163A  
                              u5241 1308                                u5161 0FB4  
                              u5401 2740                                u2930 1A6C  
                              u2850 1996                                u2770 187C  
                              u2690 1754                                u3490 3512  
                              u3570 2F86                                u5090 2598  
                              u3650 36E2                                u3626 3D4C  
                              u3810 33B4                                u5330 164E  
                              u5250 13CE                                u5170 1084  
                              u5410 2754                                u2931 1A68  
                              u2851 1992                                u2771 1878  
                              u2691 1750                                u3491 350E  
                              u3571 2F82                                u5091 2594  
                              u3651 36DE                                u6107 387C  
                              u3811 33B0                                u6027 32FC  
                              u5331 164A                                u5251 13CA  
                              u5171 1080                                u5411 2750  
                              u3900 3226                                u2940 1A82  
                              u2860 19CC                                u2780 189C  
                              u3580 2FC0                                u3660 36FA  
                              u5340 16A0                                u5260 1400  
                              u5180 10B6                                u3901 3222  
                              u2941 1A7E                                u2861 19C8  
                              u2781 1898                                u3581 2FBC  
                              u3661 36F6                                u6117 38A8  
                              u6037 3320                                u5341 169A  
                              u5261 13FC                                u5181 10B2  
                              u3910 3234                                u2950 1A96  
                              u2870 19DC                                u2790 18AA  
                              u3590 2FCE                                u5350 16A2  
                              u5270 1432                                u5190 10E8  
                              u3911 3230                                u2951 1A92  
                              u2871 19D8                                u2791 18A6  
                              u3591 2FCA                                u6207 2500  
                              u6127 36C4                                u6047 333A  
                              u5271 142E                                u5191 10E4  
                              u3920 3242                                u2960 1AB0  
                              u2880 1A08                                u3840 3E4C  
                              u5280 14E0                                u5360 26D2  
                              u3921 323E                                u2961 1AAC  
                              u2881 1A04                                u6217 254E  
                              u6137 2368                                u3841 3E48  
                              u6057 336A                                u5281 14DC  
                              u5361 26CE                                u3930 3278  
                              u3850 3174                                u2970 1AEA  
                              u2890 1A18                                u3770 3654  
                              u5290 1512                                u5370 26E0  
                              u3931 3274                                u6307 31A4  
                              u3851 3170                                u2971 1AE6  
                              u2891 1A14                                u6227 25D4  
                              u6147 23D2                                u6067 338E  
                              u3771 3650                                u5291 150E  
                              u5371 26DC                                u3940 3286  
                              u3860 3182                                u2980 1AFC  
                              u4900 2BD6                                u3780 366C  
                              u5380 2718                                u3941 3282  
                              u6317 31E8                                u3861 317E  
                              u2981 1AF8                                u4901 2BD2  
                              u6237 25F0                                u6157 23F2  
                              u6077 33C0                                u3781 3668  
                              u5381 2714                                u3950 32C0  
                              u3870 3190                                u2990 1B0C  
                              u4910 2BEE                                u3790 32F0  
                              u5390 2728                                u3951 32BC  
                              u6327 3202                                u3871 318C  
                              u2991 1B08                                u4911 2BEA  
                              u6247 29B2                                u6167 240E  
                              u6087 33E4                                u3791 32EC  
                              u5391 2724                                u3880 31C6  
                              u4920 2C56                                u3960 3DA4  
                              u6337 3256                                u3881 31C2  
                              u4921 2C52                                u6257 29FC  
                              u6177 2478                                u3961 3DA0  
                              u6097 3408                                u3890 31D4  
                              u4930 2968                                u6347 329A  
                              u3891 31D0                                u6267 2BB8  
                              u4931 2964                                u6187 2498  
                              u4940 298C                                u6277 2C02  
                              u4941 2988                                u6197 24B4  
                              u4950 29D0                                u6287 3734  
                              u4951 29CC                                u4880 2B6E  
                              u4960 29E8                                u6297 3774  
                              u4881 2B6A                                u4961 29E4  
                              u4890 2B92                                u4970 2A50  
                              u4891 2B8E                                u4971 2A4C  
                              u5907 3AFA                                u4980 3A5C  
                              u4981 3A58                                u5917 3C20  
                              u4990 3AAC                                u4991 3AA8  
                              u5927 37A8                                u5937 37CC  
                              u5947 132C                                u5867 26F4  
                              u5957 1358                                u5877 278C  
                              u5967 1452                                u5887 27BE  
                              u5977 147E                                u5897 27F6  
                              u5987 15A4                                u5997 15CE  
                       main@current 009A             __end_of_interrupts_init 3D2C  
           __end_of_DCmotors_setPWM 2E2E                                _main 2612  
                              _left 2A54                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 0056  
                              _stop 36FC                                prodh 000FF4  
                              prodl 000FF3                                start 005C  
                  __end_of_ADC_init 3E22                     ___fldiv@new_exp 0065  
                   __end_of_HighISR 3BCA                        ___param_bank 000000  
            ?_colourclick_readRGBC2 0017              ??_clicker2buttons_init 000A  
                   __end_of___fladd 1B6E                               ?_main 0001  
                             ?_left 006D                               _ADPCH 000F5F  
                   __end_of___fldiv 2334                     __end_of___awdiv 35E0  
                             STR_10 0E6D                               STR_12 0E87  
                             STR_14 0E9A                               STR_16 0E8E  
                             STR_18 0E78                               STR_19 0E41  
                   __end_of___flmul 1F98                               ?_stop 0023  
                   ___awdiv@divisor 0012                               i1l146 004C  
                             i2l131 3E3A                               i2l140 3BC6  
                             i2l134 3B84                               i2l308 3DEC  
                             i2l433 3C96                               i2l436 3CBC  
                             i2l445 3ECC                               i2l439 3ED6  
                             i2l448 3E9A          ?i2_colourclick_writetoaddr 0003  
           _colourclick_writetoaddr 3D6E                     ___awdiv@counter 0014  
                             _TMR0H 000FD4                               _TMR0L 000FD3  
          __end_of_interrupts_clear 3E08          __end_of_I2C_2_Master_Start 3EB0  
        __end_of_I2C_2_Master_Write 3E84       __size_of_DCmotors_calibration 02DE  
          ?_colourclick_calibration 0001                     __end_of_forward 366E  
              colourclickLEDs_C@tog 000A                               _right 284E  
                 _clicker2LEDs_init 3EBA                               left@i 007B  
   __size_of_interrupts_colourclick 004E                     __end_of_reverse 36FC  
            DCmotors_init@PWMperiod 000A                  ?_clicker2LEDs_init 0001  
                             ttemp5 0057                               ttemp6 005A  
                             ttemp7 005E                               status 000FD8  
                             wtemp8 0057               _I2C_2_Master_RepStart 3EB0  
                   __initialization 3CE4                 ??_clicker2LEDs_init 000A  
                      __end_of_main 284E                        __end_of_left 2C5A  
                      __end_of_stop 3786  __size_of_colourcards_normaliseRGBC 017C  
     __size_of_colourcards_readRGBC 080A                              ??_main 0097  
                            ??_left 004D                              ??_stop 0027  
                     __activetblptr 000001        __size_ofi2_I2C_2_Master_Idle 0028  
 __end_ofi2_colourclick_writetoaddr 3DEE              ??_colourclick_readRGBC 0017  
      __size_ofi2_I2C_2_Master_Stop 000A           __end_of_clicker2LEDs_init 3EC4  
                   _colourcard_flag 00B7                              _ADRESH 000F64  
         __size_of_colourclick_init 0038                              ?_right 006D  
                  ___awdiv@dividend 0010                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                              i1l4465 0026  
                            i2l3131 3CA6                              i1l4467 0036  
                            i1l4469 0048                              i2l3129 3C96  
                            i2l4041 3B5C                              i2l4043 3B66  
                            i2l4035 3B38                              i2l4045 3B70  
                            i2l4037 3B42                              i2l4047 3B7A  
                            i2l4039 3B52                              i2l3711 3ECE  
                            i2l3713 3ED2                              i2l3721 3E96  
                            i2l3715 3EC4                              i2l3717 3EC8  
                            i2l4461 3BBE                              i2l3719 3E92  
                            i2l4463 3BC2                              i2l4455 3B86  
                            i2l3841 3DD0                              i2l4377 3E22  
                            i2l4457 3B96                              i2l4459 3B9C  
                  __end_of_adjdelay 32C2                    ?_interrupts_init 0001  
                  ?_DCmotors_setPWM 0018                           ??_HighISR 0006  
                            _RX4PPS 000E15      i2colourclick_writetoaddr@value 0003  
                            _TX4REG 000EE4                    __end_of___xxtofl 2FE2  
                            _LowISR 0018                        ??_ADC_getval 000A  
                            ___flge 3418              colourcards_readRGBC@mL 0085  
            colourcards_readRGBC@mR 0087                           ??___fladd 0039  
                            ___wmul 3CBE                           ??___fldiv 0049  
                         ??___awdiv 0014                           ??___flmul 0020  
 __size_ofi2_interrupts_colourclick 004E                        ?_timer0_init 0001  
         ?i2_interrupts_colourclick 0001              _interrupts_colourclick 3AEA  
                  ??_buggyLEDs_init 000A                  i2_interrupts_clear 3E22  
         ??_colourclick_writetoaddr 000D                    ___awdiv@quotient 0016  
                            isa$std 000001   __end_of_colourcards_normaliseRGBC 315E  
                            left@mL 006D                              left@mR 006F  
                         ??_forward 0027                 ?i2_interrupts_clear 0001  
                            right@i 007B                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptru 000FF8  
                         ?_ADC_init 0001                           ??_reverse 0027  
                            stop@mL 0023                              stop@mR 0025  
                __end_of_ADC_getval 3E54                        ?_USART4_init 0001  
                        ___flge@ff1 0018                          ___flge@ff2 001C  
                      ___xxtofl@arg 0014                        ___xxtofl@exp 0013  
                      ___xxtofl@val 000A                    __end_of_turnleft 3AEA  
                        __accesstop 0060             __end_of__initialization 3CF6  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
              ??i2_interrupts_clear 0006                      __pcstackCOMRAM 0001  
                     __end_of_right 2A54                  __size_of_clearance 005E  
     checkbatterylevel@batterylevel 000B                          ??_ADC_init 000A  
        __size_of_clicker2LEDs_init 000A                             ??_right 004D  
     __size_of_colourclickLEDs_init 000E     __end_of_colourclick_writetoaddr 3D8E  
                        __pbssBANK0 00B4                          __pnvCOMRAM 004E  
          DCmotors_calibration@okay 0089                   _checkbatterylevel 3D8E  
           ??_colourclick_readRGBC2 001A       __size_ofi2_I2C_2_Master_Start 000A  
     __size_ofi2_I2C_2_Master_Write 000C                  ?_checkbatterylevel 0001  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
                           ?___flge 0018                             ?___wmul 000A  
               ??_checkbatterylevel 000B                           ?_adjdelay 0001  
                           _INT1PPS 000DF1         ??i2_colourclick_writetoaddr 0004  
                         ?___xxtofl 000A                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                   ?_interrupts_clear 0001  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
                ??_interrupts_clear 000F                    _colourclick_init 3C0C  
         __end_of_checkbatterylevel 3DAE              __size_of_DCmotors_init 0050  
                           _HighISR 0008                   __end_of_clearance 38BA  
                         _ADREFbits 000F58                  _I2C_2_Master_Start 3EA6  
               i2_I2C_2_Master_Idle 3C96                  _I2C_2_Master_Write 3E78  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 3EC4  
      __end_of_DCmotors_calibration 2612                  __size_of_turnright 0050  
  __size_of_colourclick_calibration 0078                             __Lparam 0000  
                   __size_of_LowISR 0044                     __size_of___flge 0104  
                           ___fladd 16AE                             ___fldiv 1F98  
                           ___awdiv 351C             colourcards_readRGBC@abs 0083  
                           ___flmul 1B6E             colourcards_readRGBC@rel 008B  
                   __size_of___wmul 0026                 ?_I2C_2_Master_Start 0001  
               ?_I2C_2_Master_Write 0001                        __psmallconst 0E00  
                           __pcinit 3CE4                             __ramtop 0E00  
              __size_of_timer0_init 0020                             __ptext0 2612  
                           __ptext1 3D4E                             __ptext2 3D08  
                           __ptext3 3DEE                             __ptext4 3AEA  
                           __ptext5 3C0C                             __ptext6 3D6E  
                           __ptext7 3E6A                             __ptext8 3C44  
                           __ptext9 3786       __size_of_clicker2buttons_init 000C  
                         ?_turnleft 007D                          ??_adjdelay 000A  
              ?i2_I2C_2_Master_Idle 0001                           _T2CONbits 000FBD  
                           _forward 35E0                          ??___xxtofl 000E  
              ?i2_I2C_2_Master_Stop 0001                          _right$3194 0077  
                         _T2HLTbits 000FBE                             _reverse 366E  
              ??_I2C_2_Master_Start 000B                             left@deg 0071  
              ??_I2C_2_Master_Write 000B                      __pintcode_body 3B86  
              end_of_initialization 3CF6        __end_of_colourcards_readRGBC 16AE  
                  ADC_getval@tmpval 000A    __end_ofi2_interrupts_colourclick 3B86  
              __size_of_USART4_init 0020                             int_func 3B86  
         i2_colourclick_writetoaddr 3DCE                             right@mL 006D  
                           right@mR 006F                        adjdelay@mode 000C  
           ?_interrupts_colourclick 0001                             postdec1 000FE5  
                           postdec2 000FDD                             postinc1 000FE6  
                           postinc2 000FDE      colourclick_calibration@initial 0019  
      colourclick_writetoaddr@value 000C                       _DCmotors_init 39FA  
                         _PORTFbits 000F8E                          ??_turnleft 004E  
             ??i2_I2C_2_Master_Idle 0001               ??i2_I2C_2_Master_Stop 0002  
                       ___fladd@grs 0040                       ___xxtofl@sign 0012  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                   __end_of_turnright 3A9A  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 0067  
                       ___fldiv@rem 0060       __size_of_colourclick_readRGBC 005E  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 000B  
              colourclick_readB@tmp 0013                colourclick_readC@tmp 0013  
        __size_of_checkbatterylevel 0020                colourclick_readG@tmp 0013  
              colourclick_readR@tmp 0013                         ___flmul@grs 0025  
    __end_of_interrupts_colourclick 3B38                          main@motorL 00A2  
                        main@motorR 00AB                      __end_of_LowISR 005C  
          __size_of_interrupts_init 0024            __size_of_DCmotors_setPWM 01D4  
                    __end_of___flge 351C          colourclick_readRGBC@tmpval 0015  
                    ?_DCmotors_init 0001                      __end_of___wmul 3CE4  
        ?_colourcards_normaliseRGBC 006D                 start_initialization 3CE4  
              _DCmotors_calibration 2334                    _unknowncard_flag 00B6  
                   _returnhome_flag 00B5             _colourclick_calibration 3786  
       __size_ofi2_interrupts_clear 001A                            ??_LowISR 0007  
          i2_interrupts_colourclick 3B38                        turnright@deg 0081  
    __size_of_colourclick_readRGBC2 0156       __end_of_colourclick_readRGBC2 3418  
          ?_colourclick_writetoaddr 000C          colourcards_normaliseRGBC@B 0075  
        colourcards_normaliseRGBC@C 0077          colourcards_normaliseRGBC@G 0073  
        colourcards_normaliseRGBC@R 0071                            ??___flge 0020  
      __end_of_colourclickLEDs_init 3E78                            ??___wmul 000E  
          __end_of_colourclick_init 3C44       i2I2C_2_Master_Write@data_byte 0002  
              _colourcards_readRGBC 0EA4        __end_ofi2_I2C_2_Master_Start 3ED8  
      __end_ofi2_I2C_2_Master_Write 3E9C                           ___fladd@a 0035  
                         ___fladd@b 0031                           ___fldiv@a 0045  
                         ___fldiv@b 0041                           ___flmul@a 001C  
                         ___flmul@b 0018                         __pbssCOMRAM 0052  
                     __pcstackBANK0 0060                   __size_of_adjdelay 0164  
             ?_DCmotors_calibration 0083             __size_of_buggyLEDs_init 0016  
                 __size_of___xxtofl 01B4                            ?_HighISR 0001  
         __size_of_interrupts_clear 001A                           _clearance 385C  
                         _left$3193 0077                           __pintcode 0008  
                   ??_DCmotors_init 000A                            ?___fladd 0031  
                          ?___fldiv 0041                            ?___awdiv 0010  
                          ?___flmul 0018  __size_ofi2_colourclick_writetoaddr 0020  
             ?_colourcards_readRGBC 0083                         __pintcodelo 0018  
                         adjdelay@i 000D                          right@delay 0073  
              I2C_2_Master_Read@ack 000C                   ??_interrupts_init 000F  
                 ??_DCmotors_setPWM 001A                I2C_2_Master_Read@tmp 000D  
             _interrupts_lowerbound 0054                         __smallconst 0E00  
                          ?_forward 0023                   _I2C_2_Master_Idle 3C6E  
                 _I2C_2_Master_Init 3C44                   _I2C_2_Master_Read 3BCA  
                 _I2C_2_Master_Stop 3E9C                   __size_of_turnleft 0050  
                          _ADC_init 3E08                            ?_reverse 0023  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                  ?_I2C_2_Master_Stop 0001  
                    __size_of_right 0206           ??_colourclick_calibration 0017  
      __end_of_clicker2buttons_init 3E90                 ??_I2C_2_Master_Idle 000A  
               ??_I2C_2_Master_Init 000A                 ??_I2C_2_Master_Read 000B  
                    ___wmul@product 000E                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 000B                            _LATCbits 000F7B  
                 _colourclickLEDs_C 3D2C                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _IPR0bits 000E1F                            _PIE0bits 000E29  
                ?_colourclickLEDs_C 0001                            i1u443_20 0036  
                          i1u443_21 0032                            _PIR0bits 000E33  
                          i2u440_40 3B96                            i2u440_41 3B92  
                          i2u441_40 3BAE                            i2u441_41 3BA6  
                          i2u258_40 3CA6                            i2u258_41 3CA2  
                          i2u259_40 3CBC                            i2u442_48 3BB0  
                          i2u259_41 3CB8                            _PIR4bits 000E37  
                        ?_clearance 0029                            i2u635_47 3B48  
                     ??_timer0_init 000A                            _SSP2CON2 000EDA  
            DCmotors_setPWM@PWMduty 0021                            _SSP2STAT 000ED8  
               ??_colourclickLEDs_C 000A                   _colourclick_readB 39AA  
                 _colourclick_readC 395A                   _colourclick_readG 390A  
                 _colourclick_readR 38BA                          _ADCON0bits 000F60  
         __end_of_I2C_2_Master_Idle 3C96           __end_of_I2C_2_Master_Init 3C6E  
         __end_of_I2C_2_Master_Read 3C0C                   ___wmul@multiplier 000A  
                ?_colourclick_readB 000E                  ?_colourclick_readC 000E  
                ?_colourclick_readG 000E                  ?_colourclick_readR 000E  
         __end_of_I2C_2_Master_Stop 3EA6               _interrupts_upperbound 0052  
       I2C_2_Master_Write@data_byte 000B              ??_DCmotors_calibration 0087  
                         main@start 0099                           left@delay 0073  
               ??_colourclick_readB 0010                 ??_colourclick_readC 0010  
               ??_colourclick_readG 0010                 ??_colourclick_readR 0010  
                     ??_USART4_init 000A         __size_of_I2C_2_Master_Start 000A  
              _colourclickLEDs_init 3E6A         __size_of_I2C_2_Master_Write 000C  
                         _turnright 3A4A           __end_of_colourclickLEDs_C 3D4E  
                       turnleft@deg 0081      __size_of_I2C_2_Master_RepStart 000A  
     __end_of_I2C_2_Master_RepStart 3EBA                    __size_of_HighISR 3BC2  
              i2_I2C_2_Master_Start 3ECE                i2_I2C_2_Master_Write 3E90  
                          __Hrparam 0000                         turnright@mL 007D  
                       turnright@mR 007F                          _ADC_getval 3E3C  
      __end_of_colourclick_readRGBC 385C                            __Lrparam 0000  
                      __Lsmallconst 0E00           __end_of_colourclick_readB 39FA  
         __end_of_colourclick_readC 39AA           __end_of_colourclick_readG 395A  
         __end_of_colourclick_readR 390A                           forward@mL 0023  
                         forward@mR 0025              ??_colourcards_readRGBC 0089  
       __end_ofi2_I2C_2_Master_Idle 3CBE                    __size_of___fladd 04C0  
       __end_ofi2_I2C_2_Master_Stop 3ECE                    __size_of___fldiv 039C  
                  __size_of___awdiv 00C4                    __size_of___flmul 042A  
   __end_of_colourclick_calibration 37FE                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                            _adjdelay 315E  
                        _ANSELFbits 000EB4                 __end_of_timer0_init 3D6E  
       ??_colourcards_normaliseRGBC 004D                            ___xxtofl 2E2E  
                        _T0CON0bits 000FD5                          _T0CON1bits 000FD6  
            DCmotors_calibration@mL 0083              DCmotors_calibration@mR 0085  
                    _buggyLEDs_init 3E54                    __size_of_forward 008E  
                          __ptext10 0EA4                            __ptext11 35E0  
                          __ptext20 3EA6                            __ptext12 32C2  
                          __ptext21 3EB0                            __ptext13 37FE  
                          __ptext30 3DAE                            __ptext22 3BCA  
                          __ptext14 38BA                            __ptext31 39FA  
                          __ptext23 3C6E                            __ptext15 390A  
                          __ptext40 2E2E                            __ptext32 3E84  
                          __ptext24 3D2C                            __ptext16 395A  
                          __ptext41 1B6E                            __ptext33 3EBA  
                          __ptext25 2FE2                            __ptext17 39AA  
                          __ptext50 3E08                            __ptext42 3418  
                          __ptext34 3E54                            __ptext26 385C  
                          __ptext18 3E78                            __ptext43 1F98  
                          __ptext35 2334                            __ptext27 366E  
                          __ptext19 3E9C                            __ptext44 16AE  
                          __ptext36 3A4A                            __ptext28 3D8E  
                          __ptext53 3E22                            __ptext45 36FC  
                          __ptext37 3A9A                            __ptext29 3E3C  
                          __ptext54 3B38                            __ptext46 2C5A  
                          __ptext38 284E                            __ptext55 3DCE  
                          __ptext47 3CBE                            __ptext39 2A54  
                          __ptext56 3E90                            __ptext48 351C  
                          __ptext57 3EC4                            __ptext49 315E  
                          __ptext58 3ECE                            __ptext59 3C96  
                  __size_of_reverse 008E               ?_colourclickLEDs_init 0001  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
        ??i2_interrupts_colourclick 0005                          ?_turnright 007D  
                     __size_of_main 023C                       __size_of_left 0206  
                     __size_of_stop 008A               ?i2_I2C_2_Master_Start 0001  
             ?i2_I2C_2_Master_Write 0001                 __end_of_USART4_init 3DCE  
                  _interrupts_clear 3DEE                           reverse@mL 0023  
                         reverse@mR 0025                         ??_clearance 002D  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 0056                   ?_colourclick_init 0001  
                ??_colourclick_init 000E          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
                  DCmotors_setPWM@m 0018                _clicker2buttons_init 3E84  
        __size_of_I2C_2_Master_Stop 000A                            _turnleft 3A9A  
                        turnleft@mL 007D                          turnleft@mR 007F  
            __end_of_buggyLEDs_init 3E6A                          _INTCONbits 000FF2  
  __size_of_colourclick_writetoaddr 0020                         clearance@mL 0029  
                       clearance@mR 002B      colourclick_writetoaddr@address 000D  
  i2colourclick_writetoaddr@address 0004                         _PWM6CONbits 000FA4  
                       _PWM7CONbits 000FA1                            intlevel1 0000  
                          intlevel2 0000          __size_of_colourclickLEDs_C 0022  
        __end_ofi2_interrupts_clear 3E3C                  _turnright_calangle 004E  
                          right@deg 0071           _colourcards_normaliseRGBC 2FE2  
                 _turnleft_calangle 0050                     _interrupts_init 3D08  
                   _DCmotors_setPWM 2C5A                         ?_ADC_getval 0001  
        __size_of_colourclick_readB 0050          __size_of_colourclick_readC 0050  
        __size_of_colourclick_readG 0050          __size_of_colourclick_readR 0050  
             _colourclick_readRGBC2 32C2                         _timer0_init 3D4E  
             ?_clicker2buttons_init 0001           colourclick_readRGBC2@mode 0019  
                   ?_buggyLEDs_init 0001                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C              ??_colourclickLEDs_init 000B  
              _colourclick_readRGBC 37FE                       ___fladd@signs 003D  
                       _USART4_init 3DAE            ??_interrupts_colourclick 000E  
                        _TX4STAbits 000EE8                         ??_turnright 004E  
            ??i2_I2C_2_Master_Start 0002                       _overtime_flag 00B4  
                      ___fladd@aexp 003E              ??i2_I2C_2_Master_Write 0002  
                      ___fladd@bexp 003F        colourcards_normaliseRGBC@abs 006D  
