

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 13:09:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79  0000                     
    80                           ; Version 2.20
    81                           ; Generated 05/05/2020 GMT
    82                           ; 
    83                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F67K40 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	nvCOMRAM
   116  00004F                     __pnvCOMRAM:
   117                           	callstack 0
   118  00004F                     _turnright_calangle:
   119                           	callstack 0
   120  00004F                     	ds	2
   121  000051                     _turnleft_calangle:
   122                           	callstack 0
   123  000051                     	ds	2
   124  0000                     _INT1PPS	set	3569
   125  0000                     _RC7PPS	set	3689
   126  0000                     _RE2PPS	set	3700
   127  0000                     _TX4REG	set	3812
   128  0000                     _RC4REG	set	3811
   129  0000                     _PIR4bits	set	3639
   130  0000                     _RC4STAbits	set	3815
   131  0000                     _SP4BRGH	set	3814
   132  0000                     _SP4BRGL	set	3813
   133  0000                     _TX4STAbits	set	3816
   134  0000                     _BAUD4CONbits	set	3817
   135  0000                     _RX4PPS	set	3605
   136  0000                     _RC0PPS	set	3682
   137  0000                     _SSP2BUF	set	3797
   138  0000                     _SSP2CON2bits	set	3802
   139  0000                     _SSP2CON2	set	3802
   140  0000                     _SSP2STAT	set	3800
   141  0000                     _RD6PPS	set	3696
   142  0000                     _RD5PPS	set	3695
   143  0000                     _SSP2CLKPPS	set	3612
   144  0000                     _SSP2DATPPS	set	3613
   145  0000                     _ANSELDbits	set	3751
   146  0000                     _SSP2ADD	set	3798
   147  0000                     _SSP2CON1bits	set	3801
   148  0000                     _ANSELFbits	set	3764
   149  0000                     _PIR0bits	set	3635
   150  0000                     _IPR0bits	set	3615
   151  0000                     _PIE0bits	set	3625
   152  0000                     _ANSELBbits	set	3738
   153  0000                     _ADPCH	set	3935
   154  0000                     _ADREFbits	set	3928
   155  0000                     _T0CON0bits	set	4053
   156  0000                     _T0CON1bits	set	4054
   157  0000                     _PWM7CONbits	set	4001
   158  0000                     _PWM6CONbits	set	4004
   159  0000                     _LATCbits	set	3963
   160  0000                     _LATEbits	set	3965
   161  0000                     _TRISEbits	set	3973
   162  0000                     _T2PR	set	4028
   163  0000                     _T2CLKCONbits	set	4031
   164  0000                     _T2HLTbits	set	4030
   165  0000                     _T2CONbits	set	4029
   166  0000                     _TRISCbits	set	3971
   167  0000                     _TRISAbits	set	3969
   168  0000                     _TRISGbits	set	3975
   169  0000                     _TRISHbits	set	3976
   170  0000                     _TRISDbits	set	3972
   171  0000                     _ADRESH	set	3940
   172  0000                     _ADCON0bits	set	3936
   173  0000                     _TRISFbits	set	3974
   174  0000                     _LATFbits	set	3966
   175  0000                     _LATAbits	set	3961
   176  0000                     _LATGbits	set	3967
   177  0000                     _TMR0L	set	4051
   178  0000                     _TMR0H	set	4052
   179  0000                     _INTCONbits	set	4082
   180  0000                     _TRISBbits	set	3970
   181  0000                     _LATHbits	set	3968
   182  0000                     _LATDbits	set	3964
   183  0000                     _PORTFbits	set	3982
   184  0000                     _LATG	set	3967
   185  0000                     _PWM7DCH	set	4000
   186  0000                     _LATE	set	3965
   187  0000                     _PWM6DCH	set	4003
   188                           
   189                           	psect	smallconst
   190  000E00                     __psmallconst:
   191                           	callstack 0
   192  000E00  00                 	db	0
   193  000E01                     STR_1:
   194                           
   195                           ; BSR set to: 14
   196  000E01  52                 	db	82	;'R'
   197  000E02  47                 	db	71	;'G'
   198  000E03  42                 	db	66	;'B'
   199  000E04  43                 	db	67	;'C'
   200  000E05  3A                 	db	58	;':'
   201  000E06  20                 	db	32
   202  000E07  25                 	db	37
   203  000E08  69                 	db	105	;'i'
   204  000E09  20                 	db	32
   205  000E0A  25                 	db	37
   206  000E0B  69                 	db	105	;'i'
   207  000E0C  20                 	db	32
   208  000E0D  25                 	db	37
   209  000E0E  69                 	db	105	;'i'
   210  000E0F  20                 	db	32
   211  000E10  25                 	db	37
   212  000E11  69                 	db	105	;'i'
   213  000E12  20                 	db	32
   214  000E13  20                 	db	32
   215  000E14  20                 	db	32
   216  000E15  20                 	db	32
   217  000E16  20                 	db	32
   218  000E17  52                 	db	82	;'R'
   219  000E18  47                 	db	71	;'G'
   220  000E19  42                 	db	66	;'B'
   221  000E1A  43                 	db	67	;'C'
   222  000E1B  5F                 	db	95	;'_'
   223  000E1C  72                 	db	114	;'r'
   224  000E1D  65                 	db	101	;'e'
   225  000E1E  6C                 	db	108	;'l'
   226  000E1F  3A                 	db	58	;':'
   227  000E20  20                 	db	32
   228  000E21  25                 	db	37
   229  000E22  2E                 	db	46
   230  000E23  33                 	db	51	;'3'
   231  000E24  66                 	db	102	;'f'
   232  000E25  20                 	db	32
   233  000E26  25                 	db	37
   234  000E27  2E                 	db	46
   235  000E28  33                 	db	51	;'3'
   236  000E29  66                 	db	102	;'f'
   237  000E2A  20                 	db	32
   238  000E2B  25                 	db	37
   239  000E2C  2E                 	db	46
   240  000E2D  33                 	db	51	;'3'
   241  000E2E  66                 	db	102	;'f'
   242  000E2F  20                 	db	32
   243  000E30  20                 	db	32
   244  000E31  20                 	db	32
   245  000E32  20                 	db	32
   246  000E33  20                 	db	32
   247  000E34  43                 	db	67	;'C'
   248  000E35  6F                 	db	111	;'o'
   249  000E36  6C                 	db	108	;'l'
   250  000E37  6F                 	db	111	;'o'
   251  000E38  75                 	db	117	;'u'
   252  000E39  72                 	db	114	;'r'
   253  000E3A  3A                 	db	58	;':'
   254  000E3B  20                 	db	32
   255  000E3C  25                 	db	37
   256  000E3D  73                 	db	115	;'s'
   257  000E3E  0A                 	db	10
   258  000E3F  0D                 	db	13
   259  000E40  00                 	db	0
   260  000E41                     
   261                           ; BSR set to: 14
   262  000E41  52                 	db	82	;'R'
   263  000E42  47                 	db	71	;'G'
   264  000E43  42                 	db	66	;'B'
   265  000E44  43                 	db	67	;'C'
   266  000E45  3A                 	db	58	;':'
   267  000E46  20                 	db	32
   268  000E47  25                 	db	37
   269  000E48  69                 	db	105	;'i'
   270  000E49  20                 	db	32
   271  000E4A  25                 	db	37
   272  000E4B  69                 	db	105	;'i'
   273  000E4C  20                 	db	32
   274  000E4D  25                 	db	37
   275  000E4E  69                 	db	105	;'i'
   276  000E4F  20                 	db	32
   277  000E50  25                 	db	37
   278  000E51  69                 	db	105	;'i'
   279  000E52  20                 	db	32
   280  000E53  20                 	db	32
   281  000E54  20                 	db	32
   282  000E55  20                 	db	32
   283  000E56  20                 	db	32
   284  000E57  54                 	db	84	;'T'
   285  000E58  68                 	db	104	;'h'
   286  000E59  72                 	db	114	;'r'
   287  000E5A  65                 	db	101	;'e'
   288  000E5B  73                 	db	115	;'s'
   289  000E5C  68                 	db	104	;'h'
   290  000E5D  6F                 	db	111	;'o'
   291  000E5E  6C                 	db	108	;'l'
   292  000E5F  64                 	db	100	;'d'
   293  000E60  3A                 	db	58	;':'
   294  000E61  20                 	db	32
   295  000E62  25                 	db	37
   296  000E63  69                 	db	105	;'i'
   297  000E64  20                 	db	32
   298  000E65  25                 	db	37
   299  000E66  69                 	db	105	;'i'
   300  000E67  20                 	db	32
   301  000E68  25                 	db	37
   302  000E69  69                 	db	105	;'i'
   303  000E6A  0A                 	db	10
   304  000E6B  0D                 	db	13
   305  000E6C  00                 	db	0
   306  000E6D                     STR_10:
   307                           
   308                           ; BSR set to: 14
   309  000E6D  6C                 	db	108	;'l'
   310  000E6E  69                 	db	105	;'i'
   311  000E6F  67                 	db	103	;'g'
   312  000E70  68                 	db	104	;'h'
   313  000E71  74                 	db	116	;'t'
   314  000E72  20                 	db	32
   315  000E73  62                 	db	98	;'b'
   316  000E74  6C                 	db	108	;'l'
   317  000E75  75                 	db	117	;'u'
   318  000E76  65                 	db	101	;'e'
   319  000E77  00                 	db	0
   320  000E78                     
   321                           ; BSR set to: 14
   322  000E78  75                 	db	117	;'u'
   323  000E79  6E                 	db	110	;'n'
   324  000E7A  6B                 	db	107	;'k'
   325  000E7B  6E                 	db	110	;'n'
   326  000E7C  6F                 	db	111	;'o'
   327  000E7D  77                 	db	119	;'w'
   328  000E7E  6E                 	db	110	;'n'
   329  000E7F  00                 	db	0
   330  000E80                     
   331                           ; BSR set to: 14
   332  000E80  6F                 	db	111	;'o'
   333  000E81  72                 	db	114	;'r'
   334  000E82  61                 	db	97	;'a'
   335  000E83  6E                 	db	110	;'n'
   336  000E84  67                 	db	103	;'g'
   337  000E85  65                 	db	101	;'e'
   338  000E86  00                 	db	0
   339  000E87                     
   340                           ; BSR set to: 14
   341  000E87  79                 	db	121	;'y'
   342  000E88  65                 	db	101	;'e'
   343  000E89  6C                 	db	108	;'l'
   344  000E8A  6C                 	db	108	;'l'
   345  000E8B  6F                 	db	111	;'o'
   346  000E8C  77                 	db	119	;'w'
   347  000E8D  00                 	db	0
   348  000E8E                     
   349                           ; BSR set to: 14
   350  000E8E  77                 	db	119	;'w'
   351  000E8F  68                 	db	104	;'h'
   352  000E90  69                 	db	105	;'i'
   353  000E91  74                 	db	116	;'t'
   354  000E92  65                 	db	101	;'e'
   355  000E93  00                 	db	0
   356  000E94                     
   357                           ; BSR set to: 14
   358  000E94  67                 	db	103	;'g'
   359  000E95  72                 	db	114	;'r'
   360  000E96  65                 	db	101	;'e'
   361  000E97  65                 	db	101	;'e'
   362  000E98  6E                 	db	110	;'n'
   363  000E99  00                 	db	0
   364  000E9A                     
   365                           ; BSR set to: 14
   366  000E9A  70                 	db	112	;'p'
   367  000E9B  69                 	db	105	;'i'
   368  000E9C  6E                 	db	110	;'n'
   369  000E9D  6B                 	db	107	;'k'
   370  000E9E  00                 	db	0
   371  000E9F                     
   372                           ; BSR set to: 14
   373  000E9F  72                 	db	114	;'r'
   374  000EA0  65                 	db	101	;'e'
   375  000EA1  64                 	db	100	;'d'
   376  000EA2  00                 	db	0
   377  000EA3  00                 	db	0	; dummy byte at the end
   378  0000                     
   379                           ; #config settings
   380                           
   381                           	psect	cinit
   382  003D12                     __pcinit:
   383                           	callstack 0
   384  003D12                     start_initialization:
   385                           	callstack 0
   386  003D12                     __initialization:
   387                           	callstack 0
   388                           
   389                           ; Clear objects allocated to BANK1 (40 bytes)
   390  003D12  EE01  F000         	lfsr	0,__pbssBANK1
   391  003D16  0E28               	movlw	40
   392  003D18                     clear_0:
   393  003D18  6AEE               	clrf	postinc0,c
   394  003D1A  06E8               	decf	wreg,f,c
   395  003D1C  E1FD               	bnz	clear_0
   396                           
   397                           ; Clear objects allocated to BANK0 (47 bytes)
   398  003D1E  EE00  F0B3         	lfsr	0,__pbssBANK0
   399  003D22  0E2F               	movlw	47
   400  003D24                     clear_1:
   401  003D24  6AEE               	clrf	postinc0,c
   402  003D26  06E8               	decf	wreg,f,c
   403  003D28  E1FD               	bnz	clear_1
   404                           
   405                           ; Clear objects allocated to COMRAM (4 bytes)
   406  003D2A  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   407  003D2C  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   408  003D2E  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   409  003D30  6A53               	clrf	__pbssCOMRAM& (0+255),c
   410  003D32                     end_of_initialization:
   411                           	callstack 0
   412  003D32                     __end_of__initialization:
   413                           	callstack 0
   414  003D32  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   415  003D34  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   416  003D36  0E00               	movlw	low (__Lsmallconst shr (0+16))
   417  003D38  6EF8               	movwf	tblptru,c
   418  003D3A  0E0E               	movlw	high __Lsmallconst
   419  003D3C  6EF7               	movwf	tblptrh,c
   420  003D3E  0100               	movlb	0
   421  003D40  EF35  F013         	goto	_main	;jump to C main() function
   422                           
   423                           	psect	bssCOMRAM
   424  000053                     __pbssCOMRAM:
   425                           	callstack 0
   426  000053                     _interrupts_upperbound:
   427                           	callstack 0
   428  000053                     	ds	2
   429  000055                     _interrupts_lowerbound:
   430                           	callstack 0
   431  000055                     	ds	2
   432                           
   433                           	psect	bssBANK0
   434  0000B3                     __pbssBANK0:
   435                           	callstack 0
   436  0000B3                     _instr:
   437                           	callstack 0
   438  0000B3                     	ds	40
   439  0000DB                     _timer:
   440                           	callstack 0
   441  0000DB                     	ds	2
   442  0000DD                     _returnhome_flag:
   443                           	callstack 0
   444  0000DD                     	ds	1
   445  0000DE                     _unknowncard_flag:
   446                           	callstack 0
   447  0000DE                     	ds	1
   448  0000DF                     _colourcard_flag:
   449                           	callstack 0
   450  0000DF                     	ds	1
   451  0000E0                     _dur_counter:
   452                           	callstack 0
   453  0000E0                     	ds	1
   454  0000E1                     _instr_counter:
   455                           	callstack 0
   456  0000E1                     	ds	1
   457                           
   458                           	psect	bssBANK1
   459  000100                     __pbssBANK1:
   460                           	callstack 0
   461  000100                     _dur:
   462                           	callstack 0
   463  000100                     	ds	40
   464                           
   465                           	psect	cstackBANK0
   466  000060                     __pcstackBANK0:
   467                           	callstack 0
   468  000060                     ___fldiv@rem:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x0
   472  000060                     	ds	4
   473  000064                     ___fldiv@sign:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x4
   477  000064                     	ds	1
   478  000065                     ___fldiv@new_exp:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x5
   482  000065                     	ds	2
   483  000067                     ___fldiv@grs:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x7
   487  000067                     	ds	4
   488  00006B                     ___fldiv@bexp:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0xB
   492  00006B                     	ds	1
   493  00006C                     ___fldiv@aexp:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0xC
   497  00006C                     	ds	1
   498  00006D                     colourcards_normaliseRGBC@abs:
   499                           	callstack 0
   500  00006D                     turnleft@mL:
   501                           	callstack 0
   502  00006D                     turnright@mL:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0xD
   506  00006D                     	ds	2
   507  00006F                     colourcards_normaliseRGBC@rel:
   508                           	callstack 0
   509  00006F                     turnleft@mR:
   510                           	callstack 0
   511  00006F                     turnright@mR:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xF
   515  00006F                     	ds	2
   516  000071                     colourcards_normaliseRGBC@R:
   517                           	callstack 0
   518  000071                     turnleft@deg:
   519                           	callstack 0
   520  000071                     turnright@deg:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x11
   524  000071                     	ds	2
   525  000073                     colourcards_normaliseRGBC@G:
   526                           	callstack 0
   527  000073                     turnleft@delay:
   528                           	callstack 0
   529  000073                     turnright@delay:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x13
   533  000073                     	ds	2
   534  000075                     colourcards_normaliseRGBC@B:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x15
   538  000075                     	ds	2
   539  000077                     colourcards_normaliseRGBC@C:
   540                           	callstack 0
   541  000077                     _turnleft$3216:
   542                           	callstack 0
   543  000077                     _turnright$3217:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x17
   547  000077                     	ds	4
   548  00007B                     turnleft@i:
   549                           	callstack 0
   550  00007B                     turnright@i:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x1B
   554  00007B                     	ds	2
   555  00007D                     instructions@mL:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x1D
   559  00007D                     	ds	2
   560  00007F                     instructions@mR:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x1F
   564  00007F                     	ds	2
   565  000081                     instructions@num:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x21
   569  000081                     	ds	1
   570  000082                     colourcards_readRGBC@abs:
   571                           	callstack 0
   572  000082                     reverseinstructions@mL:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x22
   576  000082                     	ds	2
   577  000084                     colourcards_readRGBC@mL:
   578                           	callstack 0
   579  000084                     reverseinstructions@mR:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x24
   583  000084                     	ds	2
   584  000086                     ??_reverseinstructions:
   585  000086                     colourcards_readRGBC@mR:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x26
   589  000086                     	ds	2
   590  000088                     ??_colourcards_readRGBC:
   591  000088                     returnhome@mL:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x28
   595  000088                     	ds	2
   596  00008A                     returnhome@mR:
   597                           	callstack 0
   598  00008A                     colourcards_readRGBC@rel:
   599                           	callstack 0
   600                           
   601                           ; 12 bytes @ 0x2A
   602  00008A                     	ds	2
   603  00008C                     ??_returnhome:
   604                           
   605                           ; 1 bytes @ 0x2C
   606  00008C                     	ds	2
   607  00008E                     returnhome@i:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x2E
   611  00008E                     	ds	1
   612  00008F                     returnhome@j:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x2F
   616  00008F                     	ds	7
   617  000096                     ??_main:
   618                           
   619                           ; 1 bytes @ 0x36
   620  000096                     	ds	2
   621  000098                     main@start:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x38
   625  000098                     	ds	1
   626  000099                     main@current:
   627                           	callstack 0
   628                           
   629                           ; 8 bytes @ 0x39
   630  000099                     	ds	8
   631  0000A1                     main@motorL:
   632                           	callstack 0
   633                           
   634                           ; 9 bytes @ 0x41
   635  0000A1                     	ds	9
   636  0000AA                     main@motorR:
   637                           	callstack 0
   638                           
   639                           ; 9 bytes @ 0x4A
   640  0000AA                     	ds	9
   641                           
   642                           	psect	cstackCOMRAM
   643  000001                     __pcstackCOMRAM:
   644                           	callstack 0
   645  000001                     ??i2_I2C_2_Master_Idle:
   646  000001                     
   647                           ; 1 bytes @ 0x0
   648  000001                     	ds	1
   649  000002                     i2I2C_2_Master_Write@data_byte:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x1
   653  000002                     	ds	1
   654  000003                     i2colourclick_writetoaddr@value:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x2
   658  000003                     	ds	1
   659  000004                     i2colourclick_writetoaddr@address:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x3
   663  000004                     	ds	1
   664  000005                     ??i2_interrupts_colourclick:
   665                           
   666                           ; 1 bytes @ 0x4
   667  000005                     	ds	1
   668  000006                     ??_LowISR:
   669  000006                     
   670                           ; 1 bytes @ 0x5
   671  000006                     	ds	3
   672  000009                     ??_colourclickLEDs_RGB:
   673  000009                     ??_I2C_2_Master_Idle:
   674  000009                     ?___wmul:
   675                           	callstack 0
   676  000009                     ?___xxtofl:
   677                           	callstack 0
   678  000009                     ADC_getval@tmpval:
   679                           	callstack 0
   680  000009                     colourclickLEDs_C@tog:
   681                           	callstack 0
   682  000009                     DCmotors_init@PWMperiod:
   683                           	callstack 0
   684  000009                     ___wmul@multiplier:
   685                           	callstack 0
   686  000009                     ___xxtofl@val:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x8
   690  000009                     	ds	1
   691  00000A                     ??_I2C_2_Master_Read:
   692  00000A                     I2C_2_Master_Write@data_byte:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x9
   696  00000A                     	ds	1
   697  00000B                     ??_checkbatterylevel:
   698  00000B                     colourclick_writetoaddr@value:
   699                           	callstack 0
   700  00000B                     I2C_2_Master_Read@ack:
   701                           	callstack 0
   702  00000B                     ___wmul@multiplicand:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0xA
   706  00000B                     	ds	1
   707  00000C                     colourclick_writetoaddr@address:
   708                           	callstack 0
   709  00000C                     I2C_2_Master_Read@tmp:
   710                           	callstack 0
   711  00000C                     checkbatterylevel@batterylevel:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0xB
   715  00000C                     	ds	1
   716  00000D                     ??_colourclick_init:
   717  00000D                     ??_interrupts_colourclick:
   718  00000D                     ??___xxtofl:
   719  00000D                     ?_colourclick_readR:
   720                           	callstack 0
   721  00000D                     ?_colourclick_readG:
   722                           	callstack 0
   723  00000D                     ?_colourclick_readB:
   724                           	callstack 0
   725  00000D                     ?_colourclick_readC:
   726                           	callstack 0
   727  00000D                     ___wmul@product:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0xC
   731  00000D                     	ds	1
   732  00000E                     
   733                           ; 1 bytes @ 0xD
   734  00000E                     	ds	1
   735  00000F                     ??_colourclick_readR:
   736  00000F                     ??_colourclick_readG:
   737  00000F                     ??_colourclick_readB:
   738  00000F                     ??_colourclick_readC:
   739  00000F                     ?___awdiv:
   740                           	callstack 0
   741  00000F                     ___awdiv@dividend:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0xE
   745  00000F                     	ds	2
   746  000011                     ___xxtofl@sign:
   747                           	callstack 0
   748  000011                     ___awdiv@divisor:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x10
   752  000011                     	ds	1
   753  000012                     ___xxtofl@exp:
   754                           	callstack 0
   755  000012                     colourclick_readR@tmp:
   756                           	callstack 0
   757  000012                     colourclick_readG@tmp:
   758                           	callstack 0
   759  000012                     colourclick_readB@tmp:
   760                           	callstack 0
   761  000012                     colourclick_readC@tmp:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x11
   765  000012                     	ds	1
   766  000013                     ___awdiv@counter:
   767                           	callstack 0
   768  000013                     ___xxtofl@arg:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x12
   772  000013                     	ds	1
   773  000014                     ___awdiv@sign:
   774                           	callstack 0
   775  000014                     colourclick_readRGBC@tmpval:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x13
   779  000014                     	ds	1
   780  000015                     ___awdiv@quotient:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x14
   784  000015                     	ds	1
   785  000016                     ??_colourclick_calibration:
   786  000016                     colourclick_readRGBC2@tmpval:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x15
   790  000016                     	ds	1
   791  000017                     ?___flmul:
   792                           	callstack 0
   793  000017                     DCmotors_setPWM@m:
   794                           	callstack 0
   795  000017                     ___flge@ff1:
   796                           	callstack 0
   797  000017                     ___flmul@b:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x16
   801  000017                     	ds	1
   802  000018                     colourclick_readRGBC2@mode:
   803                           	callstack 0
   804  000018                     colourclick_calibration@initial:
   805                           	callstack 0
   806                           
   807                           ; 8 bytes @ 0x17
   808  000018                     	ds	1
   809  000019                     ??_colourclick_readRGBC2:
   810  000019                     ??_DCmotors_setPWM:
   811                           
   812                           ; 1 bytes @ 0x18
   813  000019                     	ds	2
   814  00001B                     ___flge@ff2:
   815                           	callstack 0
   816  00001B                     ___flmul@a:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x1A
   820  00001B                     	ds	4
   821  00001F                     ??___flmul:
   822  00001F                     ??___flge:
   823                           
   824                           ; 1 bytes @ 0x1E
   825  00001F                     	ds	1
   826  000020                     DCmotors_setPWM@PWMduty:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x1F
   830  000020                     	ds	2
   831  000022                     forward@mL:
   832                           	callstack 0
   833  000022                     reverse@mL:
   834                           	callstack 0
   835  000022                     stop@mL:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x21
   839  000022                     	ds	1
   840  000023                     ___flmul@sign:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x22
   844  000023                     	ds	1
   845  000024                     forward@mR:
   846                           	callstack 0
   847  000024                     reverse@mR:
   848                           	callstack 0
   849  000024                     stop@mR:
   850                           	callstack 0
   851  000024                     ___flmul@grs:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x23
   855  000024                     	ds	2
   856  000026                     ??_stop:
   857  000026                     
   858                           ; 1 bytes @ 0x25
   859  000026                     	ds	2
   860  000028                     ___flmul@aexp:
   861                           	callstack 0
   862  000028                     clearance@mL:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x27
   866  000028                     	ds	1
   867  000029                     ___flmul@bexp:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x28
   871  000029                     	ds	1
   872  00002A                     clearance@mR:
   873                           	callstack 0
   874  00002A                     ___flmul@prod:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x29
   878  00002A                     	ds	2
   879  00002C                     ??_clearance:
   880                           
   881                           ; 1 bytes @ 0x2B
   882  00002C                     	ds	2
   883  00002E                     ___flmul@temp:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x2D
   887  00002E                     	ds	2
   888  000030                     ?___fladd:
   889                           	callstack 0
   890  000030                     ___fladd@b:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x2F
   894  000030                     	ds	4
   895  000034                     ___fladd@a:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0x33
   899  000034                     	ds	4
   900  000038                     ??___fladd:
   901                           
   902                           ; 1 bytes @ 0x37
   903  000038                     	ds	4
   904  00003C                     ___fladd@signs:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0x3B
   908  00003C                     	ds	1
   909  00003D                     ___fladd@aexp:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x3C
   913  00003D                     	ds	1
   914  00003E                     ___fladd@bexp:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x3D
   918  00003E                     	ds	1
   919  00003F                     ___fladd@grs:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x3E
   923  00003F                     	ds	1
   924  000040                     ?___fldiv:
   925                           	callstack 0
   926  000040                     ___fldiv@b:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x3F
   930  000040                     	ds	4
   931  000044                     ___fldiv@a:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x43
   935  000044                     	ds	4
   936  000048                     ??___fldiv:
   937                           
   938                           ; 1 bytes @ 0x47
   939  000048                     	ds	4
   940  00004C                     ??_turnleft:
   941  00004C                     ??_turnright:
   942                           
   943                           ; 1 bytes @ 0x4B
   944  00004C                     	ds	1
   945  00004D                     ??_instructions:
   946                           
   947                           ; 1 bytes @ 0x4C
   948  00004D                     	ds	2
   949                           
   950 ;;
   951 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   952 ;;
   953 ;; *************** function _main *****************
   954 ;; Defined at:
   955 ;;		line 7 in file "main.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  motorR          9   74[BANK0 ] struct .
   960 ;;  motorL          9   65[BANK0 ] struct .
   961 ;;  current         8   57[BANK0 ] struct .
   962 ;;  PWMperiod       1    0        unsigned char 
   963 ;;  start           1   56[BANK0 ] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   974 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   975 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   976 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   977 ;;Total ram usage:       29 bytes
   978 ;; Hardware stack levels required when called: 14
   979 ;; This function calls:
   980 ;;		_ADC_init
   981 ;;		_DCmotors_init
   982 ;;		_USART4_init
   983 ;;		_checkbatterylevel
   984 ;;		_colourcards_readRGBC
   985 ;;		_colourclickLEDs_C
   986 ;;		_colourclick_calibration
   987 ;;		_colourclick_init
   988 ;;		_colourclick_readRGBC
   989 ;;		_forward
   990 ;;		_interrupts_init
   991 ;;		_returnhome
   992 ;;		_reverse
   993 ;;		_stop
   994 ;;		_timer0_init
   995 ;; This function is called by:
   996 ;;		Startup code after reset
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text0
  1001  00266A                     __ptext0:
  1002                           	callstack 0
  1003  00266A                     _main:
  1004                           	callstack 17
  1005  00266A                     
  1006                           ;main.c: 11:     RGBC_val current;;main.c: 12:     unsigned char start = 0;
  1007  00266A  0E00               	movlw	0
  1008  00266C  0100               	movlb	0	; () banked
  1009  00266E  6F98               	movwf	main@start& (0+255),b
  1010                           
  1011                           ;main.c: 14:     timer = 0;
  1012  002670  0E00               	movlw	0
  1013  002672  6FDC               	movwf	(_timer+1)& (0+255),b	;volatile
  1014  002674  0E00               	movlw	0
  1015  002676  6FDB               	movwf	_timer& (0+255),b	;volatile
  1016                           
  1017                           ;main.c: 15:     instr_counter = 0;
  1018  002678  0E00               	movlw	0
  1019  00267A  6FE1               	movwf	_instr_counter& (0+255),b	;volatile
  1020                           
  1021                           ;main.c: 16:     dur_counter = 0;
  1022  00267C  0E00               	movlw	0
  1023  00267E  6FE0               	movwf	_dur_counter& (0+255),b	;volatile
  1024                           
  1025                           ;main.c: 17:     turnleft_calangle = 360;
  1026  002680  0E01               	movlw	1
  1027  002682  6E52               	movwf	(_turnleft_calangle+1)^0,c	;volatile
  1028  002684  0E68               	movlw	104
  1029  002686  6E51               	movwf	_turnleft_calangle^0,c	;volatile
  1030                           
  1031                           ;main.c: 18:     turnright_calangle = 360;
  1032  002688  0E01               	movlw	1
  1033  00268A  6E50               	movwf	(_turnright_calangle+1)^0,c	;volatile
  1034  00268C  0E68               	movlw	104
  1035  00268E  6E4F               	movwf	_turnright_calangle^0,c	;volatile
  1036                           
  1037                           ;main.c: 19:     interrupts_lowerbound = 0;
  1038  002690  0E00               	movlw	0
  1039  002692  6E56               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1040  002694  0E00               	movlw	0
  1041  002696  6E55               	movwf	_interrupts_lowerbound^0,c	;volatile
  1042                           
  1043                           ;main.c: 20:     interrupts_upperbound = 0;
  1044  002698  0E00               	movlw	0
  1045  00269A  6E54               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1046  00269C  0E00               	movlw	0
  1047  00269E  6E53               	movwf	_interrupts_upperbound^0,c	;volatile
  1048                           
  1049                           ;main.c: 21:     colourcard_flag = 0;
  1050  0026A0  0E00               	movlw	0
  1051  0026A2  6FDF               	movwf	_colourcard_flag& (0+255),b	;volatile
  1052                           
  1053                           ;main.c: 22:     unknowncard_flag = 0;
  1054  0026A4  0E00               	movlw	0
  1055  0026A6  6FDE               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1056                           
  1057                           ;main.c: 23:     returnhome_flag = 0;
  1058  0026A8  0E00               	movlw	0
  1059  0026AA  6FDD               	movwf	_returnhome_flag& (0+255),b	;volatile
  1060                           
  1061                           ;main.c: 25:     DC_motor motorL;;main.c: 26:     motorL.power=0;
  1062  0026AC  0E00               	movlw	0
  1063  0026AE  6FA1               	movwf	main@motorL& (0+255),b
  1064                           
  1065                           ;main.c: 27:     motorL.direction=1;
  1066  0026B0  0E01               	movlw	1
  1067  0026B2  6FA2               	movwf	(main@motorL+1)& (0+255),b
  1068  0026B4                     
  1069                           ; BSR set to: 0
  1070                           ;main.c: 28:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1071  0026B4  0EA3               	movlw	163
  1072  0026B6  6FA3               	movwf	(main@motorL+2)& (0+255),b
  1073  0026B8  0E0F               	movlw	15
  1074  0026BA  6FA4               	movwf	(main@motorL+3)& (0+255),b
  1075  0026BC                     
  1076                           ; BSR set to: 0
  1077                           ;main.c: 29:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1078  0026BC  0E7D               	movlw	125
  1079  0026BE  6FA5               	movwf	(main@motorL+4)& (0+255),b
  1080  0026C0  0E0F               	movlw	15
  1081  0026C2  6FA6               	movwf	(main@motorL+5)& (0+255),b
  1082                           
  1083                           ;main.c: 30:     motorL.dir_pin=4;
  1084  0026C4  0E04               	movlw	4
  1085  0026C6  6FA7               	movwf	(main@motorL+6)& (0+255),b
  1086  0026C8                     
  1087                           ; BSR set to: 0
  1088                           ;main.c: 31:     motorL.PWMperiod=PWMperiod;
  1089  0026C8  0E00               	movlw	0
  1090  0026CA  6FA9               	movwf	(main@motorL+8)& (0+255),b
  1091  0026CC  0E63               	movlw	99
  1092  0026CE  6FA8               	movwf	(main@motorL+7)& (0+255),b
  1093                           
  1094                           ;main.c: 33:     DC_motor motorR;;main.c: 34:     motorR.power=0;
  1095  0026D0  0E00               	movlw	0
  1096  0026D2  6FAA               	movwf	main@motorR& (0+255),b
  1097                           
  1098                           ;main.c: 35:     motorR.direction=1;
  1099  0026D4  0E01               	movlw	1
  1100  0026D6  6FAB               	movwf	(main@motorR+1)& (0+255),b
  1101  0026D8                     
  1102                           ; BSR set to: 0
  1103                           ;main.c: 36:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1104  0026D8  0EA0               	movlw	160
  1105  0026DA  6FAC               	movwf	(main@motorR+2)& (0+255),b
  1106  0026DC  0E0F               	movlw	15
  1107  0026DE  6FAD               	movwf	(main@motorR+3)& (0+255),b
  1108  0026E0                     
  1109                           ; BSR set to: 0
  1110                           ;main.c: 37:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1111  0026E0  0E7F               	movlw	127
  1112  0026E2  6FAE               	movwf	(main@motorR+4)& (0+255),b
  1113  0026E4  0E0F               	movlw	15
  1114  0026E6  6FAF               	movwf	(main@motorR+5)& (0+255),b
  1115                           
  1116                           ;main.c: 38:     motorR.dir_pin=6;
  1117  0026E8  0E06               	movlw	6
  1118  0026EA  6FB0               	movwf	(main@motorR+6)& (0+255),b
  1119  0026EC                     
  1120                           ; BSR set to: 0
  1121                           ;main.c: 39:     motorR.PWMperiod=PWMperiod;
  1122  0026EC  0E00               	movlw	0
  1123  0026EE  6FB2               	movwf	(main@motorR+8)& (0+255),b
  1124  0026F0  0E63               	movlw	99
  1125  0026F2  6FB1               	movwf	(main@motorR+7)& (0+255),b
  1126  0026F4                     
  1127                           ; BSR set to: 0
  1128                           ;main.c: 41:     ADC_init();
  1129  0026F4  EC73  F01F         	call	_ADC_init	;wreg free
  1130  0026F8                     
  1131                           ;main.c: 42:     colourclick_init();
  1132  0026F8  EC6D  F01E         	call	_colourclick_init	;wreg free
  1133  0026FC                     
  1134                           ;main.c: 43:     DCmotors_init(PWMperiod);
  1135  0026FC  0E63               	movlw	99
  1136  0026FE  ECD6  F01D         	call	_DCmotors_init
  1137  002702                     
  1138                           ;main.c: 44:     USART4_init();
  1139  002702  EC46  F01F         	call	_USART4_init	;wreg free
  1140  002706                     
  1141                           ;main.c: 45:     checkbatterylevel();
  1142  002706  EC26  F01A         	call	_checkbatterylevel	;wreg free
  1143  00270A                     
  1144                           ;main.c: 56:     colourclick_calibration();
  1145  00270A  EC63  F01B         	call	_colourclick_calibration	;wreg free
  1146  00270E                     l83:
  1147  00270E  A48E               	btfss	142,2,c	;volatile
  1148  002710  EF8C  F013         	goto	u5821
  1149  002714  EF8E  F013         	goto	u5820
  1150  002718                     u5821:
  1151  002718  EF95  F013         	goto	l87
  1152  00271C                     u5820:
  1153  00271C  B68E               	btfsc	142,3,c	;volatile
  1154  00271E  EF93  F013         	goto	u5831
  1155  002722  EF95  F013         	goto	u5830
  1156  002726                     u5831:
  1157  002726  EF87  F013         	goto	l83
  1158  00272A                     u5830:
  1159  00272A                     l87:
  1160                           
  1161                           ;main.c: 64:     LATDbits.LATD3 = 1;
  1162  00272A  867C               	bsf	124,3,c	;volatile
  1163  00272C                     
  1164                           ;main.c: 65:     colourclickLEDs_C(1);
  1165  00272C  0E01               	movlw	1
  1166  00272E  EC04  F01F         	call	_colourclickLEDs_C
  1167  002732                     
  1168                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1169  002732  0E52               	movlw	82
  1170  002734  0100               	movlb	0	; () banked
  1171  002736  6F97               	movwf	(??_main+1)& (0+255),b
  1172  002738  0E2B               	movlw	43
  1173  00273A  6F96               	movwf	??_main& (0+255),b
  1174  00273C  0E00               	movlw	0
  1175  00273E                     u6497:
  1176  00273E  2EE8               	decfsz	wreg,f,c
  1177  002740  D7FE               	bra	u6497
  1178  002742  2F96               	decfsz	??_main& (0+255),f,b
  1179  002744  D7FC               	bra	u6497
  1180  002746  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1181  002748  D7FA               	bra	u6497
  1182  00274A  F000               	nop	
  1183  00274C                     
  1184                           ;main.c: 67:     interrupts_init();
  1185  00274C  ECF2  F01E         	call	_interrupts_init	;wreg free
  1186  002750                     
  1187                           ;main.c: 68:     timer0_init();
  1188  002750  EC26  F01F         	call	_timer0_init	;wreg free
  1189  002754                     l5211:
  1190                           
  1191                           ;main.c: 75:         checkbatterylevel();
  1192  002754  EC26  F01A         	call	_checkbatterylevel	;wreg free
  1193                           
  1194                           ;main.c: 77:         if (start<1 && colourcard_flag==1) {
  1195  002758  0100               	movlb	0	; () banked
  1196  00275A  5198               	movf	main@start& (0+255),w,b
  1197  00275C  A4D8               	btfss	status,2,c
  1198  00275E  EFB3  F013         	goto	u5841
  1199  002762  EFB5  F013         	goto	u5840
  1200  002766                     u5841:
  1201  002766  EFC3  F013         	goto	l5217
  1202  00276A                     u5840:
  1203  00276A                     
  1204                           ; BSR set to: 0
  1205  00276A  05DF               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1206  00276C  A4D8               	btfss	status,2,c
  1207  00276E  EFBB  F013         	goto	u5851
  1208  002772  EFBD  F013         	goto	u5850
  1209  002776                     u5851:
  1210  002776  EFC3  F013         	goto	l5217
  1211  00277A                     u5850:
  1212  00277A                     
  1213                           ; BSR set to: 0
  1214                           ;main.c: 78:             colourcard_flag = 0;
  1215  00277A  0E00               	movlw	0
  1216  00277C  6FDF               	movwf	_colourcard_flag& (0+255),b	;volatile
  1217                           
  1218                           ;main.c: 79:             start = 1;
  1219  00277E  0E01               	movlw	1
  1220  002780  6F98               	movwf	main@start& (0+255),b
  1221                           
  1222                           ;main.c: 81:         } else if (start>0 && colourcard_flag==1) {
  1223  002782  EFAA  F013         	goto	l5211
  1224  002786                     l5217:
  1225                           
  1226                           ; BSR set to: 0
  1227  002786  5198               	movf	main@start& (0+255),w,b
  1228  002788  B4D8               	btfsc	status,2,c
  1229  00278A  EFC9  F013         	goto	u5861
  1230  00278E  EFCB  F013         	goto	u5860
  1231  002792                     u5861:
  1232  002792  EF42  F014         	goto	l5247
  1233  002796                     u5860:
  1234  002796                     
  1235                           ; BSR set to: 0
  1236  002796  05DF               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1237  002798  A4D8               	btfss	status,2,c
  1238  00279A  EFD1  F013         	goto	u5871
  1239  00279E  EFD3  F013         	goto	u5870
  1240  0027A2                     u5871:
  1241  0027A2  EF42  F014         	goto	l5247
  1242  0027A6                     u5870:
  1243  0027A6                     
  1244                           ; BSR set to: 0
  1245                           ;main.c: 82:             stop(&motorL, &motorR);
  1246  0027A6  0EA1               	movlw	low main@motorL
  1247  0027A8  6E22               	movwf	stop@mL^0,c
  1248  0027AA  0E00               	movlw	high main@motorL
  1249  0027AC  6E23               	movwf	(stop@mL+1)^0,c
  1250  0027AE  0EAA               	movlw	low main@motorR
  1251  0027B0  6E24               	movwf	stop@mR^0,c
  1252  0027B2  0E00               	movlw	high main@motorR
  1253  0027B4  6E25               	movwf	(stop@mR+1)^0,c
  1254  0027B6  EC93  F01C         	call	_stop	;wreg free
  1255  0027BA                     
  1256                           ;main.c: 83:             LATDbits.LATD7 = 1;
  1257  0027BA  8E7C               	bsf	124,7,c	;volatile
  1258  0027BC                     
  1259                           ;main.c: 84:             LATHbits.LATH3 = 1;
  1260  0027BC  8680               	bsf	128,3,c	;volatile
  1261                           
  1262                           ;main.c: 85:             reverse(&motorL, &motorR);
  1263  0027BE  0EA1               	movlw	low main@motorL
  1264  0027C0  6E22               	movwf	reverse@mL^0,c
  1265  0027C2  0E00               	movlw	high main@motorL
  1266  0027C4  6E23               	movwf	(reverse@mL+1)^0,c
  1267  0027C6  0EAA               	movlw	low main@motorR
  1268  0027C8  6E24               	movwf	reverse@mR^0,c
  1269  0027CA  0E00               	movlw	high main@motorR
  1270  0027CC  6E25               	movwf	(reverse@mR+1)^0,c
  1271  0027CE  EC05  F01C         	call	_reverse	;wreg free
  1272  0027D2                     
  1273                           ;main.c: 86:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1274  0027D2  0E09               	movlw	9
  1275  0027D4  0100               	movlb	0	; () banked
  1276  0027D6  6F97               	movwf	(??_main+1)& (0+255),b
  1277  0027D8  0E1E               	movlw	30
  1278  0027DA  6F96               	movwf	??_main& (0+255),b
  1279  0027DC  0EE4               	movlw	228
  1280  0027DE                     u6507:
  1281  0027DE  2EE8               	decfsz	wreg,f,c
  1282  0027E0  D7FE               	bra	u6507
  1283  0027E2  2F96               	decfsz	??_main& (0+255),f,b
  1284  0027E4  D7FC               	bra	u6507
  1285  0027E6  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1286  0027E8  D7FA               	bra	u6507
  1287  0027EA  F000               	nop	
  1288  0027EC                     
  1289                           ;main.c: 87:             stop(&motorL, &motorR);
  1290  0027EC  0EA1               	movlw	low main@motorL
  1291  0027EE  6E22               	movwf	stop@mL^0,c
  1292  0027F0  0E00               	movlw	high main@motorL
  1293  0027F2  6E23               	movwf	(stop@mL+1)^0,c
  1294  0027F4  0EAA               	movlw	low main@motorR
  1295  0027F6  6E24               	movwf	stop@mR^0,c
  1296  0027F8  0E00               	movlw	high main@motorR
  1297  0027FA  6E25               	movwf	(stop@mR+1)^0,c
  1298  0027FC  EC93  F01C         	call	_stop	;wreg free
  1299  002800                     
  1300                           ;main.c: 88:             LATDbits.LATD7 = 0;
  1301  002800  9E7C               	bcf	124,7,c	;volatile
  1302  002802                     
  1303                           ;main.c: 89:             LATHbits.LATH3 = 0;
  1304  002802  9680               	bcf	128,3,c	;volatile
  1305                           
  1306                           ;main.c: 90:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1307  002804  0E52               	movlw	82
  1308  002806  0100               	movlb	0	; () banked
  1309  002808  6F97               	movwf	(??_main+1)& (0+255),b
  1310  00280A  0E2B               	movlw	43
  1311  00280C  6F96               	movwf	??_main& (0+255),b
  1312  00280E  0E00               	movlw	0
  1313  002810                     u6517:
  1314  002810  2EE8               	decfsz	wreg,f,c
  1315  002812  D7FE               	bra	u6517
  1316  002814  2F96               	decfsz	??_main& (0+255),f,b
  1317  002816  D7FC               	bra	u6517
  1318  002818  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1319  00281A  D7FA               	bra	u6517
  1320  00281C  F000               	nop	
  1321  00281E                     
  1322                           ;main.c: 92:             colourcards_readRGBC(&current, &motorL, &motorR);
  1323  00281E  0E99               	movlw	low main@current
  1324  002820  0100               	movlb	0	; () banked
  1325  002822  6F82               	movwf	colourcards_readRGBC@abs& (0+255),b
  1326  002824  0E00               	movlw	high main@current
  1327  002826  6F83               	movwf	(colourcards_readRGBC@abs+1)& (0+255),b
  1328  002828  0EA1               	movlw	low main@motorL
  1329  00282A  6F84               	movwf	colourcards_readRGBC@mL& (0+255),b
  1330  00282C  0E00               	movlw	high main@motorL
  1331  00282E  6F85               	movwf	(colourcards_readRGBC@mL+1)& (0+255),b
  1332  002830  0EAA               	movlw	low main@motorR
  1333  002832  6F86               	movwf	colourcards_readRGBC@mR& (0+255),b
  1334  002834  0E00               	movlw	high main@motorR
  1335  002836  6F87               	movwf	(colourcards_readRGBC@mR+1)& (0+255),b
  1336  002838  EC52  F007         	call	_colourcards_readRGBC	;wreg free
  1337  00283C                     
  1338                           ;main.c: 94:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1339  00283C  0E52               	movlw	82
  1340  00283E  0100               	movlb	0	; () banked
  1341  002840  6F97               	movwf	(??_main+1)& (0+255),b
  1342  002842  0E2B               	movlw	43
  1343  002844  6F96               	movwf	??_main& (0+255),b
  1344  002846  0E00               	movlw	0
  1345  002848                     u6527:
  1346  002848  2EE8               	decfsz	wreg,f,c
  1347  00284A  D7FE               	bra	u6527
  1348  00284C  2F96               	decfsz	??_main& (0+255),f,b
  1349  00284E  D7FC               	bra	u6527
  1350  002850  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1351  002852  D7FA               	bra	u6527
  1352  002854  F000               	nop	
  1353  002856                     
  1354                           ;main.c: 95:             colourclick_readRGBC(&current);
  1355  002856  0E99               	movlw	low main@current
  1356  002858  6E14               	movwf	colourclick_readRGBC@tmpval^0,c
  1357  00285A  0E00               	movlw	high main@current
  1358  00285C  6E15               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  1359  00285E  EC07  F01D         	call	_colourclick_readRGBC	;wreg free
  1360  002862                     
  1361                           ;main.c: 96:             interrupts_lowerbound = current.C - 150;
  1362  002862  0E6A               	movlw	106
  1363  002864  0100               	movlb	0	; () banked
  1364  002866  259F               	addwf	(main@current+6)& (0+255),w,b
  1365  002868  6E55               	movwf	_interrupts_lowerbound^0,c	;volatile
  1366  00286A  0EFF               	movlw	255
  1367  00286C  21A0               	addwfc	(main@current+7)& (0+255),w,b
  1368  00286E  6E56               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1369  002870                     
  1370                           ; BSR set to: 0
  1371                           ;main.c: 97:             interrupts_upperbound = current.C + 100;
  1372  002870  0E64               	movlw	100
  1373  002872  259F               	addwf	(main@current+6)& (0+255),w,b
  1374  002874  6E53               	movwf	_interrupts_upperbound^0,c	;volatile
  1375  002876  0E00               	movlw	0
  1376  002878  21A0               	addwfc	(main@current+7)& (0+255),w,b
  1377  00287A  6E54               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1378  00287C                     
  1379                           ; BSR set to: 0
  1380                           ;main.c: 99:             colourcard_flag = 0;
  1381  00287C  0E00               	movlw	0
  1382  00287E  6FDF               	movwf	_colourcard_flag& (0+255),b	;volatile
  1383                           
  1384                           ;main.c: 101:         } else if (returnhome_flag==1) {
  1385  002880  EFAA  F013         	goto	l5211
  1386  002884                     l5247:
  1387                           
  1388                           ; BSR set to: 0
  1389  002884  05DD               	decf	_returnhome_flag& (0+255),w,b	;volatile
  1390  002886  A4D8               	btfss	status,2,c
  1391  002888  EF48  F014         	goto	u5881
  1392  00288C  EF4A  F014         	goto	u5880
  1393  002890                     u5881:
  1394  002890  EF59  F014         	goto	l5253
  1395  002894                     u5880:
  1396  002894                     
  1397                           ; BSR set to: 0
  1398                           ;main.c: 102:             returnhome(&motorL, &motorR);
  1399  002894  0EA1               	movlw	low main@motorL
  1400  002896  6F88               	movwf	returnhome@mL& (0+255),b
  1401  002898  0E00               	movlw	high main@motorL
  1402  00289A  6F89               	movwf	(returnhome@mL+1)& (0+255),b
  1403  00289C  0EAA               	movlw	low main@motorR
  1404  00289E  6F8A               	movwf	returnhome@mR& (0+255),b
  1405  0028A0  0E00               	movlw	high main@motorR
  1406  0028A2  6F8B               	movwf	(returnhome@mR+1)& (0+255),b
  1407  0028A4  EC03  F01B         	call	_returnhome	;wreg free
  1408  0028A8                     
  1409                           ;main.c: 103:             returnhome_flag=2;
  1410  0028A8  0E02               	movlw	2
  1411  0028AA  0100               	movlb	0	; () banked
  1412  0028AC  6FDD               	movwf	_returnhome_flag& (0+255),b	;volatile
  1413                           
  1414                           ;main.c: 105:         } else if (returnhome_flag==0) {
  1415  0028AE  EFAA  F013         	goto	l5211
  1416  0028B2                     l5253:
  1417                           
  1418                           ; BSR set to: 0
  1419  0028B2  51DD               	movf	_returnhome_flag& (0+255),w,b	;volatile
  1420  0028B4  A4D8               	btfss	status,2,c
  1421  0028B6  EF5F  F014         	goto	u5891
  1422  0028BA  EF61  F014         	goto	u5890
  1423  0028BE                     u5891:
  1424  0028BE  EF6D  F014         	goto	l90
  1425  0028C2                     u5890:
  1426  0028C2                     
  1427                           ; BSR set to: 0
  1428                           ;main.c: 106:             forward(&motorL, &motorR);
  1429  0028C2  0EA1               	movlw	low main@motorL
  1430  0028C4  6E22               	movwf	forward@mL^0,c
  1431  0028C6  0E00               	movlw	high main@motorL
  1432  0028C8  6E23               	movwf	(forward@mL+1)^0,c
  1433  0028CA  0EAA               	movlw	low main@motorR
  1434  0028CC  6E24               	movwf	forward@mR^0,c
  1435  0028CE  0E00               	movlw	high main@motorR
  1436  0028D0  6E25               	movwf	(forward@mR+1)^0,c
  1437  0028D2  EC4C  F01C         	call	_forward	;wreg free
  1438  0028D6  EFAA  F013         	goto	l5211
  1439  0028DA                     l90:
  1440                           
  1441                           ; BSR set to: 0
  1442  0028DA  EFAA  F013         	goto	l5211
  1443  0028DE  EF2C  F000         	goto	start
  1444  0028E2                     __end_of_main:
  1445                           	callstack 0
  1446                           
  1447 ;; *************** function _timer0_init *****************
  1448 ;; Defined at:
  1449 ;;		line 8 in file "timers.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 7
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text1
  1478  003E4C                     __ptext1:
  1479                           	callstack 0
  1480  003E4C                     _timer0_init:
  1481                           	callstack 23
  1482  003E4C                     
  1483                           ;timers.c: 16:     T0CON1bits.T0CS=0b010;
  1484  003E4C  50D6               	movf	214,w,c	;volatile
  1485  003E4E  0B1F               	andlw	-225
  1486  003E50  0940               	iorlw	64
  1487  003E52  6ED6               	movwf	214,c	;volatile
  1488  003E54                     
  1489                           ;timers.c: 17:     T0CON1bits.T0ASYNC=1;
  1490  003E54  88D6               	bsf	214,4,c	;volatile
  1491                           
  1492                           ;timers.c: 18:     T0CON1bits.T0CKPS=0b0101;
  1493  003E56  50D6               	movf	214,w,c	;volatile
  1494  003E58  0BF0               	andlw	-16
  1495  003E5A  0905               	iorlw	5
  1496  003E5C  6ED6               	movwf	214,c	;volatile
  1497  003E5E                     
  1498                           ;timers.c: 19:     T0CON0bits.T016BIT=1;
  1499  003E5E  88D5               	bsf	213,4,c	;volatile
  1500                           
  1501                           ;timers.c: 21:     TMR0H=0b00111100;
  1502  003E60  0E3C               	movlw	60
  1503  003E62  6ED4               	movwf	212,c	;volatile
  1504                           
  1505                           ;timers.c: 22:     TMR0L=0b10101111;
  1506  003E64  0EAF               	movlw	175
  1507  003E66  6ED3               	movwf	211,c	;volatile
  1508  003E68                     
  1509                           ;timers.c: 23:     T0CON0bits.T0EN=1;
  1510  003E68  8ED5               	bsf	213,7,c	;volatile
  1511  003E6A  0012               	return		;funcret
  1512  003E6C                     __end_of_timer0_init:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function _returnhome *****************
  1516 ;; Defined at:
  1517 ;;		line 279 in file "DC_motors.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  mL              2   40[BANK0 ] PTR struct .
  1520 ;;		 -> main@motorL(9), 
  1521 ;;  mR              2   42[BANK0 ] PTR struct .
  1522 ;;		 -> main@motorR(9), 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  j               1   47[BANK0 ] unsigned char 
  1525 ;;  i               1   46[BANK0 ] unsigned char 
  1526 ;;  k               1    0        unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1536 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1537 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1538 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1539 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1540 ;;Total ram usage:        8 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; Hardware stack levels required when called: 13
  1543 ;; This function calls:
  1544 ;;		_reverse
  1545 ;;		_reverseinstructions
  1546 ;;		_stop
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text2
  1553  003606                     __ptext2:
  1554                           	callstack 0
  1555  003606                     _returnhome:
  1556                           	callstack 17
  1557  003606                     
  1558                           ;DC_motors.c: 280:     INTCONbits.GIE = 1;
  1559  003606  8EF2               	bsf	242,7,c	;volatile
  1560                           
  1561                           ;DC_motors.c: 282:     unsigned char i=instr_counter;
  1562  003608  C0E1  F08E         	movff	_instr_counter,returnhome@i	;volatile
  1563  00360C                     
  1564                           ;DC_motors.c: 283:     unsigned char j,k;;DC_motors.c: 284:     for (j=0; j<=i; j++) {
  1565  00360C  0E00               	movlw	0
  1566  00360E  0100               	movlb	0	; () banked
  1567  003610  6F8F               	movwf	returnhome@j& (0+255),b
  1568  003612  EF39  F01B         	goto	l5167
  1569  003616                     l5153:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;DC_motors.c: 285:         reverse(mL, mR);
  1573  003616  C088  F022         	movff	returnhome@mL,reverse@mL
  1574  00361A  C089  F023         	movff	returnhome@mL+1,reverse@mL+1
  1575  00361E  C08A  F024         	movff	returnhome@mR,reverse@mR
  1576  003622  C08B  F025         	movff	returnhome@mR+1,reverse@mR+1
  1577  003626  EC05  F01C         	call	_reverse	;wreg free
  1578  00362A                     
  1579                           ;DC_motors.c: 286:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  1580  00362A  0EF4               	movlw	244
  1581  00362C  0100               	movlb	0	; () banked
  1582  00362E  6F8D               	movwf	(??_returnhome+1)& (0+255),b
  1583  003630  0E82               	movlw	130
  1584  003632  6F8C               	movwf	??_returnhome& (0+255),b
  1585  003634  0E05               	movlw	5
  1586  003636                     u6537:
  1587  003636  2EE8               	decfsz	wreg,f,c
  1588  003638  D7FE               	bra	u6537
  1589  00363A  2F8C               	decfsz	??_returnhome& (0+255),f,b
  1590  00363C  D7FC               	bra	u6537
  1591  00363E  2F8D               	decfsz	(??_returnhome+1)& (0+255),f,b
  1592  003640  D7FA               	bra	u6537
  1593  003642                     
  1594                           ;DC_motors.c: 287:         stop(mL, mR);
  1595  003642  C088  F022         	movff	returnhome@mL,stop@mL
  1596  003646  C089  F023         	movff	returnhome@mL+1,stop@mL+1
  1597  00364A  C08A  F024         	movff	returnhome@mR,stop@mR
  1598  00364E  C08B  F025         	movff	returnhome@mR+1,stop@mR+1
  1599  003652  EC93  F01C         	call	_stop	;wreg free
  1600  003656                     
  1601                           ;DC_motors.c: 289:         reverseinstructions(mL, mR);
  1602  003656  C088  F082         	movff	returnhome@mL,reverseinstructions@mL
  1603  00365A  C089  F083         	movff	returnhome@mL+1,reverseinstructions@mL+1
  1604  00365E  C08A  F084         	movff	returnhome@mR,reverseinstructions@mR
  1605  003662  C08B  F085         	movff	returnhome@mR+1,reverseinstructions@mR+1
  1606  003666  ECE8  F011         	call	_reverseinstructions	;wreg free
  1607  00366A                     
  1608                           ;DC_motors.c: 291:         dur_counter--;
  1609  00366A  0100               	movlb	0	; () banked
  1610  00366C  07E0               	decf	_dur_counter& (0+255),f,b	;volatile
  1611  00366E                     
  1612                           ; BSR set to: 0
  1613                           ;DC_motors.c: 292:         instr_counter--;
  1614  00366E  07E1               	decf	_instr_counter& (0+255),f,b	;volatile
  1615  003670                     
  1616                           ; BSR set to: 0
  1617                           ;DC_motors.c: 293:     }
  1618  003670  2B8F               	incf	returnhome@j& (0+255),f,b
  1619  003672                     l5167:
  1620                           
  1621                           ; BSR set to: 0
  1622  003672  518F               	movf	returnhome@j& (0+255),w,b
  1623  003674  5D8E               	subwf	returnhome@i& (0+255),w,b
  1624  003676  B0D8               	btfsc	status,0,c
  1625  003678  EF40  F01B         	goto	u5811
  1626  00367C  EF42  F01B         	goto	u5810
  1627  003680                     u5811:
  1628  003680  EF0B  F01B         	goto	l5153
  1629  003684                     u5810:
  1630  003684                     
  1631                           ; BSR set to: 0
  1632                           ;DC_motors.c: 294:     reverse(mL, mR);
  1633  003684  C088  F022         	movff	returnhome@mL,reverse@mL
  1634  003688  C089  F023         	movff	returnhome@mL+1,reverse@mL+1
  1635  00368C  C08A  F024         	movff	returnhome@mR,reverse@mR
  1636  003690  C08B  F025         	movff	returnhome@mR+1,reverse@mR+1
  1637  003694  EC05  F01C         	call	_reverse	;wreg free
  1638  003698                     
  1639                           ;DC_motors.c: 295:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  1640  003698  0EF4               	movlw	244
  1641  00369A  0100               	movlb	0	; () banked
  1642  00369C  6F8D               	movwf	(??_returnhome+1)& (0+255),b
  1643  00369E  0E82               	movlw	130
  1644  0036A0  6F8C               	movwf	??_returnhome& (0+255),b
  1645  0036A2  0E05               	movlw	5
  1646  0036A4                     u6547:
  1647  0036A4  2EE8               	decfsz	wreg,f,c
  1648  0036A6  D7FE               	bra	u6547
  1649  0036A8  2F8C               	decfsz	??_returnhome& (0+255),f,b
  1650  0036AA  D7FC               	bra	u6547
  1651  0036AC  2F8D               	decfsz	(??_returnhome+1)& (0+255),f,b
  1652  0036AE  D7FA               	bra	u6547
  1653  0036B0                     
  1654                           ;DC_motors.c: 296:     stop(mL, mR);
  1655  0036B0  C088  F022         	movff	returnhome@mL,stop@mL
  1656  0036B4  C089  F023         	movff	returnhome@mL+1,stop@mL+1
  1657  0036B8  C08A  F024         	movff	returnhome@mR,stop@mR
  1658  0036BC  C08B  F025         	movff	returnhome@mR+1,stop@mR+1
  1659  0036C0  EC93  F01C         	call	_stop	;wreg free
  1660  0036C4  0012               	return		;funcret
  1661  0036C6                     __end_of_returnhome:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function _reverseinstructions *****************
  1665 ;; Defined at:
  1666 ;;		line 252 in file "DC_motors.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  mL              2   34[BANK0 ] PTR struct .
  1669 ;;		 -> main@motorL(9), 
  1670 ;;  mR              2   36[BANK0 ] PTR struct .
  1671 ;;		 -> main@motorR(9), 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1683 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1687 ;;Total ram usage:        6 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 12
  1690 ;; This function calls:
  1691 ;;		_forward
  1692 ;;		_instructions
  1693 ;;		_stop
  1694 ;;		_turnleft
  1695 ;;		_turnright
  1696 ;; This function is called by:
  1697 ;;		_returnhome
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text3
  1702  0023D0                     __ptext3:
  1703                           	callstack 0
  1704  0023D0                     _reverseinstructions:
  1705                           	callstack 17
  1706  0023D0                     
  1707                           ;DC_motors.c: 253:     if (instr[instr_counter]==1) {instructions(mL, mR, 2);}
  1708  0023D0  0100               	movlb	0	; () banked
  1709  0023D2  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  1710  0023D4  0D02               	mullw	2
  1711  0023D6  0EB3               	movlw	low _instr
  1712  0023D8  24F3               	addwf	243,w,c
  1713  0023DA  6ED9               	movwf	fsr2l,c
  1714  0023DC  0E00               	movlw	high _instr
  1715  0023DE  20F4               	addwfc	prodh,w,c
  1716  0023E0  6EDA               	movwf	fsr2h,c
  1717  0023E2  04DE               	decf	postinc2,w,c
  1718  0023E4  10DE               	iorwf	postinc2,w,c
  1719  0023E6  A4D8               	btfss	status,2,c
  1720  0023E8  EFF8  F011         	goto	u5531
  1721  0023EC  EFFA  F011         	goto	u5530
  1722  0023F0                     u5531:
  1723  0023F0  EF08  F012         	goto	l5027
  1724  0023F4                     u5530:
  1725  0023F4                     
  1726                           ; BSR set to: 0
  1727  0023F4  C082  F07D         	movff	reverseinstructions@mL,instructions@mL
  1728  0023F8  C083  F07E         	movff	reverseinstructions@mL+1,instructions@mL+1
  1729  0023FC  C084  F07F         	movff	reverseinstructions@mR,instructions@mR
  1730  002400  C085  F080         	movff	reverseinstructions@mR+1,instructions@mR+1
  1731  002404  0E02               	movlw	2
  1732  002406  6F81               	movwf	instructions@num& (0+255),b
  1733  002408  EC7D  F010         	call	_instructions	;wreg free
  1734  00240C  EF34  F013         	goto	l716
  1735  002410                     l5027:
  1736                           
  1737                           ; BSR set to: 0
  1738  002410  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  1739  002412  0D02               	mullw	2
  1740  002414  0EB3               	movlw	low _instr
  1741  002416  24F3               	addwf	243,w,c
  1742  002418  6ED9               	movwf	fsr2l,c
  1743  00241A  0E00               	movlw	high _instr
  1744  00241C  20F4               	addwfc	prodh,w,c
  1745  00241E  6EDA               	movwf	fsr2h,c
  1746  002420  0E02               	movlw	2
  1747  002422  18DE               	xorwf	postinc2,w,c
  1748  002424  10DE               	iorwf	postinc2,w,c
  1749  002426  A4D8               	btfss	status,2,c
  1750  002428  EF18  F012         	goto	u5541
  1751  00242C  EF1A  F012         	goto	u5540
  1752  002430                     u5541:
  1753  002430  EF28  F012         	goto	l5031
  1754  002434                     u5540:
  1755  002434                     
  1756                           ; BSR set to: 0
  1757  002434  C082  F07D         	movff	reverseinstructions@mL,instructions@mL
  1758  002438  C083  F07E         	movff	reverseinstructions@mL+1,instructions@mL+1
  1759  00243C  C084  F07F         	movff	reverseinstructions@mR,instructions@mR
  1760  002440  C085  F080         	movff	reverseinstructions@mR+1,instructions@mR+1
  1761  002444  0E01               	movlw	1
  1762  002446  6F81               	movwf	instructions@num& (0+255),b
  1763  002448  EC7D  F010         	call	_instructions	;wreg free
  1764  00244C  EF34  F013         	goto	l716
  1765  002450                     l5031:
  1766                           
  1767                           ; BSR set to: 0
  1768  002450  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  1769  002452  0D02               	mullw	2
  1770  002454  0EB3               	movlw	low _instr
  1771  002456  24F3               	addwf	243,w,c
  1772  002458  6ED9               	movwf	fsr2l,c
  1773  00245A  0E00               	movlw	high _instr
  1774  00245C  20F4               	addwfc	prodh,w,c
  1775  00245E  6EDA               	movwf	fsr2h,c
  1776  002460  0E03               	movlw	3
  1777  002462  18DE               	xorwf	postinc2,w,c
  1778  002464  10DE               	iorwf	postinc2,w,c
  1779  002466  A4D8               	btfss	status,2,c
  1780  002468  EF38  F012         	goto	u5551
  1781  00246C  EF3A  F012         	goto	u5550
  1782  002470                     u5551:
  1783  002470  EF48  F012         	goto	l5035
  1784  002474                     u5550:
  1785  002474                     
  1786                           ; BSR set to: 0
  1787  002474  C082  F07D         	movff	reverseinstructions@mL,instructions@mL
  1788  002478  C083  F07E         	movff	reverseinstructions@mL+1,instructions@mL+1
  1789  00247C  C084  F07F         	movff	reverseinstructions@mR,instructions@mR
  1790  002480  C085  F080         	movff	reverseinstructions@mR+1,instructions@mR+1
  1791  002484  0E03               	movlw	3
  1792  002486  6F81               	movwf	instructions@num& (0+255),b
  1793  002488  EC7D  F010         	call	_instructions	;wreg free
  1794  00248C  EF34  F013         	goto	l716
  1795  002490                     l5035:
  1796                           
  1797                           ; BSR set to: 0
  1798  002490  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  1799  002492  0D02               	mullw	2
  1800  002494  0EB3               	movlw	low _instr
  1801  002496  24F3               	addwf	243,w,c
  1802  002498  6ED9               	movwf	fsr2l,c
  1803  00249A  0E00               	movlw	high _instr
  1804  00249C  20F4               	addwfc	prodh,w,c
  1805  00249E  6EDA               	movwf	fsr2h,c
  1806  0024A0  0E04               	movlw	4
  1807  0024A2  18DE               	xorwf	postinc2,w,c
  1808  0024A4  10DE               	iorwf	postinc2,w,c
  1809  0024A6  A4D8               	btfss	status,2,c
  1810  0024A8  EF58  F012         	goto	u5561
  1811  0024AC  EF5A  F012         	goto	u5560
  1812  0024B0                     u5561:
  1813  0024B0  EF99  F012         	goto	l5043
  1814  0024B4                     u5560:
  1815  0024B4                     
  1816                           ; BSR set to: 0
  1817                           ;DC_motors.c: 257:         _delay((unsigned long)((2500)*(64000000/4000.0)));
  1818  0024B4  0ECB               	movlw	203
  1819  0024B6  0100               	movlb	0	; () banked
  1820  0024B8  6F87               	movwf	(??_reverseinstructions+1)& (0+255),b
  1821  0024BA  0EEC               	movlw	236
  1822  0024BC  6F86               	movwf	??_reverseinstructions& (0+255),b
  1823  0024BE  0E84               	movlw	132
  1824  0024C0                     u6557:
  1825  0024C0  2EE8               	decfsz	wreg,f,c
  1826  0024C2  D7FE               	bra	u6557
  1827  0024C4  2F86               	decfsz	??_reverseinstructions& (0+255),f,b
  1828  0024C6  D7FC               	bra	u6557
  1829  0024C8  2F87               	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  1830  0024CA  D7FA               	bra	u6557
  1831  0024CC  F000               	nop	
  1832  0024CE                     
  1833                           ;DC_motors.c: 258:         stop(mL, mR);
  1834  0024CE  C082  F022         	movff	reverseinstructions@mL,stop@mL
  1835  0024D2  C083  F023         	movff	reverseinstructions@mL+1,stop@mL+1
  1836  0024D6  C084  F024         	movff	reverseinstructions@mR,stop@mR
  1837  0024DA  C085  F025         	movff	reverseinstructions@mR+1,stop@mR+1
  1838  0024DE  EC93  F01C         	call	_stop	;wreg free
  1839  0024E2                     
  1840                           ;DC_motors.c: 259:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1841  0024E2  0E09               	movlw	9
  1842  0024E4  0100               	movlb	0	; () banked
  1843  0024E6  6F87               	movwf	(??_reverseinstructions+1)& (0+255),b
  1844  0024E8  0E1E               	movlw	30
  1845  0024EA  6F86               	movwf	??_reverseinstructions& (0+255),b
  1846  0024EC  0EE4               	movlw	228
  1847  0024EE                     u6567:
  1848  0024EE  2EE8               	decfsz	wreg,f,c
  1849  0024F0  D7FE               	bra	u6567
  1850  0024F2  2F86               	decfsz	??_reverseinstructions& (0+255),f,b
  1851  0024F4  D7FC               	bra	u6567
  1852  0024F6  2F87               	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  1853  0024F8  D7FA               	bra	u6567
  1854  0024FA  F000               	nop	
  1855                           
  1856                           ;DC_motors.c: 260:         turnleft(mL, mR, 90);
  1857  0024FC  C082  F06D         	movff	reverseinstructions@mL,turnleft@mL
  1858  002500  C083  F06E         	movff	reverseinstructions@mL+1,turnleft@mL+1
  1859  002504  C084  F06F         	movff	reverseinstructions@mR,turnleft@mR
  1860  002508  C085  F070         	movff	reverseinstructions@mR+1,turnleft@mR+1
  1861  00250C  0E00               	movlw	0
  1862  00250E  0100               	movlb	0	; () banked
  1863  002510  6F72               	movwf	(turnleft@deg+1)& (0+255),b
  1864  002512  0E5A               	movlw	90
  1865  002514  6F71               	movwf	turnleft@deg& (0+255),b
  1866  002516  EC74  F015         	call	_turnleft	;wreg free
  1867                           
  1868                           ;DC_motors.c: 261:         stop(mL, mR);
  1869  00251A  C082  F022         	movff	reverseinstructions@mL,stop@mL
  1870  00251E  C083  F023         	movff	reverseinstructions@mL+1,stop@mL+1
  1871  002522  C084  F024         	movff	reverseinstructions@mR,stop@mR
  1872  002526  C085  F025         	movff	reverseinstructions@mR+1,stop@mR+1
  1873  00252A  EC93  F01C         	call	_stop	;wreg free
  1874                           
  1875                           ;DC_motors.c: 262:     }
  1876  00252E  EF34  F013         	goto	l716
  1877  002532                     l5043:
  1878                           
  1879                           ; BSR set to: 0
  1880  002532  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  1881  002534  0D02               	mullw	2
  1882  002536  0EB3               	movlw	low _instr
  1883  002538  24F3               	addwf	243,w,c
  1884  00253A  6ED9               	movwf	fsr2l,c
  1885  00253C  0E00               	movlw	high _instr
  1886  00253E  20F4               	addwfc	prodh,w,c
  1887  002540  6EDA               	movwf	fsr2h,c
  1888  002542  0E05               	movlw	5
  1889  002544  18DE               	xorwf	postinc2,w,c
  1890  002546  10DE               	iorwf	postinc2,w,c
  1891  002548  A4D8               	btfss	status,2,c
  1892  00254A  EFA9  F012         	goto	u5571
  1893  00254E  EFAB  F012         	goto	u5570
  1894  002552                     u5571:
  1895  002552  EFF4  F012         	goto	l5055
  1896  002556                     u5570:
  1897  002556                     
  1898                           ; BSR set to: 0
  1899                           ;DC_motors.c: 264:         forward(mL, mR);
  1900  002556  C082  F022         	movff	reverseinstructions@mL,forward@mL
  1901  00255A  C083  F023         	movff	reverseinstructions@mL+1,forward@mL+1
  1902  00255E  C084  F024         	movff	reverseinstructions@mR,forward@mR
  1903  002562  C085  F025         	movff	reverseinstructions@mR+1,forward@mR+1
  1904  002566  EC4C  F01C         	call	_forward	;wreg free
  1905  00256A                     
  1906                           ;DC_motors.c: 265:         _delay((unsigned long)((2500)*(64000000/4000.0)));
  1907  00256A  0ECB               	movlw	203
  1908  00256C  0100               	movlb	0	; () banked
  1909  00256E  6F87               	movwf	(??_reverseinstructions+1)& (0+255),b
  1910  002570  0EEC               	movlw	236
  1911  002572  6F86               	movwf	??_reverseinstructions& (0+255),b
  1912  002574  0E84               	movlw	132
  1913  002576                     u6577:
  1914  002576  2EE8               	decfsz	wreg,f,c
  1915  002578  D7FE               	bra	u6577
  1916  00257A  2F86               	decfsz	??_reverseinstructions& (0+255),f,b
  1917  00257C  D7FC               	bra	u6577
  1918  00257E  2F87               	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  1919  002580  D7FA               	bra	u6577
  1920  002582  F000               	nop	
  1921  002584                     
  1922                           ;DC_motors.c: 266:         stop(mL, mR);
  1923  002584  C082  F022         	movff	reverseinstructions@mL,stop@mL
  1924  002588  C083  F023         	movff	reverseinstructions@mL+1,stop@mL+1
  1925  00258C  C084  F024         	movff	reverseinstructions@mR,stop@mR
  1926  002590  C085  F025         	movff	reverseinstructions@mR+1,stop@mR+1
  1927  002594  EC93  F01C         	call	_stop	;wreg free
  1928                           
  1929                           ;DC_motors.c: 267:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1930  002598  0E09               	movlw	9
  1931  00259A  0100               	movlb	0	; () banked
  1932  00259C  6F87               	movwf	(??_reverseinstructions+1)& (0+255),b
  1933  00259E  0E1E               	movlw	30
  1934  0025A0  6F86               	movwf	??_reverseinstructions& (0+255),b
  1935  0025A2  0EE4               	movlw	228
  1936  0025A4                     u6587:
  1937  0025A4  2EE8               	decfsz	wreg,f,c
  1938  0025A6  D7FE               	bra	u6587
  1939  0025A8  2F86               	decfsz	??_reverseinstructions& (0+255),f,b
  1940  0025AA  D7FC               	bra	u6587
  1941  0025AC  2F87               	decfsz	(??_reverseinstructions+1)& (0+255),f,b
  1942  0025AE  D7FA               	bra	u6587
  1943  0025B0  F000               	nop	
  1944  0025B2                     
  1945                           ;DC_motors.c: 268:         turnright(mL, mR, 90);
  1946  0025B2  C082  F06D         	movff	reverseinstructions@mL,turnright@mL
  1947  0025B6  C083  F06E         	movff	reverseinstructions@mL+1,turnright@mL+1
  1948  0025BA  C084  F06F         	movff	reverseinstructions@mR,turnright@mR
  1949  0025BE  C085  F070         	movff	reverseinstructions@mR+1,turnright@mR+1
  1950  0025C2  0E00               	movlw	0
  1951  0025C4  0100               	movlb	0	; () banked
  1952  0025C6  6F72               	movwf	(turnright@deg+1)& (0+255),b
  1953  0025C8  0E5A               	movlw	90
  1954  0025CA  6F71               	movwf	turnright@deg& (0+255),b
  1955  0025CC  EC71  F014         	call	_turnright	;wreg free
  1956  0025D0                     
  1957                           ;DC_motors.c: 269:         stop(mL, mR);
  1958  0025D0  C082  F022         	movff	reverseinstructions@mL,stop@mL
  1959  0025D4  C083  F023         	movff	reverseinstructions@mL+1,stop@mL+1
  1960  0025D8  C084  F024         	movff	reverseinstructions@mR,stop@mR
  1961  0025DC  C085  F025         	movff	reverseinstructions@mR+1,stop@mR+1
  1962  0025E0  EC93  F01C         	call	_stop	;wreg free
  1963                           
  1964                           ;DC_motors.c: 270:     }
  1965  0025E4  EF34  F013         	goto	l716
  1966  0025E8                     l5055:
  1967                           
  1968                           ; BSR set to: 0
  1969  0025E8  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  1970  0025EA  0D02               	mullw	2
  1971  0025EC  0EB3               	movlw	low _instr
  1972  0025EE  24F3               	addwf	243,w,c
  1973  0025F0  6ED9               	movwf	fsr2l,c
  1974  0025F2  0E00               	movlw	high _instr
  1975  0025F4  20F4               	addwfc	prodh,w,c
  1976  0025F6  6EDA               	movwf	fsr2h,c
  1977  0025F8  0E06               	movlw	6
  1978  0025FA  18DE               	xorwf	postinc2,w,c
  1979  0025FC  10DE               	iorwf	postinc2,w,c
  1980  0025FE  A4D8               	btfss	status,2,c
  1981  002600  EF04  F013         	goto	u5581
  1982  002604  EF06  F013         	goto	u5580
  1983  002608                     u5581:
  1984  002608  EF14  F013         	goto	l5059
  1985  00260C                     u5580:
  1986  00260C                     
  1987                           ; BSR set to: 0
  1988  00260C  C082  F07D         	movff	reverseinstructions@mL,instructions@mL
  1989  002610  C083  F07E         	movff	reverseinstructions@mL+1,instructions@mL+1
  1990  002614  C084  F07F         	movff	reverseinstructions@mR,instructions@mR
  1991  002618  C085  F080         	movff	reverseinstructions@mR+1,instructions@mR+1
  1992  00261C  0E07               	movlw	7
  1993  00261E  6F81               	movwf	instructions@num& (0+255),b
  1994  002620  EC7D  F010         	call	_instructions	;wreg free
  1995  002624  EF34  F013         	goto	l716
  1996  002628                     l5059:
  1997                           
  1998                           ; BSR set to: 0
  1999  002628  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  2000  00262A  0D02               	mullw	2
  2001  00262C  0EB3               	movlw	low _instr
  2002  00262E  24F3               	addwf	243,w,c
  2003  002630  6ED9               	movwf	fsr2l,c
  2004  002632  0E00               	movlw	high _instr
  2005  002634  20F4               	addwfc	prodh,w,c
  2006  002636  6EDA               	movwf	fsr2h,c
  2007  002638  0E07               	movlw	7
  2008  00263A  18DE               	xorwf	postinc2,w,c
  2009  00263C  10DE               	iorwf	postinc2,w,c
  2010  00263E  A4D8               	btfss	status,2,c
  2011  002640  EF24  F013         	goto	u5591
  2012  002644  EF26  F013         	goto	u5590
  2013  002648                     u5591:
  2014  002648  EF34  F013         	goto	l710
  2015  00264C                     u5590:
  2016  00264C                     
  2017                           ; BSR set to: 0
  2018  00264C  C082  F07D         	movff	reverseinstructions@mL,instructions@mL
  2019  002650  C083  F07E         	movff	reverseinstructions@mL+1,instructions@mL+1
  2020  002654  C084  F07F         	movff	reverseinstructions@mR,instructions@mR
  2021  002658  C085  F080         	movff	reverseinstructions@mR+1,instructions@mR+1
  2022  00265C  0E06               	movlw	6
  2023  00265E  6F81               	movwf	instructions@num& (0+255),b
  2024  002660  EC7D  F010         	call	_instructions	;wreg free
  2025  002664  EF34  F013         	goto	l716
  2026  002668                     l710:
  2027  002668                     l716:
  2028  002668  0012               	return		;funcret
  2029  00266A                     __end_of_reverseinstructions:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _interrupts_init *****************
  2033 ;; Defined at:
  2034 ;;		line 12 in file "interrupts.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 12
  2055 ;; This function calls:
  2056 ;;		_interrupts_clear
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text4
  2063  003DE4                     __ptext4:
  2064                           	callstack 0
  2065  003DE4                     _interrupts_init:
  2066                           	callstack 18
  2067  003DE4                     
  2068                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 1;
  2069  003DE4  8282               	bsf	130,1,c	;volatile
  2070                           
  2071                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  2072  003DE6  010E               	movlb	14	; () banked
  2073  003DE8  939A               	bcf	154,1,b	;volatile
  2074  003DEA                     
  2075                           ; BSR set to: 14
  2076                           ;interrupts.c: 15:     INT1PPS=0x09;
  2077  003DEA  0E09               	movlw	9
  2078  003DEC  010D               	movlb	13	; () banked
  2079  003DEE  6FF1               	movwf	241,b	;volatile
  2080  003DF0                     
  2081                           ; BSR set to: 13
  2082                           ;interrupts.c: 17:     PIE0bits.INT1IE = 1;
  2083  003DF0  010E               	movlb	14	; () banked
  2084  003DF2  8329               	bsf	41,1,b	;volatile
  2085  003DF4                     
  2086                           ; BSR set to: 14
  2087                           ;interrupts.c: 18:     PIE0bits.TMR0IE = 1;
  2088  003DF4  8B29               	bsf	41,5,b	;volatile
  2089  003DF6                     
  2090                           ; BSR set to: 14
  2091                           ;interrupts.c: 20:     IPR0bits.INT1IP = 1;
  2092  003DF6  831F               	bsf	31,1,b	;volatile
  2093  003DF8                     
  2094                           ; BSR set to: 14
  2095                           ;interrupts.c: 21:     IPR0bits.TMR0IP = 0;
  2096  003DF8  9B1F               	bcf	31,5,b	;volatile
  2097  003DFA                     
  2098                           ; BSR set to: 14
  2099                           ;interrupts.c: 23:     interrupts_clear();
  2100  003DFA  EC66  F01F         	call	_interrupts_clear	;wreg free
  2101  003DFE                     
  2102                           ;interrupts.c: 25:     INTCONbits.INT1EDG = 0;
  2103  003DFE  92F2               	bcf	242,1,c	;volatile
  2104  003E00                     
  2105                           ;interrupts.c: 26:     INTCONbits.IPEN = 1;
  2106  003E00  8AF2               	bsf	242,5,c	;volatile
  2107  003E02                     
  2108                           ;interrupts.c: 27:     INTCONbits.PEIE = 1;
  2109  003E02  8CF2               	bsf	242,6,c	;volatile
  2110  003E04                     
  2111                           ;interrupts.c: 28:     INTCONbits.GIE = 1;
  2112  003E04  8EF2               	bsf	242,7,c	;volatile
  2113  003E06  0012               	return		;funcret
  2114  003E08                     __end_of_interrupts_init:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _interrupts_clear *****************
  2118 ;; Defined at:
  2119 ;;		line 35 in file "interrupts.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;Total ram usage:        0 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 11
  2140 ;; This function calls:
  2141 ;;		_I2C_2_Master_Start
  2142 ;;		_I2C_2_Master_Stop
  2143 ;;		_I2C_2_Master_Write
  2144 ;;		_interrupts_colourclick
  2145 ;; This function is called by:
  2146 ;;		_interrupts_init
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text5
  2151  003ECC                     __ptext5:
  2152                           	callstack 0
  2153  003ECC                     _interrupts_clear:
  2154                           	callstack 18
  2155  003ECC                     
  2156                           ;interrupts.c: 36:     I2C_2_Master_Start();
  2157  003ECC  ECC2  F01F         	call	_I2C_2_Master_Start	;wreg free
  2158                           
  2159                           ;interrupts.c: 37:     I2C_2_Master_Write(0x52 | 0x00);
  2160  003ED0  0E52               	movlw	82
  2161  003ED2  ECAB  F01F         	call	_I2C_2_Master_Write
  2162                           
  2163                           ;interrupts.c: 38:     I2C_2_Master_Write(0b11100110);
  2164  003ED6  0EE6               	movlw	230
  2165  003ED8  ECAB  F01F         	call	_I2C_2_Master_Write
  2166                           
  2167                           ;interrupts.c: 39:     I2C_2_Master_Stop();
  2168  003EDC  ECBD  F01F         	call	_I2C_2_Master_Stop	;wreg free
  2169                           
  2170                           ;interrupts.c: 41:     interrupts_colourclick();
  2171  003EE0  ECFE  F01D         	call	_interrupts_colourclick	;wreg free
  2172  003EE4  0012               	return		;funcret
  2173  003EE6                     __end_of_interrupts_clear:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _interrupts_colourclick *****************
  2177 ;; Defined at:
  2178 ;;		line 48 in file "interrupts.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2196 ;;Total ram usage:        1 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 10
  2199 ;; This function calls:
  2200 ;;		_colourclick_writetoaddr
  2201 ;; This function is called by:
  2202 ;;		_interrupts_clear
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text6
  2207  003BFC                     __ptext6:
  2208                           	callstack 0
  2209  003BFC                     _interrupts_colourclick:
  2210                           	callstack 18
  2211  003BFC                     
  2212                           ;interrupts.c: 49:     colourclick_writetoaddr(0x00, 0b10011);
  2213  003BFC  0E13               	movlw	19
  2214  003BFE  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2215  003C00  0E00               	movlw	0
  2216  003C02  EC36  F01F         	call	_colourclick_writetoaddr
  2217  003C06                     
  2218                           ;interrupts.c: 50:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2219  003C06  0E3F               	movlw	63
  2220  003C08  6E0D               	movwf	??_interrupts_colourclick^0,c
  2221  003C0A  0E55               	movlw	85
  2222  003C0C                     u6597:
  2223  003C0C  2EE8               	decfsz	wreg,f,c
  2224  003C0E  D7FE               	bra	u6597
  2225  003C10  2E0D               	decfsz	??_interrupts_colourclick^0,f,c
  2226  003C12  D7FC               	bra	u6597
  2227  003C14  F000               	nop	
  2228  003C16                     
  2229                           ;interrupts.c: 51:     colourclick_writetoaddr(0x0C, 0b0100);
  2230  003C16  0E04               	movlw	4
  2231  003C18  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2232  003C1A  0E0C               	movlw	12
  2233  003C1C  EC36  F01F         	call	_colourclick_writetoaddr
  2234  003C20                     
  2235                           ;interrupts.c: 52:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  2236  003C20  C055  F00B         	movff	_interrupts_lowerbound,colourclick_writetoaddr@value	;volatile
  2237  003C24  0E04               	movlw	4
  2238  003C26  EC36  F01F         	call	_colourclick_writetoaddr
  2239  003C2A                     
  2240                           ;interrupts.c: 53:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  2241  003C2A  5056               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2242  003C2C  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2243  003C2E  0E05               	movlw	5
  2244  003C30  EC36  F01F         	call	_colourclick_writetoaddr
  2245  003C34                     
  2246                           ;interrupts.c: 54:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  2247  003C34  C053  F00B         	movff	_interrupts_upperbound,colourclick_writetoaddr@value	;volatile
  2248  003C38  0E06               	movlw	6
  2249  003C3A  EC36  F01F         	call	_colourclick_writetoaddr
  2250  003C3E                     
  2251                           ;interrupts.c: 55:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  2252  003C3E  5054               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  2253  003C40  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2254  003C42  0E07               	movlw	7
  2255  003C44  EC36  F01F         	call	_colourclick_writetoaddr
  2256  003C48  0012               	return		;funcret
  2257  003C4A                     __end_of_interrupts_colourclick:
  2258                           	callstack 0
  2259                           
  2260 ;; *************** function _colourclick_init *****************
  2261 ;; Defined at:
  2262 ;;		line 12 in file "colour_click.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2279 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2280 ;;Total ram usage:        1 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; Hardware stack levels required when called: 10
  2283 ;; This function calls:
  2284 ;;		_I2C_2_Master_Init
  2285 ;;		_colourclickLEDs_init
  2286 ;;		_colourclick_writetoaddr
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text7
  2293  003CDA                     __ptext7:
  2294                           	callstack 0
  2295  003CDA                     _colourclick_init:
  2296                           	callstack 20
  2297  003CDA                     
  2298                           ;colour_click.c: 14:     I2C_2_Master_Init();
  2299  003CDA  ECA2  F01E         	call	_I2C_2_Master_Init	;wreg free
  2300  003CDE                     
  2301                           ;colour_click.c: 17:   colourclick_writetoaddr(0x00, 0x01);
  2302  003CDE  0E01               	movlw	1
  2303  003CE0  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2304  003CE2  0E00               	movlw	0
  2305  003CE4  EC36  F01F         	call	_colourclick_writetoaddr
  2306  003CE8                     
  2307                           ;colour_click.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2308  003CE8  0E3F               	movlw	63
  2309  003CEA  6E0D               	movwf	??_colourclick_init^0,c
  2310  003CEC  0E55               	movlw	85
  2311  003CEE                     u6607:
  2312  003CEE  2EE8               	decfsz	wreg,f,c
  2313  003CF0  D7FE               	bra	u6607
  2314  003CF2  2E0D               	decfsz	??_colourclick_init^0,f,c
  2315  003CF4  D7FC               	bra	u6607
  2316  003CF6  F000               	nop	
  2317  003CF8                     
  2318                           ;colour_click.c: 21:  colourclick_writetoaddr(0x00, 0x03);
  2319  003CF8  0E03               	movlw	3
  2320  003CFA  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2321  003CFC  0E00               	movlw	0
  2322  003CFE  EC36  F01F         	call	_colourclick_writetoaddr
  2323  003D02                     
  2324                           ;colour_click.c: 24:  colourclick_writetoaddr(0x01, 0xD5);
  2325  003D02  0ED5               	movlw	213
  2326  003D04  6E0B               	movwf	colourclick_writetoaddr@value^0,c
  2327  003D06  0E01               	movlw	1
  2328  003D08  EC36  F01F         	call	_colourclick_writetoaddr
  2329  003D0C                     
  2330                           ;colour_click.c: 26:     colourclickLEDs_init();
  2331  003D0C  ECA4  F01F         	call	_colourclickLEDs_init	;wreg free
  2332  003D10  0012               	return		;funcret
  2333  003D12                     __end_of_colourclick_init:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _colourclick_writetoaddr *****************
  2337 ;; Defined at:
  2338 ;;		line 33 in file "colour_click.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  address         1    wreg     unsigned char 
  2341 ;;  value           1   10[COMRAM] unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  address         1   11[COMRAM] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, status,2, status,0, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2353 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2357 ;;Total ram usage:        2 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; Hardware stack levels required when called: 9
  2360 ;; This function calls:
  2361 ;;		_I2C_2_Master_Start
  2362 ;;		_I2C_2_Master_Stop
  2363 ;;		_I2C_2_Master_Write
  2364 ;; This function is called by:
  2365 ;;		_interrupts_colourclick
  2366 ;;		_colourclick_init
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text8
  2371  003E6C                     __ptext8:
  2372                           	callstack 0
  2373  003E6C                     _colourclick_writetoaddr:
  2374                           	callstack 18
  2375                           
  2376                           ;incstack = 0
  2377                           ;colourclick_writetoaddr@address stored from wreg
  2378  003E6C  6E0C               	movwf	colourclick_writetoaddr@address^0,c
  2379  003E6E                     
  2380                           ;colour_click.c: 34:     I2C_2_Master_Start();
  2381  003E6E  ECC2  F01F         	call	_I2C_2_Master_Start	;wreg free
  2382                           
  2383                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  2384  003E72  0E52               	movlw	82
  2385  003E74  ECAB  F01F         	call	_I2C_2_Master_Write
  2386                           
  2387                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  2388  003E78  500C               	movf	colourclick_writetoaddr@address^0,w,c
  2389  003E7A  0980               	iorlw	128
  2390  003E7C  ECAB  F01F         	call	_I2C_2_Master_Write
  2391                           
  2392                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  2393  003E80  500B               	movf	colourclick_writetoaddr@value^0,w,c
  2394  003E82  ECAB  F01F         	call	_I2C_2_Master_Write
  2395                           
  2396                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  2397  003E86  ECBD  F01F         	call	_I2C_2_Master_Stop	;wreg free
  2398  003E8A  0012               	return		;funcret
  2399  003E8C                     __end_of_colourclick_writetoaddr:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _colourclickLEDs_init *****************
  2403 ;; Defined at:
  2404 ;;		line 32 in file "buttons_n_LEDs.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;Total ram usage:        0 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 8
  2425 ;; This function calls:
  2426 ;;		_colourclickLEDs_C
  2427 ;; This function is called by:
  2428 ;;		_colourclick_init
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text9
  2433  003F48                     __ptext9:
  2434                           	callstack 0
  2435  003F48                     _colourclickLEDs_init:
  2436                           	callstack 21
  2437  003F48                     
  2438                           ;buttons_n_LEDs.c: 33:     colourclickLEDs_C(0);
  2439  003F48  0E00               	movlw	0
  2440  003F4A  EC04  F01F         	call	_colourclickLEDs_C
  2441  003F4E                     
  2442                           ;buttons_n_LEDs.c: 35:     TRISGbits.TRISG1 = 0;
  2443  003F4E  9287               	bcf	135,1,c	;volatile
  2444  003F50                     
  2445                           ;buttons_n_LEDs.c: 36:     TRISAbits.TRISA4 = 0;
  2446  003F50  9881               	bcf	129,4,c	;volatile
  2447  003F52                     
  2448                           ;buttons_n_LEDs.c: 37:     TRISFbits.TRISF7 = 0;
  2449  003F52  9E86               	bcf	134,7,c	;volatile
  2450  003F54  0012               	return		;funcret
  2451  003F56                     __end_of_colourclickLEDs_init:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function _I2C_2_Master_Init *****************
  2455 ;; Defined at:
  2456 ;;		line 8 in file "I2C.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 7
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_colourclick_init
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text10
  2485  003D44                     __ptext10:
  2486                           	callstack 0
  2487  003D44                     _I2C_2_Master_Init:
  2488                           	callstack 22
  2489  003D44                     
  2490                           ;I2C.c: 10:   SSP2CON1bits.SSPM= 0b1000;
  2491  003D44  010E               	movlb	14	; () banked
  2492  003D46  51D9               	movf	217,w,b	;volatile
  2493  003D48  0BF0               	andlw	-16
  2494  003D4A  0908               	iorlw	8
  2495  003D4C  6FD9               	movwf	217,b	;volatile
  2496  003D4E                     
  2497                           ; BSR set to: 14
  2498                           ;I2C.c: 11:   SSP2CON1bits.SSPEN = 1;
  2499  003D4E  8BD9               	bsf	217,5,b	;volatile
  2500                           
  2501                           ;I2C.c: 12:   SSP2ADD = (64000000/(4*100000))-1;
  2502  003D50  0E9F               	movlw	159
  2503  003D52  6FD6               	movwf	214,b	;volatile
  2504  003D54                     
  2505                           ; BSR set to: 14
  2506                           ;I2C.c: 15:   TRISDbits.TRISD5 = 1;
  2507  003D54  8A84               	bsf	132,5,c	;volatile
  2508  003D56                     
  2509                           ; BSR set to: 14
  2510                           ;I2C.c: 16:   TRISDbits.TRISD6 = 1;
  2511  003D56  8C84               	bsf	132,6,c	;volatile
  2512  003D58                     
  2513                           ; BSR set to: 14
  2514                           ;I2C.c: 17:   ANSELDbits.ANSELD5=0;
  2515  003D58  9BA7               	bcf	167,5,b	;volatile
  2516  003D5A                     
  2517                           ; BSR set to: 14
  2518                           ;I2C.c: 18:   ANSELDbits.ANSELD6=0;
  2519  003D5A  9DA7               	bcf	167,6,b	;volatile
  2520                           
  2521                           ;I2C.c: 19:   SSP2DATPPS=0x1D;
  2522  003D5C  0E1D               	movlw	29
  2523  003D5E  6F1D               	movwf	29,b	;volatile
  2524                           
  2525                           ;I2C.c: 20:   SSP2CLKPPS=0x1E;
  2526  003D60  0E1E               	movlw	30
  2527  003D62  6F1C               	movwf	28,b	;volatile
  2528                           
  2529                           ;I2C.c: 21:   RD5PPS=0x1C;
  2530  003D64  0E1C               	movlw	28
  2531  003D66  6F6F               	movwf	111,b	;volatile
  2532                           
  2533                           ;I2C.c: 22:   RD6PPS=0x1B;
  2534  003D68  0E1B               	movlw	27
  2535  003D6A  6F70               	movwf	112,b	;volatile
  2536  003D6C                     
  2537                           ; BSR set to: 14
  2538  003D6C  0012               	return		;funcret
  2539  003D6E                     __end_of_I2C_2_Master_Init:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _colourclick_calibration *****************
  2543 ;; Defined at:
  2544 ;;		line 161 in file "colour_click.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  initial         8   23[COMRAM] struct .
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2561 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;Total ram usage:       10 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 11
  2565 ;; This function calls:
  2566 ;;		_colourclickLEDs_C
  2567 ;;		_colourclick_readRGBC
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text11
  2574  0036C6                     __ptext11:
  2575                           	callstack 0
  2576  0036C6                     _colourclick_calibration:
  2577                           	callstack 19
  2578  0036C6                     l376:
  2579  0036C6  A48E               	btfss	142,2,c	;volatile
  2580  0036C8  EF68  F01B         	goto	u4401
  2581  0036CC  EF6A  F01B         	goto	u4400
  2582  0036D0                     u4401:
  2583  0036D0  EF71  F01B         	goto	l380
  2584  0036D4                     u4400:
  2585  0036D4  B68E               	btfsc	142,3,c	;volatile
  2586  0036D6  EF6F  F01B         	goto	u4411
  2587  0036DA  EF71  F01B         	goto	u4410
  2588  0036DE                     u4411:
  2589  0036DE  EF63  F01B         	goto	l376
  2590  0036E2                     u4410:
  2591  0036E2                     l380:
  2592                           
  2593                           ;colour_click.c: 164:     if (!PORTFbits.RF2) {LATDbits.LATD7=1;}
  2594  0036E2  B48E               	btfsc	142,2,c	;volatile
  2595  0036E4  EF76  F01B         	goto	u4421
  2596  0036E8  EF78  F01B         	goto	u4420
  2597  0036EC                     u4421:
  2598  0036EC  EF79  F01B         	goto	l381
  2599  0036F0                     u4420:
  2600  0036F0  8E7C               	bsf	124,7,c	;volatile
  2601  0036F2                     l381:
  2602                           
  2603                           ;colour_click.c: 165:     if (!PORTFbits.RF3) {LATHbits.LATH3=1;}
  2604  0036F2  B68E               	btfsc	142,3,c	;volatile
  2605  0036F4  EF7E  F01B         	goto	u4431
  2606  0036F8  EF80  F01B         	goto	u4430
  2607  0036FC                     u4431:
  2608  0036FC  EF81  F01B         	goto	l382
  2609  003700                     u4430:
  2610  003700  8680               	bsf	128,3,c	;volatile
  2611  003702                     l382:
  2612                           
  2613                           ;colour_click.c: 166:     LATDbits.LATD3 = 1;
  2614  003702  867C               	bsf	124,3,c	;volatile
  2615  003704                     
  2616                           ;colour_click.c: 167:     colourclickLEDs_C(1);
  2617  003704  0E01               	movlw	1
  2618  003706  EC04  F01F         	call	_colourclickLEDs_C
  2619  00370A                     
  2620                           ;colour_click.c: 168:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2621  00370A  0E52               	movlw	82
  2622  00370C  6E17               	movwf	(??_colourclick_calibration+1)^0,c
  2623  00370E  0E2B               	movlw	43
  2624  003710  6E16               	movwf	??_colourclick_calibration^0,c
  2625  003712  0E00               	movlw	0
  2626  003714                     u6617:
  2627  003714  2EE8               	decfsz	wreg,f,c
  2628  003716  D7FE               	bra	u6617
  2629  003718  2E16               	decfsz	??_colourclick_calibration^0,f,c
  2630  00371A  D7FC               	bra	u6617
  2631  00371C  2E17               	decfsz	(??_colourclick_calibration+1)^0,f,c
  2632  00371E  D7FA               	bra	u6617
  2633  003720  D000               	nop2	
  2634  003722                     
  2635                           ;colour_click.c: 170:     colourclick_readRGBC(&initial);
  2636  003722  0E18               	movlw	low colourclick_calibration@initial
  2637  003724  6E14               	movwf	colourclick_readRGBC@tmpval^0,c
  2638  003726  0E00               	movlw	high colourclick_calibration@initial
  2639  003728  6E15               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2640  00372A  EC07  F01D         	call	_colourclick_readRGBC	;wreg free
  2641  00372E                     
  2642                           ;colour_click.c: 172:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2643  00372E  0E52               	movlw	82
  2644  003730  6E17               	movwf	(??_colourclick_calibration+1)^0,c
  2645  003732  0E2B               	movlw	43
  2646  003734  6E16               	movwf	??_colourclick_calibration^0,c
  2647  003736  0E00               	movlw	0
  2648  003738                     u6627:
  2649  003738  2EE8               	decfsz	wreg,f,c
  2650  00373A  D7FE               	bra	u6627
  2651  00373C  2E16               	decfsz	??_colourclick_calibration^0,f,c
  2652  00373E  D7FC               	bra	u6627
  2653  003740  2E17               	decfsz	(??_colourclick_calibration+1)^0,f,c
  2654  003742  D7FA               	bra	u6627
  2655  003744  D000               	nop2	
  2656  003746                     
  2657                           ;colour_click.c: 173:     LATDbits.LATD3 = 0;
  2658  003746  967C               	bcf	124,3,c	;volatile
  2659  003748                     
  2660                           ;colour_click.c: 174:     colourclickLEDs_C(0);
  2661  003748  0E00               	movlw	0
  2662  00374A  EC04  F01F         	call	_colourclickLEDs_C
  2663  00374E                     
  2664                           ;colour_click.c: 175:     LATDbits.LATD7 = 0;
  2665  00374E  9E7C               	bcf	124,7,c	;volatile
  2666  003750                     
  2667                           ;colour_click.c: 176:     LATHbits.LATH3 = 0;
  2668  003750  9680               	bcf	128,3,c	;volatile
  2669  003752                     
  2670                           ;colour_click.c: 178:     interrupts_lowerbound = initial.C - 150;
  2671  003752  0E6A               	movlw	106
  2672  003754  241E               	addwf	(colourclick_calibration@initial+6)^0,w,c
  2673  003756  6E55               	movwf	_interrupts_lowerbound^0,c	;volatile
  2674  003758  0EFF               	movlw	255
  2675  00375A  201F               	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2676  00375C  6E56               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  2677  00375E                     
  2678                           ;colour_click.c: 179:     interrupts_upperbound = initial.C + 100;
  2679  00375E  0E64               	movlw	100
  2680  003760  241E               	addwf	(colourclick_calibration@initial+6)^0,w,c
  2681  003762  6E53               	movwf	_interrupts_upperbound^0,c	;volatile
  2682  003764  0E00               	movlw	0
  2683  003766  201F               	addwfc	(colourclick_calibration@initial+7)^0,w,c
  2684  003768  6E54               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  2685  00376A  0012               	return		;funcret
  2686  00376C                     __end_of_colourclick_calibration:
  2687                           	callstack 0
  2688                           
  2689 ;; *************** function _colourcards_readRGBC *****************
  2690 ;; Defined at:
  2691 ;;		line 13 in file "colour_cards.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  abs             2   34[BANK0 ] PTR struct .
  2694 ;;		 -> main@current(8), 
  2695 ;;  mL              2   36[BANK0 ] PTR struct .
  2696 ;;		 -> main@motorL(9), 
  2697 ;;  mR              2   38[BANK0 ] PTR struct .
  2698 ;;		 -> main@motorR(9), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  rel            12   42[BANK0 ] struct .
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2710 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2712 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2713 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2714 ;;Total ram usage:       20 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 12
  2717 ;; This function calls:
  2718 ;;		___flge
  2719 ;;		_colourcards_normaliseRGBC
  2720 ;;		_colourclick_readRGBC
  2721 ;;		_colourclick_readRGBC2
  2722 ;;		_forward
  2723 ;;		_instructions
  2724 ;;		_stop
  2725 ;; This function is called by:
  2726 ;;		_main
  2727 ;;		_colourcards_testingRGBC
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text12
  2732  000EA4                     __ptext12:
  2733                           	callstack 0
  2734  000EA4                     _colourcards_readRGBC:
  2735                           	callstack 18
  2736  000EA4                     
  2737                           ;colour_cards.c: 14:     PIE0bits.INT1IE = 0;
  2738  000EA4  010E               	movlb	14	; () banked
  2739  000EA6  9329               	bcf	41,1,b	;volatile
  2740  000EA8                     
  2741                           ; BSR set to: 14
  2742                           ;colour_cards.c: 16:     RGB_rel rel;;colour_cards.c: 17:     colourclick_readRGBC(abs);
  2743  000EA8  C082  F014         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  2744  000EAC  C083  F015         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  2745  000EB0  EC07  F01D         	call	_colourclick_readRGBC	;wreg free
  2746                           
  2747                           ;colour_cards.c: 18:     colourcards_normaliseRGBC(abs, &rel);
  2748  000EB4  C082  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2749  000EB8  C083  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2750  000EBC  0E8A               	movlw	low colourcards_readRGBC@rel
  2751  000EBE  0100               	movlb	0	; () banked
  2752  000EC0  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2753  000EC2  0E00               	movlw	high colourcards_readRGBC@rel
  2754  000EC4  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2755  000EC6  EC3B  F018         	call	_colourcards_normaliseRGBC	;wreg free
  2756  000ECA                     
  2757                           ;colour_cards.c: 21:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  2758  000ECA  0E71               	movlw	113
  2759  000ECC  6E17               	movwf	___flge@ff1^0,c
  2760  000ECE  0E3D               	movlw	61
  2761  000ED0  6E18               	movwf	(___flge@ff1+1)^0,c
  2762  000ED2  0E0A               	movlw	10
  2763  000ED4  6E19               	movwf	(___flge@ff1+2)^0,c
  2764  000ED6  0E3F               	movlw	63
  2765  000ED8  6E1A               	movwf	(___flge@ff1+3)^0,c
  2766  000EDA  C08A  F01B         	movff	colourcards_readRGBC@rel,___flge@ff2
  2767  000EDE  C08B  F01C         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  2768  000EE2  C08C  F01D         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  2769  000EE6  C08D  F01E         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  2770  000EEA  ECA4  F019         	call	___flge	;wreg free
  2771  000EEE  B0D8               	btfsc	status,0,c
  2772  000EF0  EF7C  F007         	goto	u5601
  2773  000EF4  EF7E  F007         	goto	u5600
  2774  000EF8                     u5601:
  2775  000EF8  EFFA  F007         	goto	l5081
  2776  000EFC                     u5600:
  2777  000EFC  C08E  F017         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2778  000F00  C08F  F018         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2779  000F04  C090  F019         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2780  000F08  C091  F01A         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2781  000F0C  0E48               	movlw	72
  2782  000F0E  6E1B               	movwf	___flge@ff2^0,c
  2783  000F10  0EE1               	movlw	225
  2784  000F12  6E1C               	movwf	(___flge@ff2+1)^0,c
  2785  000F14  0E7A               	movlw	122
  2786  000F16  6E1D               	movwf	(___flge@ff2+2)^0,c
  2787  000F18  0E3E               	movlw	62
  2788  000F1A  6E1E               	movwf	(___flge@ff2+3)^0,c
  2789  000F1C  ECA4  F019         	call	___flge	;wreg free
  2790  000F20  B0D8               	btfsc	status,0,c
  2791  000F22  EF95  F007         	goto	u5611
  2792  000F26  EF97  F007         	goto	u5610
  2793  000F2A                     u5611:
  2794  000F2A  EFFA  F007         	goto	l5081
  2795  000F2E                     u5610:
  2796  000F2E  C092  F017         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2797  000F32  C093  F018         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2798  000F36  C094  F019         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2799  000F3A  C095  F01A         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2800  000F3E  0EEC               	movlw	236
  2801  000F40  6E1B               	movwf	___flge@ff2^0,c
  2802  000F42  0E51               	movlw	81
  2803  000F44  6E1C               	movwf	(___flge@ff2+1)^0,c
  2804  000F46  0E38               	movlw	56
  2805  000F48  6E1D               	movwf	(___flge@ff2+2)^0,c
  2806  000F4A  0E3E               	movlw	62
  2807  000F4C  6E1E               	movwf	(___flge@ff2+3)^0,c
  2808  000F4E  ECA4  F019         	call	___flge	;wreg free
  2809  000F52  B0D8               	btfsc	status,0,c
  2810  000F54  EFAE  F007         	goto	u5621
  2811  000F58  EFB0  F007         	goto	u5620
  2812  000F5C                     u5621:
  2813  000F5C  EFFA  F007         	goto	l5081
  2814  000F60                     u5620:
  2815  000F60                     
  2816                           ;colour_cards.c: 22:         colourclick_readRGBC2(abs, 3);
  2817  000F60  C082  F016         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2818  000F64  C083  F017         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2819  000F68  0E03               	movlw	3
  2820  000F6A  6E18               	movwf	colourclick_readRGBC2@mode^0,c
  2821  000F6C  ECF9  F018         	call	_colourclick_readRGBC2	;wreg free
  2822                           
  2823                           ;colour_cards.c: 23:         colourcards_normaliseRGBC(abs, &rel);
  2824  000F70  C082  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2825  000F74  C083  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2826  000F78  0E8A               	movlw	low colourcards_readRGBC@rel
  2827  000F7A  0100               	movlb	0	; () banked
  2828  000F7C  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2829  000F7E  0E00               	movlw	high colourcards_readRGBC@rel
  2830  000F80  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2831  000F82  EC3B  F018         	call	_colourcards_normaliseRGBC	;wreg free
  2832  000F86                     
  2833                           ;colour_cards.c: 24:         if (rel.G<0.185) {
  2834  000F86  C08E  F017         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  2835  000F8A  C08F  F018         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  2836  000F8E  C090  F019         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  2837  000F92  C091  F01A         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  2838  000F96  0EA4               	movlw	164
  2839  000F98  6E1B               	movwf	___flge@ff2^0,c
  2840  000F9A  0E70               	movlw	112
  2841  000F9C  6E1C               	movwf	(___flge@ff2+1)^0,c
  2842  000F9E  0E3D               	movlw	61
  2843  000FA0  6E1D               	movwf	(___flge@ff2+2)^0,c
  2844  000FA2  0E3E               	movlw	62
  2845  000FA4  6E1E               	movwf	(___flge@ff2+3)^0,c
  2846  000FA6  ECA4  F019         	call	___flge	;wreg free
  2847  000FAA  B0D8               	btfsc	status,0,c
  2848  000FAC  EFDA  F007         	goto	u5631
  2849  000FB0  EFDC  F007         	goto	u5630
  2850  000FB4                     u5631:
  2851  000FB4  EFEB  F007         	goto	l5079
  2852  000FB8                     u5630:
  2853  000FB8                     
  2854                           ;colour_cards.c: 26:             instructions(mL, mR, 1);
  2855  000FB8  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  2856  000FBC  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  2857  000FC0  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  2858  000FC4  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  2859  000FC8  0E01               	movlw	1
  2860  000FCA  0100               	movlb	0	; () banked
  2861  000FCC  6F81               	movwf	instructions@num& (0+255),b
  2862  000FCE  EC7D  F010         	call	_instructions	;wreg free
  2863                           
  2864                           ;colour_cards.c: 27:         } else {
  2865  000FD2  EF37  F00A         	goto	l5147
  2866  000FD6                     l5079:
  2867                           
  2868                           ;colour_cards.c: 29:             instructions(mL, mR, 6);
  2869  000FD6  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  2870  000FDA  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  2871  000FDE  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  2872  000FE2  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  2873  000FE6  0E06               	movlw	6
  2874  000FE8  0100               	movlb	0	; () banked
  2875  000FEA  6F81               	movwf	instructions@num& (0+255),b
  2876  000FEC  EC7D  F010         	call	_instructions	;wreg free
  2877  000FF0  EF37  F00A         	goto	l5147
  2878  000FF4                     l5081:
  2879  000FF4  C08A  F017         	movff	colourcards_readRGBC@rel,___flge@ff1
  2880  000FF8  C08B  F018         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  2881  000FFC  C08C  F019         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  2882  001000  C08D  F01A         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  2883  001004  0EAE               	movlw	174
  2884  001006  6E1B               	movwf	___flge@ff2^0,c
  2885  001008  0E47               	movlw	71
  2886  00100A  6E1C               	movwf	(___flge@ff2+1)^0,c
  2887  00100C  0EE1               	movlw	225
  2888  00100E  6E1D               	movwf	(___flge@ff2+2)^0,c
  2889  001010  0E3E               	movlw	62
  2890  001012  6E1E               	movwf	(___flge@ff2+3)^0,c
  2891  001014  ECA4  F019         	call	___flge	;wreg free
  2892  001018  B0D8               	btfsc	status,0,c
  2893  00101A  EF11  F008         	goto	u5641
  2894  00101E  EF13  F008         	goto	u5640
  2895  001022                     u5641:
  2896  001022  EFCA  F008         	goto	l5101
  2897  001026                     u5640:
  2898  001026  0E9A               	movlw	154
  2899  001028  6E17               	movwf	___flge@ff1^0,c
  2900  00102A  0E99               	movlw	153
  2901  00102C  6E18               	movwf	(___flge@ff1+1)^0,c
  2902  00102E  0E99               	movlw	153
  2903  001030  6E19               	movwf	(___flge@ff1+2)^0,c
  2904  001032  0E3E               	movlw	62
  2905  001034  6E1A               	movwf	(___flge@ff1+3)^0,c
  2906  001036  C08E  F01B         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  2907  00103A  C08F  F01C         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  2908  00103E  C090  F01D         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  2909  001042  C091  F01E         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  2910  001046  ECA4  F019         	call	___flge	;wreg free
  2911  00104A  B0D8               	btfsc	status,0,c
  2912  00104C  EF2A  F008         	goto	u5651
  2913  001050  EF2C  F008         	goto	u5650
  2914  001054                     u5651:
  2915  001054  EFCA  F008         	goto	l5101
  2916  001058                     u5650:
  2917  001058  0E14               	movlw	20
  2918  00105A  6E17               	movwf	___flge@ff1^0,c
  2919  00105C  0EAE               	movlw	174
  2920  00105E  6E18               	movwf	(___flge@ff1+1)^0,c
  2921  001060  0E47               	movlw	71
  2922  001062  6E19               	movwf	(___flge@ff1+2)^0,c
  2923  001064  0E3E               	movlw	62
  2924  001066  6E1A               	movwf	(___flge@ff1+3)^0,c
  2925  001068  C092  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  2926  00106C  C093  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  2927  001070  C094  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  2928  001074  C095  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  2929  001078  ECA4  F019         	call	___flge	;wreg free
  2930  00107C  B0D8               	btfsc	status,0,c
  2931  00107E  EF43  F008         	goto	u5661
  2932  001082  EF45  F008         	goto	u5660
  2933  001086                     u5661:
  2934  001086  EFCA  F008         	goto	l5101
  2935  00108A                     u5660:
  2936  00108A                     
  2937                           ;colour_cards.c: 34:         colourclick_readRGBC2(abs, 1);
  2938  00108A  C082  F016         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2939  00108E  C083  F017         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2940  001092  0E01               	movlw	1
  2941  001094  6E18               	movwf	colourclick_readRGBC2@mode^0,c
  2942  001096  ECF9  F018         	call	_colourclick_readRGBC2	;wreg free
  2943                           
  2944                           ;colour_cards.c: 35:         colourcards_normaliseRGBC(abs, &rel);
  2945  00109A  C082  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2946  00109E  C083  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2947  0010A2  0E8A               	movlw	low colourcards_readRGBC@rel
  2948  0010A4  0100               	movlb	0	; () banked
  2949  0010A6  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  2950  0010A8  0E00               	movlw	high colourcards_readRGBC@rel
  2951  0010AA  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  2952  0010AC  EC3B  F018         	call	_colourcards_normaliseRGBC	;wreg free
  2953  0010B0                     
  2954                           ;colour_cards.c: 36:         if (rel.B<0.125) {
  2955  0010B0  C092  F017         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  2956  0010B4  C093  F018         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  2957  0010B8  C094  F019         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  2958  0010BC  C095  F01A         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  2959  0010C0  0E00               	movlw	0
  2960  0010C2  6E1B               	movwf	___flge@ff2^0,c
  2961  0010C4  0E00               	movlw	0
  2962  0010C6  6E1C               	movwf	(___flge@ff2+1)^0,c
  2963  0010C8  0E00               	movlw	0
  2964  0010CA  6E1D               	movwf	(___flge@ff2+2)^0,c
  2965  0010CC  0E3E               	movlw	62
  2966  0010CE  6E1E               	movwf	(___flge@ff2+3)^0,c
  2967  0010D0  ECA4  F019         	call	___flge	;wreg free
  2968  0010D4  B0D8               	btfsc	status,0,c
  2969  0010D6  EF6F  F008         	goto	u5671
  2970  0010DA  EF71  F008         	goto	u5670
  2971  0010DE                     u5671:
  2972  0010DE  EF80  F008         	goto	l5093
  2973  0010E2                     u5670:
  2974  0010E2                     
  2975                           ;colour_cards.c: 38:             instructions(mL, mR, 2);
  2976  0010E2  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  2977  0010E6  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  2978  0010EA  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  2979  0010EE  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  2980  0010F2  0E02               	movlw	2
  2981  0010F4  0100               	movlb	0	; () banked
  2982  0010F6  6F81               	movwf	instructions@num& (0+255),b
  2983  0010F8  EC7D  F010         	call	_instructions	;wreg free
  2984                           
  2985                           ;colour_cards.c: 39:         } else {
  2986  0010FC  EF37  F00A         	goto	l5147
  2987  001100                     l5093:
  2988                           
  2989                           ;colour_cards.c: 40:             colourclick_readRGBC2(abs, 2);
  2990  001100  C082  F016         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  2991  001104  C083  F017         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  2992  001108  0E02               	movlw	2
  2993  00110A  6E18               	movwf	colourclick_readRGBC2@mode^0,c
  2994  00110C  ECF9  F018         	call	_colourclick_readRGBC2	;wreg free
  2995                           
  2996                           ;colour_cards.c: 41:             colourcards_normaliseRGBC(abs, &rel);
  2997  001110  C082  F06D         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  2998  001114  C083  F06E         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  2999  001118  0E8A               	movlw	low colourcards_readRGBC@rel
  3000  00111A  0100               	movlb	0	; () banked
  3001  00111C  6F6F               	movwf	colourcards_normaliseRGBC@rel& (0+255),b
  3002  00111E  0E00               	movlw	high colourcards_readRGBC@rel
  3003  001120  6F70               	movwf	(colourcards_normaliseRGBC@rel+1)& (0+255),b
  3004  001122  EC3B  F018         	call	_colourcards_normaliseRGBC	;wreg free
  3005  001126                     
  3006                           ;colour_cards.c: 42:             if (rel.R<0.115) {
  3007  001126  C08A  F017         	movff	colourcards_readRGBC@rel,___flge@ff1
  3008  00112A  C08B  F018         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  3009  00112E  C08C  F019         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  3010  001132  C08D  F01A         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  3011  001136  0E1F               	movlw	31
  3012  001138  6E1B               	movwf	___flge@ff2^0,c
  3013  00113A  0E85               	movlw	133
  3014  00113C  6E1C               	movwf	(___flge@ff2+1)^0,c
  3015  00113E  0EEB               	movlw	235
  3016  001140  6E1D               	movwf	(___flge@ff2+2)^0,c
  3017  001142  0E3D               	movlw	61
  3018  001144  6E1E               	movwf	(___flge@ff2+3)^0,c
  3019  001146  ECA4  F019         	call	___flge	;wreg free
  3020  00114A  B0D8               	btfsc	status,0,c
  3021  00114C  EFAA  F008         	goto	u5681
  3022  001150  EFAC  F008         	goto	u5680
  3023  001154                     u5681:
  3024  001154  EFBB  F008         	goto	l5099
  3025  001158                     u5680:
  3026  001158                     
  3027                           ;colour_cards.c: 44:                 instructions(mL, mR, 3);
  3028  001158  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  3029  00115C  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3030  001160  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  3031  001164  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3032  001168  0E03               	movlw	3
  3033  00116A  0100               	movlb	0	; () banked
  3034  00116C  6F81               	movwf	instructions@num& (0+255),b
  3035  00116E  EC7D  F010         	call	_instructions	;wreg free
  3036                           
  3037                           ;colour_cards.c: 45:             } else {
  3038  001172  EF37  F00A         	goto	l5147
  3039  001176                     l5099:
  3040                           
  3041                           ;colour_cards.c: 47:                 instructions(mL, mR, 7);
  3042  001176  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  3043  00117A  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3044  00117E  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  3045  001182  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3046  001186  0E07               	movlw	7
  3047  001188  0100               	movlb	0	; () banked
  3048  00118A  6F81               	movwf	instructions@num& (0+255),b
  3049  00118C  EC7D  F010         	call	_instructions	;wreg free
  3050  001190  EF37  F00A         	goto	l5147
  3051  001194                     l5101:
  3052  001194  0E48               	movlw	72
  3053  001196  6E17               	movwf	___flge@ff1^0,c
  3054  001198  0EE1               	movlw	225
  3055  00119A  6E18               	movwf	(___flge@ff1+1)^0,c
  3056  00119C  0EFA               	movlw	250
  3057  00119E  6E19               	movwf	(___flge@ff1+2)^0,c
  3058  0011A0  0E3E               	movlw	62
  3059  0011A2  6E1A               	movwf	(___flge@ff1+3)^0,c
  3060  0011A4  C08A  F01B         	movff	colourcards_readRGBC@rel,___flge@ff2
  3061  0011A8  C08B  F01C         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  3062  0011AC  C08C  F01D         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  3063  0011B0  C08D  F01E         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  3064  0011B4  ECA4  F019         	call	___flge	;wreg free
  3065  0011B8  B0D8               	btfsc	status,0,c
  3066  0011BA  EFE1  F008         	goto	u5691
  3067  0011BE  EFE3  F008         	goto	u5690
  3068  0011C2                     u5691:
  3069  0011C2  EF24  F009         	goto	l5109
  3070  0011C6                     u5690:
  3071  0011C6  0E85               	movlw	133
  3072  0011C8  6E17               	movwf	___flge@ff1^0,c
  3073  0011CA  0EEB               	movlw	235
  3074  0011CC  6E18               	movwf	(___flge@ff1+1)^0,c
  3075  0011CE  0E91               	movlw	145
  3076  0011D0  6E19               	movwf	(___flge@ff1+2)^0,c
  3077  0011D2  0E3E               	movlw	62
  3078  0011D4  6E1A               	movwf	(___flge@ff1+3)^0,c
  3079  0011D6  C08E  F01B         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  3080  0011DA  C08F  F01C         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  3081  0011DE  C090  F01D         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  3082  0011E2  C091  F01E         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  3083  0011E6  ECA4  F019         	call	___flge	;wreg free
  3084  0011EA  B0D8               	btfsc	status,0,c
  3085  0011EC  EFFA  F008         	goto	u5701
  3086  0011F0  EFFC  F008         	goto	u5700
  3087  0011F4                     u5701:
  3088  0011F4  EF24  F009         	goto	l5109
  3089  0011F8                     u5700:
  3090  0011F8  0EEC               	movlw	236
  3091  0011FA  6E17               	movwf	___flge@ff1^0,c
  3092  0011FC  0E51               	movlw	81
  3093  0011FE  6E18               	movwf	(___flge@ff1+1)^0,c
  3094  001200  0E38               	movlw	56
  3095  001202  6E19               	movwf	(___flge@ff1+2)^0,c
  3096  001204  0E3E               	movlw	62
  3097  001206  6E1A               	movwf	(___flge@ff1+3)^0,c
  3098  001208  C092  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  3099  00120C  C093  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  3100  001210  C094  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  3101  001214  C095  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  3102  001218  ECA4  F019         	call	___flge	;wreg free
  3103  00121C  B0D8               	btfsc	status,0,c
  3104  00121E  EF13  F009         	goto	u5711
  3105  001222  EF15  F009         	goto	u5710
  3106  001226                     u5711:
  3107  001226  EF24  F009         	goto	l5109
  3108  00122A                     u5710:
  3109  00122A                     
  3110                           ;colour_cards.c: 53:         instructions(mL, mR, 4);
  3111  00122A  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  3112  00122E  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3113  001232  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  3114  001236  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3115  00123A  0E04               	movlw	4
  3116  00123C  0100               	movlb	0	; () banked
  3117  00123E  6F81               	movwf	instructions@num& (0+255),b
  3118  001240  EC7D  F010         	call	_instructions	;wreg free
  3119                           
  3120                           ;colour_cards.c: 55:     } else if ((rel.R>0.49) && (rel.G<0.275) && (rel.B>0.195)) {
  3121  001244  EF37  F00A         	goto	l5147
  3122  001248                     l5109:
  3123  001248  0E48               	movlw	72
  3124  00124A  6E17               	movwf	___flge@ff1^0,c
  3125  00124C  0EE1               	movlw	225
  3126  00124E  6E18               	movwf	(___flge@ff1+1)^0,c
  3127  001250  0EFA               	movlw	250
  3128  001252  6E19               	movwf	(___flge@ff1+2)^0,c
  3129  001254  0E3E               	movlw	62
  3130  001256  6E1A               	movwf	(___flge@ff1+3)^0,c
  3131  001258  C08A  F01B         	movff	colourcards_readRGBC@rel,___flge@ff2
  3132  00125C  C08B  F01C         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  3133  001260  C08C  F01D         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  3134  001264  C08D  F01E         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  3135  001268  ECA4  F019         	call	___flge	;wreg free
  3136  00126C  B0D8               	btfsc	status,0,c
  3137  00126E  EF3B  F009         	goto	u5721
  3138  001272  EF3D  F009         	goto	u5720
  3139  001276                     u5721:
  3140  001276  EF7E  F009         	goto	l5117
  3141  00127A                     u5720:
  3142  00127A  C08E  F017         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  3143  00127E  C08F  F018         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  3144  001282  C090  F019         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  3145  001286  C091  F01A         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  3146  00128A  0ECD               	movlw	205
  3147  00128C  6E1B               	movwf	___flge@ff2^0,c
  3148  00128E  0ECC               	movlw	204
  3149  001290  6E1C               	movwf	(___flge@ff2+1)^0,c
  3150  001292  0E8C               	movlw	140
  3151  001294  6E1D               	movwf	(___flge@ff2+2)^0,c
  3152  001296  0E3E               	movlw	62
  3153  001298  6E1E               	movwf	(___flge@ff2+3)^0,c
  3154  00129A  ECA4  F019         	call	___flge	;wreg free
  3155  00129E  B0D8               	btfsc	status,0,c
  3156  0012A0  EF54  F009         	goto	u5731
  3157  0012A4  EF56  F009         	goto	u5730
  3158  0012A8                     u5731:
  3159  0012A8  EF7E  F009         	goto	l5117
  3160  0012AC                     u5730:
  3161  0012AC  0E14               	movlw	20
  3162  0012AE  6E17               	movwf	___flge@ff1^0,c
  3163  0012B0  0EAE               	movlw	174
  3164  0012B2  6E18               	movwf	(___flge@ff1+1)^0,c
  3165  0012B4  0E47               	movlw	71
  3166  0012B6  6E19               	movwf	(___flge@ff1+2)^0,c
  3167  0012B8  0E3E               	movlw	62
  3168  0012BA  6E1A               	movwf	(___flge@ff1+3)^0,c
  3169  0012BC  C092  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  3170  0012C0  C093  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  3171  0012C4  C094  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  3172  0012C8  C095  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  3173  0012CC  ECA4  F019         	call	___flge	;wreg free
  3174  0012D0  B0D8               	btfsc	status,0,c
  3175  0012D2  EF6D  F009         	goto	u5741
  3176  0012D6  EF6F  F009         	goto	u5740
  3177  0012DA                     u5741:
  3178  0012DA  EF7E  F009         	goto	l5117
  3179  0012DE                     u5740:
  3180  0012DE                     
  3181                           ;colour_cards.c: 57:         instructions(mL, mR, 5);
  3182  0012DE  C084  F07D         	movff	colourcards_readRGBC@mL,instructions@mL
  3183  0012E2  C085  F07E         	movff	colourcards_readRGBC@mL+1,instructions@mL+1
  3184  0012E6  C086  F07F         	movff	colourcards_readRGBC@mR,instructions@mR
  3185  0012EA  C087  F080         	movff	colourcards_readRGBC@mR+1,instructions@mR+1
  3186  0012EE  0E05               	movlw	5
  3187  0012F0  0100               	movlb	0	; () banked
  3188  0012F2  6F81               	movwf	instructions@num& (0+255),b
  3189  0012F4  EC7D  F010         	call	_instructions	;wreg free
  3190                           
  3191                           ;colour_cards.c: 59:     } else if ((rel.R<0.47) && (rel.G>0.295) && (rel.B>0.21)) {
  3192  0012F8  EF37  F00A         	goto	l5147
  3193  0012FC                     l5117:
  3194  0012FC  C08A  F017         	movff	colourcards_readRGBC@rel,___flge@ff1
  3195  001300  C08B  F018         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  3196  001304  C08C  F019         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  3197  001308  C08D  F01A         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  3198  00130C  0ED7               	movlw	215
  3199  00130E  6E1B               	movwf	___flge@ff2^0,c
  3200  001310  0EA3               	movlw	163
  3201  001312  6E1C               	movwf	(___flge@ff2+1)^0,c
  3202  001314  0EF0               	movlw	240
  3203  001316  6E1D               	movwf	(___flge@ff2+2)^0,c
  3204  001318  0E3E               	movlw	62
  3205  00131A  6E1E               	movwf	(___flge@ff2+3)^0,c
  3206  00131C  ECA4  F019         	call	___flge	;wreg free
  3207  001320  B0D8               	btfsc	status,0,c
  3208  001322  EF95  F009         	goto	u5751
  3209  001326  EF97  F009         	goto	u5750
  3210  00132A                     u5751:
  3211  00132A  EFD0  F009         	goto	l5125
  3212  00132E                     u5750:
  3213  00132E  0E3D               	movlw	61
  3214  001330  6E17               	movwf	___flge@ff1^0,c
  3215  001332  0E0A               	movlw	10
  3216  001334  6E18               	movwf	(___flge@ff1+1)^0,c
  3217  001336  0E97               	movlw	151
  3218  001338  6E19               	movwf	(___flge@ff1+2)^0,c
  3219  00133A  0E3E               	movlw	62
  3220  00133C  6E1A               	movwf	(___flge@ff1+3)^0,c
  3221  00133E  C08E  F01B         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  3222  001342  C08F  F01C         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  3223  001346  C090  F01D         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  3224  00134A  C091  F01E         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  3225  00134E  ECA4  F019         	call	___flge	;wreg free
  3226  001352  B0D8               	btfsc	status,0,c
  3227  001354  EFAE  F009         	goto	u5761
  3228  001358  EFB0  F009         	goto	u5760
  3229  00135C                     u5761:
  3230  00135C  EFD0  F009         	goto	l5125
  3231  001360                     u5760:
  3232  001360  0E3D               	movlw	61
  3233  001362  6E17               	movwf	___flge@ff1^0,c
  3234  001364  0E0A               	movlw	10
  3235  001366  6E18               	movwf	(___flge@ff1+1)^0,c
  3236  001368  0E57               	movlw	87
  3237  00136A  6E19               	movwf	(___flge@ff1+2)^0,c
  3238  00136C  0E3E               	movlw	62
  3239  00136E  6E1A               	movwf	(___flge@ff1+3)^0,c
  3240  001370  C092  F01B         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  3241  001374  C093  F01C         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  3242  001378  C094  F01D         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  3243  00137C  C095  F01E         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  3244  001380  ECA4  F019         	call	___flge	;wreg free
  3245  001384  B0D8               	btfsc	status,0,c
  3246  001386  EFC7  F009         	goto	u5771
  3247  00138A  EFC9  F009         	goto	u5770
  3248  00138E                     u5771:
  3249  00138E  EFD0  F009         	goto	l5125
  3250  001392                     u5770:
  3251  001392                     
  3252                           ;colour_cards.c: 61:         unknowncard_flag = 0;
  3253  001392  0E00               	movlw	0
  3254  001394  0100               	movlb	0	; () banked
  3255  001396  6FDE               	movwf	_unknowncard_flag& (0+255),b	;volatile
  3256                           
  3257                           ;colour_cards.c: 62:         returnhome_flag = 1;
  3258  001398  0E01               	movlw	1
  3259  00139A  6FDD               	movwf	_returnhome_flag& (0+255),b	;volatile
  3260                           
  3261                           ;colour_cards.c: 64:     } else {
  3262  00139C  EF37  F00A         	goto	l5147
  3263  0013A0                     l5125:
  3264                           
  3265                           ;colour_cards.c: 66:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3266  0013A0  0E52               	movlw	82
  3267  0013A2  0100               	movlb	0	; () banked
  3268  0013A4  6F89               	movwf	(??_colourcards_readRGBC+1)& (0+255),b
  3269  0013A6  0E2B               	movlw	43
  3270  0013A8  6F88               	movwf	??_colourcards_readRGBC& (0+255),b
  3271  0013AA  0E00               	movlw	0
  3272  0013AC                     u6637:
  3273  0013AC  2EE8               	decfsz	wreg,f,c
  3274  0013AE  D7FE               	bra	u6637
  3275  0013B0  2F88               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  3276  0013B2  D7FC               	bra	u6637
  3277  0013B4  2F89               	decfsz	(??_colourcards_readRGBC+1)& (0+255),f,b
  3278  0013B6  D7FA               	bra	u6637
  3279  0013B8  F000               	nop	
  3280  0013BA                     
  3281                           ;colour_cards.c: 67:         forward(mL, mR);
  3282  0013BA  C084  F022         	movff	colourcards_readRGBC@mL,forward@mL
  3283  0013BE  C085  F023         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  3284  0013C2  C086  F024         	movff	colourcards_readRGBC@mR,forward@mR
  3285  0013C6  C087  F025         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  3286  0013CA  EC4C  F01C         	call	_forward	;wreg free
  3287  0013CE                     
  3288                           ;colour_cards.c: 68:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3289  0013CE  0ED0               	movlw	208
  3290  0013D0  0100               	movlb	0	; () banked
  3291  0013D2  6F88               	movwf	??_colourcards_readRGBC& (0+255),b
  3292  0013D4  0EC9               	movlw	201
  3293  0013D6                     u6647:
  3294  0013D6  2EE8               	decfsz	wreg,f,c
  3295  0013D8  D7FE               	bra	u6647
  3296  0013DA  2F88               	decfsz	??_colourcards_readRGBC& (0+255),f,b
  3297  0013DC  D7FC               	bra	u6647
  3298  0013DE  D000               	nop2	
  3299                           
  3300                           ;colour_cards.c: 69:         stop(mL, mR);
  3301  0013E0  C084  F022         	movff	colourcards_readRGBC@mL,stop@mL
  3302  0013E4  C085  F023         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  3303  0013E8  C086  F024         	movff	colourcards_readRGBC@mR,stop@mR
  3304  0013EC  C087  F025         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  3305  0013F0  EC93  F01C         	call	_stop	;wreg free
  3306  0013F4                     
  3307                           ;colour_cards.c: 70:         colourclick_readRGBC(abs);
  3308  0013F4  C082  F014         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  3309  0013F8  C083  F015         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  3310  0013FC  EC07  F01D         	call	_colourclick_readRGBC	;wreg free
  3311  001400                     
  3312                           ;colour_cards.c: 71:         if ((abs->C < interrupts_lowerbound) || (abs->C > interrupt
      +                          s_upperbound)) {
  3313  001400  0100               	movlb	0	; () banked
  3314  001402  EE20 F006          	lfsr	2,6
  3315  001406  5182               	movf	colourcards_readRGBC@abs& (0+255),w,b
  3316  001408  26D9               	addwf	fsr2l,f,c
  3317  00140A  5183               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  3318  00140C  22DA               	addwfc	fsr2h,f,c
  3319  00140E  5055               	movf	_interrupts_lowerbound^0,w,c	;volatile
  3320  001410  5CDE               	subwf	postinc2,w,c
  3321  001412  5056               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  3322  001414  58DE               	subwfb	postinc2,w,c
  3323  001416  A0D8               	btfss	status,0,c
  3324  001418  EF10  F00A         	goto	u5781
  3325  00141C  EF12  F00A         	goto	u5780
  3326  001420                     u5781:
  3327  001420  EF23  F00A         	goto	l5137
  3328  001424                     u5780:
  3329  001424                     
  3330                           ; BSR set to: 0
  3331  001424  EE20 F006          	lfsr	2,6
  3332  001428  5182               	movf	colourcards_readRGBC@abs& (0+255),w,b
  3333  00142A  26D9               	addwf	fsr2l,f,c
  3334  00142C  5183               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  3335  00142E  22DA               	addwfc	fsr2h,f,c
  3336  001430  50DE               	movf	postinc2,w,c
  3337  001432  5C53               	subwf	_interrupts_upperbound^0,w,c	;volatile
  3338  001434  50DE               	movf	postinc2,w,c
  3339  001436  5854               	subwfb	(_interrupts_upperbound+1)^0,w,c	;volatile
  3340  001438  B0D8               	btfsc	status,0,c
  3341  00143A  EF21  F00A         	goto	u5791
  3342  00143E  EF23  F00A         	goto	u5790
  3343  001442                     u5791:
  3344  001442  EF35  F00A         	goto	l5145
  3345  001446                     u5790:
  3346  001446                     l5137:
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;colour_cards.c: 72:             if (unknowncard_flag<3) {
  3350  001446  0E03               	movlw	3
  3351  001448  61DE               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
  3352  00144A  EF29  F00A         	goto	u5801
  3353  00144E  EF2B  F00A         	goto	u5800
  3354  001452                     u5801:
  3355  001452  EF30  F00A         	goto	l255
  3356  001456                     u5800:
  3357  001456                     
  3358                           ; BSR set to: 0
  3359                           ;colour_cards.c: 73:                 unknowncard_flag++;
  3360  001456  2BDE               	incf	_unknowncard_flag& (0+255),f,b	;volatile
  3361  001458                     
  3362                           ; BSR set to: 0
  3363                           ;colour_cards.c: 74:                 PIR0bits.INT1IF = 1;
  3364  001458  010E               	movlb	14	; () banked
  3365  00145A  8333               	bsf	51,1,b	;volatile
  3366                           
  3367                           ;colour_cards.c: 75:             } else {
  3368  00145C  EF37  F00A         	goto	l5147
  3369  001460                     l255:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;colour_cards.c: 76:                 LATHbits.LATH3 = 1;
  3373  001460  8680               	bsf	128,3,c	;volatile
  3374  001462                     
  3375                           ; BSR set to: 0
  3376                           ;colour_cards.c: 77:                 returnhome_flag = 1;
  3377  001462  0E01               	movlw	1
  3378  001464  6FDD               	movwf	_returnhome_flag& (0+255),b	;volatile
  3379  001466  EF37  F00A         	goto	l5147
  3380  00146A                     l5145:
  3381                           
  3382                           ; BSR set to: 0
  3383  00146A  0E00               	movlw	0
  3384  00146C  6FDE               	movwf	_unknowncard_flag& (0+255),b	;volatile
  3385  00146E                     l5147:
  3386                           
  3387                           ;colour_cards.c: 83:     PIE0bits.INT1IE = 1;
  3388  00146E  010E               	movlb	14	; () banked
  3389  001470  8329               	bsf	41,1,b	;volatile
  3390  001472                     
  3391                           ; BSR set to: 14
  3392  001472  0012               	return		;funcret
  3393  001474                     __end_of_colourcards_readRGBC:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _instructions *****************
  3397 ;; Defined at:
  3398 ;;		line 195 in file "DC_motors.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  mL              2   29[BANK0 ] PTR struct .
  3401 ;;		 -> main@motorL(9), 
  3402 ;;  mR              2   31[BANK0 ] PTR struct .
  3403 ;;		 -> main@motorR(9), 
  3404 ;;  num             1   33[BANK0 ] unsigned char 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3416 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3419 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3420 ;;Total ram usage:        7 bytes
  3421 ;; Hardware stack levels used: 1
  3422 ;; Hardware stack levels required when called: 11
  3423 ;; This function calls:
  3424 ;;		_clearance
  3425 ;;		_reverse
  3426 ;;		_stop
  3427 ;;		_turnleft
  3428 ;;		_turnright
  3429 ;; This function is called by:
  3430 ;;		_colourcards_readRGBC
  3431 ;;		_reverseinstructions
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text13
  3436  0020FA                     __ptext13:
  3437                           	callstack 0
  3438  0020FA                     _instructions:
  3439                           	callstack 17
  3440  0020FA                     
  3441                           ;DC_motors.c: 196:     if (returnhome_flag==0) {
  3442  0020FA  0100               	movlb	0	; () banked
  3443  0020FC  51DD               	movf	_returnhome_flag& (0+255),w,b	;volatile
  3444  0020FE  A4D8               	btfss	status,2,c
  3445  002100  EF84  F010         	goto	u5451
  3446  002104  EF86  F010         	goto	u5450
  3447  002108                     u5451:
  3448  002108  EFA3  F010         	goto	l4965
  3449  00210C                     u5450:
  3450  00210C                     
  3451                           ; BSR set to: 0
  3452                           ;DC_motors.c: 197:         clearance(mL, mR);
  3453  00210C  C07D  F028         	movff	instructions@mL,clearance@mL
  3454  002110  C07E  F029         	movff	instructions@mL+1,clearance@mL+1
  3455  002114  C07F  F02A         	movff	instructions@mR,clearance@mR
  3456  002118  C080  F02B         	movff	instructions@mR+1,clearance@mR+1
  3457  00211C  ECD8  F01C         	call	_clearance	;wreg free
  3458  002120                     
  3459                           ;DC_motors.c: 198:         unknowncard_flag = 0;
  3460  002120  0E00               	movlw	0
  3461  002122  0100               	movlb	0	; () banked
  3462  002124  6FDE               	movwf	_unknowncard_flag& (0+255),b	;volatile
  3463  002126                     
  3464                           ; BSR set to: 0
  3465                           ;DC_motors.c: 199:         instr[instr_counter] = num;
  3466  002126  5181               	movf	instructions@num& (0+255),w,b
  3467  002128  6E4D               	movwf	??_instructions^0,c
  3468  00212A  6A4E               	clrf	(??_instructions+1)^0,c
  3469  00212C  51E1               	movf	_instr_counter& (0+255),w,b	;volatile
  3470  00212E  0D02               	mullw	2
  3471  002130  0EB3               	movlw	low _instr
  3472  002132  24F3               	addwf	243,w,c
  3473  002134  6ED9               	movwf	fsr2l,c
  3474  002136  0E00               	movlw	high _instr
  3475  002138  20F4               	addwfc	prodh,w,c
  3476  00213A  6EDA               	movwf	fsr2h,c
  3477  00213C  C04D  FFDE         	movff	??_instructions,postinc2
  3478  002140  C04E  FFDD         	movff	??_instructions+1,postdec2
  3479  002144                     
  3480                           ; BSR set to: 0
  3481                           ;DC_motors.c: 200:         instr_counter++;
  3482  002144  2BE1               	incf	_instr_counter& (0+255),f,b	;volatile
  3483  002146                     l4965:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;DC_motors.c: 204:     if (num==1) {
  3487  002146  0581               	decf	instructions@num& (0+255),w,b
  3488  002148  A4D8               	btfss	status,2,c
  3489  00214A  EFA9  F010         	goto	u5461
  3490  00214E  EFAB  F010         	goto	u5460
  3491  002152                     u5461:
  3492  002152  EFC5  F010         	goto	l4969
  3493  002156                     u5460:
  3494  002156                     
  3495                           ; BSR set to: 0
  3496                           ;DC_motors.c: 205:         turnright(mL, mR, 90);
  3497  002156  C07D  F06D         	movff	instructions@mL,turnright@mL
  3498  00215A  C07E  F06E         	movff	instructions@mL+1,turnright@mL+1
  3499  00215E  C07F  F06F         	movff	instructions@mR,turnright@mR
  3500  002162  C080  F070         	movff	instructions@mR+1,turnright@mR+1
  3501  002166  0E00               	movlw	0
  3502  002168  6F72               	movwf	(turnright@deg+1)& (0+255),b
  3503  00216A  0E5A               	movlw	90
  3504  00216C  6F71               	movwf	turnright@deg& (0+255),b
  3505  00216E  EC71  F014         	call	_turnright	;wreg free
  3506                           
  3507                           ;DC_motors.c: 206:         stop(mL, mR);
  3508  002172  C07D  F022         	movff	instructions@mL,stop@mL
  3509  002176  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3510  00217A  C07F  F024         	movff	instructions@mR,stop@mR
  3511  00217E  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3512  002182  EC93  F01C         	call	_stop	;wreg free
  3513                           
  3514                           ;DC_motors.c: 209:     } else if (num==2) {
  3515  002186  EFE7  F011         	goto	l700
  3516  00218A                     l4969:
  3517                           
  3518                           ; BSR set to: 0
  3519  00218A  0E02               	movlw	2
  3520  00218C  1981               	xorwf	instructions@num& (0+255),w,b
  3521  00218E  A4D8               	btfss	status,2,c
  3522  002190  EFCC  F010         	goto	u5471
  3523  002194  EFCE  F010         	goto	u5470
  3524  002198                     u5471:
  3525  002198  EFE8  F010         	goto	l4973
  3526  00219C                     u5470:
  3527  00219C                     
  3528                           ; BSR set to: 0
  3529                           ;DC_motors.c: 210:         turnleft(mL, mR, 90);
  3530  00219C  C07D  F06D         	movff	instructions@mL,turnleft@mL
  3531  0021A0  C07E  F06E         	movff	instructions@mL+1,turnleft@mL+1
  3532  0021A4  C07F  F06F         	movff	instructions@mR,turnleft@mR
  3533  0021A8  C080  F070         	movff	instructions@mR+1,turnleft@mR+1
  3534  0021AC  0E00               	movlw	0
  3535  0021AE  6F72               	movwf	(turnleft@deg+1)& (0+255),b
  3536  0021B0  0E5A               	movlw	90
  3537  0021B2  6F71               	movwf	turnleft@deg& (0+255),b
  3538  0021B4  EC74  F015         	call	_turnleft	;wreg free
  3539                           
  3540                           ;DC_motors.c: 211:         stop(mL, mR);
  3541  0021B8  C07D  F022         	movff	instructions@mL,stop@mL
  3542  0021BC  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3543  0021C0  C07F  F024         	movff	instructions@mR,stop@mR
  3544  0021C4  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3545  0021C8  EC93  F01C         	call	_stop	;wreg free
  3546                           
  3547                           ;DC_motors.c: 214:     } else if (num==3) {
  3548  0021CC  EFE7  F011         	goto	l700
  3549  0021D0                     l4973:
  3550                           
  3551                           ; BSR set to: 0
  3552  0021D0  0E03               	movlw	3
  3553  0021D2  1981               	xorwf	instructions@num& (0+255),w,b
  3554  0021D4  A4D8               	btfss	status,2,c
  3555  0021D6  EFEF  F010         	goto	u5481
  3556  0021DA  EFF1  F010         	goto	u5480
  3557  0021DE                     u5481:
  3558  0021DE  EF0B  F011         	goto	l4977
  3559  0021E2                     u5480:
  3560  0021E2                     
  3561                           ; BSR set to: 0
  3562                           ;DC_motors.c: 215:         turnright(mL, mR, 180);
  3563  0021E2  C07D  F06D         	movff	instructions@mL,turnright@mL
  3564  0021E6  C07E  F06E         	movff	instructions@mL+1,turnright@mL+1
  3565  0021EA  C07F  F06F         	movff	instructions@mR,turnright@mR
  3566  0021EE  C080  F070         	movff	instructions@mR+1,turnright@mR+1
  3567  0021F2  0E00               	movlw	0
  3568  0021F4  6F72               	movwf	(turnright@deg+1)& (0+255),b
  3569  0021F6  0EB4               	movlw	180
  3570  0021F8  6F71               	movwf	turnright@deg& (0+255),b
  3571  0021FA  EC71  F014         	call	_turnright	;wreg free
  3572                           
  3573                           ;DC_motors.c: 216:         stop(mL, mR);
  3574  0021FE  C07D  F022         	movff	instructions@mL,stop@mL
  3575  002202  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3576  002206  C07F  F024         	movff	instructions@mR,stop@mR
  3577  00220A  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3578  00220E  EC93  F01C         	call	_stop	;wreg free
  3579                           
  3580                           ;DC_motors.c: 219:     } else if (num==4) {
  3581  002212  EFE7  F011         	goto	l700
  3582  002216                     l4977:
  3583                           
  3584                           ; BSR set to: 0
  3585  002216  0E04               	movlw	4
  3586  002218  1981               	xorwf	instructions@num& (0+255),w,b
  3587  00221A  A4D8               	btfss	status,2,c
  3588  00221C  EF12  F011         	goto	u5491
  3589  002220  EF14  F011         	goto	u5490
  3590  002224                     u5491:
  3591  002224  EF5B  F011         	goto	l4989
  3592  002228                     u5490:
  3593  002228                     
  3594                           ; BSR set to: 0
  3595                           ;DC_motors.c: 220:         reverse(mL, mR);
  3596  002228  C07D  F022         	movff	instructions@mL,reverse@mL
  3597  00222C  C07E  F023         	movff	instructions@mL+1,reverse@mL+1
  3598  002230  C07F  F024         	movff	instructions@mR,reverse@mR
  3599  002234  C080  F025         	movff	instructions@mR+1,reverse@mR+1
  3600  002238  EC05  F01C         	call	_reverse	;wreg free
  3601  00223C                     
  3602                           ;DC_motors.c: 221:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  3603  00223C  0E72               	movlw	114
  3604  00223E  6E4E               	movwf	(??_instructions+1)^0,c
  3605  002240  0EA3               	movlw	163
  3606  002242  6E4D               	movwf	??_instructions^0,c
  3607  002244  0E9B               	movlw	155
  3608  002246                     u6657:
  3609  002246  2EE8               	decfsz	wreg,f,c
  3610  002248  D7FE               	bra	u6657
  3611  00224A  2E4D               	decfsz	??_instructions^0,f,c
  3612  00224C  D7FC               	bra	u6657
  3613  00224E  2E4E               	decfsz	(??_instructions+1)^0,f,c
  3614  002250  D7FA               	bra	u6657
  3615  002252  F000               	nop	
  3616  002254                     
  3617                           ;DC_motors.c: 222:         stop(mL, mR);
  3618  002254  C07D  F022         	movff	instructions@mL,stop@mL
  3619  002258  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3620  00225C  C07F  F024         	movff	instructions@mR,stop@mR
  3621  002260  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3622  002264  EC93  F01C         	call	_stop	;wreg free
  3623                           
  3624                           ;DC_motors.c: 223:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3625  002268  0E09               	movlw	9
  3626  00226A  6E4E               	movwf	(??_instructions+1)^0,c
  3627  00226C  0E1E               	movlw	30
  3628  00226E  6E4D               	movwf	??_instructions^0,c
  3629  002270  0EE4               	movlw	228
  3630  002272                     u6667:
  3631  002272  2EE8               	decfsz	wreg,f,c
  3632  002274  D7FE               	bra	u6667
  3633  002276  2E4D               	decfsz	??_instructions^0,f,c
  3634  002278  D7FC               	bra	u6667
  3635  00227A  2E4E               	decfsz	(??_instructions+1)^0,f,c
  3636  00227C  D7FA               	bra	u6667
  3637  00227E  D000               	nop2	
  3638  002280                     
  3639                           ;DC_motors.c: 224:         turnright(mL, mR, 90);
  3640  002280  C07D  F06D         	movff	instructions@mL,turnright@mL
  3641  002284  C07E  F06E         	movff	instructions@mL+1,turnright@mL+1
  3642  002288  C07F  F06F         	movff	instructions@mR,turnright@mR
  3643  00228C  C080  F070         	movff	instructions@mR+1,turnright@mR+1
  3644  002290  0E00               	movlw	0
  3645  002292  0100               	movlb	0	; () banked
  3646  002294  6F72               	movwf	(turnright@deg+1)& (0+255),b
  3647  002296  0E5A               	movlw	90
  3648  002298  6F71               	movwf	turnright@deg& (0+255),b
  3649  00229A  EC71  F014         	call	_turnright	;wreg free
  3650  00229E                     l4987:
  3651                           
  3652                           ;DC_motors.c: 225:         stop(mL, mR);
  3653  00229E  C07D  F022         	movff	instructions@mL,stop@mL
  3654  0022A2  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3655  0022A6  C07F  F024         	movff	instructions@mR,stop@mR
  3656  0022AA  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3657  0022AE  EC93  F01C         	call	_stop	;wreg free
  3658                           
  3659                           ;DC_motors.c: 228:     } else if (num==5) {
  3660  0022B2  EFE7  F011         	goto	l700
  3661  0022B6                     l4989:
  3662                           
  3663                           ; BSR set to: 0
  3664  0022B6  0E05               	movlw	5
  3665  0022B8  1981               	xorwf	instructions@num& (0+255),w,b
  3666  0022BA  A4D8               	btfss	status,2,c
  3667  0022BC  EF62  F011         	goto	u5501
  3668  0022C0  EF64  F011         	goto	u5500
  3669  0022C4                     u5501:
  3670  0022C4  EFA1  F011         	goto	l5001
  3671  0022C8                     u5500:
  3672  0022C8                     
  3673                           ; BSR set to: 0
  3674                           ;DC_motors.c: 229:         reverse(mL, mR);
  3675  0022C8  C07D  F022         	movff	instructions@mL,reverse@mL
  3676  0022CC  C07E  F023         	movff	instructions@mL+1,reverse@mL+1
  3677  0022D0  C07F  F024         	movff	instructions@mR,reverse@mR
  3678  0022D4  C080  F025         	movff	instructions@mR+1,reverse@mR+1
  3679  0022D8  EC05  F01C         	call	_reverse	;wreg free
  3680  0022DC                     
  3681                           ;DC_motors.c: 230:         _delay((unsigned long)((1400)*(64000000/4000.0)));
  3682  0022DC  0E72               	movlw	114
  3683  0022DE  6E4E               	movwf	(??_instructions+1)^0,c
  3684  0022E0  0EA3               	movlw	163
  3685  0022E2  6E4D               	movwf	??_instructions^0,c
  3686  0022E4  0E9B               	movlw	155
  3687  0022E6                     u6677:
  3688  0022E6  2EE8               	decfsz	wreg,f,c
  3689  0022E8  D7FE               	bra	u6677
  3690  0022EA  2E4D               	decfsz	??_instructions^0,f,c
  3691  0022EC  D7FC               	bra	u6677
  3692  0022EE  2E4E               	decfsz	(??_instructions+1)^0,f,c
  3693  0022F0  D7FA               	bra	u6677
  3694  0022F2  F000               	nop	
  3695  0022F4                     
  3696                           ;DC_motors.c: 231:         stop(mL, mR);
  3697  0022F4  C07D  F022         	movff	instructions@mL,stop@mL
  3698  0022F8  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3699  0022FC  C07F  F024         	movff	instructions@mR,stop@mR
  3700  002300  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3701  002304  EC93  F01C         	call	_stop	;wreg free
  3702                           
  3703                           ;DC_motors.c: 232:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3704  002308  0E09               	movlw	9
  3705  00230A  6E4E               	movwf	(??_instructions+1)^0,c
  3706  00230C  0E1E               	movlw	30
  3707  00230E  6E4D               	movwf	??_instructions^0,c
  3708  002310  0EE4               	movlw	228
  3709  002312                     u6687:
  3710  002312  2EE8               	decfsz	wreg,f,c
  3711  002314  D7FE               	bra	u6687
  3712  002316  2E4D               	decfsz	??_instructions^0,f,c
  3713  002318  D7FC               	bra	u6687
  3714  00231A  2E4E               	decfsz	(??_instructions+1)^0,f,c
  3715  00231C  D7FA               	bra	u6687
  3716  00231E  D000               	nop2	
  3717  002320                     
  3718                           ;DC_motors.c: 233:         turnleft(mL, mR, 90);
  3719  002320  C07D  F06D         	movff	instructions@mL,turnleft@mL
  3720  002324  C07E  F06E         	movff	instructions@mL+1,turnleft@mL+1
  3721  002328  C07F  F06F         	movff	instructions@mR,turnleft@mR
  3722  00232C  C080  F070         	movff	instructions@mR+1,turnleft@mR+1
  3723  002330  0E00               	movlw	0
  3724  002332  0100               	movlb	0	; () banked
  3725  002334  6F72               	movwf	(turnleft@deg+1)& (0+255),b
  3726  002336  0E5A               	movlw	90
  3727  002338  6F71               	movwf	turnleft@deg& (0+255),b
  3728  00233A  EC74  F015         	call	_turnleft	;wreg free
  3729  00233E  EF4F  F011         	goto	l4987
  3730  002342                     l5001:
  3731                           
  3732                           ; BSR set to: 0
  3733  002342  0E06               	movlw	6
  3734  002344  1981               	xorwf	instructions@num& (0+255),w,b
  3735  002346  A4D8               	btfss	status,2,c
  3736  002348  EFA8  F011         	goto	u5511
  3737  00234C  EFAA  F011         	goto	u5510
  3738  002350                     u5511:
  3739  002350  EFC4  F011         	goto	l5005
  3740  002354                     u5510:
  3741  002354                     
  3742                           ; BSR set to: 0
  3743                           ;DC_motors.c: 238:         turnright(mL, mR, 135);
  3744  002354  C07D  F06D         	movff	instructions@mL,turnright@mL
  3745  002358  C07E  F06E         	movff	instructions@mL+1,turnright@mL+1
  3746  00235C  C07F  F06F         	movff	instructions@mR,turnright@mR
  3747  002360  C080  F070         	movff	instructions@mR+1,turnright@mR+1
  3748  002364  0E00               	movlw	0
  3749  002366  6F72               	movwf	(turnright@deg+1)& (0+255),b
  3750  002368  0E87               	movlw	135
  3751  00236A  6F71               	movwf	turnright@deg& (0+255),b
  3752  00236C  EC71  F014         	call	_turnright	;wreg free
  3753                           
  3754                           ;DC_motors.c: 239:         stop(mL, mR);
  3755  002370  C07D  F022         	movff	instructions@mL,stop@mL
  3756  002374  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3757  002378  C07F  F024         	movff	instructions@mR,stop@mR
  3758  00237C  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3759  002380  EC93  F01C         	call	_stop	;wreg free
  3760                           
  3761                           ;DC_motors.c: 242:     } else if (num==7) {
  3762  002384  EFE7  F011         	goto	l700
  3763  002388                     l5005:
  3764                           
  3765                           ; BSR set to: 0
  3766  002388  0E07               	movlw	7
  3767  00238A  1981               	xorwf	instructions@num& (0+255),w,b
  3768  00238C  A4D8               	btfss	status,2,c
  3769  00238E  EFCB  F011         	goto	u5521
  3770  002392  EFCD  F011         	goto	u5520
  3771  002396                     u5521:
  3772  002396  EFE7  F011         	goto	l694
  3773  00239A                     u5520:
  3774  00239A                     
  3775                           ; BSR set to: 0
  3776                           ;DC_motors.c: 243:         turnleft(mL, mR, 135);
  3777  00239A  C07D  F06D         	movff	instructions@mL,turnleft@mL
  3778  00239E  C07E  F06E         	movff	instructions@mL+1,turnleft@mL+1
  3779  0023A2  C07F  F06F         	movff	instructions@mR,turnleft@mR
  3780  0023A6  C080  F070         	movff	instructions@mR+1,turnleft@mR+1
  3781  0023AA  0E00               	movlw	0
  3782  0023AC  6F72               	movwf	(turnleft@deg+1)& (0+255),b
  3783  0023AE  0E87               	movlw	135
  3784  0023B0  6F71               	movwf	turnleft@deg& (0+255),b
  3785  0023B2  EC74  F015         	call	_turnleft	;wreg free
  3786                           
  3787                           ;DC_motors.c: 244:         stop(mL, mR);
  3788  0023B6  C07D  F022         	movff	instructions@mL,stop@mL
  3789  0023BA  C07E  F023         	movff	instructions@mL+1,stop@mL+1
  3790  0023BE  C07F  F024         	movff	instructions@mR,stop@mR
  3791  0023C2  C080  F025         	movff	instructions@mR+1,stop@mR+1
  3792  0023C6  EC93  F01C         	call	_stop	;wreg free
  3793  0023CA  EFE7  F011         	goto	l700
  3794  0023CE                     l694:
  3795  0023CE                     l700:
  3796  0023CE  0012               	return		;funcret
  3797  0023D0                     __end_of_instructions:
  3798                           	callstack 0
  3799                           
  3800 ;; *************** function _turnright *****************
  3801 ;; Defined at:
  3802 ;;		line 173 in file "DC_motors.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  mL              2   13[BANK0 ] PTR struct .
  3805 ;;		 -> main@motorL(9), 
  3806 ;;  mR              2   15[BANK0 ] PTR struct .
  3807 ;;		 -> main@motorR(9), 
  3808 ;;  deg             2   17[BANK0 ] unsigned int 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  delay           4   19[BANK0 ] unsigned int 
  3811 ;;  i               2   27[BANK0 ] unsigned int 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3821 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3824 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3825 ;;Total ram usage:       17 bytes
  3826 ;; Hardware stack levels used: 1
  3827 ;; Hardware stack levels required when called: 9
  3828 ;; This function calls:
  3829 ;;		_DCmotors_setPWM
  3830 ;;		___fladd
  3831 ;;		___fldiv
  3832 ;;		___flge
  3833 ;;		___flmul
  3834 ;;		___xxtofl
  3835 ;; This function is called by:
  3836 ;;		_instructions
  3837 ;;		_reverseinstructions
  3838 ;;		_DCmotors_calibration
  3839 ;;		_DCmotors_testing
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text14
  3844  0028E2                     __ptext14:
  3845                           	callstack 0
  3846  0028E2                     _turnright:
  3847                           	callstack 19
  3848  0028E2                     
  3849                           ;DC_motors.c: 174:     mL->direction = 1;
  3850  0028E2  0100               	movlb	0	; () banked
  3851  0028E4  EE20 F001          	lfsr	2,1
  3852  0028E8  516D               	movf	turnright@mL& (0+255),w,b
  3853  0028EA  26D9               	addwf	fsr2l,f,c
  3854  0028EC  516E               	movf	(turnright@mL+1)& (0+255),w,b
  3855  0028EE  22DA               	addwfc	fsr2h,f,c
  3856  0028F0  0E01               	movlw	1
  3857  0028F2  6EDF               	movwf	indf2,c
  3858                           
  3859                           ;DC_motors.c: 175:     mR->direction = 0;
  3860  0028F4  EE20 F001          	lfsr	2,1
  3861  0028F8  516F               	movf	turnright@mR& (0+255),w,b
  3862  0028FA  26D9               	addwf	fsr2l,f,c
  3863  0028FC  5170               	movf	(turnright@mR+1)& (0+255),w,b
  3864  0028FE  22DA               	addwfc	fsr2h,f,c
  3865  002900  0E00               	movlw	0
  3866  002902  6EDF               	movwf	indf2,c
  3867  002904                     
  3868                           ; BSR set to: 0
  3869                           ;DC_motors.c: 177:     LATHbits.LATH0 = 1;
  3870  002904  8080               	bsf	128,0,c	;volatile
  3871  002906                     
  3872                           ; BSR set to: 0
  3873                           ;DC_motors.c: 178:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  3874  002906  0E23               	movlw	35
  3875  002908  6E34               	movwf	___fladd@a^0,c
  3876  00290A  0EDB               	movlw	219
  3877  00290C  6E35               	movwf	(___fladd@a+1)^0,c
  3878  00290E  0E7B               	movlw	123
  3879  002910  6E36               	movwf	(___fladd@a+2)^0,c
  3880  002912  0E42               	movlw	66
  3881  002914  6E37               	movwf	(___fladd@a+3)^0,c
  3882  002916  0E6F               	movlw	111
  3883  002918  6E1B               	movwf	___flmul@a^0,c
  3884  00291A  0EF0               	movlw	240
  3885  00291C  6E1C               	movwf	(___flmul@a+1)^0,c
  3886  00291E  0E01               	movlw	1
  3887  002920  6E1D               	movwf	(___flmul@a+2)^0,c
  3888  002922  0E40               	movlw	64
  3889  002924  6E1E               	movwf	(___flmul@a+3)^0,c
  3890  002926  C071  F009         	movff	turnright@deg,___xxtofl@val
  3891  00292A  C072  F00A         	movff	turnright@deg+1,___xxtofl@val+1
  3892  00292E  6A0B               	clrf	(___xxtofl@val+2)^0,c
  3893  002930  6A0C               	clrf	(___xxtofl@val+3)^0,c
  3894  002932  0E00               	movlw	0
  3895  002934  EC61  F017         	call	___xxtofl
  3896  002938  C009  F017         	movff	?___xxtofl,___flmul@b
  3897  00293C  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  3898  002940  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  3899  002944  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  3900  002948  EC9A  F00C         	call	___flmul	;wreg free
  3901  00294C  C017  F030         	movff	?___flmul,___fladd@b
  3902  002950  C018  F031         	movff	?___flmul+1,___fladd@b+1
  3903  002954  C019  F032         	movff	?___flmul+2,___fladd@b+2
  3904  002958  C01A  F033         	movff	?___flmul+3,___fladd@b+3
  3905  00295C  EC3A  F00A         	call	___fladd	;wreg free
  3906  002960  C030  F077         	movff	?___fladd,_turnright$3217
  3907  002964  C031  F078         	movff	?___fladd+1,_turnright$3217+1
  3908  002968  C032  F079         	movff	?___fladd+2,_turnright$3217+2
  3909  00296C  C033  F07A         	movff	?___fladd+3,_turnright$3217+3
  3910  002970                     
  3911                           ;DC_motors.c: 178:     double delay = ((deg*2.0303)+62.964) * 360/turnright_calangle;
  3912  002970  0E00               	movlw	0
  3913  002972  6E1B               	movwf	___flmul@a^0,c
  3914  002974  0E00               	movlw	0
  3915  002976  6E1C               	movwf	(___flmul@a+1)^0,c
  3916  002978  0EB4               	movlw	180
  3917  00297A  6E1D               	movwf	(___flmul@a+2)^0,c
  3918  00297C  0E43               	movlw	67
  3919  00297E  6E1E               	movwf	(___flmul@a+3)^0,c
  3920  002980  C077  F017         	movff	_turnright$3217,___flmul@b
  3921  002984  C078  F018         	movff	_turnright$3217+1,___flmul@b+1
  3922  002988  C079  F019         	movff	_turnright$3217+2,___flmul@b+2
  3923  00298C  C07A  F01A         	movff	_turnright$3217+3,___flmul@b+3
  3924  002990  EC9A  F00C         	call	___flmul	;wreg free
  3925  002994  C017  F040         	movff	?___flmul,___fldiv@b
  3926  002998  C018  F041         	movff	?___flmul+1,___fldiv@b+1
  3927  00299C  C019  F042         	movff	?___flmul+2,___fldiv@b+2
  3928  0029A0  C01A  F043         	movff	?___flmul+3,___fldiv@b+3
  3929  0029A4  C04F  F009         	movff	_turnright_calangle,___xxtofl@val	;volatile
  3930  0029A8  C050  F00A         	movff	_turnright_calangle+1,___xxtofl@val+1	;volatile
  3931  0029AC  0E00               	movlw	0
  3932  0029AE  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  3933  0029B0  0EFF               	movlw	-1
  3934  0029B2  6E0B               	movwf	(___xxtofl@val+2)^0,c
  3935  0029B4  6E0C               	movwf	(___xxtofl@val+3)^0,c
  3936  0029B6  0E01               	movlw	1
  3937  0029B8  EC61  F017         	call	___xxtofl
  3938  0029BC  C009  F044         	movff	?___xxtofl,___fldiv@a
  3939  0029C0  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  3940  0029C4  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  3941  0029C8  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  3942  0029CC  ECAF  F00E         	call	___fldiv	;wreg free
  3943  0029D0  C040  F073         	movff	?___fldiv,turnright@delay
  3944  0029D4  C041  F074         	movff	?___fldiv+1,turnright@delay+1
  3945  0029D8  C042  F075         	movff	?___fldiv+2,turnright@delay+2
  3946  0029DC  C043  F076         	movff	?___fldiv+3,turnright@delay+3
  3947                           
  3948                           ;DC_motors.c: 179:     while((mL->power < 70) || (mR->power < 70)){
  3949  0029E0  EF26  F015         	goto	l4943
  3950  0029E4                     l4929:
  3951                           
  3952                           ;DC_motors.c: 180:         if (mL->power < 70) {mL->power += 10;}
  3953  0029E4  C06D  FFD9         	movff	turnright@mL,fsr2l
  3954  0029E8  C06E  FFDA         	movff	turnright@mL+1,fsr2h
  3955  0029EC  0E46               	movlw	70
  3956  0029EE  60DF               	cpfslt	indf2,c
  3957  0029F0  EFFC  F014         	goto	u5401
  3958  0029F4  EFFE  F014         	goto	u5400
  3959  0029F8                     u5401:
  3960  0029F8  EF04  F015         	goto	l4933
  3961  0029FC                     u5400:
  3962  0029FC  C06D  FFD9         	movff	turnright@mL,fsr2l
  3963  002A00  C06E  FFDA         	movff	turnright@mL+1,fsr2h
  3964  002A04  0E0A               	movlw	10
  3965  002A06  26DF               	addwf	indf2,f,c
  3966  002A08                     l4933:
  3967                           
  3968                           ;DC_motors.c: 181:         if (mR->power < 70) {mR->power += 10;}
  3969  002A08  C06F  FFD9         	movff	turnright@mR,fsr2l
  3970  002A0C  C070  FFDA         	movff	turnright@mR+1,fsr2h
  3971  002A10  0E46               	movlw	70
  3972  002A12  60DF               	cpfslt	indf2,c
  3973  002A14  EF0E  F015         	goto	u5411
  3974  002A18  EF10  F015         	goto	u5410
  3975  002A1C                     u5411:
  3976  002A1C  EF16  F015         	goto	l4937
  3977  002A20                     u5410:
  3978  002A20  C06F  FFD9         	movff	turnright@mR,fsr2l
  3979  002A24  C070  FFDA         	movff	turnright@mR+1,fsr2h
  3980  002A28  0E0A               	movlw	10
  3981  002A2A  26DF               	addwf	indf2,f,c
  3982  002A2C                     l4937:
  3983                           
  3984                           ;DC_motors.c: 182:         DCmotors_setPWM(mL);
  3985  002A2C  C06D  F017         	movff	turnright@mL,DCmotors_setPWM@m
  3986  002A30  C06E  F018         	movff	turnright@mL+1,DCmotors_setPWM@m+1
  3987  002A34  EC77  F016         	call	_DCmotors_setPWM	;wreg free
  3988  002A38                     
  3989                           ;DC_motors.c: 183:         DCmotors_setPWM(mR);
  3990  002A38  C06F  F017         	movff	turnright@mR,DCmotors_setPWM@m
  3991  002A3C  C070  F018         	movff	turnright@mR+1,DCmotors_setPWM@m+1
  3992  002A40  EC77  F016         	call	_DCmotors_setPWM	;wreg free
  3993  002A44                     
  3994                           ;DC_motors.c: 184:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  3995  002A44  0EA0               	movlw	160
  3996  002A46                     u6697:
  3997  002A46  D000               	nop2	
  3998  002A48  2EE8               	decfsz	wreg,f,c
  3999  002A4A  D7FD               	bra	u6697
  4000  002A4C                     l4943:
  4001                           
  4002                           ;DC_motors.c: 179:     while((mL->power < 70) || (mR->power < 70)){
  4003  002A4C  C06D  FFD9         	movff	turnright@mL,fsr2l
  4004  002A50  C06E  FFDA         	movff	turnright@mL+1,fsr2h
  4005  002A54  0E45               	movlw	69
  4006  002A56  64DF               	cpfsgt	indf2,c
  4007  002A58  EF30  F015         	goto	u5421
  4008  002A5C  EF32  F015         	goto	u5420
  4009  002A60                     u5421:
  4010  002A60  EFF2  F014         	goto	l4929
  4011  002A64                     u5420:
  4012  002A64  C06F  FFD9         	movff	turnright@mR,fsr2l
  4013  002A68  C070  FFDA         	movff	turnright@mR+1,fsr2h
  4014  002A6C  0E45               	movlw	69
  4015  002A6E  64DF               	cpfsgt	indf2,c
  4016  002A70  EF3C  F015         	goto	u5431
  4017  002A74  EF3E  F015         	goto	u5430
  4018  002A78                     u5431:
  4019  002A78  EFF2  F014         	goto	l4929
  4020  002A7C                     u5430:
  4021  002A7C                     
  4022                           ;DC_motors.c: 186:     unsigned int i;;DC_motors.c: 187:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  4023  002A7C  0E00               	movlw	0
  4024  002A7E  0100               	movlb	0	; () banked
  4025  002A80  6F7C               	movwf	(turnright@i+1)& (0+255),b
  4026  002A82  0E00               	movlw	0
  4027  002A84  6F7B               	movwf	turnright@i& (0+255),b
  4028  002A86  EF50  F015         	goto	l4953
  4029  002A8A                     l4949:
  4030  002A8A  0E15               	movlw	21
  4031  002A8C  6E4C               	movwf	??_turnright^0,c
  4032  002A8E  0EC6               	movlw	198
  4033  002A90                     u6707:
  4034  002A90  2EE8               	decfsz	wreg,f,c
  4035  002A92  D7FE               	bra	u6707
  4036  002A94  2E4C               	decfsz	??_turnright^0,f,c
  4037  002A96  D7FC               	bra	u6707
  4038  002A98  D000               	nop2	
  4039  002A9A  0100               	movlb	0	; () banked
  4040  002A9C  4B7B               	infsnz	turnright@i& (0+255),f,b
  4041  002A9E  2B7C               	incf	(turnright@i+1)& (0+255),f,b
  4042  002AA0                     l4953:
  4043                           
  4044                           ; BSR set to: 0
  4045  002AA0  C07B  F009         	movff	turnright@i,___xxtofl@val
  4046  002AA4  C07C  F00A         	movff	turnright@i+1,___xxtofl@val+1
  4047  002AA8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  4048  002AAA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  4049  002AAC  0E00               	movlw	0
  4050  002AAE  EC61  F017         	call	___xxtofl
  4051  002AB2  C009  F017         	movff	?___xxtofl,___flge@ff1
  4052  002AB6  C00A  F018         	movff	?___xxtofl+1,___flge@ff1+1
  4053  002ABA  C00B  F019         	movff	?___xxtofl+2,___flge@ff1+2
  4054  002ABE  C00C  F01A         	movff	?___xxtofl+3,___flge@ff1+3
  4055  002AC2  C073  F01B         	movff	turnright@delay,___flge@ff2
  4056  002AC6  C074  F01C         	movff	turnright@delay+1,___flge@ff2+1
  4057  002ACA  C075  F01D         	movff	turnright@delay+2,___flge@ff2+2
  4058  002ACE  C076  F01E         	movff	turnright@delay+3,___flge@ff2+3
  4059  002AD2  ECA4  F019         	call	___flge	;wreg free
  4060  002AD6  A0D8               	btfss	status,0,c
  4061  002AD8  EF70  F015         	goto	u5441
  4062  002ADC  EF72  F015         	goto	u5440
  4063  002AE0                     u5441:
  4064  002AE0  EF45  F015         	goto	l4949
  4065  002AE4                     u5440:
  4066  002AE4                     
  4067                           ;DC_motors.c: 188:     LATHbits.LATH0 = 0;
  4068  002AE4  9080               	bcf	128,0,c	;volatile
  4069  002AE6  0012               	return		;funcret
  4070  002AE8                     __end_of_turnright:
  4071                           	callstack 0
  4072                           
  4073 ;; *************** function _turnleft *****************
  4074 ;; Defined at:
  4075 ;;		line 151 in file "DC_motors.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  mL              2   13[BANK0 ] PTR struct .
  4078 ;;		 -> main@motorL(9), 
  4079 ;;  mR              2   15[BANK0 ] PTR struct .
  4080 ;;		 -> main@motorR(9), 
  4081 ;;  deg             2   17[BANK0 ] unsigned int 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  delay           4   19[BANK0 ] unsigned int 
  4084 ;;  i               2   27[BANK0 ] unsigned int 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4094 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4097 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;Total ram usage:       17 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; Hardware stack levels required when called: 9
  4101 ;; This function calls:
  4102 ;;		_DCmotors_setPWM
  4103 ;;		___fladd
  4104 ;;		___fldiv
  4105 ;;		___flge
  4106 ;;		___flmul
  4107 ;;		___xxtofl
  4108 ;; This function is called by:
  4109 ;;		_instructions
  4110 ;;		_reverseinstructions
  4111 ;;		_DCmotors_calibration
  4112 ;;		_DCmotors_testing
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text15
  4117  002AE8                     __ptext15:
  4118                           	callstack 0
  4119  002AE8                     _turnleft:
  4120                           	callstack 19
  4121  002AE8                     
  4122                           ;DC_motors.c: 152:     mL->direction = 0;
  4123  002AE8  0100               	movlb	0	; () banked
  4124  002AEA  EE20 F001          	lfsr	2,1
  4125  002AEE  516D               	movf	turnleft@mL& (0+255),w,b
  4126  002AF0  26D9               	addwf	fsr2l,f,c
  4127  002AF2  516E               	movf	(turnleft@mL+1)& (0+255),w,b
  4128  002AF4  22DA               	addwfc	fsr2h,f,c
  4129  002AF6  0E00               	movlw	0
  4130  002AF8  6EDF               	movwf	indf2,c
  4131                           
  4132                           ;DC_motors.c: 153:     mR->direction = 1;
  4133  002AFA  EE20 F001          	lfsr	2,1
  4134  002AFE  516F               	movf	turnleft@mR& (0+255),w,b
  4135  002B00  26D9               	addwf	fsr2l,f,c
  4136  002B02  5170               	movf	(turnleft@mR+1)& (0+255),w,b
  4137  002B04  22DA               	addwfc	fsr2h,f,c
  4138  002B06  0E01               	movlw	1
  4139  002B08  6EDF               	movwf	indf2,c
  4140  002B0A                     
  4141                           ; BSR set to: 0
  4142                           ;DC_motors.c: 155:     LATFbits.LATF0 = 1;
  4143  002B0A  807E               	bsf	126,0,c	;volatile
  4144  002B0C                     
  4145                           ; BSR set to: 0
  4146                           ;DC_motors.c: 156:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  4147  002B0C  0E4A               	movlw	74
  4148  002B0E  6E34               	movwf	___fladd@a^0,c
  4149  002B10  0E0C               	movlw	12
  4150  002B12  6E35               	movwf	(___fladd@a+1)^0,c
  4151  002B14  0EFC               	movlw	252
  4152  002B16  6E36               	movwf	(___fladd@a+2)^0,c
  4153  002B18  0E41               	movlw	65
  4154  002B1A  6E37               	movwf	(___fladd@a+3)^0,c
  4155  002B1C  0E7D               	movlw	125
  4156  002B1E  6E1B               	movwf	___flmul@a^0,c
  4157  002B20  0E3F               	movlw	63
  4158  002B22  6E1C               	movwf	(___flmul@a+1)^0,c
  4159  002B24  0E15               	movlw	21
  4160  002B26  6E1D               	movwf	(___flmul@a+2)^0,c
  4161  002B28  0E40               	movlw	64
  4162  002B2A  6E1E               	movwf	(___flmul@a+3)^0,c
  4163  002B2C  C071  F009         	movff	turnleft@deg,___xxtofl@val
  4164  002B30  C072  F00A         	movff	turnleft@deg+1,___xxtofl@val+1
  4165  002B34  6A0B               	clrf	(___xxtofl@val+2)^0,c
  4166  002B36  6A0C               	clrf	(___xxtofl@val+3)^0,c
  4167  002B38  0E00               	movlw	0
  4168  002B3A  EC61  F017         	call	___xxtofl
  4169  002B3E  C009  F017         	movff	?___xxtofl,___flmul@b
  4170  002B42  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  4171  002B46  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  4172  002B4A  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  4173  002B4E  EC9A  F00C         	call	___flmul	;wreg free
  4174  002B52  C017  F030         	movff	?___flmul,___fladd@b
  4175  002B56  C018  F031         	movff	?___flmul+1,___fladd@b+1
  4176  002B5A  C019  F032         	movff	?___flmul+2,___fladd@b+2
  4177  002B5E  C01A  F033         	movff	?___flmul+3,___fladd@b+3
  4178  002B62  EC3A  F00A         	call	___fladd	;wreg free
  4179  002B66  C030  F077         	movff	?___fladd,_turnleft$3216
  4180  002B6A  C031  F078         	movff	?___fladd+1,_turnleft$3216+1
  4181  002B6E  C032  F079         	movff	?___fladd+2,_turnleft$3216+2
  4182  002B72  C033  F07A         	movff	?___fladd+3,_turnleft$3216+3
  4183  002B76                     
  4184                           ;DC_motors.c: 156:     double delay = ((deg*2.332)+31.506) * 360/turnleft_calangle;
  4185  002B76  0E00               	movlw	0
  4186  002B78  6E1B               	movwf	___flmul@a^0,c
  4187  002B7A  0E00               	movlw	0
  4188  002B7C  6E1C               	movwf	(___flmul@a+1)^0,c
  4189  002B7E  0EB4               	movlw	180
  4190  002B80  6E1D               	movwf	(___flmul@a+2)^0,c
  4191  002B82  0E43               	movlw	67
  4192  002B84  6E1E               	movwf	(___flmul@a+3)^0,c
  4193  002B86  C077  F017         	movff	_turnleft$3216,___flmul@b
  4194  002B8A  C078  F018         	movff	_turnleft$3216+1,___flmul@b+1
  4195  002B8E  C079  F019         	movff	_turnleft$3216+2,___flmul@b+2
  4196  002B92  C07A  F01A         	movff	_turnleft$3216+3,___flmul@b+3
  4197  002B96  EC9A  F00C         	call	___flmul	;wreg free
  4198  002B9A  C017  F040         	movff	?___flmul,___fldiv@b
  4199  002B9E  C018  F041         	movff	?___flmul+1,___fldiv@b+1
  4200  002BA2  C019  F042         	movff	?___flmul+2,___fldiv@b+2
  4201  002BA6  C01A  F043         	movff	?___flmul+3,___fldiv@b+3
  4202  002BAA  C051  F009         	movff	_turnleft_calangle,___xxtofl@val	;volatile
  4203  002BAE  C052  F00A         	movff	_turnleft_calangle+1,___xxtofl@val+1	;volatile
  4204  002BB2  0E00               	movlw	0
  4205  002BB4  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  4206  002BB6  0EFF               	movlw	-1
  4207  002BB8  6E0B               	movwf	(___xxtofl@val+2)^0,c
  4208  002BBA  6E0C               	movwf	(___xxtofl@val+3)^0,c
  4209  002BBC  0E01               	movlw	1
  4210  002BBE  EC61  F017         	call	___xxtofl
  4211  002BC2  C009  F044         	movff	?___xxtofl,___fldiv@a
  4212  002BC6  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  4213  002BCA  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  4214  002BCE  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  4215  002BD2  ECAF  F00E         	call	___fldiv	;wreg free
  4216  002BD6  C040  F073         	movff	?___fldiv,turnleft@delay
  4217  002BDA  C041  F074         	movff	?___fldiv+1,turnleft@delay+1
  4218  002BDE  C042  F075         	movff	?___fldiv+2,turnleft@delay+2
  4219  002BE2  C043  F076         	movff	?___fldiv+3,turnleft@delay+3
  4220                           
  4221                           ;DC_motors.c: 157:     while((mL->power < 70) || (mR->power < 70)){
  4222  002BE6  EF29  F016         	goto	l4909
  4223  002BEA                     l4895:
  4224                           
  4225                           ;DC_motors.c: 158:         if (mL->power < 70) {mL->power += 10;}
  4226  002BEA  C06D  FFD9         	movff	turnleft@mL,fsr2l
  4227  002BEE  C06E  FFDA         	movff	turnleft@mL+1,fsr2h
  4228  002BF2  0E46               	movlw	70
  4229  002BF4  60DF               	cpfslt	indf2,c
  4230  002BF6  EFFF  F015         	goto	u5351
  4231  002BFA  EF01  F016         	goto	u5350
  4232  002BFE                     u5351:
  4233  002BFE  EF07  F016         	goto	l4899
  4234  002C02                     u5350:
  4235  002C02  C06D  FFD9         	movff	turnleft@mL,fsr2l
  4236  002C06  C06E  FFDA         	movff	turnleft@mL+1,fsr2h
  4237  002C0A  0E0A               	movlw	10
  4238  002C0C  26DF               	addwf	indf2,f,c
  4239  002C0E                     l4899:
  4240                           
  4241                           ;DC_motors.c: 159:         if (mR->power < 70) {mR->power += 10;}
  4242  002C0E  C06F  FFD9         	movff	turnleft@mR,fsr2l
  4243  002C12  C070  FFDA         	movff	turnleft@mR+1,fsr2h
  4244  002C16  0E46               	movlw	70
  4245  002C18  60DF               	cpfslt	indf2,c
  4246  002C1A  EF11  F016         	goto	u5361
  4247  002C1E  EF13  F016         	goto	u5360
  4248  002C22                     u5361:
  4249  002C22  EF19  F016         	goto	l4903
  4250  002C26                     u5360:
  4251  002C26  C06F  FFD9         	movff	turnleft@mR,fsr2l
  4252  002C2A  C070  FFDA         	movff	turnleft@mR+1,fsr2h
  4253  002C2E  0E0A               	movlw	10
  4254  002C30  26DF               	addwf	indf2,f,c
  4255  002C32                     l4903:
  4256                           
  4257                           ;DC_motors.c: 160:         DCmotors_setPWM(mL);
  4258  002C32  C06D  F017         	movff	turnleft@mL,DCmotors_setPWM@m
  4259  002C36  C06E  F018         	movff	turnleft@mL+1,DCmotors_setPWM@m+1
  4260  002C3A  EC77  F016         	call	_DCmotors_setPWM	;wreg free
  4261  002C3E                     
  4262                           ;DC_motors.c: 161:         DCmotors_setPWM(mR);
  4263  002C3E  C06F  F017         	movff	turnleft@mR,DCmotors_setPWM@m
  4264  002C42  C070  F018         	movff	turnleft@mR+1,DCmotors_setPWM@m+1
  4265  002C46  EC77  F016         	call	_DCmotors_setPWM	;wreg free
  4266  002C4A                     
  4267                           ;DC_motors.c: 162:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  4268  002C4A  0EA0               	movlw	160
  4269  002C4C                     u6717:
  4270  002C4C  D000               	nop2	
  4271  002C4E  2EE8               	decfsz	wreg,f,c
  4272  002C50  D7FD               	bra	u6717
  4273  002C52                     l4909:
  4274                           
  4275                           ;DC_motors.c: 157:     while((mL->power < 70) || (mR->power < 70)){
  4276  002C52  C06D  FFD9         	movff	turnleft@mL,fsr2l
  4277  002C56  C06E  FFDA         	movff	turnleft@mL+1,fsr2h
  4278  002C5A  0E45               	movlw	69
  4279  002C5C  64DF               	cpfsgt	indf2,c
  4280  002C5E  EF33  F016         	goto	u5371
  4281  002C62  EF35  F016         	goto	u5370
  4282  002C66                     u5371:
  4283  002C66  EFF5  F015         	goto	l4895
  4284  002C6A                     u5370:
  4285  002C6A  C06F  FFD9         	movff	turnleft@mR,fsr2l
  4286  002C6E  C070  FFDA         	movff	turnleft@mR+1,fsr2h
  4287  002C72  0E45               	movlw	69
  4288  002C74  64DF               	cpfsgt	indf2,c
  4289  002C76  EF3F  F016         	goto	u5381
  4290  002C7A  EF41  F016         	goto	u5380
  4291  002C7E                     u5381:
  4292  002C7E  EFF5  F015         	goto	l4895
  4293  002C82                     u5380:
  4294  002C82                     
  4295                           ;DC_motors.c: 164:     unsigned int i;;DC_motors.c: 165:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
  4296  002C82  0E00               	movlw	0
  4297  002C84  0100               	movlb	0	; () banked
  4298  002C86  6F7C               	movwf	(turnleft@i+1)& (0+255),b
  4299  002C88  0E00               	movlw	0
  4300  002C8A  6F7B               	movwf	turnleft@i& (0+255),b
  4301  002C8C  EF53  F016         	goto	l4919
  4302  002C90                     l4915:
  4303  002C90  0E15               	movlw	21
  4304  002C92  6E4C               	movwf	??_turnleft^0,c
  4305  002C94  0EC6               	movlw	198
  4306  002C96                     u6727:
  4307  002C96  2EE8               	decfsz	wreg,f,c
  4308  002C98  D7FE               	bra	u6727
  4309  002C9A  2E4C               	decfsz	??_turnleft^0,f,c
  4310  002C9C  D7FC               	bra	u6727
  4311  002C9E  D000               	nop2	
  4312  002CA0  0100               	movlb	0	; () banked
  4313  002CA2  4B7B               	infsnz	turnleft@i& (0+255),f,b
  4314  002CA4  2B7C               	incf	(turnleft@i+1)& (0+255),f,b
  4315  002CA6                     l4919:
  4316                           
  4317                           ; BSR set to: 0
  4318  002CA6  C07B  F009         	movff	turnleft@i,___xxtofl@val
  4319  002CAA  C07C  F00A         	movff	turnleft@i+1,___xxtofl@val+1
  4320  002CAE  6A0B               	clrf	(___xxtofl@val+2)^0,c
  4321  002CB0  6A0C               	clrf	(___xxtofl@val+3)^0,c
  4322  002CB2  0E00               	movlw	0
  4323  002CB4  EC61  F017         	call	___xxtofl
  4324  002CB8  C009  F017         	movff	?___xxtofl,___flge@ff1
  4325  002CBC  C00A  F018         	movff	?___xxtofl+1,___flge@ff1+1
  4326  002CC0  C00B  F019         	movff	?___xxtofl+2,___flge@ff1+2
  4327  002CC4  C00C  F01A         	movff	?___xxtofl+3,___flge@ff1+3
  4328  002CC8  C073  F01B         	movff	turnleft@delay,___flge@ff2
  4329  002CCC  C074  F01C         	movff	turnleft@delay+1,___flge@ff2+1
  4330  002CD0  C075  F01D         	movff	turnleft@delay+2,___flge@ff2+2
  4331  002CD4  C076  F01E         	movff	turnleft@delay+3,___flge@ff2+3
  4332  002CD8  ECA4  F019         	call	___flge	;wreg free
  4333  002CDC  A0D8               	btfss	status,0,c
  4334  002CDE  EF73  F016         	goto	u5391
  4335  002CE2  EF75  F016         	goto	u5390
  4336  002CE6                     u5391:
  4337  002CE6  EF48  F016         	goto	l4915
  4338  002CEA                     u5390:
  4339  002CEA                     
  4340                           ;DC_motors.c: 166:     LATFbits.LATF0 = 0;
  4341  002CEA  907E               	bcf	126,0,c	;volatile
  4342  002CEC  0012               	return		;funcret
  4343  002CEE                     __end_of_turnleft:
  4344                           	callstack 0
  4345                           
  4346 ;; *************** function ___flmul *****************
  4347 ;; Defined at:
  4348 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  b               4   22[COMRAM] void 
  4351 ;;  a               4   26[COMRAM] void 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  prod            4   41[COMRAM] struct .
  4354 ;;  grs             4   35[COMRAM] unsigned long 
  4355 ;;  temp            2   45[COMRAM] struct .
  4356 ;;  bexp            1   40[COMRAM] unsigned char 
  4357 ;;  aexp            1   39[COMRAM] unsigned char 
  4358 ;;  sign            1   34[COMRAM] unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  4   22[COMRAM] unsigned char 
  4361 ;; Registers used:
  4362 ;;		wreg, status,2, status,0, prodl, prodh
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4368 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4369 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4370 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4371 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4372 ;;Total ram usage:       25 bytes
  4373 ;; Hardware stack levels used: 1
  4374 ;; Hardware stack levels required when called: 7
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_turnleft
  4379 ;;		_turnright
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text16
  4384  001934                     __ptext16:
  4385                           	callstack 0
  4386  001934                     ___flmul:
  4387                           	callstack 20
  4388  001934  501A               	movf	(___flmul@b+3)^0,w,c
  4389  001936  0B80               	andlw	128
  4390  001938  6E23               	movwf	___flmul@sign^0,c
  4391  00193A  501A               	movf	(___flmul@b+3)^0,w,c
  4392  00193C  241A               	addwf	(___flmul@b+3)^0,w,c
  4393  00193E  6E29               	movwf	___flmul@bexp^0,c
  4394  001940  AE19               	btfss	(___flmul@b+2)^0,7,c
  4395  001942  EFA5  F00C         	goto	u3571
  4396  001946  EFA7  F00C         	goto	u3570
  4397  00194A                     u3571:
  4398  00194A  EFA8  F00C         	goto	l3731
  4399  00194E                     u3570:
  4400  00194E  8029               	bsf	___flmul@bexp^0,0,c
  4401  001950                     l3731:
  4402  001950  5029               	movf	___flmul@bexp^0,w,c
  4403  001952  B4D8               	btfsc	status,2,c
  4404  001954  EFAE  F00C         	goto	u3581
  4405  001958  EFB0  F00C         	goto	u3580
  4406  00195C                     u3581:
  4407  00195C  EFC3  F00C         	goto	l3739
  4408  001960                     u3580:
  4409  001960  2829               	incf	___flmul@bexp^0,w,c
  4410  001962  A4D8               	btfss	status,2,c
  4411  001964  EFB6  F00C         	goto	u3591
  4412  001968  EFB8  F00C         	goto	u3590
  4413  00196C                     u3591:
  4414  00196C  EFC0  F00C         	goto	l3737
  4415  001970                     u3590:
  4416  001970  0E00               	movlw	0
  4417  001972  6E17               	movwf	___flmul@b^0,c
  4418  001974  0E00               	movlw	0
  4419  001976  6E18               	movwf	(___flmul@b+1)^0,c
  4420  001978  0E00               	movlw	0
  4421  00197A  6E19               	movwf	(___flmul@b+2)^0,c
  4422  00197C  0E00               	movlw	0
  4423  00197E  6E1A               	movwf	(___flmul@b+3)^0,c
  4424  001980                     l3737:
  4425  001980  8E19               	bsf	(___flmul@b+2)^0,7,c
  4426  001982  EFCB  F00C         	goto	l3741
  4427  001986                     l3739:
  4428  001986  0E00               	movlw	0
  4429  001988  6E17               	movwf	___flmul@b^0,c
  4430  00198A  0E00               	movlw	0
  4431  00198C  6E18               	movwf	(___flmul@b+1)^0,c
  4432  00198E  0E00               	movlw	0
  4433  001990  6E19               	movwf	(___flmul@b+2)^0,c
  4434  001992  0E00               	movlw	0
  4435  001994  6E1A               	movwf	(___flmul@b+3)^0,c
  4436  001996                     l3741:
  4437  001996  501E               	movf	(___flmul@a+3)^0,w,c
  4438  001998  0B80               	andlw	128
  4439  00199A  1A23               	xorwf	___flmul@sign^0,f,c
  4440  00199C  501E               	movf	(___flmul@a+3)^0,w,c
  4441  00199E  241E               	addwf	(___flmul@a+3)^0,w,c
  4442  0019A0  6E28               	movwf	___flmul@aexp^0,c
  4443  0019A2  AE1D               	btfss	(___flmul@a+2)^0,7,c
  4444  0019A4  EFD6  F00C         	goto	u3601
  4445  0019A8  EFD8  F00C         	goto	u3600
  4446  0019AC                     u3601:
  4447  0019AC  EFD9  F00C         	goto	l3749
  4448  0019B0                     u3600:
  4449  0019B0  8028               	bsf	___flmul@aexp^0,0,c
  4450  0019B2                     l3749:
  4451  0019B2  5028               	movf	___flmul@aexp^0,w,c
  4452  0019B4  B4D8               	btfsc	status,2,c
  4453  0019B6  EFDF  F00C         	goto	u3611
  4454  0019BA  EFE1  F00C         	goto	u3610
  4455  0019BE                     u3611:
  4456  0019BE  EFF4  F00C         	goto	l3757
  4457  0019C2                     u3610:
  4458  0019C2  2828               	incf	___flmul@aexp^0,w,c
  4459  0019C4  A4D8               	btfss	status,2,c
  4460  0019C6  EFE7  F00C         	goto	u3621
  4461  0019CA  EFE9  F00C         	goto	u3620
  4462  0019CE                     u3621:
  4463  0019CE  EFF1  F00C         	goto	l3755
  4464  0019D2                     u3620:
  4465  0019D2  0E00               	movlw	0
  4466  0019D4  6E1B               	movwf	___flmul@a^0,c
  4467  0019D6  0E00               	movlw	0
  4468  0019D8  6E1C               	movwf	(___flmul@a+1)^0,c
  4469  0019DA  0E00               	movlw	0
  4470  0019DC  6E1D               	movwf	(___flmul@a+2)^0,c
  4471  0019DE  0E00               	movlw	0
  4472  0019E0  6E1E               	movwf	(___flmul@a+3)^0,c
  4473  0019E2                     l3755:
  4474  0019E2  8E1D               	bsf	(___flmul@a+2)^0,7,c
  4475  0019E4  EFFC  F00C         	goto	l1451
  4476  0019E8                     l3757:
  4477  0019E8  0E00               	movlw	0
  4478  0019EA  6E1B               	movwf	___flmul@a^0,c
  4479  0019EC  0E00               	movlw	0
  4480  0019EE  6E1C               	movwf	(___flmul@a+1)^0,c
  4481  0019F0  0E00               	movlw	0
  4482  0019F2  6E1D               	movwf	(___flmul@a+2)^0,c
  4483  0019F4  0E00               	movlw	0
  4484  0019F6  6E1E               	movwf	(___flmul@a+3)^0,c
  4485  0019F8                     l1451:
  4486  0019F8  5028               	movf	___flmul@aexp^0,w,c
  4487  0019FA  B4D8               	btfsc	status,2,c
  4488  0019FC  EF02  F00D         	goto	u3631
  4489  001A00  EF04  F00D         	goto	u3630
  4490  001A04                     u3631:
  4491  001A04  EF0C  F00D         	goto	l3761
  4492  001A08                     u3630:
  4493  001A08  5029               	movf	___flmul@bexp^0,w,c
  4494  001A0A  A4D8               	btfss	status,2,c
  4495  001A0C  EF0A  F00D         	goto	u3641
  4496  001A10  EF0C  F00D         	goto	u3640
  4497  001A14                     u3641:
  4498  001A14  EF16  F00D         	goto	l3765
  4499  001A18                     u3640:
  4500  001A18                     l3761:
  4501  001A18  0E00               	movlw	0
  4502  001A1A  6E17               	movwf	?___flmul^0,c
  4503  001A1C  0E00               	movlw	0
  4504  001A1E  6E18               	movwf	(?___flmul+1)^0,c
  4505  001A20  0E00               	movlw	0
  4506  001A22  6E19               	movwf	(?___flmul+2)^0,c
  4507  001A24  0E00               	movlw	0
  4508  001A26  6E1A               	movwf	(?___flmul+3)^0,c
  4509  001A28  EFAE  F00E         	goto	l1455
  4510  001A2C                     l3765:
  4511  001A2C  501D               	movf	(___flmul@a+2)^0,w,c
  4512  001A2E  0217               	mulwf	___flmul@b^0,c
  4513  001A30  CFF3 F02E          	movff	prodl,___flmul@temp
  4514  001A34  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4515  001A38  502E               	movf	___flmul@temp^0,w,c
  4516  001A3A  6E24               	movwf	___flmul@grs^0,c
  4517  001A3C  6A25               	clrf	(___flmul@grs+1)^0,c
  4518  001A3E  6A26               	clrf	(___flmul@grs+2)^0,c
  4519  001A40  6A27               	clrf	(___flmul@grs+3)^0,c
  4520  001A42  502F               	movf	(___flmul@temp+1)^0,w,c
  4521  001A44  6E2A               	movwf	___flmul@prod^0,c
  4522  001A46  6A2B               	clrf	(___flmul@prod+1)^0,c
  4523  001A48  6A2C               	clrf	(___flmul@prod+2)^0,c
  4524  001A4A  6A2D               	clrf	(___flmul@prod+3)^0,c
  4525  001A4C  501C               	movf	(___flmul@a+1)^0,w,c
  4526  001A4E  0218               	mulwf	(___flmul@b+1)^0,c
  4527  001A50  CFF3 F02E          	movff	prodl,___flmul@temp
  4528  001A54  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4529  001A58  502E               	movf	___flmul@temp^0,w,c
  4530  001A5A  2624               	addwf	___flmul@grs^0,f,c
  4531  001A5C  0E00               	movlw	0
  4532  001A5E  2225               	addwfc	(___flmul@grs+1)^0,f,c
  4533  001A60  2226               	addwfc	(___flmul@grs+2)^0,f,c
  4534  001A62  2227               	addwfc	(___flmul@grs+3)^0,f,c
  4535  001A64  502F               	movf	(___flmul@temp+1)^0,w,c
  4536  001A66  262A               	addwf	___flmul@prod^0,f,c
  4537  001A68  0E00               	movlw	0
  4538  001A6A  222B               	addwfc	(___flmul@prod+1)^0,f,c
  4539  001A6C  222C               	addwfc	(___flmul@prod+2)^0,f,c
  4540  001A6E  222D               	addwfc	(___flmul@prod+3)^0,f,c
  4541  001A70  501B               	movf	___flmul@a^0,w,c
  4542  001A72  0219               	mulwf	(___flmul@b+2)^0,c
  4543  001A74  CFF3 F02E          	movff	prodl,___flmul@temp
  4544  001A78  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4545  001A7C  502E               	movf	___flmul@temp^0,w,c
  4546  001A7E  2624               	addwf	___flmul@grs^0,f,c
  4547  001A80  0E00               	movlw	0
  4548  001A82  2225               	addwfc	(___flmul@grs+1)^0,f,c
  4549  001A84  2226               	addwfc	(___flmul@grs+2)^0,f,c
  4550  001A86  2227               	addwfc	(___flmul@grs+3)^0,f,c
  4551  001A88  502F               	movf	(___flmul@temp+1)^0,w,c
  4552  001A8A  262A               	addwf	___flmul@prod^0,f,c
  4553  001A8C  0E00               	movlw	0
  4554  001A8E  222B               	addwfc	(___flmul@prod+1)^0,f,c
  4555  001A90  222C               	addwfc	(___flmul@prod+2)^0,f,c
  4556  001A92  222D               	addwfc	(___flmul@prod+3)^0,f,c
  4557  001A94  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  4558  001A98  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  4559  001A9C  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  4560  001AA0  6A24               	clrf	___flmul@grs^0,c
  4561  001AA2  501B               	movf	___flmul@a^0,w,c
  4562  001AA4  0218               	mulwf	(___flmul@b+1)^0,c
  4563  001AA6  CFF3 F02E          	movff	prodl,___flmul@temp
  4564  001AAA  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4565  001AAE  502E               	movf	___flmul@temp^0,w,c
  4566  001AB0  2624               	addwf	___flmul@grs^0,f,c
  4567  001AB2  502F               	movf	(___flmul@temp+1)^0,w,c
  4568  001AB4  2225               	addwfc	(___flmul@grs+1)^0,f,c
  4569  001AB6  0E00               	movlw	0
  4570  001AB8  2226               	addwfc	(___flmul@grs+2)^0,f,c
  4571  001ABA  0E00               	movlw	0
  4572  001ABC  2227               	addwfc	(___flmul@grs+3)^0,f,c
  4573  001ABE  501C               	movf	(___flmul@a+1)^0,w,c
  4574  001AC0  0217               	mulwf	___flmul@b^0,c
  4575  001AC2  CFF3 F02E          	movff	prodl,___flmul@temp
  4576  001AC6  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4577  001ACA  502E               	movf	___flmul@temp^0,w,c
  4578  001ACC  2624               	addwf	___flmul@grs^0,f,c
  4579  001ACE  502F               	movf	(___flmul@temp+1)^0,w,c
  4580  001AD0  2225               	addwfc	(___flmul@grs+1)^0,f,c
  4581  001AD2  0E00               	movlw	0
  4582  001AD4  2226               	addwfc	(___flmul@grs+2)^0,f,c
  4583  001AD6  0E00               	movlw	0
  4584  001AD8  2227               	addwfc	(___flmul@grs+3)^0,f,c
  4585  001ADA  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  4586  001ADE  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  4587  001AE2  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  4588  001AE6  6A24               	clrf	___flmul@grs^0,c
  4589  001AE8  501B               	movf	___flmul@a^0,w,c
  4590  001AEA  0217               	mulwf	___flmul@b^0,c
  4591  001AEC  CFF3 F02E          	movff	prodl,___flmul@temp
  4592  001AF0  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4593  001AF4  502E               	movf	___flmul@temp^0,w,c
  4594  001AF6  2624               	addwf	___flmul@grs^0,f,c
  4595  001AF8  502F               	movf	(___flmul@temp+1)^0,w,c
  4596  001AFA  2225               	addwfc	(___flmul@grs+1)^0,f,c
  4597  001AFC  0E00               	movlw	0
  4598  001AFE  2226               	addwfc	(___flmul@grs+2)^0,f,c
  4599  001B00  0E00               	movlw	0
  4600  001B02  2227               	addwfc	(___flmul@grs+3)^0,f,c
  4601  001B04  501D               	movf	(___flmul@a+2)^0,w,c
  4602  001B06  0218               	mulwf	(___flmul@b+1)^0,c
  4603  001B08  CFF3 F02E          	movff	prodl,___flmul@temp
  4604  001B0C  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4605  001B10  502E               	movf	___flmul@temp^0,w,c
  4606  001B12  262A               	addwf	___flmul@prod^0,f,c
  4607  001B14  502F               	movf	(___flmul@temp+1)^0,w,c
  4608  001B16  222B               	addwfc	(___flmul@prod+1)^0,f,c
  4609  001B18  0E00               	movlw	0
  4610  001B1A  222C               	addwfc	(___flmul@prod+2)^0,f,c
  4611  001B1C  0E00               	movlw	0
  4612  001B1E  222D               	addwfc	(___flmul@prod+3)^0,f,c
  4613  001B20  501C               	movf	(___flmul@a+1)^0,w,c
  4614  001B22  0219               	mulwf	(___flmul@b+2)^0,c
  4615  001B24  CFF3 F02E          	movff	prodl,___flmul@temp
  4616  001B28  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4617  001B2C  502E               	movf	___flmul@temp^0,w,c
  4618  001B2E  262A               	addwf	___flmul@prod^0,f,c
  4619  001B30  502F               	movf	(___flmul@temp+1)^0,w,c
  4620  001B32  222B               	addwfc	(___flmul@prod+1)^0,f,c
  4621  001B34  0E00               	movlw	0
  4622  001B36  222C               	addwfc	(___flmul@prod+2)^0,f,c
  4623  001B38  0E00               	movlw	0
  4624  001B3A  222D               	addwfc	(___flmul@prod+3)^0,f,c
  4625  001B3C  501D               	movf	(___flmul@a+2)^0,w,c
  4626  001B3E  0219               	mulwf	(___flmul@b+2)^0,c
  4627  001B40  CFF3 F02E          	movff	prodl,___flmul@temp
  4628  001B44  CFF4 F02F          	movff	prodh,___flmul@temp+1
  4629  001B48  502E               	movf	___flmul@temp^0,w,c
  4630  001B4A  6E1F               	movwf	??___flmul^0,c
  4631  001B4C  502F               	movf	(___flmul@temp+1)^0,w,c
  4632  001B4E  6E20               	movwf	(??___flmul+1)^0,c
  4633  001B50  6A21               	clrf	(??___flmul+2)^0,c
  4634  001B52  6A22               	clrf	(??___flmul+3)^0,c
  4635  001B54  C021  F022         	movff	??___flmul+2,??___flmul+3
  4636  001B58  C020  F021         	movff	??___flmul+1,??___flmul+2
  4637  001B5C  C01F  F020         	movff	??___flmul,??___flmul+1
  4638  001B60  6A1F               	clrf	??___flmul^0,c
  4639  001B62  501F               	movf	??___flmul^0,w,c
  4640  001B64  262A               	addwf	___flmul@prod^0,f,c
  4641  001B66  5020               	movf	(??___flmul+1)^0,w,c
  4642  001B68  222B               	addwfc	(___flmul@prod+1)^0,f,c
  4643  001B6A  5021               	movf	(??___flmul+2)^0,w,c
  4644  001B6C  222C               	addwfc	(___flmul@prod+2)^0,f,c
  4645  001B6E  5022               	movf	(??___flmul+3)^0,w,c
  4646  001B70  222D               	addwfc	(___flmul@prod+3)^0,f,c
  4647  001B72  C024  F01F         	movff	___flmul@grs,??___flmul
  4648  001B76  C025  F020         	movff	___flmul@grs+1,??___flmul+1
  4649  001B7A  C026  F021         	movff	___flmul@grs+2,??___flmul+2
  4650  001B7E  C027  F022         	movff	___flmul@grs+3,??___flmul+3
  4651  001B82  0E19               	movlw	25
  4652  001B84  EFC9  F00D         	goto	u3650
  4653  001B88                     u3655:
  4654  001B88  90D8               	bcf	status,0,c
  4655  001B8A  3222               	rrcf	(??___flmul+3)^0,f,c
  4656  001B8C  3221               	rrcf	(??___flmul+2)^0,f,c
  4657  001B8E  3220               	rrcf	(??___flmul+1)^0,f,c
  4658  001B90  321F               	rrcf	??___flmul^0,f,c
  4659  001B92                     u3650:
  4660  001B92  2EE8               	decfsz	wreg,f,c
  4661  001B94  EFC4  F00D         	goto	u3655
  4662  001B98  501F               	movf	??___flmul^0,w,c
  4663  001B9A  262A               	addwf	___flmul@prod^0,f,c
  4664  001B9C  5020               	movf	(??___flmul+1)^0,w,c
  4665  001B9E  222B               	addwfc	(___flmul@prod+1)^0,f,c
  4666  001BA0  5021               	movf	(??___flmul+2)^0,w,c
  4667  001BA2  222C               	addwfc	(___flmul@prod+2)^0,f,c
  4668  001BA4  5022               	movf	(??___flmul+3)^0,w,c
  4669  001BA6  222D               	addwfc	(___flmul@prod+3)^0,f,c
  4670  001BA8  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  4671  001BAC  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  4672  001BB0  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  4673  001BB4  6A24               	clrf	___flmul@grs^0,c
  4674  001BB6  5028               	movf	___flmul@aexp^0,w,c
  4675  001BB8  C029  F01F         	movff	___flmul@bexp,??___flmul
  4676  001BBC  6A20               	clrf	(??___flmul+1)^0,c
  4677  001BBE  261F               	addwf	??___flmul^0,f,c
  4678  001BC0  0E00               	movlw	0
  4679  001BC2  2220               	addwfc	(??___flmul+1)^0,f,c
  4680  001BC4  0E82               	movlw	130
  4681  001BC6  241F               	addwf	??___flmul^0,w,c
  4682  001BC8  6E2E               	movwf	___flmul@temp^0,c
  4683  001BCA  0EFF               	movlw	255
  4684  001BCC  2020               	addwfc	(??___flmul+1)^0,w,c
  4685  001BCE  6E2F               	movwf	(___flmul@temp+1)^0,c
  4686  001BD0  EFFF  F00D         	goto	l3813
  4687  001BD4                     l3807:
  4688  001BD4  90D8               	bcf	status,0,c
  4689  001BD6  362A               	rlcf	___flmul@prod^0,f,c
  4690  001BD8  362B               	rlcf	(___flmul@prod+1)^0,f,c
  4691  001BDA  362C               	rlcf	(___flmul@prod+2)^0,f,c
  4692  001BDC  362D               	rlcf	(___flmul@prod+3)^0,f,c
  4693  001BDE  AE27               	btfss	(___flmul@grs+3)^0,7,c
  4694  001BE0  EFF4  F00D         	goto	u3661
  4695  001BE4  EFF6  F00D         	goto	u3660
  4696  001BE8                     u3661:
  4697  001BE8  EFF7  F00D         	goto	l1458
  4698  001BEC                     u3660:
  4699  001BEC  802A               	bsf	___flmul@prod^0,0,c
  4700  001BEE                     l1458:
  4701  001BEE  90D8               	bcf	status,0,c
  4702  001BF0  3624               	rlcf	___flmul@grs^0,f,c
  4703  001BF2  3625               	rlcf	(___flmul@grs+1)^0,f,c
  4704  001BF4  3626               	rlcf	(___flmul@grs+2)^0,f,c
  4705  001BF6  3627               	rlcf	(___flmul@grs+3)^0,f,c
  4706  001BF8  062E               	decf	___flmul@temp^0,f,c
  4707  001BFA  A0D8               	btfss	status,0,c
  4708  001BFC  062F               	decf	(___flmul@temp+1)^0,f,c
  4709  001BFE                     l3813:
  4710  001BFE  AE2C               	btfss	(___flmul@prod+2)^0,7,c
  4711  001C00  EF04  F00E         	goto	u3671
  4712  001C04  EF06  F00E         	goto	u3670
  4713  001C08                     u3671:
  4714  001C08  EFEA  F00D         	goto	l3807
  4715  001C0C                     u3670:
  4716  001C0C  0E00               	movlw	0
  4717  001C0E  6E28               	movwf	___flmul@aexp^0,c
  4718  001C10  AE27               	btfss	(___flmul@grs+3)^0,7,c
  4719  001C12  EF0D  F00E         	goto	u3681
  4720  001C16  EF0F  F00E         	goto	u3680
  4721  001C1A                     u3681:
  4722  001C1A  EF33  F00E         	goto	l1460
  4723  001C1E                     u3680:
  4724  001C1E  0EFF               	movlw	255
  4725  001C20  1424               	andwf	___flmul@grs^0,w,c
  4726  001C22  6E1F               	movwf	??___flmul^0,c
  4727  001C24  0EFF               	movlw	255
  4728  001C26  1425               	andwf	(___flmul@grs+1)^0,w,c
  4729  001C28  6E20               	movwf	(??___flmul+1)^0,c
  4730  001C2A  0EFF               	movlw	255
  4731  001C2C  1426               	andwf	(___flmul@grs+2)^0,w,c
  4732  001C2E  6E21               	movwf	(??___flmul+2)^0,c
  4733  001C30  0E7F               	movlw	127
  4734  001C32  1427               	andwf	(___flmul@grs+3)^0,w,c
  4735  001C34  6E22               	movwf	(??___flmul+3)^0,c
  4736  001C36  501F               	movf	??___flmul^0,w,c
  4737  001C38  1020               	iorwf	(??___flmul+1)^0,w,c
  4738  001C3A  1021               	iorwf	(??___flmul+2)^0,w,c
  4739  001C3C  1022               	iorwf	(??___flmul+3)^0,w,c
  4740  001C3E  B4D8               	btfsc	status,2,c
  4741  001C40  EF24  F00E         	goto	u3691
  4742  001C44  EF26  F00E         	goto	u3690
  4743  001C48                     u3691:
  4744  001C48  EF2A  F00E         	goto	l1461
  4745  001C4C                     u3690:
  4746  001C4C                     l3821:
  4747  001C4C  0E01               	movlw	1
  4748  001C4E  6E28               	movwf	___flmul@aexp^0,c
  4749  001C50  EF33  F00E         	goto	l1460
  4750  001C54                     l1461:
  4751  001C54  A02A               	btfss	___flmul@prod^0,0,c
  4752  001C56  EF2F  F00E         	goto	u3701
  4753  001C5A  EF31  F00E         	goto	u3700
  4754  001C5E                     u3701:
  4755  001C5E  EF33  F00E         	goto	l1460
  4756  001C62                     u3700:
  4757  001C62  EF26  F00E         	goto	l3821
  4758  001C66                     l1460:
  4759  001C66  5028               	movf	___flmul@aexp^0,w,c
  4760  001C68  B4D8               	btfsc	status,2,c
  4761  001C6A  EF39  F00E         	goto	u3711
  4762  001C6E  EF3B  F00E         	goto	u3710
  4763  001C72                     u3711:
  4764  001C72  EF5F  F00E         	goto	l3833
  4765  001C76                     u3710:
  4766  001C76  0E01               	movlw	1
  4767  001C78  262A               	addwf	___flmul@prod^0,f,c
  4768  001C7A  0E00               	movlw	0
  4769  001C7C  222B               	addwfc	(___flmul@prod+1)^0,f,c
  4770  001C7E  222C               	addwfc	(___flmul@prod+2)^0,f,c
  4771  001C80  222D               	addwfc	(___flmul@prod+3)^0,f,c
  4772  001C82  A02D               	btfss	(___flmul@prod+3)^0,0,c
  4773  001C84  EF46  F00E         	goto	u3721
  4774  001C88  EF48  F00E         	goto	u3720
  4775  001C8C                     u3721:
  4776  001C8C  EF5F  F00E         	goto	l3833
  4777  001C90                     u3720:
  4778  001C90  C02A  F01F         	movff	___flmul@prod,??___flmul
  4779  001C94  C02B  F020         	movff	___flmul@prod+1,??___flmul+1
  4780  001C98  C02C  F021         	movff	___flmul@prod+2,??___flmul+2
  4781  001C9C  C02D  F022         	movff	___flmul@prod+3,??___flmul+3
  4782  001CA0  3422               	rlcf	(??___flmul+3)^0,w,c
  4783  001CA2  3222               	rrcf	(??___flmul+3)^0,f,c
  4784  001CA4  3221               	rrcf	(??___flmul+2)^0,f,c
  4785  001CA6  3220               	rrcf	(??___flmul+1)^0,f,c
  4786  001CA8  321F               	rrcf	??___flmul^0,f,c
  4787  001CAA  C01F  F02A         	movff	??___flmul,___flmul@prod
  4788  001CAE  C020  F02B         	movff	??___flmul+1,___flmul@prod+1
  4789  001CB2  C021  F02C         	movff	??___flmul+2,___flmul@prod+2
  4790  001CB6  C022  F02D         	movff	??___flmul+3,___flmul@prod+3
  4791  001CBA  4A2E               	infsnz	___flmul@temp^0,f,c
  4792  001CBC  2A2F               	incf	(___flmul@temp+1)^0,f,c
  4793  001CBE                     l3833:
  4794  001CBE  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  4795  001CC0  EF6A  F00E         	goto	u3731
  4796  001CC4  502F               	movf	(___flmul@temp+1)^0,w,c
  4797  001CC6  E108               	bnz	u3730
  4798  001CC8  282E               	incf	___flmul@temp^0,w,c
  4799  001CCA  A0D8               	btfss	status,0,c
  4800  001CCC  EF6A  F00E         	goto	u3731
  4801  001CD0  EF6C  F00E         	goto	u3730
  4802  001CD4                     u3731:
  4803  001CD4  EF76  F00E         	goto	l3837
  4804  001CD8                     u3730:
  4805  001CD8  0E00               	movlw	0
  4806  001CDA  6E2A               	movwf	___flmul@prod^0,c
  4807  001CDC  0E00               	movlw	0
  4808  001CDE  6E2B               	movwf	(___flmul@prod+1)^0,c
  4809  001CE0  0E80               	movlw	128
  4810  001CE2  6E2C               	movwf	(___flmul@prod+2)^0,c
  4811  001CE4  0E7F               	movlw	127
  4812  001CE6  6E2D               	movwf	(___flmul@prod+3)^0,c
  4813  001CE8  EFA4  F00E         	goto	l3849
  4814  001CEC                     l3837:
  4815  001CEC  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  4816  001CEE  EF83  F00E         	goto	u3740
  4817  001CF2  502F               	movf	(___flmul@temp+1)^0,w,c
  4818  001CF4  E106               	bnz	u3741
  4819  001CF6  042E               	decf	___flmul@temp^0,w,c
  4820  001CF8  B0D8               	btfsc	status,0,c
  4821  001CFA  EF81  F00E         	goto	u3741
  4822  001CFE  EF83  F00E         	goto	u3740
  4823  001D02                     u3741:
  4824  001D02  EF8F  F00E         	goto	l1468
  4825  001D06                     u3740:
  4826  001D06  0E00               	movlw	0
  4827  001D08  6E2A               	movwf	___flmul@prod^0,c
  4828  001D0A  0E00               	movlw	0
  4829  001D0C  6E2B               	movwf	(___flmul@prod+1)^0,c
  4830  001D0E  0E00               	movlw	0
  4831  001D10  6E2C               	movwf	(___flmul@prod+2)^0,c
  4832  001D12  0E00               	movlw	0
  4833  001D14  6E2D               	movwf	(___flmul@prod+3)^0,c
  4834  001D16  0E00               	movlw	0
  4835  001D18  6E23               	movwf	___flmul@sign^0,c
  4836  001D1A  EFA4  F00E         	goto	l3849
  4837  001D1E                     l1468:
  4838  001D1E  C02E  F029         	movff	___flmul@temp,___flmul@bexp
  4839  001D22  0EFF               	movlw	255
  4840  001D24  162A               	andwf	___flmul@prod^0,f,c
  4841  001D26  0EFF               	movlw	255
  4842  001D28  162B               	andwf	(___flmul@prod+1)^0,f,c
  4843  001D2A  0E7F               	movlw	127
  4844  001D2C  162C               	andwf	(___flmul@prod+2)^0,f,c
  4845  001D2E  0E00               	movlw	0
  4846  001D30  162D               	andwf	(___flmul@prod+3)^0,f,c
  4847  001D32  A029               	btfss	___flmul@bexp^0,0,c
  4848  001D34  EF9E  F00E         	goto	u3751
  4849  001D38  EFA0  F00E         	goto	u3750
  4850  001D3C                     u3751:
  4851  001D3C  EFA1  F00E         	goto	l3847
  4852  001D40                     u3750:
  4853  001D40  8E2C               	bsf	(___flmul@prod+2)^0,7,c
  4854  001D42                     l3847:
  4855  001D42  90D8               	bcf	status,0,c
  4856  001D44  3029               	rrcf	___flmul@bexp^0,w,c
  4857  001D46  6E2D               	movwf	(___flmul@prod+3)^0,c
  4858  001D48                     l3849:
  4859  001D48  5023               	movf	___flmul@sign^0,w,c
  4860  001D4A  122D               	iorwf	(___flmul@prod+3)^0,f,c
  4861  001D4C  C02A  F017         	movff	___flmul@prod,?___flmul
  4862  001D50  C02B  F018         	movff	___flmul@prod+1,?___flmul+1
  4863  001D54  C02C  F019         	movff	___flmul@prod+2,?___flmul+2
  4864  001D58  C02D  F01A         	movff	___flmul@prod+3,?___flmul+3
  4865  001D5C                     l1455:
  4866  001D5C  0012               	return		;funcret
  4867  001D5E                     __end_of___flmul:
  4868                           	callstack 0
  4869                           
  4870 ;; *************** function ___flge *****************
  4871 ;; Defined at:
  4872 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  ff1             4   22[COMRAM] unsigned char 
  4875 ;;  ff2             4   26[COMRAM] unsigned char 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;		None               void
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4887 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4889 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4890 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4891 ;;Total ram usage:       12 bytes
  4892 ;; Hardware stack levels used: 1
  4893 ;; Hardware stack levels required when called: 7
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_colourcards_readRGBC
  4898 ;;		_turnleft
  4899 ;;		_turnright
  4900 ;;		_colourcards_testingRGBC2
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text17
  4905  003348                     __ptext17:
  4906                           	callstack 0
  4907  003348                     ___flge:
  4908                           	callstack 20
  4909  003348  0E00               	movlw	0
  4910  00334A  1417               	andwf	___flge@ff1^0,w,c
  4911  00334C  6E1F               	movwf	??___flge^0,c
  4912  00334E  0E00               	movlw	0
  4913  003350  1418               	andwf	(___flge@ff1+1)^0,w,c
  4914  003352  6E20               	movwf	(??___flge+1)^0,c
  4915  003354  0E80               	movlw	128
  4916  003356  1419               	andwf	(___flge@ff1+2)^0,w,c
  4917  003358  6E21               	movwf	(??___flge+2)^0,c
  4918  00335A  0E7F               	movlw	127
  4919  00335C  141A               	andwf	(___flge@ff1+3)^0,w,c
  4920  00335E  6E22               	movwf	(??___flge+3)^0,c
  4921  003360  501F               	movf	??___flge^0,w,c
  4922  003362  1020               	iorwf	(??___flge+1)^0,w,c
  4923  003364  1021               	iorwf	(??___flge+2)^0,w,c
  4924  003366  1022               	iorwf	(??___flge+3)^0,w,c
  4925  003368  A4D8               	btfss	status,2,c
  4926  00336A  EFB9  F019         	goto	u3761
  4927  00336E  EFBB  F019         	goto	u3760
  4928  003372                     u3761:
  4929  003372  EFC3  F019         	goto	l3859
  4930  003376                     u3760:
  4931  003376  0E00               	movlw	0
  4932  003378  6E17               	movwf	___flge@ff1^0,c
  4933  00337A  0E00               	movlw	0
  4934  00337C  6E18               	movwf	(___flge@ff1+1)^0,c
  4935  00337E  0E00               	movlw	0
  4936  003380  6E19               	movwf	(___flge@ff1+2)^0,c
  4937  003382  0E00               	movlw	0
  4938  003384  6E1A               	movwf	(___flge@ff1+3)^0,c
  4939  003386                     l3859:
  4940  003386  0E00               	movlw	0
  4941  003388  141B               	andwf	___flge@ff2^0,w,c
  4942  00338A  6E1F               	movwf	??___flge^0,c
  4943  00338C  0E00               	movlw	0
  4944  00338E  141C               	andwf	(___flge@ff2+1)^0,w,c
  4945  003390  6E20               	movwf	(??___flge+1)^0,c
  4946  003392  0E80               	movlw	128
  4947  003394  141D               	andwf	(___flge@ff2+2)^0,w,c
  4948  003396  6E21               	movwf	(??___flge+2)^0,c
  4949  003398  0E7F               	movlw	127
  4950  00339A  141E               	andwf	(___flge@ff2+3)^0,w,c
  4951  00339C  6E22               	movwf	(??___flge+3)^0,c
  4952  00339E  501F               	movf	??___flge^0,w,c
  4953  0033A0  1020               	iorwf	(??___flge+1)^0,w,c
  4954  0033A2  1021               	iorwf	(??___flge+2)^0,w,c
  4955  0033A4  1022               	iorwf	(??___flge+3)^0,w,c
  4956  0033A6  A4D8               	btfss	status,2,c
  4957  0033A8  EFD8  F019         	goto	u3771
  4958  0033AC  EFDA  F019         	goto	u3770
  4959  0033B0                     u3771:
  4960  0033B0  EFE2  F019         	goto	l3863
  4961  0033B4                     u3770:
  4962  0033B4  0E00               	movlw	0
  4963  0033B6  6E1B               	movwf	___flge@ff2^0,c
  4964  0033B8  0E00               	movlw	0
  4965  0033BA  6E1C               	movwf	(___flge@ff2+1)^0,c
  4966  0033BC  0E00               	movlw	0
  4967  0033BE  6E1D               	movwf	(___flge@ff2+2)^0,c
  4968  0033C0  0E00               	movlw	0
  4969  0033C2  6E1E               	movwf	(___flge@ff2+3)^0,c
  4970  0033C4                     l3863:
  4971  0033C4  AE1A               	btfss	(___flge@ff1+3)^0,7,c
  4972  0033C6  EFE7  F019         	goto	u3781
  4973  0033CA  EFE9  F019         	goto	u3780
  4974  0033CE                     u3781:
  4975  0033CE  EFF2  F019         	goto	l3867
  4976  0033D2                     u3780:
  4977  0033D2  6C17               	negf	___flge@ff1^0,c
  4978  0033D4  1E18               	comf	(___flge@ff1+1)^0,f,c
  4979  0033D6  B0D8               	btfsc	status,0,c
  4980  0033D8  2A18               	incf	(___flge@ff1+1)^0,f,c
  4981  0033DA  1E19               	comf	(___flge@ff1+2)^0,f,c
  4982  0033DC  B0D8               	btfsc	status,0,c
  4983  0033DE  2A19               	incf	(___flge@ff1+2)^0,f,c
  4984  0033E0  0E80               	movlw	128
  4985  0033E2  561A               	subfwb	(___flge@ff1+3)^0,f,c
  4986  0033E4                     l3867:
  4987  0033E4  AE1E               	btfss	(___flge@ff2+3)^0,7,c
  4988  0033E6  EFF7  F019         	goto	u3791
  4989  0033EA  EFF9  F019         	goto	u3790
  4990  0033EE                     u3791:
  4991  0033EE  EF02  F01A         	goto	l1102
  4992  0033F2                     u3790:
  4993  0033F2  6C1B               	negf	___flge@ff2^0,c
  4994  0033F4  1E1C               	comf	(___flge@ff2+1)^0,f,c
  4995  0033F6  B0D8               	btfsc	status,0,c
  4996  0033F8  2A1C               	incf	(___flge@ff2+1)^0,f,c
  4997  0033FA  1E1D               	comf	(___flge@ff2+2)^0,f,c
  4998  0033FC  B0D8               	btfsc	status,0,c
  4999  0033FE  2A1D               	incf	(___flge@ff2+2)^0,f,c
  5000  003400  0E80               	movlw	128
  5001  003402  561E               	subfwb	(___flge@ff2+3)^0,f,c
  5002  003404                     l1102:
  5003  003404  0E00               	movlw	0
  5004  003406  1A17               	xorwf	___flge@ff1^0,f,c
  5005  003408  0E00               	movlw	0
  5006  00340A  1A18               	xorwf	(___flge@ff1+1)^0,f,c
  5007  00340C  0E00               	movlw	0
  5008  00340E  1A19               	xorwf	(___flge@ff1+2)^0,f,c
  5009  003410  0E80               	movlw	128
  5010  003412  1A1A               	xorwf	(___flge@ff1+3)^0,f,c
  5011  003414  0E00               	movlw	0
  5012  003416  1A1B               	xorwf	___flge@ff2^0,f,c
  5013  003418  0E00               	movlw	0
  5014  00341A  1A1C               	xorwf	(___flge@ff2+1)^0,f,c
  5015  00341C  0E00               	movlw	0
  5016  00341E  1A1D               	xorwf	(___flge@ff2+2)^0,f,c
  5017  003420  0E80               	movlw	128
  5018  003422  1A1E               	xorwf	(___flge@ff2+3)^0,f,c
  5019  003424  501B               	movf	___flge@ff2^0,w,c
  5020  003426  5C17               	subwf	___flge@ff1^0,w,c
  5021  003428  501C               	movf	(___flge@ff2+1)^0,w,c
  5022  00342A  5818               	subwfb	(___flge@ff1+1)^0,w,c
  5023  00342C  501D               	movf	(___flge@ff2+2)^0,w,c
  5024  00342E  5819               	subwfb	(___flge@ff1+2)^0,w,c
  5025  003430  501E               	movf	(___flge@ff2+3)^0,w,c
  5026  003432  581A               	subwfb	(___flge@ff1+3)^0,w,c
  5027  003434  B0D8               	btfsc	status,0,c
  5028  003436  EF1F  F01A         	goto	u3801
  5029  00343A  EF21  F01A         	goto	u3800
  5030  00343E                     u3801:
  5031  00343E  EF24  F01A         	goto	l3873
  5032  003442                     u3800:
  5033  003442  90D8               	bcf	status,0,c
  5034  003444  EF25  F01A         	goto	l1107
  5035  003448                     l3873:
  5036  003448  80D8               	bsf	status,0,c
  5037  00344A                     l1107:
  5038  00344A  0012               	return		;funcret
  5039  00344C                     __end_of___flge:
  5040                           	callstack 0
  5041                           
  5042 ;; *************** function ___fladd *****************
  5043 ;; Defined at:
  5044 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  b               4   47[COMRAM] unsigned char 
  5047 ;;  a               4   51[COMRAM] unsigned char 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  grs             1   62[COMRAM] unsigned char 
  5050 ;;  bexp            1   61[COMRAM] unsigned char 
  5051 ;;  aexp            1   60[COMRAM] unsigned char 
  5052 ;;  signs           1   59[COMRAM] unsigned char 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  4   47[COMRAM] unsigned char 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2, status,0
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5062 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5063 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5064 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5065 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5066 ;;Total ram usage:       16 bytes
  5067 ;; Hardware stack levels used: 1
  5068 ;; Hardware stack levels required when called: 7
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_turnleft
  5073 ;;		_turnright
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text18
  5078  001474                     __ptext18:
  5079                           	callstack 0
  5080  001474                     ___fladd:
  5081                           	callstack 20
  5082  001474  5033               	movf	(___fladd@b+3)^0,w,c
  5083  001476  0B80               	andlw	128
  5084  001478  6E3C               	movwf	___fladd@signs^0,c
  5085  00147A  5033               	movf	(___fladd@b+3)^0,w,c
  5086  00147C  2433               	addwf	(___fladd@b+3)^0,w,c
  5087  00147E  6E3E               	movwf	___fladd@bexp^0,c
  5088  001480  AE32               	btfss	(___fladd@b+2)^0,7,c
  5089  001482  EF45  F00A         	goto	u2951
  5090  001486  EF47  F00A         	goto	u2950
  5091  00148A                     u2951:
  5092  00148A  EF48  F00A         	goto	l3391
  5093  00148E                     u2950:
  5094  00148E  803E               	bsf	___fladd@bexp^0,0,c
  5095  001490                     l3391:
  5096  001490  503E               	movf	___fladd@bexp^0,w,c
  5097  001492  B4D8               	btfsc	status,2,c
  5098  001494  EF4E  F00A         	goto	u2961
  5099  001498  EF50  F00A         	goto	u2960
  5100  00149C                     u2961:
  5101  00149C  EF65  F00A         	goto	l3401
  5102  0014A0                     u2960:
  5103  0014A0  283E               	incf	___fladd@bexp^0,w,c
  5104  0014A2  A4D8               	btfss	status,2,c
  5105  0014A4  EF56  F00A         	goto	u2971
  5106  0014A8  EF58  F00A         	goto	u2970
  5107  0014AC                     u2971:
  5108  0014AC  EF60  F00A         	goto	l3397
  5109  0014B0                     u2970:
  5110  0014B0  0E00               	movlw	0
  5111  0014B2  6E30               	movwf	___fladd@b^0,c
  5112  0014B4  0E00               	movlw	0
  5113  0014B6  6E31               	movwf	(___fladd@b+1)^0,c
  5114  0014B8  0E00               	movlw	0
  5115  0014BA  6E32               	movwf	(___fladd@b+2)^0,c
  5116  0014BC  0E00               	movlw	0
  5117  0014BE  6E33               	movwf	(___fladd@b+3)^0,c
  5118  0014C0                     l3397:
  5119  0014C0  8E32               	bsf	(___fladd@b+2)^0,7,c
  5120  0014C2  0E00               	movlw	0
  5121  0014C4  6E33               	movwf	(___fladd@b+3)^0,c
  5122  0014C6  EF6D  F00A         	goto	l3403
  5123  0014CA                     l3401:
  5124  0014CA  0E00               	movlw	0
  5125  0014CC  6E30               	movwf	___fladd@b^0,c
  5126  0014CE  0E00               	movlw	0
  5127  0014D0  6E31               	movwf	(___fladd@b+1)^0,c
  5128  0014D2  0E00               	movlw	0
  5129  0014D4  6E32               	movwf	(___fladd@b+2)^0,c
  5130  0014D6  0E00               	movlw	0
  5131  0014D8  6E33               	movwf	(___fladd@b+3)^0,c
  5132  0014DA                     l3403:
  5133  0014DA  5037               	movf	(___fladd@a+3)^0,w,c
  5134  0014DC  0B80               	andlw	128
  5135  0014DE  6E3D               	movwf	___fladd@aexp^0,c
  5136  0014E0  503C               	movf	___fladd@signs^0,w,c
  5137  0014E2  183D               	xorwf	___fladd@aexp^0,w,c
  5138  0014E4  B4D8               	btfsc	status,2,c
  5139  0014E6  EF77  F00A         	goto	u2981
  5140  0014EA  EF79  F00A         	goto	u2980
  5141  0014EE                     u2981:
  5142  0014EE  EF7A  F00A         	goto	l3409
  5143  0014F2                     u2980:
  5144  0014F2  8C3C               	bsf	___fladd@signs^0,6,c
  5145  0014F4                     l3409:
  5146  0014F4  5037               	movf	(___fladd@a+3)^0,w,c
  5147  0014F6  2437               	addwf	(___fladd@a+3)^0,w,c
  5148  0014F8  6E3D               	movwf	___fladd@aexp^0,c
  5149  0014FA  AE36               	btfss	(___fladd@a+2)^0,7,c
  5150  0014FC  EF82  F00A         	goto	u2991
  5151  001500  EF84  F00A         	goto	u2990
  5152  001504                     u2991:
  5153  001504  EF85  F00A         	goto	l3415
  5154  001508                     u2990:
  5155  001508  803D               	bsf	___fladd@aexp^0,0,c
  5156  00150A                     l3415:
  5157  00150A  503D               	movf	___fladd@aexp^0,w,c
  5158  00150C  B4D8               	btfsc	status,2,c
  5159  00150E  EF8B  F00A         	goto	u3001
  5160  001512  EF8D  F00A         	goto	u3000
  5161  001516                     u3001:
  5162  001516  EFA2  F00A         	goto	l3425
  5163  00151A                     u3000:
  5164  00151A  283D               	incf	___fladd@aexp^0,w,c
  5165  00151C  A4D8               	btfss	status,2,c
  5166  00151E  EF93  F00A         	goto	u3011
  5167  001522  EF95  F00A         	goto	u3010
  5168  001526                     u3011:
  5169  001526  EF9D  F00A         	goto	l3421
  5170  00152A                     u3010:
  5171  00152A  0E00               	movlw	0
  5172  00152C  6E34               	movwf	___fladd@a^0,c
  5173  00152E  0E00               	movlw	0
  5174  001530  6E35               	movwf	(___fladd@a+1)^0,c
  5175  001532  0E00               	movlw	0
  5176  001534  6E36               	movwf	(___fladd@a+2)^0,c
  5177  001536  0E00               	movlw	0
  5178  001538  6E37               	movwf	(___fladd@a+3)^0,c
  5179  00153A                     l3421:
  5180  00153A  8E36               	bsf	(___fladd@a+2)^0,7,c
  5181  00153C  0E00               	movlw	0
  5182  00153E  6E37               	movwf	(___fladd@a+3)^0,c
  5183  001540  EFAA  F00A         	goto	l3427
  5184  001544                     l3425:
  5185  001544  0E00               	movlw	0
  5186  001546  6E34               	movwf	___fladd@a^0,c
  5187  001548  0E00               	movlw	0
  5188  00154A  6E35               	movwf	(___fladd@a+1)^0,c
  5189  00154C  0E00               	movlw	0
  5190  00154E  6E36               	movwf	(___fladd@a+2)^0,c
  5191  001550  0E00               	movlw	0
  5192  001552  6E37               	movwf	(___fladd@a+3)^0,c
  5193  001554                     l3427:
  5194  001554  503E               	movf	___fladd@bexp^0,w,c
  5195  001556  5C3D               	subwf	___fladd@aexp^0,w,c
  5196  001558  B0D8               	btfsc	status,0,c
  5197  00155A  EFB1  F00A         	goto	u3021
  5198  00155E  EFB3  F00A         	goto	u3020
  5199  001562                     u3021:
  5200  001562  EFDA  F00A         	goto	l3463
  5201  001566                     u3020:
  5202  001566  AC3C               	btfss	___fladd@signs^0,6,c
  5203  001568  EFB8  F00A         	goto	u3031
  5204  00156C  EFBA  F00A         	goto	u3030
  5205  001570                     u3031:
  5206  001570  EFBC  F00A         	goto	l3433
  5207  001574                     u3030:
  5208  001574  0E80               	movlw	128
  5209  001576  1A3C               	xorwf	___fladd@signs^0,f,c
  5210  001578                     l3433:
  5211  001578  C03E  F03F         	movff	___fladd@bexp,___fladd@grs
  5212  00157C  C03D  F03E         	movff	___fladd@aexp,___fladd@bexp
  5213  001580  C03F  F03D         	movff	___fladd@grs,___fladd@aexp
  5214  001584  C030  F03F         	movff	___fladd@b,___fladd@grs
  5215  001588  C034  F030         	movff	___fladd@a,___fladd@b
  5216  00158C  C03F  F034         	movff	___fladd@grs,___fladd@a
  5217  001590  C031  F03F         	movff	___fladd@b+1,___fladd@grs
  5218  001594  C035  F031         	movff	___fladd@a+1,___fladd@b+1
  5219  001598  C03F  F035         	movff	___fladd@grs,___fladd@a+1
  5220  00159C  C032  F03F         	movff	___fladd@b+2,___fladd@grs
  5221  0015A0  C036  F032         	movff	___fladd@a+2,___fladd@b+2
  5222  0015A4  C03F  F036         	movff	___fladd@grs,___fladd@a+2
  5223  0015A8  C033  F03F         	movff	___fladd@b+3,___fladd@grs
  5224  0015AC  C037  F033         	movff	___fladd@a+3,___fladd@b+3
  5225  0015B0  C03F  F037         	movff	___fladd@grs,___fladd@a+3
  5226  0015B4                     l3463:
  5227  0015B4  0E00               	movlw	0
  5228  0015B6  6E3F               	movwf	___fladd@grs^0,c
  5229  0015B8  503E               	movf	___fladd@bexp^0,w,c
  5230  0015BA  C03D  F038         	movff	___fladd@aexp,??___fladd
  5231  0015BE  6A39               	clrf	(??___fladd+1)^0,c
  5232  0015C0  5E38               	subwf	??___fladd^0,f,c
  5233  0015C2  0E00               	movlw	0
  5234  0015C4  5A39               	subwfb	(??___fladd+1)^0,f,c
  5235  0015C6  BE39               	btfsc	(??___fladd+1)^0,7,c
  5236  0015C8  EFEF  F00A         	goto	u3041
  5237  0015CC  5039               	movf	(??___fladd+1)^0,w,c
  5238  0015CE  E109               	bnz	u3040
  5239  0015D0  0E1A               	movlw	26
  5240  0015D2  5C38               	subwf	??___fladd^0,w,c
  5241  0015D4  A0D8               	btfss	status,0,c
  5242  0015D6  EFEF  F00A         	goto	u3041
  5243  0015DA  EFF1  F00A         	goto	u3040
  5244  0015DE                     u3041:
  5245  0015DE  EF28  F00B         	goto	l1366
  5246  0015E2                     u3040:
  5247  0015E2  5030               	movf	___fladd@b^0,w,c
  5248  0015E4  1031               	iorwf	(___fladd@b+1)^0,w,c
  5249  0015E6  1032               	iorwf	(___fladd@b+2)^0,w,c
  5250  0015E8  1033               	iorwf	(___fladd@b+3)^0,w,c
  5251  0015EA  A4D8               	btfss	status,2,c
  5252  0015EC  EFFA  F00A         	goto	u3051
  5253  0015F0  EFFD  F00A         	goto	u3050
  5254  0015F4                     u3051:
  5255  0015F4  0E01               	movlw	1
  5256  0015F6  EFFE  F00A         	goto	u3060
  5257  0015FA                     u3050:
  5258  0015FA  0E00               	movlw	0
  5259  0015FC                     u3060:
  5260  0015FC  6E3F               	movwf	___fladd@grs^0,c
  5261  0015FE  0E00               	movlw	0
  5262  001600  6E30               	movwf	___fladd@b^0,c
  5263  001602  0E00               	movlw	0
  5264  001604  6E31               	movwf	(___fladd@b+1)^0,c
  5265  001606  0E00               	movlw	0
  5266  001608  6E32               	movwf	(___fladd@b+2)^0,c
  5267  00160A  0E00               	movlw	0
  5268  00160C  6E33               	movwf	(___fladd@b+3)^0,c
  5269  00160E  C03D  F03E         	movff	___fladd@aexp,___fladd@bexp
  5270  001612  EF31  F00B         	goto	l1365
  5271  001616                     l1367:
  5272  001616  A03F               	btfss	___fladd@grs^0,0,c
  5273  001618  EF10  F00B         	goto	u3071
  5274  00161C  EF12  F00B         	goto	u3070
  5275  001620                     u3071:
  5276  001620  EF18  F00B         	goto	l3475
  5277  001624                     u3070:
  5278  001624  90D8               	bcf	status,0,c
  5279  001626  303F               	rrcf	___fladd@grs^0,w,c
  5280  001628  0901               	iorlw	1
  5281  00162A  6E3F               	movwf	___fladd@grs^0,c
  5282  00162C  EF1A  F00B         	goto	l3477
  5283  001630                     l3475:
  5284  001630  90D8               	bcf	status,0,c
  5285  001632  323F               	rrcf	___fladd@grs^0,f,c
  5286  001634                     l3477:
  5287  001634  A030               	btfss	___fladd@b^0,0,c
  5288  001636  EF1F  F00B         	goto	u3081
  5289  00163A  EF21  F00B         	goto	u3080
  5290  00163E                     u3081:
  5291  00163E  EF22  F00B         	goto	l3481
  5292  001642                     u3080:
  5293  001642  8E3F               	bsf	___fladd@grs^0,7,c
  5294  001644                     l3481:
  5295  001644  3433               	rlcf	(___fladd@b+3)^0,w,c
  5296  001646  3233               	rrcf	(___fladd@b+3)^0,f,c
  5297  001648  3232               	rrcf	(___fladd@b+2)^0,f,c
  5298  00164A  3231               	rrcf	(___fladd@b+1)^0,f,c
  5299  00164C  3230               	rrcf	___fladd@b^0,f,c
  5300  00164E  2A3E               	incf	___fladd@bexp^0,f,c
  5301  001650                     l1366:
  5302  001650  503D               	movf	___fladd@aexp^0,w,c
  5303  001652  5C3E               	subwf	___fladd@bexp^0,w,c
  5304  001654  A0D8               	btfss	status,0,c
  5305  001656  EF2F  F00B         	goto	u3091
  5306  00165A  EF31  F00B         	goto	u3090
  5307  00165E                     u3091:
  5308  00165E  EF0B  F00B         	goto	l1367
  5309  001662                     u3090:
  5310  001662                     l1365:
  5311  001662  BC3C               	btfsc	___fladd@signs^0,6,c
  5312  001664  EF36  F00B         	goto	u3101
  5313  001668  EF38  F00B         	goto	u3100
  5314  00166C                     u3101:
  5315  00166C  EF78  F00B         	goto	l3509
  5316  001670                     u3100:
  5317  001670  503E               	movf	___fladd@bexp^0,w,c
  5318  001672  A4D8               	btfss	status,2,c
  5319  001674  EF3E  F00B         	goto	u3111
  5320  001678  EF40  F00B         	goto	u3110
  5321  00167C                     u3111:
  5322  00167C  EF4A  F00B         	goto	l3491
  5323  001680                     u3110:
  5324  001680  0E00               	movlw	0
  5325  001682  6E30               	movwf	?___fladd^0,c
  5326  001684  0E00               	movlw	0
  5327  001686  6E31               	movwf	(?___fladd+1)^0,c
  5328  001688  0E00               	movlw	0
  5329  00168A  6E32               	movwf	(?___fladd+2)^0,c
  5330  00168C  0E00               	movlw	0
  5331  00168E  6E33               	movwf	(?___fladd+3)^0,c
  5332  001690  EF99  F00C         	goto	l1374
  5333  001694                     l3491:
  5334  001694  5034               	movf	___fladd@a^0,w,c
  5335  001696  2630               	addwf	___fladd@b^0,f,c
  5336  001698  5035               	movf	(___fladd@a+1)^0,w,c
  5337  00169A  2231               	addwfc	(___fladd@b+1)^0,f,c
  5338  00169C  5036               	movf	(___fladd@a+2)^0,w,c
  5339  00169E  2232               	addwfc	(___fladd@b+2)^0,f,c
  5340  0016A0  5037               	movf	(___fladd@a+3)^0,w,c
  5341  0016A2  2233               	addwfc	(___fladd@b+3)^0,f,c
  5342  0016A4  A033               	btfss	(___fladd@b+3)^0,0,c
  5343  0016A6  EF57  F00B         	goto	u3121
  5344  0016AA  EF59  F00B         	goto	u3120
  5345  0016AE                     u3121:
  5346  0016AE  EF05  F00C         	goto	l3545
  5347  0016B2                     u3120:
  5348  0016B2  A03F               	btfss	___fladd@grs^0,0,c
  5349  0016B4  EF5E  F00B         	goto	u3131
  5350  0016B8  EF60  F00B         	goto	u3130
  5351  0016BC                     u3131:
  5352  0016BC  EF66  F00B         	goto	l3499
  5353  0016C0                     u3130:
  5354  0016C0  90D8               	bcf	status,0,c
  5355  0016C2  303F               	rrcf	___fladd@grs^0,w,c
  5356  0016C4  0901               	iorlw	1
  5357  0016C6  6E3F               	movwf	___fladd@grs^0,c
  5358  0016C8  EF68  F00B         	goto	l3501
  5359  0016CC                     l3499:
  5360  0016CC  90D8               	bcf	status,0,c
  5361  0016CE  323F               	rrcf	___fladd@grs^0,f,c
  5362  0016D0                     l3501:
  5363  0016D0  A030               	btfss	___fladd@b^0,0,c
  5364  0016D2  EF6D  F00B         	goto	u3141
  5365  0016D6  EF6F  F00B         	goto	u3140
  5366  0016DA                     u3141:
  5367  0016DA  EF70  F00B         	goto	l3505
  5368  0016DE                     u3140:
  5369  0016DE  8E3F               	bsf	___fladd@grs^0,7,c
  5370  0016E0                     l3505:
  5371  0016E0  3433               	rlcf	(___fladd@b+3)^0,w,c
  5372  0016E2  3233               	rrcf	(___fladd@b+3)^0,f,c
  5373  0016E4  3232               	rrcf	(___fladd@b+2)^0,f,c
  5374  0016E6  3231               	rrcf	(___fladd@b+1)^0,f,c
  5375  0016E8  3230               	rrcf	___fladd@b^0,f,c
  5376  0016EA  2A3E               	incf	___fladd@bexp^0,f,c
  5377  0016EC  EF05  F00C         	goto	l3545
  5378  0016F0                     l3509:
  5379  0016F0  5034               	movf	___fladd@a^0,w,c
  5380  0016F2  5C30               	subwf	___fladd@b^0,w,c
  5381  0016F4  5035               	movf	(___fladd@a+1)^0,w,c
  5382  0016F6  5831               	subwfb	(___fladd@b+1)^0,w,c
  5383  0016F8  5036               	movf	(___fladd@a+2)^0,w,c
  5384  0016FA  5832               	subwfb	(___fladd@b+2)^0,w,c
  5385  0016FC  5033               	movf	(___fladd@b+3)^0,w,c
  5386  0016FE  0A80               	xorlw	128
  5387  001700  6E38               	movwf	??___fladd^0,c
  5388  001702  5037               	movf	(___fladd@a+3)^0,w,c
  5389  001704  0A80               	xorlw	128
  5390  001706  5838               	subwfb	??___fladd^0,w,c
  5391  001708  B0D8               	btfsc	status,0,c
  5392  00170A  EF89  F00B         	goto	u3151
  5393  00170E  EF8B  F00B         	goto	u3150
  5394  001712                     u3151:
  5395  001712  EFB6  F00B         	goto	l3519
  5396  001716                     u3150:
  5397  001716  5030               	movf	___fladd@b^0,w,c
  5398  001718  5C34               	subwf	___fladd@a^0,w,c
  5399  00171A  6E38               	movwf	??___fladd^0,c
  5400  00171C  5031               	movf	(___fladd@b+1)^0,w,c
  5401  00171E  5835               	subwfb	(___fladd@a+1)^0,w,c
  5402  001720  6E39               	movwf	(??___fladd+1)^0,c
  5403  001722  5032               	movf	(___fladd@b+2)^0,w,c
  5404  001724  5836               	subwfb	(___fladd@a+2)^0,w,c
  5405  001726  6E3A               	movwf	(??___fladd+2)^0,c
  5406  001728  5033               	movf	(___fladd@b+3)^0,w,c
  5407  00172A  5837               	subwfb	(___fladd@a+3)^0,w,c
  5408  00172C  6E3B               	movwf	(??___fladd+3)^0,c
  5409  00172E  0EFF               	movlw	255
  5410  001730  2438               	addwf	??___fladd^0,w,c
  5411  001732  6E30               	movwf	___fladd@b^0,c
  5412  001734  0EFF               	movlw	255
  5413  001736  2039               	addwfc	(??___fladd+1)^0,w,c
  5414  001738  6E31               	movwf	(___fladd@b+1)^0,c
  5415  00173A  0EFF               	movlw	255
  5416  00173C  203A               	addwfc	(??___fladd+2)^0,w,c
  5417  00173E  6E32               	movwf	(___fladd@b+2)^0,c
  5418  001740  0EFF               	movlw	255
  5419  001742  203B               	addwfc	(??___fladd+3)^0,w,c
  5420  001744  6E33               	movwf	(___fladd@b+3)^0,c
  5421  001746  0E80               	movlw	128
  5422  001748  1A3C               	xorwf	___fladd@signs^0,f,c
  5423  00174A  6C3F               	negf	___fladd@grs^0,c
  5424  00174C  503F               	movf	___fladd@grs^0,w,c
  5425  00174E  A4D8               	btfss	status,2,c
  5426  001750  EFAC  F00B         	goto	u3161
  5427  001754  EFAE  F00B         	goto	u3160
  5428  001758                     u3161:
  5429  001758  EFBE  F00B         	goto	l1382
  5430  00175C                     u3160:
  5431  00175C  0E01               	movlw	1
  5432  00175E  2630               	addwf	___fladd@b^0,f,c
  5433  001760  0E00               	movlw	0
  5434  001762  2231               	addwfc	(___fladd@b+1)^0,f,c
  5435  001764  2232               	addwfc	(___fladd@b+2)^0,f,c
  5436  001766  2233               	addwfc	(___fladd@b+3)^0,f,c
  5437  001768  EFBE  F00B         	goto	l1382
  5438  00176C                     l3519:
  5439  00176C  5034               	movf	___fladd@a^0,w,c
  5440  00176E  5E30               	subwf	___fladd@b^0,f,c
  5441  001770  5035               	movf	(___fladd@a+1)^0,w,c
  5442  001772  5A31               	subwfb	(___fladd@b+1)^0,f,c
  5443  001774  5036               	movf	(___fladd@a+2)^0,w,c
  5444  001776  5A32               	subwfb	(___fladd@b+2)^0,f,c
  5445  001778  5037               	movf	(___fladd@a+3)^0,w,c
  5446  00177A  5A33               	subwfb	(___fladd@b+3)^0,f,c
  5447  00177C                     l1382:
  5448  00177C  5030               	movf	___fladd@b^0,w,c
  5449  00177E  1031               	iorwf	(___fladd@b+1)^0,w,c
  5450  001780  1032               	iorwf	(___fladd@b+2)^0,w,c
  5451  001782  1033               	iorwf	(___fladd@b+3)^0,w,c
  5452  001784  A4D8               	btfss	status,2,c
  5453  001786  EFC7  F00B         	goto	u3171
  5454  00178A  EFC9  F00B         	goto	u3170
  5455  00178E                     u3171:
  5456  00178E  EFFE  F00B         	goto	l3543
  5457  001792                     u3170:
  5458  001792  503F               	movf	___fladd@grs^0,w,c
  5459  001794  A4D8               	btfss	status,2,c
  5460  001796  EFCF  F00B         	goto	u3181
  5461  00179A  EFD1  F00B         	goto	u3180
  5462  00179E                     u3181:
  5463  00179E  EFFE  F00B         	goto	l3543
  5464  0017A2                     u3180:
  5465  0017A2  0E00               	movlw	0
  5466  0017A4  6E30               	movwf	?___fladd^0,c
  5467  0017A6  0E00               	movlw	0
  5468  0017A8  6E31               	movwf	(?___fladd+1)^0,c
  5469  0017AA  0E00               	movlw	0
  5470  0017AC  6E32               	movwf	(?___fladd+2)^0,c
  5471  0017AE  0E00               	movlw	0
  5472  0017B0  6E33               	movwf	(?___fladd+3)^0,c
  5473  0017B2  EF99  F00C         	goto	l1374
  5474  0017B6                     l3527:
  5475  0017B6  90D8               	bcf	status,0,c
  5476  0017B8  3630               	rlcf	___fladd@b^0,f,c
  5477  0017BA  3631               	rlcf	(___fladd@b+1)^0,f,c
  5478  0017BC  3632               	rlcf	(___fladd@b+2)^0,f,c
  5479  0017BE  3633               	rlcf	(___fladd@b+3)^0,f,c
  5480  0017C0  AE3F               	btfss	___fladd@grs^0,7,c
  5481  0017C2  EFE5  F00B         	goto	u3191
  5482  0017C6  EFE7  F00B         	goto	u3190
  5483  0017CA                     u3191:
  5484  0017CA  EFE8  F00B         	goto	l3533
  5485  0017CE                     u3190:
  5486  0017CE  8030               	bsf	___fladd@b^0,0,c
  5487  0017D0                     l3533:
  5488  0017D0  A03F               	btfss	___fladd@grs^0,0,c
  5489  0017D2  EFED  F00B         	goto	u3201
  5490  0017D6  EFEF  F00B         	goto	u3200
  5491  0017DA                     u3201:
  5492  0017DA  EFF3  F00B         	goto	l3537
  5493  0017DE                     u3200:
  5494  0017DE  80D8               	bsf	status,0,c
  5495  0017E0  363F               	rlcf	___fladd@grs^0,f,c
  5496  0017E2  EFF5  F00B         	goto	l3539
  5497  0017E6                     l3537:
  5498  0017E6  90D8               	bcf	status,0,c
  5499  0017E8  363F               	rlcf	___fladd@grs^0,f,c
  5500  0017EA                     l3539:
  5501  0017EA  503E               	movf	___fladd@bexp^0,w,c
  5502  0017EC  B4D8               	btfsc	status,2,c
  5503  0017EE  EFFB  F00B         	goto	u3211
  5504  0017F2  EFFD  F00B         	goto	u3210
  5505  0017F6                     u3211:
  5506  0017F6  EFFE  F00B         	goto	l3543
  5507  0017FA                     u3210:
  5508  0017FA  063E               	decf	___fladd@bexp^0,f,c
  5509  0017FC                     l3543:
  5510  0017FC  AE32               	btfss	(___fladd@b+2)^0,7,c
  5511  0017FE  EF03  F00C         	goto	u3221
  5512  001802  EF05  F00C         	goto	u3220
  5513  001806                     u3221:
  5514  001806  EFDB  F00B         	goto	l3527
  5515  00180A                     u3220:
  5516  00180A                     l3545:
  5517  00180A  0E00               	movlw	0
  5518  00180C  6E3D               	movwf	___fladd@aexp^0,c
  5519  00180E  AE3F               	btfss	___fladd@grs^0,7,c
  5520  001810  EF0C  F00C         	goto	u3231
  5521  001814  EF0E  F00C         	goto	u3230
  5522  001818                     u3231:
  5523  001818  EF26  F00C         	goto	l1391
  5524  00181C                     u3230:
  5525  00181C  C03F  F038         	movff	___fladd@grs,??___fladd
  5526  001820  0E7F               	movlw	127
  5527  001822  1638               	andwf	??___fladd^0,f,c
  5528  001824  B4D8               	btfsc	status,2,c
  5529  001826  EF17  F00C         	goto	u3241
  5530  00182A  EF19  F00C         	goto	u3240
  5531  00182E                     u3241:
  5532  00182E  EF1D  F00C         	goto	l1392
  5533  001832                     u3240:
  5534  001832                     l3551:
  5535  001832  0E01               	movlw	1
  5536  001834  6E3D               	movwf	___fladd@aexp^0,c
  5537  001836  EF26  F00C         	goto	l1391
  5538  00183A                     l1392:
  5539  00183A  A030               	btfss	___fladd@b^0,0,c
  5540  00183C  EF22  F00C         	goto	u3251
  5541  001840  EF24  F00C         	goto	u3250
  5542  001844                     u3251:
  5543  001844  EF26  F00C         	goto	l1391
  5544  001848                     u3250:
  5545  001848  EF19  F00C         	goto	l3551
  5546  00184C                     l1391:
  5547  00184C  503D               	movf	___fladd@aexp^0,w,c
  5548  00184E  B4D8               	btfsc	status,2,c
  5549  001850  EF2C  F00C         	goto	u3261
  5550  001854  EF2E  F00C         	goto	u3260
  5551  001858                     u3261:
  5552  001858  EF59  F00C         	goto	l3563
  5553  00185C                     u3260:
  5554  00185C  0E01               	movlw	1
  5555  00185E  2630               	addwf	___fladd@b^0,f,c
  5556  001860  0E00               	movlw	0
  5557  001862  2231               	addwfc	(___fladd@b+1)^0,f,c
  5558  001864  2232               	addwfc	(___fladd@b+2)^0,f,c
  5559  001866  2233               	addwfc	(___fladd@b+3)^0,f,c
  5560  001868  A033               	btfss	(___fladd@b+3)^0,0,c
  5561  00186A  EF39  F00C         	goto	u3271
  5562  00186E  EF3B  F00C         	goto	u3270
  5563  001872                     u3271:
  5564  001872  EF59  F00C         	goto	l3563
  5565  001876                     u3270:
  5566  001876  C030  F038         	movff	___fladd@b,??___fladd
  5567  00187A  C031  F039         	movff	___fladd@b+1,??___fladd+1
  5568  00187E  C032  F03A         	movff	___fladd@b+2,??___fladd+2
  5569  001882  C033  F03B         	movff	___fladd@b+3,??___fladd+3
  5570  001886  343B               	rlcf	(??___fladd+3)^0,w,c
  5571  001888  323B               	rrcf	(??___fladd+3)^0,f,c
  5572  00188A  323A               	rrcf	(??___fladd+2)^0,f,c
  5573  00188C  3239               	rrcf	(??___fladd+1)^0,f,c
  5574  00188E  3238               	rrcf	??___fladd^0,f,c
  5575  001890  C038  F030         	movff	??___fladd,___fladd@b
  5576  001894  C039  F031         	movff	??___fladd+1,___fladd@b+1
  5577  001898  C03A  F032         	movff	??___fladd+2,___fladd@b+2
  5578  00189C  C03B  F033         	movff	??___fladd+3,___fladd@b+3
  5579  0018A0  283E               	incf	___fladd@bexp^0,w,c
  5580  0018A2  B4D8               	btfsc	status,2,c
  5581  0018A4  EF56  F00C         	goto	u3281
  5582  0018A8  EF58  F00C         	goto	u3280
  5583  0018AC                     u3281:
  5584  0018AC  EF59  F00C         	goto	l3563
  5585  0018B0                     u3280:
  5586  0018B0  2A3E               	incf	___fladd@bexp^0,f,c
  5587  0018B2                     l3563:
  5588  0018B2  283E               	incf	___fladd@bexp^0,w,c
  5589  0018B4  B4D8               	btfsc	status,2,c
  5590  0018B6  EF5F  F00C         	goto	u3291
  5591  0018BA  EF61  F00C         	goto	u3290
  5592  0018BE                     u3291:
  5593  0018BE  EF69  F00C         	goto	l3567
  5594  0018C2                     u3290:
  5595  0018C2  503E               	movf	___fladd@bexp^0,w,c
  5596  0018C4  A4D8               	btfss	status,2,c
  5597  0018C6  EF67  F00C         	goto	u3301
  5598  0018CA  EF69  F00C         	goto	u3300
  5599  0018CE                     u3301:
  5600  0018CE  EF7B  F00C         	goto	l3571
  5601  0018D2                     u3300:
  5602  0018D2                     l3567:
  5603  0018D2  0E00               	movlw	0
  5604  0018D4  6E30               	movwf	___fladd@b^0,c
  5605  0018D6  0E00               	movlw	0
  5606  0018D8  6E31               	movwf	(___fladd@b+1)^0,c
  5607  0018DA  0E00               	movlw	0
  5608  0018DC  6E32               	movwf	(___fladd@b+2)^0,c
  5609  0018DE  0E00               	movlw	0
  5610  0018E0  6E33               	movwf	(___fladd@b+3)^0,c
  5611  0018E2  503E               	movf	___fladd@bexp^0,w,c
  5612  0018E4  A4D8               	btfss	status,2,c
  5613  0018E6  EF77  F00C         	goto	u3311
  5614  0018EA  EF79  F00C         	goto	u3310
  5615  0018EE                     u3311:
  5616  0018EE  EF7B  F00C         	goto	l3571
  5617  0018F2                     u3310:
  5618  0018F2  0E00               	movlw	0
  5619  0018F4  6E3C               	movwf	___fladd@signs^0,c
  5620  0018F6                     l3571:
  5621  0018F6  A03E               	btfss	___fladd@bexp^0,0,c
  5622  0018F8  EF80  F00C         	goto	u3321
  5623  0018FC  EF82  F00C         	goto	u3320
  5624  001900                     u3321:
  5625  001900  EF85  F00C         	goto	l3575
  5626  001904                     u3320:
  5627  001904  8E32               	bsf	(___fladd@b+2)^0,7,c
  5628  001906  EF86  F00C         	goto	l3577
  5629  00190A                     l3575:
  5630  00190A  9E32               	bcf	(___fladd@b+2)^0,7,c
  5631  00190C                     l3577:
  5632  00190C  90D8               	bcf	status,0,c
  5633  00190E  303E               	rrcf	___fladd@bexp^0,w,c
  5634  001910  6E33               	movwf	(___fladd@b+3)^0,c
  5635  001912  AE3C               	btfss	___fladd@signs^0,7,c
  5636  001914  EF8E  F00C         	goto	u3331
  5637  001918  EF90  F00C         	goto	u3330
  5638  00191C                     u3331:
  5639  00191C  EF91  F00C         	goto	l3583
  5640  001920                     u3330:
  5641  001920  8E33               	bsf	(___fladd@b+3)^0,7,c
  5642  001922                     l3583:
  5643  001922  C030  F030         	movff	___fladd@b,?___fladd
  5644  001926  C031  F031         	movff	___fladd@b+1,?___fladd+1
  5645  00192A  C032  F032         	movff	___fladd@b+2,?___fladd+2
  5646  00192E  C033  F033         	movff	___fladd@b+3,?___fladd+3
  5647  001932                     l1374:
  5648  001932  0012               	return		;funcret
  5649  001934                     __end_of___fladd:
  5650                           	callstack 0
  5651                           
  5652 ;; *************** function _clearance *****************
  5653 ;; Defined at:
  5654 ;;		line 120 in file "DC_motors.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  mL              2   39[COMRAM] PTR struct .
  5657 ;;		 -> main@motorL(9), 
  5658 ;;  mR              2   41[COMRAM] PTR struct .
  5659 ;;		 -> main@motorR(9), 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5674 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5675 ;;Total ram usage:        6 bytes
  5676 ;; Hardware stack levels used: 1
  5677 ;; Hardware stack levels required when called: 10
  5678 ;; This function calls:
  5679 ;;		_reverse
  5680 ;;		_stop
  5681 ;; This function is called by:
  5682 ;;		_instructions
  5683 ;;		_DCmotors_testing
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text19
  5688  0039B0                     __ptext19:
  5689                           	callstack 0
  5690  0039B0                     _clearance:
  5691                           	callstack 17
  5692  0039B0                     
  5693                           ;DC_motors.c: 121:     LATDbits.LATD3 = 0;
  5694  0039B0  967C               	bcf	124,3,c	;volatile
  5695  0039B2                     
  5696                           ;DC_motors.c: 122:     reverse(mL, mR);
  5697  0039B2  C028  F022         	movff	clearance@mL,reverse@mL
  5698  0039B6  C029  F023         	movff	clearance@mL+1,reverse@mL+1
  5699  0039BA  C02A  F024         	movff	clearance@mR,reverse@mR
  5700  0039BE  C02B  F025         	movff	clearance@mR+1,reverse@mR+1
  5701  0039C2  EC05  F01C         	call	_reverse	;wreg free
  5702  0039C6                     
  5703                           ;DC_motors.c: 123:     _delay((unsigned long)((350)*(64000000/4000.0)));
  5704  0039C6  0E1D               	movlw	29
  5705  0039C8  6E2D               	movwf	(??_clearance+1)^0,c
  5706  0039CA  0E69               	movlw	105
  5707  0039CC  6E2C               	movwf	??_clearance^0,c
  5708  0039CE  0EA5               	movlw	165
  5709  0039D0                     u6737:
  5710  0039D0  2EE8               	decfsz	wreg,f,c
  5711  0039D2  D7FE               	bra	u6737
  5712  0039D4  2E2C               	decfsz	??_clearance^0,f,c
  5713  0039D6  D7FC               	bra	u6737
  5714  0039D8  2E2D               	decfsz	(??_clearance+1)^0,f,c
  5715  0039DA  D7FA               	bra	u6737
  5716  0039DC  F000               	nop	
  5717  0039DE                     
  5718                           ;DC_motors.c: 124:     stop(mL, mR);
  5719  0039DE  C028  F022         	movff	clearance@mL,stop@mL
  5720  0039E2  C029  F023         	movff	clearance@mL+1,stop@mL+1
  5721  0039E6  C02A  F024         	movff	clearance@mR,stop@mR
  5722  0039EA  C02B  F025         	movff	clearance@mR+1,stop@mR+1
  5723  0039EE  EC93  F01C         	call	_stop	;wreg free
  5724                           
  5725                           ;DC_motors.c: 125:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5726  0039F2  0E52               	movlw	82
  5727  0039F4  6E2D               	movwf	(??_clearance+1)^0,c
  5728  0039F6  0E2B               	movlw	43
  5729  0039F8  6E2C               	movwf	??_clearance^0,c
  5730  0039FA  0E00               	movlw	0
  5731  0039FC                     u6747:
  5732  0039FC  2EE8               	decfsz	wreg,f,c
  5733  0039FE  D7FE               	bra	u6747
  5734  003A00  2E2C               	decfsz	??_clearance^0,f,c
  5735  003A02  D7FC               	bra	u6747
  5736  003A04  2E2D               	decfsz	(??_clearance+1)^0,f,c
  5737  003A06  D7FA               	bra	u6747
  5738  003A08  D000               	nop2	
  5739  003A0A                     
  5740                           ;DC_motors.c: 126:     LATDbits.LATD3 = 0;
  5741  003A0A  967C               	bcf	124,3,c	;volatile
  5742  003A0C  0012               	return		;funcret
  5743  003A0E                     __end_of_clearance:
  5744                           	callstack 0
  5745                           
  5746 ;; *************** function _stop *****************
  5747 ;; Defined at:
  5748 ;;		line 133 in file "DC_motors.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  mL              2   33[COMRAM] PTR struct .
  5751 ;;		 -> main@motorL(9), 
  5752 ;;  mR              2   35[COMRAM] PTR struct .
  5753 ;;		 -> main@motorR(9), 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      void 
  5758 ;; Registers used:
  5759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5765 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5768 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5769 ;;Total ram usage:        6 bytes
  5770 ;; Hardware stack levels used: 1
  5771 ;; Hardware stack levels required when called: 9
  5772 ;; This function calls:
  5773 ;;		_DCmotors_setPWM
  5774 ;; This function is called by:
  5775 ;;		_main
  5776 ;;		_colourcards_readRGBC
  5777 ;;		_clearance
  5778 ;;		_instructions
  5779 ;;		_reverseinstructions
  5780 ;;		_returnhome
  5781 ;;		_DCmotors_calibration
  5782 ;;		_DCmotors_testing
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text20
  5787  003926                     __ptext20:
  5788                           	callstack 0
  5789  003926                     _stop:
  5790                           	callstack 21
  5791  003926                     
  5792                           ;DC_motors.c: 134:     LATDbits.LATD4 = 1;
  5793  003926  887C               	bsf	124,4,c	;volatile
  5794                           
  5795                           ;DC_motors.c: 136:     while((mL->power > 0) && (mR->power > 0)){
  5796  003928  EFB2  F01C         	goto	l3333
  5797  00392C                     l3325:
  5798                           
  5799                           ;DC_motors.c: 137:         mL->power -= 10;
  5800  00392C  C022  FFD9         	movff	stop@mL,fsr2l
  5801  003930  C023  FFDA         	movff	stop@mL+1,fsr2h
  5802  003934  0E0A               	movlw	10
  5803  003936  5EDF               	subwf	indf2,f,c
  5804                           
  5805                           ;DC_motors.c: 138:         mR->power -= 10;
  5806  003938  C024  FFD9         	movff	stop@mR,fsr2l
  5807  00393C  C025  FFDA         	movff	stop@mR+1,fsr2h
  5808  003940  0E0A               	movlw	10
  5809  003942  5EDF               	subwf	indf2,f,c
  5810  003944                     
  5811                           ;DC_motors.c: 139:         DCmotors_setPWM(mL);
  5812  003944  C022  F017         	movff	stop@mL,DCmotors_setPWM@m
  5813  003948  C023  F018         	movff	stop@mL+1,DCmotors_setPWM@m+1
  5814  00394C  EC77  F016         	call	_DCmotors_setPWM	;wreg free
  5815  003950                     
  5816                           ;DC_motors.c: 140:         DCmotors_setPWM(mR);
  5817  003950  C024  F017         	movff	stop@mR,DCmotors_setPWM@m
  5818  003954  C025  F018         	movff	stop@mR+1,DCmotors_setPWM@m+1
  5819  003958  EC77  F016         	call	_DCmotors_setPWM	;wreg free
  5820  00395C                     
  5821                           ;DC_motors.c: 141:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  5822  00395C  0EA0               	movlw	160
  5823  00395E                     u6757:
  5824  00395E  D000               	nop2	
  5825  003960  2EE8               	decfsz	wreg,f,c
  5826  003962  D7FD               	bra	u6757
  5827  003964                     l3333:
  5828                           
  5829                           ;DC_motors.c: 136:     while((mL->power > 0) && (mR->power > 0)){
  5830  003964  C022  FFD9         	movff	stop@mL,fsr2l
  5831  003968  C023  FFDA         	movff	stop@mL+1,fsr2h
  5832  00396C  50DF               	movf	indf2,w,c
  5833  00396E  B4D8               	btfsc	status,2,c
  5834  003970  EFBC  F01C         	goto	u2891
  5835  003974  EFBE  F01C         	goto	u2890
  5836  003978                     u2891:
  5837  003978  EFCA  F01C         	goto	l3337
  5838  00397C                     u2890:
  5839  00397C  C024  FFD9         	movff	stop@mR,fsr2l
  5840  003980  C025  FFDA         	movff	stop@mR+1,fsr2h
  5841  003984  50DF               	movf	indf2,w,c
  5842  003986  A4D8               	btfss	status,2,c
  5843  003988  EFC8  F01C         	goto	u2901
  5844  00398C  EFCA  F01C         	goto	u2900
  5845  003990                     u2901:
  5846  003990  EF96  F01C         	goto	l3325
  5847  003994                     u2900:
  5848  003994                     l3337:
  5849                           
  5850                           ;DC_motors.c: 143:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5851  003994  0E29               	movlw	41
  5852  003996  6E27               	movwf	(??_stop+1)^0,c
  5853  003998  0E96               	movlw	150
  5854  00399A  6E26               	movwf	??_stop^0,c
  5855  00399C  0E7F               	movlw	127
  5856  00399E                     u6767:
  5857  00399E  2EE8               	decfsz	wreg,f,c
  5858  0039A0  D7FE               	bra	u6767
  5859  0039A2  2E26               	decfsz	??_stop^0,f,c
  5860  0039A4  D7FC               	bra	u6767
  5861  0039A6  2E27               	decfsz	(??_stop+1)^0,f,c
  5862  0039A8  D7FA               	bra	u6767
  5863  0039AA  F000               	nop	
  5864  0039AC                     
  5865                           ;DC_motors.c: 144:     LATDbits.LATD4 = 0;
  5866  0039AC  987C               	bcf	124,4,c	;volatile
  5867  0039AE  0012               	return		;funcret
  5868  0039B0                     __end_of_stop:
  5869                           	callstack 0
  5870                           
  5871 ;; *************** function _reverse *****************
  5872 ;; Defined at:
  5873 ;;		line 103 in file "DC_motors.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  mL              2   33[COMRAM] PTR struct .
  5876 ;;		 -> main@motorL(9), 
  5877 ;;  mR              2   35[COMRAM] PTR struct .
  5878 ;;		 -> main@motorR(9), 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5893 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5894 ;;Total ram usage:        5 bytes
  5895 ;; Hardware stack levels used: 1
  5896 ;; Hardware stack levels required when called: 9
  5897 ;; This function calls:
  5898 ;;		_DCmotors_setPWM
  5899 ;; This function is called by:
  5900 ;;		_main
  5901 ;;		_clearance
  5902 ;;		_instructions
  5903 ;;		_returnhome
  5904 ;;		_DCmotors_testing
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text21
  5909  00380A                     __ptext21:
  5910                           	callstack 0
  5911  00380A                     _reverse:
  5912                           	callstack 21
  5913  00380A                     
  5914                           ;DC_motors.c: 104:     mL->direction = 0;
  5915  00380A  EE20 F001          	lfsr	2,1
  5916  00380E  5022               	movf	reverse@mL^0,w,c
  5917  003810  26D9               	addwf	fsr2l,f,c
  5918  003812  5023               	movf	(reverse@mL+1)^0,w,c
  5919  003814  22DA               	addwfc	fsr2h,f,c
  5920  003816  0E00               	movlw	0
  5921  003818  6EDF               	movwf	indf2,c
  5922                           
  5923                           ;DC_motors.c: 105:     mR->direction = 0;
  5924  00381A  EE20 F001          	lfsr	2,1
  5925  00381E  5024               	movf	reverse@mR^0,w,c
  5926  003820  26D9               	addwf	fsr2l,f,c
  5927  003822  5025               	movf	(reverse@mR+1)^0,w,c
  5928  003824  22DA               	addwfc	fsr2h,f,c
  5929  003826  0E00               	movlw	0
  5930  003828  6EDF               	movwf	indf2,c
  5931                           
  5932                           ;DC_motors.c: 107:     while((mL->power < 50) && (mR->power < 50)){
  5933  00382A  EF33  F01C         	goto	l3351
  5934  00382E                     l3343:
  5935                           
  5936                           ;DC_motors.c: 108:         mL->power += 10;
  5937  00382E  C022  FFD9         	movff	reverse@mL,fsr2l
  5938  003832  C023  FFDA         	movff	reverse@mL+1,fsr2h
  5939  003836  0E0A               	movlw	10
  5940  003838  26DF               	addwf	indf2,f,c
  5941                           
  5942                           ;DC_motors.c: 109:         mR->power += 10;
  5943  00383A  C024  FFD9         	movff	reverse@mR,fsr2l
  5944  00383E  C025  FFDA         	movff	reverse@mR+1,fsr2h
  5945  003842  0E0A               	movlw	10
  5946  003844  26DF               	addwf	indf2,f,c
  5947  003846                     
  5948                           ;DC_motors.c: 110:         DCmotors_setPWM(mL);
  5949  003846  C022  F017         	movff	reverse@mL,DCmotors_setPWM@m
  5950  00384A  C023  F018         	movff	reverse@mL+1,DCmotors_setPWM@m+1
  5951  00384E  EC77  F016         	call	_DCmotors_setPWM	;wreg free
  5952  003852                     
  5953                           ;DC_motors.c: 111:         DCmotors_setPWM(mR);
  5954  003852  C024  F017         	movff	reverse@mR,DCmotors_setPWM@m
  5955  003856  C025  F018         	movff	reverse@mR+1,DCmotors_setPWM@m+1
  5956  00385A  EC77  F016         	call	_DCmotors_setPWM	;wreg free
  5957  00385E                     
  5958                           ;DC_motors.c: 112:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  5959  00385E  0EA0               	movlw	160
  5960  003860                     u6777:
  5961  003860  D000               	nop2	
  5962  003862  2EE8               	decfsz	wreg,f,c
  5963  003864  D7FD               	bra	u6777
  5964  003866                     l3351:
  5965                           
  5966                           ;DC_motors.c: 107:     while((mL->power < 50) && (mR->power < 50)){
  5967  003866  C022  FFD9         	movff	reverse@mL,fsr2l
  5968  00386A  C023  FFDA         	movff	reverse@mL+1,fsr2h
  5969  00386E  0E32               	movlw	50
  5970  003870  60DF               	cpfslt	indf2,c
  5971  003872  EF3D  F01C         	goto	u2911
  5972  003876  EF3F  F01C         	goto	u2910
  5973  00387A                     u2911:
  5974  00387A  EF4B  F01C         	goto	l650
  5975  00387E                     u2910:
  5976  00387E  C024  FFD9         	movff	reverse@mR,fsr2l
  5977  003882  C025  FFDA         	movff	reverse@mR+1,fsr2h
  5978  003886  0E31               	movlw	49
  5979  003888  64DF               	cpfsgt	indf2,c
  5980  00388A  EF49  F01C         	goto	u2921
  5981  00388E  EF4B  F01C         	goto	u2920
  5982  003892                     u2921:
  5983  003892  EF17  F01C         	goto	l3343
  5984  003896                     u2920:
  5985  003896                     l650:
  5986  003896  0012               	return		;funcret
  5987  003898                     __end_of_reverse:
  5988                           	callstack 0
  5989                           
  5990 ;; *************** function _forward *****************
  5991 ;; Defined at:
  5992 ;;		line 86 in file "DC_motors.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  mL              2   33[COMRAM] PTR struct .
  5995 ;;		 -> main@motorL(9), 
  5996 ;;  mR              2   35[COMRAM] PTR struct .
  5997 ;;		 -> main@motorR(9), 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;		None
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6011 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6012 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6013 ;;Total ram usage:        5 bytes
  6014 ;; Hardware stack levels used: 1
  6015 ;; Hardware stack levels required when called: 9
  6016 ;; This function calls:
  6017 ;;		_DCmotors_setPWM
  6018 ;; This function is called by:
  6019 ;;		_main
  6020 ;;		_colourcards_readRGBC
  6021 ;;		_reverseinstructions
  6022 ;;		_DCmotors_testing
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           	psect	text22
  6027  003898                     __ptext22:
  6028                           	callstack 0
  6029  003898                     _forward:
  6030                           	callstack 19
  6031  003898                     
  6032                           ;DC_motors.c: 87:     mL->direction = 1;
  6033  003898  EE20 F001          	lfsr	2,1
  6034  00389C  5022               	movf	forward@mL^0,w,c
  6035  00389E  26D9               	addwf	fsr2l,f,c
  6036  0038A0  5023               	movf	(forward@mL+1)^0,w,c
  6037  0038A2  22DA               	addwfc	fsr2h,f,c
  6038  0038A4  0E01               	movlw	1
  6039  0038A6  6EDF               	movwf	indf2,c
  6040                           
  6041                           ;DC_motors.c: 88:     mR->direction = 1;
  6042  0038A8  EE20 F001          	lfsr	2,1
  6043  0038AC  5024               	movf	forward@mR^0,w,c
  6044  0038AE  26D9               	addwf	fsr2l,f,c
  6045  0038B0  5025               	movf	(forward@mR+1)^0,w,c
  6046  0038B2  22DA               	addwfc	fsr2h,f,c
  6047  0038B4  0E01               	movlw	1
  6048  0038B6  6EDF               	movwf	indf2,c
  6049                           
  6050                           ;DC_motors.c: 90:     while((mL->power < 20) && (mR->power < 20)){
  6051  0038B8  EF7A  F01C         	goto	l4057
  6052  0038BC                     l4049:
  6053                           
  6054                           ;DC_motors.c: 91:         mL->power += 10;
  6055  0038BC  C022  FFD9         	movff	forward@mL,fsr2l
  6056  0038C0  C023  FFDA         	movff	forward@mL+1,fsr2h
  6057  0038C4  0E0A               	movlw	10
  6058  0038C6  26DF               	addwf	indf2,f,c
  6059                           
  6060                           ;DC_motors.c: 92:         mR->power += 10;
  6061  0038C8  C024  FFD9         	movff	forward@mR,fsr2l
  6062  0038CC  C025  FFDA         	movff	forward@mR+1,fsr2h
  6063  0038D0  0E0A               	movlw	10
  6064  0038D2  26DF               	addwf	indf2,f,c
  6065  0038D4                     
  6066                           ;DC_motors.c: 93:         DCmotors_setPWM(mL);
  6067  0038D4  C022  F017         	movff	forward@mL,DCmotors_setPWM@m
  6068  0038D8  C023  F018         	movff	forward@mL+1,DCmotors_setPWM@m+1
  6069  0038DC  EC77  F016         	call	_DCmotors_setPWM	;wreg free
  6070  0038E0                     
  6071                           ;DC_motors.c: 94:         DCmotors_setPWM(mR);
  6072  0038E0  C024  F017         	movff	forward@mR,DCmotors_setPWM@m
  6073  0038E4  C025  F018         	movff	forward@mR+1,DCmotors_setPWM@m+1
  6074  0038E8  EC77  F016         	call	_DCmotors_setPWM	;wreg free
  6075  0038EC                     
  6076                           ;DC_motors.c: 95:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  6077  0038EC  0EA0               	movlw	160
  6078  0038EE                     u6787:
  6079  0038EE  D000               	nop2	
  6080  0038F0  2EE8               	decfsz	wreg,f,c
  6081  0038F2  D7FD               	bra	u6787
  6082  0038F4                     l4057:
  6083                           
  6084                           ;DC_motors.c: 90:     while((mL->power < 20) && (mR->power < 20)){
  6085  0038F4  C022  FFD9         	movff	forward@mL,fsr2l
  6086  0038F8  C023  FFDA         	movff	forward@mL+1,fsr2h
  6087  0038FC  0E14               	movlw	20
  6088  0038FE  60DF               	cpfslt	indf2,c
  6089  003900  EF84  F01C         	goto	u4061
  6090  003904  EF86  F01C         	goto	u4060
  6091  003908                     u4061:
  6092  003908  EF92  F01C         	goto	l642
  6093  00390C                     u4060:
  6094  00390C  C024  FFD9         	movff	forward@mR,fsr2l
  6095  003910  C025  FFDA         	movff	forward@mR+1,fsr2h
  6096  003914  0E13               	movlw	19
  6097  003916  64DF               	cpfsgt	indf2,c
  6098  003918  EF90  F01C         	goto	u4071
  6099  00391C  EF92  F01C         	goto	u4070
  6100  003920                     u4071:
  6101  003920  EF5E  F01C         	goto	l4049
  6102  003924                     u4070:
  6103  003924                     l642:
  6104  003924  0012               	return		;funcret
  6105  003926                     __end_of_forward:
  6106                           	callstack 0
  6107                           
  6108 ;; *************** function _DCmotors_setPWM *****************
  6109 ;; Defined at:
  6110 ;;		line 49 in file "DC_motors.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  m               2   22[COMRAM] PTR struct .
  6113 ;;		 -> main@motorR(9), main@motorL(9), 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  PWMduty         2   31[COMRAM] int 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6127 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6129 ;;Total ram usage:       11 bytes
  6130 ;; Hardware stack levels used: 1
  6131 ;; Hardware stack levels required when called: 8
  6132 ;; This function calls:
  6133 ;;		___awdiv
  6134 ;;		___wmul
  6135 ;; This function is called by:
  6136 ;;		_forward
  6137 ;;		_reverse
  6138 ;;		_stop
  6139 ;;		_turnleft
  6140 ;;		_turnright
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text23
  6145  002CEE                     __ptext23:
  6146                           	callstack 0
  6147  002CEE                     _DCmotors_setPWM:
  6148                           	callstack 21
  6149  002CEE                     
  6150                           ;DC_motors.c: 50:  int PWMduty;;DC_motors.c: 52:  if (m->direction){PWMduty = (m->PWMper
      +                          iod)-((int)(m->power)*(m->PWMperiod))/100;}
  6151  002CEE  EE20 F001          	lfsr	2,1
  6152  002CF2  5017               	movf	DCmotors_setPWM@m^0,w,c
  6153  002CF4  26D9               	addwf	fsr2l,f,c
  6154  002CF6  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6155  002CF8  22DA               	addwfc	fsr2h,f,c
  6156  002CFA  50DF               	movf	indf2,w,c
  6157  002CFC  B4D8               	btfsc	status,2,c
  6158  002CFE  EF83  F016         	goto	u2851
  6159  002D02  EF85  F016         	goto	u2850
  6160  002D06                     u2851:
  6161  002D06  EFB6  F016         	goto	l3313
  6162  002D0A                     u2850:
  6163  002D0A  C017  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  6164  002D0E  C018  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  6165  002D12  50DF               	movf	indf2,w,c
  6166  002D14  6E19               	movwf	??_DCmotors_setPWM^0,c
  6167  002D16  5019               	movf	??_DCmotors_setPWM^0,w,c
  6168  002D18  6E09               	movwf	___wmul@multiplier^0,c
  6169  002D1A  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6170  002D1C  EE20 F007          	lfsr	2,7
  6171  002D20  5017               	movf	DCmotors_setPWM@m^0,w,c
  6172  002D22  26D9               	addwf	fsr2l,f,c
  6173  002D24  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6174  002D26  22DA               	addwfc	fsr2h,f,c
  6175  002D28  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6176  002D2C  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6177  002D30  ECDF  F01E         	call	___wmul	;wreg free
  6178  002D34  C009  F00F         	movff	?___wmul,___awdiv@dividend
  6179  002D38  C00A  F010         	movff	?___wmul+1,___awdiv@dividend+1
  6180  002D3C  0E00               	movlw	0
  6181  002D3E  6E12               	movwf	(___awdiv@divisor+1)^0,c
  6182  002D40  0E64               	movlw	100
  6183  002D42  6E11               	movwf	___awdiv@divisor^0,c
  6184  002D44  ECA1  F01A         	call	___awdiv	;wreg free
  6185  002D48  EE20 F007          	lfsr	2,7
  6186  002D4C  5017               	movf	DCmotors_setPWM@m^0,w,c
  6187  002D4E  26D9               	addwf	fsr2l,f,c
  6188  002D50  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6189  002D52  22DA               	addwfc	fsr2h,f,c
  6190  002D54  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM+1
  6191  002D58  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+2
  6192  002D5C  500F               	movf	?___awdiv^0,w,c
  6193  002D5E  5C1A               	subwf	(??_DCmotors_setPWM+1)^0,w,c
  6194  002D60  6E20               	movwf	DCmotors_setPWM@PWMduty^0,c
  6195  002D62  5010               	movf	(?___awdiv+1)^0,w,c
  6196  002D64  581B               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
  6197  002D66  6E21               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
  6198  002D68  EFD9  F016         	goto	l3315
  6199  002D6C                     l3313:
  6200  002D6C  C017  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  6201  002D70  C018  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  6202  002D74  50DF               	movf	indf2,w,c
  6203  002D76  6E19               	movwf	??_DCmotors_setPWM^0,c
  6204  002D78  5019               	movf	??_DCmotors_setPWM^0,w,c
  6205  002D7A  6E09               	movwf	___wmul@multiplier^0,c
  6206  002D7C  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6207  002D7E  EE20 F007          	lfsr	2,7
  6208  002D82  5017               	movf	DCmotors_setPWM@m^0,w,c
  6209  002D84  26D9               	addwf	fsr2l,f,c
  6210  002D86  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6211  002D88  22DA               	addwfc	fsr2h,f,c
  6212  002D8A  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6213  002D8E  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6214  002D92  ECDF  F01E         	call	___wmul	;wreg free
  6215  002D96  C009  F00F         	movff	?___wmul,___awdiv@dividend
  6216  002D9A  C00A  F010         	movff	?___wmul+1,___awdiv@dividend+1
  6217  002D9E  0E00               	movlw	0
  6218  002DA0  6E12               	movwf	(___awdiv@divisor+1)^0,c
  6219  002DA2  0E64               	movlw	100
  6220  002DA4  6E11               	movwf	___awdiv@divisor^0,c
  6221  002DA6  ECA1  F01A         	call	___awdiv	;wreg free
  6222  002DAA  C00F  F020         	movff	?___awdiv,DCmotors_setPWM@PWMduty
  6223  002DAE  C010  F021         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
  6224  002DB2                     l3315:
  6225                           
  6226                           ;DC_motors.c: 55:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  6227  002DB2  EE20 F002          	lfsr	2,2
  6228  002DB6  5017               	movf	DCmotors_setPWM@m^0,w,c
  6229  002DB8  26D9               	addwf	fsr2l,f,c
  6230  002DBA  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6231  002DBC  22DA               	addwfc	fsr2h,f,c
  6232  002DBE  CFDE F019          	movff	postinc2,??_DCmotors_setPWM
  6233  002DC2  CFDD F01A          	movff	postdec2,??_DCmotors_setPWM+1
  6234  002DC6  C019  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  6235  002DCA  C01A  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  6236  002DCE  C020  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
  6237  002DD2                     
  6238                           ;DC_motors.c: 57:  if (m->direction){*(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<
      +                          <(m->dir_pin)));}
  6239  002DD2  EE20 F001          	lfsr	2,1
  6240  002DD6  5017               	movf	DCmotors_setPWM@m^0,w,c
  6241  002DD8  26D9               	addwf	fsr2l,f,c
  6242  002DDA  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6243  002DDC  22DA               	addwfc	fsr2h,f,c
  6244  002DDE  50DF               	movf	indf2,w,c
  6245  002DE0  B4D8               	btfsc	status,2,c
  6246  002DE2  EFF5  F016         	goto	u2861
  6247  002DE6  EFF7  F016         	goto	u2860
  6248  002DEA                     u2861:
  6249  002DEA  EF2C  F017         	goto	l3321
  6250  002DEE                     u2860:
  6251  002DEE  EE20 F004          	lfsr	2,4
  6252  002DF2  5017               	movf	DCmotors_setPWM@m^0,w,c
  6253  002DF4  26D9               	addwf	fsr2l,f,c
  6254  002DF6  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6255  002DF8  22DA               	addwfc	fsr2h,f,c
  6256  002DFA  CFDE F019          	movff	postinc2,??_DCmotors_setPWM
  6257  002DFE  CFDD F01A          	movff	postdec2,??_DCmotors_setPWM+1
  6258  002E02  C019  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  6259  002E06  C01A  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  6260  002E0A  EE10 F004          	lfsr	1,4
  6261  002E0E  5017               	movf	DCmotors_setPWM@m^0,w,c
  6262  002E10  26E1               	addwf	fsr1l,f,c
  6263  002E12  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6264  002E14  22E2               	addwfc	fsr1h,f,c
  6265  002E16  CFE6 F01B          	movff	postinc1,??_DCmotors_setPWM+2
  6266  002E1A  CFE5 F01C          	movff	postdec1,??_DCmotors_setPWM+3
  6267  002E1E  C01B  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  6268  002E22  C01C  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  6269  002E26  50E7               	movf	indf1,w,c
  6270  002E28  6E1D               	movwf	(??_DCmotors_setPWM+4)^0,c
  6271  002E2A  EE10 F006          	lfsr	1,6
  6272  002E2E  5017               	movf	DCmotors_setPWM@m^0,w,c
  6273  002E30  26E1               	addwf	fsr1l,f,c
  6274  002E32  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6275  002E34  22E2               	addwfc	fsr1h,f,c
  6276  002E36  50E7               	movf	indf1,w,c
  6277  002E38  6E1E               	movwf	(??_DCmotors_setPWM+5)^0,c
  6278  002E3A  0E01               	movlw	1
  6279  002E3C  6E1F               	movwf	(??_DCmotors_setPWM+6)^0,c
  6280  002E3E  2A1E               	incf	(??_DCmotors_setPWM+5)^0,f,c
  6281  002E40  EF24  F017         	goto	u2874
  6282  002E44                     u2875:
  6283  002E44  90D8               	bcf	status,0,c
  6284  002E46  361F               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  6285  002E48                     u2874:
  6286  002E48  2E1E               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  6287  002E4A  EF22  F017         	goto	u2875
  6288  002E4E  501F               	movf	(??_DCmotors_setPWM+6)^0,w,c
  6289  002E50  101D               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
  6290  002E52  6EDF               	movwf	indf2,c
  6291  002E54  EF60  F017         	goto	l627
  6292  002E58                     l3321:
  6293  002E58  EE20 F004          	lfsr	2,4
  6294  002E5C  5017               	movf	DCmotors_setPWM@m^0,w,c
  6295  002E5E  26D9               	addwf	fsr2l,f,c
  6296  002E60  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6297  002E62  22DA               	addwfc	fsr2h,f,c
  6298  002E64  CFDE F019          	movff	postinc2,??_DCmotors_setPWM
  6299  002E68  CFDD F01A          	movff	postdec2,??_DCmotors_setPWM+1
  6300  002E6C  C019  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  6301  002E70  C01A  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  6302  002E74  EE10 F004          	lfsr	1,4
  6303  002E78  5017               	movf	DCmotors_setPWM@m^0,w,c
  6304  002E7A  26E1               	addwf	fsr1l,f,c
  6305  002E7C  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6306  002E7E  22E2               	addwfc	fsr1h,f,c
  6307  002E80  CFE6 F01B          	movff	postinc1,??_DCmotors_setPWM+2
  6308  002E84  CFE5 F01C          	movff	postdec1,??_DCmotors_setPWM+3
  6309  002E88  C01B  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  6310  002E8C  C01C  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  6311  002E90  50E7               	movf	indf1,w,c
  6312  002E92  6E1D               	movwf	(??_DCmotors_setPWM+4)^0,c
  6313  002E94  EE10 F006          	lfsr	1,6
  6314  002E98  5017               	movf	DCmotors_setPWM@m^0,w,c
  6315  002E9A  26E1               	addwf	fsr1l,f,c
  6316  002E9C  5018               	movf	(DCmotors_setPWM@m+1)^0,w,c
  6317  002E9E  22E2               	addwfc	fsr1h,f,c
  6318  002EA0  50E7               	movf	indf1,w,c
  6319  002EA2  6E1E               	movwf	(??_DCmotors_setPWM+5)^0,c
  6320  002EA4  0E01               	movlw	1
  6321  002EA6  6E1F               	movwf	(??_DCmotors_setPWM+6)^0,c
  6322  002EA8  2A1E               	incf	(??_DCmotors_setPWM+5)^0,f,c
  6323  002EAA  EF59  F017         	goto	u2884
  6324  002EAE                     u2885:
  6325  002EAE  90D8               	bcf	status,0,c
  6326  002EB0  361F               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  6327  002EB2                     u2884:
  6328  002EB2  2E1E               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  6329  002EB4  EF57  F017         	goto	u2885
  6330  002EB8  501F               	movf	(??_DCmotors_setPWM+6)^0,w,c
  6331  002EBA  0AFF               	xorlw	255
  6332  002EBC  141D               	andwf	(??_DCmotors_setPWM+4)^0,w,c
  6333  002EBE  6EDF               	movwf	indf2,c
  6334  002EC0                     l627:
  6335  002EC0  0012               	return		;funcret
  6336  002EC2                     __end_of_DCmotors_setPWM:
  6337                           	callstack 0
  6338                           
  6339 ;; *************** function ___wmul *****************
  6340 ;; Defined at:
  6341 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  multiplier      2    8[COMRAM] unsigned int 
  6344 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  product         2   12[COMRAM] unsigned int 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  2    8[COMRAM] unsigned int 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, prodl, prodh
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;Total ram usage:        6 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 7
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_DCmotors_setPWM
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text24
  6371  003DBE                     __ptext24:
  6372                           	callstack 0
  6373  003DBE                     ___wmul:
  6374                           	callstack 21
  6375  003DBE  5009               	movf	___wmul@multiplier^0,w,c
  6376  003DC0  020B               	mulwf	___wmul@multiplicand^0,c
  6377  003DC2  CFF3 F00D          	movff	prodl,___wmul@product
  6378  003DC6  CFF4 F00E          	movff	prodh,___wmul@product+1
  6379  003DCA  5009               	movf	___wmul@multiplier^0,w,c
  6380  003DCC  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  6381  003DCE  50F3               	movf	243,w,c
  6382  003DD0  260E               	addwf	(___wmul@product+1)^0,f,c
  6383  003DD2  500A               	movf	(___wmul@multiplier+1)^0,w,c
  6384  003DD4  020B               	mulwf	___wmul@multiplicand^0,c
  6385  003DD6  50F3               	movf	243,w,c
  6386  003DD8  260E               	addwf	(___wmul@product+1)^0,f,c
  6387  003DDA  C00D  F009         	movff	___wmul@product,?___wmul
  6388  003DDE  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  6389  003DE2  0012               	return		;funcret
  6390  003DE4                     __end_of___wmul:
  6391                           	callstack 0
  6392                           
  6393 ;; *************** function ___awdiv *****************
  6394 ;; Defined at:
  6395 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;  dividend        2   14[COMRAM] int 
  6398 ;;  divisor         2   16[COMRAM] int 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  quotient        2   20[COMRAM] int 
  6401 ;;  sign            1   19[COMRAM] unsigned char 
  6402 ;;  counter         1   18[COMRAM] unsigned char 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  2   14[COMRAM] int 
  6405 ;; Registers used:
  6406 ;;		wreg, status,2, status,0
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6412 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6413 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6415 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6416 ;;Total ram usage:        8 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; Hardware stack levels required when called: 7
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_DCmotors_setPWM
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text25
  6427  003542                     __ptext25:
  6428                           	callstack 0
  6429  003542                     ___awdiv:
  6430                           	callstack 21
  6431  003542  0E00               	movlw	0
  6432  003544  6E14               	movwf	___awdiv@sign^0,c
  6433  003546  BE12               	btfsc	(___awdiv@divisor+1)^0,7,c
  6434  003548  EFAA  F01A         	goto	u2770
  6435  00354C  EFA8  F01A         	goto	u2771
  6436  003550                     u2771:
  6437  003550  EFB0  F01A         	goto	l3269
  6438  003554                     u2770:
  6439  003554  6C11               	negf	___awdiv@divisor^0,c
  6440  003556  1E12               	comf	(___awdiv@divisor+1)^0,f,c
  6441  003558  B0D8               	btfsc	status,0,c
  6442  00355A  2A12               	incf	(___awdiv@divisor+1)^0,f,c
  6443  00355C  0E01               	movlw	1
  6444  00355E  6E14               	movwf	___awdiv@sign^0,c
  6445  003560                     l3269:
  6446  003560  BE10               	btfsc	(___awdiv@dividend+1)^0,7,c
  6447  003562  EFB7  F01A         	goto	u2780
  6448  003566  EFB5  F01A         	goto	u2781
  6449  00356A                     u2781:
  6450  00356A  EFBD  F01A         	goto	l3275
  6451  00356E                     u2780:
  6452  00356E  6C0F               	negf	___awdiv@dividend^0,c
  6453  003570  1E10               	comf	(___awdiv@dividend+1)^0,f,c
  6454  003572  B0D8               	btfsc	status,0,c
  6455  003574  2A10               	incf	(___awdiv@dividend+1)^0,f,c
  6456  003576  0E01               	movlw	1
  6457  003578  1A14               	xorwf	___awdiv@sign^0,f,c
  6458  00357A                     l3275:
  6459  00357A  0E00               	movlw	0
  6460  00357C  6E16               	movwf	(___awdiv@quotient+1)^0,c
  6461  00357E  0E00               	movlw	0
  6462  003580  6E15               	movwf	___awdiv@quotient^0,c
  6463  003582  5011               	movf	___awdiv@divisor^0,w,c
  6464  003584  1012               	iorwf	(___awdiv@divisor+1)^0,w,c
  6465  003586  B4D8               	btfsc	status,2,c
  6466  003588  EFC8  F01A         	goto	u2791
  6467  00358C  EFCA  F01A         	goto	u2790
  6468  003590                     u2791:
  6469  003590  EFF2  F01A         	goto	l3297
  6470  003594                     u2790:
  6471  003594  0E01               	movlw	1
  6472  003596  6E13               	movwf	___awdiv@counter^0,c
  6473  003598  EFD2  F01A         	goto	l3283
  6474  00359C                     l3281:
  6475  00359C  90D8               	bcf	status,0,c
  6476  00359E  3611               	rlcf	___awdiv@divisor^0,f,c
  6477  0035A0  3612               	rlcf	(___awdiv@divisor+1)^0,f,c
  6478  0035A2  2A13               	incf	___awdiv@counter^0,f,c
  6479  0035A4                     l3283:
  6480  0035A4  AE12               	btfss	(___awdiv@divisor+1)^0,7,c
  6481  0035A6  EFD7  F01A         	goto	u2801
  6482  0035AA  EFD9  F01A         	goto	u2800
  6483  0035AE                     u2801:
  6484  0035AE  EFCE  F01A         	goto	l3281
  6485  0035B2                     u2800:
  6486  0035B2                     l3285:
  6487  0035B2  90D8               	bcf	status,0,c
  6488  0035B4  3615               	rlcf	___awdiv@quotient^0,f,c
  6489  0035B6  3616               	rlcf	(___awdiv@quotient+1)^0,f,c
  6490  0035B8  5011               	movf	___awdiv@divisor^0,w,c
  6491  0035BA  5C0F               	subwf	___awdiv@dividend^0,w,c
  6492  0035BC  5012               	movf	(___awdiv@divisor+1)^0,w,c
  6493  0035BE  5810               	subwfb	(___awdiv@dividend+1)^0,w,c
  6494  0035C0  A0D8               	btfss	status,0,c
  6495  0035C2  EFE5  F01A         	goto	u2811
  6496  0035C6  EFE7  F01A         	goto	u2810
  6497  0035CA                     u2811:
  6498  0035CA  EFEC  F01A         	goto	l3293
  6499  0035CE                     u2810:
  6500  0035CE  5011               	movf	___awdiv@divisor^0,w,c
  6501  0035D0  5E0F               	subwf	___awdiv@dividend^0,f,c
  6502  0035D2  5012               	movf	(___awdiv@divisor+1)^0,w,c
  6503  0035D4  5A10               	subwfb	(___awdiv@dividend+1)^0,f,c
  6504  0035D6  8015               	bsf	___awdiv@quotient^0,0,c
  6505  0035D8                     l3293:
  6506  0035D8  90D8               	bcf	status,0,c
  6507  0035DA  3212               	rrcf	(___awdiv@divisor+1)^0,f,c
  6508  0035DC  3211               	rrcf	___awdiv@divisor^0,f,c
  6509  0035DE  2E13               	decfsz	___awdiv@counter^0,f,c
  6510  0035E0  EFD9  F01A         	goto	l3285
  6511  0035E4                     l3297:
  6512  0035E4  5014               	movf	___awdiv@sign^0,w,c
  6513  0035E6  B4D8               	btfsc	status,2,c
  6514  0035E8  EFF8  F01A         	goto	u2821
  6515  0035EC  EFFA  F01A         	goto	u2820
  6516  0035F0                     u2821:
  6517  0035F0  EFFE  F01A         	goto	l3301
  6518  0035F4                     u2820:
  6519  0035F4  6C15               	negf	___awdiv@quotient^0,c
  6520  0035F6  1E16               	comf	(___awdiv@quotient+1)^0,f,c
  6521  0035F8  B0D8               	btfsc	status,0,c
  6522  0035FA  2A16               	incf	(___awdiv@quotient+1)^0,f,c
  6523  0035FC                     l3301:
  6524  0035FC  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  6525  003600  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  6526  003604  0012               	return		;funcret
  6527  003606                     __end_of___awdiv:
  6528                           	callstack 0
  6529                           
  6530 ;; *************** function _colourclick_readRGBC2 *****************
  6531 ;; Defined at:
  6532 ;;		line 124 in file "colour_click.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;  tmpval          2   21[COMRAM] PTR struct .
  6535 ;;		 -> colourcards_testingRGBC2@abs(8), main@current(8), 
  6536 ;;  mode            1   23[COMRAM] unsigned char 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1    wreg      void 
  6541 ;; Registers used:
  6542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6548 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6551 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6552 ;;Total ram usage:        5 bytes
  6553 ;; Hardware stack levels used: 1
  6554 ;; Hardware stack levels required when called: 11
  6555 ;; This function calls:
  6556 ;;		_colourclickLEDs_C
  6557 ;;		_colourclick_readRGBC
  6558 ;; This function is called by:
  6559 ;;		_colourcards_readRGBC
  6560 ;;		_colourcards_testingRGBC2
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           	psect	text26
  6565  0031F2                     __ptext26:
  6566                           	callstack 0
  6567  0031F2                     _colourclick_readRGBC2:
  6568                           	callstack 18
  6569  0031F2                     
  6570                           ;colour_click.c: 125:     colourclickLEDs_C(0);
  6571  0031F2  0E00               	movlw	0
  6572  0031F4  EC04  F01F         	call	_colourclickLEDs_C
  6573  0031F8                     
  6574                           ;colour_click.c: 126:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6575  0031F8  0E09               	movlw	9
  6576  0031FA  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  6577  0031FC  0E1E               	movlw	30
  6578  0031FE  6E19               	movwf	??_colourclick_readRGBC2^0,c
  6579  003200  0EE4               	movlw	228
  6580  003202                     u6797:
  6581  003202  2EE8               	decfsz	wreg,f,c
  6582  003204  D7FE               	bra	u6797
  6583  003206  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  6584  003208  D7FC               	bra	u6797
  6585  00320A  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  6586  00320C  D7FA               	bra	u6797
  6587  00320E  D000               	nop2	
  6588  003210                     
  6589                           ;colour_click.c: 128:     if (mode==1) {
  6590  003210  0418               	decf	colourclick_readRGBC2@mode^0,w,c
  6591  003212  A4D8               	btfss	status,2,c
  6592  003214  EF0E  F019         	goto	u4161
  6593  003218  EF10  F019         	goto	u4160
  6594  00321C                     u4161:
  6595  00321C  EF3E  F019         	goto	l4165
  6596  003220                     u4160:
  6597  003220                     
  6598                           ;colour_click.c: 129:         LATGbits.LATG1 = 1;
  6599  003220  827F               	bsf	127,1,c	;volatile
  6600  003222                     
  6601                           ;colour_click.c: 130:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6602  003222  0E52               	movlw	82
  6603  003224  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  6604  003226  0E2B               	movlw	43
  6605  003228  6E19               	movwf	??_colourclick_readRGBC2^0,c
  6606  00322A  0E00               	movlw	0
  6607  00322C                     u6807:
  6608  00322C  2EE8               	decfsz	wreg,f,c
  6609  00322E  D7FE               	bra	u6807
  6610  003230  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  6611  003232  D7FC               	bra	u6807
  6612  003234  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  6613  003236  D7FA               	bra	u6807
  6614  003238  D000               	nop2	
  6615  00323A                     
  6616                           ;colour_click.c: 131:         colourclick_readRGBC(tmpval);
  6617  00323A  C016  F014         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  6618  00323E  C017  F015         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  6619  003242  EC07  F01D         	call	_colourclick_readRGBC	;wreg free
  6620  003246                     
  6621                           ;colour_click.c: 132:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6622  003246  0E52               	movlw	82
  6623  003248  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  6624  00324A  0E2B               	movlw	43
  6625  00324C  6E19               	movwf	??_colourclick_readRGBC2^0,c
  6626  00324E  0E00               	movlw	0
  6627  003250                     u6817:
  6628  003250  2EE8               	decfsz	wreg,f,c
  6629  003252  D7FE               	bra	u6817
  6630  003254  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  6631  003256  D7FC               	bra	u6817
  6632  003258  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  6633  00325A  D7FA               	bra	u6817
  6634  00325C  D000               	nop2	
  6635  00325E                     
  6636                           ;colour_click.c: 133:         LATGbits.LATG1 = 0;
  6637  00325E  927F               	bcf	127,1,c	;volatile
  6638  003260                     l4163:
  6639                           
  6640                           ;colour_click.c: 134:         _delay((unsigned long)((20)*(64000000/4000.0)));
  6641  003260  0E02               	movlw	2
  6642  003262  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  6643  003264  0EA0               	movlw	160
  6644  003266  6E19               	movwf	??_colourclick_readRGBC2^0,c
  6645  003268  0E92               	movlw	146
  6646  00326A                     u6827:
  6647  00326A  2EE8               	decfsz	wreg,f,c
  6648  00326C  D7FE               	bra	u6827
  6649  00326E  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  6650  003270  D7FC               	bra	u6827
  6651  003272  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  6652  003274  D7FA               	bra	u6827
  6653  003276  D000               	nop2	
  6654                           
  6655                           ;colour_click.c: 136:     } else if (mode==2) {
  6656  003278  EF94  F019         	goto	l4193
  6657  00327C                     l4165:
  6658  00327C  0E02               	movlw	2
  6659  00327E  1818               	xorwf	colourclick_readRGBC2@mode^0,w,c
  6660  003280  A4D8               	btfss	status,2,c
  6661  003282  EF45  F019         	goto	u4171
  6662  003286  EF47  F019         	goto	u4170
  6663  00328A                     u4171:
  6664  00328A  EF69  F019         	goto	l4179
  6665  00328E                     u4170:
  6666  00328E                     
  6667                           ;colour_click.c: 137:         LATAbits.LATA4 = 1;
  6668  00328E  8879               	bsf	121,4,c	;volatile
  6669  003290                     
  6670                           ;colour_click.c: 138:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6671  003290  0E52               	movlw	82
  6672  003292  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  6673  003294  0E2B               	movlw	43
  6674  003296  6E19               	movwf	??_colourclick_readRGBC2^0,c
  6675  003298  0E00               	movlw	0
  6676  00329A                     u6837:
  6677  00329A  2EE8               	decfsz	wreg,f,c
  6678  00329C  D7FE               	bra	u6837
  6679  00329E  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  6680  0032A0  D7FC               	bra	u6837
  6681  0032A2  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  6682  0032A4  D7FA               	bra	u6837
  6683  0032A6  D000               	nop2	
  6684  0032A8                     
  6685                           ;colour_click.c: 139:         colourclick_readRGBC(tmpval);
  6686  0032A8  C016  F014         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  6687  0032AC  C017  F015         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  6688  0032B0  EC07  F01D         	call	_colourclick_readRGBC	;wreg free
  6689  0032B4                     
  6690                           ;colour_click.c: 140:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6691  0032B4  0E52               	movlw	82
  6692  0032B6  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  6693  0032B8  0E2B               	movlw	43
  6694  0032BA  6E19               	movwf	??_colourclick_readRGBC2^0,c
  6695  0032BC  0E00               	movlw	0
  6696  0032BE                     u6847:
  6697  0032BE  2EE8               	decfsz	wreg,f,c
  6698  0032C0  D7FE               	bra	u6847
  6699  0032C2  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  6700  0032C4  D7FC               	bra	u6847
  6701  0032C6  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  6702  0032C8  D7FA               	bra	u6847
  6703  0032CA  D000               	nop2	
  6704  0032CC                     
  6705                           ;colour_click.c: 141:         LATAbits.LATA4 = 0;
  6706  0032CC  9879               	bcf	121,4,c	;volatile
  6707  0032CE  EF30  F019         	goto	l4163
  6708  0032D2                     l4179:
  6709  0032D2  0E03               	movlw	3
  6710  0032D4  1818               	xorwf	colourclick_readRGBC2@mode^0,w,c
  6711  0032D6  A4D8               	btfss	status,2,c
  6712  0032D8  EF70  F019         	goto	u4181
  6713  0032DC  EF72  F019         	goto	u4180
  6714  0032E0                     u4181:
  6715  0032E0  EF94  F019         	goto	l4193
  6716  0032E4                     u4180:
  6717  0032E4                     
  6718                           ;colour_click.c: 145:         LATFbits.LATF7 = 1;
  6719  0032E4  8E7E               	bsf	126,7,c	;volatile
  6720  0032E6                     
  6721                           ;colour_click.c: 146:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6722  0032E6  0E52               	movlw	82
  6723  0032E8  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  6724  0032EA  0E2B               	movlw	43
  6725  0032EC  6E19               	movwf	??_colourclick_readRGBC2^0,c
  6726  0032EE  0E00               	movlw	0
  6727  0032F0                     u6857:
  6728  0032F0  2EE8               	decfsz	wreg,f,c
  6729  0032F2  D7FE               	bra	u6857
  6730  0032F4  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  6731  0032F6  D7FC               	bra	u6857
  6732  0032F8  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  6733  0032FA  D7FA               	bra	u6857
  6734  0032FC  D000               	nop2	
  6735  0032FE                     
  6736                           ;colour_click.c: 147:         colourclick_readRGBC(tmpval);
  6737  0032FE  C016  F014         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  6738  003302  C017  F015         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  6739  003306  EC07  F01D         	call	_colourclick_readRGBC	;wreg free
  6740  00330A                     
  6741                           ;colour_click.c: 148:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  6742  00330A  0E52               	movlw	82
  6743  00330C  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  6744  00330E  0E2B               	movlw	43
  6745  003310  6E19               	movwf	??_colourclick_readRGBC2^0,c
  6746  003312  0E00               	movlw	0
  6747  003314                     u6867:
  6748  003314  2EE8               	decfsz	wreg,f,c
  6749  003316  D7FE               	bra	u6867
  6750  003318  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  6751  00331A  D7FC               	bra	u6867
  6752  00331C  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  6753  00331E  D7FA               	bra	u6867
  6754  003320  D000               	nop2	
  6755  003322                     
  6756                           ;colour_click.c: 149:         LATFbits.LATF7 = 0;
  6757  003322  9E7E               	bcf	126,7,c	;volatile
  6758  003324  EF30  F019         	goto	l4163
  6759  003328                     l4193:
  6760                           
  6761                           ;colour_click.c: 153:     colourclickLEDs_C(1);
  6762  003328  0E01               	movlw	1
  6763  00332A  EC04  F01F         	call	_colourclickLEDs_C
  6764  00332E                     
  6765                           ;colour_click.c: 154:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6766  00332E  0E09               	movlw	9
  6767  003330  6E1A               	movwf	(??_colourclick_readRGBC2+1)^0,c
  6768  003332  0E1E               	movlw	30
  6769  003334  6E19               	movwf	??_colourclick_readRGBC2^0,c
  6770  003336  0EE4               	movlw	228
  6771  003338                     u6877:
  6772  003338  2EE8               	decfsz	wreg,f,c
  6773  00333A  D7FE               	bra	u6877
  6774  00333C  2E19               	decfsz	??_colourclick_readRGBC2^0,f,c
  6775  00333E  D7FC               	bra	u6877
  6776  003340  2E1A               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  6777  003342  D7FA               	bra	u6877
  6778  003344  D000               	nop2	
  6779  003346  0012               	return		;funcret
  6780  003348                     __end_of_colourclick_readRGBC2:
  6781                           	callstack 0
  6782                           
  6783 ;; *************** function _colourclick_readRGBC *****************
  6784 ;; Defined at:
  6785 ;;		line 113 in file "colour_click.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  tmpval          2   19[COMRAM] PTR struct .
  6788 ;;		 -> colourclick_calibration@initial(8), colourcards_testingRGBC2@abs(8), main@current(8), 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;		None
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1    wreg      void 
  6793 ;; Registers used:
  6794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6804 ;;Total ram usage:        2 bytes
  6805 ;; Hardware stack levels used: 1
  6806 ;; Hardware stack levels required when called: 10
  6807 ;; This function calls:
  6808 ;;		_colourclick_readB
  6809 ;;		_colourclick_readC
  6810 ;;		_colourclick_readG
  6811 ;;		_colourclick_readR
  6812 ;; This function is called by:
  6813 ;;		_main
  6814 ;;		_colourcards_readRGBC
  6815 ;;		_colourclick_readRGBC2
  6816 ;;		_colourclick_calibration
  6817 ;;		_colourcards_testingRGBC2
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text27
  6822  003A0E                     __ptext27:
  6823                           	callstack 0
  6824  003A0E                     _colourclick_readRGBC:
  6825                           	callstack 20
  6826  003A0E                     
  6827                           ;colour_click.c: 114:     tmpval->R = colourclick_readR();
  6828  003A0E  EC36  F01D         	call	_colourclick_readR	;wreg free
  6829  003A12  C014  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
  6830  003A16  C015  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
  6831  003A1A  C00D  FFDE         	movff	?_colourclick_readR,postinc2
  6832  003A1E  C00E  FFDD         	movff	?_colourclick_readR+1,postdec2
  6833                           
  6834                           ;colour_click.c: 115:     tmpval->G = colourclick_readG();
  6835  003A22  EC5E  F01D         	call	_colourclick_readG	;wreg free
  6836  003A26  EE20 F002          	lfsr	2,2
  6837  003A2A  5014               	movf	colourclick_readRGBC@tmpval^0,w,c
  6838  003A2C  26D9               	addwf	fsr2l,f,c
  6839  003A2E  5015               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  6840  003A30  22DA               	addwfc	fsr2h,f,c
  6841  003A32  C00D  FFDE         	movff	?_colourclick_readG,postinc2
  6842  003A36  C00E  FFDD         	movff	?_colourclick_readG+1,postdec2
  6843                           
  6844                           ;colour_click.c: 116:     tmpval->B = colourclick_readB();
  6845  003A3A  ECAE  F01D         	call	_colourclick_readB	;wreg free
  6846  003A3E  EE20 F004          	lfsr	2,4
  6847  003A42  5014               	movf	colourclick_readRGBC@tmpval^0,w,c
  6848  003A44  26D9               	addwf	fsr2l,f,c
  6849  003A46  5015               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  6850  003A48  22DA               	addwfc	fsr2h,f,c
  6851  003A4A  C00D  FFDE         	movff	?_colourclick_readB,postinc2
  6852  003A4E  C00E  FFDD         	movff	?_colourclick_readB+1,postdec2
  6853                           
  6854                           ;colour_click.c: 117:     tmpval->C = colourclick_readC();
  6855  003A52  EC86  F01D         	call	_colourclick_readC	;wreg free
  6856  003A56  EE20 F006          	lfsr	2,6
  6857  003A5A  5014               	movf	colourclick_readRGBC@tmpval^0,w,c
  6858  003A5C  26D9               	addwf	fsr2l,f,c
  6859  003A5E  5015               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  6860  003A60  22DA               	addwfc	fsr2h,f,c
  6861  003A62  C00D  FFDE         	movff	?_colourclick_readC,postinc2
  6862  003A66  C00E  FFDD         	movff	?_colourclick_readC+1,postdec2
  6863  003A6A  0012               	return		;funcret
  6864  003A6C                     __end_of_colourclick_readRGBC:
  6865                           	callstack 0
  6866                           
  6867 ;; *************** function _colourclick_readR *****************
  6868 ;; Defined at:
  6869 ;;		line 45 in file "colour_click.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;		None
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  tmp             2   17[COMRAM] unsigned int 
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  2   12[COMRAM] unsigned int 
  6876 ;; Registers used:
  6877 ;;		wreg, status,2, status,0, cstack
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6886 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6887 ;;Total ram usage:        7 bytes
  6888 ;; Hardware stack levels used: 1
  6889 ;; Hardware stack levels required when called: 9
  6890 ;; This function calls:
  6891 ;;		_I2C_2_Master_Read
  6892 ;;		_I2C_2_Master_RepStart
  6893 ;;		_I2C_2_Master_Start
  6894 ;;		_I2C_2_Master_Stop
  6895 ;;		_I2C_2_Master_Write
  6896 ;; This function is called by:
  6897 ;;		_colourclick_readRGBC
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text28
  6902  003A6C                     __ptext28:
  6903                           	callstack 0
  6904  003A6C                     _colourclick_readR:
  6905                           	callstack 20
  6906  003A6C                     
  6907                           ;colour_click.c: 46:  unsigned int tmp;;colour_click.c: 47:  I2C_2_Master_Start();
  6908  003A6C  ECC2  F01F         	call	_I2C_2_Master_Start	;wreg free
  6909                           
  6910                           ;colour_click.c: 48:  I2C_2_Master_Write(0x52 | 0x00);
  6911  003A70  0E52               	movlw	82
  6912  003A72  ECAB  F01F         	call	_I2C_2_Master_Write
  6913                           
  6914                           ;colour_click.c: 49:  I2C_2_Master_Write(0xA0 | 0x16);
  6915  003A76  0EB6               	movlw	182
  6916  003A78  ECAB  F01F         	call	_I2C_2_Master_Write
  6917                           
  6918                           ;colour_click.c: 50:  I2C_2_Master_RepStart();
  6919  003A7C  ECC7  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6920                           
  6921                           ;colour_click.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  6922  003A80  0E53               	movlw	83
  6923  003A82  ECAB  F01F         	call	_I2C_2_Master_Write
  6924                           
  6925                           ;colour_click.c: 52:  tmp=I2C_2_Master_Read(1);
  6926  003A86  0E01               	movlw	1
  6927  003A88  EC4C  F01E         	call	_I2C_2_Master_Read
  6928  003A8C  6E0F               	movwf	??_colourclick_readR^0,c
  6929  003A8E  500F               	movf	??_colourclick_readR^0,w,c
  6930  003A90  6E12               	movwf	colourclick_readR@tmp^0,c
  6931  003A92  6A13               	clrf	(colourclick_readR@tmp+1)^0,c
  6932                           
  6933                           ;colour_click.c: 53:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  6934  003A94  0E00               	movlw	0
  6935  003A96  EC4C  F01E         	call	_I2C_2_Master_Read
  6936  003A9A  6E0F               	movwf	??_colourclick_readR^0,c
  6937  003A9C  500F               	movf	??_colourclick_readR^0,w,c
  6938  003A9E  6E11               	movwf	(??_colourclick_readR+2)^0,c
  6939  003AA0  6A10               	clrf	(??_colourclick_readR+1)^0,c
  6940  003AA2  5012               	movf	colourclick_readR@tmp^0,w,c
  6941  003AA4  1010               	iorwf	(??_colourclick_readR+1)^0,w,c
  6942  003AA6  6E12               	movwf	colourclick_readR@tmp^0,c
  6943  003AA8  5013               	movf	(colourclick_readR@tmp+1)^0,w,c
  6944  003AAA  1011               	iorwf	(??_colourclick_readR+2)^0,w,c
  6945  003AAC  6E13               	movwf	(colourclick_readR@tmp+1)^0,c
  6946                           
  6947                           ;colour_click.c: 54:  I2C_2_Master_Stop();
  6948  003AAE  ECBD  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6949  003AB2                     
  6950                           ;colour_click.c: 55:  return tmp;
  6951  003AB2  C012  F00D         	movff	colourclick_readR@tmp,?_colourclick_readR
  6952  003AB6  C013  F00E         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
  6953  003ABA  0012               	return		;funcret
  6954  003ABC                     __end_of_colourclick_readR:
  6955                           	callstack 0
  6956                           
  6957 ;; *************** function _colourclick_readG *****************
  6958 ;; Defined at:
  6959 ;;		line 62 in file "colour_click.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;		None
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  tmp             2   17[COMRAM] unsigned int 
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  2   12[COMRAM] unsigned int 
  6966 ;; Registers used:
  6967 ;;		wreg, status,2, status,0, cstack
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6975 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6976 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6977 ;;Total ram usage:        7 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; Hardware stack levels required when called: 9
  6980 ;; This function calls:
  6981 ;;		_I2C_2_Master_Read
  6982 ;;		_I2C_2_Master_RepStart
  6983 ;;		_I2C_2_Master_Start
  6984 ;;		_I2C_2_Master_Stop
  6985 ;;		_I2C_2_Master_Write
  6986 ;; This function is called by:
  6987 ;;		_colourclick_readRGBC
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text29
  6992  003ABC                     __ptext29:
  6993                           	callstack 0
  6994  003ABC                     _colourclick_readG:
  6995                           	callstack 20
  6996  003ABC                     
  6997                           ;colour_click.c: 63:  unsigned int tmp;;colour_click.c: 64:  I2C_2_Master_Start();
  6998  003ABC  ECC2  F01F         	call	_I2C_2_Master_Start	;wreg free
  6999                           
  7000                           ;colour_click.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  7001  003AC0  0E52               	movlw	82
  7002  003AC2  ECAB  F01F         	call	_I2C_2_Master_Write
  7003                           
  7004                           ;colour_click.c: 66:  I2C_2_Master_Write(0xA0 | 0x18);
  7005  003AC6  0EB8               	movlw	184
  7006  003AC8  ECAB  F01F         	call	_I2C_2_Master_Write
  7007                           
  7008                           ;colour_click.c: 67:  I2C_2_Master_RepStart();
  7009  003ACC  ECC7  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7010                           
  7011                           ;colour_click.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  7012  003AD0  0E53               	movlw	83
  7013  003AD2  ECAB  F01F         	call	_I2C_2_Master_Write
  7014                           
  7015                           ;colour_click.c: 69:  tmp=I2C_2_Master_Read(1);
  7016  003AD6  0E01               	movlw	1
  7017  003AD8  EC4C  F01E         	call	_I2C_2_Master_Read
  7018  003ADC  6E0F               	movwf	??_colourclick_readG^0,c
  7019  003ADE  500F               	movf	??_colourclick_readG^0,w,c
  7020  003AE0  6E12               	movwf	colourclick_readG@tmp^0,c
  7021  003AE2  6A13               	clrf	(colourclick_readG@tmp+1)^0,c
  7022                           
  7023                           ;colour_click.c: 70:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  7024  003AE4  0E00               	movlw	0
  7025  003AE6  EC4C  F01E         	call	_I2C_2_Master_Read
  7026  003AEA  6E0F               	movwf	??_colourclick_readG^0,c
  7027  003AEC  500F               	movf	??_colourclick_readG^0,w,c
  7028  003AEE  6E11               	movwf	(??_colourclick_readG+2)^0,c
  7029  003AF0  6A10               	clrf	(??_colourclick_readG+1)^0,c
  7030  003AF2  5012               	movf	colourclick_readG@tmp^0,w,c
  7031  003AF4  1010               	iorwf	(??_colourclick_readG+1)^0,w,c
  7032  003AF6  6E12               	movwf	colourclick_readG@tmp^0,c
  7033  003AF8  5013               	movf	(colourclick_readG@tmp+1)^0,w,c
  7034  003AFA  1011               	iorwf	(??_colourclick_readG+2)^0,w,c
  7035  003AFC  6E13               	movwf	(colourclick_readG@tmp+1)^0,c
  7036                           
  7037                           ;colour_click.c: 71:  I2C_2_Master_Stop();
  7038  003AFE  ECBD  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7039  003B02                     
  7040                           ;colour_click.c: 72:  return tmp;
  7041  003B02  C012  F00D         	movff	colourclick_readG@tmp,?_colourclick_readG
  7042  003B06  C013  F00E         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
  7043  003B0A  0012               	return		;funcret
  7044  003B0C                     __end_of_colourclick_readG:
  7045                           	callstack 0
  7046                           
  7047 ;; *************** function _colourclick_readC *****************
  7048 ;; Defined at:
  7049 ;;		line 96 in file "colour_click.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;		None
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  tmp             2   17[COMRAM] unsigned int 
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  2   12[COMRAM] unsigned int 
  7056 ;; Registers used:
  7057 ;;		wreg, status,2, status,0, cstack
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7066 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7067 ;;Total ram usage:        7 bytes
  7068 ;; Hardware stack levels used: 1
  7069 ;; Hardware stack levels required when called: 9
  7070 ;; This function calls:
  7071 ;;		_I2C_2_Master_Read
  7072 ;;		_I2C_2_Master_RepStart
  7073 ;;		_I2C_2_Master_Start
  7074 ;;		_I2C_2_Master_Stop
  7075 ;;		_I2C_2_Master_Write
  7076 ;; This function is called by:
  7077 ;;		_colourclick_readRGBC
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text30
  7082  003B0C                     __ptext30:
  7083                           	callstack 0
  7084  003B0C                     _colourclick_readC:
  7085                           	callstack 20
  7086  003B0C                     
  7087                           ;colour_click.c: 97:  unsigned int tmp;;colour_click.c: 98:  I2C_2_Master_Start();
  7088  003B0C  ECC2  F01F         	call	_I2C_2_Master_Start	;wreg free
  7089                           
  7090                           ;colour_click.c: 99:  I2C_2_Master_Write(0x52 | 0x00);
  7091  003B10  0E52               	movlw	82
  7092  003B12  ECAB  F01F         	call	_I2C_2_Master_Write
  7093                           
  7094                           ;colour_click.c: 100:  I2C_2_Master_Write(0xA0 | 0x14);
  7095  003B16  0EB4               	movlw	180
  7096  003B18  ECAB  F01F         	call	_I2C_2_Master_Write
  7097                           
  7098                           ;colour_click.c: 101:  I2C_2_Master_RepStart();
  7099  003B1C  ECC7  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7100                           
  7101                           ;colour_click.c: 102:  I2C_2_Master_Write(0x52 | 0x01);
  7102  003B20  0E53               	movlw	83
  7103  003B22  ECAB  F01F         	call	_I2C_2_Master_Write
  7104                           
  7105                           ;colour_click.c: 103:  tmp=I2C_2_Master_Read(1);
  7106  003B26  0E01               	movlw	1
  7107  003B28  EC4C  F01E         	call	_I2C_2_Master_Read
  7108  003B2C  6E0F               	movwf	??_colourclick_readC^0,c
  7109  003B2E  500F               	movf	??_colourclick_readC^0,w,c
  7110  003B30  6E12               	movwf	colourclick_readC@tmp^0,c
  7111  003B32  6A13               	clrf	(colourclick_readC@tmp+1)^0,c
  7112                           
  7113                           ;colour_click.c: 104:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  7114  003B34  0E00               	movlw	0
  7115  003B36  EC4C  F01E         	call	_I2C_2_Master_Read
  7116  003B3A  6E0F               	movwf	??_colourclick_readC^0,c
  7117  003B3C  500F               	movf	??_colourclick_readC^0,w,c
  7118  003B3E  6E11               	movwf	(??_colourclick_readC+2)^0,c
  7119  003B40  6A10               	clrf	(??_colourclick_readC+1)^0,c
  7120  003B42  5012               	movf	colourclick_readC@tmp^0,w,c
  7121  003B44  1010               	iorwf	(??_colourclick_readC+1)^0,w,c
  7122  003B46  6E12               	movwf	colourclick_readC@tmp^0,c
  7123  003B48  5013               	movf	(colourclick_readC@tmp+1)^0,w,c
  7124  003B4A  1011               	iorwf	(??_colourclick_readC+2)^0,w,c
  7125  003B4C  6E13               	movwf	(colourclick_readC@tmp+1)^0,c
  7126                           
  7127                           ;colour_click.c: 105:  I2C_2_Master_Stop();
  7128  003B4E  ECBD  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7129  003B52                     
  7130                           ;colour_click.c: 106:  return tmp;
  7131  003B52  C012  F00D         	movff	colourclick_readC@tmp,?_colourclick_readC
  7132  003B56  C013  F00E         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
  7133  003B5A  0012               	return		;funcret
  7134  003B5C                     __end_of_colourclick_readC:
  7135                           	callstack 0
  7136                           
  7137 ;; *************** function _colourclick_readB *****************
  7138 ;; Defined at:
  7139 ;;		line 79 in file "colour_click.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;		None
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  tmp             2   17[COMRAM] unsigned int 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  2   12[COMRAM] unsigned int 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0, cstack
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7155 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7156 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7157 ;;Total ram usage:        7 bytes
  7158 ;; Hardware stack levels used: 1
  7159 ;; Hardware stack levels required when called: 9
  7160 ;; This function calls:
  7161 ;;		_I2C_2_Master_Read
  7162 ;;		_I2C_2_Master_RepStart
  7163 ;;		_I2C_2_Master_Start
  7164 ;;		_I2C_2_Master_Stop
  7165 ;;		_I2C_2_Master_Write
  7166 ;; This function is called by:
  7167 ;;		_colourclick_readRGBC
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text31
  7172  003B5C                     __ptext31:
  7173                           	callstack 0
  7174  003B5C                     _colourclick_readB:
  7175                           	callstack 20
  7176  003B5C                     
  7177                           ;colour_click.c: 80:  unsigned int tmp;;colour_click.c: 81:  I2C_2_Master_Start();
  7178  003B5C  ECC2  F01F         	call	_I2C_2_Master_Start	;wreg free
  7179                           
  7180                           ;colour_click.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  7181  003B60  0E52               	movlw	82
  7182  003B62  ECAB  F01F         	call	_I2C_2_Master_Write
  7183                           
  7184                           ;colour_click.c: 83:  I2C_2_Master_Write(0xA0 | 0x1A);
  7185  003B66  0EBA               	movlw	186
  7186  003B68  ECAB  F01F         	call	_I2C_2_Master_Write
  7187                           
  7188                           ;colour_click.c: 84:  I2C_2_Master_RepStart();
  7189  003B6C  ECC7  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7190                           
  7191                           ;colour_click.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  7192  003B70  0E53               	movlw	83
  7193  003B72  ECAB  F01F         	call	_I2C_2_Master_Write
  7194                           
  7195                           ;colour_click.c: 86:  tmp=I2C_2_Master_Read(1);
  7196  003B76  0E01               	movlw	1
  7197  003B78  EC4C  F01E         	call	_I2C_2_Master_Read
  7198  003B7C  6E0F               	movwf	??_colourclick_readB^0,c
  7199  003B7E  500F               	movf	??_colourclick_readB^0,w,c
  7200  003B80  6E12               	movwf	colourclick_readB@tmp^0,c
  7201  003B82  6A13               	clrf	(colourclick_readB@tmp+1)^0,c
  7202                           
  7203                           ;colour_click.c: 87:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
  7204  003B84  0E00               	movlw	0
  7205  003B86  EC4C  F01E         	call	_I2C_2_Master_Read
  7206  003B8A  6E0F               	movwf	??_colourclick_readB^0,c
  7207  003B8C  500F               	movf	??_colourclick_readB^0,w,c
  7208  003B8E  6E11               	movwf	(??_colourclick_readB+2)^0,c
  7209  003B90  6A10               	clrf	(??_colourclick_readB+1)^0,c
  7210  003B92  5012               	movf	colourclick_readB@tmp^0,w,c
  7211  003B94  1010               	iorwf	(??_colourclick_readB+1)^0,w,c
  7212  003B96  6E12               	movwf	colourclick_readB@tmp^0,c
  7213  003B98  5013               	movf	(colourclick_readB@tmp+1)^0,w,c
  7214  003B9A  1011               	iorwf	(??_colourclick_readB+2)^0,w,c
  7215  003B9C  6E13               	movwf	(colourclick_readB@tmp+1)^0,c
  7216                           
  7217                           ;colour_click.c: 88:  I2C_2_Master_Stop();
  7218  003B9E  ECBD  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7219  003BA2                     
  7220                           ;colour_click.c: 89:  return tmp;
  7221  003BA2  C012  F00D         	movff	colourclick_readB@tmp,?_colourclick_readB
  7222  003BA6  C013  F00E         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
  7223  003BAA  0012               	return		;funcret
  7224  003BAC                     __end_of_colourclick_readB:
  7225                           	callstack 0
  7226                           
  7227 ;; *************** function _I2C_2_Master_Write *****************
  7228 ;; Defined at:
  7229 ;;		line 64 in file "I2C.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  data_byte       1    wreg     unsigned char 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;  data_byte       1    9[COMRAM] unsigned char 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      void 
  7236 ;; Registers used:
  7237 ;;		wreg, status,2, status,0, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7247 ;;Total ram usage:        1 bytes
  7248 ;; Hardware stack levels used: 1
  7249 ;; Hardware stack levels required when called: 8
  7250 ;; This function calls:
  7251 ;;		_I2C_2_Master_Idle
  7252 ;; This function is called by:
  7253 ;;		_interrupts_clear
  7254 ;;		_colourclick_writetoaddr
  7255 ;;		_colourclick_readR
  7256 ;;		_colourclick_readG
  7257 ;;		_colourclick_readB
  7258 ;;		_colourclick_readC
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text32
  7263  003F56                     __ptext32:
  7264                           	callstack 0
  7265  003F56                     _I2C_2_Master_Write:
  7266                           	callstack 18
  7267                           
  7268                           ;incstack = 0
  7269                           ;I2C_2_Master_Write@data_byte stored from wreg
  7270  003F56  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  7271  003F58                     
  7272                           ;I2C.c: 65:   I2C_2_Master_Idle();
  7273  003F58  ECB7  F01E         	call	_I2C_2_Master_Idle	;wreg free
  7274  003F5C                     
  7275                           ;I2C.c: 66:   SSP2BUF = data_byte;
  7276  003F5C  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7277  003F60  0012               	return		;funcret
  7278  003F62                     __end_of_I2C_2_Master_Write:
  7279                           	callstack 0
  7280                           
  7281 ;; *************** function _I2C_2_Master_Stop *****************
  7282 ;; Defined at:
  7283 ;;		line 55 in file "I2C.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;		None
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;		None
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      void 
  7290 ;; Registers used:
  7291 ;;		wreg, status,2, status,0, cstack
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7301 ;;Total ram usage:        0 bytes
  7302 ;; Hardware stack levels used: 1
  7303 ;; Hardware stack levels required when called: 8
  7304 ;; This function calls:
  7305 ;;		_I2C_2_Master_Idle
  7306 ;; This function is called by:
  7307 ;;		_interrupts_clear
  7308 ;;		_colourclick_writetoaddr
  7309 ;;		_colourclick_readR
  7310 ;;		_colourclick_readG
  7311 ;;		_colourclick_readB
  7312 ;;		_colourclick_readC
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	text33
  7317  003F7A                     __ptext33:
  7318                           	callstack 0
  7319  003F7A                     _I2C_2_Master_Stop:
  7320                           	callstack 18
  7321  003F7A                     
  7322                           ;I2C.c: 56:   I2C_2_Master_Idle();
  7323  003F7A  ECB7  F01E         	call	_I2C_2_Master_Idle	;wreg free
  7324  003F7E                     
  7325                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
  7326  003F7E  010E               	movlb	14	; () banked
  7327  003F80  85DA               	bsf	218,2,b	;volatile
  7328  003F82                     
  7329                           ; BSR set to: 14
  7330  003F82  0012               	return		;funcret
  7331  003F84                     __end_of_I2C_2_Master_Stop:
  7332                           	callstack 0
  7333                           
  7334 ;; *************** function _I2C_2_Master_Start *****************
  7335 ;; Defined at:
  7336 ;;		line 37 in file "I2C.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;		None
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1    wreg      void 
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, status,0, cstack
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7354 ;;Total ram usage:        0 bytes
  7355 ;; Hardware stack levels used: 1
  7356 ;; Hardware stack levels required when called: 8
  7357 ;; This function calls:
  7358 ;;		_I2C_2_Master_Idle
  7359 ;; This function is called by:
  7360 ;;		_interrupts_clear
  7361 ;;		_colourclick_writetoaddr
  7362 ;;		_colourclick_readR
  7363 ;;		_colourclick_readG
  7364 ;;		_colourclick_readB
  7365 ;;		_colourclick_readC
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text34
  7370  003F84                     __ptext34:
  7371                           	callstack 0
  7372  003F84                     _I2C_2_Master_Start:
  7373                           	callstack 18
  7374  003F84                     
  7375                           ;I2C.c: 38:   I2C_2_Master_Idle();
  7376  003F84  ECB7  F01E         	call	_I2C_2_Master_Idle	;wreg free
  7377  003F88                     
  7378                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
  7379  003F88  010E               	movlb	14	; () banked
  7380  003F8A  81DA               	bsf	218,0,b	;volatile
  7381  003F8C                     
  7382                           ; BSR set to: 14
  7383  003F8C  0012               	return		;funcret
  7384  003F8E                     __end_of_I2C_2_Master_Start:
  7385                           	callstack 0
  7386                           
  7387 ;; *************** function _I2C_2_Master_RepStart *****************
  7388 ;; Defined at:
  7389 ;;		line 46 in file "I2C.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;		None
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  1    wreg      void 
  7396 ;; Registers used:
  7397 ;;		wreg, status,2, status,0, cstack
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7407 ;;Total ram usage:        0 bytes
  7408 ;; Hardware stack levels used: 1
  7409 ;; Hardware stack levels required when called: 8
  7410 ;; This function calls:
  7411 ;;		_I2C_2_Master_Idle
  7412 ;; This function is called by:
  7413 ;;		_colourclick_readR
  7414 ;;		_colourclick_readG
  7415 ;;		_colourclick_readB
  7416 ;;		_colourclick_readC
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text35
  7421  003F8E                     __ptext35:
  7422                           	callstack 0
  7423  003F8E                     _I2C_2_Master_RepStart:
  7424                           	callstack 20
  7425  003F8E                     
  7426                           ;I2C.c: 47:   I2C_2_Master_Idle();
  7427  003F8E  ECB7  F01E         	call	_I2C_2_Master_Idle	;wreg free
  7428  003F92                     
  7429                           ;I2C.c: 48:   SSP2CON2bits.RSEN = 1;
  7430  003F92  010E               	movlb	14	; () banked
  7431  003F94  83DA               	bsf	218,1,b	;volatile
  7432  003F96                     
  7433                           ; BSR set to: 14
  7434  003F96  0012               	return		;funcret
  7435  003F98                     __end_of_I2C_2_Master_RepStart:
  7436                           	callstack 0
  7437                           
  7438 ;; *************** function _I2C_2_Master_Read *****************
  7439 ;; Defined at:
  7440 ;;		line 73 in file "I2C.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  ack             1    wreg     unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  ack             1   10[COMRAM] unsigned char 
  7445 ;;  tmp             1   11[COMRAM] unsigned char 
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  1    wreg      unsigned char 
  7448 ;; Registers used:
  7449 ;;		wreg, status,2, status,0, cstack
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7457 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7458 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;Total ram usage:        3 bytes
  7460 ;; Hardware stack levels used: 1
  7461 ;; Hardware stack levels required when called: 8
  7462 ;; This function calls:
  7463 ;;		_I2C_2_Master_Idle
  7464 ;; This function is called by:
  7465 ;;		_colourclick_readR
  7466 ;;		_colourclick_readG
  7467 ;;		_colourclick_readB
  7468 ;;		_colourclick_readC
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           	psect	text36
  7473  003C98                     __ptext36:
  7474                           	callstack 0
  7475  003C98                     _I2C_2_Master_Read:
  7476                           	callstack 20
  7477                           
  7478                           ; BSR set to: 14
  7479                           ;incstack = 0
  7480                           ;I2C_2_Master_Read@ack stored from wreg
  7481  003C98  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  7482  003C9A                     
  7483                           ;I2C.c: 74:   unsigned char tmp;;I2C.c: 75:   I2C_2_Master_Idle();
  7484  003C9A  ECB7  F01E         	call	_I2C_2_Master_Idle	;wreg free
  7485  003C9E                     
  7486                           ;I2C.c: 76:   SSP2CON2bits.RCEN = 1;
  7487  003C9E  010E               	movlb	14	; () banked
  7488  003CA0  87DA               	bsf	218,3,b	;volatile
  7489                           
  7490                           ;I2C.c: 77:   I2C_2_Master_Idle();
  7491  003CA2  ECB7  F01E         	call	_I2C_2_Master_Idle	;wreg free
  7492  003CA6                     
  7493                           ;I2C.c: 78:   tmp = SSP2BUF;
  7494  003CA6  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7495                           
  7496                           ;I2C.c: 79:   I2C_2_Master_Idle();
  7497  003CAA  ECB7  F01E         	call	_I2C_2_Master_Idle	;wreg free
  7498  003CAE                     
  7499                           ;I2C.c: 80:   SSP2CON2bits.ACKDT = !ack;
  7500  003CAE  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  7501  003CB0  B4D8               	btfsc	status,2,c
  7502  003CB2  EF5D  F01E         	goto	u2931
  7503  003CB6  EF61  F01E         	goto	u2930
  7504  003CBA                     u2931:
  7505  003CBA  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  7506  003CBC  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  7507  003CBE  EF62  F01E         	goto	u2948
  7508  003CC2                     u2930:
  7509  003CC2  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  7510  003CC4                     u2948:
  7511  003CC4  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  7512  003CC6  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  7513  003CC8  010E               	movlb	14	; () banked
  7514  003CCA  51DA               	movf	218,w,b	;volatile
  7515  003CCC  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  7516  003CCE  0BDF               	andlw	-33
  7517  003CD0  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  7518  003CD2  6FDA               	movwf	218,b	;volatile
  7519  003CD4                     
  7520                           ; BSR set to: 14
  7521                           ;I2C.c: 81:   SSP2CON2bits.ACKEN = 1;
  7522  003CD4  89DA               	bsf	218,4,b	;volatile
  7523  003CD6                     
  7524                           ; BSR set to: 14
  7525                           ;I2C.c: 82:   return tmp;
  7526  003CD6  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  7527  003CD8                     
  7528                           ; BSR set to: 14
  7529  003CD8  0012               	return		;funcret
  7530  003CDA                     __end_of_I2C_2_Master_Read:
  7531                           	callstack 0
  7532                           
  7533 ;; *************** function _I2C_2_Master_Idle *****************
  7534 ;; Defined at:
  7535 ;;		line 29 in file "I2C.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;		None
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7552 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;Total ram usage:        1 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 7
  7556 ;; This function calls:
  7557 ;;		Nothing
  7558 ;; This function is called by:
  7559 ;;		_I2C_2_Master_Start
  7560 ;;		_I2C_2_Master_RepStart
  7561 ;;		_I2C_2_Master_Stop
  7562 ;;		_I2C_2_Master_Write
  7563 ;;		_I2C_2_Master_Read
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           	psect	text37
  7568  003D6E                     __ptext37:
  7569                           	callstack 0
  7570  003D6E                     _I2C_2_Master_Idle:
  7571                           	callstack 18
  7572  003D6E                     l484:
  7573  003D6E  010E               	movlb	14	; () banked
  7574  003D70  B5D8               	btfsc	216,2,b	;volatile
  7575  003D72  EFBD  F01E         	goto	u2831
  7576  003D76  EFBF  F01E         	goto	u2830
  7577  003D7A                     u2831:
  7578  003D7A  EFB7  F01E         	goto	l484
  7579  003D7E                     u2830:
  7580  003D7E                     
  7581                           ; BSR set to: 14
  7582  003D7E  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7583  003D82  0E1F               	movlw	31
  7584  003D84  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  7585  003D86  A4D8               	btfss	status,2,c
  7586  003D88  EFC8  F01E         	goto	u2841
  7587  003D8C  EFCA  F01E         	goto	u2840
  7588  003D90                     u2841:
  7589  003D90  EFB7  F01E         	goto	l484
  7590  003D94                     u2840:
  7591  003D94                     
  7592                           ; BSR set to: 14
  7593  003D94  0012               	return		;funcret
  7594  003D96                     __end_of_I2C_2_Master_Idle:
  7595                           	callstack 0
  7596                           
  7597 ;; *************** function _colourclickLEDs_C *****************
  7598 ;; Defined at:
  7599 ;;		line 65 in file "buttons_n_LEDs.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  tog             1    wreg     unsigned char 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;  tog             1    8[COMRAM] unsigned char 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  1    wreg      void 
  7606 ;; Registers used:
  7607 ;;		wreg
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7617 ;;Total ram usage:        1 bytes
  7618 ;; Hardware stack levels used: 1
  7619 ;; Hardware stack levels required when called: 7
  7620 ;; This function calls:
  7621 ;;		Nothing
  7622 ;; This function is called by:
  7623 ;;		_main
  7624 ;;		_colourclick_readRGBC2
  7625 ;;		_colourclick_calibration
  7626 ;;		_colourclickLEDs_init
  7627 ;;		_colourcards_testingRGBC
  7628 ;;		_colourcards_testingRGBC2
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text38
  7633  003E08                     __ptext38:
  7634                           	callstack 0
  7635  003E08                     _colourclickLEDs_C:
  7636                           	callstack 21
  7637                           
  7638                           ; BSR set to: 14
  7639                           ;incstack = 0
  7640                           ;colourclickLEDs_C@tog stored from wreg
  7641  003E08  6E09               	movwf	colourclickLEDs_C@tog^0,c
  7642  003E0A                     
  7643                           ;buttons_n_LEDs.c: 66:     LATGbits.LATG1 = tog;
  7644  003E0A  B009               	btfsc	colourclickLEDs_C@tog^0,0,c
  7645  003E0C  D002               	bra	u4035
  7646  003E0E  927F               	bcf	127,1,c	;volatile
  7647  003E10  D001               	bra	u4036
  7648  003E12                     u4035:
  7649  003E12  827F               	bsf	127,1,c	;volatile
  7650  003E14                     u4036:
  7651                           
  7652                           ;buttons_n_LEDs.c: 67:     LATAbits.LATA4 = tog;
  7653  003E14  B009               	btfsc	colourclickLEDs_C@tog^0,0,c
  7654  003E16  D002               	bra	u4045
  7655  003E18  9879               	bcf	121,4,c	;volatile
  7656  003E1A  D001               	bra	u4046
  7657  003E1C                     u4045:
  7658  003E1C  8879               	bsf	121,4,c	;volatile
  7659  003E1E                     u4046:
  7660                           
  7661                           ;buttons_n_LEDs.c: 68:     LATFbits.LATF7 = tog;
  7662  003E1E  B009               	btfsc	colourclickLEDs_C@tog^0,0,c
  7663  003E20  D002               	bra	u4055
  7664  003E22  9E7E               	bcf	126,7,c	;volatile
  7665  003E24  D001               	bra	u4056
  7666  003E26                     u4055:
  7667  003E26  8E7E               	bsf	126,7,c	;volatile
  7668  003E28                     u4056:
  7669  003E28  0012               	return		;funcret
  7670  003E2A                     __end_of_colourclickLEDs_C:
  7671                           	callstack 0
  7672                           
  7673 ;; *************** function _colourcards_normaliseRGBC *****************
  7674 ;; Defined at:
  7675 ;;		line 183 in file "colour_cards.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  abs             2   13[BANK0 ] PTR struct .
  7678 ;;		 -> colourcards_testingRGBC2@abs(8), main@current(8), 
  7679 ;;  rel             2   15[BANK0 ] PTR struct .
  7680 ;;		 -> colourcards_testingRGBC2@rel(12), colourcards_readRGBC@rel(12), 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  C               2   23[BANK0 ] unsigned int 
  7683 ;;  B               2   21[BANK0 ] unsigned int 
  7684 ;;  G               2   19[BANK0 ] unsigned int 
  7685 ;;  R               2   17[BANK0 ] unsigned int 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  1    wreg      void 
  7688 ;; Registers used:
  7689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7695 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7696 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7698 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;Total ram usage:       12 bytes
  7700 ;; Hardware stack levels used: 1
  7701 ;; Hardware stack levels required when called: 8
  7702 ;; This function calls:
  7703 ;;		___fldiv
  7704 ;;		___xxtofl
  7705 ;; This function is called by:
  7706 ;;		_colourcards_readRGBC
  7707 ;;		_colourcards_testingRGBC2
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text39
  7712  003076                     __ptext39:
  7713                           	callstack 0
  7714  003076                     _colourcards_normaliseRGBC:
  7715                           	callstack 21
  7716  003076                     
  7717                           ;colour_cards.c: 184:     unsigned int R = abs->R;
  7718  003076  C06D  FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
  7719  00307A  C06E  FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
  7720  00307E  CFDE F071          	movff	postinc2,colourcards_normaliseRGBC@R
  7721  003082  CFDD F072          	movff	postdec2,colourcards_normaliseRGBC@R+1
  7722  003086                     
  7723                           ;colour_cards.c: 185:     unsigned int G = abs->G;
  7724  003086  0100               	movlb	0	; () banked
  7725  003088  EE20 F002          	lfsr	2,2
  7726  00308C  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  7727  00308E  26D9               	addwf	fsr2l,f,c
  7728  003090  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  7729  003092  22DA               	addwfc	fsr2h,f,c
  7730  003094  CFDE F073          	movff	postinc2,colourcards_normaliseRGBC@G
  7731  003098  CFDD F074          	movff	postdec2,colourcards_normaliseRGBC@G+1
  7732  00309C                     
  7733                           ; BSR set to: 0
  7734                           ;colour_cards.c: 186:     unsigned int B = abs->B;
  7735  00309C  EE20 F004          	lfsr	2,4
  7736  0030A0  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  7737  0030A2  26D9               	addwf	fsr2l,f,c
  7738  0030A4  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  7739  0030A6  22DA               	addwfc	fsr2h,f,c
  7740  0030A8  CFDE F075          	movff	postinc2,colourcards_normaliseRGBC@B
  7741  0030AC  CFDD F076          	movff	postdec2,colourcards_normaliseRGBC@B+1
  7742  0030B0                     
  7743                           ; BSR set to: 0
  7744                           ;colour_cards.c: 187:     unsigned int C = abs->C;
  7745  0030B0  EE20 F006          	lfsr	2,6
  7746  0030B4  516D               	movf	colourcards_normaliseRGBC@abs& (0+255),w,b
  7747  0030B6  26D9               	addwf	fsr2l,f,c
  7748  0030B8  516E               	movf	(colourcards_normaliseRGBC@abs+1)& (0+255),w,b
  7749  0030BA  22DA               	addwfc	fsr2h,f,c
  7750  0030BC  CFDE F077          	movff	postinc2,colourcards_normaliseRGBC@C
  7751  0030C0  CFDD F078          	movff	postdec2,colourcards_normaliseRGBC@C+1
  7752  0030C4                     
  7753                           ; BSR set to: 0
  7754                           ;colour_cards.c: 189:     rel->R = (float)R/(float)C;
  7755  0030C4  C071  F009         	movff	colourcards_normaliseRGBC@R,___xxtofl@val
  7756  0030C8  C072  F00A         	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
  7757  0030CC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  7758  0030CE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  7759  0030D0  0E00               	movlw	0
  7760  0030D2  EC61  F017         	call	___xxtofl
  7761  0030D6  C009  F040         	movff	?___xxtofl,___fldiv@b
  7762  0030DA  C00A  F041         	movff	?___xxtofl+1,___fldiv@b+1
  7763  0030DE  C00B  F042         	movff	?___xxtofl+2,___fldiv@b+2
  7764  0030E2  C00C  F043         	movff	?___xxtofl+3,___fldiv@b+3
  7765  0030E6  C077  F009         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  7766  0030EA  C078  F00A         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  7767  0030EE  6A0B               	clrf	(___xxtofl@val+2)^0,c
  7768  0030F0  6A0C               	clrf	(___xxtofl@val+3)^0,c
  7769  0030F2  0E00               	movlw	0
  7770  0030F4  EC61  F017         	call	___xxtofl
  7771  0030F8  C009  F044         	movff	?___xxtofl,___fldiv@a
  7772  0030FC  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  7773  003100  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  7774  003104  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  7775  003108  ECAF  F00E         	call	___fldiv	;wreg free
  7776  00310C  C06F  FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
  7777  003110  C070  FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
  7778  003114  C040  FFDE         	movff	?___fldiv,postinc2
  7779  003118  C041  FFDE         	movff	?___fldiv+1,postinc2
  7780  00311C  C042  FFDE         	movff	?___fldiv+2,postinc2
  7781  003120  C043  FFDE         	movff	?___fldiv+3,postinc2
  7782  003124                     
  7783                           ;colour_cards.c: 190:     rel->G = (float)G/(float)C;
  7784  003124  C073  F009         	movff	colourcards_normaliseRGBC@G,___xxtofl@val
  7785  003128  C074  F00A         	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
  7786  00312C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  7787  00312E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  7788  003130  0E00               	movlw	0
  7789  003132  EC61  F017         	call	___xxtofl
  7790  003136  C009  F040         	movff	?___xxtofl,___fldiv@b
  7791  00313A  C00A  F041         	movff	?___xxtofl+1,___fldiv@b+1
  7792  00313E  C00B  F042         	movff	?___xxtofl+2,___fldiv@b+2
  7793  003142  C00C  F043         	movff	?___xxtofl+3,___fldiv@b+3
  7794  003146  C077  F009         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  7795  00314A  C078  F00A         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  7796  00314E  6A0B               	clrf	(___xxtofl@val+2)^0,c
  7797  003150  6A0C               	clrf	(___xxtofl@val+3)^0,c
  7798  003152  0E00               	movlw	0
  7799  003154  EC61  F017         	call	___xxtofl
  7800  003158  C009  F044         	movff	?___xxtofl,___fldiv@a
  7801  00315C  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  7802  003160  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  7803  003164  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  7804  003168  ECAF  F00E         	call	___fldiv	;wreg free
  7805  00316C  0100               	movlb	0	; () banked
  7806  00316E  EE20 F004          	lfsr	2,4
  7807  003172  516F               	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  7808  003174  26D9               	addwf	fsr2l,f,c
  7809  003176  5170               	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  7810  003178  22DA               	addwfc	fsr2h,f,c
  7811  00317A  C040  FFDE         	movff	?___fldiv,postinc2
  7812  00317E  C041  FFDE         	movff	?___fldiv+1,postinc2
  7813  003182  C042  FFDE         	movff	?___fldiv+2,postinc2
  7814  003186  C043  FFDE         	movff	?___fldiv+3,postinc2
  7815  00318A                     
  7816                           ; BSR set to: 0
  7817                           ;colour_cards.c: 191:     rel->B = (float)B/(float)C;
  7818  00318A  C075  F009         	movff	colourcards_normaliseRGBC@B,___xxtofl@val
  7819  00318E  C076  F00A         	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
  7820  003192  6A0B               	clrf	(___xxtofl@val+2)^0,c
  7821  003194  6A0C               	clrf	(___xxtofl@val+3)^0,c
  7822  003196  0E00               	movlw	0
  7823  003198  EC61  F017         	call	___xxtofl
  7824  00319C  C009  F040         	movff	?___xxtofl,___fldiv@b
  7825  0031A0  C00A  F041         	movff	?___xxtofl+1,___fldiv@b+1
  7826  0031A4  C00B  F042         	movff	?___xxtofl+2,___fldiv@b+2
  7827  0031A8  C00C  F043         	movff	?___xxtofl+3,___fldiv@b+3
  7828  0031AC  C077  F009         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  7829  0031B0  C078  F00A         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  7830  0031B4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  7831  0031B6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  7832  0031B8  0E00               	movlw	0
  7833  0031BA  EC61  F017         	call	___xxtofl
  7834  0031BE  C009  F044         	movff	?___xxtofl,___fldiv@a
  7835  0031C2  C00A  F045         	movff	?___xxtofl+1,___fldiv@a+1
  7836  0031C6  C00B  F046         	movff	?___xxtofl+2,___fldiv@a+2
  7837  0031CA  C00C  F047         	movff	?___xxtofl+3,___fldiv@a+3
  7838  0031CE  ECAF  F00E         	call	___fldiv	;wreg free
  7839  0031D2  0100               	movlb	0	; () banked
  7840  0031D4  EE20 F008          	lfsr	2,8
  7841  0031D8  516F               	movf	colourcards_normaliseRGBC@rel& (0+255),w,b
  7842  0031DA  26D9               	addwf	fsr2l,f,c
  7843  0031DC  5170               	movf	(colourcards_normaliseRGBC@rel+1)& (0+255),w,b
  7844  0031DE  22DA               	addwfc	fsr2h,f,c
  7845  0031E0  C040  FFDE         	movff	?___fldiv,postinc2
  7846  0031E4  C041  FFDE         	movff	?___fldiv+1,postinc2
  7847  0031E8  C042  FFDE         	movff	?___fldiv+2,postinc2
  7848  0031EC  C043  FFDE         	movff	?___fldiv+3,postinc2
  7849  0031F0                     
  7850                           ; BSR set to: 0
  7851  0031F0  0012               	return		;funcret
  7852  0031F2                     __end_of_colourcards_normaliseRGBC:
  7853                           	callstack 0
  7854                           
  7855 ;; *************** function ___xxtofl *****************
  7856 ;; Defined at:
  7857 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  sign            1    wreg     unsigned char 
  7860 ;;  val             4    8[COMRAM] long 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;  sign            1   16[COMRAM] unsigned char 
  7863 ;;  arg             4   18[COMRAM] unsigned long 
  7864 ;;  exp             1   17[COMRAM] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  4    8[COMRAM] unsigned char 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2, status,0
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7878 ;;Total ram usage:       14 bytes
  7879 ;; Hardware stack levels used: 1
  7880 ;; Hardware stack levels required when called: 7
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		_colourcards_normaliseRGBC
  7885 ;;		_turnleft
  7886 ;;		_turnright
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text40
  7891  002EC2                     __ptext40:
  7892                           	callstack 0
  7893  002EC2                     ___xxtofl:
  7894                           	callstack 20
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;incstack = 0
  7898                           ;___xxtofl@sign stored from wreg
  7899  002EC2  6E11               	movwf	___xxtofl@sign^0,c
  7900  002EC4  5011               	movf	___xxtofl@sign^0,w,c
  7901  002EC6  B4D8               	btfsc	status,2,c
  7902  002EC8  EF68  F017         	goto	u3811
  7903  002ECC  EF6A  F017         	goto	u3810
  7904  002ED0                     u3811:
  7905  002ED0  EF8C  F017         	goto	l1492
  7906  002ED4                     u3810:
  7907  002ED4  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  7908  002ED6  EF71  F017         	goto	u3820
  7909  002EDA  EF6F  F017         	goto	u3821
  7910  002EDE                     u3821:
  7911  002EDE  EF8C  F017         	goto	l1492
  7912  002EE2                     u3820:
  7913  002EE2  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  7914  002EE6  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  7915  002EEA  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  7916  002EEE  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  7917  002EF2  1E0D               	comf	??___xxtofl^0,f,c
  7918  002EF4  1E0E               	comf	(??___xxtofl+1)^0,f,c
  7919  002EF6  1E0F               	comf	(??___xxtofl+2)^0,f,c
  7920  002EF8  1E10               	comf	(??___xxtofl+3)^0,f,c
  7921  002EFA  2A0D               	incf	??___xxtofl^0,f,c
  7922  002EFC  0E00               	movlw	0
  7923  002EFE  220E               	addwfc	(??___xxtofl+1)^0,f,c
  7924  002F00  220F               	addwfc	(??___xxtofl+2)^0,f,c
  7925  002F02  2210               	addwfc	(??___xxtofl+3)^0,f,c
  7926  002F04  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  7927  002F08  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  7928  002F0C  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  7929  002F10  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  7930  002F14  EF94  F017         	goto	l3883
  7931  002F18                     l1492:
  7932  002F18  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  7933  002F1C  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7934  002F20  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7935  002F24  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7936  002F28                     l3883:
  7937  002F28  5009               	movf	___xxtofl@val^0,w,c
  7938  002F2A  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  7939  002F2C  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  7940  002F2E  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  7941  002F30  A4D8               	btfss	status,2,c
  7942  002F32  EF9D  F017         	goto	u3831
  7943  002F36  EF9F  F017         	goto	u3830
  7944  002F3A                     u3831:
  7945  002F3A  EFA9  F017         	goto	l3889
  7946  002F3E                     u3830:
  7947  002F3E  0E00               	movlw	0
  7948  002F40  6E09               	movwf	?___xxtofl^0,c
  7949  002F42  0E00               	movlw	0
  7950  002F44  6E0A               	movwf	(?___xxtofl+1)^0,c
  7951  002F46  0E00               	movlw	0
  7952  002F48  6E0B               	movwf	(?___xxtofl+2)^0,c
  7953  002F4A  0E00               	movlw	0
  7954  002F4C  6E0C               	movwf	(?___xxtofl+3)^0,c
  7955  002F4E  EF3A  F018         	goto	l1495
  7956  002F52                     l3889:
  7957  002F52  0E96               	movlw	150
  7958  002F54  6E12               	movwf	___xxtofl@exp^0,c
  7959  002F56  EFB3  F017         	goto	l3893
  7960  002F5A                     l3891:
  7961  002F5A  2A12               	incf	___xxtofl@exp^0,f,c
  7962  002F5C  90D8               	bcf	status,0,c
  7963  002F5E  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  7964  002F60  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  7965  002F62  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  7966  002F64  3213               	rrcf	___xxtofl@arg^0,f,c
  7967  002F66                     l3893:
  7968  002F66  0E00               	movlw	0
  7969  002F68  1413               	andwf	___xxtofl@arg^0,w,c
  7970  002F6A  6E0D               	movwf	??___xxtofl^0,c
  7971  002F6C  0E00               	movlw	0
  7972  002F6E  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  7973  002F70  6E0E               	movwf	(??___xxtofl+1)^0,c
  7974  002F72  0E00               	movlw	0
  7975  002F74  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  7976  002F76  6E0F               	movwf	(??___xxtofl+2)^0,c
  7977  002F78  0EFE               	movlw	254
  7978  002F7A  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  7979  002F7C  6E10               	movwf	(??___xxtofl+3)^0,c
  7980  002F7E  500D               	movf	??___xxtofl^0,w,c
  7981  002F80  100E               	iorwf	(??___xxtofl+1)^0,w,c
  7982  002F82  100F               	iorwf	(??___xxtofl+2)^0,w,c
  7983  002F84  1010               	iorwf	(??___xxtofl+3)^0,w,c
  7984  002F86  A4D8               	btfss	status,2,c
  7985  002F88  EFC8  F017         	goto	u3841
  7986  002F8C  EFCA  F017         	goto	u3840
  7987  002F90                     u3841:
  7988  002F90  EFAD  F017         	goto	l3891
  7989  002F94                     u3840:
  7990  002F94  EFD8  F017         	goto	l1499
  7991  002F98                     l3895:
  7992  002F98  2A12               	incf	___xxtofl@exp^0,f,c
  7993  002F9A  0E01               	movlw	1
  7994  002F9C  2613               	addwf	___xxtofl@arg^0,f,c
  7995  002F9E  0E00               	movlw	0
  7996  002FA0  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  7997  002FA2  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  7998  002FA4  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  7999  002FA6  90D8               	bcf	status,0,c
  8000  002FA8  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  8001  002FAA  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  8002  002FAC  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  8003  002FAE  3213               	rrcf	___xxtofl@arg^0,f,c
  8004  002FB0                     l1499:
  8005  002FB0  0E00               	movlw	0
  8006  002FB2  1413               	andwf	___xxtofl@arg^0,w,c
  8007  002FB4  6E0D               	movwf	??___xxtofl^0,c
  8008  002FB6  0E00               	movlw	0
  8009  002FB8  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  8010  002FBA  6E0E               	movwf	(??___xxtofl+1)^0,c
  8011  002FBC  0E00               	movlw	0
  8012  002FBE  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  8013  002FC0  6E0F               	movwf	(??___xxtofl+2)^0,c
  8014  002FC2  0EFF               	movlw	255
  8015  002FC4  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  8016  002FC6  6E10               	movwf	(??___xxtofl+3)^0,c
  8017  002FC8  500D               	movf	??___xxtofl^0,w,c
  8018  002FCA  100E               	iorwf	(??___xxtofl+1)^0,w,c
  8019  002FCC  100F               	iorwf	(??___xxtofl+2)^0,w,c
  8020  002FCE  1010               	iorwf	(??___xxtofl+3)^0,w,c
  8021  002FD0  A4D8               	btfss	status,2,c
  8022  002FD2  EFED  F017         	goto	u3851
  8023  002FD6  EFEF  F017         	goto	u3850
  8024  002FDA                     u3851:
  8025  002FDA  EFCC  F017         	goto	l3895
  8026  002FDE                     u3850:
  8027  002FDE  EFF7  F017         	goto	l3903
  8028  002FE2                     l3901:
  8029  002FE2  0612               	decf	___xxtofl@exp^0,f,c
  8030  002FE4  90D8               	bcf	status,0,c
  8031  002FE6  3613               	rlcf	___xxtofl@arg^0,f,c
  8032  002FE8  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  8033  002FEA  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  8034  002FEC  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  8035  002FEE                     l3903:
  8036  002FEE  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  8037  002FF0  EFFC  F017         	goto	u3861
  8038  002FF4  EFFE  F017         	goto	u3860
  8039  002FF8                     u3861:
  8040  002FF8  EF06  F018         	goto	l1506
  8041  002FFC                     u3860:
  8042  002FFC  0E02               	movlw	2
  8043  002FFE  6012               	cpfslt	___xxtofl@exp^0,c
  8044  003000  EF04  F018         	goto	u3871
  8045  003004  EF06  F018         	goto	u3870
  8046  003008                     u3871:
  8047  003008  EFF1  F017         	goto	l3901
  8048  00300C                     u3870:
  8049  00300C                     l1506:
  8050  00300C  B012               	btfsc	___xxtofl@exp^0,0,c
  8051  00300E  EF0B  F018         	goto	u3881
  8052  003012  EF0D  F018         	goto	u3880
  8053  003016                     u3881:
  8054  003016  EF0E  F018         	goto	l3909
  8055  00301A                     u3880:
  8056  00301A  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  8057  00301C                     l3909:
  8058  00301C  90D8               	bcf	status,0,c
  8059  00301E  3212               	rrcf	___xxtofl@exp^0,f,c
  8060  003020  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  8061  003024  6A0E               	clrf	(??___xxtofl+1)^0,c
  8062  003026  6A0F               	clrf	(??___xxtofl+2)^0,c
  8063  003028  6A10               	clrf	(??___xxtofl+3)^0,c
  8064  00302A  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  8065  00302E  6A0F               	clrf	(??___xxtofl+2)^0,c
  8066  003030  6A0E               	clrf	(??___xxtofl+1)^0,c
  8067  003032  6A0D               	clrf	??___xxtofl^0,c
  8068  003034  500D               	movf	??___xxtofl^0,w,c
  8069  003036  1213               	iorwf	___xxtofl@arg^0,f,c
  8070  003038  500E               	movf	(??___xxtofl+1)^0,w,c
  8071  00303A  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  8072  00303C  500F               	movf	(??___xxtofl+2)^0,w,c
  8073  00303E  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  8074  003040  5010               	movf	(??___xxtofl+3)^0,w,c
  8075  003042  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  8076  003044  5011               	movf	___xxtofl@sign^0,w,c
  8077  003046  B4D8               	btfsc	status,2,c
  8078  003048  EF28  F018         	goto	u3891
  8079  00304C  EF2A  F018         	goto	u3890
  8080  003050                     u3891:
  8081  003050  EF32  F018         	goto	l3919
  8082  003054                     u3890:
  8083  003054  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  8084  003056  EF31  F018         	goto	u3900
  8085  00305A  EF2F  F018         	goto	u3901
  8086  00305E                     u3901:
  8087  00305E  EF32  F018         	goto	l3919
  8088  003062                     u3900:
  8089  003062  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  8090  003064                     l3919:
  8091  003064  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  8092  003068  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  8093  00306C  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  8094  003070  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  8095  003074                     l1495:
  8096  003074  0012               	return		;funcret
  8097  003076                     __end_of___xxtofl:
  8098                           	callstack 0
  8099                           
  8100 ;; *************** function ___fldiv *****************
  8101 ;; Defined at:
  8102 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;  b               4   63[COMRAM] unsigned char 
  8105 ;;  a               4   67[COMRAM] unsigned char 
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;  grs             4    7[BANK0 ] unsigned long 
  8108 ;;  rem             4    0[BANK0 ] unsigned long 
  8109 ;;  new_exp         2    5[BANK0 ] short 
  8110 ;;  aexp            1   12[BANK0 ] unsigned char 
  8111 ;;  bexp            1   11[BANK0 ] unsigned char 
  8112 ;;  sign            1    4[BANK0 ] unsigned char 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  4   63[COMRAM] unsigned char 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8122 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8123 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8124 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8125 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;Total ram usage:       25 bytes
  8127 ;; Hardware stack levels used: 1
  8128 ;; Hardware stack levels required when called: 7
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_colourcards_normaliseRGBC
  8133 ;;		_turnleft
  8134 ;;		_turnright
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text41
  8139  001D5E                     __ptext41:
  8140                           	callstack 0
  8141  001D5E                     ___fldiv:
  8142                           	callstack 20
  8143  001D5E  5043               	movf	(___fldiv@b+3)^0,w,c
  8144  001D60  0B80               	andlw	128
  8145  001D62  0100               	movlb	0	; () banked
  8146  001D64  6F64               	movwf	___fldiv@sign& (0+255),b
  8147  001D66  5043               	movf	(___fldiv@b+3)^0,w,c
  8148  001D68  2443               	addwf	(___fldiv@b+3)^0,w,c
  8149  001D6A  6F6B               	movwf	___fldiv@bexp& (0+255),b
  8150  001D6C                     
  8151                           ; BSR set to: 0
  8152  001D6C  AE42               	btfss	(___fldiv@b+2)^0,7,c
  8153  001D6E  EFBB  F00E         	goto	u3341
  8154  001D72  EFBD  F00E         	goto	u3340
  8155  001D76                     u3341:
  8156  001D76  EFBE  F00E         	goto	l3593
  8157  001D7A                     u3340:
  8158  001D7A                     
  8159                           ; BSR set to: 0
  8160  001D7A  816B               	bsf	___fldiv@bexp& (0+255),0,b
  8161  001D7C                     l3593:
  8162                           
  8163                           ; BSR set to: 0
  8164  001D7C  516B               	movf	___fldiv@bexp& (0+255),w,b
  8165  001D7E  B4D8               	btfsc	status,2,c
  8166  001D80  EFC4  F00E         	goto	u3351
  8167  001D84  EFC6  F00E         	goto	u3350
  8168  001D88                     u3351:
  8169  001D88  EFDB  F00E         	goto	l3603
  8170  001D8C                     u3350:
  8171  001D8C                     
  8172                           ; BSR set to: 0
  8173  001D8C  296B               	incf	___fldiv@bexp& (0+255),w,b
  8174  001D8E  A4D8               	btfss	status,2,c
  8175  001D90  EFCC  F00E         	goto	u3361
  8176  001D94  EFCE  F00E         	goto	u3360
  8177  001D98                     u3361:
  8178  001D98  EFD6  F00E         	goto	l3599
  8179  001D9C                     u3360:
  8180  001D9C                     
  8181                           ; BSR set to: 0
  8182  001D9C  0E00               	movlw	0
  8183  001D9E  6E40               	movwf	___fldiv@b^0,c
  8184  001DA0  0E00               	movlw	0
  8185  001DA2  6E41               	movwf	(___fldiv@b+1)^0,c
  8186  001DA4  0E00               	movlw	0
  8187  001DA6  6E42               	movwf	(___fldiv@b+2)^0,c
  8188  001DA8  0E00               	movlw	0
  8189  001DAA  6E43               	movwf	(___fldiv@b+3)^0,c
  8190  001DAC                     l3599:
  8191                           
  8192                           ; BSR set to: 0
  8193  001DAC  8E42               	bsf	(___fldiv@b+2)^0,7,c
  8194  001DAE                     
  8195                           ; BSR set to: 0
  8196  001DAE  0E00               	movlw	0
  8197  001DB0  6E43               	movwf	(___fldiv@b+3)^0,c
  8198  001DB2  EFE3  F00E         	goto	l3605
  8199  001DB6                     l3603:
  8200                           
  8201                           ; BSR set to: 0
  8202  001DB6  0E00               	movlw	0
  8203  001DB8  6E40               	movwf	___fldiv@b^0,c
  8204  001DBA  0E00               	movlw	0
  8205  001DBC  6E41               	movwf	(___fldiv@b+1)^0,c
  8206  001DBE  0E00               	movlw	0
  8207  001DC0  6E42               	movwf	(___fldiv@b+2)^0,c
  8208  001DC2  0E00               	movlw	0
  8209  001DC4  6E43               	movwf	(___fldiv@b+3)^0,c
  8210  001DC6                     l3605:
  8211                           
  8212                           ; BSR set to: 0
  8213  001DC6  5047               	movf	(___fldiv@a+3)^0,w,c
  8214  001DC8  0B80               	andlw	128
  8215  001DCA  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  8216  001DCC                     
  8217                           ; BSR set to: 0
  8218  001DCC  5047               	movf	(___fldiv@a+3)^0,w,c
  8219  001DCE  2447               	addwf	(___fldiv@a+3)^0,w,c
  8220  001DD0  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8221  001DD2                     
  8222                           ; BSR set to: 0
  8223  001DD2  AE46               	btfss	(___fldiv@a+2)^0,7,c
  8224  001DD4  EFEE  F00E         	goto	u3371
  8225  001DD8  EFF0  F00E         	goto	u3370
  8226  001DDC                     u3371:
  8227  001DDC  EFF1  F00E         	goto	l3613
  8228  001DE0                     u3370:
  8229  001DE0                     
  8230                           ; BSR set to: 0
  8231  001DE0  816C               	bsf	___fldiv@aexp& (0+255),0,b
  8232  001DE2                     l3613:
  8233                           
  8234                           ; BSR set to: 0
  8235  001DE2  516C               	movf	___fldiv@aexp& (0+255),w,b
  8236  001DE4  B4D8               	btfsc	status,2,c
  8237  001DE6  EFF7  F00E         	goto	u3381
  8238  001DEA  EFF9  F00E         	goto	u3380
  8239  001DEE                     u3381:
  8240  001DEE  EF0E  F00F         	goto	l3623
  8241  001DF2                     u3380:
  8242  001DF2                     
  8243                           ; BSR set to: 0
  8244  001DF2  296C               	incf	___fldiv@aexp& (0+255),w,b
  8245  001DF4  A4D8               	btfss	status,2,c
  8246  001DF6  EFFF  F00E         	goto	u3391
  8247  001DFA  EF01  F00F         	goto	u3390
  8248  001DFE                     u3391:
  8249  001DFE  EF09  F00F         	goto	l3619
  8250  001E02                     u3390:
  8251  001E02                     
  8252                           ; BSR set to: 0
  8253  001E02  0E00               	movlw	0
  8254  001E04  6E44               	movwf	___fldiv@a^0,c
  8255  001E06  0E00               	movlw	0
  8256  001E08  6E45               	movwf	(___fldiv@a+1)^0,c
  8257  001E0A  0E00               	movlw	0
  8258  001E0C  6E46               	movwf	(___fldiv@a+2)^0,c
  8259  001E0E  0E00               	movlw	0
  8260  001E10  6E47               	movwf	(___fldiv@a+3)^0,c
  8261  001E12                     l3619:
  8262                           
  8263                           ; BSR set to: 0
  8264  001E12  8E46               	bsf	(___fldiv@a+2)^0,7,c
  8265  001E14                     
  8266                           ; BSR set to: 0
  8267  001E14  0E00               	movlw	0
  8268  001E16  6E47               	movwf	(___fldiv@a+3)^0,c
  8269  001E18  EF16  F00F         	goto	l3625
  8270  001E1C                     l3623:
  8271                           
  8272                           ; BSR set to: 0
  8273  001E1C  0E00               	movlw	0
  8274  001E1E  6E44               	movwf	___fldiv@a^0,c
  8275  001E20  0E00               	movlw	0
  8276  001E22  6E45               	movwf	(___fldiv@a+1)^0,c
  8277  001E24  0E00               	movlw	0
  8278  001E26  6E46               	movwf	(___fldiv@a+2)^0,c
  8279  001E28  0E00               	movlw	0
  8280  001E2A  6E47               	movwf	(___fldiv@a+3)^0,c
  8281  001E2C                     l3625:
  8282                           
  8283                           ; BSR set to: 0
  8284  001E2C  5044               	movf	___fldiv@a^0,w,c
  8285  001E2E  1045               	iorwf	(___fldiv@a+1)^0,w,c
  8286  001E30  1046               	iorwf	(___fldiv@a+2)^0,w,c
  8287  001E32  1047               	iorwf	(___fldiv@a+3)^0,w,c
  8288  001E34  A4D8               	btfss	status,2,c
  8289  001E36  EF1F  F00F         	goto	u3401
  8290  001E3A  EF21  F00F         	goto	u3400
  8291  001E3E                     u3401:
  8292  001E3E  EF39  F00F         	goto	l3637
  8293  001E42                     u3400:
  8294  001E42                     
  8295                           ; BSR set to: 0
  8296  001E42  0E00               	movlw	0
  8297  001E44  6E40               	movwf	___fldiv@b^0,c
  8298  001E46  0E00               	movlw	0
  8299  001E48  6E41               	movwf	(___fldiv@b+1)^0,c
  8300  001E4A  0E00               	movlw	0
  8301  001E4C  6E42               	movwf	(___fldiv@b+2)^0,c
  8302  001E4E  0E00               	movlw	0
  8303  001E50  6E43               	movwf	(___fldiv@b+3)^0,c
  8304  001E52                     
  8305                           ; BSR set to: 0
  8306  001E52  0E80               	movlw	128
  8307  001E54  1242               	iorwf	(___fldiv@b+2)^0,f,c
  8308  001E56  0E7F               	movlw	127
  8309  001E58  1243               	iorwf	(___fldiv@b+3)^0,f,c
  8310  001E5A                     l3631:
  8311                           
  8312                           ; BSR set to: 0
  8313  001E5A  5164               	movf	___fldiv@sign& (0+255),w,b
  8314  001E5C  1243               	iorwf	(___fldiv@b+3)^0,f,c
  8315  001E5E                     
  8316                           ; BSR set to: 0
  8317  001E5E  C040  F040         	movff	___fldiv@b,?___fldiv
  8318  001E62  C041  F041         	movff	___fldiv@b+1,?___fldiv+1
  8319  001E66  C042  F042         	movff	___fldiv@b+2,?___fldiv+2
  8320  001E6A  C043  F043         	movff	___fldiv@b+3,?___fldiv+3
  8321  001E6E  EF7C  F010         	goto	l1419
  8322  001E72                     l3637:
  8323                           
  8324                           ; BSR set to: 0
  8325  001E72  516B               	movf	___fldiv@bexp& (0+255),w,b
  8326  001E74  A4D8               	btfss	status,2,c
  8327  001E76  EF3F  F00F         	goto	u3411
  8328  001E7A  EF41  F00F         	goto	u3410
  8329  001E7E                     u3411:
  8330  001E7E  EF4B  F00F         	goto	l3645
  8331  001E82                     u3410:
  8332  001E82                     
  8333                           ; BSR set to: 0
  8334  001E82  0E00               	movlw	0
  8335  001E84  6E40               	movwf	?___fldiv^0,c
  8336  001E86  0E00               	movlw	0
  8337  001E88  6E41               	movwf	(?___fldiv+1)^0,c
  8338  001E8A  0E00               	movlw	0
  8339  001E8C  6E42               	movwf	(?___fldiv+2)^0,c
  8340  001E8E  0E00               	movlw	0
  8341  001E90  6E43               	movwf	(?___fldiv+3)^0,c
  8342  001E92  EF7C  F010         	goto	l1419
  8343  001E96                     l3645:
  8344                           
  8345                           ; BSR set to: 0
  8346  001E96  516C               	movf	___fldiv@aexp& (0+255),w,b
  8347  001E98  C06B  F048         	movff	___fldiv@bexp,??___fldiv
  8348  001E9C  6A49               	clrf	(??___fldiv+1)^0,c
  8349  001E9E  5E48               	subwf	??___fldiv^0,f,c
  8350  001EA0  0E00               	movlw	0
  8351  001EA2  5A49               	subwfb	(??___fldiv+1)^0,f,c
  8352  001EA4  0E7F               	movlw	127
  8353  001EA6  2448               	addwf	??___fldiv^0,w,c
  8354  001EA8  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8355  001EAA  0E00               	movlw	0
  8356  001EAC  2049               	addwfc	(??___fldiv+1)^0,w,c
  8357  001EAE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8358  001EB0                     
  8359                           ; BSR set to: 0
  8360  001EB0  C040  F060         	movff	___fldiv@b,___fldiv@rem
  8361  001EB4  C041  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  8362  001EB8  C042  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  8363  001EBC  C043  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  8364  001EC0                     
  8365                           ; BSR set to: 0
  8366  001EC0  0E00               	movlw	0
  8367  001EC2  6E40               	movwf	___fldiv@b^0,c
  8368  001EC4  0E00               	movlw	0
  8369  001EC6  6E41               	movwf	(___fldiv@b+1)^0,c
  8370  001EC8  0E00               	movlw	0
  8371  001ECA  6E42               	movwf	(___fldiv@b+2)^0,c
  8372  001ECC  0E00               	movlw	0
  8373  001ECE  6E43               	movwf	(___fldiv@b+3)^0,c
  8374  001ED0                     
  8375                           ; BSR set to: 0
  8376  001ED0  0E00               	movlw	0
  8377  001ED2  6F67               	movwf	___fldiv@grs& (0+255),b
  8378  001ED4  0E00               	movlw	0
  8379  001ED6  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  8380  001ED8  0E00               	movlw	0
  8381  001EDA  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  8382  001EDC  0E00               	movlw	0
  8383  001EDE  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  8384  001EE0                     
  8385                           ; BSR set to: 0
  8386  001EE0  0E00               	movlw	0
  8387  001EE2  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8388  001EE4  EFAC  F00F         	goto	l1421
  8389  001EE8                     l3655:
  8390                           
  8391                           ; BSR set to: 0
  8392  001EE8  516C               	movf	___fldiv@aexp& (0+255),w,b
  8393  001EEA  B4D8               	btfsc	status,2,c
  8394  001EEC  EF7A  F00F         	goto	u3421
  8395  001EF0  EF7C  F00F         	goto	u3420
  8396  001EF4                     u3421:
  8397  001EF4  EF93  F00F         	goto	l3663
  8398  001EF8                     u3420:
  8399  001EF8                     
  8400                           ; BSR set to: 0
  8401  001EF8  90D8               	bcf	status,0,c
  8402  001EFA  3760               	rlcf	___fldiv@rem& (0+255),f,b
  8403  001EFC  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8404  001EFE  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8405  001F00  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8406  001F02  90D8               	bcf	status,0,c
  8407  001F04  3640               	rlcf	___fldiv@b^0,f,c
  8408  001F06  3641               	rlcf	(___fldiv@b+1)^0,f,c
  8409  001F08  3642               	rlcf	(___fldiv@b+2)^0,f,c
  8410  001F0A  3643               	rlcf	(___fldiv@b+3)^0,f,c
  8411  001F0C                     
  8412                           ; BSR set to: 0
  8413  001F0C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8414  001F0E  EF8B  F00F         	goto	u3431
  8415  001F12  EF8D  F00F         	goto	u3430
  8416  001F16                     u3431:
  8417  001F16  EF8E  F00F         	goto	l1424
  8418  001F1A                     u3430:
  8419  001F1A                     
  8420                           ; BSR set to: 0
  8421  001F1A  8040               	bsf	___fldiv@b^0,0,c
  8422  001F1C                     l1424:
  8423                           
  8424                           ; BSR set to: 0
  8425  001F1C  90D8               	bcf	status,0,c
  8426  001F1E  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8427  001F20  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8428  001F22  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8429  001F24  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8430  001F26                     l3663:
  8431                           
  8432                           ; BSR set to: 0
  8433  001F26  5044               	movf	___fldiv@a^0,w,c
  8434  001F28  5D60               	subwf	___fldiv@rem& (0+255),w,b
  8435  001F2A  5045               	movf	(___fldiv@a+1)^0,w,c
  8436  001F2C  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8437  001F2E  5046               	movf	(___fldiv@a+2)^0,w,c
  8438  001F30  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8439  001F32  5047               	movf	(___fldiv@a+3)^0,w,c
  8440  001F34  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8441  001F36  A0D8               	btfss	status,0,c
  8442  001F38  EFA0  F00F         	goto	u3441
  8443  001F3C  EFA2  F00F         	goto	u3440
  8444  001F40                     u3441:
  8445  001F40  EFAB  F00F         	goto	l3669
  8446  001F44                     u3440:
  8447  001F44                     
  8448                           ; BSR set to: 0
  8449  001F44  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8450  001F46                     
  8451                           ; BSR set to: 0
  8452  001F46  5044               	movf	___fldiv@a^0,w,c
  8453  001F48  5F60               	subwf	___fldiv@rem& (0+255),f,b
  8454  001F4A  5045               	movf	(___fldiv@a+1)^0,w,c
  8455  001F4C  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8456  001F4E  5046               	movf	(___fldiv@a+2)^0,w,c
  8457  001F50  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8458  001F52  5047               	movf	(___fldiv@a+3)^0,w,c
  8459  001F54  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8460  001F56                     l3669:
  8461                           
  8462                           ; BSR set to: 0
  8463  001F56  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  8464  001F58                     l1421:
  8465                           
  8466                           ; BSR set to: 0
  8467  001F58  0E19               	movlw	25
  8468  001F5A  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  8469  001F5C  EFB2  F00F         	goto	u3451
  8470  001F60  EFB4  F00F         	goto	u3450
  8471  001F64                     u3451:
  8472  001F64  EF74  F00F         	goto	l3655
  8473  001F68                     u3450:
  8474  001F68                     
  8475                           ; BSR set to: 0
  8476  001F68  5160               	movf	___fldiv@rem& (0+255),w,b
  8477  001F6A  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8478  001F6C  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8479  001F6E  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8480  001F70  B4D8               	btfsc	status,2,c
  8481  001F72  EFBD  F00F         	goto	u3461
  8482  001F76  EFBF  F00F         	goto	u3460
  8483  001F7A                     u3461:
  8484  001F7A  EFD7  F00F         	goto	l3681
  8485  001F7E                     u3460:
  8486  001F7E                     
  8487                           ; BSR set to: 0
  8488  001F7E  8167               	bsf	___fldiv@grs& (0+255),0,b
  8489  001F80  EFD7  F00F         	goto	l3681
  8490  001F84                     l3675:
  8491                           
  8492                           ; BSR set to: 0
  8493  001F84  90D8               	bcf	status,0,c
  8494  001F86  3640               	rlcf	___fldiv@b^0,f,c
  8495  001F88  3641               	rlcf	(___fldiv@b+1)^0,f,c
  8496  001F8A  3642               	rlcf	(___fldiv@b+2)^0,f,c
  8497  001F8C  3643               	rlcf	(___fldiv@b+3)^0,f,c
  8498  001F8E                     
  8499                           ; BSR set to: 0
  8500  001F8E  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8501  001F90  EFCC  F00F         	goto	u3471
  8502  001F94  EFCE  F00F         	goto	u3470
  8503  001F98                     u3471:
  8504  001F98  EFCF  F00F         	goto	l1430
  8505  001F9C                     u3470:
  8506  001F9C                     
  8507                           ; BSR set to: 0
  8508  001F9C  8040               	bsf	___fldiv@b^0,0,c
  8509  001F9E                     l1430:
  8510                           
  8511                           ; BSR set to: 0
  8512  001F9E  90D8               	bcf	status,0,c
  8513  001FA0  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8514  001FA2  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8515  001FA4  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8516  001FA6  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8517  001FA8  0765               	decf	___fldiv@new_exp& (0+255),f,b
  8518  001FAA  A0D8               	btfss	status,0,c
  8519  001FAC  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8520  001FAE                     l3681:
  8521                           
  8522                           ; BSR set to: 0
  8523  001FAE  AE42               	btfss	(___fldiv@b+2)^0,7,c
  8524  001FB0  EFDC  F00F         	goto	u3481
  8525  001FB4  EFDE  F00F         	goto	u3480
  8526  001FB8                     u3481:
  8527  001FB8  EFC2  F00F         	goto	l3675
  8528  001FBC                     u3480:
  8529  001FBC                     
  8530                           ; BSR set to: 0
  8531  001FBC  0E00               	movlw	0
  8532  001FBE  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8533  001FC0                     
  8534                           ; BSR set to: 0
  8535  001FC0  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8536  001FC2  EFE5  F00F         	goto	u3491
  8537  001FC6  EFE7  F00F         	goto	u3490
  8538  001FCA                     u3491:
  8539  001FCA  EF0B  F010         	goto	l1432
  8540  001FCE                     u3490:
  8541  001FCE                     
  8542                           ; BSR set to: 0
  8543  001FCE  0EFF               	movlw	255
  8544  001FD0  1567               	andwf	___fldiv@grs& (0+255),w,b
  8545  001FD2  6E48               	movwf	??___fldiv^0,c
  8546  001FD4  0EFF               	movlw	255
  8547  001FD6  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8548  001FD8  6E49               	movwf	(??___fldiv+1)^0,c
  8549  001FDA  0EFF               	movlw	255
  8550  001FDC  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8551  001FDE  6E4A               	movwf	(??___fldiv+2)^0,c
  8552  001FE0  0E7F               	movlw	127
  8553  001FE2  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8554  001FE4  6E4B               	movwf	(??___fldiv+3)^0,c
  8555  001FE6  5048               	movf	??___fldiv^0,w,c
  8556  001FE8  1049               	iorwf	(??___fldiv+1)^0,w,c
  8557  001FEA  104A               	iorwf	(??___fldiv+2)^0,w,c
  8558  001FEC  104B               	iorwf	(??___fldiv+3)^0,w,c
  8559  001FEE  B4D8               	btfsc	status,2,c
  8560  001FF0  EFFC  F00F         	goto	u3501
  8561  001FF4  EFFE  F00F         	goto	u3500
  8562  001FF8                     u3501:
  8563  001FF8  EF02  F010         	goto	l1433
  8564  001FFC                     u3500:
  8565  001FFC                     l3689:
  8566                           
  8567                           ; BSR set to: 0
  8568  001FFC  0E01               	movlw	1
  8569  001FFE  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8570  002000  EF0B  F010         	goto	l1432
  8571  002004                     l1433:
  8572                           
  8573                           ; BSR set to: 0
  8574  002004  A040               	btfss	___fldiv@b^0,0,c
  8575  002006  EF07  F010         	goto	u3511
  8576  00200A  EF09  F010         	goto	u3510
  8577  00200E                     u3511:
  8578  00200E  EF0B  F010         	goto	l1432
  8579  002012                     u3510:
  8580  002012  EFFE  F00F         	goto	l3689
  8581  002016                     l1432:
  8582                           
  8583                           ; BSR set to: 0
  8584  002016  516C               	movf	___fldiv@aexp& (0+255),w,b
  8585  002018  B4D8               	btfsc	status,2,c
  8586  00201A  EF11  F010         	goto	u3521
  8587  00201E  EF13  F010         	goto	u3520
  8588  002022                     u3521:
  8589  002022  EF37  F010         	goto	l3701
  8590  002026                     u3520:
  8591  002026                     
  8592                           ; BSR set to: 0
  8593  002026  0E01               	movlw	1
  8594  002028  2640               	addwf	___fldiv@b^0,f,c
  8595  00202A  0E00               	movlw	0
  8596  00202C  2241               	addwfc	(___fldiv@b+1)^0,f,c
  8597  00202E  2242               	addwfc	(___fldiv@b+2)^0,f,c
  8598  002030  2243               	addwfc	(___fldiv@b+3)^0,f,c
  8599  002032                     
  8600                           ; BSR set to: 0
  8601  002032  A043               	btfss	(___fldiv@b+3)^0,0,c
  8602  002034  EF1E  F010         	goto	u3531
  8603  002038  EF20  F010         	goto	u3530
  8604  00203C                     u3531:
  8605  00203C  EF37  F010         	goto	l3701
  8606  002040                     u3530:
  8607  002040                     
  8608                           ; BSR set to: 0
  8609  002040  C040  F048         	movff	___fldiv@b,??___fldiv
  8610  002044  C041  F049         	movff	___fldiv@b+1,??___fldiv+1
  8611  002048  C042  F04A         	movff	___fldiv@b+2,??___fldiv+2
  8612  00204C  C043  F04B         	movff	___fldiv@b+3,??___fldiv+3
  8613  002050  344B               	rlcf	(??___fldiv+3)^0,w,c
  8614  002052  324B               	rrcf	(??___fldiv+3)^0,f,c
  8615  002054  324A               	rrcf	(??___fldiv+2)^0,f,c
  8616  002056  3249               	rrcf	(??___fldiv+1)^0,f,c
  8617  002058  3248               	rrcf	??___fldiv^0,f,c
  8618  00205A  C048  F040         	movff	??___fldiv,___fldiv@b
  8619  00205E  C049  F041         	movff	??___fldiv+1,___fldiv@b+1
  8620  002062  C04A  F042         	movff	??___fldiv+2,___fldiv@b+2
  8621  002066  C04B  F043         	movff	??___fldiv+3,___fldiv@b+3
  8622  00206A                     
  8623                           ; BSR set to: 0
  8624  00206A  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  8625  00206C  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8626  00206E                     l3701:
  8627                           
  8628                           ; BSR set to: 0
  8629  00206E  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8630  002070  EF42  F010         	goto	u3541
  8631  002074  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8632  002076  E108               	bnz	u3540
  8633  002078  2965               	incf	___fldiv@new_exp& (0+255),w,b
  8634  00207A  A0D8               	btfss	status,0,c
  8635  00207C  EF42  F010         	goto	u3541
  8636  002080  EF44  F010         	goto	u3540
  8637  002084                     u3541:
  8638  002084  EF4F  F010         	goto	l3705
  8639  002088                     u3540:
  8640  002088                     
  8641                           ; BSR set to: 0
  8642  002088  0E00               	movlw	0
  8643  00208A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8644  00208C  6965               	setf	___fldiv@new_exp& (0+255),b
  8645  00208E  0E00               	movlw	0
  8646  002090  6E40               	movwf	___fldiv@b^0,c
  8647  002092  0E00               	movlw	0
  8648  002094  6E41               	movwf	(___fldiv@b+1)^0,c
  8649  002096  0E00               	movlw	0
  8650  002098  6E42               	movwf	(___fldiv@b+2)^0,c
  8651  00209A  0E00               	movlw	0
  8652  00209C  6E43               	movwf	(___fldiv@b+3)^0,c
  8653  00209E                     l3705:
  8654                           
  8655                           ; BSR set to: 0
  8656  00209E  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8657  0020A0  EF5C  F010         	goto	u3550
  8658  0020A4  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8659  0020A6  E106               	bnz	u3551
  8660  0020A8  0565               	decf	___fldiv@new_exp& (0+255),w,b
  8661  0020AA  B0D8               	btfsc	status,0,c
  8662  0020AC  EF5A  F010         	goto	u3551
  8663  0020B0  EF5C  F010         	goto	u3550
  8664  0020B4                     u3551:
  8665  0020B4  EF6A  F010         	goto	l3709
  8666  0020B8                     u3550:
  8667  0020B8                     
  8668                           ; BSR set to: 0
  8669  0020B8  0E00               	movlw	0
  8670  0020BA  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8671  0020BC  0E00               	movlw	0
  8672  0020BE  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8673  0020C0  0E00               	movlw	0
  8674  0020C2  6E40               	movwf	___fldiv@b^0,c
  8675  0020C4  0E00               	movlw	0
  8676  0020C6  6E41               	movwf	(___fldiv@b+1)^0,c
  8677  0020C8  0E00               	movlw	0
  8678  0020CA  6E42               	movwf	(___fldiv@b+2)^0,c
  8679  0020CC  0E00               	movlw	0
  8680  0020CE  6E43               	movwf	(___fldiv@b+3)^0,c
  8681  0020D0  0E00               	movlw	0
  8682  0020D2  6F64               	movwf	___fldiv@sign& (0+255),b
  8683  0020D4                     l3709:
  8684                           
  8685                           ; BSR set to: 0
  8686  0020D4  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  8687  0020D8                     
  8688                           ; BSR set to: 0
  8689  0020D8  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  8690  0020DA  EF71  F010         	goto	u3561
  8691  0020DE  EF73  F010         	goto	u3560
  8692  0020E2                     u3561:
  8693  0020E2  EF76  F010         	goto	l3715
  8694  0020E6                     u3560:
  8695  0020E6                     
  8696                           ; BSR set to: 0
  8697  0020E6  8E42               	bsf	(___fldiv@b+2)^0,7,c
  8698  0020E8  EF77  F010         	goto	l3717
  8699  0020EC                     l3715:
  8700                           
  8701                           ; BSR set to: 0
  8702  0020EC  9E42               	bcf	(___fldiv@b+2)^0,7,c
  8703  0020EE                     l3717:
  8704                           
  8705                           ; BSR set to: 0
  8706  0020EE  90D8               	bcf	status,0,c
  8707  0020F0  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  8708  0020F2  6E43               	movwf	(___fldiv@b+3)^0,c
  8709  0020F4  EF2D  F00F         	goto	l3631
  8710  0020F8                     l1419:
  8711                           
  8712                           ; BSR set to: 0
  8713  0020F8  0012               	return		;funcret
  8714  0020FA                     __end_of___fldiv:
  8715                           	callstack 0
  8716                           
  8717 ;; *************** function _checkbatterylevel *****************
  8718 ;; Defined at:
  8719 ;;		line 65 in file "DC_motors.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;		None
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;  batterylevel    1   11[COMRAM] unsigned char 
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  1    wreg      void 
  8726 ;; Registers used:
  8727 ;;		wreg, status,2, status,0, cstack
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8735 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8737 ;;Total ram usage:        2 bytes
  8738 ;; Hardware stack levels used: 1
  8739 ;; Hardware stack levels required when called: 8
  8740 ;; This function calls:
  8741 ;;		_ADC_getval
  8742 ;;		_colourclickLEDs_RGB
  8743 ;; This function is called by:
  8744 ;;		_main
  8745 ;; This function uses a non-reentrant model
  8746 ;;
  8747                           
  8748                           	psect	text42
  8749  00344C                     __ptext42:
  8750                           	callstack 0
  8751  00344C                     _checkbatterylevel:
  8752                           	callstack 22
  8753  00344C                     
  8754                           ;DC_motors.c: 66:     unsigned char batterylevel;;DC_motors.c: 67:     batterylevel = AD
      +                          C_getval();
  8755  00344C  EC8D  F01F         	call	_ADC_getval	;wreg free
  8756  003450  6E0C               	movwf	checkbatterylevel@batterylevel^0,c
  8757  003452                     
  8758                           ;DC_motors.c: 68:     if (batterylevel<200) {
  8759  003452  0EC8               	movlw	200
  8760  003454  600C               	cpfslt	checkbatterylevel@batterylevel^0,c
  8761  003456  EF2F  F01A         	goto	u4271
  8762  00345A  EF31  F01A         	goto	u4270
  8763  00345E                     u4271:
  8764  00345E  EFA0  F01A         	goto	l634
  8765  003462                     u4270:
  8766  003462                     l4369:
  8767                           
  8768                           ;DC_motors.c: 70:             LATDbits.LATD7 = !LATDbits.LATD7;
  8769  003462  AE7C               	btfss	124,7,c	;volatile
  8770  003464  EF36  F01A         	goto	u4281
  8771  003468  EF3A  F01A         	goto	u4280
  8772  00346C                     u4281:
  8773  00346C  6A0B               	clrf	??_checkbatterylevel^0,c
  8774  00346E  2A0B               	incf	??_checkbatterylevel^0,f,c
  8775  003470  EF3B  F01A         	goto	u4298
  8776  003474                     u4280:
  8777  003474  6A0B               	clrf	??_checkbatterylevel^0,c
  8778  003476                     u4298:
  8779  003476  320B               	rrcf	??_checkbatterylevel^0,f,c
  8780  003478  320B               	rrcf	??_checkbatterylevel^0,f,c
  8781  00347A  507C               	movf	124,w,c	;volatile
  8782  00347C  180B               	xorwf	??_checkbatterylevel^0,w,c
  8783  00347E  0B7F               	andlw	-129
  8784  003480  180B               	xorwf	??_checkbatterylevel^0,w,c
  8785  003482  6E7C               	movwf	124,c	;volatile
  8786                           
  8787                           ;DC_motors.c: 71:             LATHbits.LATH3 = !LATHbits.LATH3;
  8788  003484  A680               	btfss	128,3,c	;volatile
  8789  003486  EF47  F01A         	goto	u4301
  8790  00348A  EF4B  F01A         	goto	u4300
  8791  00348E                     u4301:
  8792  00348E  6A0B               	clrf	??_checkbatterylevel^0,c
  8793  003490  2A0B               	incf	??_checkbatterylevel^0,f,c
  8794  003492  EF4C  F01A         	goto	u4318
  8795  003496                     u4300:
  8796  003496  6A0B               	clrf	??_checkbatterylevel^0,c
  8797  003498                     u4318:
  8798  003498  460B               	rlncf	??_checkbatterylevel^0,f,c
  8799  00349A  460B               	rlncf	??_checkbatterylevel^0,f,c
  8800  00349C  460B               	rlncf	??_checkbatterylevel^0,f,c
  8801  00349E  5080               	movf	128,w,c	;volatile
  8802  0034A0  180B               	xorwf	??_checkbatterylevel^0,w,c
  8803  0034A2  0BF7               	andlw	-9
  8804  0034A4  180B               	xorwf	??_checkbatterylevel^0,w,c
  8805  0034A6  6E80               	movwf	128,c	;volatile
  8806                           
  8807                           ;DC_motors.c: 72:             LATDbits.LATD3 = !LATDbits.LATD3;
  8808  0034A8  A67C               	btfss	124,3,c	;volatile
  8809  0034AA  EF59  F01A         	goto	u4321
  8810  0034AE  EF5D  F01A         	goto	u4320
  8811  0034B2                     u4321:
  8812  0034B2  6A0B               	clrf	??_checkbatterylevel^0,c
  8813  0034B4  2A0B               	incf	??_checkbatterylevel^0,f,c
  8814  0034B6  EF5E  F01A         	goto	u4338
  8815  0034BA                     u4320:
  8816  0034BA  6A0B               	clrf	??_checkbatterylevel^0,c
  8817  0034BC                     u4338:
  8818  0034BC  460B               	rlncf	??_checkbatterylevel^0,f,c
  8819  0034BE  460B               	rlncf	??_checkbatterylevel^0,f,c
  8820  0034C0  460B               	rlncf	??_checkbatterylevel^0,f,c
  8821  0034C2  507C               	movf	124,w,c	;volatile
  8822  0034C4  180B               	xorwf	??_checkbatterylevel^0,w,c
  8823  0034C6  0BF7               	andlw	-9
  8824  0034C8  180B               	xorwf	??_checkbatterylevel^0,w,c
  8825  0034CA  6E7C               	movwf	124,c	;volatile
  8826                           
  8827                           ;DC_motors.c: 73:             LATDbits.LATD4 = !LATDbits.LATD4;
  8828  0034CC  A87C               	btfss	124,4,c	;volatile
  8829  0034CE  EF6B  F01A         	goto	u4341
  8830  0034D2  EF6F  F01A         	goto	u4340
  8831  0034D6                     u4341:
  8832  0034D6  6A0B               	clrf	??_checkbatterylevel^0,c
  8833  0034D8  2A0B               	incf	??_checkbatterylevel^0,f,c
  8834  0034DA  EF70  F01A         	goto	u4358
  8835  0034DE                     u4340:
  8836  0034DE  6A0B               	clrf	??_checkbatterylevel^0,c
  8837  0034E0                     u4358:
  8838  0034E0  3A0B               	swapf	??_checkbatterylevel^0,f,c
  8839  0034E2  507C               	movf	124,w,c	;volatile
  8840  0034E4  180B               	xorwf	??_checkbatterylevel^0,w,c
  8841  0034E6  0BEF               	andlw	-17
  8842  0034E8  180B               	xorwf	??_checkbatterylevel^0,w,c
  8843  0034EA  6E7C               	movwf	124,c	;volatile
  8844                           
  8845                           ;DC_motors.c: 74:             LATFbits.LATF0 = !LATFbits.LATF0;
  8846  0034EC  A07E               	btfss	126,0,c	;volatile
  8847  0034EE  EF7B  F01A         	goto	u4361
  8848  0034F2  EF7F  F01A         	goto	u4360
  8849  0034F6                     u4361:
  8850  0034F6  6A0B               	clrf	??_checkbatterylevel^0,c
  8851  0034F8  2A0B               	incf	??_checkbatterylevel^0,f,c
  8852  0034FA  EF80  F01A         	goto	u4378
  8853  0034FE                     u4360:
  8854  0034FE  6A0B               	clrf	??_checkbatterylevel^0,c
  8855  003500                     u4378:
  8856  003500  507E               	movf	126,w,c	;volatile
  8857  003502  180B               	xorwf	??_checkbatterylevel^0,w,c
  8858  003504  0BFE               	andlw	-2
  8859  003506  180B               	xorwf	??_checkbatterylevel^0,w,c
  8860  003508  6E7E               	movwf	126,c	;volatile
  8861                           
  8862                           ;DC_motors.c: 75:             LATHbits.LATH0 = !LATHbits.LATH0;
  8863  00350A  A080               	btfss	128,0,c	;volatile
  8864  00350C  EF8A  F01A         	goto	u4381
  8865  003510  EF8E  F01A         	goto	u4380
  8866  003514                     u4381:
  8867  003514  6A0B               	clrf	??_checkbatterylevel^0,c
  8868  003516  2A0B               	incf	??_checkbatterylevel^0,f,c
  8869  003518  EF8F  F01A         	goto	u4398
  8870  00351C                     u4380:
  8871  00351C  6A0B               	clrf	??_checkbatterylevel^0,c
  8872  00351E                     u4398:
  8873  00351E  5080               	movf	128,w,c	;volatile
  8874  003520  180B               	xorwf	??_checkbatterylevel^0,w,c
  8875  003522  0BFE               	andlw	-2
  8876  003524  180B               	xorwf	??_checkbatterylevel^0,w,c
  8877  003526  6E80               	movwf	128,c	;volatile
  8878  003528                     
  8879                           ;DC_motors.c: 76:             colourclickLEDs_RGB();
  8880  003528  ECB6  F01B         	call	_colourclickLEDs_RGB	;wreg free
  8881  00352C                     
  8882                           ;DC_motors.c: 77:             _delay((unsigned long)((5)*(64000000/4000.0)));
  8883  00352C  0E68               	movlw	104
  8884  00352E  6E0B               	movwf	??_checkbatterylevel^0,c
  8885  003530  0EE4               	movlw	228
  8886  003532                     u6887:
  8887  003532  2EE8               	decfsz	wreg,f,c
  8888  003534  D7FE               	bra	u6887
  8889  003536  2E0B               	decfsz	??_checkbatterylevel^0,f,c
  8890  003538  D7FC               	bra	u6887
  8891  00353A  D000               	nop2	
  8892  00353C  EF31  F01A         	goto	l4369
  8893  003540                     l634:
  8894  003540  0012               	return		;funcret
  8895  003542                     __end_of_checkbatterylevel:
  8896                           	callstack 0
  8897                           
  8898 ;; *************** function _colourclickLEDs_RGB *****************
  8899 ;; Defined at:
  8900 ;;		line 44 in file "buttons_n_LEDs.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;		None
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;		None
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      void 
  8907 ;; Registers used:
  8908 ;;		wreg
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;Total ram usage:        2 bytes
  8919 ;; Hardware stack levels used: 1
  8920 ;; Hardware stack levels required when called: 7
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_checkbatterylevel
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text43
  8929  00376C                     __ptext43:
  8930                           	callstack 0
  8931  00376C                     _colourclickLEDs_RGB:
  8932                           	callstack 22
  8933  00376C                     
  8934                           ;buttons_n_LEDs.c: 45:     LATGbits.LATG1 = 1;
  8935  00376C  827F               	bsf	127,1,c	;volatile
  8936  00376E                     
  8937                           ;buttons_n_LEDs.c: 46:     _delay((unsigned long)((20)*(64000000/4000.0)));
  8938  00376E  0E02               	movlw	2
  8939  003770  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  8940  003772  0EA0               	movlw	160
  8941  003774  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  8942  003776  0E92               	movlw	146
  8943  003778                     u6897:
  8944  003778  2EE8               	decfsz	wreg,f,c
  8945  00377A  D7FE               	bra	u6897
  8946  00377C  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  8947  00377E  D7FC               	bra	u6897
  8948  003780  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  8949  003782  D7FA               	bra	u6897
  8950  003784  D000               	nop2	
  8951  003786                     
  8952                           ;buttons_n_LEDs.c: 47:     LATGbits.LATG1 = 0;
  8953  003786  927F               	bcf	127,1,c	;volatile
  8954                           
  8955                           ;buttons_n_LEDs.c: 48:     _delay((unsigned long)((20)*(64000000/4000.0)));
  8956  003788  0E02               	movlw	2
  8957  00378A  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  8958  00378C  0EA0               	movlw	160
  8959  00378E  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  8960  003790  0E92               	movlw	146
  8961  003792                     u6907:
  8962  003792  2EE8               	decfsz	wreg,f,c
  8963  003794  D7FE               	bra	u6907
  8964  003796  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  8965  003798  D7FC               	bra	u6907
  8966  00379A  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  8967  00379C  D7FA               	bra	u6907
  8968  00379E  D000               	nop2	
  8969  0037A0                     
  8970                           ;buttons_n_LEDs.c: 50:     LATAbits.LATA4 = 1;
  8971  0037A0  8879               	bsf	121,4,c	;volatile
  8972                           
  8973                           ;buttons_n_LEDs.c: 51:     _delay((unsigned long)((20)*(64000000/4000.0)));
  8974  0037A2  0E02               	movlw	2
  8975  0037A4  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  8976  0037A6  0EA0               	movlw	160
  8977  0037A8  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  8978  0037AA  0E92               	movlw	146
  8979  0037AC                     u6917:
  8980  0037AC  2EE8               	decfsz	wreg,f,c
  8981  0037AE  D7FE               	bra	u6917
  8982  0037B0  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  8983  0037B2  D7FC               	bra	u6917
  8984  0037B4  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  8985  0037B6  D7FA               	bra	u6917
  8986  0037B8  D000               	nop2	
  8987  0037BA                     
  8988                           ;buttons_n_LEDs.c: 52:     LATAbits.LATA4 = 0;
  8989  0037BA  9879               	bcf	121,4,c	;volatile
  8990                           
  8991                           ;buttons_n_LEDs.c: 53:     _delay((unsigned long)((20)*(64000000/4000.0)));
  8992  0037BC  0E02               	movlw	2
  8993  0037BE  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  8994  0037C0  0EA0               	movlw	160
  8995  0037C2  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  8996  0037C4  0E92               	movlw	146
  8997  0037C6                     u6927:
  8998  0037C6  2EE8               	decfsz	wreg,f,c
  8999  0037C8  D7FE               	bra	u6927
  9000  0037CA  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  9001  0037CC  D7FC               	bra	u6927
  9002  0037CE  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  9003  0037D0  D7FA               	bra	u6927
  9004  0037D2  D000               	nop2	
  9005  0037D4                     
  9006                           ;buttons_n_LEDs.c: 55:     LATFbits.LATF7 = 1;
  9007  0037D4  8E7E               	bsf	126,7,c	;volatile
  9008                           
  9009                           ;buttons_n_LEDs.c: 56:     _delay((unsigned long)((20)*(64000000/4000.0)));
  9010  0037D6  0E02               	movlw	2
  9011  0037D8  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  9012  0037DA  0EA0               	movlw	160
  9013  0037DC  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  9014  0037DE  0E92               	movlw	146
  9015  0037E0                     u6937:
  9016  0037E0  2EE8               	decfsz	wreg,f,c
  9017  0037E2  D7FE               	bra	u6937
  9018  0037E4  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  9019  0037E6  D7FC               	bra	u6937
  9020  0037E8  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  9021  0037EA  D7FA               	bra	u6937
  9022  0037EC  D000               	nop2	
  9023  0037EE                     
  9024                           ;buttons_n_LEDs.c: 57:     LATFbits.LATF7 = 0;
  9025  0037EE  9E7E               	bcf	126,7,c	;volatile
  9026                           
  9027                           ;buttons_n_LEDs.c: 58:     _delay((unsigned long)((20)*(64000000/4000.0)));
  9028  0037F0  0E02               	movlw	2
  9029  0037F2  6E0A               	movwf	(??_colourclickLEDs_RGB+1)^0,c
  9030  0037F4  0EA0               	movlw	160
  9031  0037F6  6E09               	movwf	??_colourclickLEDs_RGB^0,c
  9032  0037F8  0E92               	movlw	146
  9033  0037FA                     u6947:
  9034  0037FA  2EE8               	decfsz	wreg,f,c
  9035  0037FC  D7FE               	bra	u6947
  9036  0037FE  2E09               	decfsz	??_colourclickLEDs_RGB^0,f,c
  9037  003800  D7FC               	bra	u6947
  9038  003802  2E0A               	decfsz	(??_colourclickLEDs_RGB+1)^0,f,c
  9039  003804  D7FA               	bra	u6947
  9040  003806  D000               	nop2	
  9041  003808  0012               	return		;funcret
  9042  00380A                     __end_of_colourclickLEDs_RGB:
  9043                           	callstack 0
  9044                           
  9045 ;; *************** function _ADC_getval *****************
  9046 ;; Defined at:
  9047 ;;		line 26 in file "ADC.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;		None
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;  tmpval          1    8[COMRAM] unsigned char 
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  1    wreg      unsigned char 
  9054 ;; Registers used:
  9055 ;;		wreg, status,2
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9065 ;;Total ram usage:        1 bytes
  9066 ;; Hardware stack levels used: 1
  9067 ;; Hardware stack levels required when called: 7
  9068 ;; This function calls:
  9069 ;;		Nothing
  9070 ;; This function is called by:
  9071 ;;		_checkbatterylevel
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           	psect	text44
  9076  003F1A                     __ptext44:
  9077                           	callstack 0
  9078  003F1A                     _ADC_getval:
  9079                           	callstack 22
  9080  003F1A                     
  9081                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  9082  003F1A  8060               	bsf	96,0,c	;volatile
  9083  003F1C                     l407:
  9084  003F1C  B060               	btfsc	96,0,c	;volatile
  9085  003F1E  EF93  F01F         	goto	u4191
  9086  003F22  EF95  F01F         	goto	u4190
  9087  003F26                     u4191:
  9088  003F26  EF8E  F01F         	goto	l407
  9089  003F2A                     u4190:
  9090  003F2A                     
  9091                           ;ADC.c: 31:     tmpval = ADRESH;
  9092  003F2A  CF64 F009          	movff	3940,ADC_getval@tmpval	;volatile
  9093  003F2E                     
  9094                           ;ADC.c: 34:     return tmpval;
  9095  003F2E  5009               	movf	ADC_getval@tmpval^0,w,c
  9096  003F30  0012               	return		;funcret
  9097  003F32                     __end_of_ADC_getval:
  9098                           	callstack 0
  9099                           
  9100 ;; *************** function _USART4_init *****************
  9101 ;; Defined at:
  9102 ;;		line 8 in file "serial_comm.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;		None
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;		None
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  1    wreg      void 
  9109 ;; Registers used:
  9110 ;;		wreg, status,2
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9120 ;;Total ram usage:        0 bytes
  9121 ;; Hardware stack levels used: 1
  9122 ;; Hardware stack levels required when called: 7
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		_main
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text45
  9131  003E8C                     __ptext45:
  9132                           	callstack 0
  9133  003E8C                     _USART4_init:
  9134                           	callstack 23
  9135  003E8C                     
  9136                           ;serial_comm.c: 9:     RC0PPS = 0x12;
  9137  003E8C  0E12               	movlw	18
  9138  003E8E  010E               	movlb	14	; () banked
  9139  003E90  6F62               	movwf	98,b	;volatile
  9140                           
  9141                           ;serial_comm.c: 10:     RX4PPS = 0x11;
  9142  003E92  0E11               	movlw	17
  9143  003E94  6F15               	movwf	21,b	;volatile
  9144  003E96                     
  9145                           ; BSR set to: 14
  9146                           ;serial_comm.c: 11:     TRISCbits.TRISC1 = 1;
  9147  003E96  8283               	bsf	131,1,c	;volatile
  9148  003E98                     
  9149                           ; BSR set to: 14
  9150                           ;serial_comm.c: 13:     BAUD4CONbits.BRG16 = 0;
  9151  003E98  97E9               	bcf	233,3,b	;volatile
  9152  003E9A                     
  9153                           ; BSR set to: 14
  9154                           ;serial_comm.c: 14:     TX4STAbits.BRGH = 0;
  9155  003E9A  95E8               	bcf	232,2,b	;volatile
  9156                           
  9157                           ;serial_comm.c: 15:     SP4BRGL = 51;
  9158  003E9C  0E33               	movlw	51
  9159  003E9E  6FE5               	movwf	229,b	;volatile
  9160                           
  9161                           ;serial_comm.c: 16:     SP4BRGH = 0;
  9162  003EA0  0E00               	movlw	0
  9163  003EA2  6FE6               	movwf	230,b	;volatile
  9164  003EA4                     
  9165                           ; BSR set to: 14
  9166                           ;serial_comm.c: 18:     RC4STAbits.CREN = 1;
  9167  003EA4  89E7               	bsf	231,4,b	;volatile
  9168  003EA6                     
  9169                           ; BSR set to: 14
  9170                           ;serial_comm.c: 19:     TX4STAbits.TXEN = 1;
  9171  003EA6  8BE8               	bsf	232,5,b	;volatile
  9172  003EA8                     
  9173                           ; BSR set to: 14
  9174                           ;serial_comm.c: 20:     RC4STAbits.SPEN = 1;
  9175  003EA8  8FE7               	bsf	231,7,b	;volatile
  9176  003EAA                     
  9177                           ; BSR set to: 14
  9178  003EAA  0012               	return		;funcret
  9179  003EAC                     __end_of_USART4_init:
  9180                           	callstack 0
  9181                           
  9182 ;; *************** function _DCmotors_init *****************
  9183 ;; Defined at:
  9184 ;;		line 10 in file "DC_motors.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  PWMperiod       1    wreg     unsigned char 
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;  PWMperiod       1    8[COMRAM] unsigned char 
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  1    wreg      void 
  9191 ;; Registers used:
  9192 ;;		wreg, status,2, cstack
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9202 ;;Total ram usage:        1 bytes
  9203 ;; Hardware stack levels used: 1
  9204 ;; Hardware stack levels required when called: 8
  9205 ;; This function calls:
  9206 ;;		_buggyLEDs_init
  9207 ;;		_clicker2LEDs_init
  9208 ;;		_clicker2buttons_init
  9209 ;; This function is called by:
  9210 ;;		_main
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           	psect	text46
  9215  003BAC                     __ptext46:
  9216                           	callstack 0
  9217  003BAC                     _DCmotors_init:
  9218                           	callstack 22
  9219                           
  9220                           ; BSR set to: 14
  9221                           ;incstack = 0
  9222                           ;DCmotors_init@PWMperiod stored from wreg
  9223  003BAC  6E09               	movwf	DCmotors_init@PWMperiod^0,c
  9224  003BAE                     
  9225                           ;DC_motors.c: 12:     T2CONbits.CKPS=0b100;
  9226  003BAE  50BD               	movf	189,w,c	;volatile
  9227  003BB0  0B8F               	andlw	-113
  9228  003BB2  0940               	iorlw	64
  9229  003BB4  6EBD               	movwf	189,c	;volatile
  9230                           
  9231                           ;DC_motors.c: 13:     T2HLTbits.MODE=0b00000;
  9232  003BB6  0EE0               	movlw	-32
  9233  003BB8  16BE               	andwf	190,f,c	;volatile
  9234                           
  9235                           ;DC_motors.c: 14:     T2CLKCONbits.CS=0b0001;
  9236  003BBA  50BF               	movf	191,w,c	;volatile
  9237  003BBC  0BF0               	andlw	-16
  9238  003BBE  0901               	iorlw	1
  9239  003BC0  6EBF               	movwf	191,c	;volatile
  9240  003BC2                     
  9241                           ;DC_motors.c: 17:     T2PR=PWMperiod;
  9242  003BC2  C009  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  9243  003BC6                     
  9244                           ;DC_motors.c: 18:     T2CONbits.ON=1;
  9245  003BC6  8EBD               	bsf	189,7,c	;volatile
  9246  003BC8                     
  9247                           ;DC_motors.c: 21:     TRISEbits.TRISE2=0;
  9248  003BC8  9485               	bcf	133,2,c	;volatile
  9249  003BCA                     
  9250                           ;DC_motors.c: 22:     TRISEbits.TRISE4=0;
  9251  003BCA  9885               	bcf	133,4,c	;volatile
  9252  003BCC                     
  9253                           ;DC_motors.c: 23:     TRISCbits.TRISC7=0;
  9254  003BCC  9E83               	bcf	131,7,c	;volatile
  9255  003BCE                     
  9256                           ;DC_motors.c: 24:     TRISGbits.TRISG6=0;
  9257  003BCE  9C87               	bcf	135,6,c	;volatile
  9258  003BD0                     
  9259                           ;DC_motors.c: 26:     LATEbits.LATE2=0;
  9260  003BD0  947D               	bcf	125,2,c	;volatile
  9261  003BD2                     
  9262                           ;DC_motors.c: 27:     LATEbits.LATE4=0;
  9263  003BD2  987D               	bcf	125,4,c	;volatile
  9264  003BD4                     
  9265                           ;DC_motors.c: 28:     LATCbits.LATC7=0;
  9266  003BD4  9E7B               	bcf	123,7,c	;volatile
  9267  003BD6                     
  9268                           ;DC_motors.c: 29:     LATGbits.LATG6=0;
  9269  003BD6  9C7F               	bcf	127,6,c	;volatile
  9270                           
  9271                           ;DC_motors.c: 31:     PWM6DCH=0;
  9272  003BD8  0E00               	movlw	0
  9273  003BDA  6EA3               	movwf	163,c	;volatile
  9274                           
  9275                           ;DC_motors.c: 32:     PWM7DCH=0;
  9276  003BDC  0E00               	movlw	0
  9277  003BDE  6EA0               	movwf	160,c	;volatile
  9278  003BE0                     
  9279                           ;DC_motors.c: 34:     PWM6CONbits.EN = 1;
  9280  003BE0  8EA4               	bsf	164,7,c	;volatile
  9281  003BE2                     
  9282                           ;DC_motors.c: 35:     PWM7CONbits.EN = 1;
  9283  003BE2  8EA1               	bsf	161,7,c	;volatile
  9284                           
  9285                           ;DC_motors.c: 37:     RE2PPS=0x0A;
  9286  003BE4  0E0A               	movlw	10
  9287  003BE6  010E               	movlb	14	; () banked
  9288  003BE8  6F74               	movwf	116,b	;volatile
  9289                           
  9290                           ;DC_motors.c: 38:     RC7PPS=0x0B;
  9291  003BEA  0E0B               	movlw	11
  9292  003BEC  6F69               	movwf	105,b	;volatile
  9293  003BEE                     
  9294                           ; BSR set to: 14
  9295                           ;DC_motors.c: 40:     clicker2buttons_init();
  9296  003BEE  ECB1  F01F         	call	_clicker2buttons_init	;wreg free
  9297  003BF2                     
  9298                           ;DC_motors.c: 41:     clicker2LEDs_init();
  9299  003BF2  ECCC  F01F         	call	_clicker2LEDs_init	;wreg free
  9300  003BF6                     
  9301                           ;DC_motors.c: 42:     buggyLEDs_init();
  9302  003BF6  EC99  F01F         	call	_buggyLEDs_init	;wreg free
  9303  003BFA  0012               	return		;funcret
  9304  003BFC                     __end_of_DCmotors_init:
  9305                           	callstack 0
  9306                           
  9307 ;; *************** function _clicker2buttons_init *****************
  9308 ;; Defined at:
  9309 ;;		line 8 in file "buttons_n_LEDs.c"
  9310 ;; Parameters:    Size  Location     Type
  9311 ;;		None
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;		None
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  1    wreg      void 
  9316 ;; Registers used:
  9317 ;;		None
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9327 ;;Total ram usage:        0 bytes
  9328 ;; Hardware stack levels used: 1
  9329 ;; Hardware stack levels required when called: 7
  9330 ;; This function calls:
  9331 ;;		Nothing
  9332 ;; This function is called by:
  9333 ;;		_DCmotors_init
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text47
  9338  003F62                     __ptext47:
  9339                           	callstack 0
  9340  003F62                     _clicker2buttons_init:
  9341                           	callstack 22
  9342  003F62                     
  9343                           ;buttons_n_LEDs.c: 9:     TRISFbits.TRISF2=1;
  9344  003F62  8486               	bsf	134,2,c	;volatile
  9345                           
  9346                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF3=1;
  9347  003F64  8686               	bsf	134,3,c	;volatile
  9348                           
  9349                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
  9350  003F66  010E               	movlb	14	; () banked
  9351  003F68  95B4               	bcf	180,2,b	;volatile
  9352                           
  9353                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
  9354  003F6A  97B4               	bcf	180,3,b	;volatile
  9355  003F6C                     
  9356                           ; BSR set to: 14
  9357  003F6C  0012               	return		;funcret
  9358  003F6E                     __end_of_clicker2buttons_init:
  9359                           	callstack 0
  9360                           
  9361 ;; *************** function _clicker2LEDs_init *****************
  9362 ;; Defined at:
  9363 ;;		line 20 in file "buttons_n_LEDs.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;		None
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;		None
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  1    wreg      void 
  9370 ;; Registers used:
  9371 ;;		None
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9381 ;;Total ram usage:        0 bytes
  9382 ;; Hardware stack levels used: 1
  9383 ;; Hardware stack levels required when called: 7
  9384 ;; This function calls:
  9385 ;;		Nothing
  9386 ;; This function is called by:
  9387 ;;		_DCmotors_init
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           	psect	text48
  9392  003F98                     __ptext48:
  9393                           	callstack 0
  9394  003F98                     _clicker2LEDs_init:
  9395                           	callstack 22
  9396  003F98                     
  9397                           ;buttons_n_LEDs.c: 21:     LATDbits.LATD7 = 0;
  9398  003F98  9E7C               	bcf	124,7,c	;volatile
  9399                           
  9400                           ;buttons_n_LEDs.c: 22:     LATHbits.LATH3 = 0;
  9401  003F9A  9680               	bcf	128,3,c	;volatile
  9402                           
  9403                           ;buttons_n_LEDs.c: 24:     TRISDbits.TRISD7 = 0;
  9404  003F9C  9E84               	bcf	132,7,c	;volatile
  9405                           
  9406                           ;buttons_n_LEDs.c: 25:     TRISHbits.TRISH3 = 0;
  9407  003F9E  9688               	bcf	136,3,c	;volatile
  9408  003FA0  0012               	return		;funcret
  9409  003FA2                     __end_of_clicker2LEDs_init:
  9410                           	callstack 0
  9411                           
  9412 ;; *************** function _buggyLEDs_init *****************
  9413 ;; Defined at:
  9414 ;;		line 75 in file "buttons_n_LEDs.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;		None
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;		None
  9419 ;; Return value:  Size  Location     Type
  9420 ;;                  1    wreg      void 
  9421 ;; Registers used:
  9422 ;;		None
  9423 ;; Tracked objects:
  9424 ;;		On entry : 0/0
  9425 ;;		On exit  : 0/0
  9426 ;;		Unchanged: 0/0
  9427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9432 ;;Total ram usage:        0 bytes
  9433 ;; Hardware stack levels used: 1
  9434 ;; Hardware stack levels required when called: 7
  9435 ;; This function calls:
  9436 ;;		Nothing
  9437 ;; This function is called by:
  9438 ;;		_DCmotors_init
  9439 ;; This function uses a non-reentrant model
  9440 ;;
  9441                           
  9442                           	psect	text49
  9443  003F32                     __ptext49:
  9444                           	callstack 0
  9445  003F32                     _buggyLEDs_init:
  9446                           	callstack 22
  9447  003F32                     
  9448                           ;buttons_n_LEDs.c: 76:     LATHbits.LATH1 = 0;
  9449  003F32  9280               	bcf	128,1,c	;volatile
  9450                           
  9451                           ;buttons_n_LEDs.c: 77:     LATDbits.LATD3 = 0;
  9452  003F34  967C               	bcf	124,3,c	;volatile
  9453                           
  9454                           ;buttons_n_LEDs.c: 78:     LATDbits.LATD4 = 0;
  9455  003F36  987C               	bcf	124,4,c	;volatile
  9456                           
  9457                           ;buttons_n_LEDs.c: 79:     LATFbits.LATF0 = 0;
  9458  003F38  907E               	bcf	126,0,c	;volatile
  9459                           
  9460                           ;buttons_n_LEDs.c: 80:     LATHbits.LATH0 = 0;
  9461  003F3A  9080               	bcf	128,0,c	;volatile
  9462                           
  9463                           ;buttons_n_LEDs.c: 82:     TRISHbits.TRISH1 = 0;
  9464  003F3C  9288               	bcf	136,1,c	;volatile
  9465                           
  9466                           ;buttons_n_LEDs.c: 83:     TRISDbits.TRISD3 = 0;
  9467  003F3E  9684               	bcf	132,3,c	;volatile
  9468                           
  9469                           ;buttons_n_LEDs.c: 84:     TRISDbits.TRISD4 = 0;
  9470  003F40  9884               	bcf	132,4,c	;volatile
  9471                           
  9472                           ;buttons_n_LEDs.c: 85:     TRISFbits.TRISF0 = 0;
  9473  003F42  9086               	bcf	134,0,c	;volatile
  9474                           
  9475                           ;buttons_n_LEDs.c: 86:     TRISHbits.TRISH0 = 0;
  9476  003F44  9088               	bcf	136,0,c	;volatile
  9477  003F46  0012               	return		;funcret
  9478  003F48                     __end_of_buggyLEDs_init:
  9479                           	callstack 0
  9480                           
  9481 ;; *************** function _ADC_init *****************
  9482 ;; Defined at:
  9483 ;;		line 8 in file "ADC.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;		None
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;		None
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		wreg, status,2
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9501 ;;Total ram usage:        0 bytes
  9502 ;; Hardware stack levels used: 1
  9503 ;; Hardware stack levels required when called: 7
  9504 ;; This function calls:
  9505 ;;		Nothing
  9506 ;; This function is called by:
  9507 ;;		_main
  9508 ;; This function uses a non-reentrant model
  9509 ;;
  9510                           
  9511                           	psect	text50
  9512  003EE6                     __ptext50:
  9513                           	callstack 0
  9514  003EE6                     _ADC_init:
  9515                           	callstack 23
  9516  003EE6                     
  9517                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  9518  003EE6  8C86               	bsf	134,6,c	;volatile
  9519                           
  9520                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  9521  003EE8  010E               	movlb	14	; () banked
  9522  003EEA  8DB4               	bsf	180,6,b	;volatile
  9523                           
  9524                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  9525  003EEC  010F               	movlb	15	; () banked
  9526  003EEE  9958               	bcf	88,4,b	;volatile
  9527  003EF0                     
  9528                           ; BSR set to: 15
  9529                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  9530  003EF0  0EFC               	movlw	-4
  9531  003EF2  1758               	andwf	88,f,b	;volatile
  9532                           
  9533                           ;ADC.c: 16:     ADPCH=0b101110;
  9534  003EF4  0E2E               	movlw	46
  9535  003EF6  6F5F               	movwf	95,b	;volatile
  9536  003EF8                     
  9537                           ; BSR set to: 15
  9538                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  9539  003EF8  9460               	bcf	96,2,c	;volatile
  9540  003EFA                     
  9541                           ; BSR set to: 15
  9542                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  9543  003EFA  8860               	bsf	96,4,c	;volatile
  9544  003EFC                     
  9545                           ; BSR set to: 15
  9546                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  9547  003EFC  8E60               	bsf	96,7,c	;volatile
  9548  003EFE                     
  9549                           ; BSR set to: 15
  9550  003EFE  0012               	return		;funcret
  9551  003F00                     __end_of_ADC_init:
  9552                           	callstack 0
  9553                           
  9554 ;; *************** function _LowISR *****************
  9555 ;; Defined at:
  9556 ;;		line 75 in file "interrupts.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;		None
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;		None
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  1    wreg      void 
  9563 ;; Registers used:
  9564 ;;		wreg, status,2, status,0
  9565 ;; Tracked objects:
  9566 ;;		On entry : 0/0
  9567 ;;		On exit  : 0/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9572 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9573 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9574 ;;Total ram usage:        3 bytes
  9575 ;; Hardware stack levels used: 1
  9576 ;; Hardware stack levels required when called: 6
  9577 ;; This function calls:
  9578 ;;		Nothing
  9579 ;; This function is called by:
  9580 ;;		Interrupt level 1
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583                           
  9584                           	psect	intcodelo
  9585  000018                     __pintcodelo:
  9586                           	callstack 0
  9587  000018                     _LowISR:
  9588                           	callstack 17
  9589                           
  9590                           ; BSR set to: 15
  9591                           ;incstack = 0
  9592  000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9593  00001A  CFD8 F006          	movff	status,??_LowISR
  9594  00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  9595  000022  CFE0 F008          	movff	bsr,??_LowISR+2
  9596  000026                     
  9597                           ;interrupts.c: 76:     if (PIR0bits.TMR0IF) {
  9598  000026  010E               	movlb	14	; () banked
  9599  000028  AB33               	btfss	51,5,b	;volatile
  9600  00002A  EF19  F000         	goto	i1u475_21
  9601  00002E  EF1B  F000         	goto	i1u475_20
  9602  000032                     i1u475_21:
  9603  000032  EF24  F000         	goto	i1l167
  9604  000036                     i1u475_20:
  9605  000036                     
  9606                           ; BSR set to: 14
  9607                           ;interrupts.c: 78:         timer++;
  9608  000036  0100               	movlb	0	; () banked
  9609  000038  4BDB               	infsnz	_timer& (0+255),f,b	;volatile
  9610  00003A  2BDC               	incf	(_timer+1)& (0+255),f,b	;volatile
  9611  00003C                     
  9612                           ; BSR set to: 0
  9613                           ;interrupts.c: 79:         TMR0H=0b00111100;
  9614  00003C  0E3C               	movlw	60
  9615  00003E  6ED4               	movwf	212,c	;volatile
  9616  000040                     
  9617                           ; BSR set to: 0
  9618                           ;interrupts.c: 80:         TMR0L=0b10101111;
  9619  000040  0EAF               	movlw	175
  9620  000042  6ED3               	movwf	211,c	;volatile
  9621  000044                     
  9622                           ; BSR set to: 0
  9623                           ;interrupts.c: 81:         PIR0bits.TMR0IF = 0;
  9624  000044  010E               	movlb	14	; () banked
  9625  000046  9B33               	bcf	51,5,b	;volatile
  9626  000048                     i1l167:
  9627                           
  9628                           ; BSR set to: 14
  9629  000048  C008  FFE0         	movff	??_LowISR+2,bsr
  9630  00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  9631  000050  C006  FFD8         	movff	??_LowISR,status
  9632  000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9633  000056  0010               	retfie	
  9634  000058                     __end_of_LowISR:
  9635                           	callstack 0
  9636                           
  9637 ;; *************** function _HighISR *****************
  9638 ;; Defined at:
  9639 ;;		line 62 in file "interrupts.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;		None
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  1    wreg      void 
  9646 ;; Registers used:
  9647 ;;		wreg, status,2, status,0, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9657 ;;Total ram usage:        0 bytes
  9658 ;; Hardware stack levels used: 1
  9659 ;; Hardware stack levels required when called: 5
  9660 ;; This function calls:
  9661 ;;		i2_interrupts_clear
  9662 ;; This function is called by:
  9663 ;;		Interrupt level 2
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           	psect	intcode
  9668  000008                     __pintcode:
  9669                           	callstack 0
  9670  000008                     _HighISR:
  9671                           	callstack 17
  9672                           
  9673                           ; BSR set to: 14
  9674                           ;incstack = 0
  9675  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9676  00000A  EF15  F01F         	goto	int_func
  9677                           
  9678                           	psect	intcode_body
  9679  003E2A                     __pintcode_body:
  9680                           	callstack 17
  9681  003E2A                     int_func:
  9682                           	callstack 17
  9683  003E2A                     
  9684                           ;interrupts.c: 63:     if (PIR0bits.INT1IF) {
  9685  003E2A  010E               	movlb	14	; () banked
  9686  003E2C  A333               	btfss	51,1,b	;volatile
  9687  003E2E  EF1B  F01F         	goto	i2u474_41
  9688  003E32  EF1D  F01F         	goto	i2u474_40
  9689  003E36                     i2u474_41:
  9690  003E36  EF24  F01F         	goto	i2l161
  9691  003E3A                     i2u474_40:
  9692  003E3A                     
  9693                           ; BSR set to: 14
  9694                           ;interrupts.c: 64:         colourcard_flag = 1;
  9695  003E3A  0E01               	movlw	1
  9696  003E3C  0100               	movlb	0	; () banked
  9697  003E3E  6FDF               	movwf	_colourcard_flag& (0+255),b	;volatile
  9698  003E40                     
  9699                           ; BSR set to: 0
  9700                           ;interrupts.c: 66:         interrupts_clear();
  9701  003E40  EC80  F01F         	call	i2_interrupts_clear	;wreg free
  9702  003E44                     
  9703                           ;interrupts.c: 67:         PIR0bits.INT1IF = 0;
  9704  003E44  010E               	movlb	14	; () banked
  9705  003E46  9333               	bcf	51,1,b	;volatile
  9706  003E48                     i2l161:
  9707                           
  9708                           ; BSR set to: 14
  9709  003E48  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9710  003E4A  0011               	retfie		f
  9711  003E4C                     __end_of_HighISR:
  9712                           	callstack 0
  9713                           
  9714 ;; *************** function i2_interrupts_clear *****************
  9715 ;; Defined at:
  9716 ;;		line 35 in file "interrupts.c"
  9717 ;; Parameters:    Size  Location     Type
  9718 ;;		None
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;		None
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, status,2, status,0, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9734 ;;Total ram usage:        0 bytes
  9735 ;; Hardware stack levels used: 1
  9736 ;; Hardware stack levels required when called: 4
  9737 ;; This function calls:
  9738 ;;		i2_I2C_2_Master_Start
  9739 ;;		i2_I2C_2_Master_Stop
  9740 ;;		i2_I2C_2_Master_Write
  9741 ;;		i2_interrupts_colourclick
  9742 ;; This function is called by:
  9743 ;;		_HighISR
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           	psect	text53
  9748  003F00                     __ptext53:
  9749                           	callstack 0
  9750  003F00                     i2_interrupts_clear:
  9751                           	callstack 17
  9752  003F00                     
  9753                           ;interrupts.c: 36:     I2C_2_Master_Start();
  9754  003F00  ECD6  F01F         	call	i2_I2C_2_Master_Start	;wreg free
  9755                           
  9756                           ;interrupts.c: 37:     I2C_2_Master_Write(0x52 | 0x00);
  9757  003F04  0E52               	movlw	82
  9758  003F06  ECB7  F01F         	call	i2_I2C_2_Master_Write
  9759                           
  9760                           ;interrupts.c: 38:     I2C_2_Master_Write(0b11100110);
  9761  003F0A  0EE6               	movlw	230
  9762  003F0C  ECB7  F01F         	call	i2_I2C_2_Master_Write
  9763                           
  9764                           ;interrupts.c: 39:     I2C_2_Master_Stop();
  9765  003F10  ECD1  F01F         	call	i2_I2C_2_Master_Stop	;wreg free
  9766                           
  9767                           ;interrupts.c: 41:     interrupts_colourclick();
  9768  003F14  EC25  F01E         	call	i2_interrupts_colourclick	;wreg free
  9769  003F18  0012               	return		;funcret
  9770  003F1A                     __end_ofi2_interrupts_clear:
  9771                           	callstack 0
  9772                           
  9773 ;; *************** function i2_interrupts_colourclick *****************
  9774 ;; Defined at:
  9775 ;;		line 48 in file "interrupts.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;		None
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;		None
  9780 ;; Return value:  Size  Location     Type
  9781 ;;                  1    wreg      void 
  9782 ;; Registers used:
  9783 ;;		wreg, status,2, status,0, cstack
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;Total ram usage:        1 bytes
  9794 ;; Hardware stack levels used: 1
  9795 ;; Hardware stack levels required when called: 3
  9796 ;; This function calls:
  9797 ;;		i2_colourclick_writetoaddr
  9798 ;; This function is called by:
  9799 ;;		i2_interrupts_clear
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           	psect	text54
  9804  003C4A                     __ptext54:
  9805                           	callstack 0
  9806  003C4A                     i2_interrupts_colourclick:
  9807                           	callstack 17
  9808  003C4A                     
  9809                           ;interrupts.c: 49:     colourclick_writetoaddr(0x00, 0b10011);
  9810  003C4A  0E13               	movlw	19
  9811  003C4C  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9812  003C4E  0E00               	movlw	0
  9813  003C50  EC56  F01F         	call	i2_colourclick_writetoaddr
  9814  003C54                     
  9815                           ;interrupts.c: 50:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9816  003C54  0E3F               	movlw	63
  9817  003C56  6E05               	movwf	??i2_interrupts_colourclick^0,c
  9818  003C58  0E55               	movlw	85
  9819  003C5A                     i2u695_47:
  9820  003C5A  2EE8               	decfsz	wreg,f,c
  9821  003C5C  D7FE               	bra	i2u695_47
  9822  003C5E  2E05               	decfsz	??i2_interrupts_colourclick^0,f,c
  9823  003C60  D7FC               	bra	i2u695_47
  9824  003C62  F000               	nop	
  9825  003C64                     
  9826                           ;interrupts.c: 51:     colourclick_writetoaddr(0x0C, 0b0100);
  9827  003C64  0E04               	movlw	4
  9828  003C66  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9829  003C68  0E0C               	movlw	12
  9830  003C6A  EC56  F01F         	call	i2_colourclick_writetoaddr
  9831  003C6E                     
  9832                           ;interrupts.c: 52:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  9833  003C6E  C055  F003         	movff	_interrupts_lowerbound,i2colourclick_writetoaddr@value	;volatile
  9834  003C72  0E04               	movlw	4
  9835  003C74  EC56  F01F         	call	i2_colourclick_writetoaddr
  9836  003C78                     
  9837                           ;interrupts.c: 53:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  9838  003C78  5056               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  9839  003C7A  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9840  003C7C  0E05               	movlw	5
  9841  003C7E  EC56  F01F         	call	i2_colourclick_writetoaddr
  9842  003C82                     
  9843                           ;interrupts.c: 54:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  9844  003C82  C053  F003         	movff	_interrupts_upperbound,i2colourclick_writetoaddr@value	;volatile
  9845  003C86  0E06               	movlw	6
  9846  003C88  EC56  F01F         	call	i2_colourclick_writetoaddr
  9847  003C8C                     
  9848                           ;interrupts.c: 55:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  9849  003C8C  5054               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  9850  003C8E  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
  9851  003C90  0E07               	movlw	7
  9852  003C92  EC56  F01F         	call	i2_colourclick_writetoaddr
  9853  003C96  0012               	return		;funcret
  9854  003C98                     __end_ofi2_interrupts_colourclick:
  9855                           	callstack 0
  9856                           
  9857 ;; *************** function i2_colourclick_writetoaddr *****************
  9858 ;; Defined at:
  9859 ;;		line 33 in file "colour_click.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;  address         1    wreg     unsigned char 
  9862 ;;  value           1    2[COMRAM] unsigned char 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;  address         1    3[COMRAM] unsigned char 
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      void 
  9867 ;; Registers used:
  9868 ;;		wreg, status,2, status,0, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9874 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9877 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9878 ;;Total ram usage:        2 bytes
  9879 ;; Hardware stack levels used: 1
  9880 ;; Hardware stack levels required when called: 2
  9881 ;; This function calls:
  9882 ;;		i2_I2C_2_Master_Start
  9883 ;;		i2_I2C_2_Master_Stop
  9884 ;;		i2_I2C_2_Master_Write
  9885 ;; This function is called by:
  9886 ;;		i2_interrupts_colourclick
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text55
  9891  003EAC                     __ptext55:
  9892                           	callstack 0
  9893  003EAC                     i2_colourclick_writetoaddr:
  9894                           	callstack 17
  9895                           
  9896                           ;incstack = 0
  9897                           ;i2colourclick_writetoaddr@address stored from wreg
  9898  003EAC  6E04               	movwf	i2colourclick_writetoaddr@address^0,c
  9899  003EAE                     
  9900                           ;colour_click.c: 34:     I2C_2_Master_Start();
  9901  003EAE  ECD6  F01F         	call	i2_I2C_2_Master_Start	;wreg free
  9902                           
  9903                           ;colour_click.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  9904  003EB2  0E52               	movlw	82
  9905  003EB4  ECB7  F01F         	call	i2_I2C_2_Master_Write
  9906                           
  9907                           ;colour_click.c: 36:     I2C_2_Master_Write(0x80 | address);
  9908  003EB8  5004               	movf	i2colourclick_writetoaddr@address^0,w,c
  9909  003EBA  0980               	iorlw	128
  9910  003EBC  ECB7  F01F         	call	i2_I2C_2_Master_Write
  9911                           
  9912                           ;colour_click.c: 37:     I2C_2_Master_Write(value);
  9913  003EC0  5003               	movf	i2colourclick_writetoaddr@value^0,w,c
  9914  003EC2  ECB7  F01F         	call	i2_I2C_2_Master_Write
  9915                           
  9916                           ;colour_click.c: 38:     I2C_2_Master_Stop();
  9917  003EC6  ECD1  F01F         	call	i2_I2C_2_Master_Stop	;wreg free
  9918  003ECA  0012               	return		;funcret
  9919  003ECC                     __end_ofi2_colourclick_writetoaddr:
  9920                           	callstack 0
  9921                           
  9922 ;; *************** function i2_I2C_2_Master_Write *****************
  9923 ;; Defined at:
  9924 ;;		line 64 in file "I2C.c"
  9925 ;; Parameters:    Size  Location     Type
  9926 ;;  data_byte       1    wreg     unsigned char 
  9927 ;; Auto vars:     Size  Location     Type
  9928 ;;  data_byte       1    1[COMRAM] unsigned char 
  9929 ;; Return value:  Size  Location     Type
  9930 ;;                  1    wreg      void 
  9931 ;; Registers used:
  9932 ;;		wreg, status,2, status,0, cstack
  9933 ;; Tracked objects:
  9934 ;;		On entry : 0/0
  9935 ;;		On exit  : 0/0
  9936 ;;		Unchanged: 0/0
  9937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9942 ;;Total ram usage:        1 bytes
  9943 ;; Hardware stack levels used: 1
  9944 ;; Hardware stack levels required when called: 1
  9945 ;; This function calls:
  9946 ;;		i2_I2C_2_Master_Idle
  9947 ;; This function is called by:
  9948 ;;		i2_interrupts_clear
  9949 ;;		i2_colourclick_writetoaddr
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           	psect	text56
  9954  003F6E                     __ptext56:
  9955                           	callstack 0
  9956  003F6E                     i2_I2C_2_Master_Write:
  9957                           	callstack 17
  9958                           
  9959                           ;incstack = 0
  9960                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9961  003F6E  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9962  003F70                     
  9963                           ;I2C.c: 65:   I2C_2_Master_Idle();
  9964  003F70  ECCB  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
  9965  003F74                     
  9966                           ;I2C.c: 66:   SSP2BUF = data_byte;
  9967  003F74  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9968  003F78  0012               	return		;funcret
  9969  003F7A                     __end_ofi2_I2C_2_Master_Write:
  9970                           	callstack 0
  9971                           
  9972 ;; *************** function i2_I2C_2_Master_Stop *****************
  9973 ;; Defined at:
  9974 ;;		line 55 in file "I2C.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;		None
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      void 
  9981 ;; Registers used:
  9982 ;;		wreg, status,2, status,0, cstack
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9992 ;;Total ram usage:        0 bytes
  9993 ;; Hardware stack levels used: 1
  9994 ;; Hardware stack levels required when called: 1
  9995 ;; This function calls:
  9996 ;;		i2_I2C_2_Master_Idle
  9997 ;; This function is called by:
  9998 ;;		i2_interrupts_clear
  9999 ;;		i2_colourclick_writetoaddr
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text57
 10004  003FA2                     __ptext57:
 10005                           	callstack 0
 10006  003FA2                     i2_I2C_2_Master_Stop:
 10007                           	callstack 17
 10008  003FA2                     
 10009                           ;I2C.c: 56:   I2C_2_Master_Idle();
 10010  003FA2  ECCB  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
 10011  003FA6                     
 10012                           ;I2C.c: 57:   SSP2CON2bits.PEN = 1;
 10013  003FA6  010E               	movlb	14	; () banked
 10014  003FA8  85DA               	bsf	218,2,b	;volatile
 10015  003FAA                     
 10016                           ; BSR set to: 14
 10017  003FAA  0012               	return		;funcret
 10018  003FAC                     __end_ofi2_I2C_2_Master_Stop:
 10019                           	callstack 0
 10020                           
 10021 ;; *************** function i2_I2C_2_Master_Start *****************
 10022 ;; Defined at:
 10023 ;;		line 37 in file "I2C.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;		None
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;		None
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      void 
 10030 ;; Registers used:
 10031 ;;		wreg, status,2, status,0, cstack
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10041 ;;Total ram usage:        0 bytes
 10042 ;; Hardware stack levels used: 1
 10043 ;; Hardware stack levels required when called: 1
 10044 ;; This function calls:
 10045 ;;		i2_I2C_2_Master_Idle
 10046 ;; This function is called by:
 10047 ;;		i2_interrupts_clear
 10048 ;;		i2_colourclick_writetoaddr
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           	psect	text58
 10053  003FAC                     __ptext58:
 10054                           	callstack 0
 10055  003FAC                     i2_I2C_2_Master_Start:
 10056                           	callstack 17
 10057  003FAC                     
 10058                           ;I2C.c: 38:   I2C_2_Master_Idle();
 10059  003FAC  ECCB  F01E         	call	i2_I2C_2_Master_Idle	;wreg free
 10060  003FB0                     
 10061                           ;I2C.c: 39:   SSP2CON2bits.SEN = 1;
 10062  003FB0  010E               	movlb	14	; () banked
 10063  003FB2  81DA               	bsf	218,0,b	;volatile
 10064  003FB4                     
 10065                           ; BSR set to: 14
 10066  003FB4  0012               	return		;funcret
 10067  003FB6                     __end_ofi2_I2C_2_Master_Start:
 10068                           	callstack 0
 10069                           
 10070 ;; *************** function i2_I2C_2_Master_Idle *****************
 10071 ;; Defined at:
 10072 ;;		line 29 in file "I2C.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;		None
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;		None
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1    wreg      void 
 10079 ;; Registers used:
 10080 ;;		wreg, status,2, status,0
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10090 ;;Total ram usage:        1 bytes
 10091 ;; Hardware stack levels used: 1
 10092 ;; This function calls:
 10093 ;;		Nothing
 10094 ;; This function is called by:
 10095 ;;		i2_I2C_2_Master_Start
 10096 ;;		i2_I2C_2_Master_Stop
 10097 ;;		i2_I2C_2_Master_Write
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text59
 10102  003D96                     __ptext59:
 10103                           	callstack 0
 10104  003D96                     i2_I2C_2_Master_Idle:
 10105                           	callstack 17
 10106  003D96                     i2l484:
 10107  003D96  010E               	movlb	14	; () banked
 10108  003D98  B5D8               	btfsc	216,2,b	;volatile
 10109  003D9A  EFD1  F01E         	goto	i2u391_41
 10110  003D9E  EFD3  F01E         	goto	i2u391_40
 10111  003DA2                     i2u391_41:
 10112  003DA2  EFCB  F01E         	goto	i2l484
 10113  003DA6                     i2u391_40:
 10114  003DA6                     
 10115                           ; BSR set to: 14
 10116  003DA6  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 10117  003DAA  0E1F               	movlw	31
 10118  003DAC  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 10119  003DAE  A4D8               	btfss	status,2,c
 10120  003DB0  EFDC  F01E         	goto	i2u392_41
 10121  003DB4  EFDE  F01E         	goto	i2u392_40
 10122  003DB8                     i2u392_41:
 10123  003DB8  EFCB  F01E         	goto	i2l484
 10124  003DBC                     i2u392_40:
 10125  003DBC                     
 10126                           ; BSR set to: 14
 10127  003DBC  0012               	return		;funcret
 10128  003DBE                     __end_ofi2_I2C_2_Master_Idle:
 10129                           	callstack 0
 10130                           
 10131                           	psect	rparam
 10132  0000                     
 10133                           	psect	temp
 10134  000057                     btemp:
 10135                           	callstack 0
 10136  000057                     	ds	1
 10137  0000                     int$flags	set	btemp
 10138  0000                     wtemp8	set	btemp+1
 10139  0000                     ttemp5	set	btemp+1
 10140  0000                     ttemp6	set	btemp+4
 10141  0000                     ttemp7	set	btemp+8
 10142                           
 10143                           	psect	idloc
 10144                           
 10145                           ;Config register IDLOC0 @ 0x200000
 10146                           ;	unspecified, using default values
 10147  200000                     	org	2097152
 10148  200000  0FFF               	dw	4095
 10149                           
 10150                           ;Config register IDLOC1 @ 0x200002
 10151                           ;	unspecified, using default values
 10152  200002                     	org	2097154
 10153  200002  0FFF               	dw	4095
 10154                           
 10155                           ;Config register IDLOC2 @ 0x200004
 10156                           ;	unspecified, using default values
 10157  200004                     	org	2097156
 10158  200004  0FFF               	dw	4095
 10159                           
 10160                           ;Config register IDLOC3 @ 0x200006
 10161                           ;	unspecified, using default values
 10162  200006                     	org	2097158
 10163  200006  0FFF               	dw	4095
 10164                           
 10165                           ;Config register IDLOC4 @ 0x200008
 10166                           ;	unspecified, using default values
 10167  200008                     	org	2097160
 10168  200008  0FFF               	dw	4095
 10169                           
 10170                           ;Config register IDLOC5 @ 0x20000A
 10171                           ;	unspecified, using default values
 10172  20000A                     	org	2097162
 10173  20000A  0FFF               	dw	4095
 10174                           
 10175                           ;Config register IDLOC6 @ 0x20000C
 10176                           ;	unspecified, using default values
 10177  20000C                     	org	2097164
 10178  20000C  0FFF               	dw	4095
 10179                           
 10180                           ;Config register IDLOC7 @ 0x20000E
 10181                           ;	unspecified, using default values
 10182  20000E                     	org	2097166
 10183  20000E  0FFF               	dw	4095
 10184                           
 10185                           	psect	config
 10186                           
 10187                           ;Config register CONFIG1L @ 0x300000
 10188                           ;	External Oscillator mode Selection bits
 10189                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10190                           ;	Power-up default value for COSC bits
 10191                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10192  300000                     	org	3145728
 10193  300000  AA                 	db	170
 10194                           
 10195                           ;Config register CONFIG1H @ 0x300001
 10196                           ;	unspecified, using default values
 10197                           ;	Clock Out Enable bit
 10198                           ;	CLKOUTEN = 0x1, unprogrammed default
 10199                           ;	Clock Switch Enable bit
 10200                           ;	CSWEN = 0x1, unprogrammed default
 10201                           ;	Fail-Safe Clock Monitor Enable bit
 10202                           ;	FCMEN = 0x1, unprogrammed default
 10203  300001                     	org	3145729
 10204  300001  FF                 	db	255
 10205                           
 10206                           ;Config register CONFIG2L @ 0x300002
 10207                           ;	unspecified, using default values
 10208                           ;	Master Clear Enable bit
 10209                           ;	MCLRE = 0x1, unprogrammed default
 10210                           ;	Power-up Timer Enable bit
 10211                           ;	PWRTE = 0x1, unprogrammed default
 10212                           ;	Low-power BOR enable bit
 10213                           ;	LPBOREN = 0x1, unprogrammed default
 10214                           ;	Brown-out Reset Enable bits
 10215                           ;	BOREN = 0x3, unprogrammed default
 10216  300002                     	org	3145730
 10217  300002  FF                 	db	255
 10218                           
 10219                           ;Config register CONFIG2H @ 0x300003
 10220                           ;	unspecified, using default values
 10221                           ;	Brown Out Reset Voltage selection bits
 10222                           ;	BORV = 0x3, unprogrammed default
 10223                           ;	ZCD Disable bit
 10224                           ;	ZCD = 0x1, unprogrammed default
 10225                           ;	PPSLOCK bit One-Way Set Enable bit
 10226                           ;	PPS1WAY = 0x1, unprogrammed default
 10227                           ;	Stack Full/Underflow Reset Enable bit
 10228                           ;	STVREN = 0x1, unprogrammed default
 10229                           ;	Debugger Enable bit
 10230                           ;	DEBUG = 0x1, unprogrammed default
 10231                           ;	Extended Instruction Set Enable bit
 10232                           ;	XINST = 0x1, unprogrammed default
 10233  300003                     	org	3145731
 10234  300003  FF                 	db	255
 10235                           
 10236                           ;Config register CONFIG3L @ 0x300004
 10237                           ;	WDT Period Select bits
 10238                           ;	WDTCPS = 0x1F, unprogrammed default
 10239                           ;	WDT operating mode
 10240                           ;	WDTE = OFF, WDT Disabled
 10241  300004                     	org	3145732
 10242  300004  9F                 	db	159
 10243                           
 10244                           ;Config register CONFIG3H @ 0x300005
 10245                           ;	unspecified, using default values
 10246                           ;	WDT Window Select bits
 10247                           ;	WDTCWS = 0x7, unprogrammed default
 10248                           ;	WDT input clock selector
 10249                           ;	WDTCCS = 0x7, unprogrammed default
 10250  300005                     	org	3145733
 10251  300005  FF                 	db	255
 10252                           
 10253                           ;Config register CONFIG4L @ 0x300006
 10254                           ;	unspecified, using default values
 10255                           ;	Write Protection Block 0
 10256                           ;	WRT0 = 0x1, unprogrammed default
 10257                           ;	Write Protection Block 1
 10258                           ;	WRT1 = 0x1, unprogrammed default
 10259                           ;	Write Protection Block 2
 10260                           ;	WRT2 = 0x1, unprogrammed default
 10261                           ;	Write Protection Block 3
 10262                           ;	WRT3 = 0x1, unprogrammed default
 10263                           ;	Write Protection Block 3
 10264                           ;	WRT4 = 0x1, unprogrammed default
 10265                           ;	Write Protection Block 3
 10266                           ;	WRT5 = 0x1, unprogrammed default
 10267                           ;	Write Protection Block 3
 10268                           ;	WRT6 = 0x1, unprogrammed default
 10269                           ;	Write Protection Block 3
 10270                           ;	WRT7 = 0x1, unprogrammed default
 10271  300006                     	org	3145734
 10272  300006  FF                 	db	255
 10273                           
 10274                           ;Config register CONFIG4H @ 0x300007
 10275                           ;	unspecified, using default values
 10276                           ;	Configuration Register Write Protection bit
 10277                           ;	WRTC = 0x1, unprogrammed default
 10278                           ;	Boot Block Write Protection bit
 10279                           ;	WRTB = 0x1, unprogrammed default
 10280                           ;	Data EEPROM Write Protection bit
 10281                           ;	WRTD = 0x1, unprogrammed default
 10282                           ;	Scanner Enable bit
 10283                           ;	SCANE = 0x1, unprogrammed default
 10284                           ;	Low Voltage Programming Enable bit
 10285                           ;	LVP = 0x1, unprogrammed default
 10286  300007                     	org	3145735
 10287  300007  FF                 	db	255
 10288                           
 10289                           ;Config register CONFIG5L @ 0x300008
 10290                           ;	unspecified, using default values
 10291                           ;	UserNVM Program Memory Code Protection bit
 10292                           ;	CP = 0x1, unprogrammed default
 10293                           ;	DataNVM Memory Code Protection bit
 10294                           ;	CPD = 0x1, unprogrammed default
 10295  300008                     	org	3145736
 10296  300008  FF                 	db	255
 10297                           
 10298                           ;Config register CONFIG5H @ 0x300009
 10299                           ;	unspecified, using default values
 10300  300009                     	org	3145737
 10301  300009  FF                 	db	255
 10302                           
 10303                           ;Config register CONFIG6L @ 0x30000A
 10304                           ;	unspecified, using default values
 10305                           ;	Table Read Protection Block 0
 10306                           ;	EBTR0 = 0x1, unprogrammed default
 10307                           ;	Table Read Protection Block 1
 10308                           ;	EBTR1 = 0x1, unprogrammed default
 10309                           ;	Table Read Protection Block 2
 10310                           ;	EBTR2 = 0x1, unprogrammed default
 10311                           ;	Table Read Protection Block 3
 10312                           ;	EBTR3 = 0x1, unprogrammed default
 10313                           ;	Table Read Protection Block 4
 10314                           ;	EBTR4 = 0x1, unprogrammed default
 10315                           ;	Table Read Protection Block 5
 10316                           ;	EBTR5 = 0x1, unprogrammed default
 10317                           ;	Table Read Protection Block 6
 10318                           ;	EBTR6 = 0x1, unprogrammed default
 10319                           ;	Table Read Protection Block 7
 10320                           ;	EBTR7 = 0x1, unprogrammed default
 10321  30000A                     	org	3145738
 10322  30000A  FF                 	db	255
 10323                           
 10324                           ;Config register CONFIG6H @ 0x30000B
 10325                           ;	unspecified, using default values
 10326                           ;	Boot Block Table Read Protection bit
 10327                           ;	EBTRB = 0x1, unprogrammed default
 10328  30000B                     	org	3145739
 10329  30000B  FF                 	db	255
 10330                           tosu	equ	0xFFF
 10331                           tosh	equ	0xFFE
 10332                           tosl	equ	0xFFD
 10333                           stkptr	equ	0xFFC
 10334                           pclatu	equ	0xFFB
 10335                           pclath	equ	0xFFA
 10336                           pcl	equ	0xFF9
 10337                           tblptru	equ	0xFF8
 10338                           tblptrh	equ	0xFF7
 10339                           tblptrl	equ	0xFF6
 10340                           tablat	equ	0xFF5
 10341                           prodh	equ	0xFF4
 10342                           prodl	equ	0xFF3
 10343                           indf0	equ	0xFEF
 10344                           postinc0	equ	0xFEE
 10345                           postdec0	equ	0xFED
 10346                           preinc0	equ	0xFEC
 10347                           plusw0	equ	0xFEB
 10348                           fsr0h	equ	0xFEA
 10349                           fsr0l	equ	0xFE9
 10350                           wreg	equ	0xFE8
 10351                           indf1	equ	0xFE7
 10352                           postinc1	equ	0xFE6
 10353                           postdec1	equ	0xFE5
 10354                           preinc1	equ	0xFE4
 10355                           plusw1	equ	0xFE3
 10356                           fsr1h	equ	0xFE2
 10357                           fsr1l	equ	0xFE1
 10358                           bsr	equ	0xFE0
 10359                           indf2	equ	0xFDF
 10360                           postinc2	equ	0xFDE
 10361                           postdec2	equ	0xFDD
 10362                           preinc2	equ	0xFDC
 10363                           plusw2	equ	0xFDB
 10364                           fsr2h	equ	0xFDA
 10365                           fsr2l	equ	0xFD9
 10366                           status	equ	0xFD8

Data Sizes:
    Strings     162
    Constant    0
    Data        0
    BSS         91
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     83     130
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S2965_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC2@buf(BANK0[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK0[100]), colourcards_testingRGBC2@buf(BANK0[100]), 

    returnhome@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    returnhome@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverseinstructions@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseinstructions@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    instructions@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    instructions@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnright@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnright@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnright@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnleft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnleft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    clearance@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    clearance@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@initial(COMRAM[8]), colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC2@rel(COMRAM[12]), colourcards_readRGBC@rel(BANK0[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC2@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_readRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S29$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S29$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _reverseinstructions->_instructions
    _interrupts_clear->_interrupts_colourclick
    _interrupts_colourclick->_colourclick_writetoaddr
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _colourclick_calibration->_colourclick_readRGBC
    _colourcards_readRGBC->_instructions
    _instructions->_turnleft
    _instructions->_turnright
    _turnright->___fldiv
    _turnleft->___fldiv
    ___flmul->___xxtofl
    ___flge->___xxtofl
    ___fladd->___flmul
    _clearance->_stop
    _stop->_DCmotors_setPWM
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    ___fldiv->___fladd
    _checkbatterylevel->_colourclickLEDs_RGB

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_interrupts_colourclick
    i2_interrupts_colourclick->i2_colourclick_writetoaddr
    i2_colourclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_colourcards_readRGBC
    _returnhome->_reverseinstructions
    _reverseinstructions->_instructions
    _colourcards_readRGBC->_instructions
    _instructions->_turnleft
    _instructions->_turnright
    _turnright->___fldiv
    _turnleft->___fldiv
    _colourcards_normaliseRGBC->___fldiv

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  232699
                                             54 BANK0     29    29      0
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                  _colourclickLEDs_C
            _colourclick_calibration
                   _colourclick_init
               _colourclick_readRGBC
                            _forward
                    _interrupts_init
                         _returnhome
                            _reverse
                               _stop
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _returnhome                                           9     5      4  123835
                                             40 BANK0      8     4      4
                            _reverse
                _reverseinstructions
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseinstructions                                  6     2      4  113000
                                             34 BANK0      6     2      4
                            _forward
                       _instructions
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     772
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
             _interrupts_colourclick
 ---------------------------------------------------------------------------------
 (3) _interrupts_colourclick                               1     1      0     750
                                             12 COMRAM     1     1      0
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     816
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colourclick_writetoaddr                              2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourclick_calibration                             10    10      0    1290
                                             21 COMRAM    10    10      0
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                20    14      6   90385
                                             34 BANK0     20    14      6
                             ___flge
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                       _instructions
                               _stop
 ---------------------------------------------------------------------------------
 (3) _instructions                                         7     2      5   63932
                                             76 COMRAM     2     2      0
                                             29 BANK0      5     0      5
                          _clearance
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (3) _turnright                                           17    11      6   19298
                                             75 COMRAM     1     1      0
                                             13 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _turnleft                                            17    11      6   19028
                                             75 COMRAM     1     1      0
                                             13 BANK0     16    10      6
                    _DCmotors_setPWM
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2200
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    5958
                                             22 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2540
                                             47 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _clearance                                            6     2      4   10666
                                             39 COMRAM     6     2      4
                            _reverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    7091
                                             33 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _reverse                                              5     1      4    3183
                                             33 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _forward                                              5     1      4    2727
                                             33 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    1943
                                             22 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                             14 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC2                                5     2      3    2258
                                             21 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourclick_readRGBC                                 2     0      2    1148
                                             19 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (2) _colourclick_readR                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readG                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readC                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readB                                    7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourcards_normaliseRGBC                           12     8      4    5096
                                             13 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1234
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2007
                                             63 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    2     2      0      46
                                             10 COMRAM     2     2      0
                         _ADC_getval
                _colourclickLEDs_RGB
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_RGB                                  2     2      0       0
                                              8 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              8 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     244
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (10) i2_interrupts_clear                                  0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
           i2_interrupts_colourclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_colourclick                            1     1      0     222
                                              4 COMRAM     1     1      0
          i2_colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (12) i2_colourclick_writetoaddr                           2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
     _colourclickLEDs_RGB
   _colourcards_readRGBC
     ___flge
       ___xxtofl (ARG)
     _colourcards_normaliseRGBC
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _instructions
       _clearance
         _reverse
           _DCmotors_setPWM
         _stop
           _DCmotors_setPWM
       _reverse
       _stop
       _turnleft
         _DCmotors_setPWM
         ___fladd
         ___fldiv
         ___flge
         ___flmul
         ___xxtofl
       _turnright
         _DCmotors_setPWM
         ___fladd
         ___fldiv
         ___flge
         ___flmul
         ___xxtofl
     _stop
   _colourclickLEDs_C
   _colourclick_calibration
     _colourclickLEDs_C
     _colourclick_readRGBC
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colourclick_readRGBC
   _forward
   _interrupts_init
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _interrupts_colourclick
         _colourclick_writetoaddr
   _returnhome
     _reverse
     _reverseinstructions
       _forward
       _instructions
       _stop
       _turnleft
       _turnright
     _stop
   _reverse
   _stop
   _timer0_init

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_interrupts_colourclick
       i2_colourclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      82       5       81.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     100       8        0.0%
DATA                 0      0     100       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 13:09:47 2021

      colourcards_normaliseRGBC@rel 006F         colourclick_readRGBC2@tmpval 0016  
                      ___fldiv@aexp 006C                        ___fldiv@bexp 006B  
                      ___fldiv@sign 0064                                  l90 28DA  
                                l83 270E                                  l87 272A  
             __end_of_DCmotors_init 3BFC                        ___awdiv@sign 0014  
                                bsr 000FE0                 ___wmul@multiplicand 000B  
                               l304 31F0                                 l152 3EE4  
                               l410 3F30                                 l155 3C48  
                               l404 3EFE                                 l149 3E06  
                               l502 3CD8                                 l350 3E8A  
                               l407 3F1C                                 l255 1460  
                               l409 3F2A                                 l353 3ABA  
                               l442 3FA0                                 l362 3B5A  
                               l258 1472                                 l451 3E28  
                               l347 3D10                                 l620 3BFA  
                               l356 3B0A                                 l700 23CE  
                               l380 36E2                                 l365 3A6A  
                               l373 3346                                 l381 36F2  
                               l445 3F54                                 l454 3F46  
                               l382 3702                                 l710 2668  
                               l439 3F6C                                 l527 3EAA  
                               l359 3BAA                                 l383 376A  
                               l448 3808                                 l376 36C6  
                               l481 3D6C                                 l634 3540  
                               l490 3F8C                                 l642 3924  
                               l650 3896                                 l722 36C4  
                               l627 2EC0                                 l484 3D6E  
                               l716 2668                                 l493 3F96  
                               l661 39AE                                 l653 3A0C  
                               l487 3D94                                 l671 2CEA  
                               l496 3F82                                 l672 2CEC  
                               l682 2AE4                                 l834 3E6A  
                               l499 3F60                                 l683 2AE6  
                               l837 3DE2                                 l694 23CE  
                               _dur 0100                        returnhome@mL 0088  
                      returnhome@mR 008A                                 prod 000FF3  
                               wreg 000FE8                        ___flmul@aexp 0028  
                      ___flmul@bexp 0029                        ___flmul@sign 0023  
                      ___flmul@temp 002E               ?_colourclick_readRGBC 0014  
                      ___flmul@prod 002A                 __size_of_ADC_getval 0018  
                              l1102 3404                                l1107 344A  
                              l1068 3604                                l1421 1F58  
                              l1430 1F9E                                l1432 2016  
                              l1424 1F1C                                l1433 2004  
                              l1506 300C                                l1419 20F8  
                              l1451 19F8                                l1460 1C66  
                              l3301 35FC                                l1365 1662  
                              l1461 1C54                                l1382 177C  
                              l1374 1932                                l1366 1650  
                              l3311 2D0A                                l1391 184C  
                              l1367 1616                                l1455 1D5C  
                              l1392 183A                                l3305 3D6E  
                              l3321 2E58                                l3313 2D6C  
                              l3401 14CA                                l5001 2342  
                              l4201 3D54                                l1458 1BEE  
                              l5011 3086                                l4043 3E0A  
                              l3307 3D7E                                l3315 2DB2  
                              l4051 38D4                                l3331 395C  
                              l3323 3926                                l3411 14FA  
                              l3403 14DA                                l5003 2354  
                              l4203 3D56                                l4211 3F4E  
                              l4131 3ECC                                l1492 2F18  
                              l1468 1D1E                                l4301 3EF8  
                              l5021 318A                                l5013 309C  
                              l4045 3A0E                                l3261 3542  
                              l3317 2DD2                                l3309 2CEE  
                              l4053 38E0                                l3341 380A  
                              l3325 392C                                l3333 3964  
                              l3501 16D0                                l3421 153A  
                              l3413 1508                                l3405 14E0  
                              l5005 2388                                l5101 1194  
                              l4205 3D58                                l4213 3F50  
                              l4061 3BFC                                l4303 3EFA  
                              l4223 3F62                                l4231 3786  
                              l1495 3074                                l5015 30B0  
                              l4151 3210                                l3271 356E  
                              l3263 3546                                l3255 3DBE  
                              l3319 2DEE                                l4055 38EC  
                              l4047 3898                                l3343 382E  
                              l3351 3866                                l3335 397C  
                              l3327 3944                                l3511 1716  
                              l3503 16DE                                l3431 1574  
                              l3423 153C                                l3415 150A  
                              l3407 14F2                                l5007 239A  
                              l5111 127A                                l5103 11C6  
                              l4207 3D5A                                l4215 3F52  
                              l4311 3CE8                                l4071 3C34  
                              l4063 3C06                                l5031 2450  
                              l5023 23D0                                l4305 3EFC  
                              l4241 3F32                                l4225 3F98  
                              l4321 3BC2                                l4217 3F1A  
                              l4233 37A0                                l3601 1DAE  
                              l5017 30C4                                l5009 3076  
                              l3361 3F5C                                l4161 325E  
                              l4153 3220                                l3281 359C  
                              l3273 3576                                l3265 3554  
                              l3257 3DDA                                l4049 38BC  
                              l4057 38F4                                l3353 387E  
                              l3345 3846                                l3337 3994  
                              l3329 3950                                l3521 1792  
                              l3513 174A                                l3505 16E0  
                              l3441 1588                                l3433 1578  
                              l3417 151A                                l3425 1544  
                              l3409 14F4                                l5121 1360  
                              l5113 12AC                                l5105 11F8  
                              l4401 375E                                l4209 3F48  
                              l4313 3CF8                                l4073 3C3E  
                              l4065 3C16                                l5041 24E2  
                              l5033 2474                                l5025 23F4  
                              l5201 271C                                l4331 3BCE  
                              l4323 3BC6                                l4219 3F2E  
                              l4235 37BA                                l4227 376C  
                              l3611 1DE0                                l3603 1DB6  
                              l1499 2FB0                                l5019 3124  
                              l3371 3C9A                                l3355 3F84  
                              l3363 3F7A                                l4171 32A8  
                              l4163 3260                                l4155 3222  
                              l4147 31F2                                l3291 35D6  
                              l3283 35A4                                l3275 357A  
                              l3267 355C                                l4059 390C  
                              l3347 3852                                l3339 39AC  
                              l3531 17CE                                l3523 17A2  
                              l3515 174C                                l3507 16EA  
                              l3451 159C                                l3443 158C  
                              l3435 157C                                l3427 1554  
                              l3419 152A                                l5131 13F4  
                              l5123 1392                                l5115 12DE  
                              l5107 122A                                l4315 3D02  
                              l4307 3CDA                                l4067 3C20  
                              l4411 3DF6                                l4403 3DE4  
                              l5051 25B2                                l5043 2532  
                              l5035 2490                                l5027 2410  
                              l5211 2754                                l5203 272C  
                              l4341 3BE0                                l4333 3BD0  
                              l4325 3BC8                                l4237 37D4  
                              l4229 376E                                l3701 206E  
                              l3621 1E14                                l3613 1DE2  
                              l3605 1DC6                                l3381 3CD6  
                              l3373 3C9E                                l3357 3F88  
                              l3365 3F7E                                l4181 32E4  
                              l4173 32B4                                l4157 323A  
                              l4165 327C                                l4149 31F8  
                              l3293 35D8                                l3285 35B2  
                              l3277 3582                                l3269 3560  
                              l3349 385E                                l3541 17FA  
                              l3533 17D0                                l3517 175C  
                              l3509 16F0                                l3461 15B0  
                              l3453 15A0                                l3445 1590  
                              l3437 1580                                l3429 1566  
                              l5141 1458                                l5133 1400  
                              l5125 13A0                                l5117 12FC  
                              l5109 1248                                l4317 3D0C  
                              l4309 3CDE                                l4069 3C2A  
                              l4421 3E02                                l4413 3DF8  
                              l4405 3DEA                                l5061 264C  
                              l5053 25D0                                l5045 2556  
                              l5037 24B4                                l5029 2434  
                              l5221 27A6                                l5213 276A  
                              l5205 2732                                l4343 3BE2  
                              l4335 3BD2                                l4327 3BCA  
                              l4319 3BAE                                l4351 3E8C  
                              l4239 37EE                                l3711 20D8  
                              l3703 2088                                l3631 1E5A  
                              l3615 1DF2                                l3623 1E1C  
                              l3607 1DCC                                l3375 3CA6  
                              l3367 3F8E                                l3359 3F58  
                              l4183 32E6                                l4175 32CC  
                              l4167 328E                                l4159 3246  
                              l3295 35DE                                l3287 35B8  
                              l3279 3594                                l3551 1832  
                              l3535 17DE                                l3527 17B6  
                              l3543 17FC                                l3519 176C  
                              l3471 160E                                l3455 15A4  
                              l3447 1594                                l3439 1584  
                              l3463 15B4                                l3391 1490  
                              l5143 1462                                l5135 1424  
                              l5127 13BA                                l5119 132E  
                              l5071 0F2E                                l5063 0EA4  
                              l4423 3E04                                l4415 3DFA  
                              l4407 3DF0                                l5047 256A  
                              l5055 25E8                                l5039 24CE  
                              l5151 360C                                l4431 3E68  
                              l5231 2800                                l5223 27BA  
                              l5215 277A                                l5207 274C  
                              l4345 3BEE                                l4337 3BD4  
                              l4329 3BCC                                l4361 3EA6  
                              l4353 3E96                                l3713 20E6  
                              l3705 209E                                l3641 1E82  
                              l3633 1E5E                                l3625 1E2C  
                              l3617 1E02                                l3609 1DD2  
                              l3377 3CAE                                l3369 3F92  
                              l4185 32FE                                l4169 3290  
                              l4193 3328                                l3289 35CE  
                              l3297 35E4                                l3561 18B0  
                              l3537 17E6                                l3529 17C0  
                              l3545 180A                                l3481 1644  
                              l3473 1624                                l3465 15B8  
                              l3457 15A8                                l3449 1598  
                              l3393 14A0                                l3385 1474  
                              l3801 1B72                                l5145 146A  
                              l5137 1446                                l5129 13CE  
                              l5073 0F60                                l5081 0FF4  
                              l5065 0EA8                                l4417 3DFE  
                              l4409 3DF4                                l5057 260C  
                              l5049 2584                                l5161 366A  
                              l5153 3616                                l4425 3E4C  
                              l5241 2862                                l5233 2802  
                              l5225 27BC                                l5217 2786  
                              l5209 2750                                l4347 3BF2  
                              l4339 3BD6                                l4363 3EA8  
                              l4355 3E98                                l4371 3528  
                              l3715 20EC                                l3707 20B8  
                              l3651 1ED0                                l3627 1E42  
                              l3619 1E12                                l3379 3CD4  
                              l4195 332E                                l4187 330A  
                              l4179 32D2                                l3299 35F4  
                              l3571 18F6                                l3555 185C  
                              l3563 18B2                                l3547 180E  
                              l3539 17EA                                l3491 1694  
                              l3483 164E                                l3475 1630  
                              l3467 15E2                                l3459 15AC  
                              l3395 14B0                                l3387 1480  
                              l3811 1BEC                                l3803 1BA8  
                              l3731 1950                                l5139 1456  
                              l5091 10E2                                l5083 1026  
                              l5147 146E                                l5075 0F86  
                              l5067 0ECA                                l4419 3E00  
                              l5059 2628                                l5171 3698  
                              l5163 366E                                l5155 362A  
                              l4427 3E54                                l5251 28A8  
                              l5243 2870                                l5235 281E  
                              l5227 27D2                                l5219 2796  
                              l4349 3BF6                                l4357 3E9A  
                              l4373 352C                                l4365 344C  
                              l3717 20EE                                l3709 20D4  
                              l3661 1F1A                                l3653 1EE0  
                              l3645 1E96                                l3629 1E52  
                              l3637 1E72                                l3901 2FE2  
                              l4189 3322                                l3581 1920  
                              l3573 1904                                l3565 18C2  
                              l3557 1868                                l3549 181C  
                              l3493 16A4                                l3485 1670  
                              l3477 1634                                l3469 15FE  
                              l3397 14C0                                l3389 148E  
                              l3821 1C4C                                l3813 1BFE  
                              l3805 1BB6                                l3741 1996  
                              l3733 1960                                l3725 1934  
                              l5093 1100                                l5085 1058  
                              l5077 0FB8                                l5069 0EFC  
                              l4381 3700                                l4197 3D44  
                              l5173 36B0                                l5165 3670  
                              l5157 3642                                l5149 3606  
                              l4429 3E5E                                l5253 28B2  
                              l5245 287C                                l5237 283C  
                              l5229 27EC                                l5181 26C8  
                              l4359 3EA4                                l4367 3452  
                              l3671 1F68                                l3663 1F26  
                              l3655 1EE8                                l3647 1EB0  
                              l3639 1E82                                l3591 1D7A  
                              l3911 3020                                l3903 2FEE  
                              l3583 1922                                l3575 190A  
                              l3567 18D2                                l3559 1876  
                              l3495 16B2                                l3487 1680  
                              l3479 1642                                l3399 14C2  
                              l3831 1CBA                                l3815 1C0C  
                              l3807 1BD4                                l3751 19C2  
                              l3743 199C                                l3735 1970  
                              l3727 1940                                l5095 1126  
                              l5087 108A                                l5079 0FD6  
                              l4391 3746                                l4383 3704  
                              l4375 36C6                                l4199 3D4E  
                              l5159 3656                                l5167 3672  
                              l5255 28C2                                l5239 2856  
                              l5247 2884                                l5191 26F8  
                              l5183 26D8                                l5175 266A  
                              l4297 3EE6                                l4369 3462  
                              l3673 1F7E                                l3681 1FAE  
                              l3665 1F44                                l3657 1EF8  
                              l3649 1EC0                                l3593 1D7C  
                              l3913 3044                                l3905 2FFC  
                              l3577 190C                                l3569 18F2  
                              l3497 16C0                                l3841 1D22  
                              l3825 1C76                                l3833 1CBE  
                              l3817 1C10                                l3809 1BDE  
                              l3761 1A18                                l3753 19D2  
                              l3745 19A2                                l3737 1980  
                              l3729 194E                                l5097 1158  
                              l5089 10B0                                l4393 3748  
                              l4385 370A                                l4377 36D4  
                              l5169 3684                                l5249 2894  
                              l5193 26FC                                l5185 26E0  
                              l5177 26B4                                l4299 3EF0  
                              l3683 1FBC                                l3675 1F84  
                              l3667 1F46                                l3659 1F0C  
                              l3595 1D8C                                l3587 1D5E  
                              l3915 3054                                l3907 301A  
                              l3931 3AB2                                l3579 1912  
                              l3499 16CC                                l3851 1D4C  
                              l3843 1D32                                l3835 1CD8  
                              l3827 1C82                                l3819 1C1E  
                              l3771 1A58                                l3755 19E2  
                              l3747 19B0                                l3739 1986  
                              l5099 1176                                l4395 374E  
                              l4387 3722                                l4379 36F0  
                              l5195 2702                                l5187 26EC  
                              l5179 26BC                                l3693 2026  
                              l3685 1FC0                                l3677 1F8E  
                              l3669 1F56                                l3597 1D9C  
                              l3589 1D6C                                l3917 3062  
                              l3909 301C                                l3941 3B5C  
                              l3861 33B4                                l3845 1D40  
                              l3837 1CEC                                l3829 1C90  
                              l3781 1AA2                                l3773 1A64  
                              l3765 1A2C                                l3757 19E8  
                              l3749 19B2                                l4901 2C26  
                              l4397 3750                                l4389 372E  
                              l5197 2706                                l5189 26F4  
                              l3695 2032                                l3687 1FCE  
                              l3679 1F9C                                l3599 1DAC  
                              l3919 3064                                l3943 3BA2  
                              l3935 3ABC                                l3871 3442  
                              l3863 33C4                                l3855 3348  
                              l3847 1D42                                l3839 1D06  
                              l3791 1AF4                                l3783 1AAE  
                              l3775 1A7C                                l3767 1A38  
                              l3759 1A08                                l4911 2C6A  
                              l4903 2C32                                l4399 3752  
                              l3927 3E6E                                l5199 270A  
                              l3697 2040                                l3689 1FFC  
                              l3881 2EE2                                l3937 3B02  
                              l3929 3A6C                                l3961 3A0A  
                              l3953 39B0                                l3873 3448  
                              l3865 33D2                                l3857 3376  
                              l3849 1D48                                l3793 1B04  
                              l3785 1ABE                                l3777 1A88  
                              l3769 1A42                                l4913 2C82  
                              l4905 2C3E                                l4921 28E2  
                              l3699 206A                                l3891 2F5A  
                              l3883 2F28                                l3947 3B0C  
                              l3955 39B2                                l3867 33E4  
                              l3859 3386                                l3795 1B20  
                              l3787 1ACA                                l3779 1A94  
                              l4915 2C90                                l4907 2C4A  
                              l4931 29FC                                l4923 2904  
                              l3893 2F66                                l3885 2F3E  
                              l3877 2EC4                                l3949 3B52  
                              l3957 39C6                                l3869 33F2  
                              l3797 1B2C                                l3789 1ADA  
                              l4917 2CA0                                l4909 2C52  
                              l4941 2A44                                l4933 2A08  
                              l4925 2906                                l3895 2F98  
                              l3879 2ED4                                l3959 39DE  
                              l3799 1B48                                l4919 2CA6  
                              l4951 2A9A                                l4935 2A20  
                              l4943 2A4C                                l4927 2970  
                              l3897 2F9A                                l3889 2F52  
                              l4953 2AA0                                l4945 2A64  
                              l4937 2A2C                                l4929 29E4  
                              l4961 2126                                l3899 2FA6  
                              l4891 2B0C                                l4947 2A7C  
                              l4939 2A38                                l4971 219C  
                              l4963 2144                                l4955 20FA  
                              l4893 2B76                                l4949 2A8A  
                              l4981 223C                                l4973 21D0  
                              l4957 210C                                l4965 2146  
                              l4895 2BEA                                l4887 2AE8  
                              l4991 22C8                                l4983 2254  
                              l4975 21E2                                l4967 2156  
                              l4959 2120                                l4897 2C02  
                              l4889 2B0A                                l4993 22DC  
                              l4985 2280                                l4977 2216  
                              l4969 218A                                l4899 2C0E  
                              l4995 22F4                                l4987 229E  
                              l4979 2228                                l4997 2320  
                              l4989 22B6                                STR_1 0E01  
                              STR_2 0E9F                                STR_4 0E80  
                              STR_6 0E94                                u3000 151A  
                              u3001 1516                                u3010 152A  
                              u3011 1526                                u3100 1670  
                              u3020 1566                                u3101 166C  
                              u3021 1562                                u3110 1680  
                              u3030 1574                                u3111 167C  
                              u3031 1570                                u3200 17DE  
                              u3120 16B2                                u3040 15E2  
                      _BAUD4CONbits 000EE9                                u3201 17DA  
                              u3121 16AE                                u3041 15DE  
                              _LATE 000F7D                                u3210 17FA  
                              u3130 16C0                                u3050 15FA  
                              u3211 17F6                                u3131 16BC  
                              u3051 15F4                                _LATG 000F7F  
                              u3300 18D2                                u3220 180A  
                              u3140 16DE                                u3060 15FC  
                              u3301 18CE                                u3221 1806  
                              u3141 16DA                                u3310 18F2  
                              u3230 181C                                u3150 1716  
                              u3070 1624                                u3311 18EE  
                              u3231 1818                                u3151 1712  
                              u3071 1620                                u3400 1E42  
                              u3320 1904                                u3240 1832  
                              u3160 175C                                u3080 1642  
                              u3401 1E3E                                u3321 1900  
                              u3241 182E                                u3161 1758  
                              u3081 163E                                u3410 1E82  
                              u3330 1920                                u3250 1848  
                              u3170 1792                                u3090 1662  
                              _T2PR 000FBC                                u3411 1E7E  
                              u4035 3E12                                u3331 191C  
                              u3251 1844                                u3171 178E  
                              u3091 165E                                u4300 3496  
                              u3500 1FFC                                u3420 1EF8  
                              u3340 1D7A                                u4036 3E14  
                              u4060 390C                                u3260 185C  
                              u3180 17A2                                u4301 348E  
                              u3501 1FF8                                u3421 1EF4  
                              u3341 1D76                                u4045 3E1C  
                              u4061 3908                                u3261 1858  
                              u3181 179E                                u3510 2012  
                              u3430 1F1A                                u3350 1D8C  
                              u4046 3E1E                                u4070 3924  
                              u3270 1876                                u3190 17CE  
                              u3511 200E                                u3431 1F16  
                              u3351 1D88                                u4055 3E26  
                              u4071 3920                                u3271 1872  
                              u3191 17CA                                u4320 34BA  
                              u3520 2026                                u3440 1F44  
                              u3360 1D9C                                u4056 3E28  
                              u4160 3220                                u2800 35B2  
                              u3280 18B0                                u3600 19B0  
                              u4400 36D4                                u4321 34B2  
                              u3521 2022                                u3441 1F40  
                              u3361 1D98                                u4161 321C  
                              u2801 35AE                                u3281 18AC  
                              u3601 19AC                                u4401 36D0  
                              u3530 2040                                u3450 1F68  
                              u3370 1DE0                                u4170 328E  
                              u2810 35CE                                u3290 18C2  
                              u3610 19C2                                u4410 36E2  
                              u3531 203C                                u3451 1F64  
                              u3371 1DDC                                u4171 328A  
                              u2811 35CA                                u3291 18BE  
                              u3611 19BE                                u4411 36DE  
                              u4340 34DE                                u3540 2088  
                              u3460 1F7E                                u3380 1DF2  
                              u4180 32E4                                u2820 35F4  
                              u2900 3994                                u3700 1C62  
                              u3620 19D2                                u4420 36F0  
                              u4341 34D6                                u3541 2084  
                              u3461 1F7A                                u3381 1DEE  
                              u4181 32E0                                u2821 35F0  
                              u2901 3990                                u3701 1C5E  
                              u3621 19CE                                u4421 36EC  
                              u4190 3F2A                                u4318 3498  
                              u4270 3462                                u3550 20B8  
                              u3470 1F9C                                u3390 1E02  
                              u2830 3D7E                                u2910 387E  
                              u3710 1C76                                u3630 1A08  
                              u4430 3700                                u4191 3F26  
                              u4271 345E                                u3551 20B4  
                              u3471 1F98                                u3391 1DFE  
                              u2831 3D7A                                u2911 387A  
                              u3711 1C72                                u3631 1A04  
                              u4431 36FC                                u4360 34FE  
                              u4280 3474                                u3560 20E6  
                              u3480 1FBC                                u2840 3D94  
                              u2920 3896                                u3800 3442  
                              u3720 1C90                                u3640 1A18  
                              u5400 29FC                                u4361 34F6  
                              u4281 346C                                u3561 20E2  
                              u3481 1FB8                                u2841 3D90  
                              u2921 3892                                u3801 343E  
                              u3721 1C8C                                u3641 1A14  
                              u5401 29F8                                u4338 34BC  
                              u3490 1FCE                                u3810 2ED4  
                              u2930 3CC2                                u2770 3554  
                              u2850 2D0A                                u3730 1CD8  
                              u3650 1B92                                u3570 194E  
                              u5410 2A20                                u3491 1FCA  
                              u3811 2ED0                                u2931 3CBA  
                              u2771 3550                                u2851 2D06  
                              u3731 1CD4                                u3571 194A  
                              u5411 2A1C                                u4380 351C  
                              u3900 3062                                u3820 2EE2  
                              u2780 356E                                u2860 2DEE  
                              u3740 1D06                                u3660 1BEC  
                              u3580 1960                                u5420 2A64  
                              u5500 22C8                                u4381 3514  
                              u3901 305E                                u3821 2EDE  
                              u2781 356A                                u2861 2DEA  
                              u3741 1D02                                u3661 1BE8  
                              u3581 195C                                u5421 2A60  
                              u5501 22C4                                u4358 34E0  
                              u3830 2F3E                                u2790 3594  
                              u2950 148E                                u3750 1D40  
                              u3670 1C0C                                u3590 1970  
                              u5350 2C02                                u5430 2A7C  
                              u5510 2354                                u3831 2F3A  
                              u2791 3590                                u2951 148A  
                              u3751 1D3C                                u3671 1C08  
                              u3655 1B88                                u3591 196C  
                              u5351 2BFE                                u5431 2A78  
                              u5511 2350                                u3840 2F94  
                              u2960 14A0                                u3760 3376  
                              u3680 1C1E                                u5360 2C26  
                              u5440 2AE4                                u5520 239A  
                              u5600 0EFC                                u3841 2F90  
                              u2961 149C                                u3761 3372  
                              u3681 1C1A                                u5361 2C22  
                              u5441 2AE0                                u5521 2396  
                              u5601 0EF8                                u4378 3500  
                              u4298 3476                                u3850 2FDE  
                              u2874 2E48                                u2890 397C  
                              u2970 14B0                                u3770 33B4  
                              u3690 1C4C                                u5370 2C6A  
                              u5450 210C                                u5610 0F2E  
                              u5530 23F4                                u3851 2FDA  
                              u2875 2E44                                u2891 3978  
                              u2971 14AC                                u3771 33B0  
                              u3691 1C48                                u5371 2C66  
                              u5451 2108                                u5611 0F2A  
                              u5531 23F0                                u3860 2FFC  
                              u2948 3CC4                                u2884 2EB2  
                              u2980 14F2                                u3780 33D2  
                              u5380 2C82                                u5460 2156  
                              u5700 11F8                                u5620 0F60  
                              u5540 2434                                u3861 2FF8  
                              u2885 2EAE                                u2981 14EE  
                              u3781 33CE                                u5381 2C7E  
                              u5461 2152                                u5701 11F4  
                              u5621 0F5C                                u5541 2430  
                              u4398 351E                                u3870 300C  
                              u2990 1508                                u3790 33F2  
                              u5390 2CEA                                u5470 219C  
                              u5710 122A                                u5630 0FB8  
                              u5550 2474                                u3871 3008  
                              u2991 1504                                u3791 33EE  
                              u5391 2CE6                                u5471 2198  
                              u5711 1226                                u5631 0FB4  
                              u5551 2470                                u3880 301A  
                              u5480 21E2                                u5800 1456  
                              u5720 127A                                u5640 1026  
                              u5560 24B4                                u3881 3016  
                              u5481 21DE                                u5801 1452  
                              u5721 1276                                u5641 1022  
                              u5561 24B0                                u3890 3054  
                              u5490 2228                                u5730 12AC  
                              u5650 1058                                u5570 2556  
                              u5810 3684                                u3891 3050  
                              u5491 2224                                u5731 12A8  
                              u5651 1054                                u5571 2552  
                              u5811 3680                                u6507 27DE  
                              u5740 12DE                                u5660 108A  
                              u5580 260C                                u5820 271C  
                              u5741 12DA                                u5661 1086  
                              u5581 2608                                u6517 2810  
                              u5821 2718                                u5750 132E  
                              u5670 10E2                                u5590 264C  
                              u5830 272A                                u5751 132A  
                              u5671 10DE                                u6607 3CEE  
                              u5591 2648                                u6527 2848  
                              u5831 2726                                u5760 1360  
                              u5680 1158                                u5840 276A  
                              u5761 135C                                u5681 1154  
                              u6617 3714                                u6537 3636  
                              u5841 2766                                u5770 1392  
                              u5690 11C6                                u5850 277A  
                              u6707 2A90                                u5771 138E  
                              u5691 11C2                                u6627 3738  
                              u6547 36A4                                u5851 2776  
                              u5780 1424                                u5860 2796  
                              u6717 2C4C                                u5781 1420  
                              u6637 13AC                                u6557 24C0  
                              u5861 2792                                u5790 1446  
                              u5870 27A6                                u6807 322C  
                              u6727 2C96                                u5791 1442  
                              u6647 13D6                                u6567 24EE  
                              u5871 27A2                                u5880 2894  
                              u6817 3250                                u6737 39D0  
                              u6657 2246                                u6577 2576  
                              u5881 2890                                u6497 273E  
                              u5890 28C2                                u6907 3792  
                              u6827 326A                                u6747 39FC  
                              u6667 2272                                u6587 25A4  
                              u5891 28BE                                u6917 37AC  
                              u6837 329A                                u6757 395E  
                              u6677 22E6                                u6597 3C0C  
                              u6927 37C6                                u6847 32BE  
                              u6767 399E                                u6687 2312  
                              u6937 37E0                                u6857 32F0  
                              u6777 3860                                u6697 2A46  
                              u6947 37FA                                u6867 3314  
                              u6787 38EE                                u6877 3338  
                              u6797 3202                                u6887 3532  
                              u6897 3778                         main@current 0099  
           __end_of_interrupts_init 3E08             __end_of_DCmotors_setPWM 2EC2  
                              _main 266A                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 0057  
                              _stop 3926                                prodh 000FF4  
                              prodl 000FF3                                start 0058  
                  __end_of_ADC_init 3F00                     ___fldiv@new_exp 0065  
                   __end_of_HighISR 3E4C                        ___param_bank 000000  
            ?_colourclick_readRGBC2 0016              ??_clicker2buttons_init 0009  
                   __end_of___fladd 1934                               ?_main 0001  
                             _ADPCH 000F5F                     __end_of___fldiv 20FA  
                   __end_of___awdiv 3606                               STR_10 0E6D  
                             STR_12 0E87                               STR_14 0E9A  
                             STR_16 0E8E                               STR_18 0E78  
                             STR_19 0E41                     __end_of___flmul 1D5E  
                             ?_stop 0022                     ___awdiv@divisor 0011  
                             i1l167 0048                               i2l152 3F18  
                             i2l161 3E48                               i2l155 3C96  
                             i2l350 3ECA                               i2l490 3FB4  
        ?i2_colourclick_writetoaddr 0003             _colourclick_writetoaddr 3E6C  
                             i2l484 3D96                               i2l487 3DBC  
                             i2l496 3FAA                               i2l499 3F78  
                   ___awdiv@counter 0013                               _TMR0H 000FD4  
                             _TMR0L 000FD3            __end_of_interrupts_clear 3EE6  
        __end_of_I2C_2_Master_Start 3F8E          __end_of_I2C_2_Master_Write 3F62  
          ?_colourclick_calibration 0001                     __end_of_forward 3926  
                             _instr 00B3                colourclickLEDs_C@tog 0009  
                             _timer 00DB                   _clicker2LEDs_init 3F98  
   __size_of_interrupts_colourclick 004E                     __end_of_reverse 3898  
            DCmotors_init@PWMperiod 0009                  ?_clicker2LEDs_init 0001  
                             ttemp5 0058                               ttemp6 005B  
                             ttemp7 005F                               status 000FD8  
                     turnleft@delay 0073                               wtemp8 0058  
             _I2C_2_Master_RepStart 3F8E                     __initialization 3D12  
               ??_clicker2LEDs_init 0009                        __end_of_main 28E2  
                      __end_of_stop 39B0  __size_of_colourcards_normaliseRGBC 017C  
     __size_of_colourcards_readRGBC 05D0                              ??_main 0096  
                            ??_stop 0026                       __activetblptr 000001  
      __size_ofi2_I2C_2_Master_Idle 0028   __end_ofi2_colourclick_writetoaddr 3ECC  
            ??_colourclick_readRGBC 0016        __size_ofi2_I2C_2_Master_Stop 000A  
         __end_of_clicker2LEDs_init 3FA2        __size_of_reverseinstructions 029A  
                   _colourcard_flag 00DF                              _ADRESH 000F64  
         __size_of_colourclick_init 0038                    ___awdiv@dividend 000F  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                            i1l4641 003C                              i1l4643 0040  
                            i1l4645 0044                              i1l4637 0026  
                            i2l4031 3FAC                              i1l4639 0036  
                            i2l4033 3FB0                              i2l4041 3F74  
                            i2l4035 3FA2                              i2l4037 3FA6  
                            i2l4039 3F70                              i2l4129 3EAE  
                            i2l4291 3C78                              i2l4283 3C4A  
                            i2l4293 3C82                              i2l4285 3C54  
                            i2l4295 3C8C                              i2l4287 3C64  
                            i2l4631 3E3A                              i2l4289 3C6E  
                            i2l4545 3F00                              i2l4633 3E40  
                            i2l3923 3D96                              i2l4635 3E44  
                            i2l3925 3DA6                              i2l4629 3E2A  
                  ?_interrupts_init 0001                    ?_DCmotors_setPWM 0017  
                         ??_HighISR 0006                              _RX4PPS 000E15  
    i2colourclick_writetoaddr@value 0003                              _TX4REG 000EE4  
                  __end_of___xxtofl 3076                              _LowISR 0018  
                      ??_ADC_getval 0009                              ___flge 3348  
            colourcards_readRGBC@mL 0084              colourcards_readRGBC@mR 0086  
                         ??___fladd 0038                              ___wmul 3DBE  
                         ??___fldiv 0048                           ??___awdiv 0013  
                         ??___flmul 001F   __size_ofi2_interrupts_colourclick 004E  
                      ?_timer0_init 0001           ?i2_interrupts_colourclick 0001  
            _interrupts_colourclick 3BFC                    ??_buggyLEDs_init 0009  
                i2_interrupts_clear 3F00           ??_colourclick_writetoaddr 000C  
                            clear_0 3D18                              clear_1 3D24  
                  ___awdiv@quotient 0015                              isa$std 000001  
 __end_of_colourcards_normaliseRGBC 31F2                           ??_forward 0026  
               ?i2_interrupts_clear 0001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptru 000FF8  
                         ?_ADC_init 0001                           ??_reverse 0026  
                            stop@mL 0022                              stop@mR 0024  
                __end_of_ADC_getval 3F32                        ?_USART4_init 0001  
                        ___flge@ff1 0017                          ___flge@ff2 001B  
                      ___xxtofl@arg 0013                        ___xxtofl@exp 0012  
                      ___xxtofl@val 0009                    __end_of_turnleft 2CEE  
                        __accesstop 0060             __end_of__initialization 3D32  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
              ??i2_interrupts_clear 0006                      __pcstackCOMRAM 0001  
                __size_of_clearance 005E         __end_of_colourclickLEDs_RGB 380A  
     checkbatterylevel@batterylevel 000C                          ??_ADC_init 0009  
        __size_of_clicker2LEDs_init 000A       __size_of_colourclickLEDs_init 000E  
   __end_of_colourclick_writetoaddr 3E8C                          __pbssBANK0 00B3  
                        __pbssBANK1 0100                          __pnvCOMRAM 004F  
                 _checkbatterylevel 344C                       ?_instructions 007D  
           ??_colourclick_readRGBC2 0019       __size_ofi2_I2C_2_Master_Start 000A  
     __size_ofi2_I2C_2_Master_Write 000C                  ?_checkbatterylevel 0001  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
                           ?___flge 0017                             ?___wmul 0009  
               ??_checkbatterylevel 000B                             _INT1PPS 000DF1  
       ??i2_colourclick_writetoaddr 0004                           ?___xxtofl 0009  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                 ?_interrupts_clear 0001                             _PWM6DCH 000FA3  
                           _PWM7DCH 000FA0                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5               reverseinstructions@mL 0082  
             reverseinstructions@mR 0084                  ??_interrupts_clear 000E  
                  _colourclick_init 3CDA           __end_of_checkbatterylevel 3542  
            __size_of_DCmotors_init 0050                             _HighISR 0008  
                    ??_instructions 004D                   __end_of_clearance 3A0E  
                    turnright@delay 0073                           _ADREFbits 000F58  
                _I2C_2_Master_Start 3F84                 i2_I2C_2_Master_Idle 3D96  
                _I2C_2_Master_Write 3F56                             __Hparam 0000  
               i2_I2C_2_Master_Stop 3FA2                  __size_of_turnright 0206  
  __size_of_colourclick_calibration 00A6                             __Lparam 0000  
                   __size_of_LowISR 0040                 _reverseinstructions 23D0  
                     _turnleft$3216 0077                     __size_of___flge 0104  
                           ___fladd 1474                             ___fldiv 1D5E  
                           ___awdiv 3542             colourcards_readRGBC@abs 0082  
                           ___flmul 1934             colourcards_readRGBC@rel 008A  
                   __size_of___wmul 0026                 ?_I2C_2_Master_Start 0001  
               ?_I2C_2_Master_Write 0001                        __psmallconst 0E00  
                           __pcinit 3D12                             __ramtop 0E00  
              __size_of_timer0_init 0020                             __ptext0 266A  
                           __ptext1 3E4C                             __ptext2 3606  
                           __ptext3 23D0                             __ptext4 3DE4  
                           __ptext5 3ECC                             __ptext6 3BFC  
                           __ptext7 3CDA                             __ptext8 3E6C  
                           __ptext9 3F48       __size_of_clicker2buttons_init 000C  
                         ?_turnleft 006D                ?i2_I2C_2_Master_Idle 0001  
                         _T2CONbits 000FBD                             _forward 3898  
                        ??___xxtofl 000D                ?i2_I2C_2_Master_Stop 0001  
                         _T2HLTbits 000FBE                             _reverse 380A  
              ?_reverseinstructions 0082                ??_I2C_2_Master_Start 000A  
              ??_I2C_2_Master_Write 000A                      __pintcode_body 3E2A  
              end_of_initialization 3D32        __end_of_colourcards_readRGBC 1474  
                  ADC_getval@tmpval 0009    __end_ofi2_interrupts_colourclick 3C98  
              __size_of_USART4_init 0020                             int_func 3E2A  
         i2_colourclick_writetoaddr 3EAC             ?_interrupts_colourclick 0001  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE      colourclick_calibration@initial 0018  
      colourclick_writetoaddr@value 000B                       _DCmotors_init 3BAC  
                         _PORTFbits 000F8E                          _returnhome 3606  
                        ??_turnleft 004C               ??i2_I2C_2_Master_Idle 0001  
             ??i2_I2C_2_Master_Stop 0002                         ___fladd@grs 003F  
                     ___xxtofl@sign 0011                           _TRISAbits 000F81  
                         _TRISBbits 000F82                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                 __end_of_turnright 2AE8               ??_reverseinstructions 0086  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 0067  
                       ___fldiv@rem 0060       __size_of_colourclick_readRGBC 005E  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 000A  
              colourclick_readB@tmp 0012                colourclick_readC@tmp 0012  
        __size_of_checkbatterylevel 00F6                colourclick_readG@tmp 0012  
                       returnhome@i 008E                         returnhome@j 008F  
              colourclick_readR@tmp 0012                         ___flmul@grs 0024  
    __end_of_interrupts_colourclick 3C4A                          main@motorL 00A1  
                        main@motorR 00AA                       _instr_counter 00E1  
                    __end_of_LowISR 0058            __size_of_interrupts_init 0024  
          __size_of_DCmotors_setPWM 01D4                      __end_of___flge 344C  
        colourclick_readRGBC@tmpval 0014                      ?_DCmotors_init 0001  
                    __end_of___wmul 3DE4                __end_of_instructions 23D0  
        ?_colourcards_normaliseRGBC 006D                 start_initialization 3D12  
                  _unknowncard_flag 00DE                     _returnhome_flag 00DD  
           _colourclick_calibration 36C6         __size_ofi2_interrupts_clear 001A  
                          ??_LowISR 0006            i2_interrupts_colourclick 3C4A  
                      turnright@deg 0071      __size_of_colourclick_readRGBC2 0156  
     __end_of_colourclick_readRGBC2 3348            ?_colourclick_writetoaddr 000B  
        colourcards_normaliseRGBC@B 0075          colourcards_normaliseRGBC@C 0077  
        colourcards_normaliseRGBC@G 0073          colourcards_normaliseRGBC@R 0071  
                          ??___flge 001F        __end_of_colourclickLEDs_init 3F56  
                          ??___wmul 000D            __end_of_colourclick_init 3D12  
     i2I2C_2_Master_Write@data_byte 0002                _colourcards_readRGBC 0EA4  
                       ?_returnhome 0088        __end_ofi2_I2C_2_Master_Start 3FB6  
      __end_ofi2_I2C_2_Master_Write 3F7A                           ___fladd@a 0034  
                         ___fladd@b 0030                           ___fldiv@a 0044  
                         ___fldiv@b 0040                           ___flmul@a 001B  
                         ___flmul@b 0017                         __pbssCOMRAM 0053  
                     __pcstackBANK0 0060             __size_of_buggyLEDs_init 0016  
                 __size_of___xxtofl 01B4                            ?_HighISR 0001  
      __size_of_colourclickLEDs_RGB 009E           __size_of_interrupts_clear 001A  
                         _clearance 39B0                           __pintcode 0008  
                   ??_DCmotors_init 0009                            ?___fladd 0030  
                          ?___fldiv 0040                            ?___awdiv 000F  
                          ?___flmul 0017  __size_ofi2_colourclick_writetoaddr 0020  
             ?_colourcards_readRGBC 0082                         __pintcodelo 0018  
              I2C_2_Master_Read@ack 000B                   ??_interrupts_init 000E  
                 ??_DCmotors_setPWM 0019                I2C_2_Master_Read@tmp 000C  
             _interrupts_lowerbound 0055                         __smallconst 0E00  
                          ?_forward 0022                   _I2C_2_Master_Idle 3D6E  
                 _I2C_2_Master_Init 3D44                   _I2C_2_Master_Read 3C98  
                 _I2C_2_Master_Stop 3F7A                   __size_of_turnleft 0206  
                          _ADC_init 3EE6                            ?_reverse 0022  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                  ?_I2C_2_Master_Stop 0001  
         ??_colourclick_calibration 0016                     instructions@num 0081  
      __end_of_clicker2buttons_init 3F6E                 ??_I2C_2_Master_Idle 0009  
               ??_I2C_2_Master_Init 0009                 ??_I2C_2_Master_Read 000A  
                    ___wmul@product 000D                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 000A                            _LATCbits 000F7B  
                 _colourclickLEDs_C 3E08                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _IPR0bits 000E1F                 __size_of_returnhome 00C0  
                          _PIE0bits 000E29                  ?_colourclickLEDs_C 0001  
                          i1u475_20 0036                            i1u475_21 0032  
                          _PIR0bits 000E33                            i2u391_40 3DA6  
                          i2u391_41 3DA2                            _PIR4bits 000E37  
                        ?_clearance 0028                            i2u392_40 3DBC  
                          i2u392_41 3DB8                            i2u474_40 3E3A  
                          i2u474_41 3E36                            i2u695_47 3C5A  
                     ??_timer0_init 0009                            _SSP2CON2 000EDA  
             __size_of_instructions 02D6              DCmotors_setPWM@PWMduty 0020  
                          _SSP2STAT 000ED8                 ??_colourclickLEDs_C 0009  
                 _colourclick_readB 3B5C                   _colourclick_readC 3B0C  
                 _colourclick_readG 3ABC                   _colourclick_readR 3A6C  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 3D96  
         __end_of_I2C_2_Master_Init 3D6E           __end_of_I2C_2_Master_Read 3CDA  
                 ___wmul@multiplier 0009                  ?_colourclick_readB 000D  
                ?_colourclick_readC 000D                  ?_colourclick_readG 000D  
                ?_colourclick_readR 000D           __end_of_I2C_2_Master_Stop 3F84  
             _interrupts_upperbound 0053         I2C_2_Master_Write@data_byte 000A  
                         main@start 0098                 ??_colourclick_readB 000F  
               ??_colourclick_readC 000F                 ??_colourclick_readG 000F  
               ??_colourclick_readR 000F                       ??_USART4_init 0009  
       __size_of_I2C_2_Master_Start 000A                _colourclickLEDs_init 3F48  
       __size_of_I2C_2_Master_Write 000C                           _turnright 28E2  
         __end_of_colourclickLEDs_C 3E2A                         turnleft@deg 0071  
    __size_of_I2C_2_Master_RepStart 000A       __end_of_I2C_2_Master_RepStart 3F98  
                  __size_of_HighISR 3E44                        _instructions 20FA  
              i2_I2C_2_Master_Start 3FAC                i2_I2C_2_Master_Write 3F6E  
                          __Hrparam 0000                         turnright@mL 006D  
                       turnright@mR 006F                          _ADC_getval 3F1A  
      __end_of_colourclick_readRGBC 3A6C                            __Lrparam 0000  
                      __Lsmallconst 0E00           __end_of_colourclick_readB 3BAC  
         __end_of_colourclick_readC 3B5C           __end_of_colourclick_readG 3B0C  
         __end_of_colourclick_readR 3ABC                           forward@mL 0022  
                         forward@mR 0024                         _dur_counter 00E0  
            ??_colourcards_readRGBC 0088         __end_ofi2_I2C_2_Master_Idle 3DBE  
                  __size_of___fladd 04C0         __end_ofi2_I2C_2_Master_Stop 3FAC  
                  __size_of___fldiv 039C                    __size_of___awdiv 00C4  
                  __size_of___flmul 042A     __end_of_colourclick_calibration 376C  
       __end_of_reverseinstructions 266A                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                          _ANSELFbits 000EB4  
               __end_of_timer0_init 3E6C         ??_colourcards_normaliseRGBC 004C  
                          ___xxtofl 2EC2                          _T0CON0bits 000FD5  
                        _T0CON1bits 000FD6                      _buggyLEDs_init 3F32  
                  __size_of_forward 008E                            __ptext10 3D44  
                          __ptext11 36C6                            __ptext20 3926  
                          __ptext12 0EA4                            __ptext21 380A  
                          __ptext13 20FA                            __ptext30 3B0C  
                          __ptext22 3898                            __ptext14 28E2  
                          __ptext31 3B5C                            __ptext23 2CEE  
                          __ptext15 2AE8                            __ptext40 2EC2  
                          __ptext32 3F56                            __ptext24 3DBE  
                          __ptext16 1934                            __ptext41 1D5E  
                          __ptext33 3F7A                            __ptext25 3542  
                          __ptext17 3348                            __ptext50 3EE6  
                          __ptext42 344C                            __ptext34 3F84  
                          __ptext26 31F2                            __ptext18 1474  
                          __ptext43 376C                            __ptext35 3F8E  
                          __ptext27 3A0E                            __ptext19 39B0  
                          __ptext44 3F1A                            __ptext36 3C98  
                          __ptext28 3A6C                            __ptext53 3F00  
                          __ptext45 3E8C                            __ptext37 3D6E  
                          __ptext29 3ABC                            __ptext54 3C4A  
                          __ptext46 3BAC                            __ptext38 3E08  
                          __ptext55 3EAC                            __ptext47 3F62  
                          __ptext39 3076                            __ptext56 3F6E  
                          __ptext48 3F98                            __ptext57 3FA2  
                          __ptext49 3F32                            __ptext58 3FAC  
                          __ptext59 3D96                    __size_of_reverse 008E  
             ?_colourclickLEDs_init 0001                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA          ??i2_interrupts_colourclick 0005  
                        ?_turnright 006D                       __size_of_main 0278  
                     __size_of_stop 008A               ?i2_I2C_2_Master_Start 0001  
             ?i2_I2C_2_Master_Write 0001                      instructions@mL 007D  
                    instructions@mR 007F                 __end_of_USART4_init 3EAC  
                  _interrupts_clear 3ECC                           reverse@mL 0022  
                         reverse@mR 0024                         ??_clearance 002C  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 0057                   ?_colourclick_init 0001  
               _colourclickLEDs_RGB 376C                  ??_colourclick_init 000D  
                      ??_returnhome 008C          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
                  DCmotors_setPWM@m 0017                _clicker2buttons_init 3F62  
        __size_of_I2C_2_Master_Stop 000A                            _turnleft 2AE8  
                        turnleft@mL 006D                          turnleft@mR 006F  
            __end_of_buggyLEDs_init 3F48                          _INTCONbits 000FF2  
  __size_of_colourclick_writetoaddr 0020                         clearance@mL 0028  
                       clearance@mR 002A                          turnright@i 007B  
    colourclick_writetoaddr@address 000C    i2colourclick_writetoaddr@address 0004  
                    _turnright$3217 0077                         _PWM6CONbits 000FA4  
                       _PWM7CONbits 000FA1                            intlevel1 0000  
                          intlevel2 0000          __size_of_colourclickLEDs_C 0022  
              ?_colourclickLEDs_RGB 0001          __end_ofi2_interrupts_clear 3F1A  
                _turnright_calangle 004F           _colourcards_normaliseRGBC 3076  
                 _turnleft_calangle 0051                  __end_of_returnhome 36C6  
                   _interrupts_init 3DE4                     _DCmotors_setPWM 2CEE  
                       ?_ADC_getval 0001          __size_of_colourclick_readB 0050  
        __size_of_colourclick_readC 0050          __size_of_colourclick_readG 0050  
        __size_of_colourclick_readR 0050               _colourclick_readRGBC2 31F2  
                       _timer0_init 3E4C                           turnleft@i 007B  
             ?_clicker2buttons_init 0001           colourclick_readRGBC2@mode 0018  
                   ?_buggyLEDs_init 0001                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C              ??_colourclickLEDs_init 000A  
              _colourclick_readRGBC 3A0E                       ___fladd@signs 003C  
                       _USART4_init 3E8C            ??_interrupts_colourclick 000D  
                        _TX4STAbits 000EE8                         ??_turnright 004C  
             ??_colourclickLEDs_RGB 0009              ??i2_I2C_2_Master_Start 0002  
                      ___fladd@aexp 003D              ??i2_I2C_2_Master_Write 0002  
                      ___fladd@bexp 003E        colourcards_normaliseRGBC@abs 006D  
