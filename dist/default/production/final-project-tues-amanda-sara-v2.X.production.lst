

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 13 03:22:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.20
    96                           ; Generated 05/05/2020 GMT
    97                           ; 
    98                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F67K40 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK1
   131  00652C                     __pidataBANK1:
   132                           	callstack 0
   133                           
   134                           ;initializer for stoa@F1163
   135  00652C  28                 	db	40
   136  00652D  6E                 	db	110
   137  00652E  75                 	db	117
   138  00652F  6C                 	db	108
   139  006530  6C                 	db	108
   140  006531  29                 	db	41
   141  006532  00                 	db	0
   142                           
   143                           	psect	nvBANK0
   144  0000FD                     __pnvBANK0:
   145                           	callstack 0
   146  0000FD                     _interrupts_upperbound:
   147                           	callstack 0
   148  0000FD                     	ds	2
   149                           
   150                           	psect	nvBANK1
   151  0001E5                     __pnvBANK1:
   152                           	callstack 0
   153  0001E5                     _DCmotors_turntime:
   154                           	callstack 0
   155  0001E5                     	ds	2
   156  0000                     _CM1CON1bits	set	3793
   157  0000                     _CM1CON0bits	set	3792
   158  0000                     _CM1PCHbits	set	3795
   159  0000                     _CM1NCHbits	set	3794
   160  0000                     _DAC1CON1bits	set	3783
   161  0000                     _DAC1CON0bits	set	3782
   162  0000                     _RC7PPS	set	3689
   163  0000                     _RE2PPS	set	3700
   164  0000                     _PIE4bits	set	3629
   165  0000                     _TX4REG	set	3812
   166  0000                     _RC4REG	set	3811
   167  0000                     _PIR4bits	set	3639
   168  0000                     _RC4STAbits	set	3815
   169  0000                     _SP4BRGH	set	3814
   170  0000                     _SP4BRGL	set	3813
   171  0000                     _TX4STAbits	set	3816
   172  0000                     _BAUD4CONbits	set	3817
   173  0000                     _RX4PPS	set	3605
   174  0000                     _RC0PPS	set	3682
   175  0000                     _SSP2BUF	set	3797
   176  0000                     _SSP2CON2bits	set	3802
   177  0000                     _SSP2CON2	set	3802
   178  0000                     _SSP2STAT	set	3800
   179  0000                     _RD6PPS	set	3696
   180  0000                     _RD5PPS	set	3695
   181  0000                     _SSP2CLKPPS	set	3612
   182  0000                     _SSP2DATPPS	set	3613
   183  0000                     _ANSELDbits	set	3751
   184  0000                     _SSP2ADD	set	3798
   185  0000                     _SSP2CON1bits	set	3801
   186  0000                     _ANSELFbits	set	3764
   187  0000                     _PIR0bits	set	3635
   188  0000                     _PIE0bits	set	3625
   189  0000                     _ADPCH	set	3935
   190  0000                     _ADREFbits	set	3928
   191  0000                     _PWM7CONbits	set	4001
   192  0000                     _PWM6CONbits	set	4004
   193  0000                     _LATCbits	set	3963
   194  0000                     _LATEbits	set	3965
   195  0000                     _TRISEbits	set	3973
   196  0000                     _T2PR	set	4028
   197  0000                     _T2CLKCONbits	set	4031
   198  0000                     _T2HLTbits	set	4030
   199  0000                     _T2CONbits	set	4029
   200  0000                     _TRISCbits	set	3971
   201  0000                     _TRISAbits	set	3969
   202  0000                     _TRISGbits	set	3975
   203  0000                     _TRISHbits	set	3976
   204  0000                     _TRISDbits	set	3972
   205  0000                     _ADRESH	set	3940
   206  0000                     _ADCON0bits	set	3936
   207  0000                     _TRISFbits	set	3974
   208  0000                     _LATFbits	set	3966
   209  0000                     _LATAbits	set	3961
   210  0000                     _LATGbits	set	3967
   211  0000                     _INTCONbits	set	4082
   212  0000                     _LATHbits	set	3968
   213  0000                     _LATDbits	set	3964
   214  0000                     _PORTFbits	set	3982
   215  0000                     _LATG	set	3967
   216  0000                     _PWM7DCH	set	4000
   217  0000                     _LATE	set	3965
   218  0000                     _PWM6DCH	set	4003
   219                           
   220                           	psect	smallconst
   221  000E00                     __psmallconst:
   222                           	callstack 0
   223  000E00  00                 	db	0
   224  000E01                     STR_1:
   225                           
   226                           ; BSR set to: 15
   227  000E01  52                 	db	82	;'R'
   228  000E02  47                 	db	71	;'G'
   229  000E03  42                 	db	66	;'B'
   230  000E04  43                 	db	67	;'C'
   231  000E05  3A                 	db	58	;':'
   232  000E06  20                 	db	32
   233  000E07  25                 	db	37
   234  000E08  69                 	db	105	;'i'
   235  000E09  20                 	db	32
   236  000E0A  25                 	db	37
   237  000E0B  69                 	db	105	;'i'
   238  000E0C  20                 	db	32
   239  000E0D  25                 	db	37
   240  000E0E  69                 	db	105	;'i'
   241  000E0F  20                 	db	32
   242  000E10  25                 	db	37
   243  000E11  69                 	db	105	;'i'
   244  000E12  20                 	db	32
   245  000E13  20                 	db	32
   246  000E14  20                 	db	32
   247  000E15  20                 	db	32
   248  000E16  20                 	db	32
   249  000E17  52                 	db	82	;'R'
   250  000E18  47                 	db	71	;'G'
   251  000E19  42                 	db	66	;'B'
   252  000E1A  43                 	db	67	;'C'
   253  000E1B  5F                 	db	95	;'_'
   254  000E1C  72                 	db	114	;'r'
   255  000E1D  65                 	db	101	;'e'
   256  000E1E  6C                 	db	108	;'l'
   257  000E1F  3A                 	db	58	;':'
   258  000E20  20                 	db	32
   259  000E21  25                 	db	37
   260  000E22  2E                 	db	46
   261  000E23  33                 	db	51	;'3'
   262  000E24  66                 	db	102	;'f'
   263  000E25  20                 	db	32
   264  000E26  25                 	db	37
   265  000E27  2E                 	db	46
   266  000E28  33                 	db	51	;'3'
   267  000E29  66                 	db	102	;'f'
   268  000E2A  20                 	db	32
   269  000E2B  25                 	db	37
   270  000E2C  2E                 	db	46
   271  000E2D  33                 	db	51	;'3'
   272  000E2E  66                 	db	102	;'f'
   273  000E2F  20                 	db	32
   274  000E30  20                 	db	32
   275  000E31  20                 	db	32
   276  000E32  20                 	db	32
   277  000E33  20                 	db	32
   278  000E34  43                 	db	67	;'C'
   279  000E35  6F                 	db	111	;'o'
   280  000E36  6C                 	db	108	;'l'
   281  000E37  6F                 	db	111	;'o'
   282  000E38  75                 	db	117	;'u'
   283  000E39  72                 	db	114	;'r'
   284  000E3A  3A                 	db	58	;':'
   285  000E3B  20                 	db	32
   286  000E3C  25                 	db	37
   287  000E3D  73                 	db	115	;'s'
   288  000E3E  0A                 	db	10
   289  000E3F  0D                 	db	13
   290  000E40  00                 	db	0
   291  000E41                     
   292                           ; BSR set to: 15
   293  000E41  52                 	db	82	;'R'
   294  000E42  47                 	db	71	;'G'
   295  000E43  42                 	db	66	;'B'
   296  000E44  43                 	db	67	;'C'
   297  000E45  3A                 	db	58	;':'
   298  000E46  20                 	db	32
   299  000E47  25                 	db	37
   300  000E48  69                 	db	105	;'i'
   301  000E49  20                 	db	32
   302  000E4A  25                 	db	37
   303  000E4B  69                 	db	105	;'i'
   304  000E4C  20                 	db	32
   305  000E4D  25                 	db	37
   306  000E4E  69                 	db	105	;'i'
   307  000E4F  20                 	db	32
   308  000E50  25                 	db	37
   309  000E51  69                 	db	105	;'i'
   310  000E52  20                 	db	32
   311  000E53  20                 	db	32
   312  000E54  20                 	db	32
   313  000E55  20                 	db	32
   314  000E56  20                 	db	32
   315  000E57  54                 	db	84	;'T'
   316  000E58  68                 	db	104	;'h'
   317  000E59  72                 	db	114	;'r'
   318  000E5A  65                 	db	101	;'e'
   319  000E5B  73                 	db	115	;'s'
   320  000E5C  68                 	db	104	;'h'
   321  000E5D  6F                 	db	111	;'o'
   322  000E5E  6C                 	db	108	;'l'
   323  000E5F  64                 	db	100	;'d'
   324  000E60  3A                 	db	58	;':'
   325  000E61  20                 	db	32
   326  000E62  25                 	db	37
   327  000E63  69                 	db	105	;'i'
   328  000E64  20                 	db	32
   329  000E65  25                 	db	37
   330  000E66  69                 	db	105	;'i'
   331  000E67  20                 	db	32
   332  000E68  25                 	db	37
   333  000E69  69                 	db	105	;'i'
   334  000E6A  0A                 	db	10
   335  000E6B  0D                 	db	13
   336  000E6C  00                 	db	0
   337  000E6D                     STR_10:
   338                           
   339                           ; BSR set to: 15
   340  000E6D  6C                 	db	108	;'l'
   341  000E6E  69                 	db	105	;'i'
   342  000E6F  67                 	db	103	;'g'
   343  000E70  68                 	db	104	;'h'
   344  000E71  74                 	db	116	;'t'
   345  000E72  20                 	db	32
   346  000E73  62                 	db	98	;'b'
   347  000E74  6C                 	db	108	;'l'
   348  000E75  75                 	db	117	;'u'
   349  000E76  65                 	db	101	;'e'
   350  000E77  00                 	db	0
   351  000E78                     STR_18:
   352                           
   353                           ; BSR set to: 15
   354  000E78  75                 	db	117	;'u'
   355  000E79  6E                 	db	110	;'n'
   356  000E7A  6B                 	db	107	;'k'
   357  000E7B  6E                 	db	110	;'n'
   358  000E7C  6F                 	db	111	;'o'
   359  000E7D  77                 	db	119	;'w'
   360  000E7E  6E                 	db	110	;'n'
   361  000E7F  00                 	db	0
   362  000E80                     STR_2:
   363                           
   364                           ; BSR set to: 15
   365  000E80  6F                 	db	111	;'o'
   366  000E81  72                 	db	114	;'r'
   367  000E82  61                 	db	97	;'a'
   368  000E83  6E                 	db	110	;'n'
   369  000E84  67                 	db	103	;'g'
   370  000E85  65                 	db	101	;'e'
   371  000E86  00                 	db	0
   372  000E87                     STR_12:
   373                           
   374                           ; BSR set to: 15
   375  000E87  79                 	db	121	;'y'
   376  000E88  65                 	db	101	;'e'
   377  000E89  6C                 	db	108	;'l'
   378  000E8A  6C                 	db	108	;'l'
   379  000E8B  6F                 	db	111	;'o'
   380  000E8C  77                 	db	119	;'w'
   381  000E8D  00                 	db	0
   382  000E8E                     STR_16:
   383                           
   384                           ; BSR set to: 15
   385  000E8E  77                 	db	119	;'w'
   386  000E8F  68                 	db	104	;'h'
   387  000E90  69                 	db	105	;'i'
   388  000E91  74                 	db	116	;'t'
   389  000E92  65                 	db	101	;'e'
   390  000E93  00                 	db	0
   391  000E94                     STR_8:
   392                           
   393                           ; BSR set to: 15
   394  000E94  67                 	db	103	;'g'
   395  000E95  72                 	db	114	;'r'
   396  000E96  65                 	db	101	;'e'
   397  000E97  65                 	db	101	;'e'
   398  000E98  6E                 	db	110	;'n'
   399  000E99  00                 	db	0
   400  000E9A                     STR_14:
   401                           
   402                           ; BSR set to: 15
   403  000E9A  70                 	db	112	;'p'
   404  000E9B  69                 	db	105	;'i'
   405  000E9C  6E                 	db	110	;'n'
   406  000E9D  6B                 	db	107	;'k'
   407  000E9E  00                 	db	0
   408  000E9F                     STR_20:
   409                           
   410                           ; BSR set to: 15
   411  000E9F  49                 	db	73	;'I'
   412  000EA0  4E                 	db	78	;'N'
   413  000EA1  46                 	db	70	;'F'
   414  000EA2  00                 	db	0
   415  000EA3                     STR_24:
   416                           
   417                           ; BSR set to: 15
   418  000EA3  4E                 	db	78	;'N'
   419  000EA4  41                 	db	65	;'A'
   420  000EA5  4E                 	db	78	;'N'
   421  000EA6  00                 	db	0
   422  000EA7                     STR_21:
   423                           
   424                           ; BSR set to: 15
   425  000EA7  69                 	db	105	;'i'
   426  000EA8  6E                 	db	110	;'n'
   427  000EA9  66                 	db	102	;'f'
   428  000EAA  00                 	db	0
   429  000EAB                     STR_25:
   430                           
   431                           ; BSR set to: 15
   432  000EAB  6E                 	db	110	;'n'
   433  000EAC  61                 	db	97	;'a'
   434  000EAD  6E                 	db	110	;'n'
   435  000EAE  00                 	db	0
   436  000EAF                     STR_4:
   437                           
   438                           ; BSR set to: 15
   439  000EAF  72                 	db	114	;'r'
   440  000EB0  65                 	db	101	;'e'
   441  000EB1  64                 	db	100	;'d'
   442  000EB2  00                 	db	0
   443  000EB3                     STR_28:
   444                           
   445                           ; BSR set to: 15
   446  000EB3  6C                 	db	108	;'l'
   447  000EB4  66                 	db	102	;'f'
   448  000EB5  00                 	db	0
   449  000EB6  00                 	db	0	; dummy byte at the end
   450  0000                     
   451                           ; #config settings
   452                           
   453                           	psect	cinit
   454  006236                     __pcinit:
   455                           	callstack 0
   456  006236                     start_initialization:
   457                           	callstack 0
   458  006236                     __initialization:
   459                           	callstack 0
   460                           
   461                           ; Initialize objects allocated to BANK1 (7 bytes)
   462                           ; load TBLPTR registers with __pidataBANK1
   463  006236  0E2C               	movlw	low __pidataBANK1
   464  006238  6EF6               	movwf	tblptrl,c
   465  00623A  0E65               	movlw	high __pidataBANK1
   466  00623C  6EF7               	movwf	tblptrh,c
   467  00623E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   468  006240  6EF8               	movwf	tblptru,c
   469  006242  EE01  F0DE         	lfsr	0,__pdataBANK1
   470  006246  EE10 F007          	lfsr	1,7
   471  00624A                     copy_data0:
   472  00624A  0009               	tblrd		*+
   473  00624C  CFF5 FFEE          	movff	tablat,postinc0
   474  006250  50E5               	movf	postdec1,w,c
   475  006252  50E1               	movf	fsr1l,w,c
   476  006254  E1FA               	bnz	copy_data0
   477                           
   478                           ; Clear objects allocated to BANK1 (172 bytes)
   479  006256  EE01  F000         	lfsr	0,__pbssBANK1
   480  00625A  0EAC               	movlw	172
   481  00625C                     clear_0:
   482  00625C  6AEE               	clrf	postinc0,c
   483  00625E  06E8               	decf	wreg,f,c
   484  006260  E1FD               	bnz	clear_0
   485                           
   486                           ; Clear objects allocated to BANK0 (17 bytes)
   487  006262  EE00  F0EC         	lfsr	0,__pbssBANK0
   488  006266  0E11               	movlw	17
   489  006268                     clear_1:
   490  006268  6AEE               	clrf	postinc0,c
   491  00626A  06E8               	decf	wreg,f,c
   492  00626C  E1FD               	bnz	clear_1
   493  00626E                     end_of_initialization:
   494                           	callstack 0
   495  00626E                     __end_of__initialization:
   496                           	callstack 0
   497  00626E  0100               	movlb	0
   498  006270  EF2C  F029         	goto	_main	;jump to C main() function
   499                           
   500                           	psect	bssBANK0
   501  0000EC                     __pbssBANK0:
   502                           	callstack 0
   503  0000EC                     _nout:
   504                           	callstack 0
   505  0000EC                     	ds	2
   506  0000EE                     _width:
   507                           	callstack 0
   508  0000EE                     	ds	2
   509  0000F0                     _prec:
   510                           	callstack 0
   511  0000F0                     	ds	2
   512  0000F2                     _flags:
   513                           	callstack 0
   514  0000F2                     	ds	2
   515  0000F4                     _interrupts_lowerbound:
   516                           	callstack 0
   517  0000F4                     	ds	2
   518  0000F6                     _returnhome_flag:
   519                           	callstack 0
   520  0000F6                     	ds	1
   521  0000F7                     _unknowncard_flag:
   522                           	callstack 0
   523  0000F7                     	ds	1
   524  0000F8                     _colourcard_flag:
   525                           	callstack 0
   526  0000F8                     	ds	1
   527  0000F9                     _TxBufReadCnt:
   528                           	callstack 0
   529  0000F9                     	ds	1
   530  0000FA                     _TxBufWriteCnt:
   531                           	callstack 0
   532  0000FA                     	ds	1
   533  0000FB                     _RxBufReadCnt:
   534                           	callstack 0
   535  0000FB                     	ds	1
   536  0000FC                     _RxBufWriteCnt:
   537                           	callstack 0
   538  0000FC                     	ds	1
   539                           
   540                           	psect	bssBANK1
   541  000100                     __pbssBANK1:
   542                           	callstack 0
   543  000100                     _EUSART4TXbuf:
   544                           	callstack 0
   545  000100                     	ds	60
   546  00013C                     _EUSART4RXbuf:
   547                           	callstack 0
   548  00013C                     	ds	20
   549  000150                     floorf@F527:
   550                           	callstack 0
   551  000150                     	ds	4
   552  000154                     ___fpclassifyf@F465:
   553                           	callstack 0
   554  000154                     	ds	4
   555  000158                     _clear_upper:
   556                           	callstack 0
   557  000158                     	ds	2
   558  00015A                     _clear_lower:
   559                           	callstack 0
   560  00015A                     	ds	2
   561  00015C                     _dbuf:
   562                           	callstack 0
   563  00015C                     	ds	80
   564                           
   565                           	psect	dataBANK1
   566  0001DE                     __pdataBANK1:
   567                           	callstack 0
   568  0001DE                     stoa@F1163:
   569                           	callstack 0
   570  0001DE                     	ds	7
   571                           
   572                           	psect	cstackBANK1
   573  0001AC                     __pcstackBANK1:
   574                           	callstack 0
   575  0001AC                     colourcards_testingRGBC@buf:
   576                           	callstack 0
   577                           
   578                           ; 30 bytes @ 0x0
   579  0001AC                     	ds	30
   580  0001CA                     colourcards_testingRGBC@abs:
   581                           	callstack 0
   582                           
   583                           ; 8 bytes @ 0x1E
   584  0001CA                     	ds	8
   585  0001D2                     colourcards_testingRGBC@rel:
   586                           	callstack 0
   587                           
   588                           ; 12 bytes @ 0x26
   589  0001D2                     	ds	12
   590                           
   591                           	psect	cstackBANK0
   592  000060                     __pcstackBANK0:
   593                           	callstack 0
   594  000060                     _efgtoa$3050:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x0
   598  000060                     	ds	2
   599  000062                     _efgtoa$3051:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x2
   603  000062                     	ds	2
   604  000064                     _efgtoa$3055:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x4
   608  000064                     	ds	2
   609  000066                     _efgtoa$3059:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x6
   613  000066                     	ds	2
   614  000068                     _efgtoa$3060:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x8
   618  000068                     	ds	2
   619  00006A                     _efgtoa$3061:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0xA
   623  00006A                     	ds	2
   624  00006C                     efgtoa@t:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0xC
   628  00006C                     	ds	2
   629  00006E                     efgtoa@pp:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0xE
   633  00006E                     	ds	2
   634  000070                     efgtoa@ne:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x10
   638  000070                     	ds	2
   639  000072                     efgtoa@m:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x12
   643  000072                     	ds	2
   644  000074                     efgtoa@ou:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x14
   648  000074                     	ds	4
   649  000078                     efgtoa@d:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x18
   653  000078                     	ds	2
   654  00007A                     efgtoa@sign:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x1A
   658  00007A                     	ds	2
   659  00007C                     efgtoa@p:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x1C
   663  00007C                     	ds	2
   664  00007E                     efgtoa@w:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x1E
   668  00007E                     	ds	2
   669  000080                     efgtoa@nmode:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x20
   673  000080                     	ds	1
   674  000081                     efgtoa@mode:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x21
   678  000081                     	ds	1
   679  000082                     efgtoa@h:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x22
   683  000082                     	ds	4
   684  000086                     efgtoa@l:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x26
   688  000086                     	ds	4
   689  00008A                     efgtoa@i:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x2A
   693  00008A                     	ds	2
   694  00008C                     efgtoa@g:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x2C
   698  00008C                     	ds	4
   699  000090                     efgtoa@e:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x30
   703  000090                     	ds	2
   704  000092                     efgtoa@n:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x32
   708  000092                     	ds	2
   709  000094                     efgtoa@u:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x34
   713  000094                     	ds	4
   714  000098                     vfpfcnvrt@ll:
   715                           	callstack 0
   716                           
   717                           ; 8 bytes @ 0x38
   718  000098                     	ds	8
   719  0000A0                     vfpfcnvrt@cp:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x40
   723  0000A0                     	ds	2
   724  0000A2                     _vfpfcnvrt$3086:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x42
   728  0000A2                     	ds	2
   729  0000A4                     _vfpfcnvrt$3091:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x44
   733  0000A4                     	ds	2
   734  0000A6                     vfpfcnvrt@f:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x46
   738  0000A6                     	ds	4
   739  0000AA                     vfpfcnvrt@ct:
   740                           	callstack 0
   741                           
   742                           ; 3 bytes @ 0x4A
   743  0000AA                     	ds	3
   744  0000AD                     vfpfcnvrt@c:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x4D
   748  0000AD                     	ds	1
   749  0000AE                     ?_sprintf:
   750                           	callstack 0
   751  0000AE                     sprintf@s:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x4E
   755  0000AE                     	ds	2
   756  0000B0                     sprintf@fmt:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x50
   760  0000B0                     	ds	24
   761  0000C8                     sprintf@ap:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x68
   765  0000C8                     	ds	2
   766  0000CA                     sprintf@f:
   767                           	callstack 0
   768                           
   769                           ; 6 bytes @ 0x6A
   770  0000CA                     	ds	6
   771  0000D0                     ??_main:
   772                           
   773                           ; 1 bytes @ 0x70
   774  0000D0                     	ds	2
   775  0000D2                     main@current:
   776                           	callstack 0
   777                           
   778                           ; 8 bytes @ 0x72
   779  0000D2                     	ds	8
   780  0000DA                     main@motorL:
   781                           	callstack 0
   782                           
   783                           ; 9 bytes @ 0x7A
   784  0000DA                     	ds	9
   785  0000E3                     main@motorR:
   786                           	callstack 0
   787                           
   788                           ; 9 bytes @ 0x83
   789  0000E3                     	ds	9
   790                           
   791                           	psect	cstackCOMRAM
   792  000001                     __pcstackCOMRAM:
   793                           	callstack 0
   794  000001                     ??_I2C_2_Master_Idle:
   795  000001                     ?_strlen:
   796                           	callstack 0
   797  000001                     ?___fpclassifyf:
   798                           	callstack 0
   799  000001                     ?_isupper:
   800                           	callstack 0
   801  000001                     ?_isdigit:
   802                           	callstack 0
   803  000001                     ?_strncmp:
   804                           	callstack 0
   805  000001                     ?_isspace:
   806                           	callstack 0
   807  000001                     ?___wmul:
   808                           	callstack 0
   809  000001                     ?___awmod:
   810                           	callstack 0
   811  000001                     ?___flneg:
   812                           	callstack 0
   813  000001                     ?___fltol:
   814                           	callstack 0
   815  000001                     ?___xxtofl:
   816                           	callstack 0
   817  000001                     ?___aodiv:
   818                           	callstack 0
   819  000001                     ?___aomod:
   820                           	callstack 0
   821  000001                     ADC_getval@tmpval:
   822                           	callstack 0
   823  000001                     colourclickLEDs_C@tog:
   824                           	callstack 0
   825  000001                     sendCharSerial4@charToSend:
   826                           	callstack 0
   827  000001                     DCmotors_init@PWMperiod:
   828                           	callstack 0
   829  000001                     ___wmul@multiplier:
   830                           	callstack 0
   831  000001                     ___awmod@dividend:
   832                           	callstack 0
   833  000001                     isdigit@c:
   834                           	callstack 0
   835  000001                     isspace@c:
   836                           	callstack 0
   837  000001                     isupper@c:
   838                           	callstack 0
   839  000001                     fputc@c:
   840                           	callstack 0
   841  000001                     strcpy@dest:
   842                           	callstack 0
   843  000001                     strlen@s:
   844                           	callstack 0
   845  000001                     strncmp@_l:
   846                           	callstack 0
   847  000001                     ___fleq@ff1:
   848                           	callstack 0
   849  000001                     ___flneg@f1:
   850                           	callstack 0
   851  000001                     ___fltol@f1:
   852                           	callstack 0
   853  000001                     ___xxtofl@val:
   854                           	callstack 0
   855  000001                     ___fpclassifyf@x:
   856                           	callstack 0
   857  000001                     ___aodiv@dividend:
   858                           	callstack 0
   859  000001                     ___aomod@dividend:
   860                           	callstack 0
   861                           
   862                           ; 8 bytes @ 0x0
   863  000001                     	ds	1
   864  000002                     ??_I2C_2_Master_Read:
   865  000002                     I2C_2_Master_Write@data_byte:
   866                           	callstack 0
   867  000002                     checkbatterylevel@batterylevel:
   868                           	callstack 0
   869  000002                     sendStringSerial4@string:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x1
   873  000002                     	ds	1
   874  000003                     ??_isupper:
   875  000003                     ??_isdigit:
   876  000003                     ??_isspace:
   877  000003                     colourclick_writetoaddr@value:
   878                           	callstack 0
   879  000003                     I2C_2_Master_Read@ack:
   880                           	callstack 0
   881  000003                     ___wmul@multiplicand:
   882                           	callstack 0
   883  000003                     ___awmod@divisor:
   884                           	callstack 0
   885  000003                     fputc@fp:
   886                           	callstack 0
   887  000003                     strcpy@src:
   888                           	callstack 0
   889  000003                     strlen@a:
   890                           	callstack 0
   891  000003                     strncmp@_r:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x2
   895  000003                     	ds	1
   896  000004                     colourclick_writetoaddr@address:
   897                           	callstack 0
   898  000004                     I2C_2_Master_Read@tmp:
   899                           	callstack 0
   900                           
   901                           ; 1 bytes @ 0x3
   902  000004                     	ds	1
   903  000005                     ??_colourclick_init:
   904  000005                     ??_fputc:
   905  000005                     ??___fpclassifyf:
   906  000005                     ??_strcpy:
   907  000005                     ??___fltol:
   908  000005                     ??___xxtofl:
   909  000005                     ?_colourclick_readR:
   910                           	callstack 0
   911  000005                     ?_colourclick_readG:
   912                           	callstack 0
   913  000005                     ?_colourclick_readB:
   914                           	callstack 0
   915  000005                     ?_colourclick_readC:
   916                           	callstack 0
   917  000005                     ___awmod@counter:
   918                           	callstack 0
   919  000005                     ___wmul@product:
   920                           	callstack 0
   921  000005                     strncmp@n:
   922                           	callstack 0
   923  000005                     ___fleq@ff2:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x4
   927  000005                     	ds	1
   928  000006                     ___awmod@sign:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x5
   932  000006                     	ds	1
   933  000007                     ??_strncmp:
   934  000007                     ??_colourclick_readR:
   935  000007                     ??_colourclick_readG:
   936  000007                     ??_colourclick_readB:
   937  000007                     ??_colourclick_readC:
   938  000007                     ?_tolower:
   939                           	callstack 0
   940  000007                     ?___awdiv:
   941                           	callstack 0
   942  000007                     _isspace$3159:
   943                           	callstack 0
   944  000007                     ___awdiv@dividend:
   945                           	callstack 0
   946  000007                     strcpy@s:
   947                           	callstack 0
   948  000007                     tolower@c:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x6
   952  000007                     	ds	1
   953  000008                     ?_atoi:
   954                           	callstack 0
   955  000008                     atoi@s:
   956                           	callstack 0
   957  000008                     strncmp@l:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x7
   961  000008                     	ds	1
   962  000009                     ??_tolower:
   963  000009                     ??___fleq:
   964  000009                     ___fltol@sign1:
   965                           	callstack 0
   966  000009                     ___xxtofl@sign:
   967                           	callstack 0
   968  000009                     ___awdiv@divisor:
   969                           	callstack 0
   970  000009                     ___fpclassifyf@e:
   971                           	callstack 0
   972  000009                     strcpy@d:
   973                           	callstack 0
   974  000009                     ___aodiv@divisor:
   975                           	callstack 0
   976  000009                     ___aomod@divisor:
   977                           	callstack 0
   978                           
   979                           ; 8 bytes @ 0x8
   980  000009                     	ds	1
   981  00000A                     ??_atoi:
   982  00000A                     ?_stoa:
   983                           	callstack 0
   984  00000A                     ___fltol@exp1:
   985                           	callstack 0
   986  00000A                     ___xxtofl@exp:
   987                           	callstack 0
   988  00000A                     colourclick_readR@tmp:
   989                           	callstack 0
   990  00000A                     colourclick_readG@tmp:
   991                           	callstack 0
   992  00000A                     colourclick_readB@tmp:
   993                           	callstack 0
   994  00000A                     colourclick_readC@tmp:
   995                           	callstack 0
   996  00000A                     stoa@fp:
   997                           	callstack 0
   998  00000A                     fputs@s:
   999                           	callstack 0
  1000  00000A                     strncmp@r:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x9
  1004  00000A                     	ds	1
  1005  00000B                     ___awdiv@counter:
  1006                           	callstack 0
  1007  00000B                     ___xxtofl@arg:
  1008                           	callstack 0
  1009  00000B                     ___fpclassifyf@u:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0xA
  1013  00000B                     	ds	1
  1014  00000C                     ___awdiv@sign:
  1015                           	callstack 0
  1016  00000C                     colourclick_readRGBC@tmpval:
  1017                           	callstack 0
  1018  00000C                     stoa@s:
  1019                           	callstack 0
  1020  00000C                     fputs@fp:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0xB
  1024  00000C                     	ds	1
  1025  00000D                     ___awdiv@quotient:
  1026                           	callstack 0
  1027  00000D                     _tolower$3222:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0xC
  1031  00000D                     	ds	1
  1032  00000E                     ??_stoa:
  1033  00000E                     fputs@c:
  1034                           	callstack 0
  1035  00000E                     colourclick_readRGBC2@tmpval:
  1036                           	callstack 0
  1037  00000E                     atoi@neg:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0xD
  1041  00000E                     	ds	1
  1042  00000F                     ?___fldiv:
  1043                           	callstack 0
  1044  00000F                     ?___flmul:
  1045                           	callstack 0
  1046  00000F                     DCmotors_setPWM@m:
  1047                           	callstack 0
  1048  00000F                     fputs@i:
  1049                           	callstack 0
  1050  00000F                     ___fldiv@b:
  1051                           	callstack 0
  1052  00000F                     ___flmul@b:
  1053                           	callstack 0
  1054  00000F                     stoa@nuls:
  1055                           	callstack 0
  1056                           
  1057                           ; 7 bytes @ 0xE
  1058  00000F                     	ds	1
  1059  000010                     colourclick_readRGBC2@mode:
  1060                           	callstack 0
  1061  000010                     _atoi$3128:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0xF
  1065  000010                     	ds	1
  1066  000011                     ??_colourclick_readRGBC2:
  1067  000011                     ??_DCmotors_setPWM:
  1068  000011                     ?_pad:
  1069                           	callstack 0
  1070  000011                     ___aodiv@counter:
  1071                           	callstack 0
  1072  000011                     ___aomod@counter:
  1073                           	callstack 0
  1074  000011                     pad@fp:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x10
  1078  000011                     	ds	1
  1079  000012                     ___aodiv@sign:
  1080                           	callstack 0
  1081  000012                     ___aomod@sign:
  1082                           	callstack 0
  1083  000012                     _atoi$3130:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x11
  1087  000012                     	ds	1
  1088  000013                     ?_abs:
  1089                           	callstack 0
  1090  000013                     pad@buf:
  1091                           	callstack 0
  1092  000013                     abs@a:
  1093                           	callstack 0
  1094  000013                     ___fldiv@a:
  1095                           	callstack 0
  1096  000013                     ___flmul@a:
  1097                           	callstack 0
  1098  000013                     ___aodiv@quotient:
  1099                           	callstack 0
  1100                           
  1101                           ; 8 bytes @ 0x12
  1102  000013                     	ds	1
  1103  000014                     _atoi$3129:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x13
  1107  000014                     	ds	1
  1108  000015                     ??_abs:
  1109  000015                     pad@p:
  1110                           	callstack 0
  1111  000015                     atoi@n:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x14
  1115  000015                     	ds	1
  1116  000016                     stoa@i:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x15
  1120  000016                     	ds	1
  1121  000017                     ??___fldiv:
  1122  000017                     ??___flmul:
  1123  000017                     ??_pad:
  1124                           
  1125                           ; 1 bytes @ 0x16
  1126  000017                     	ds	1
  1127  000018                     DCmotors_setPWM@PWMduty:
  1128                           	callstack 0
  1129  000018                     pad@i:
  1130                           	callstack 0
  1131  000018                     stoa@w:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x17
  1135  000018                     	ds	2
  1136  00001A                     forward@mL:
  1137                           	callstack 0
  1138  00001A                     reverse@mL:
  1139                           	callstack 0
  1140  00001A                     stop@mL:
  1141                           	callstack 0
  1142  00001A                     right@mL:
  1143                           	callstack 0
  1144  00001A                     pad@w:
  1145                           	callstack 0
  1146  00001A                     stoa@cp:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x19
  1150  00001A                     	ds	1
  1151  00001B                     ___flmul@sign:
  1152                           	callstack 0
  1153  00001B                     ___fldiv@rem:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x1A
  1157  00001B                     	ds	1
  1158  00001C                     ?_dtoa:
  1159                           	callstack 0
  1160  00001C                     forward@mR:
  1161                           	callstack 0
  1162  00001C                     reverse@mR:
  1163                           	callstack 0
  1164  00001C                     stop@mR:
  1165                           	callstack 0
  1166  00001C                     right@mR:
  1167                           	callstack 0
  1168  00001C                     dtoa@fp:
  1169                           	callstack 0
  1170  00001C                     stoa@p:
  1171                           	callstack 0
  1172  00001C                     ___flmul@grs:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x1B
  1176  00001C                     	ds	2
  1177  00001E                     right@deg:
  1178                           	callstack 0
  1179  00001E                     stoa@l:
  1180                           	callstack 0
  1181  00001E                     dtoa@d:
  1182                           	callstack 0
  1183                           
  1184                           ; 8 bytes @ 0x1D
  1185  00001E                     	ds	1
  1186  00001F                     ___fldiv@sign:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x1E
  1190  00001F                     	ds	1
  1191  000020                     ??_right:
  1192  000020                     ___flmul@aexp:
  1193                           	callstack 0
  1194  000020                     ___fldiv@new_exp:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x1F
  1198  000020                     	ds	1
  1199  000021                     ___flmul@bexp:
  1200                           	callstack 0
  1201                           
  1202                           ; 1 bytes @ 0x20
  1203  000021                     	ds	1
  1204  000022                     right@delay:
  1205                           	callstack 0
  1206  000022                     ___fldiv@grs:
  1207                           	callstack 0
  1208  000022                     ___flmul@prod:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x21
  1212  000022                     	ds	2
  1213  000024                     right@i:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x23
  1217  000024                     	ds	2
  1218  000026                     ??_dtoa:
  1219  000026                     ___fldiv@bexp:
  1220                           	callstack 0
  1221  000026                     ___flmul@temp:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x25
  1225  000026                     	ds	1
  1226  000027                     ___fldiv@aexp:
  1227                           	callstack 0
  1228                           
  1229                           ; 1 bytes @ 0x26
  1230  000027                     	ds	1
  1231  000028                     ?___fladd:
  1232                           	callstack 0
  1233  000028                     ?_floorf:
  1234                           	callstack 0
  1235  000028                     colourcards_normaliseRGBC@abs:
  1236                           	callstack 0
  1237  000028                     ___flge@ff1:
  1238                           	callstack 0
  1239  000028                     ___fladd@b:
  1240                           	callstack 0
  1241  000028                     floorf@x:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x27
  1245  000028                     	ds	2
  1246  00002A                     colourcards_normaliseRGBC@rel:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x29
  1250  00002A                     	ds	2
  1251  00002C                     ??_floorf:
  1252  00002C                     colourcards_normaliseRGBC@R:
  1253                           	callstack 0
  1254  00002C                     ___flge@ff2:
  1255                           	callstack 0
  1256  00002C                     ___fladd@a:
  1257                           	callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x2B
  1260  00002C                     	ds	2
  1261  00002E                     colourcards_normaliseRGBC@G:
  1262                           	callstack 0
  1263  00002E                     _dtoa$3026:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x2D
  1267  00002E                     	ds	2
  1268  000030                     ??___fladd:
  1269  000030                     ??___flge:
  1270  000030                     colourcards_normaliseRGBC@B:
  1271                           	callstack 0
  1272  000030                     dtoa@p:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x2F
  1276  000030                     	ds	2
  1277  000032                     colourcards_normaliseRGBC@C:
  1278                           	callstack 0
  1279  000032                     dtoa@w:
  1280                           	callstack 0
  1281  000032                     floorf@m:
  1282                           	callstack 0
  1283                           
  1284                           ; 4 bytes @ 0x31
  1285  000032                     	ds	2
  1286  000034                     ___fladd@signs:
  1287                           	callstack 0
  1288  000034                     dtoa@s:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x33
  1292  000034                     	ds	1
  1293  000035                     ___fladd@aexp:
  1294                           	callstack 0
  1295                           
  1296                           ; 1 bytes @ 0x34
  1297  000035                     	ds	1
  1298  000036                     ___fladd@bexp:
  1299                           	callstack 0
  1300  000036                     floorf@e:
  1301                           	callstack 0
  1302  000036                     dtoa@n:
  1303                           	callstack 0
  1304                           
  1305                           ; 8 bytes @ 0x35
  1306  000036                     	ds	1
  1307  000037                     ___fladd@grs:
  1308                           	callstack 0
  1309                           
  1310                           ; 1 bytes @ 0x36
  1311  000037                     	ds	1
  1312  000038                     ?___flsub:
  1313                           	callstack 0
  1314  000038                     left@mL:
  1315                           	callstack 0
  1316  000038                     ___flsub@b:
  1317                           	callstack 0
  1318  000038                     floorf@u:
  1319                           	callstack 0
  1320                           
  1321                           ; 4 bytes @ 0x37
  1322  000038                     	ds	2
  1323  00003A                     left@mR:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x39
  1327  00003A                     	ds	2
  1328  00003C                     left@deg:
  1329                           	callstack 0
  1330  00003C                     ___flsub@a:
  1331                           	callstack 0
  1332                           
  1333                           ; 4 bytes @ 0x3B
  1334  00003C                     	ds	2
  1335  00003E                     ??_left:
  1336  00003E                     dtoa@i:
  1337                           	callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x3D
  1340  00003E                     	ds	1
  1341  00003F                     left@delay:
  1342                           	callstack 0
  1343                           
  1344                           ; 4 bytes @ 0x3E
  1345  00003F                     	ds	1
  1346  000040                     ?_efgtoa:
  1347                           	callstack 0
  1348  000040                     efgtoa@fp:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x3F
  1352  000040                     	ds	2
  1353  000042                     efgtoa@f:
  1354                           	callstack 0
  1355                           
  1356                           ; 4 bytes @ 0x41
  1357  000042                     	ds	1
  1358  000043                     left@i:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x42
  1362  000043                     	ds	2
  1363  000045                     turnleft@mL:
  1364                           	callstack 0
  1365  000045                     turnright@mL:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x44
  1369  000045                     	ds	1
  1370  000046                     efgtoa@c:
  1371                           	callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x45
  1374  000046                     	ds	1
  1375  000047                     ??_efgtoa:
  1376  000047                     turnleft@mR:
  1377                           	callstack 0
  1378  000047                     turnright@mR:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x46
  1382  000047                     	ds	2
  1383  000049                     turnleft@deg:
  1384                           	callstack 0
  1385  000049                     turnright@deg:
  1386                           	callstack 0
  1387                           
  1388                           ; 2 bytes @ 0x48
  1389  000049                     	ds	2
  1390  00004B                     colourcards_readRGBC@abs:
  1391                           	callstack 0
  1392                           
  1393                           ; 2 bytes @ 0x4A
  1394  00004B                     	ds	1
  1395  00004C                     ?_vfpfcnvrt:
  1396                           	callstack 0
  1397  00004C                     vfpfcnvrt@fp:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x4B
  1401  00004C                     	ds	1
  1402  00004D                     colourcards_readRGBC@mL:
  1403                           	callstack 0
  1404                           
  1405                           ; 2 bytes @ 0x4C
  1406  00004D                     	ds	1
  1407  00004E                     vfpfcnvrt@fmt:
  1408                           	callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x4D
  1411  00004E                     	ds	1
  1412  00004F                     colourcards_readRGBC@mR:
  1413                           	callstack 0
  1414                           
  1415                           ; 2 bytes @ 0x4E
  1416  00004F                     	ds	1
  1417  000050                     vfpfcnvrt@ap:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x4F
  1421  000050                     	ds	1
  1422  000051                     ??_colourcards_readRGBC:
  1423                           
  1424                           ; 1 bytes @ 0x50
  1425  000051                     	ds	1
  1426  000052                     ??_vfpfcnvrt:
  1427                           
  1428                           ; 1 bytes @ 0x51
  1429  000052                     	ds	1
  1430  000053                     colourcards_readRGBC@rel:
  1431                           	callstack 0
  1432                           
  1433                           ; 12 bytes @ 0x52
  1434  000053                     	ds	3
  1435  000056                     ?_vfprintf:
  1436                           	callstack 0
  1437  000056                     vfprintf@fp:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x55
  1441  000056                     	ds	2
  1442  000058                     vfprintf@fmt:
  1443                           	callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x57
  1446  000058                     	ds	2
  1447  00005A                     vfprintf@ap:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x59
  1451  00005A                     	ds	2
  1452  00005C                     vfprintf@cfmt:
  1453                           	callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x5B
  1456  00005C                     	ds	2
  1457  00005E                     ??_colourcards_testingRGBC:
  1458  00005E                     
  1459                           ; 1 bytes @ 0x5D
  1460  00005E                     	ds	2
  1461                           
  1462 ;;
  1463 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1464 ;;
  1465 ;; *************** function _main *****************
  1466 ;; Defined at:
  1467 ;;		line 7 in file "main.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  motorR          9  131[BANK0 ] struct .
  1472 ;;  motorL          9  122[BANK0 ] struct .
  1473 ;;  current         8  114[BANK0 ] struct .
  1474 ;;  PWMperiod       1    0        unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1485 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;Total ram usage:       28 bytes
  1489 ;; Hardware stack levels required when called: 9
  1490 ;; This function calls:
  1491 ;;		_ADC_init
  1492 ;;		_DCmotors_init
  1493 ;;		_USART4_init
  1494 ;;		_checkbatterylevel
  1495 ;;		_colourcards_readRGBC
  1496 ;;		_colourcards_testingRGBC
  1497 ;;		_colourclickLEDs_C
  1498 ;;		_colourclick_init
  1499 ;; This function is called by:
  1500 ;;		Startup code after reset
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text0
  1505  005258                     __ptext0:
  1506                           	callstack 0
  1507  005258                     _main:
  1508                           	callstack 22
  1509  005258                     
  1510                           ;main.c: 12:     DCmotors_turntime = 100;
  1511  005258  0E00               	movlw	0
  1512  00525A  0101               	movlb	1	; () banked
  1513  00525C  6FE6               	movwf	(_DCmotors_turntime+1)& (0+255),b	;volatile
  1514  00525E  0E64               	movlw	100
  1515  005260  6FE5               	movwf	_DCmotors_turntime& (0+255),b	;volatile
  1516                           
  1517                           ;main.c: 13:     interrupts_lowerbound = 0;
  1518  005262  0E00               	movlw	0
  1519  005264  0100               	movlb	0	; () banked
  1520  005266  6FF5               	movwf	(_interrupts_lowerbound+1)& (0+255),b	;volatile
  1521  005268  0E00               	movlw	0
  1522  00526A  6FF4               	movwf	_interrupts_lowerbound& (0+255),b	;volatile
  1523                           
  1524                           ;main.c: 14:     interrupts_upperbound = 32767;
  1525  00526C  0E7F               	movlw	127
  1526  00526E  6FFE               	movwf	(_interrupts_upperbound+1)& (0+255),b	;volatile
  1527  005270  69FD               	setf	_interrupts_upperbound& (0+255),b	;volatile
  1528                           
  1529                           ;main.c: 15:     colourcard_flag = 0;
  1530  005272  0E00               	movlw	0
  1531  005274  6FF8               	movwf	_colourcard_flag& (0+255),b	;volatile
  1532                           
  1533                           ;main.c: 16:     unknowncard_flag = 0;
  1534  005276  0E00               	movlw	0
  1535  005278  6FF7               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1536                           
  1537                           ;main.c: 17:     returnhome_flag = 0;
  1538  00527A  0E00               	movlw	0
  1539  00527C  6FF6               	movwf	_returnhome_flag& (0+255),b	;volatile
  1540                           
  1541                           ;main.c: 19:     DC_motor motorL;;main.c: 20:     motorL.power=0;
  1542  00527E  0E00               	movlw	0
  1543  005280  6FDA               	movwf	main@motorL& (0+255),b
  1544                           
  1545                           ;main.c: 21:     motorL.direction=1;
  1546  005282  0E01               	movlw	1
  1547  005284  6FDB               	movwf	(main@motorL+1)& (0+255),b
  1548  005286                     
  1549                           ; BSR set to: 0
  1550                           ;main.c: 22:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1551  005286  0EA3               	movlw	163
  1552  005288  6FDC               	movwf	(main@motorL+2)& (0+255),b
  1553  00528A  0E0F               	movlw	15
  1554  00528C  6FDD               	movwf	(main@motorL+3)& (0+255),b
  1555  00528E                     
  1556                           ; BSR set to: 0
  1557                           ;main.c: 23:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1558  00528E  0E7D               	movlw	125
  1559  005290  6FDE               	movwf	(main@motorL+4)& (0+255),b
  1560  005292  0E0F               	movlw	15
  1561  005294  6FDF               	movwf	(main@motorL+5)& (0+255),b
  1562                           
  1563                           ;main.c: 24:     motorL.dir_pin=4;
  1564  005296  0E04               	movlw	4
  1565  005298  6FE0               	movwf	(main@motorL+6)& (0+255),b
  1566  00529A                     
  1567                           ; BSR set to: 0
  1568                           ;main.c: 25:     motorL.PWMperiod=PWMperiod;
  1569  00529A  0E00               	movlw	0
  1570  00529C  6FE2               	movwf	(main@motorL+8)& (0+255),b
  1571  00529E  0E63               	movlw	99
  1572  0052A0  6FE1               	movwf	(main@motorL+7)& (0+255),b
  1573                           
  1574                           ;main.c: 27:     DC_motor motorR;;main.c: 28:     motorR.power=0;
  1575  0052A2  0E00               	movlw	0
  1576  0052A4  6FE3               	movwf	main@motorR& (0+255),b
  1577                           
  1578                           ;main.c: 29:     motorR.direction=1;
  1579  0052A6  0E01               	movlw	1
  1580  0052A8  6FE4               	movwf	(main@motorR+1)& (0+255),b
  1581  0052AA                     
  1582                           ; BSR set to: 0
  1583                           ;main.c: 30:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1584  0052AA  0EA0               	movlw	160
  1585  0052AC  6FE5               	movwf	(main@motorR+2)& (0+255),b
  1586  0052AE  0E0F               	movlw	15
  1587  0052B0  6FE6               	movwf	(main@motorR+3)& (0+255),b
  1588  0052B2                     
  1589                           ; BSR set to: 0
  1590                           ;main.c: 31:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1591  0052B2  0E7F               	movlw	127
  1592  0052B4  6FE7               	movwf	(main@motorR+4)& (0+255),b
  1593  0052B6  0E0F               	movlw	15
  1594  0052B8  6FE8               	movwf	(main@motorR+5)& (0+255),b
  1595                           
  1596                           ;main.c: 32:     motorR.dir_pin=6;
  1597  0052BA  0E06               	movlw	6
  1598  0052BC  6FE9               	movwf	(main@motorR+6)& (0+255),b
  1599  0052BE                     
  1600                           ; BSR set to: 0
  1601                           ;main.c: 33:     motorR.PWMperiod=PWMperiod;
  1602  0052BE  0E00               	movlw	0
  1603  0052C0  6FEB               	movwf	(main@motorR+8)& (0+255),b
  1604  0052C2  0E63               	movlw	99
  1605  0052C4  6FEA               	movwf	(main@motorR+7)& (0+255),b
  1606  0052C6                     
  1607                           ; BSR set to: 0
  1608                           ;main.c: 35:     ADC_init();
  1609  0052C6  EC3F  F032         	call	_ADC_init	;wreg free
  1610  0052CA                     
  1611                           ;main.c: 36:     colourclick_init();
  1612  0052CA  EC3A  F031         	call	_colourclick_init	;wreg free
  1613  0052CE                     
  1614                           ;main.c: 37:     DCmotors_init(PWMperiod);
  1615  0052CE  0E63               	movlw	99
  1616  0052D0  EC6D  F030         	call	_DCmotors_init
  1617  0052D4                     
  1618                           ;main.c: 38:     USART4_init();
  1619  0052D4  EC2F  F032         	call	_USART4_init	;wreg free
  1620  0052D8                     
  1621                           ;main.c: 39:     checkbatterylevel();
  1622  0052D8  EC1F  F032         	call	_checkbatterylevel	;wreg free
  1623  0052DC                     
  1624                           ;main.c: 45:     colourcards_testingRGBC();
  1625  0052DC  EC88  F00D         	call	_colourcards_testingRGBC	;wreg free
  1626  0052E0                     l59:
  1627  0052E0  A48E               	btfss	142,2,c	;volatile
  1628  0052E2  EF75  F029         	goto	u7891
  1629  0052E6  EF77  F029         	goto	u7890
  1630  0052EA                     u7891:
  1631  0052EA  EF7E  F029         	goto	l63
  1632  0052EE                     u7890:
  1633  0052EE  B68E               	btfsc	142,3,c	;volatile
  1634  0052F0  EF7C  F029         	goto	u7901
  1635  0052F4  EF7E  F029         	goto	u7900
  1636  0052F8                     u7901:
  1637  0052F8  EF70  F029         	goto	l59
  1638  0052FC                     u7900:
  1639  0052FC                     l63:
  1640                           
  1641                           ;main.c: 57:     LATDbits.LATD3 = 1;
  1642  0052FC  867C               	bsf	124,3,c	;volatile
  1643  0052FE                     
  1644                           ;main.c: 58:     colourclickLEDs_C(1);
  1645  0052FE  0E01               	movlw	1
  1646  005300  ECFE  F031         	call	_colourclickLEDs_C
  1647  005304                     
  1648                           ;main.c: 59:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1649  005304  0E52               	movlw	82
  1650  005306  0100               	movlb	0	; () banked
  1651  005308  6FD1               	movwf	(??_main+1)& (0+255),b
  1652  00530A  0E2B               	movlw	43
  1653  00530C  6FD0               	movwf	??_main& (0+255),b
  1654  00530E  0E00               	movlw	0
  1655  005310                     u8327:
  1656  005310  2EE8               	decfsz	wreg,f,c
  1657  005312  D7FE               	bra	u8327
  1658  005314  2FD0               	decfsz	??_main& (0+255),f,b
  1659  005316  D7FC               	bra	u8327
  1660  005318  2FD1               	decfsz	(??_main+1)& (0+255),f,b
  1661  00531A  D7FA               	bra	u8327
  1662  00531C  F000               	nop	
  1663  00531E                     l65:
  1664  00531E  A48E               	btfss	142,2,c	;volatile
  1665  005320  EF94  F029         	goto	u7911
  1666  005324  EF96  F029         	goto	u7910
  1667  005328                     u7911:
  1668  005328  EF9D  F029         	goto	l6349
  1669  00532C                     u7910:
  1670  00532C  B68E               	btfsc	142,3,c	;volatile
  1671  00532E  EF9B  F029         	goto	u7921
  1672  005332  EF9D  F029         	goto	u7920
  1673  005336                     u7921:
  1674  005336  EF8F  F029         	goto	l65
  1675  00533A                     u7920:
  1676  00533A                     l6349:
  1677                           
  1678                           ;main.c: 69:         colourcards_readRGBC(&current, &motorL, &motorR);
  1679  00533A  0ED2               	movlw	low main@current
  1680  00533C  6E4B               	movwf	colourcards_readRGBC@abs^0,c
  1681  00533E  0E00               	movlw	high main@current
  1682  005340  6E4C               	movwf	(colourcards_readRGBC@abs+1)^0,c
  1683  005342  0EDA               	movlw	low main@motorL
  1684  005344  6E4D               	movwf	colourcards_readRGBC@mL^0,c
  1685  005346  0E00               	movlw	high main@motorL
  1686  005348  6E4E               	movwf	(colourcards_readRGBC@mL+1)^0,c
  1687  00534A  0EE3               	movlw	low main@motorR
  1688  00534C  6E4F               	movwf	colourcards_readRGBC@mR^0,c
  1689  00534E  0E00               	movlw	high main@motorR
  1690  005350  6E50               	movwf	(colourcards_readRGBC@mR+1)^0,c
  1691  005352  ECF1  F011         	call	_colourcards_readRGBC	;wreg free
  1692  005356  EF8F  F029         	goto	l65
  1693  00535A  EF00  F000         	goto	start
  1694  00535E                     __end_of_main:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _colourclick_init *****************
  1698 ;; Defined at:
  1699 ;;		line 15 in file "colour_click.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;Total ram usage:        1 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 3
  1720 ;; This function calls:
  1721 ;;		_I2C_2_Master_Init
  1722 ;;		_colourclickLEDs_init
  1723 ;;		_colourclick_writetoaddr
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text1
  1730  006274                     __ptext1:
  1731                           	callstack 0
  1732  006274                     _colourclick_init:
  1733                           	callstack 27
  1734  006274                     
  1735                           ;colour_click.c: 18:     I2C_2_Master_Init();
  1736  006274  ECC2  F031         	call	_I2C_2_Master_Init	;wreg free
  1737  006278                     
  1738                           ;colour_click.c: 21:   colourclick_writetoaddr(0x00, 0x01);
  1739  006278  0E01               	movlw	1
  1740  00627A  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1741  00627C  0E00               	movlw	0
  1742  00627E  EC0F  F032         	call	_colourclick_writetoaddr
  1743  006282                     
  1744                           ;colour_click.c: 22:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1745  006282  0E3F               	movlw	63
  1746  006284  6E05               	movwf	??_colourclick_init^0,c
  1747  006286  0E55               	movlw	85
  1748  006288                     u8337:
  1749  006288  2EE8               	decfsz	wreg,f,c
  1750  00628A  D7FE               	bra	u8337
  1751  00628C  2E05               	decfsz	??_colourclick_init^0,f,c
  1752  00628E  D7FC               	bra	u8337
  1753  006290  F000               	nop	
  1754  006292                     
  1755                           ;colour_click.c: 25:  colourclick_writetoaddr(0x00, 0x03);
  1756  006292  0E03               	movlw	3
  1757  006294  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1758  006296  0E00               	movlw	0
  1759  006298  EC0F  F032         	call	_colourclick_writetoaddr
  1760  00629C                     
  1761                           ;colour_click.c: 28:  colourclick_writetoaddr(0x01, 0xD5);
  1762  00629C  0ED5               	movlw	213
  1763  00629E  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1764  0062A0  0E01               	movlw	1
  1765  0062A2  EC0F  F032         	call	_colourclick_writetoaddr
  1766  0062A6                     
  1767                           ;colour_click.c: 30:     colourclickLEDs_init();
  1768  0062A6  EC6F  F032         	call	_colourclickLEDs_init	;wreg free
  1769  0062AA  0012               	return		;funcret
  1770  0062AC                     __end_of_colourclick_init:
  1771                           	callstack 0
  1772                           
  1773 ;; *************** function _colourclick_writetoaddr *****************
  1774 ;; Defined at:
  1775 ;;		line 39 in file "colour_click.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  address         1    wreg     unsigned char 
  1778 ;;  value           1    2[COMRAM] unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  address         1    3[COMRAM] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1790 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;Total ram usage:        2 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 2
  1797 ;; This function calls:
  1798 ;;		_I2C_2_Master_Start
  1799 ;;		_I2C_2_Master_Stop
  1800 ;;		_I2C_2_Master_Write
  1801 ;; This function is called by:
  1802 ;;		_colourclick_init
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text2
  1807  00641E                     __ptext2:
  1808                           	callstack 0
  1809  00641E                     _colourclick_writetoaddr:
  1810                           	callstack 27
  1811                           
  1812                           ;incstack = 0
  1813                           ;colourclick_writetoaddr@address stored from wreg
  1814  00641E  6E04               	movwf	colourclick_writetoaddr@address^0,c
  1815  006420                     
  1816                           ;colour_click.c: 39: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 40: {;colour_click.c: 41:     I2C_2_Master_Start();
  1817  006420  EC87  F032         	call	_I2C_2_Master_Start	;wreg free
  1818                           
  1819                           ;colour_click.c: 42:     I2C_2_Master_Write(0x52 | 0x00);
  1820  006424  0E52               	movlw	82
  1821  006426  EC76  F032         	call	_I2C_2_Master_Write
  1822                           
  1823                           ;colour_click.c: 43:     I2C_2_Master_Write(0x80 | address);
  1824  00642A  5004               	movf	colourclick_writetoaddr@address^0,w,c
  1825  00642C  0980               	iorlw	128
  1826  00642E  EC76  F032         	call	_I2C_2_Master_Write
  1827                           
  1828                           ;colour_click.c: 44:     I2C_2_Master_Write(value);
  1829  006432  5003               	movf	colourclick_writetoaddr@value^0,w,c
  1830  006434  EC76  F032         	call	_I2C_2_Master_Write
  1831                           
  1832                           ;colour_click.c: 45:     I2C_2_Master_Stop();
  1833  006438  EC82  F032         	call	_I2C_2_Master_Stop	;wreg free
  1834  00643C  0012               	return		;funcret
  1835  00643E                     __end_of_colourclick_writetoaddr:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function _colourclickLEDs_init *****************
  1839 ;; Defined at:
  1840 ;;		line 49 in file "buttons_n_LEDs.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;Total ram usage:        0 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 1
  1861 ;; This function calls:
  1862 ;;		_colourclickLEDs_C
  1863 ;; This function is called by:
  1864 ;;		_colourclick_init
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text3
  1869  0064DE                     __ptext3:
  1870                           	callstack 0
  1871  0064DE                     _colourclickLEDs_init:
  1872                           	callstack 28
  1873  0064DE                     
  1874                           ;buttons_n_LEDs.c: 52:     TRISGbits.TRISG1 = 0;
  1875  0064DE  9287               	bcf	135,1,c	;volatile
  1876                           
  1877                           ;buttons_n_LEDs.c: 53:     TRISAbits.TRISA4 = 0;
  1878  0064E0  9881               	bcf	129,4,c	;volatile
  1879                           
  1880                           ;buttons_n_LEDs.c: 54:     TRISFbits.TRISF7 = 0;
  1881  0064E2  9E86               	bcf	134,7,c	;volatile
  1882  0064E4                     
  1883                           ;buttons_n_LEDs.c: 57:     colourclickLEDs_C(0);
  1884  0064E4  0E00               	movlw	0
  1885  0064E6  ECFE  F031         	call	_colourclickLEDs_C
  1886  0064EA  0012               	return		;funcret
  1887  0064EC                     __end_of_colourclickLEDs_init:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _I2C_2_Master_Init *****************
  1891 ;; Defined at:
  1892 ;;		line 8 in file "I2C.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_colourclick_init
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text4
  1920  006384                     __ptext4:
  1921                           	callstack 0
  1922  006384                     _I2C_2_Master_Init:
  1923                           	callstack 29
  1924  006384                     
  1925                           ;I2C.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  1926  006384  010E               	movlb	14	; () banked
  1927  006386  51D9               	movf	217,w,b	;volatile
  1928  006388  0BF0               	andlw	-16
  1929  00638A  0908               	iorlw	8
  1930  00638C  6FD9               	movwf	217,b	;volatile
  1931  00638E                     
  1932                           ; BSR set to: 14
  1933                           ;I2C.c: 12:   SSP2CON1bits.SSPEN = 1;
  1934  00638E  8BD9               	bsf	217,5,b	;volatile
  1935                           
  1936                           ;I2C.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  1937  006390  0E9F               	movlw	159
  1938  006392  6FD6               	movwf	214,b	;volatile
  1939  006394                     
  1940                           ; BSR set to: 14
  1941                           ;I2C.c: 16:   TRISDbits.TRISD5 = 1;
  1942  006394  8A84               	bsf	132,5,c	;volatile
  1943  006396                     
  1944                           ; BSR set to: 14
  1945                           ;I2C.c: 17:   TRISDbits.TRISD6 = 1;
  1946  006396  8C84               	bsf	132,6,c	;volatile
  1947  006398                     
  1948                           ; BSR set to: 14
  1949                           ;I2C.c: 18:   ANSELDbits.ANSELD5=0;
  1950  006398  9BA7               	bcf	167,5,b	;volatile
  1951  00639A                     
  1952                           ; BSR set to: 14
  1953                           ;I2C.c: 19:   ANSELDbits.ANSELD6=0;
  1954  00639A  9DA7               	bcf	167,6,b	;volatile
  1955                           
  1956                           ;I2C.c: 20:   SSP2DATPPS=0x1D;
  1957  00639C  0E1D               	movlw	29
  1958  00639E  6F1D               	movwf	29,b	;volatile
  1959                           
  1960                           ;I2C.c: 21:   SSP2CLKPPS=0x1E;
  1961  0063A0  0E1E               	movlw	30
  1962  0063A2  6F1C               	movwf	28,b	;volatile
  1963                           
  1964                           ;I2C.c: 22:   RD5PPS=0x1C;
  1965  0063A4  0E1C               	movlw	28
  1966  0063A6  6F6F               	movwf	111,b	;volatile
  1967                           
  1968                           ;I2C.c: 23:   RD6PPS=0x1B;
  1969  0063A8  0E1B               	movlw	27
  1970  0063AA  6F70               	movwf	112,b	;volatile
  1971  0063AC                     
  1972                           ; BSR set to: 14
  1973  0063AC  0012               	return		;funcret
  1974  0063AE                     __end_of_I2C_2_Master_Init:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _colourcards_testingRGBC *****************
  1978 ;; Defined at:
  1979 ;;		line 125 in file "colour_cards.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  buf            30    0[BANK1 ] unsigned char [30]
  1984 ;;  rel            12   38[BANK1 ] struct .
  1985 ;;  abs             8   30[BANK1 ] struct .
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Totals:         2       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;Total ram usage:       52 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; Hardware stack levels required when called: 8
  2002 ;; This function calls:
  2003 ;;		___flge
  2004 ;;		_colourcards_normaliseRGBC
  2005 ;;		_colourclickLEDs_C
  2006 ;;		_colourclick_readRGBC
  2007 ;;		_colourclick_readRGBC2
  2008 ;;		_sendStringSerial4
  2009 ;;		_sprintf
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text5
  2016  001B10                     __ptext5:
  2017                           	callstack 0
  2018  001B10                     _colourcards_testingRGBC:
  2019                           	callstack 22
  2020  001B10                     
  2021                           ;colour_cards.c: 127:     INTCONbits.GIE = 0;
  2022  001B10  9EF2               	bcf	242,7,c	;volatile
  2023  001B12                     l169:
  2024  001B12  A48E               	btfss	142,2,c	;volatile
  2025  001B14  EF8E  F00D         	goto	u7381
  2026  001B18  EF90  F00D         	goto	u7380
  2027  001B1C                     u7381:
  2028  001B1C  EF97  F00D         	goto	l173
  2029  001B20                     u7380:
  2030  001B20  B68E               	btfsc	142,3,c	;volatile
  2031  001B22  EF95  F00D         	goto	u7391
  2032  001B26  EF97  F00D         	goto	u7390
  2033  001B2A                     u7391:
  2034  001B2A  EF89  F00D         	goto	l169
  2035  001B2E                     u7390:
  2036  001B2E                     l173:
  2037                           
  2038                           ;colour_cards.c: 130:     LATDbits.LATD3 = 1;
  2039  001B2E  867C               	bsf	124,3,c	;volatile
  2040  001B30                     
  2041                           ;colour_cards.c: 131:     colourclickLEDs_C(1);
  2042  001B30  0E01               	movlw	1
  2043  001B32  ECFE  F031         	call	_colourclickLEDs_C
  2044  001B36                     
  2045                           ;colour_cards.c: 132:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2046  001B36  0E52               	movlw	82
  2047  001B38  6E5F               	movwf	(??_colourcards_testingRGBC+1)^0,c
  2048  001B3A  0E2B               	movlw	43
  2049  001B3C  6E5E               	movwf	??_colourcards_testingRGBC^0,c
  2050  001B3E  0E00               	movlw	0
  2051  001B40                     u8347:
  2052  001B40  2EE8               	decfsz	wreg,f,c
  2053  001B42  D7FE               	bra	u8347
  2054  001B44  2E5E               	decfsz	??_colourcards_testingRGBC^0,f,c
  2055  001B46  D7FC               	bra	u8347
  2056  001B48  2E5F               	decfsz	(??_colourcards_testingRGBC+1)^0,f,c
  2057  001B4A  D7FA               	bra	u8347
  2058  001B4C  D000               	nop2	
  2059  001B4E                     l175:
  2060  001B4E  A48E               	btfss	142,2,c	;volatile
  2061  001B50  EFAC  F00D         	goto	u7401
  2062  001B54  EFAE  F00D         	goto	u7400
  2063  001B58                     u7401:
  2064  001B58  EFB5  F00D         	goto	l6117
  2065  001B5C                     u7400:
  2066  001B5C  B68E               	btfsc	142,3,c	;volatile
  2067  001B5E  EFB3  F00D         	goto	u7411
  2068  001B62  EFB5  F00D         	goto	u7410
  2069  001B66                     u7411:
  2070  001B66  EFA7  F00D         	goto	l175
  2071  001B6A                     u7410:
  2072  001B6A                     l6117:
  2073                           
  2074                           ;colour_cards.c: 138:         colourclick_readRGBC(&abs);
  2075  001B6A  0ECA               	movlw	low colourcards_testingRGBC@abs
  2076  001B6C  6E0C               	movwf	colourclick_readRGBC@tmpval^0,c
  2077  001B6E  0E01               	movlw	high colourcards_testingRGBC@abs
  2078  001B70  6E0D               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2079  001B72  ECD4  F02E         	call	_colourclick_readRGBC	;wreg free
  2080                           
  2081                           ;colour_cards.c: 139:         colourcards_normaliseRGBC(&abs, &rel);
  2082  001B76  0ECA               	movlw	low colourcards_testingRGBC@abs
  2083  001B78  6E28               	movwf	colourcards_normaliseRGBC@abs^0,c
  2084  001B7A  0E01               	movlw	high colourcards_testingRGBC@abs
  2085  001B7C  6E29               	movwf	(colourcards_normaliseRGBC@abs+1)^0,c
  2086  001B7E  0ED2               	movlw	low colourcards_testingRGBC@rel
  2087  001B80  6E2A               	movwf	colourcards_normaliseRGBC@rel^0,c
  2088  001B82  0E01               	movlw	high colourcards_testingRGBC@rel
  2089  001B84  6E2B               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  2090  001B86  EC6F  F026         	call	_colourcards_normaliseRGBC	;wreg free
  2091  001B8A                     
  2092                           ;colour_cards.c: 141:         char buf[30];;colour_cards.c: 143:         if ((rel.R>0.54
      +                          ) && (rel.G<0.245) && (rel.B<0.18)) {
  2093  001B8A  0E71               	movlw	113
  2094  001B8C  6E28               	movwf	___flge@ff1^0,c
  2095  001B8E  0E3D               	movlw	61
  2096  001B90  6E29               	movwf	(___flge@ff1+1)^0,c
  2097  001B92  0E0A               	movlw	10
  2098  001B94  6E2A               	movwf	(___flge@ff1+2)^0,c
  2099  001B96  0E3F               	movlw	63
  2100  001B98  6E2B               	movwf	(___flge@ff1+3)^0,c
  2101  001B9A  C1D2  F02C         	movff	colourcards_testingRGBC@rel,___flge@ff2
  2102  001B9E  C1D3  F02D         	movff	colourcards_testingRGBC@rel+1,___flge@ff2+1
  2103  001BA2  C1D4  F02E         	movff	colourcards_testingRGBC@rel+2,___flge@ff2+2
  2104  001BA6  C1D5  F02F         	movff	colourcards_testingRGBC@rel+3,___flge@ff2+3
  2105  001BAA  EC32  F02A         	call	___flge	;wreg free
  2106  001BAE  B0D8               	btfsc	status,0,c
  2107  001BB0  EFDC  F00D         	goto	u7421
  2108  001BB4  EFDE  F00D         	goto	u7420
  2109  001BB8                     u7421:
  2110  001BB8  EFAD  F00E         	goto	l6133
  2111  001BBC                     u7420:
  2112  001BBC  C1D6  F028         	movff	colourcards_testingRGBC@rel+4,___flge@ff1
  2113  001BC0  C1D7  F029         	movff	colourcards_testingRGBC@rel+5,___flge@ff1+1
  2114  001BC4  C1D8  F02A         	movff	colourcards_testingRGBC@rel+6,___flge@ff1+2
  2115  001BC8  C1D9  F02B         	movff	colourcards_testingRGBC@rel+7,___flge@ff1+3
  2116  001BCC  0E48               	movlw	72
  2117  001BCE  6E2C               	movwf	___flge@ff2^0,c
  2118  001BD0  0EE1               	movlw	225
  2119  001BD2  6E2D               	movwf	(___flge@ff2+1)^0,c
  2120  001BD4  0E7A               	movlw	122
  2121  001BD6  6E2E               	movwf	(___flge@ff2+2)^0,c
  2122  001BD8  0E3E               	movlw	62
  2123  001BDA  6E2F               	movwf	(___flge@ff2+3)^0,c
  2124  001BDC  EC32  F02A         	call	___flge	;wreg free
  2125  001BE0  B0D8               	btfsc	status,0,c
  2126  001BE2  EFF5  F00D         	goto	u7431
  2127  001BE6  EFF7  F00D         	goto	u7430
  2128  001BEA                     u7431:
  2129  001BEA  EFAD  F00E         	goto	l6133
  2130  001BEE                     u7430:
  2131  001BEE  C1DA  F028         	movff	colourcards_testingRGBC@rel+8,___flge@ff1
  2132  001BF2  C1DB  F029         	movff	colourcards_testingRGBC@rel+9,___flge@ff1+1
  2133  001BF6  C1DC  F02A         	movff	colourcards_testingRGBC@rel+10,___flge@ff1+2
  2134  001BFA  C1DD  F02B         	movff	colourcards_testingRGBC@rel+11,___flge@ff1+3
  2135  001BFE  0EEC               	movlw	236
  2136  001C00  6E2C               	movwf	___flge@ff2^0,c
  2137  001C02  0E51               	movlw	81
  2138  001C04  6E2D               	movwf	(___flge@ff2+1)^0,c
  2139  001C06  0E38               	movlw	56
  2140  001C08  6E2E               	movwf	(___flge@ff2+2)^0,c
  2141  001C0A  0E3E               	movlw	62
  2142  001C0C  6E2F               	movwf	(___flge@ff2+3)^0,c
  2143  001C0E  EC32  F02A         	call	___flge	;wreg free
  2144  001C12  B0D8               	btfsc	status,0,c
  2145  001C14  EF0E  F00E         	goto	u7441
  2146  001C18  EF10  F00E         	goto	u7440
  2147  001C1C                     u7441:
  2148  001C1C  EFAD  F00E         	goto	l6133
  2149  001C20                     u7440:
  2150  001C20                     
  2151                           ;colour_cards.c: 144:             colourclick_readRGBC2(&abs, 3);
  2152  001C20  0ECA               	movlw	low colourcards_testingRGBC@abs
  2153  001C22  6E0E               	movwf	colourclick_readRGBC2@tmpval^0,c
  2154  001C24  0E01               	movlw	high colourcards_testingRGBC@abs
  2155  001C26  6E0F               	movwf	(colourclick_readRGBC2@tmpval+1)^0,c
  2156  001C28  0E03               	movlw	3
  2157  001C2A  6E10               	movwf	colourclick_readRGBC2@mode^0,c
  2158  001C2C  ECDC  F027         	call	_colourclick_readRGBC2	;wreg free
  2159                           
  2160                           ;colour_cards.c: 145:             colourcards_normaliseRGBC(&abs, &rel);
  2161  001C30  0ECA               	movlw	low colourcards_testingRGBC@abs
  2162  001C32  6E28               	movwf	colourcards_normaliseRGBC@abs^0,c
  2163  001C34  0E01               	movlw	high colourcards_testingRGBC@abs
  2164  001C36  6E29               	movwf	(colourcards_normaliseRGBC@abs+1)^0,c
  2165  001C38  0ED2               	movlw	low colourcards_testingRGBC@rel
  2166  001C3A  6E2A               	movwf	colourcards_normaliseRGBC@rel^0,c
  2167  001C3C  0E01               	movlw	high colourcards_testingRGBC@rel
  2168  001C3E  6E2B               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  2169  001C40  EC6F  F026         	call	_colourcards_normaliseRGBC	;wreg free
  2170  001C44                     
  2171                           ;colour_cards.c: 146:             if (rel.B<0.56) {
  2172  001C44  C1DA  F028         	movff	colourcards_testingRGBC@rel+8,___flge@ff1
  2173  001C48  C1DB  F029         	movff	colourcards_testingRGBC@rel+9,___flge@ff1+1
  2174  001C4C  C1DC  F02A         	movff	colourcards_testingRGBC@rel+10,___flge@ff1+2
  2175  001C50  C1DD  F02B         	movff	colourcards_testingRGBC@rel+11,___flge@ff1+3
  2176  001C54  0E29               	movlw	41
  2177  001C56  6E2C               	movwf	___flge@ff2^0,c
  2178  001C58  0E5C               	movlw	92
  2179  001C5A  6E2D               	movwf	(___flge@ff2+1)^0,c
  2180  001C5C  0E0F               	movlw	15
  2181  001C5E  6E2E               	movwf	(___flge@ff2+2)^0,c
  2182  001C60  0E3F               	movlw	63
  2183  001C62  6E2F               	movwf	(___flge@ff2+3)^0,c
  2184  001C64  EC32  F02A         	call	___flge	;wreg free
  2185  001C68  B0D8               	btfsc	status,0,c
  2186  001C6A  EF39  F00E         	goto	u7451
  2187  001C6E  EF3B  F00E         	goto	u7450
  2188  001C72                     u7451:
  2189  001C72  EF74  F00E         	goto	l6131
  2190  001C76                     u7450:
  2191  001C76                     
  2192                           ;colour_cards.c: 148:                 sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f 
      +                          %.3f %.3f     Colour: %s\n\r", abs.R, abs.G, abs.B, abs.C, rel.R, rel.G, rel.B, "orange"
      +                          );
  2193  001C76  0EAC               	movlw	low colourcards_testingRGBC@buf
  2194  001C78  0100               	movlb	0	; () banked
  2195  001C7A  6FAE               	movwf	sprintf@s& (0+255),b
  2196  001C7C  0E01               	movlw	high colourcards_testingRGBC@buf
  2197  001C7E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2198  001C80  0E01               	movlw	low STR_1
  2199  001C82  6FB0               	movwf	sprintf@fmt& (0+255),b
  2200  001C84  0E0E               	movlw	high STR_1
  2201  001C86  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2202  001C88  C1CA  F0B2         	movff	colourcards_testingRGBC@abs,?_sprintf+4
  2203  001C8C  C1CB  F0B3         	movff	colourcards_testingRGBC@abs+1,?_sprintf+5
  2204  001C90  C1CC  F0B4         	movff	colourcards_testingRGBC@abs+2,?_sprintf+6
  2205  001C94  C1CD  F0B5         	movff	colourcards_testingRGBC@abs+3,?_sprintf+7
  2206  001C98  C1CE  F0B6         	movff	colourcards_testingRGBC@abs+4,?_sprintf+8
  2207  001C9C  C1CF  F0B7         	movff	colourcards_testingRGBC@abs+5,?_sprintf+9
  2208  001CA0  C1D0  F0B8         	movff	colourcards_testingRGBC@abs+6,?_sprintf+10
  2209  001CA4  C1D1  F0B9         	movff	colourcards_testingRGBC@abs+7,?_sprintf+11
  2210  001CA8  C1D2  F0BA         	movff	colourcards_testingRGBC@rel,?_sprintf+12
  2211  001CAC  C1D3  F0BB         	movff	colourcards_testingRGBC@rel+1,?_sprintf+13
  2212  001CB0  C1D4  F0BC         	movff	colourcards_testingRGBC@rel+2,?_sprintf+14
  2213  001CB4  C1D5  F0BD         	movff	colourcards_testingRGBC@rel+3,?_sprintf+15
  2214  001CB8  C1D6  F0BE         	movff	colourcards_testingRGBC@rel+4,?_sprintf+16
  2215  001CBC  C1D7  F0BF         	movff	colourcards_testingRGBC@rel+5,?_sprintf+17
  2216  001CC0  C1D8  F0C0         	movff	colourcards_testingRGBC@rel+6,?_sprintf+18
  2217  001CC4  C1D9  F0C1         	movff	colourcards_testingRGBC@rel+7,?_sprintf+19
  2218  001CC8  C1DA  F0C2         	movff	colourcards_testingRGBC@rel+8,?_sprintf+20
  2219  001CCC  C1DB  F0C3         	movff	colourcards_testingRGBC@rel+9,?_sprintf+21
  2220  001CD0  C1DC  F0C4         	movff	colourcards_testingRGBC@rel+10,?_sprintf+22
  2221  001CD4  C1DD  F0C5         	movff	colourcards_testingRGBC@rel+11,?_sprintf+23
  2222  001CD8  0E80               	movlw	low STR_2
  2223  001CDA  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2224  001CDC  0E0E               	movlw	high STR_2
  2225  001CDE  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2226  001CE0  EC03  F02F         	call	_sprintf	;wreg free
  2227                           
  2228                           ;colour_cards.c: 150:             } else {
  2229  001CE4  EFDC  F011         	goto	l6181
  2230  001CE8                     l6131:
  2231                           
  2232                           ;colour_cards.c: 152:                 sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f 
      +                          %.3f %.3f     Colour: %s\n\r", abs.R, abs.G, abs.B, abs.C, rel.R, rel.G, rel.B, "red");
  2233  001CE8  0EAC               	movlw	low colourcards_testingRGBC@buf
  2234  001CEA  0100               	movlb	0	; () banked
  2235  001CEC  6FAE               	movwf	sprintf@s& (0+255),b
  2236  001CEE  0E01               	movlw	high colourcards_testingRGBC@buf
  2237  001CF0  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2238  001CF2  0E01               	movlw	low STR_1
  2239  001CF4  6FB0               	movwf	sprintf@fmt& (0+255),b
  2240  001CF6  0E0E               	movlw	high STR_1
  2241  001CF8  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2242  001CFA  C1CA  F0B2         	movff	colourcards_testingRGBC@abs,?_sprintf+4
  2243  001CFE  C1CB  F0B3         	movff	colourcards_testingRGBC@abs+1,?_sprintf+5
  2244  001D02  C1CC  F0B4         	movff	colourcards_testingRGBC@abs+2,?_sprintf+6
  2245  001D06  C1CD  F0B5         	movff	colourcards_testingRGBC@abs+3,?_sprintf+7
  2246  001D0A  C1CE  F0B6         	movff	colourcards_testingRGBC@abs+4,?_sprintf+8
  2247  001D0E  C1CF  F0B7         	movff	colourcards_testingRGBC@abs+5,?_sprintf+9
  2248  001D12  C1D0  F0B8         	movff	colourcards_testingRGBC@abs+6,?_sprintf+10
  2249  001D16  C1D1  F0B9         	movff	colourcards_testingRGBC@abs+7,?_sprintf+11
  2250  001D1A  C1D2  F0BA         	movff	colourcards_testingRGBC@rel,?_sprintf+12
  2251  001D1E  C1D3  F0BB         	movff	colourcards_testingRGBC@rel+1,?_sprintf+13
  2252  001D22  C1D4  F0BC         	movff	colourcards_testingRGBC@rel+2,?_sprintf+14
  2253  001D26  C1D5  F0BD         	movff	colourcards_testingRGBC@rel+3,?_sprintf+15
  2254  001D2A  C1D6  F0BE         	movff	colourcards_testingRGBC@rel+4,?_sprintf+16
  2255  001D2E  C1D7  F0BF         	movff	colourcards_testingRGBC@rel+5,?_sprintf+17
  2256  001D32  C1D8  F0C0         	movff	colourcards_testingRGBC@rel+6,?_sprintf+18
  2257  001D36  C1D9  F0C1         	movff	colourcards_testingRGBC@rel+7,?_sprintf+19
  2258  001D3A  C1DA  F0C2         	movff	colourcards_testingRGBC@rel+8,?_sprintf+20
  2259  001D3E  C1DB  F0C3         	movff	colourcards_testingRGBC@rel+9,?_sprintf+21
  2260  001D42  C1DC  F0C4         	movff	colourcards_testingRGBC@rel+10,?_sprintf+22
  2261  001D46  C1DD  F0C5         	movff	colourcards_testingRGBC@rel+11,?_sprintf+23
  2262  001D4A  0EAF               	movlw	low STR_4
  2263  001D4C  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2264  001D4E  0E0E               	movlw	high STR_4
  2265  001D50  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2266  001D52  EC03  F02F         	call	_sprintf	;wreg free
  2267  001D56  EFDC  F011         	goto	l6181
  2268  001D5A                     l6133:
  2269  001D5A  C1D2  F028         	movff	colourcards_testingRGBC@rel,___flge@ff1
  2270  001D5E  C1D3  F029         	movff	colourcards_testingRGBC@rel+1,___flge@ff1+1
  2271  001D62  C1D4  F02A         	movff	colourcards_testingRGBC@rel+2,___flge@ff1+2
  2272  001D66  C1D5  F02B         	movff	colourcards_testingRGBC@rel+3,___flge@ff1+3
  2273  001D6A  0EAE               	movlw	174
  2274  001D6C  6E2C               	movwf	___flge@ff2^0,c
  2275  001D6E  0E47               	movlw	71
  2276  001D70  6E2D               	movwf	(___flge@ff2+1)^0,c
  2277  001D72  0EE1               	movlw	225
  2278  001D74  6E2E               	movwf	(___flge@ff2+2)^0,c
  2279  001D76  0E3E               	movlw	62
  2280  001D78  6E2F               	movwf	(___flge@ff2+3)^0,c
  2281  001D7A  EC32  F02A         	call	___flge	;wreg free
  2282  001D7E  B0D8               	btfsc	status,0,c
  2283  001D80  EFC4  F00E         	goto	u7461
  2284  001D84  EFC6  F00E         	goto	u7460
  2285  001D88                     u7461:
  2286  001D88  EF19  F010         	goto	l6155
  2287  001D8C                     u7460:
  2288  001D8C  0E9A               	movlw	154
  2289  001D8E  6E28               	movwf	___flge@ff1^0,c
  2290  001D90  0E99               	movlw	153
  2291  001D92  6E29               	movwf	(___flge@ff1+1)^0,c
  2292  001D94  0E99               	movlw	153
  2293  001D96  6E2A               	movwf	(___flge@ff1+2)^0,c
  2294  001D98  0E3E               	movlw	62
  2295  001D9A  6E2B               	movwf	(___flge@ff1+3)^0,c
  2296  001D9C  C1D6  F02C         	movff	colourcards_testingRGBC@rel+4,___flge@ff2
  2297  001DA0  C1D7  F02D         	movff	colourcards_testingRGBC@rel+5,___flge@ff2+1
  2298  001DA4  C1D8  F02E         	movff	colourcards_testingRGBC@rel+6,___flge@ff2+2
  2299  001DA8  C1D9  F02F         	movff	colourcards_testingRGBC@rel+7,___flge@ff2+3
  2300  001DAC  EC32  F02A         	call	___flge	;wreg free
  2301  001DB0  B0D8               	btfsc	status,0,c
  2302  001DB2  EFDD  F00E         	goto	u7471
  2303  001DB6  EFDF  F00E         	goto	u7470
  2304  001DBA                     u7471:
  2305  001DBA  EF19  F010         	goto	l6155
  2306  001DBE                     u7470:
  2307  001DBE  0E14               	movlw	20
  2308  001DC0  6E28               	movwf	___flge@ff1^0,c
  2309  001DC2  0EAE               	movlw	174
  2310  001DC4  6E29               	movwf	(___flge@ff1+1)^0,c
  2311  001DC6  0E47               	movlw	71
  2312  001DC8  6E2A               	movwf	(___flge@ff1+2)^0,c
  2313  001DCA  0E3E               	movlw	62
  2314  001DCC  6E2B               	movwf	(___flge@ff1+3)^0,c
  2315  001DCE  C1DA  F02C         	movff	colourcards_testingRGBC@rel+8,___flge@ff2
  2316  001DD2  C1DB  F02D         	movff	colourcards_testingRGBC@rel+9,___flge@ff2+1
  2317  001DD6  C1DC  F02E         	movff	colourcards_testingRGBC@rel+10,___flge@ff2+2
  2318  001DDA  C1DD  F02F         	movff	colourcards_testingRGBC@rel+11,___flge@ff2+3
  2319  001DDE  EC32  F02A         	call	___flge	;wreg free
  2320  001DE2  B0D8               	btfsc	status,0,c
  2321  001DE4  EFF6  F00E         	goto	u7481
  2322  001DE8  EFF8  F00E         	goto	u7480
  2323  001DEC                     u7481:
  2324  001DEC  EF19  F010         	goto	l6155
  2325  001DF0                     u7480:
  2326  001DF0                     
  2327                           ;colour_cards.c: 158:             colourclick_readRGBC2(&abs, 3);
  2328  001DF0  0ECA               	movlw	low colourcards_testingRGBC@abs
  2329  001DF2  6E0E               	movwf	colourclick_readRGBC2@tmpval^0,c
  2330  001DF4  0E01               	movlw	high colourcards_testingRGBC@abs
  2331  001DF6  6E0F               	movwf	(colourclick_readRGBC2@tmpval+1)^0,c
  2332  001DF8  0E03               	movlw	3
  2333  001DFA  6E10               	movwf	colourclick_readRGBC2@mode^0,c
  2334  001DFC  ECDC  F027         	call	_colourclick_readRGBC2	;wreg free
  2335                           
  2336                           ;colour_cards.c: 159:             colourcards_normaliseRGBC(&abs, &rel);
  2337  001E00  0ECA               	movlw	low colourcards_testingRGBC@abs
  2338  001E02  6E28               	movwf	colourcards_normaliseRGBC@abs^0,c
  2339  001E04  0E01               	movlw	high colourcards_testingRGBC@abs
  2340  001E06  6E29               	movwf	(colourcards_normaliseRGBC@abs+1)^0,c
  2341  001E08  0ED2               	movlw	low colourcards_testingRGBC@rel
  2342  001E0A  6E2A               	movwf	colourcards_normaliseRGBC@rel^0,c
  2343  001E0C  0E01               	movlw	high colourcards_testingRGBC@rel
  2344  001E0E  6E2B               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  2345  001E10  EC6F  F026         	call	_colourcards_normaliseRGBC	;wreg free
  2346  001E14                     
  2347                           ;colour_cards.c: 160:             if ((rel.R<0.65) && (rel.B>0.67)) {
  2348  001E14  C1D2  F028         	movff	colourcards_testingRGBC@rel,___flge@ff1
  2349  001E18  C1D3  F029         	movff	colourcards_testingRGBC@rel+1,___flge@ff1+1
  2350  001E1C  C1D4  F02A         	movff	colourcards_testingRGBC@rel+2,___flge@ff1+2
  2351  001E20  C1D5  F02B         	movff	colourcards_testingRGBC@rel+3,___flge@ff1+3
  2352  001E24  0E66               	movlw	102
  2353  001E26  6E2C               	movwf	___flge@ff2^0,c
  2354  001E28  0E66               	movlw	102
  2355  001E2A  6E2D               	movwf	(___flge@ff2+1)^0,c
  2356  001E2C  0E26               	movlw	38
  2357  001E2E  6E2E               	movwf	(___flge@ff2+2)^0,c
  2358  001E30  0E3F               	movlw	63
  2359  001E32  6E2F               	movwf	(___flge@ff2+3)^0,c
  2360  001E34  EC32  F02A         	call	___flge	;wreg free
  2361  001E38  B0D8               	btfsc	status,0,c
  2362  001E3A  EF21  F00F         	goto	u7491
  2363  001E3E  EF23  F00F         	goto	u7490
  2364  001E42                     u7491:
  2365  001E42  EF75  F00F         	goto	l6147
  2366  001E46                     u7490:
  2367  001E46  0E1F               	movlw	31
  2368  001E48  6E28               	movwf	___flge@ff1^0,c
  2369  001E4A  0E85               	movlw	133
  2370  001E4C  6E29               	movwf	(___flge@ff1+1)^0,c
  2371  001E4E  0E2B               	movlw	43
  2372  001E50  6E2A               	movwf	(___flge@ff1+2)^0,c
  2373  001E52  0E3F               	movlw	63
  2374  001E54  6E2B               	movwf	(___flge@ff1+3)^0,c
  2375  001E56  C1DA  F02C         	movff	colourcards_testingRGBC@rel+8,___flge@ff2
  2376  001E5A  C1DB  F02D         	movff	colourcards_testingRGBC@rel+9,___flge@ff2+1
  2377  001E5E  C1DC  F02E         	movff	colourcards_testingRGBC@rel+10,___flge@ff2+2
  2378  001E62  C1DD  F02F         	movff	colourcards_testingRGBC@rel+11,___flge@ff2+3
  2379  001E66  EC32  F02A         	call	___flge	;wreg free
  2380  001E6A  B0D8               	btfsc	status,0,c
  2381  001E6C  EF3A  F00F         	goto	u7501
  2382  001E70  EF3C  F00F         	goto	u7500
  2383  001E74                     u7501:
  2384  001E74  EF75  F00F         	goto	l6147
  2385  001E78                     u7500:
  2386  001E78                     
  2387                           ;colour_cards.c: 162:                 sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f 
      +                          %.3f %.3f     Colour: %s\n\r", abs.R, abs.G, abs.B, abs.C, rel.R, rel.G, rel.B, "blue");
  2388  001E78  0EAC               	movlw	low colourcards_testingRGBC@buf
  2389  001E7A  0100               	movlb	0	; () banked
  2390  001E7C  6FAE               	movwf	sprintf@s& (0+255),b
  2391  001E7E  0E01               	movlw	high colourcards_testingRGBC@buf
  2392  001E80  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2393  001E82  0E01               	movlw	low STR_1
  2394  001E84  6FB0               	movwf	sprintf@fmt& (0+255),b
  2395  001E86  0E0E               	movlw	high STR_1
  2396  001E88  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2397  001E8A  C1CA  F0B2         	movff	colourcards_testingRGBC@abs,?_sprintf+4
  2398  001E8E  C1CB  F0B3         	movff	colourcards_testingRGBC@abs+1,?_sprintf+5
  2399  001E92  C1CC  F0B4         	movff	colourcards_testingRGBC@abs+2,?_sprintf+6
  2400  001E96  C1CD  F0B5         	movff	colourcards_testingRGBC@abs+3,?_sprintf+7
  2401  001E9A  C1CE  F0B6         	movff	colourcards_testingRGBC@abs+4,?_sprintf+8
  2402  001E9E  C1CF  F0B7         	movff	colourcards_testingRGBC@abs+5,?_sprintf+9
  2403  001EA2  C1D0  F0B8         	movff	colourcards_testingRGBC@abs+6,?_sprintf+10
  2404  001EA6  C1D1  F0B9         	movff	colourcards_testingRGBC@abs+7,?_sprintf+11
  2405  001EAA  C1D2  F0BA         	movff	colourcards_testingRGBC@rel,?_sprintf+12
  2406  001EAE  C1D3  F0BB         	movff	colourcards_testingRGBC@rel+1,?_sprintf+13
  2407  001EB2  C1D4  F0BC         	movff	colourcards_testingRGBC@rel+2,?_sprintf+14
  2408  001EB6  C1D5  F0BD         	movff	colourcards_testingRGBC@rel+3,?_sprintf+15
  2409  001EBA  C1D6  F0BE         	movff	colourcards_testingRGBC@rel+4,?_sprintf+16
  2410  001EBE  C1D7  F0BF         	movff	colourcards_testingRGBC@rel+5,?_sprintf+17
  2411  001EC2  C1D8  F0C0         	movff	colourcards_testingRGBC@rel+6,?_sprintf+18
  2412  001EC6  C1D9  F0C1         	movff	colourcards_testingRGBC@rel+7,?_sprintf+19
  2413  001ECA  C1DA  F0C2         	movff	colourcards_testingRGBC@rel+8,?_sprintf+20
  2414  001ECE  C1DB  F0C3         	movff	colourcards_testingRGBC@rel+9,?_sprintf+21
  2415  001ED2  C1DC  F0C4         	movff	colourcards_testingRGBC@rel+10,?_sprintf+22
  2416  001ED6  C1DD  F0C5         	movff	colourcards_testingRGBC@rel+11,?_sprintf+23
  2417  001EDA  0E73               	movlw	low (STR_10+6)
  2418  001EDC  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2419  001EDE  0E0E               	movlw	high (STR_10+6)
  2420  001EE0  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2421  001EE2  EC03  F02F         	call	_sprintf	;wreg free
  2422                           
  2423                           ;colour_cards.c: 164:             } else if ((rel.R<0.09) && (rel.B>0.62)) {
  2424  001EE6  EFDC  F011         	goto	l6181
  2425  001EEA                     l6147:
  2426  001EEA  C1D2  F028         	movff	colourcards_testingRGBC@rel,___flge@ff1
  2427  001EEE  C1D3  F029         	movff	colourcards_testingRGBC@rel+1,___flge@ff1+1
  2428  001EF2  C1D4  F02A         	movff	colourcards_testingRGBC@rel+2,___flge@ff1+2
  2429  001EF6  C1D5  F02B         	movff	colourcards_testingRGBC@rel+3,___flge@ff1+3
  2430  001EFA  0EEC               	movlw	236
  2431  001EFC  6E2C               	movwf	___flge@ff2^0,c
  2432  001EFE  0E51               	movlw	81
  2433  001F00  6E2D               	movwf	(___flge@ff2+1)^0,c
  2434  001F02  0EB8               	movlw	184
  2435  001F04  6E2E               	movwf	(___flge@ff2+2)^0,c
  2436  001F06  0E3D               	movlw	61
  2437  001F08  6E2F               	movwf	(___flge@ff2+3)^0,c
  2438  001F0A  EC32  F02A         	call	___flge	;wreg free
  2439  001F0E  B0D8               	btfsc	status,0,c
  2440  001F10  EF8C  F00F         	goto	u7511
  2441  001F14  EF8E  F00F         	goto	u7510
  2442  001F18                     u7511:
  2443  001F18  EFE0  F00F         	goto	l6153
  2444  001F1C                     u7510:
  2445  001F1C  0E52               	movlw	82
  2446  001F1E  6E28               	movwf	___flge@ff1^0,c
  2447  001F20  0EB8               	movlw	184
  2448  001F22  6E29               	movwf	(___flge@ff1+1)^0,c
  2449  001F24  0E1E               	movlw	30
  2450  001F26  6E2A               	movwf	(___flge@ff1+2)^0,c
  2451  001F28  0E3F               	movlw	63
  2452  001F2A  6E2B               	movwf	(___flge@ff1+3)^0,c
  2453  001F2C  C1DA  F02C         	movff	colourcards_testingRGBC@rel+8,___flge@ff2
  2454  001F30  C1DB  F02D         	movff	colourcards_testingRGBC@rel+9,___flge@ff2+1
  2455  001F34  C1DC  F02E         	movff	colourcards_testingRGBC@rel+10,___flge@ff2+2
  2456  001F38  C1DD  F02F         	movff	colourcards_testingRGBC@rel+11,___flge@ff2+3
  2457  001F3C  EC32  F02A         	call	___flge	;wreg free
  2458  001F40  B0D8               	btfsc	status,0,c
  2459  001F42  EFA5  F00F         	goto	u7521
  2460  001F46  EFA7  F00F         	goto	u7520
  2461  001F4A                     u7521:
  2462  001F4A  EFE0  F00F         	goto	l6153
  2463  001F4E                     u7520:
  2464  001F4E                     
  2465                           ;colour_cards.c: 166:                 sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f 
      +                          %.3f %.3f     Colour: %s\n\r", abs.R, abs.G, abs.B, abs.C, rel.R, rel.G, rel.B, "green")
      +                          ;
  2466  001F4E  0EAC               	movlw	low colourcards_testingRGBC@buf
  2467  001F50  0100               	movlb	0	; () banked
  2468  001F52  6FAE               	movwf	sprintf@s& (0+255),b
  2469  001F54  0E01               	movlw	high colourcards_testingRGBC@buf
  2470  001F56  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2471  001F58  0E01               	movlw	low STR_1
  2472  001F5A  6FB0               	movwf	sprintf@fmt& (0+255),b
  2473  001F5C  0E0E               	movlw	high STR_1
  2474  001F5E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2475  001F60  C1CA  F0B2         	movff	colourcards_testingRGBC@abs,?_sprintf+4
  2476  001F64  C1CB  F0B3         	movff	colourcards_testingRGBC@abs+1,?_sprintf+5
  2477  001F68  C1CC  F0B4         	movff	colourcards_testingRGBC@abs+2,?_sprintf+6
  2478  001F6C  C1CD  F0B5         	movff	colourcards_testingRGBC@abs+3,?_sprintf+7
  2479  001F70  C1CE  F0B6         	movff	colourcards_testingRGBC@abs+4,?_sprintf+8
  2480  001F74  C1CF  F0B7         	movff	colourcards_testingRGBC@abs+5,?_sprintf+9
  2481  001F78  C1D0  F0B8         	movff	colourcards_testingRGBC@abs+6,?_sprintf+10
  2482  001F7C  C1D1  F0B9         	movff	colourcards_testingRGBC@abs+7,?_sprintf+11
  2483  001F80  C1D2  F0BA         	movff	colourcards_testingRGBC@rel,?_sprintf+12
  2484  001F84  C1D3  F0BB         	movff	colourcards_testingRGBC@rel+1,?_sprintf+13
  2485  001F88  C1D4  F0BC         	movff	colourcards_testingRGBC@rel+2,?_sprintf+14
  2486  001F8C  C1D5  F0BD         	movff	colourcards_testingRGBC@rel+3,?_sprintf+15
  2487  001F90  C1D6  F0BE         	movff	colourcards_testingRGBC@rel+4,?_sprintf+16
  2488  001F94  C1D7  F0BF         	movff	colourcards_testingRGBC@rel+5,?_sprintf+17
  2489  001F98  C1D8  F0C0         	movff	colourcards_testingRGBC@rel+6,?_sprintf+18
  2490  001F9C  C1D9  F0C1         	movff	colourcards_testingRGBC@rel+7,?_sprintf+19
  2491  001FA0  C1DA  F0C2         	movff	colourcards_testingRGBC@rel+8,?_sprintf+20
  2492  001FA4  C1DB  F0C3         	movff	colourcards_testingRGBC@rel+9,?_sprintf+21
  2493  001FA8  C1DC  F0C4         	movff	colourcards_testingRGBC@rel+10,?_sprintf+22
  2494  001FAC  C1DD  F0C5         	movff	colourcards_testingRGBC@rel+11,?_sprintf+23
  2495  001FB0  0E94               	movlw	low STR_8
  2496  001FB2  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2497  001FB4  0E0E               	movlw	high STR_8
  2498  001FB6  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2499  001FB8  EC03  F02F         	call	_sprintf	;wreg free
  2500                           
  2501                           ;colour_cards.c: 168:             } else {
  2502  001FBC  EFDC  F011         	goto	l6181
  2503  001FC0                     l6153:
  2504                           
  2505                           ;colour_cards.c: 170:                 sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f 
      +                          %.3f %.3f     Colour: %s\n\r", abs.R, abs.G, abs.B, abs.C, rel.R, rel.G, rel.B, "light b
      +                          lue");
  2506  001FC0  0EAC               	movlw	low colourcards_testingRGBC@buf
  2507  001FC2  0100               	movlb	0	; () banked
  2508  001FC4  6FAE               	movwf	sprintf@s& (0+255),b
  2509  001FC6  0E01               	movlw	high colourcards_testingRGBC@buf
  2510  001FC8  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2511  001FCA  0E01               	movlw	low STR_1
  2512  001FCC  6FB0               	movwf	sprintf@fmt& (0+255),b
  2513  001FCE  0E0E               	movlw	high STR_1
  2514  001FD0  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2515  001FD2  C1CA  F0B2         	movff	colourcards_testingRGBC@abs,?_sprintf+4
  2516  001FD6  C1CB  F0B3         	movff	colourcards_testingRGBC@abs+1,?_sprintf+5
  2517  001FDA  C1CC  F0B4         	movff	colourcards_testingRGBC@abs+2,?_sprintf+6
  2518  001FDE  C1CD  F0B5         	movff	colourcards_testingRGBC@abs+3,?_sprintf+7
  2519  001FE2  C1CE  F0B6         	movff	colourcards_testingRGBC@abs+4,?_sprintf+8
  2520  001FE6  C1CF  F0B7         	movff	colourcards_testingRGBC@abs+5,?_sprintf+9
  2521  001FEA  C1D0  F0B8         	movff	colourcards_testingRGBC@abs+6,?_sprintf+10
  2522  001FEE  C1D1  F0B9         	movff	colourcards_testingRGBC@abs+7,?_sprintf+11
  2523  001FF2  C1D2  F0BA         	movff	colourcards_testingRGBC@rel,?_sprintf+12
  2524  001FF6  C1D3  F0BB         	movff	colourcards_testingRGBC@rel+1,?_sprintf+13
  2525  001FFA  C1D4  F0BC         	movff	colourcards_testingRGBC@rel+2,?_sprintf+14
  2526  001FFE  C1D5  F0BD         	movff	colourcards_testingRGBC@rel+3,?_sprintf+15
  2527  002002  C1D6  F0BE         	movff	colourcards_testingRGBC@rel+4,?_sprintf+16
  2528  002006  C1D7  F0BF         	movff	colourcards_testingRGBC@rel+5,?_sprintf+17
  2529  00200A  C1D8  F0C0         	movff	colourcards_testingRGBC@rel+6,?_sprintf+18
  2530  00200E  C1D9  F0C1         	movff	colourcards_testingRGBC@rel+7,?_sprintf+19
  2531  002012  C1DA  F0C2         	movff	colourcards_testingRGBC@rel+8,?_sprintf+20
  2532  002016  C1DB  F0C3         	movff	colourcards_testingRGBC@rel+9,?_sprintf+21
  2533  00201A  C1DC  F0C4         	movff	colourcards_testingRGBC@rel+10,?_sprintf+22
  2534  00201E  C1DD  F0C5         	movff	colourcards_testingRGBC@rel+11,?_sprintf+23
  2535  002022  0E6D               	movlw	low STR_10
  2536  002024  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2537  002026  0E0E               	movlw	high STR_10
  2538  002028  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2539  00202A  EC03  F02F         	call	_sprintf	;wreg free
  2540  00202E  EFDC  F011         	goto	l6181
  2541  002032                     l6155:
  2542  002032  0E48               	movlw	72
  2543  002034  6E28               	movwf	___flge@ff1^0,c
  2544  002036  0EE1               	movlw	225
  2545  002038  6E29               	movwf	(___flge@ff1+1)^0,c
  2546  00203A  0EFA               	movlw	250
  2547  00203C  6E2A               	movwf	(___flge@ff1+2)^0,c
  2548  00203E  0E3E               	movlw	62
  2549  002040  6E2B               	movwf	(___flge@ff1+3)^0,c
  2550  002042  C1D2  F02C         	movff	colourcards_testingRGBC@rel,___flge@ff2
  2551  002046  C1D3  F02D         	movff	colourcards_testingRGBC@rel+1,___flge@ff2+1
  2552  00204A  C1D4  F02E         	movff	colourcards_testingRGBC@rel+2,___flge@ff2+2
  2553  00204E  C1D5  F02F         	movff	colourcards_testingRGBC@rel+3,___flge@ff2+3
  2554  002052  EC32  F02A         	call	___flge	;wreg free
  2555  002056  B0D8               	btfsc	status,0,c
  2556  002058  EF30  F010         	goto	u7531
  2557  00205C  EF32  F010         	goto	u7530
  2558  002060                     u7531:
  2559  002060  EF9D  F010         	goto	l6163
  2560  002064                     u7530:
  2561  002064  0E85               	movlw	133
  2562  002066  6E28               	movwf	___flge@ff1^0,c
  2563  002068  0EEB               	movlw	235
  2564  00206A  6E29               	movwf	(___flge@ff1+1)^0,c
  2565  00206C  0E91               	movlw	145
  2566  00206E  6E2A               	movwf	(___flge@ff1+2)^0,c
  2567  002070  0E3E               	movlw	62
  2568  002072  6E2B               	movwf	(___flge@ff1+3)^0,c
  2569  002074  C1D6  F02C         	movff	colourcards_testingRGBC@rel+4,___flge@ff2
  2570  002078  C1D7  F02D         	movff	colourcards_testingRGBC@rel+5,___flge@ff2+1
  2571  00207C  C1D8  F02E         	movff	colourcards_testingRGBC@rel+6,___flge@ff2+2
  2572  002080  C1D9  F02F         	movff	colourcards_testingRGBC@rel+7,___flge@ff2+3
  2573  002084  EC32  F02A         	call	___flge	;wreg free
  2574  002088  B0D8               	btfsc	status,0,c
  2575  00208A  EF49  F010         	goto	u7541
  2576  00208E  EF4B  F010         	goto	u7540
  2577  002092                     u7541:
  2578  002092  EF9D  F010         	goto	l6163
  2579  002096                     u7540:
  2580  002096  0EEC               	movlw	236
  2581  002098  6E28               	movwf	___flge@ff1^0,c
  2582  00209A  0E51               	movlw	81
  2583  00209C  6E29               	movwf	(___flge@ff1+1)^0,c
  2584  00209E  0E38               	movlw	56
  2585  0020A0  6E2A               	movwf	(___flge@ff1+2)^0,c
  2586  0020A2  0E3E               	movlw	62
  2587  0020A4  6E2B               	movwf	(___flge@ff1+3)^0,c
  2588  0020A6  C1DA  F02C         	movff	colourcards_testingRGBC@rel+8,___flge@ff2
  2589  0020AA  C1DB  F02D         	movff	colourcards_testingRGBC@rel+9,___flge@ff2+1
  2590  0020AE  C1DC  F02E         	movff	colourcards_testingRGBC@rel+10,___flge@ff2+2
  2591  0020B2  C1DD  F02F         	movff	colourcards_testingRGBC@rel+11,___flge@ff2+3
  2592  0020B6  EC32  F02A         	call	___flge	;wreg free
  2593  0020BA  B0D8               	btfsc	status,0,c
  2594  0020BC  EF62  F010         	goto	u7551
  2595  0020C0  EF64  F010         	goto	u7550
  2596  0020C4                     u7551:
  2597  0020C4  EF9D  F010         	goto	l6163
  2598  0020C8                     u7550:
  2599  0020C8                     
  2600                           ;colour_cards.c: 177:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", abs.R, abs.G, abs.B, abs.C, rel.R, rel.G, rel.B, "yellow");
  2601  0020C8  0EAC               	movlw	low colourcards_testingRGBC@buf
  2602  0020CA  0100               	movlb	0	; () banked
  2603  0020CC  6FAE               	movwf	sprintf@s& (0+255),b
  2604  0020CE  0E01               	movlw	high colourcards_testingRGBC@buf
  2605  0020D0  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2606  0020D2  0E01               	movlw	low STR_1
  2607  0020D4  6FB0               	movwf	sprintf@fmt& (0+255),b
  2608  0020D6  0E0E               	movlw	high STR_1
  2609  0020D8  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2610  0020DA  C1CA  F0B2         	movff	colourcards_testingRGBC@abs,?_sprintf+4
  2611  0020DE  C1CB  F0B3         	movff	colourcards_testingRGBC@abs+1,?_sprintf+5
  2612  0020E2  C1CC  F0B4         	movff	colourcards_testingRGBC@abs+2,?_sprintf+6
  2613  0020E6  C1CD  F0B5         	movff	colourcards_testingRGBC@abs+3,?_sprintf+7
  2614  0020EA  C1CE  F0B6         	movff	colourcards_testingRGBC@abs+4,?_sprintf+8
  2615  0020EE  C1CF  F0B7         	movff	colourcards_testingRGBC@abs+5,?_sprintf+9
  2616  0020F2  C1D0  F0B8         	movff	colourcards_testingRGBC@abs+6,?_sprintf+10
  2617  0020F6  C1D1  F0B9         	movff	colourcards_testingRGBC@abs+7,?_sprintf+11
  2618  0020FA  C1D2  F0BA         	movff	colourcards_testingRGBC@rel,?_sprintf+12
  2619  0020FE  C1D3  F0BB         	movff	colourcards_testingRGBC@rel+1,?_sprintf+13
  2620  002102  C1D4  F0BC         	movff	colourcards_testingRGBC@rel+2,?_sprintf+14
  2621  002106  C1D5  F0BD         	movff	colourcards_testingRGBC@rel+3,?_sprintf+15
  2622  00210A  C1D6  F0BE         	movff	colourcards_testingRGBC@rel+4,?_sprintf+16
  2623  00210E  C1D7  F0BF         	movff	colourcards_testingRGBC@rel+5,?_sprintf+17
  2624  002112  C1D8  F0C0         	movff	colourcards_testingRGBC@rel+6,?_sprintf+18
  2625  002116  C1D9  F0C1         	movff	colourcards_testingRGBC@rel+7,?_sprintf+19
  2626  00211A  C1DA  F0C2         	movff	colourcards_testingRGBC@rel+8,?_sprintf+20
  2627  00211E  C1DB  F0C3         	movff	colourcards_testingRGBC@rel+9,?_sprintf+21
  2628  002122  C1DC  F0C4         	movff	colourcards_testingRGBC@rel+10,?_sprintf+22
  2629  002126  C1DD  F0C5         	movff	colourcards_testingRGBC@rel+11,?_sprintf+23
  2630  00212A  0E87               	movlw	low STR_12
  2631  00212C  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2632  00212E  0E0E               	movlw	high STR_12
  2633  002130  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2634  002132  EC03  F02F         	call	_sprintf	;wreg free
  2635                           
  2636                           ;colour_cards.c: 180:         } else if ((rel.R>0.49) && (rel.G<0.275) && (rel.B>0.195))
      +                           {
  2637  002136  EFDC  F011         	goto	l6181
  2638  00213A                     l6163:
  2639  00213A  0E48               	movlw	72
  2640  00213C  6E28               	movwf	___flge@ff1^0,c
  2641  00213E  0EE1               	movlw	225
  2642  002140  6E29               	movwf	(___flge@ff1+1)^0,c
  2643  002142  0EFA               	movlw	250
  2644  002144  6E2A               	movwf	(___flge@ff1+2)^0,c
  2645  002146  0E3E               	movlw	62
  2646  002148  6E2B               	movwf	(___flge@ff1+3)^0,c
  2647  00214A  C1D2  F02C         	movff	colourcards_testingRGBC@rel,___flge@ff2
  2648  00214E  C1D3  F02D         	movff	colourcards_testingRGBC@rel+1,___flge@ff2+1
  2649  002152  C1D4  F02E         	movff	colourcards_testingRGBC@rel+2,___flge@ff2+2
  2650  002156  C1D5  F02F         	movff	colourcards_testingRGBC@rel+3,___flge@ff2+3
  2651  00215A  EC32  F02A         	call	___flge	;wreg free
  2652  00215E  B0D8               	btfsc	status,0,c
  2653  002160  EFB4  F010         	goto	u7561
  2654  002164  EFB6  F010         	goto	u7560
  2655  002168                     u7561:
  2656  002168  EF21  F011         	goto	l6171
  2657  00216C                     u7560:
  2658  00216C  C1D6  F028         	movff	colourcards_testingRGBC@rel+4,___flge@ff1
  2659  002170  C1D7  F029         	movff	colourcards_testingRGBC@rel+5,___flge@ff1+1
  2660  002174  C1D8  F02A         	movff	colourcards_testingRGBC@rel+6,___flge@ff1+2
  2661  002178  C1D9  F02B         	movff	colourcards_testingRGBC@rel+7,___flge@ff1+3
  2662  00217C  0ECD               	movlw	205
  2663  00217E  6E2C               	movwf	___flge@ff2^0,c
  2664  002180  0ECC               	movlw	204
  2665  002182  6E2D               	movwf	(___flge@ff2+1)^0,c
  2666  002184  0E8C               	movlw	140
  2667  002186  6E2E               	movwf	(___flge@ff2+2)^0,c
  2668  002188  0E3E               	movlw	62
  2669  00218A  6E2F               	movwf	(___flge@ff2+3)^0,c
  2670  00218C  EC32  F02A         	call	___flge	;wreg free
  2671  002190  B0D8               	btfsc	status,0,c
  2672  002192  EFCD  F010         	goto	u7571
  2673  002196  EFCF  F010         	goto	u7570
  2674  00219A                     u7571:
  2675  00219A  EF21  F011         	goto	l6171
  2676  00219E                     u7570:
  2677  00219E  0E14               	movlw	20
  2678  0021A0  6E28               	movwf	___flge@ff1^0,c
  2679  0021A2  0EAE               	movlw	174
  2680  0021A4  6E29               	movwf	(___flge@ff1+1)^0,c
  2681  0021A6  0E47               	movlw	71
  2682  0021A8  6E2A               	movwf	(___flge@ff1+2)^0,c
  2683  0021AA  0E3E               	movlw	62
  2684  0021AC  6E2B               	movwf	(___flge@ff1+3)^0,c
  2685  0021AE  C1DA  F02C         	movff	colourcards_testingRGBC@rel+8,___flge@ff2
  2686  0021B2  C1DB  F02D         	movff	colourcards_testingRGBC@rel+9,___flge@ff2+1
  2687  0021B6  C1DC  F02E         	movff	colourcards_testingRGBC@rel+10,___flge@ff2+2
  2688  0021BA  C1DD  F02F         	movff	colourcards_testingRGBC@rel+11,___flge@ff2+3
  2689  0021BE  EC32  F02A         	call	___flge	;wreg free
  2690  0021C2  B0D8               	btfsc	status,0,c
  2691  0021C4  EFE6  F010         	goto	u7581
  2692  0021C8  EFE8  F010         	goto	u7580
  2693  0021CC                     u7581:
  2694  0021CC  EF21  F011         	goto	l6171
  2695  0021D0                     u7580:
  2696  0021D0                     
  2697                           ;colour_cards.c: 182:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", abs.R, abs.G, abs.B, abs.C, rel.R, rel.G, rel.B, "pink");
  2698  0021D0  0EAC               	movlw	low colourcards_testingRGBC@buf
  2699  0021D2  0100               	movlb	0	; () banked
  2700  0021D4  6FAE               	movwf	sprintf@s& (0+255),b
  2701  0021D6  0E01               	movlw	high colourcards_testingRGBC@buf
  2702  0021D8  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2703  0021DA  0E01               	movlw	low STR_1
  2704  0021DC  6FB0               	movwf	sprintf@fmt& (0+255),b
  2705  0021DE  0E0E               	movlw	high STR_1
  2706  0021E0  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2707  0021E2  C1CA  F0B2         	movff	colourcards_testingRGBC@abs,?_sprintf+4
  2708  0021E6  C1CB  F0B3         	movff	colourcards_testingRGBC@abs+1,?_sprintf+5
  2709  0021EA  C1CC  F0B4         	movff	colourcards_testingRGBC@abs+2,?_sprintf+6
  2710  0021EE  C1CD  F0B5         	movff	colourcards_testingRGBC@abs+3,?_sprintf+7
  2711  0021F2  C1CE  F0B6         	movff	colourcards_testingRGBC@abs+4,?_sprintf+8
  2712  0021F6  C1CF  F0B7         	movff	colourcards_testingRGBC@abs+5,?_sprintf+9
  2713  0021FA  C1D0  F0B8         	movff	colourcards_testingRGBC@abs+6,?_sprintf+10
  2714  0021FE  C1D1  F0B9         	movff	colourcards_testingRGBC@abs+7,?_sprintf+11
  2715  002202  C1D2  F0BA         	movff	colourcards_testingRGBC@rel,?_sprintf+12
  2716  002206  C1D3  F0BB         	movff	colourcards_testingRGBC@rel+1,?_sprintf+13
  2717  00220A  C1D4  F0BC         	movff	colourcards_testingRGBC@rel+2,?_sprintf+14
  2718  00220E  C1D5  F0BD         	movff	colourcards_testingRGBC@rel+3,?_sprintf+15
  2719  002212  C1D6  F0BE         	movff	colourcards_testingRGBC@rel+4,?_sprintf+16
  2720  002216  C1D7  F0BF         	movff	colourcards_testingRGBC@rel+5,?_sprintf+17
  2721  00221A  C1D8  F0C0         	movff	colourcards_testingRGBC@rel+6,?_sprintf+18
  2722  00221E  C1D9  F0C1         	movff	colourcards_testingRGBC@rel+7,?_sprintf+19
  2723  002222  C1DA  F0C2         	movff	colourcards_testingRGBC@rel+8,?_sprintf+20
  2724  002226  C1DB  F0C3         	movff	colourcards_testingRGBC@rel+9,?_sprintf+21
  2725  00222A  C1DC  F0C4         	movff	colourcards_testingRGBC@rel+10,?_sprintf+22
  2726  00222E  C1DD  F0C5         	movff	colourcards_testingRGBC@rel+11,?_sprintf+23
  2727  002232  0E9A               	movlw	low STR_14
  2728  002234  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2729  002236  0E0E               	movlw	high STR_14
  2730  002238  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2731  00223A  EC03  F02F         	call	_sprintf	;wreg free
  2732                           
  2733                           ;colour_cards.c: 185:         } else if ((rel.R<0.46) && (rel.G>0.295) && (rel.B>0.21)) 
      +                          {
  2734  00223E  EFDC  F011         	goto	l6181
  2735  002242                     l6171:
  2736  002242  C1D2  F028         	movff	colourcards_testingRGBC@rel,___flge@ff1
  2737  002246  C1D3  F029         	movff	colourcards_testingRGBC@rel+1,___flge@ff1+1
  2738  00224A  C1D4  F02A         	movff	colourcards_testingRGBC@rel+2,___flge@ff1+2
  2739  00224E  C1D5  F02B         	movff	colourcards_testingRGBC@rel+3,___flge@ff1+3
  2740  002252  0E1F               	movlw	31
  2741  002254  6E2C               	movwf	___flge@ff2^0,c
  2742  002256  0E85               	movlw	133
  2743  002258  6E2D               	movwf	(___flge@ff2+1)^0,c
  2744  00225A  0EEB               	movlw	235
  2745  00225C  6E2E               	movwf	(___flge@ff2+2)^0,c
  2746  00225E  0E3E               	movlw	62
  2747  002260  6E2F               	movwf	(___flge@ff2+3)^0,c
  2748  002262  EC32  F02A         	call	___flge	;wreg free
  2749  002266  B0D8               	btfsc	status,0,c
  2750  002268  EF38  F011         	goto	u7591
  2751  00226C  EF3A  F011         	goto	u7590
  2752  002270                     u7591:
  2753  002270  EFA5  F011         	goto	l6179
  2754  002274                     u7590:
  2755  002274  0E3D               	movlw	61
  2756  002276  6E28               	movwf	___flge@ff1^0,c
  2757  002278  0E0A               	movlw	10
  2758  00227A  6E29               	movwf	(___flge@ff1+1)^0,c
  2759  00227C  0E97               	movlw	151
  2760  00227E  6E2A               	movwf	(___flge@ff1+2)^0,c
  2761  002280  0E3E               	movlw	62
  2762  002282  6E2B               	movwf	(___flge@ff1+3)^0,c
  2763  002284  C1D6  F02C         	movff	colourcards_testingRGBC@rel+4,___flge@ff2
  2764  002288  C1D7  F02D         	movff	colourcards_testingRGBC@rel+5,___flge@ff2+1
  2765  00228C  C1D8  F02E         	movff	colourcards_testingRGBC@rel+6,___flge@ff2+2
  2766  002290  C1D9  F02F         	movff	colourcards_testingRGBC@rel+7,___flge@ff2+3
  2767  002294  EC32  F02A         	call	___flge	;wreg free
  2768  002298  B0D8               	btfsc	status,0,c
  2769  00229A  EF51  F011         	goto	u7601
  2770  00229E  EF53  F011         	goto	u7600
  2771  0022A2                     u7601:
  2772  0022A2  EFA5  F011         	goto	l6179
  2773  0022A6                     u7600:
  2774  0022A6  0E3D               	movlw	61
  2775  0022A8  6E28               	movwf	___flge@ff1^0,c
  2776  0022AA  0E0A               	movlw	10
  2777  0022AC  6E29               	movwf	(___flge@ff1+1)^0,c
  2778  0022AE  0E57               	movlw	87
  2779  0022B0  6E2A               	movwf	(___flge@ff1+2)^0,c
  2780  0022B2  0E3E               	movlw	62
  2781  0022B4  6E2B               	movwf	(___flge@ff1+3)^0,c
  2782  0022B6  C1DA  F02C         	movff	colourcards_testingRGBC@rel+8,___flge@ff2
  2783  0022BA  C1DB  F02D         	movff	colourcards_testingRGBC@rel+9,___flge@ff2+1
  2784  0022BE  C1DC  F02E         	movff	colourcards_testingRGBC@rel+10,___flge@ff2+2
  2785  0022C2  C1DD  F02F         	movff	colourcards_testingRGBC@rel+11,___flge@ff2+3
  2786  0022C6  EC32  F02A         	call	___flge	;wreg free
  2787  0022CA  B0D8               	btfsc	status,0,c
  2788  0022CC  EF6A  F011         	goto	u7611
  2789  0022D0  EF6C  F011         	goto	u7610
  2790  0022D4                     u7611:
  2791  0022D4  EFA5  F011         	goto	l6179
  2792  0022D8                     u7610:
  2793  0022D8                     
  2794                           ;colour_cards.c: 187:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", abs.R, abs.G, abs.B, abs.C, rel.R, rel.G, rel.B, "white");
  2795  0022D8  0EAC               	movlw	low colourcards_testingRGBC@buf
  2796  0022DA  0100               	movlb	0	; () banked
  2797  0022DC  6FAE               	movwf	sprintf@s& (0+255),b
  2798  0022DE  0E01               	movlw	high colourcards_testingRGBC@buf
  2799  0022E0  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2800  0022E2  0E01               	movlw	low STR_1
  2801  0022E4  6FB0               	movwf	sprintf@fmt& (0+255),b
  2802  0022E6  0E0E               	movlw	high STR_1
  2803  0022E8  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2804  0022EA  C1CA  F0B2         	movff	colourcards_testingRGBC@abs,?_sprintf+4
  2805  0022EE  C1CB  F0B3         	movff	colourcards_testingRGBC@abs+1,?_sprintf+5
  2806  0022F2  C1CC  F0B4         	movff	colourcards_testingRGBC@abs+2,?_sprintf+6
  2807  0022F6  C1CD  F0B5         	movff	colourcards_testingRGBC@abs+3,?_sprintf+7
  2808  0022FA  C1CE  F0B6         	movff	colourcards_testingRGBC@abs+4,?_sprintf+8
  2809  0022FE  C1CF  F0B7         	movff	colourcards_testingRGBC@abs+5,?_sprintf+9
  2810  002302  C1D0  F0B8         	movff	colourcards_testingRGBC@abs+6,?_sprintf+10
  2811  002306  C1D1  F0B9         	movff	colourcards_testingRGBC@abs+7,?_sprintf+11
  2812  00230A  C1D2  F0BA         	movff	colourcards_testingRGBC@rel,?_sprintf+12
  2813  00230E  C1D3  F0BB         	movff	colourcards_testingRGBC@rel+1,?_sprintf+13
  2814  002312  C1D4  F0BC         	movff	colourcards_testingRGBC@rel+2,?_sprintf+14
  2815  002316  C1D5  F0BD         	movff	colourcards_testingRGBC@rel+3,?_sprintf+15
  2816  00231A  C1D6  F0BE         	movff	colourcards_testingRGBC@rel+4,?_sprintf+16
  2817  00231E  C1D7  F0BF         	movff	colourcards_testingRGBC@rel+5,?_sprintf+17
  2818  002322  C1D8  F0C0         	movff	colourcards_testingRGBC@rel+6,?_sprintf+18
  2819  002326  C1D9  F0C1         	movff	colourcards_testingRGBC@rel+7,?_sprintf+19
  2820  00232A  C1DA  F0C2         	movff	colourcards_testingRGBC@rel+8,?_sprintf+20
  2821  00232E  C1DB  F0C3         	movff	colourcards_testingRGBC@rel+9,?_sprintf+21
  2822  002332  C1DC  F0C4         	movff	colourcards_testingRGBC@rel+10,?_sprintf+22
  2823  002336  C1DD  F0C5         	movff	colourcards_testingRGBC@rel+11,?_sprintf+23
  2824  00233A  0E8E               	movlw	low STR_16
  2825  00233C  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2826  00233E  0E0E               	movlw	high STR_16
  2827  002340  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2828  002342  EC03  F02F         	call	_sprintf	;wreg free
  2829                           
  2830                           ;colour_cards.c: 190:         } else {
  2831  002346  EFDC  F011         	goto	l6181
  2832  00234A                     l6179:
  2833                           
  2834                           ;colour_cards.c: 192:             sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f
      +                           %.3f     Colour: %s\n\r", abs.R, abs.G, abs.B, abs.C, rel.R, rel.G, rel.B, "unknown");
  2835  00234A  0EAC               	movlw	low colourcards_testingRGBC@buf
  2836  00234C  0100               	movlb	0	; () banked
  2837  00234E  6FAE               	movwf	sprintf@s& (0+255),b
  2838  002350  0E01               	movlw	high colourcards_testingRGBC@buf
  2839  002352  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2840  002354  0E01               	movlw	low STR_1
  2841  002356  6FB0               	movwf	sprintf@fmt& (0+255),b
  2842  002358  0E0E               	movlw	high STR_1
  2843  00235A  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2844  00235C  C1CA  F0B2         	movff	colourcards_testingRGBC@abs,?_sprintf+4
  2845  002360  C1CB  F0B3         	movff	colourcards_testingRGBC@abs+1,?_sprintf+5
  2846  002364  C1CC  F0B4         	movff	colourcards_testingRGBC@abs+2,?_sprintf+6
  2847  002368  C1CD  F0B5         	movff	colourcards_testingRGBC@abs+3,?_sprintf+7
  2848  00236C  C1CE  F0B6         	movff	colourcards_testingRGBC@abs+4,?_sprintf+8
  2849  002370  C1CF  F0B7         	movff	colourcards_testingRGBC@abs+5,?_sprintf+9
  2850  002374  C1D0  F0B8         	movff	colourcards_testingRGBC@abs+6,?_sprintf+10
  2851  002378  C1D1  F0B9         	movff	colourcards_testingRGBC@abs+7,?_sprintf+11
  2852  00237C  C1D2  F0BA         	movff	colourcards_testingRGBC@rel,?_sprintf+12
  2853  002380  C1D3  F0BB         	movff	colourcards_testingRGBC@rel+1,?_sprintf+13
  2854  002384  C1D4  F0BC         	movff	colourcards_testingRGBC@rel+2,?_sprintf+14
  2855  002388  C1D5  F0BD         	movff	colourcards_testingRGBC@rel+3,?_sprintf+15
  2856  00238C  C1D6  F0BE         	movff	colourcards_testingRGBC@rel+4,?_sprintf+16
  2857  002390  C1D7  F0BF         	movff	colourcards_testingRGBC@rel+5,?_sprintf+17
  2858  002394  C1D8  F0C0         	movff	colourcards_testingRGBC@rel+6,?_sprintf+18
  2859  002398  C1D9  F0C1         	movff	colourcards_testingRGBC@rel+7,?_sprintf+19
  2860  00239C  C1DA  F0C2         	movff	colourcards_testingRGBC@rel+8,?_sprintf+20
  2861  0023A0  C1DB  F0C3         	movff	colourcards_testingRGBC@rel+9,?_sprintf+21
  2862  0023A4  C1DC  F0C4         	movff	colourcards_testingRGBC@rel+10,?_sprintf+22
  2863  0023A8  C1DD  F0C5         	movff	colourcards_testingRGBC@rel+11,?_sprintf+23
  2864  0023AC  0E78               	movlw	low STR_18
  2865  0023AE  6FC6               	movwf	(?_sprintf+24)& (0+255),b
  2866  0023B0  0E0E               	movlw	high STR_18
  2867  0023B2  6FC7               	movwf	(?_sprintf+25)& (0+255),b
  2868  0023B4  EC03  F02F         	call	_sprintf	;wreg free
  2869  0023B8                     l6181:
  2870                           
  2871                           ;colour_cards.c: 195:         sendStringSerial4(buf);
  2872  0023B8  0EAC               	movlw	low colourcards_testingRGBC@buf
  2873  0023BA  6E02               	movwf	sendStringSerial4@string^0,c
  2874  0023BC  0E01               	movlw	high colourcards_testingRGBC@buf
  2875  0023BE  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2876  0023C0  ECAA  F031         	call	_sendStringSerial4	;wreg free
  2877  0023C4                     
  2878                           ;colour_cards.c: 196:         _delay((unsigned long)((500)*(64000000/4000.0)));
  2879  0023C4  0E29               	movlw	41
  2880  0023C6  6E5F               	movwf	(??_colourcards_testingRGBC+1)^0,c
  2881  0023C8  0E96               	movlw	150
  2882  0023CA  6E5E               	movwf	??_colourcards_testingRGBC^0,c
  2883  0023CC  0E7F               	movlw	127
  2884  0023CE                     u8357:
  2885  0023CE  2EE8               	decfsz	wreg,f,c
  2886  0023D0  D7FE               	bra	u8357
  2887  0023D2  2E5E               	decfsz	??_colourcards_testingRGBC^0,f,c
  2888  0023D4  D7FC               	bra	u8357
  2889  0023D6  2E5F               	decfsz	(??_colourcards_testingRGBC+1)^0,f,c
  2890  0023D8  D7FA               	bra	u8357
  2891  0023DA  F000               	nop	
  2892  0023DC  EFA7  F00D         	goto	l175
  2893  0023E0  0012               	return		;funcret
  2894  0023E2                     __end_of_colourcards_testingRGBC:
  2895                           	callstack 0
  2896                           
  2897 ;; *************** function _sprintf *****************
  2898 ;; Defined at:
  2899 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  s               2   78[BANK0 ] PTR unsigned char 
  2902 ;;		 -> colourclick_testing@buf(40), colourcards_testingRGBC@buf(30), 
  2903 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  2904 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  2905 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  2906 ;;		 -> STR_3(64), STR_1(64), 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  f               6  106[BANK0 ] struct _IO_FILE
  2909 ;;  ap              2  104[BANK0 ] PTR void [1]
  2910 ;;		 -> ?_sprintf(2), 
  2911 ;;  ret             2    0        int 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2   78[BANK0 ] int 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2921 ;;      Params:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2922 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;Total ram usage:       34 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 7
  2928 ;; This function calls:
  2929 ;;		_vfprintf
  2930 ;; This function is called by:
  2931 ;;		_colourcards_testingRGBC
  2932 ;;		_colourclick_testing
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text6
  2937  005E06                     __ptext6:
  2938                           	callstack 0
  2939  005E06                     _sprintf:
  2940                           	callstack 22
  2941  005E06  0EB2               	movlw	low (?_sprintf+4)
  2942  005E08  0100               	movlb	0	; () banked
  2943  005E0A  6FC8               	movwf	sprintf@ap& (0+255),b
  2944  005E0C  0E00               	movlw	high (?_sprintf+4)
  2945  005E0E  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  2946  005E10  C0AE  F0CA         	movff	sprintf@s,sprintf@f
  2947  005E14  C0AF  F0CB         	movff	sprintf@s+1,sprintf@f+1
  2948  005E18                     
  2949                           ; BSR set to: 0
  2950  005E18  0E00               	movlw	0
  2951  005E1A  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  2952  005E1C  0E00               	movlw	0
  2953  005E1E  6FCC               	movwf	(sprintf@f+2)& (0+255),b
  2954  005E20                     
  2955                           ; BSR set to: 0
  2956  005E20  0E00               	movlw	0
  2957  005E22  6FCF               	movwf	(sprintf@f+5)& (0+255),b
  2958  005E24  0E00               	movlw	0
  2959  005E26  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  2960  005E28                     
  2961                           ; BSR set to: 0
  2962  005E28  0ECA               	movlw	low sprintf@f
  2963  005E2A  6E56               	movwf	vfprintf@fp^0,c
  2964  005E2C  0E00               	movlw	high sprintf@f
  2965  005E2E  6E57               	movwf	(vfprintf@fp+1)^0,c
  2966  005E30  C0B0  F058         	movff	sprintf@fmt,vfprintf@fmt
  2967  005E34  C0B1  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2968  005E38  0EC8               	movlw	low sprintf@ap
  2969  005E3A  6E5A               	movwf	vfprintf@ap^0,c
  2970  005E3C  0E00               	movlw	high sprintf@ap
  2971  005E3E  6E5B               	movwf	(vfprintf@ap+1)^0,c
  2972  005E40  EC42  F02E         	call	_vfprintf	;wreg free
  2973  005E44  0100               	movlb	0	; () banked
  2974  005E46  51CC               	movf	(sprintf@f+2)& (0+255),w,b
  2975  005E48  25AE               	addwf	sprintf@s& (0+255),w,b
  2976  005E4A  6ED9               	movwf	fsr2l,c
  2977  005E4C  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  2978  005E4E  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  2979  005E50  6EDA               	movwf	fsr2h,c
  2980  005E52  0E00               	movlw	0
  2981  005E54  6EDF               	movwf	indf2,c
  2982  005E56                     
  2983                           ; BSR set to: 0
  2984  005E56  0012               	return		;funcret
  2985  005E58                     __end_of_sprintf:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _vfprintf *****************
  2989 ;; Defined at:
  2990 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  2993 ;;		 -> sprintf@f(6), 
  2994 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  2995 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  2996 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  2997 ;;		 -> STR_3(64), STR_1(64), 
  2998 ;;  ap              2   89[COMRAM] PTR PTR void 
  2999 ;;		 -> sprintf@ap(2), 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  3002 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  3003 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  3004 ;;		 -> STR_3(64), STR_1(64), 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  2   85[COMRAM] int 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3014 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;Total ram usage:        8 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 6
  3021 ;; This function calls:
  3022 ;;		_vfpfcnvrt
  3023 ;; This function is called by:
  3024 ;;		_sprintf
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text7
  3029  005C84                     __ptext7:
  3030                           	callstack 0
  3031  005C84                     _vfprintf:
  3032                           	callstack 22
  3033  005C84                     
  3034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3035  005C84  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  3036  005C88  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3037  005C8C                     
  3038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3039  005C8C  0E00               	movlw	0
  3040  005C8E  0100               	movlb	0	; () banked
  3041  005C90  6FED               	movwf	(_nout+1)& (0+255),b
  3042  005C92  0E00               	movlw	0
  3043  005C94  6FEC               	movwf	_nout& (0+255),b
  3044                           
  3045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3046  005C96  EF60  F02E         	goto	l5863
  3047  005C9A                     l5861:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3051  005C9A  C056  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3052  005C9E  C057  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3053  005CA2  0E5C               	movlw	low vfprintf@cfmt
  3054  005CA4  6E4E               	movwf	vfpfcnvrt@fmt^0,c
  3055  005CA6  0E00               	movlw	high vfprintf@cfmt
  3056  005CA8  6E4F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3057  005CAA  C05A  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  3058  005CAE  C05B  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3059  005CB2  ECBF  F015         	call	_vfpfcnvrt	;wreg free
  3060  005CB6  504C               	movf	?_vfpfcnvrt^0,w,c
  3061  005CB8  0100               	movlb	0	; () banked
  3062  005CBA  27EC               	addwf	_nout& (0+255),f,b
  3063  005CBC  504D               	movf	(?_vfpfcnvrt+1)^0,w,c
  3064  005CBE  23ED               	addwfc	(_nout+1)& (0+255),f,b
  3065  005CC0                     l5863:
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3069  005CC0  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3070  005CC4  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3071  005CC8                     	if	0	;tblptru may be non-zero
  3072  005CC8                     	endif
  3073  005CC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3074  005CC8  0E00               	movlw	low (__mediumconst shr (0+16))
  3075  005CCA  6EF8               	movwf	tblptru,c
  3076  005CCC                     	endif
  3077  005CCC  0008               	tblrd		*
  3078  005CCE  50F5               	movf	tablat,w,c
  3079  005CD0  0900               	iorlw	0
  3080  005CD2  A4D8               	btfss	status,2,c
  3081  005CD4  EF6E  F02E         	goto	u7231
  3082  005CD8  EF70  F02E         	goto	u7230
  3083  005CDC                     u7231:
  3084  005CDC  EF4D  F02E         	goto	l5861
  3085  005CE0                     u7230:
  3086  005CE0                     
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3089  005CE0  C0EC  F056         	movff	_nout,?_vfprintf
  3090  005CE4  C0ED  F057         	movff	_nout+1,?_vfprintf+1
  3091  005CE8                     
  3092                           ; BSR set to: 0
  3093  005CE8  0012               	return		;funcret
  3094  005CEA                     __end_of_vfprintf:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _vfpfcnvrt *****************
  3098 ;; Defined at:
  3099 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  3102 ;;		 -> sprintf@f(6), 
  3103 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  3104 ;;		 -> vfprintf@cfmt(2), 
  3105 ;;  ap              2   79[COMRAM] PTR PTR void 
  3106 ;;		 -> sprintf@ap(2), 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  ll              8   56[BANK0 ] long long 
  3109 ;;  llu             8    0        unsigned long long 
  3110 ;;  f               4   70[BANK0 ] unsigned long long 
  3111 ;;  ct              3   74[BANK0 ] unsigned char [3]
  3112 ;;  vp              3    0        PTR void 
  3113 ;;  cp              2   64[BANK0 ] PTR unsigned char 
  3114 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(5), 
  3115 ;;		 -> STR_12(7), STR_10(11), STR_8(6), STR_6(5), 
  3116 ;;		 -> STR_4(4), STR_2(7), 
  3117 ;;  i               2    0        int 
  3118 ;;  done            2    0        int 
  3119 ;;  c               1   77[BANK0 ] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  2   75[COMRAM] int 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3129 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3130 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3131 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3132 ;;      Totals:        10      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3133 ;;Total ram usage:       32 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 5
  3136 ;; This function calls:
  3137 ;;		_atoi
  3138 ;;		_dtoa
  3139 ;;		_efgtoa
  3140 ;;		_fputc
  3141 ;;		_isdigit
  3142 ;;		_isupper
  3143 ;;		_stoa
  3144 ;;		_strncmp
  3145 ;;		_tolower
  3146 ;; This function is called by:
  3147 ;;		_vfprintf
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text8
  3152  002B7E                     __ptext8:
  3153                           	callstack 0
  3154  002B7E                     _vfpfcnvrt:
  3155                           	callstack 22
  3156  002B7E                     
  3157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3158  002B7E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3159  002B82  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3160  002B86  CFDE FFF6          	movff	postinc2,tblptrl
  3161  002B8A  CFDD FFF7          	movff	postdec2,tblptrh
  3162  002B8E                     	if	0	;tblptru may be non-zero
  3163  002B8E                     	endif
  3164  002B8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3165  002B8E  0E00               	movlw	low (__mediumconst shr (0+16))
  3166  002B90  6EF8               	movwf	tblptru,c
  3167  002B92                     	endif
  3168  002B92  0008               	tblrd		*
  3169  002B94  50F5               	movf	tablat,w,c
  3170  002B96  0A25               	xorlw	37
  3171  002B98  A4D8               	btfss	status,2,c
  3172  002B9A  EFD1  F015         	goto	u6881
  3173  002B9E  EFD3  F015         	goto	u6880
  3174  002BA2                     u6881:
  3175  002BA2  EF95  F018         	goto	l5771
  3176  002BA6                     u6880:
  3177  002BA6                     
  3178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3179  002BA6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3180  002BAA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3181  002BAE  2ADE               	incf	postinc2,f,c
  3182  002BB0  0E00               	movlw	0
  3183  002BB2  22DD               	addwfc	postdec2,f,c
  3184  002BB4                     
  3185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3186  002BB4  0E00               	movlw	0
  3187  002BB6  0100               	movlb	0	; () banked
  3188  002BB8  6FEF               	movwf	(_width+1)& (0+255),b
  3189  002BBA  0E00               	movlw	0
  3190  002BBC  6FEE               	movwf	_width& (0+255),b
  3191  002BBE  C0EE  F0F2         	movff	_width,_flags
  3192  002BC2  C0EF  F0F3         	movff	_width+1,_flags+1
  3193  002BC6                     
  3194                           ; BSR set to: 0
  3195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3196  002BC6  69F0               	setf	_prec& (0+255),b
  3197  002BC8  69F1               	setf	(_prec+1)& (0+255),b
  3198  002BCA                     
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3201  002BCA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3202  002BCE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3203  002BD2  CFDE FFF6          	movff	postinc2,tblptrl
  3204  002BD6  CFDD FFF7          	movff	postdec2,tblptrh
  3205  002BDA                     	if	0	;tblptru may be non-zero
  3206  002BDA                     	endif
  3207  002BDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3208  002BDA  0E00               	movlw	low (__mediumconst shr (0+16))
  3209  002BDC  6EF8               	movwf	tblptru,c
  3210  002BDE                     	endif
  3211  002BDE  0008               	tblrd		*
  3212  002BE0  50F5               	movf	tablat,w,c
  3213  002BE2  0A2E               	xorlw	46
  3214  002BE4  A4D8               	btfss	status,2,c
  3215  002BE6  EFF7  F015         	goto	u6891
  3216  002BEA  EFF9  F015         	goto	u6890
  3217  002BEE                     u6891:
  3218  002BEE  EF7B  F016         	goto	l5699
  3219  002BF2                     u6890:
  3220  002BF2                     
  3221                           ; BSR set to: 0
  3222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3223  002BF2  0E00               	movlw	0
  3224  002BF4  6FF1               	movwf	(_prec+1)& (0+255),b
  3225  002BF6  0E00               	movlw	0
  3226  002BF8  6FF0               	movwf	_prec& (0+255),b
  3227  002BFA                     
  3228                           ; BSR set to: 0
  3229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3230  002BFA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3231  002BFE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3232  002C02  2ADE               	incf	postinc2,f,c
  3233  002C04  0E00               	movlw	0
  3234  002C06  22DD               	addwfc	postdec2,f,c
  3235  002C08                     
  3236                           ; BSR set to: 0
  3237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3238  002C08  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3239  002C0C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3240  002C10  CFDE FFF6          	movff	postinc2,tblptrl
  3241  002C14  CFDD FFF7          	movff	postdec2,tblptrh
  3242  002C18                     	if	0	;tblptru may be non-zero
  3243  002C18                     	endif
  3244  002C18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3245  002C18  0E00               	movlw	low (__mediumconst shr (0+16))
  3246  002C1A  6EF8               	movwf	tblptru,c
  3247  002C1C                     	endif
  3248  002C1C  0008               	tblrd		*
  3249  002C1E  50F5               	movf	tablat,w,c
  3250  002C20  0A2A               	xorlw	42
  3251  002C22  A4D8               	btfss	status,2,c
  3252  002C24  EF16  F016         	goto	u6901
  3253  002C28  EF18  F016         	goto	u6900
  3254  002C2C                     u6901:
  3255  002C2C  EF35  F016         	goto	l5689
  3256  002C30                     u6900:
  3257  002C30                     
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3260  002C30  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3261  002C34  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3262  002C38  2ADE               	incf	postinc2,f,c
  3263  002C3A  0E00               	movlw	0
  3264  002C3C  22DD               	addwfc	postdec2,f,c
  3265                           
  3266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3267  002C3E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3268  002C42  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3269  002C46  CFDF F052          	movff	indf2,??_vfpfcnvrt
  3270  002C4A  0E02               	movlw	2
  3271  002C4C  26DE               	addwf	postinc2,f,c
  3272  002C4E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  3273  002C52  0E00               	movlw	0
  3274  002C54  22DD               	addwfc	postdec2,f,c
  3275  002C56  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3276  002C5A  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3277  002C5E  CFDE F0F0          	movff	postinc2,_prec
  3278  002C62  CFDD F0F1          	movff	postdec2,_prec+1
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3281  002C66  EF7B  F016         	goto	l5699
  3282  002C6A                     l5689:
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3286  002C6A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3287  002C6E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3288  002C72  CFDE F008          	movff	postinc2,atoi@s
  3289  002C76  CFDD F009          	movff	postdec2,atoi@s+1
  3290  002C7A  EC0A  F024         	call	_atoi	;wreg free
  3291  002C7E  C008  F0F0         	movff	?_atoi,_prec
  3292  002C82  C009  F0F1         	movff	?_atoi+1,_prec+1
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3295  002C86  EF4C  F016         	goto	l5693
  3296  002C8A                     l5691:
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3300  002C8A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3301  002C8E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3302  002C92  2ADE               	incf	postinc2,f,c
  3303  002C94  0E00               	movlw	0
  3304  002C96  22DD               	addwfc	postdec2,f,c
  3305  002C98                     l5693:
  3306  002C98  0ED0               	movlw	208
  3307  002C9A  6E52               	movwf	??_vfpfcnvrt^0,c
  3308  002C9C  0EFF               	movlw	255
  3309  002C9E  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  3310  002CA0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3311  002CA4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3312  002CA8  CFDE FFF6          	movff	postinc2,tblptrl
  3313  002CAC  CFDD FFF7          	movff	postdec2,tblptrh
  3314  002CB0                     	if	0	;tblptru may be non-zero
  3315  002CB0                     	endif
  3316  002CB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3317  002CB0  0E00               	movlw	low (__mediumconst shr (0+16))
  3318  002CB2  6EF8               	movwf	tblptru,c
  3319  002CB4                     	endif
  3320  002CB4  0008               	tblrd		*
  3321  002CB6  50F5               	movf	tablat,w,c
  3322  002CB8  6E54               	movwf	(??_vfpfcnvrt+2)^0,c
  3323  002CBA  6A55               	clrf	(??_vfpfcnvrt+3)^0,c
  3324  002CBC  5052               	movf	??_vfpfcnvrt^0,w,c
  3325  002CBE  2654               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3326  002CC0  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  3327  002CC2  2255               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3328  002CC4  5055               	movf	(??_vfpfcnvrt+3)^0,w,c
  3329  002CC6  E10A               	bnz	u6910
  3330  002CC8  0E0A               	movlw	10
  3331  002CCA  5C54               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3332  002CCC  A0D8               	btfss	status,0,c
  3333  002CCE  EF6B  F016         	goto	u6911
  3334  002CD2  EF6E  F016         	goto	u6910
  3335  002CD6                     u6911:
  3336  002CD6  0E01               	movlw	1
  3337  002CD8  EF6F  F016         	goto	u6920
  3338  002CDC                     u6910:
  3339  002CDC  0E00               	movlw	0
  3340  002CDE                     u6920:
  3341  002CDE  0100               	movlb	0	; () banked
  3342  002CE0  6FA2               	movwf	_vfpfcnvrt$3086& (0+255),b
  3343  002CE2  6BA3               	clrf	(_vfpfcnvrt$3086+1)& (0+255),b
  3344  002CE4                     
  3345                           ; BSR set to: 0
  3346  002CE4  51A2               	movf	_vfpfcnvrt$3086& (0+255),w,b
  3347  002CE6  11A3               	iorwf	(_vfpfcnvrt$3086+1)& (0+255),w,b
  3348  002CE8  A4D8               	btfss	status,2,c
  3349  002CEA  EF79  F016         	goto	u6931
  3350  002CEE  EF7B  F016         	goto	u6930
  3351  002CF2                     u6931:
  3352  002CF2  EF45  F016         	goto	l5691
  3353  002CF6                     u6930:
  3354  002CF6                     l5699:
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3358  002CF6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3359  002CFA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3360  002CFE  CFDE FFF6          	movff	postinc2,tblptrl
  3361  002D02  CFDD FFF7          	movff	postdec2,tblptrh
  3362  002D06                     	if	0	;tblptru may be non-zero
  3363  002D06                     	endif
  3364  002D06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3365  002D06  0E00               	movlw	low (__mediumconst shr (0+16))
  3366  002D08  6EF8               	movwf	tblptru,c
  3367  002D0A                     	endif
  3368  002D0A  0008               	tblrd		*
  3369  002D0C  50F5               	movf	tablat,w,c
  3370  002D0E  6E07               	movwf	tolower@c^0,c
  3371  002D10  6A08               	clrf	(tolower@c+1)^0,c
  3372  002D12  EC75  F02E         	call	_tolower	;wreg free
  3373  002D16  5007               	movf	?_tolower^0,w,c
  3374  002D18  0100               	movlb	0	; () banked
  3375  002D1A  6FAA               	movwf	vfpfcnvrt@ct& (0+255),b
  3376  002D1C                     
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3379  002D1C  51AA               	movf	vfpfcnvrt@ct& (0+255),w,b
  3380  002D1E  B4D8               	btfsc	status,2,c
  3381  002D20  EF94  F016         	goto	u6941
  3382  002D24  EF96  F016         	goto	u6940
  3383  002D28                     u6941:
  3384  002D28  EFD4  F016         	goto	l5709
  3385  002D2C                     u6940:
  3386  002D2C                     
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3389  002D2C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3390  002D30  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3391  002D34  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  3392  002D38  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  3393  002D3C  0E01               	movlw	1
  3394  002D3E  2652               	addwf	??_vfpfcnvrt^0,f,c
  3395  002D40  0E00               	movlw	0
  3396  002D42  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3397  002D44  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3398  002D48  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3399  002D4C                     	if	0	;tblptru may be non-zero
  3400  002D4C                     	endif
  3401  002D4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3402  002D4C  0E00               	movlw	low (__mediumconst shr (0+16))
  3403  002D4E  6EF8               	movwf	tblptru,c
  3404  002D50                     	endif
  3405  002D50  0008               	tblrd		*
  3406  002D52  50F5               	movf	tablat,w,c
  3407  002D54  6E07               	movwf	tolower@c^0,c
  3408  002D56  6A08               	clrf	(tolower@c+1)^0,c
  3409  002D58  EC75  F02E         	call	_tolower	;wreg free
  3410  002D5C  5007               	movf	?_tolower^0,w,c
  3411  002D5E  0100               	movlb	0	; () banked
  3412  002D60  6FAB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3413  002D62                     
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3416  002D62  51AB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3417  002D64  B4D8               	btfsc	status,2,c
  3418  002D66  EFB7  F016         	goto	u6951
  3419  002D6A  EFB9  F016         	goto	u6950
  3420  002D6E                     u6951:
  3421  002D6E  EFD4  F016         	goto	l5709
  3422  002D72                     u6950:
  3423  002D72                     
  3424                           ; BSR set to: 0
  3425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3426  002D72  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3427  002D76  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3428  002D7A  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  3429  002D7E  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  3430  002D82  0E02               	movlw	2
  3431  002D84  2652               	addwf	??_vfpfcnvrt^0,f,c
  3432  002D86  0E00               	movlw	0
  3433  002D88  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3434  002D8A  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3435  002D8E  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3436  002D92                     	if	0	;tblptru may be non-zero
  3437  002D92                     	endif
  3438  002D92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3439  002D92  0E00               	movlw	low (__mediumconst shr (0+16))
  3440  002D94  6EF8               	movwf	tblptru,c
  3441  002D96                     	endif
  3442  002D96  0008               	tblrd		*
  3443  002D98  50F5               	movf	tablat,w,c
  3444  002D9A  6E07               	movwf	tolower@c^0,c
  3445  002D9C  6A08               	clrf	(tolower@c+1)^0,c
  3446  002D9E  EC75  F02E         	call	_tolower	;wreg free
  3447  002DA2  5007               	movf	?_tolower^0,w,c
  3448  002DA4  0100               	movlb	0	; () banked
  3449  002DA6  6FAC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3450  002DA8                     l5709:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3454  002DA8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3455  002DAC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3456  002DB0  CFDE FFF6          	movff	postinc2,tblptrl
  3457  002DB4  CFDD FFF7          	movff	postdec2,tblptrh
  3458  002DB8                     	if	0	;tblptru may be non-zero
  3459  002DB8                     	endif
  3460  002DB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3461  002DB8  0E00               	movlw	low (__mediumconst shr (0+16))
  3462  002DBA  6EF8               	movwf	tblptru,c
  3463  002DBC                     	endif
  3464  002DBC  0008               	tblrd		*
  3465  002DBE  50F5               	movf	tablat,w,c
  3466  002DC0  0A64               	xorlw	100
  3467  002DC2  B4D8               	btfsc	status,2,c
  3468  002DC4  EFE6  F016         	goto	u6961
  3469  002DC8  EFE8  F016         	goto	u6960
  3470  002DCC                     u6961:
  3471  002DCC  EFFC  F016         	goto	l5713
  3472  002DD0                     u6960:
  3473  002DD0                     
  3474                           ; BSR set to: 0
  3475  002DD0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3476  002DD4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3477  002DD8  CFDE FFF6          	movff	postinc2,tblptrl
  3478  002DDC  CFDD FFF7          	movff	postdec2,tblptrh
  3479  002DE0                     	if	0	;tblptru may be non-zero
  3480  002DE0                     	endif
  3481  002DE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3482  002DE0  0E00               	movlw	low (__mediumconst shr (0+16))
  3483  002DE2  6EF8               	movwf	tblptru,c
  3484  002DE4                     	endif
  3485  002DE4  0008               	tblrd		*
  3486  002DE6  50F5               	movf	tablat,w,c
  3487  002DE8  0A69               	xorlw	105
  3488  002DEA  A4D8               	btfss	status,2,c
  3489  002DEC  EFFA  F016         	goto	u6971
  3490  002DF0  EFFC  F016         	goto	u6970
  3491  002DF4                     u6971:
  3492  002DF4  EF3C  F017         	goto	l5719
  3493  002DF8                     u6970:
  3494  002DF8                     l5713:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3498  002DF8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3499  002DFC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3500  002E00  2ADE               	incf	postinc2,f,c
  3501  002E02  0E00               	movlw	0
  3502  002E04  22DD               	addwfc	postdec2,f,c
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3505  002E06  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3506  002E0A  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3507  002E0E  CFDF F052          	movff	indf2,??_vfpfcnvrt
  3508  002E12  0E02               	movlw	2
  3509  002E14  26DE               	addwf	postinc2,f,c
  3510  002E16  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  3511  002E1A  0E00               	movlw	0
  3512  002E1C  22DD               	addwfc	postdec2,f,c
  3513  002E1E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3514  002E22  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3515  002E26  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  3516  002E2A  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  3517  002E2E  0E00               	movlw	0
  3518  002E30  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3519  002E32  0EFF               	movlw	-1
  3520  002E34  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3521  002E36  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3522  002E38  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3523  002E3A  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3524  002E3C  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3525  002E3E  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3526  002E40                     
  3527                           ; BSR set to: 0
  3528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3529  002E40  C04C  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3530  002E44  C04D  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3531  002E48  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3532  002E4C  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3533  002E50  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3534  002E54  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3535  002E58  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3536  002E5C  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3537  002E60  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3538  002E64  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3539  002E68  ECF5  F01E         	call	_dtoa	;wreg free
  3540  002E6C  C01C  F04C         	movff	?_dtoa,?_vfpfcnvrt
  3541  002E70  C01D  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3542  002E74  EFB2  F018         	goto	l1618
  3543  002E78                     l5719:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3547  002E78  0E66               	movlw	102
  3548  002E7A  19AA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3549  002E7C  A4D8               	btfss	status,2,c
  3550  002E7E  EF43  F017         	goto	u6981
  3551  002E82  EF45  F017         	goto	u6980
  3552  002E86                     u6981:
  3553  002E86  EF87  F017         	goto	l5731
  3554  002E8A                     u6980:
  3555  002E8A                     
  3556                           ; BSR set to: 0
  3557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3558  002E8A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3559  002E8E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3560  002E92  CFDE FFF6          	movff	postinc2,tblptrl
  3561  002E96  CFDD FFF7          	movff	postdec2,tblptrh
  3562  002E9A                     	if	0	;tblptru may be non-zero
  3563  002E9A                     	endif
  3564  002E9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3565  002E9A  0E00               	movlw	low (__mediumconst shr (0+16))
  3566  002E9C  6EF8               	movwf	tblptru,c
  3567  002E9E                     	endif
  3568  002E9E  0008               	tblrd		*
  3569  002EA0  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  3570  002EA4                     
  3571                           ; BSR set to: 0
  3572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3573  002EA4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3574  002EA8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3575  002EAC  2ADE               	incf	postinc2,f,c
  3576  002EAE  0E00               	movlw	0
  3577  002EB0  22DD               	addwfc	postdec2,f,c
  3578  002EB2                     
  3579                           ; BSR set to: 0
  3580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3581  002EB2  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3582  002EB6  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3583  002EBA  CFDF F052          	movff	indf2,??_vfpfcnvrt
  3584  002EBE  0E04               	movlw	4
  3585  002EC0  26DE               	addwf	postinc2,f,c
  3586  002EC2  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  3587  002EC6  0E00               	movlw	0
  3588  002EC8  22DD               	addwfc	postdec2,f,c
  3589  002ECA  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3590  002ECE  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3591  002ED2  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  3592  002ED6  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  3593  002EDA  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  3594  002EDE  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  3595  002EE2                     l5727:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3599  002EE2  C04C  F040         	movff	vfpfcnvrt@fp,efgtoa@fp
  3600  002EE6  C04D  F041         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3601  002EEA  C0A6  F042         	movff	vfpfcnvrt@f,efgtoa@f
  3602  002EEE  C0A7  F043         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3603  002EF2  C0A8  F044         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3604  002EF6  C0A9  F045         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3605  002EFA  C0AD  F046         	movff	vfpfcnvrt@c,efgtoa@c
  3606  002EFE  EC5C  F007         	call	_efgtoa	;wreg free
  3607  002F02  C040  F04C         	movff	?_efgtoa,?_vfpfcnvrt
  3608  002F06  C041  F04D         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3609  002F0A  EFB2  F018         	goto	l1618
  3610  002F0E                     l5731:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3614  002F0E  0EAA               	movlw	low vfpfcnvrt@ct
  3615  002F10  6E01               	movwf	strncmp@_l^0,c
  3616  002F12  0E00               	movlw	high vfpfcnvrt@ct
  3617  002F14  6E02               	movwf	(strncmp@_l+1)^0,c
  3618  002F16  0EB3               	movlw	low STR_28
  3619  002F18  6E03               	movwf	strncmp@_r^0,c
  3620  002F1A  0E0E               	movlw	high STR_28
  3621  002F1C  6E04               	movwf	(strncmp@_r+1)^0,c
  3622  002F1E  0E00               	movlw	0
  3623  002F20  6E06               	movwf	(strncmp@n+1)^0,c
  3624  002F22  0E02               	movlw	2
  3625  002F24  6E05               	movwf	strncmp@n^0,c
  3626  002F26  EC33  F02B         	call	_strncmp	;wreg free
  3627  002F2A  5001               	movf	?_strncmp^0,w,c
  3628  002F2C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3629  002F2E  A4D8               	btfss	status,2,c
  3630  002F30  EF9C  F017         	goto	u6991
  3631  002F34  EF9E  F017         	goto	u6990
  3632  002F38                     u6991:
  3633  002F38  EF1E  F018         	goto	l5747
  3634  002F3C                     u6990:
  3635  002F3C                     
  3636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3637  002F3C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3638  002F40  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3639  002F44  CFDE F052          	movff	postinc2,??_vfpfcnvrt
  3640  002F48  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
  3641  002F4C  0E01               	movlw	1
  3642  002F4E  2652               	addwf	??_vfpfcnvrt^0,f,c
  3643  002F50  0E00               	movlw	0
  3644  002F52  2253               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3645  002F54  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3646  002F58  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3647  002F5C                     	if	0	;tblptru may be non-zero
  3648  002F5C                     	endif
  3649  002F5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3650  002F5C  0E00               	movlw	low (__mediumconst shr (0+16))
  3651  002F5E  6EF8               	movwf	tblptru,c
  3652  002F60                     	endif
  3653  002F60  0008               	tblrd		*
  3654  002F62  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  3655  002F66  0EBF               	movlw	191
  3656  002F68  6E52               	movwf	??_vfpfcnvrt^0,c
  3657  002F6A  0EFF               	movlw	255
  3658  002F6C  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  3659  002F6E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3660  002F72  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3661  002F76  CFDE FFF6          	movff	postinc2,tblptrl
  3662  002F7A  CFDD FFF7          	movff	postdec2,tblptrh
  3663  002F7E                     	if	0	;tblptru may be non-zero
  3664  002F7E                     	endif
  3665  002F7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3666  002F7E  0E00               	movlw	low (__mediumconst shr (0+16))
  3667  002F80  6EF8               	movwf	tblptru,c
  3668  002F82                     	endif
  3669  002F82  0008               	tblrd		*
  3670  002F84  50F5               	movf	tablat,w,c
  3671  002F86  6E54               	movwf	(??_vfpfcnvrt+2)^0,c
  3672  002F88  6A55               	clrf	(??_vfpfcnvrt+3)^0,c
  3673  002F8A  5052               	movf	??_vfpfcnvrt^0,w,c
  3674  002F8C  2654               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3675  002F8E  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  3676  002F90  2255               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3677  002F92  5055               	movf	(??_vfpfcnvrt+3)^0,w,c
  3678  002F94  E10A               	bnz	u7000
  3679  002F96  0E1A               	movlw	26
  3680  002F98  5C54               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3681  002F9A  A0D8               	btfss	status,0,c
  3682  002F9C  EFD2  F017         	goto	u7001
  3683  002FA0  EFD5  F017         	goto	u7000
  3684  002FA4                     u7001:
  3685  002FA4  0E01               	movlw	1
  3686  002FA6  EFD6  F017         	goto	u7010
  3687  002FAA                     u7000:
  3688  002FAA  0E00               	movlw	0
  3689  002FAC                     u7010:
  3690  002FAC  0100               	movlb	0	; () banked
  3691  002FAE  6FA4               	movwf	_vfpfcnvrt$3091& (0+255),b
  3692  002FB0  6BA5               	clrf	(_vfpfcnvrt$3091+1)& (0+255),b
  3693  002FB2                     
  3694                           ; BSR set to: 0
  3695  002FB2  51A4               	movf	_vfpfcnvrt$3091& (0+255),w,b
  3696  002FB4  11A5               	iorwf	(_vfpfcnvrt$3091+1)& (0+255),w,b
  3697  002FB6  B4D8               	btfsc	status,2,c
  3698  002FB8  EFE0  F017         	goto	u7021
  3699  002FBC  EFE2  F017         	goto	u7020
  3700  002FC0                     u7021:
  3701  002FC0  EFFC  F017         	goto	l5741
  3702  002FC4                     u7020:
  3703  002FC4                     
  3704                           ; BSR set to: 0
  3705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3706  002FC4  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3707  002FC8  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3708  002FCC  CFDF F052          	movff	indf2,??_vfpfcnvrt
  3709  002FD0  0E04               	movlw	4
  3710  002FD2  26DE               	addwf	postinc2,f,c
  3711  002FD4  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  3712  002FD8  0E00               	movlw	0
  3713  002FDA  22DD               	addwfc	postdec2,f,c
  3714  002FDC  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3715  002FE0  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3716  002FE4  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  3717  002FE8  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  3718  002FEC  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  3719  002FF0  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  3720                           
  3721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3722  002FF4  EF14  F018         	goto	l1626
  3723  002FF8                     l5741:
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3727  002FF8  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3728  002FFC  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3729  003000  CFDF F052          	movff	indf2,??_vfpfcnvrt
  3730  003004  0E04               	movlw	4
  3731  003006  26DE               	addwf	postinc2,f,c
  3732  003008  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  3733  00300C  0E00               	movlw	0
  3734  00300E  22DD               	addwfc	postdec2,f,c
  3735  003010  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3736  003014  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3737  003018  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  3738  00301C  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  3739  003020  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  3740  003024  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  3741  003028                     l1626:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3745  003028  0E02               	movlw	2
  3746  00302A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3747  00302E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3748  003032  26DE               	addwf	postinc2,f,c
  3749  003034  0E00               	movlw	0
  3750  003036  22DD               	addwfc	postdec2,f,c
  3751  003038  EF71  F017         	goto	l5727
  3752  00303C                     l5747:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  3755  00303C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3756  003040  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3757  003044  CFDE FFF6          	movff	postinc2,tblptrl
  3758  003048  CFDD FFF7          	movff	postdec2,tblptrh
  3759  00304C                     	if	0	;tblptru may be non-zero
  3760  00304C                     	endif
  3761  00304C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3762  00304C  0E00               	movlw	low (__mediumconst shr (0+16))
  3763  00304E  6EF8               	movwf	tblptru,c
  3764  003050                     	endif
  3765  003050  0008               	tblrd		*
  3766  003052  50F5               	movf	tablat,w,c
  3767  003054  0A73               	xorlw	115
  3768  003056  A4D8               	btfss	status,2,c
  3769  003058  EF30  F018         	goto	u7031
  3770  00305C  EF32  F018         	goto	u7030
  3771  003060                     u7031:
  3772  003060  EF5D  F018         	goto	l5755
  3773  003064                     u7030:
  3774  003064                     
  3775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  3776  003064  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3777  003068  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3778  00306C  2ADE               	incf	postinc2,f,c
  3779  00306E  0E00               	movlw	0
  3780  003070  22DD               	addwfc	postdec2,f,c
  3781                           
  3782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3783  003072  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3784  003076  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3785  00307A  CFDF F052          	movff	indf2,??_vfpfcnvrt
  3786  00307E  0E02               	movlw	2
  3787  003080  26DE               	addwf	postinc2,f,c
  3788  003082  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  3789  003086  0E00               	movlw	0
  3790  003088  22DD               	addwfc	postdec2,f,c
  3791  00308A  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3792  00308E  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3793  003092  CFDE F0A0          	movff	postinc2,vfpfcnvrt@cp
  3794  003096  CFDD F0A1          	movff	postdec2,vfpfcnvrt@cp+1
  3795  00309A                     
  3796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  3797  00309A  C04C  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3798  00309E  C04D  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3799  0030A2  C0A0  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3800  0030A6  C0A1  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3801  0030AA  ECDC  F024         	call	_stoa	;wreg free
  3802  0030AE  C00A  F04C         	movff	?_stoa,?_vfpfcnvrt
  3803  0030B2  C00B  F04D         	movff	?_stoa+1,?_vfpfcnvrt+1
  3804  0030B6  EFB2  F018         	goto	l1618
  3805  0030BA                     l5755:
  3806                           
  3807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3808  0030BA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3809  0030BE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3810  0030C2  CFDE FFF6          	movff	postinc2,tblptrl
  3811  0030C6  CFDD FFF7          	movff	postdec2,tblptrh
  3812  0030CA                     	if	0	;tblptru may be non-zero
  3813  0030CA                     	endif
  3814  0030CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3815  0030CA  0E00               	movlw	low (__mediumconst shr (0+16))
  3816  0030CC  6EF8               	movwf	tblptru,c
  3817  0030CE                     	endif
  3818  0030CE  0008               	tblrd		*
  3819  0030D0  50F5               	movf	tablat,w,c
  3820  0030D2  0A25               	xorlw	37
  3821  0030D4  A4D8               	btfss	status,2,c
  3822  0030D6  EF6F  F018         	goto	u7041
  3823  0030DA  EF71  F018         	goto	u7040
  3824  0030DE                     u7041:
  3825  0030DE  EF88  F018         	goto	l5765
  3826  0030E2                     u7040:
  3827  0030E2                     
  3828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3829  0030E2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3830  0030E6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3831  0030EA  2ADE               	incf	postinc2,f,c
  3832  0030EC  0E00               	movlw	0
  3833  0030EE  22DD               	addwfc	postdec2,f,c
  3834  0030F0                     
  3835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3836  0030F0  0E00               	movlw	0
  3837  0030F2  6E02               	movwf	(fputc@c+1)^0,c
  3838  0030F4  0E25               	movlw	37
  3839  0030F6  6E01               	movwf	fputc@c^0,c
  3840  0030F8  C04C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3841  0030FC  C04D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3842  003100  ECA4  F02B         	call	_fputc	;wreg free
  3843  003104                     l5761:
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3846  003104  0E00               	movlw	0
  3847  003106  6E4D               	movwf	(?_vfpfcnvrt+1)^0,c
  3848  003108  0E01               	movlw	1
  3849  00310A  6E4C               	movwf	?_vfpfcnvrt^0,c
  3850  00310C  EFB2  F018         	goto	l1618
  3851  003110                     l5765:
  3852                           
  3853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3854  003110  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3855  003114  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3856  003118  2ADE               	incf	postinc2,f,c
  3857  00311A  0E00               	movlw	0
  3858  00311C  22DD               	addwfc	postdec2,f,c
  3859  00311E                     
  3860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3861  00311E  0E00               	movlw	0
  3862  003120  6E4D               	movwf	(?_vfpfcnvrt+1)^0,c
  3863  003122  0E00               	movlw	0
  3864  003124  6E4C               	movwf	?_vfpfcnvrt^0,c
  3865  003126  EFB2  F018         	goto	l1618
  3866  00312A                     l5771:
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3869  00312A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3870  00312E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3871  003132  CFDE FFF6          	movff	postinc2,tblptrl
  3872  003136  CFDD FFF7          	movff	postdec2,tblptrh
  3873  00313A                     	if	0	;tblptru may be non-zero
  3874  00313A                     	endif
  3875  00313A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3876  00313A  0E00               	movlw	low (__mediumconst shr (0+16))
  3877  00313C  6EF8               	movwf	tblptru,c
  3878  00313E                     	endif
  3879  00313E  0008               	tblrd		*
  3880  003140  50F5               	movf	tablat,w,c
  3881  003142  6E01               	movwf	fputc@c^0,c
  3882  003144  6A02               	clrf	(fputc@c+1)^0,c
  3883  003146  C04C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3884  00314A  C04D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3885  00314E  ECA4  F02B         	call	_fputc	;wreg free
  3886  003152                     
  3887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3888  003152  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3889  003156  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3890  00315A  2ADE               	incf	postinc2,f,c
  3891  00315C  0E00               	movlw	0
  3892  00315E  22DD               	addwfc	postdec2,f,c
  3893  003160  EF82  F018         	goto	l5761
  3894  003164                     l1618:
  3895  003164  0012               	return		;funcret
  3896  003166                     __end_of_vfpfcnvrt:
  3897                           	callstack 0
  3898                           
  3899 ;; *************** function _strncmp *****************
  3900 ;; Defined at:
  3901 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3904 ;;		 -> vfpfcnvrt@ct(3), 
  3905 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3906 ;;		 -> STR_30(3), 
  3907 ;;  n               2    4[COMRAM] unsigned int 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3910 ;;		 -> STR_30(3), 
  3911 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3912 ;;		 -> vfpfcnvrt@ct(3), 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  2    0[COMRAM] int 
  3915 ;; Registers used:
  3916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3922 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3923 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;Total ram usage:       11 bytes
  3927 ;; Hardware stack levels used: 1
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_vfpfcnvrt
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text9
  3936  005666                     __ptext9:
  3937                           	callstack 0
  3938  005666                     _strncmp:
  3939                           	callstack 26
  3940  005666  C001  F008         	movff	strncmp@_l,strncmp@l
  3941  00566A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3942  00566E  C003  F00A         	movff	strncmp@_r,strncmp@r
  3943  005672  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3944  005676  0605               	decf	strncmp@n^0,f,c
  3945  005678  A0D8               	btfss	status,0,c
  3946  00567A  0606               	decf	(strncmp@n+1)^0,f,c
  3947  00567C  2805               	incf	strncmp@n^0,w,c
  3948  00567E  E106               	bnz	u6691
  3949  005680  2806               	incf	(strncmp@n+1)^0,w,c
  3950  005682  A4D8               	btfss	status,2,c
  3951  005684  EF46  F02B         	goto	u6691
  3952  005688  EF48  F02B         	goto	u6690
  3953  00568C                     u6691:
  3954  00568C  EF55  F02B         	goto	l5575
  3955  005690                     u6690:
  3956  005690  0E00               	movlw	0
  3957  005692  6E02               	movwf	(?_strncmp+1)^0,c
  3958  005694  0E00               	movlw	0
  3959  005696  6E01               	movwf	?_strncmp^0,c
  3960  005698  EFA3  F02B         	goto	l1755
  3961  00569C                     l5573:
  3962  00569C  4A08               	infsnz	strncmp@l^0,f,c
  3963  00569E  2A09               	incf	(strncmp@l+1)^0,f,c
  3964  0056A0  4A0A               	infsnz	strncmp@r^0,f,c
  3965  0056A2  2A0B               	incf	(strncmp@r+1)^0,f,c
  3966  0056A4  0605               	decf	strncmp@n^0,f,c
  3967  0056A6  A0D8               	btfss	status,0,c
  3968  0056A8  0606               	decf	(strncmp@n+1)^0,f,c
  3969  0056AA                     l5575:
  3970  0056AA  C008  FFD9         	movff	strncmp@l,fsr2l
  3971  0056AE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3972  0056B2  50DF               	movf	indf2,w,c
  3973  0056B4  B4D8               	btfsc	status,2,c
  3974  0056B6  EF5F  F02B         	goto	u6701
  3975  0056BA  EF61  F02B         	goto	u6700
  3976  0056BE                     u6701:
  3977  0056BE  EF90  F02B         	goto	l5583
  3978  0056C2                     u6700:
  3979  0056C2  C00A  FFF6         	movff	strncmp@r,tblptrl
  3980  0056C6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3981  0056CA                     	if	0	;tblptru may be non-zero
  3982  0056CA                     	endif
  3983  0056CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3984  0056CA  0E00               	movlw	low (__mediumconst shr (0+16))
  3985  0056CC  6EF8               	movwf	tblptru,c
  3986  0056CE                     	endif
  3987  0056CE  0008               	tblrd		*
  3988  0056D0  50F5               	movf	tablat,w,c
  3989  0056D2  0900               	iorlw	0
  3990  0056D4  B4D8               	btfsc	status,2,c
  3991  0056D6  EF6F  F02B         	goto	u6711
  3992  0056DA  EF71  F02B         	goto	u6710
  3993  0056DE                     u6711:
  3994  0056DE  EF90  F02B         	goto	l5583
  3995  0056E2                     u6710:
  3996  0056E2  5005               	movf	strncmp@n^0,w,c
  3997  0056E4  1006               	iorwf	(strncmp@n+1)^0,w,c
  3998  0056E6  B4D8               	btfsc	status,2,c
  3999  0056E8  EF78  F02B         	goto	u6721
  4000  0056EC  EF7A  F02B         	goto	u6720
  4001  0056F0                     u6721:
  4002  0056F0  EF90  F02B         	goto	l5583
  4003  0056F4                     u6720:
  4004  0056F4  C008  FFD9         	movff	strncmp@l,fsr2l
  4005  0056F8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4006  0056FC  50DF               	movf	indf2,w,c
  4007  0056FE  6E07               	movwf	??_strncmp^0,c
  4008  005700  C00A  FFF6         	movff	strncmp@r,tblptrl
  4009  005704  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4010  005708                     	if	0	;tblptru may be non-zero
  4011  005708                     	endif
  4012  005708                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4013  005708  0E00               	movlw	low (__mediumconst shr (0+16))
  4014  00570A  6EF8               	movwf	tblptru,c
  4015  00570C                     	endif
  4016  00570C  0008               	tblrd		*
  4017  00570E  50F5               	movf	tablat,w,c
  4018  005710  1807               	xorwf	??_strncmp^0,w,c
  4019  005712  B4D8               	btfsc	status,2,c
  4020  005714  EF8E  F02B         	goto	u6731
  4021  005718  EF90  F02B         	goto	u6730
  4022  00571C                     u6731:
  4023  00571C  EF4E  F02B         	goto	l5573
  4024  005720                     u6730:
  4025  005720                     l5583:
  4026  005720  C008  FFD9         	movff	strncmp@l,fsr2l
  4027  005724  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4028  005728  50DF               	movf	indf2,w,c
  4029  00572A  6E07               	movwf	??_strncmp^0,c
  4030  00572C  C00A  FFF6         	movff	strncmp@r,tblptrl
  4031  005730  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4032  005734                     	if	0	;tblptru may be non-zero
  4033  005734                     	endif
  4034  005734                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4035  005734  0E00               	movlw	low (__mediumconst shr (0+16))
  4036  005736  6EF8               	movwf	tblptru,c
  4037  005738                     	endif
  4038  005738  0008               	tblrd		*
  4039  00573A  50F5               	movf	tablat,w,c
  4040  00573C  5C07               	subwf	??_strncmp^0,w,c
  4041  00573E  6E01               	movwf	?_strncmp^0,c
  4042  005740  6A02               	clrf	(?_strncmp+1)^0,c
  4043  005742  A0D8               	btfss	status,0,c
  4044  005744  0602               	decf	(?_strncmp+1)^0,f,c
  4045  005746                     l1755:
  4046  005746  0012               	return		;funcret
  4047  005748                     __end_of_strncmp:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function _stoa *****************
  4051 ;; Defined at:
  4052 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  4055 ;;		 -> sprintf@f(6), 
  4056 ;;  s               2   11[COMRAM] PTR unsigned char 
  4057 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(5), 
  4058 ;;		 -> STR_12(7), STR_10(11), STR_8(6), STR_6(5), 
  4059 ;;		 -> STR_4(4), STR_2(7), 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  nuls            7   14[COMRAM] unsigned char [7]
  4062 ;;  l               2   29[COMRAM] int 
  4063 ;;  p               2   27[COMRAM] int 
  4064 ;;  cp              2   25[COMRAM] PTR unsigned char 
  4065 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_18(8), STR_16(6), 
  4066 ;;		 -> STR_14(5), STR_12(7), STR_10(11), STR_8(6), 
  4067 ;;		 -> STR_6(5), STR_4(4), STR_2(7), 
  4068 ;;  w               2   23[COMRAM] int 
  4069 ;;  i               2   21[COMRAM] int 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  2    9[COMRAM] int 
  4072 ;; Registers used:
  4073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4080 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4082 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4083 ;;Total ram usage:       22 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; Hardware stack levels required when called: 2
  4086 ;; This function calls:
  4087 ;;		_fputc
  4088 ;;		_strlen
  4089 ;; This function is called by:
  4090 ;;		_vfpfcnvrt
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text10
  4095  0049B8                     __ptext10:
  4096                           	callstack 0
  4097  0049B8                     _stoa:
  4098                           	callstack 24
  4099  0049B8                     
  4100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  4101  0049B8  EE21  F0DE         	lfsr	2,stoa@F1163
  4102  0049BC  EE10  F00F         	lfsr	1,stoa@nuls
  4103  0049C0  0E06               	movlw	6
  4104  0049C2                     u6521:
  4105  0049C2  CFDB FFE3          	movff	plusw2,plusw1
  4106  0049C6  06E8               	decf	wreg,f,c
  4107  0049C8  E2FC               	bc	u6521
  4108  0049CA                     
  4109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  4110  0049CA  C00C  F01A         	movff	stoa@s,stoa@cp
  4111  0049CE  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  4112  0049D2                     
  4113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  4114  0049D2  501A               	movf	stoa@cp^0,w,c
  4115  0049D4  101B               	iorwf	(stoa@cp+1)^0,w,c
  4116  0049D6  A4D8               	btfss	status,2,c
  4117  0049D8  EFF0  F024         	goto	u6531
  4118  0049DC  EFF2  F024         	goto	u6530
  4119  0049E0                     u6531:
  4120  0049E0  EFF6  F024         	goto	l5491
  4121  0049E4                     u6530:
  4122  0049E4                     
  4123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  4124  0049E4  0E0F               	movlw	low stoa@nuls
  4125  0049E6  6E1A               	movwf	stoa@cp^0,c
  4126  0049E8  0E00               	movlw	high stoa@nuls
  4127  0049EA  6E1B               	movwf	(stoa@cp+1)^0,c
  4128  0049EC                     l5491:
  4129                           
  4130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  4131  0049EC  C01A  F001         	movff	stoa@cp,strlen@s
  4132  0049F0  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  4133  0049F4  EC55  F02F         	call	_strlen	;wreg free
  4134  0049F8  C001  F01E         	movff	?_strlen,stoa@l
  4135  0049FC  C002  F01F         	movff	?_strlen+1,stoa@l+1
  4136  004A00                     
  4137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  4138  004A00  C0F0  F01C         	movff	_prec,stoa@p
  4139  004A04  C0F1  F01D         	movff	_prec+1,stoa@p+1
  4140  004A08                     
  4141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  4142  004A08  BE1D               	btfsc	(stoa@p+1)^0,7,c
  4143  004A0A  EF09  F025         	goto	u6541
  4144  004A0E  EF0B  F025         	goto	u6540
  4145  004A12                     u6541:
  4146  004A12  EF20  F025         	goto	l1585
  4147  004A16                     u6540:
  4148  004A16  501E               	movf	stoa@l^0,w,c
  4149  004A18  5C1C               	subwf	stoa@p^0,w,c
  4150  004A1A  501D               	movf	(stoa@p+1)^0,w,c
  4151  004A1C  0A80               	xorlw	128
  4152  004A1E  6E0E               	movwf	??_stoa^0,c
  4153  004A20  501F               	movf	(stoa@l+1)^0,w,c
  4154  004A22  0A80               	xorlw	128
  4155  004A24  580E               	subwfb	??_stoa^0,w,c
  4156  004A26  A0D8               	btfss	status,0,c
  4157  004A28  EF18  F025         	goto	u6551
  4158  004A2C  EF1A  F025         	goto	u6550
  4159  004A30                     u6551:
  4160  004A30  EF1C  F025         	goto	l1583
  4161  004A34                     u6550:
  4162  004A34  EF20  F025         	goto	l1585
  4163  004A38                     l1583:
  4164  004A38  C01C  F01E         	movff	stoa@p,stoa@l
  4165  004A3C  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  4166  004A40                     l1585:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  4169  004A40  C01E  F01C         	movff	stoa@l,stoa@p
  4170  004A44  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  4171                           
  4172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  4173  004A48  C0EE  F018         	movff	_width,stoa@w
  4174  004A4C  C0EF  F019         	movff	_width+1,stoa@w+1
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  4177  004A50  0100               	movlb	0	; () banked
  4178  004A52  B1F2               	btfsc	_flags& (0+255),0,b
  4179  004A54  EF2E  F025         	goto	u6561
  4180  004A58  EF30  F025         	goto	u6560
  4181  004A5C                     u6561:
  4182  004A5C  EF4D  F025         	goto	l5507
  4183  004A60                     u6560:
  4184  004A60  EF3E  F025         	goto	l5505
  4185  004A64                     l5501:
  4186                           
  4187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  4188  004A64  0E00               	movlw	0
  4189  004A66  6E02               	movwf	(fputc@c+1)^0,c
  4190  004A68  0E20               	movlw	32
  4191  004A6A  6E01               	movwf	fputc@c^0,c
  4192  004A6C  C00A  F003         	movff	stoa@fp,fputc@fp
  4193  004A70  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4194  004A74  ECA4  F02B         	call	_fputc	;wreg free
  4195  004A78                     
  4196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  4197  004A78  4A1E               	infsnz	stoa@l^0,f,c
  4198  004A7A  2A1F               	incf	(stoa@l+1)^0,f,c
  4199  004A7C                     l5505:
  4200                           
  4201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  4202  004A7C  5018               	movf	stoa@w^0,w,c
  4203  004A7E  5C1E               	subwf	stoa@l^0,w,c
  4204  004A80  501F               	movf	(stoa@l+1)^0,w,c
  4205  004A82  0A80               	xorlw	128
  4206  004A84  6E0E               	movwf	??_stoa^0,c
  4207  004A86  5019               	movf	(stoa@w+1)^0,w,c
  4208  004A88  0A80               	xorlw	128
  4209  004A8A  580E               	subwfb	??_stoa^0,w,c
  4210  004A8C  A0D8               	btfss	status,0,c
  4211  004A8E  EF4B  F025         	goto	u6571
  4212  004A92  EF4D  F025         	goto	u6570
  4213  004A96                     u6571:
  4214  004A96  EF32  F025         	goto	l5501
  4215  004A9A                     u6570:
  4216  004A9A                     l5507:
  4217                           
  4218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  4219  004A9A  0E00               	movlw	0
  4220  004A9C  6E17               	movwf	(stoa@i+1)^0,c
  4221  004A9E  0E00               	movlw	0
  4222  004AA0  6E16               	movwf	stoa@i^0,c
  4223                           
  4224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4225  004AA2  EF72  F025         	goto	l5515
  4226  004AA6                     l5509:
  4227                           
  4228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  4229  004AA6  C01A  FFF6         	movff	stoa@cp,tblptrl
  4230  004AAA  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  4231  004AAE  0E00               	movlw	low (__smallconst shr (0+16))
  4232  004AB0  6EF8               	movwf	tblptru,c
  4233  004AB2  0E0D               	movlw	(high __ramtop+-1)
  4234  004AB4  64F7               	cpfsgt	tblptrh,c
  4235  004AB6  D003               	bra	u6587
  4236  004AB8  0008               	tblrd		*
  4237  004ABA  50F5               	movf	tablat,w,c
  4238  004ABC  D005               	bra	u6580
  4239  004ABE                     u6587:
  4240  004ABE  CFF6 FFE9          	movff	tblptrl,fsr0l
  4241  004AC2  CFF7 FFEA          	movff	tblptrh,fsr0h
  4242  004AC6  50EF               	movf	indf0,w,c
  4243  004AC8                     u6580:
  4244  004AC8  6E0E               	movwf	??_stoa^0,c
  4245  004ACA  500E               	movf	??_stoa^0,w,c
  4246  004ACC  6E01               	movwf	fputc@c^0,c
  4247  004ACE  6A02               	clrf	(fputc@c+1)^0,c
  4248  004AD0  C00A  F003         	movff	stoa@fp,fputc@fp
  4249  004AD4  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4250  004AD8  ECA4  F02B         	call	_fputc	;wreg free
  4251  004ADC                     
  4252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  4253  004ADC  4A1A               	infsnz	stoa@cp^0,f,c
  4254  004ADE  2A1B               	incf	(stoa@cp+1)^0,f,c
  4255  004AE0                     
  4256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  4257  004AE0  4A16               	infsnz	stoa@i^0,f,c
  4258  004AE2  2A17               	incf	(stoa@i+1)^0,f,c
  4259  004AE4                     l5515:
  4260                           
  4261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4262  004AE4  501C               	movf	stoa@p^0,w,c
  4263  004AE6  5C16               	subwf	stoa@i^0,w,c
  4264  004AE8  5017               	movf	(stoa@i+1)^0,w,c
  4265  004AEA  0A80               	xorlw	128
  4266  004AEC  6E0E               	movwf	??_stoa^0,c
  4267  004AEE  501D               	movf	(stoa@p+1)^0,w,c
  4268  004AF0  0A80               	xorlw	128
  4269  004AF2  580E               	subwfb	??_stoa^0,w,c
  4270  004AF4  A0D8               	btfss	status,0,c
  4271  004AF6  EF7F  F025         	goto	u6591
  4272  004AFA  EF81  F025         	goto	u6590
  4273  004AFE                     u6591:
  4274  004AFE  EF53  F025         	goto	l5509
  4275  004B02                     u6590:
  4276  004B02                     
  4277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  4278  004B02  0100               	movlb	0	; () banked
  4279  004B04  A1F2               	btfss	_flags& (0+255),0,b
  4280  004B06  EF87  F025         	goto	u6601
  4281  004B0A  EF89  F025         	goto	u6600
  4282  004B0E                     u6601:
  4283  004B0E  EFA6  F025         	goto	l1595
  4284  004B12                     u6600:
  4285  004B12  EF97  F025         	goto	l5523
  4286  004B16                     l5519:
  4287                           
  4288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  4289  004B16  0E00               	movlw	0
  4290  004B18  6E02               	movwf	(fputc@c+1)^0,c
  4291  004B1A  0E20               	movlw	32
  4292  004B1C  6E01               	movwf	fputc@c^0,c
  4293  004B1E  C00A  F003         	movff	stoa@fp,fputc@fp
  4294  004B22  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4295  004B26  ECA4  F02B         	call	_fputc	;wreg free
  4296  004B2A                     
  4297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  4298  004B2A  4A1E               	infsnz	stoa@l^0,f,c
  4299  004B2C  2A1F               	incf	(stoa@l+1)^0,f,c
  4300  004B2E                     l5523:
  4301                           
  4302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  4303  004B2E  5018               	movf	stoa@w^0,w,c
  4304  004B30  5C1E               	subwf	stoa@l^0,w,c
  4305  004B32  501F               	movf	(stoa@l+1)^0,w,c
  4306  004B34  0A80               	xorlw	128
  4307  004B36  6E0E               	movwf	??_stoa^0,c
  4308  004B38  5019               	movf	(stoa@w+1)^0,w,c
  4309  004B3A  0A80               	xorlw	128
  4310  004B3C  580E               	subwfb	??_stoa^0,w,c
  4311  004B3E  A0D8               	btfss	status,0,c
  4312  004B40  EFA4  F025         	goto	u6611
  4313  004B44  EFA6  F025         	goto	u6610
  4314  004B48                     u6611:
  4315  004B48  EF8B  F025         	goto	l5519
  4316  004B4C                     u6610:
  4317  004B4C                     l1595:
  4318                           
  4319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  4320  004B4C  C01E  F00A         	movff	stoa@l,?_stoa
  4321  004B50  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  4322  004B54  0012               	return		;funcret
  4323  004B56                     __end_of_stoa:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function _efgtoa *****************
  4327 ;; Defined at:
  4328 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  4331 ;;		 -> sprintf@f(6), 
  4332 ;;  f               4   65[COMRAM] PTR struct _IO_FILE
  4333 ;;  c               1   69[COMRAM] unsigned char 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  u               4   52[BANK0 ] unsigned char 
  4336 ;;  g               4   44[BANK0 ] unsigned char 
  4337 ;;  l               4   38[BANK0 ] unsigned char 
  4338 ;;  h               4   34[BANK0 ] unsigned char 
  4339 ;;  ou              4   20[BANK0 ] unsigned char 
  4340 ;;  n               2   50[BANK0 ] int 
  4341 ;;  e               2   48[BANK0 ] int 
  4342 ;;  i               2   42[BANK0 ] int 
  4343 ;;  w               2   30[BANK0 ] int 
  4344 ;;  p               2   28[BANK0 ] int 
  4345 ;;  sign            2   26[BANK0 ] int 
  4346 ;;  d               2   24[BANK0 ] int 
  4347 ;;  m               2   18[BANK0 ] int 
  4348 ;;  ne              2   16[BANK0 ] int 
  4349 ;;  pp              2   14[BANK0 ] int 
  4350 ;;  t               2   12[BANK0 ] int 
  4351 ;;  mode            1   33[BANK0 ] unsigned char 
  4352 ;;  nmode           1   32[BANK0 ] unsigned char 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  2   63[COMRAM] int 
  4355 ;; Registers used:
  4356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4362 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4363 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4364 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4365 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;Total ram usage:       68 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; Hardware stack levels required when called: 4
  4369 ;; This function calls:
  4370 ;;		___awdiv
  4371 ;;		___awmod
  4372 ;;		___fladd
  4373 ;;		___fldiv
  4374 ;;		___fleq
  4375 ;;		___flge
  4376 ;;		___flmul
  4377 ;;		___flneg
  4378 ;;		___flsub
  4379 ;;		___fltol
  4380 ;;		___fpclassifyf
  4381 ;;		_floorf
  4382 ;;		_isupper
  4383 ;;		_pad
  4384 ;;		_strcpy
  4385 ;;		_tolower
  4386 ;; This function is called by:
  4387 ;;		_vfpfcnvrt
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text11
  4392  000EB8                     __ptext11:
  4393                           	callstack 0
  4394  000EB8                     _efgtoa:
  4395                           	callstack 22
  4396  000EB8                     
  4397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4398  000EB8  0E00               	movlw	0
  4399  000EBA  0100               	movlb	0	; () banked
  4400  000EBC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4401  000EBE  0E00               	movlw	0
  4402  000EC0  6F7A               	movwf	efgtoa@sign& (0+255),b
  4403  000EC2                     
  4404                           ; BSR set to: 0
  4405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4406  000EC2  C042  F08C         	movff	efgtoa@f,efgtoa@g
  4407  000EC6  C043  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4408  000ECA  C044  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4409  000ECE  C045  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4410  000ED2                     
  4411                           ; BSR set to: 0
  4412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4413  000ED2  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4414  000ED4  EF70  F007         	goto	u5980
  4415  000ED8  EF6E  F007         	goto	u5981
  4416  000EDC                     u5981:
  4417  000EDC  EF86  F007         	goto	l5185
  4418  000EE0                     u5980:
  4419  000EE0                     
  4420                           ; BSR set to: 0
  4421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4422  000EE0  0E00               	movlw	0
  4423  000EE2  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4424  000EE4  0E01               	movlw	1
  4425  000EE6  6F7A               	movwf	efgtoa@sign& (0+255),b
  4426  000EE8                     
  4427                           ; BSR set to: 0
  4428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4429  000EE8  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4430  000EEC  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4431  000EF0  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4432  000EF4  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4433  000EF8  EC72  F031         	call	___flneg	;wreg free
  4434  000EFC  C001  F08C         	movff	?___flneg,efgtoa@g
  4435  000F00  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4436  000F04  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4437  000F08  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4438  000F0C                     l5185:
  4439                           
  4440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4441  000F0C  0E00               	movlw	0
  4442  000F0E  0100               	movlb	0	; () banked
  4443  000F10  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4444  000F12  0E00               	movlw	0
  4445  000F14  6F92               	movwf	efgtoa@n& (0+255),b
  4446  000F16                     
  4447                           ; BSR set to: 0
  4448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4449  000F16  C0EE  F07E         	movff	_width,efgtoa@w
  4450  000F1A  C0EF  F07F         	movff	_width+1,efgtoa@w+1
  4451  000F1E                     
  4452                           ; BSR set to: 0
  4453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4454  000F1E  517A               	movf	efgtoa@sign& (0+255),w,b
  4455  000F20  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4456  000F22  A4D8               	btfss	status,2,c
  4457  000F24  EF96  F007         	goto	u5991
  4458  000F28  EF98  F007         	goto	u5990
  4459  000F2C                     u5991:
  4460  000F2C  EF9F  F007         	goto	l5193
  4461  000F30                     u5990:
  4462  000F30                     
  4463                           ; BSR set to: 0
  4464  000F30  A5F2               	btfss	_flags& (0+255),2,b
  4465  000F32  EF9D  F007         	goto	u6001
  4466  000F36  EF9F  F007         	goto	u6000
  4467  000F3A                     u6001:
  4468  000F3A  EFB9  F007         	goto	l5205
  4469  000F3E                     u6000:
  4470  000F3E                     l5193:
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4474  000F3E  517A               	movf	efgtoa@sign& (0+255),w,b
  4475  000F40  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4476  000F42  A4D8               	btfss	status,2,c
  4477  000F44  EFA6  F007         	goto	u6011
  4478  000F48  EFA8  F007         	goto	u6010
  4479  000F4C                     u6011:
  4480  000F4C  EFAE  F007         	goto	l5197
  4481  000F50                     u6010:
  4482  000F50                     
  4483                           ; BSR set to: 0
  4484  000F50  0E00               	movlw	0
  4485  000F52  6F61               	movwf	(_efgtoa$3050+1)& (0+255),b
  4486  000F54  0E2B               	movlw	43
  4487  000F56  6F60               	movwf	_efgtoa$3050& (0+255),b
  4488  000F58  EFB2  F007         	goto	l5199
  4489  000F5C                     l5197:
  4490                           
  4491                           ; BSR set to: 0
  4492  000F5C  0E00               	movlw	0
  4493  000F5E  6F61               	movwf	(_efgtoa$3050+1)& (0+255),b
  4494  000F60  0E2D               	movlw	45
  4495  000F62  6F60               	movwf	_efgtoa$3050& (0+255),b
  4496  000F64                     l5199:
  4497                           
  4498                           ; BSR set to: 0
  4499  000F64  C060  F15C         	movff	_efgtoa$3050,_dbuf
  4500  000F68                     
  4501                           ; BSR set to: 0
  4502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4503  000F68  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4504  000F6A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4505  000F6C                     
  4506                           ; BSR set to: 0
  4507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4508  000F6C  077E               	decf	efgtoa@w& (0+255),f,b
  4509  000F6E  A0D8               	btfss	status,0,c
  4510  000F70  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4511  000F72                     l5205:
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4515  000F72  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4516  000F76  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4517  000F7A  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4518  000F7E  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4519  000F82  ECB4  F02A         	call	___fpclassifyf	;wreg free
  4520  000F86  0401               	decf	?___fpclassifyf^0,w,c
  4521  000F88  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4522  000F8A  A4D8               	btfss	status,2,c
  4523  000F8C  EFCA  F007         	goto	u6021
  4524  000F90  EFCC  F007         	goto	u6020
  4525  000F94                     u6021:
  4526  000F94  EF23  F008         	goto	l5223
  4527  000F98                     u6020:
  4528  000F98  0EBF               	movlw	191
  4529  000F9A  6E47               	movwf	??_efgtoa^0,c
  4530  000F9C  0EFF               	movlw	255
  4531  000F9E  6E48               	movwf	(??_efgtoa+1)^0,c
  4532  000FA0  5046               	movf	efgtoa@c^0,w,c
  4533  000FA2  6E49               	movwf	(??_efgtoa+2)^0,c
  4534  000FA4  6A4A               	clrf	(??_efgtoa+3)^0,c
  4535  000FA6  5047               	movf	??_efgtoa^0,w,c
  4536  000FA8  2649               	addwf	(??_efgtoa+2)^0,f,c
  4537  000FAA  5048               	movf	(??_efgtoa+1)^0,w,c
  4538  000FAC  224A               	addwfc	(??_efgtoa+3)^0,f,c
  4539  000FAE  504A               	movf	(??_efgtoa+3)^0,w,c
  4540  000FB0  E10A               	bnz	u6030
  4541  000FB2  0E1A               	movlw	26
  4542  000FB4  5C49               	subwf	(??_efgtoa+2)^0,w,c
  4543  000FB6  A0D8               	btfss	status,0,c
  4544  000FB8  EFE0  F007         	goto	u6031
  4545  000FBC  EFE3  F007         	goto	u6030
  4546  000FC0                     u6031:
  4547  000FC0  0E01               	movlw	1
  4548  000FC2  EFE4  F007         	goto	u6040
  4549  000FC6                     u6030:
  4550  000FC6  0E00               	movlw	0
  4551  000FC8                     u6040:
  4552  000FC8  0100               	movlb	0	; () banked
  4553  000FCA  6F62               	movwf	_efgtoa$3051& (0+255),b
  4554  000FCC  6B63               	clrf	(_efgtoa$3051+1)& (0+255),b
  4555  000FCE                     
  4556                           ; BSR set to: 0
  4557  000FCE  5162               	movf	_efgtoa$3051& (0+255),w,b
  4558  000FD0  1163               	iorwf	(_efgtoa$3051+1)& (0+255),w,b
  4559  000FD2  B4D8               	btfsc	status,2,c
  4560  000FD4  EFEE  F007         	goto	u6051
  4561  000FD8  EFF0  F007         	goto	u6050
  4562  000FDC                     u6051:
  4563  000FDC  EFFE  F007         	goto	l5215
  4564  000FE0                     u6050:
  4565  000FE0                     
  4566                           ; BSR set to: 0
  4567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4568  000FE0  0E5C               	movlw	low _dbuf
  4569  000FE2  2592               	addwf	efgtoa@n& (0+255),w,b
  4570  000FE4  6E01               	movwf	strcpy@dest^0,c
  4571  000FE6  0E01               	movlw	high _dbuf
  4572  000FE8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4573  000FEA  6E02               	movwf	(strcpy@dest+1)^0,c
  4574  000FEC  0E9F               	movlw	low STR_20
  4575  000FEE  6E03               	movwf	strcpy@src^0,c
  4576  000FF0  0E0E               	movlw	high STR_20
  4577  000FF2  6E04               	movwf	(strcpy@src+1)^0,c
  4578  000FF4  ECA5  F02E         	call	_strcpy	;wreg free
  4579                           
  4580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4581  000FF8  EF0A  F008         	goto	l5217
  4582  000FFC                     l5215:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4586  000FFC  0E5C               	movlw	low _dbuf
  4587  000FFE  2592               	addwf	efgtoa@n& (0+255),w,b
  4588  001000  6E01               	movwf	strcpy@dest^0,c
  4589  001002  0E01               	movlw	high _dbuf
  4590  001004  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4591  001006  6E02               	movwf	(strcpy@dest+1)^0,c
  4592  001008  0EA7               	movlw	low STR_21
  4593  00100A  6E03               	movwf	strcpy@src^0,c
  4594  00100C  0E0E               	movlw	high STR_21
  4595  00100E  6E04               	movwf	(strcpy@src+1)^0,c
  4596  001010  ECA5  F02E         	call	_strcpy	;wreg free
  4597  001014                     l5217:
  4598                           
  4599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4600  001014  0100               	movlb	0	; () banked
  4601  001016  0EFD               	movlw	253
  4602  001018  277E               	addwf	efgtoa@w& (0+255),f,b
  4603  00101A  0EFF               	movlw	255
  4604  00101C  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4605  00101E                     l5219:
  4606                           
  4607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4608  00101E  C040  F011         	movff	efgtoa@fp,pad@fp
  4609  001022  C041  F012         	movff	efgtoa@fp+1,pad@fp+1
  4610  001026  0E5C               	movlw	low _dbuf
  4611  001028  6E13               	movwf	pad@buf^0,c
  4612  00102A  0E01               	movlw	high _dbuf
  4613  00102C  6E14               	movwf	(pad@buf+1)^0,c
  4614  00102E  C07E  F015         	movff	efgtoa@w,pad@p
  4615  001032  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  4616  001036  EC09  F02C         	call	_pad	;wreg free
  4617  00103A  C011  F040         	movff	?_pad,?_efgtoa
  4618  00103E  C012  F041         	movff	?_pad+1,?_efgtoa+1
  4619  001042  EF87  F00D         	goto	l1501
  4620  001046                     l5223:
  4621                           
  4622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4623  001046  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4624  00104A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4625  00104E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4626  001052  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4627  001056  ECB4  F02A         	call	___fpclassifyf	;wreg free
  4628  00105A  5001               	movf	?___fpclassifyf^0,w,c
  4629  00105C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4630  00105E  A4D8               	btfss	status,2,c
  4631  001060  EF34  F008         	goto	u6061
  4632  001064  EF36  F008         	goto	u6060
  4633  001068                     u6061:
  4634  001068  EF76  F008         	goto	l5241
  4635  00106C                     u6060:
  4636  00106C  0EBF               	movlw	191
  4637  00106E  6E47               	movwf	??_efgtoa^0,c
  4638  001070  0EFF               	movlw	255
  4639  001072  6E48               	movwf	(??_efgtoa+1)^0,c
  4640  001074  5046               	movf	efgtoa@c^0,w,c
  4641  001076  6E49               	movwf	(??_efgtoa+2)^0,c
  4642  001078  6A4A               	clrf	(??_efgtoa+3)^0,c
  4643  00107A  5047               	movf	??_efgtoa^0,w,c
  4644  00107C  2649               	addwf	(??_efgtoa+2)^0,f,c
  4645  00107E  5048               	movf	(??_efgtoa+1)^0,w,c
  4646  001080  224A               	addwfc	(??_efgtoa+3)^0,f,c
  4647  001082  504A               	movf	(??_efgtoa+3)^0,w,c
  4648  001084  E10A               	bnz	u6070
  4649  001086  0E1A               	movlw	26
  4650  001088  5C49               	subwf	(??_efgtoa+2)^0,w,c
  4651  00108A  A0D8               	btfss	status,0,c
  4652  00108C  EF4A  F008         	goto	u6071
  4653  001090  EF4D  F008         	goto	u6070
  4654  001094                     u6071:
  4655  001094  0E01               	movlw	1
  4656  001096  EF4E  F008         	goto	u6080
  4657  00109A                     u6070:
  4658  00109A  0E00               	movlw	0
  4659  00109C                     u6080:
  4660  00109C  0100               	movlb	0	; () banked
  4661  00109E  6F64               	movwf	_efgtoa$3055& (0+255),b
  4662  0010A0  6B65               	clrf	(_efgtoa$3055+1)& (0+255),b
  4663  0010A2                     
  4664                           ; BSR set to: 0
  4665  0010A2  5164               	movf	_efgtoa$3055& (0+255),w,b
  4666  0010A4  1165               	iorwf	(_efgtoa$3055+1)& (0+255),w,b
  4667  0010A6  B4D8               	btfsc	status,2,c
  4668  0010A8  EF58  F008         	goto	u6091
  4669  0010AC  EF5A  F008         	goto	u6090
  4670  0010B0                     u6091:
  4671  0010B0  EF68  F008         	goto	l5233
  4672  0010B4                     u6090:
  4673  0010B4                     
  4674                           ; BSR set to: 0
  4675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4676  0010B4  0E5C               	movlw	low _dbuf
  4677  0010B6  2592               	addwf	efgtoa@n& (0+255),w,b
  4678  0010B8  6E01               	movwf	strcpy@dest^0,c
  4679  0010BA  0E01               	movlw	high _dbuf
  4680  0010BC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4681  0010BE  6E02               	movwf	(strcpy@dest+1)^0,c
  4682  0010C0  0EA3               	movlw	low STR_24
  4683  0010C2  6E03               	movwf	strcpy@src^0,c
  4684  0010C4  0E0E               	movlw	high STR_24
  4685  0010C6  6E04               	movwf	(strcpy@src+1)^0,c
  4686  0010C8  ECA5  F02E         	call	_strcpy	;wreg free
  4687                           
  4688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4689  0010CC  EF0A  F008         	goto	l5217
  4690  0010D0                     l5233:
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4694  0010D0  0E5C               	movlw	low _dbuf
  4695  0010D2  2592               	addwf	efgtoa@n& (0+255),w,b
  4696  0010D4  6E01               	movwf	strcpy@dest^0,c
  4697  0010D6  0E01               	movlw	high _dbuf
  4698  0010D8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4699  0010DA  6E02               	movwf	(strcpy@dest+1)^0,c
  4700  0010DC  0EAB               	movlw	low STR_25
  4701  0010DE  6E03               	movwf	strcpy@src^0,c
  4702  0010E0  0E0E               	movlw	high STR_25
  4703  0010E2  6E04               	movwf	(strcpy@src+1)^0,c
  4704  0010E4  ECA5  F02E         	call	_strcpy	;wreg free
  4705  0010E8  EF0A  F008         	goto	l5217
  4706  0010EC                     l5241:
  4707                           
  4708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4709  0010EC  0E00               	movlw	0
  4710  0010EE  0100               	movlb	0	; () banked
  4711  0010F0  6F94               	movwf	efgtoa@u& (0+255),b
  4712  0010F2  0E00               	movlw	0
  4713  0010F4  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4714  0010F6  0E80               	movlw	128
  4715  0010F8  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4716  0010FA  0E3F               	movlw	63
  4717  0010FC  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4718                           
  4719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4720  0010FE  0E00               	movlw	0
  4721  001100  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4722  001102  0E00               	movlw	0
  4723  001104  6F90               	movwf	efgtoa@e& (0+255),b
  4724  001106                     
  4725                           ; BSR set to: 0
  4726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4727  001106  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  4728  00110A  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4729  00110E  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4730  001112  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4731  001116  0E00               	movlw	0
  4732  001118  6E05               	movwf	___fleq@ff2^0,c
  4733  00111A  0E00               	movlw	0
  4734  00111C  6E06               	movwf	(___fleq@ff2+1)^0,c
  4735  00111E  0E00               	movlw	0
  4736  001120  6E07               	movwf	(___fleq@ff2+2)^0,c
  4737  001122  0E00               	movlw	0
  4738  001124  6E08               	movwf	(___fleq@ff2+3)^0,c
  4739  001126  EC26  F02D         	call	___fleq	;wreg free
  4740  00112A  B0D8               	btfsc	status,0,c
  4741  00112C  EF9A  F008         	goto	u6101
  4742  001130  EF9C  F008         	goto	u6100
  4743  001134                     u6101:
  4744  001134  EF1F  F009         	goto	l5259
  4745  001138                     u6100:
  4746  001138  EFBB  F008         	goto	l5251
  4747  00113C                     l5247:
  4748                           
  4749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4750  00113C  C094  F00F         	movff	efgtoa@u,___flmul@b
  4751  001140  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  4752  001144  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  4753  001148  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  4754  00114C  0E00               	movlw	0
  4755  00114E  6E13               	movwf	___flmul@a^0,c
  4756  001150  0E00               	movlw	0
  4757  001152  6E14               	movwf	(___flmul@a+1)^0,c
  4758  001154  0E20               	movlw	32
  4759  001156  6E15               	movwf	(___flmul@a+2)^0,c
  4760  001158  0E41               	movlw	65
  4761  00115A  6E16               	movwf	(___flmul@a+3)^0,c
  4762  00115C  EC13  F01B         	call	___flmul	;wreg free
  4763  001160  C00F  F094         	movff	?___flmul,efgtoa@u
  4764  001164  C010  F095         	movff	?___flmul+1,efgtoa@u+1
  4765  001168  C011  F096         	movff	?___flmul+2,efgtoa@u+2
  4766  00116C  C012  F097         	movff	?___flmul+3,efgtoa@u+3
  4767  001170                     
  4768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4769  001170  0100               	movlb	0	; () banked
  4770  001172  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4771  001174  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4772  001176                     l5251:
  4773                           
  4774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4775  001176  C08C  F028         	movff	efgtoa@g,___flge@ff1
  4776  00117A  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  4777  00117E  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  4778  001182  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  4779  001186  0E00               	movlw	0
  4780  001188  6E13               	movwf	___flmul@a^0,c
  4781  00118A  0E00               	movlw	0
  4782  00118C  6E14               	movwf	(___flmul@a+1)^0,c
  4783  00118E  0E20               	movlw	32
  4784  001190  6E15               	movwf	(___flmul@a+2)^0,c
  4785  001192  0E41               	movlw	65
  4786  001194  6E16               	movwf	(___flmul@a+3)^0,c
  4787  001196  C094  F00F         	movff	efgtoa@u,___flmul@b
  4788  00119A  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  4789  00119E  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  4790  0011A2  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  4791  0011A6  EC13  F01B         	call	___flmul	;wreg free
  4792  0011AA  C00F  F02C         	movff	?___flmul,___flge@ff2
  4793  0011AE  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4794  0011B2  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4795  0011B6  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4796  0011BA  EC32  F02A         	call	___flge	;wreg free
  4797  0011BE  B0D8               	btfsc	status,0,c
  4798  0011C0  EFE4  F008         	goto	u6111
  4799  0011C4  EFE6  F008         	goto	u6110
  4800  0011C8                     u6111:
  4801  0011C8  EF9E  F008         	goto	l5247
  4802  0011CC                     u6110:
  4803  0011CC  EF06  F009         	goto	l5257
  4804  0011D0                     l5253:
  4805                           
  4806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4807  0011D0  C094  F00F         	movff	efgtoa@u,___fldiv@b
  4808  0011D4  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  4809  0011D8  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  4810  0011DC  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  4811  0011E0  0E00               	movlw	0
  4812  0011E2  6E13               	movwf	___fldiv@a^0,c
  4813  0011E4  0E00               	movlw	0
  4814  0011E6  6E14               	movwf	(___fldiv@a+1)^0,c
  4815  0011E8  0E20               	movlw	32
  4816  0011EA  6E15               	movwf	(___fldiv@a+2)^0,c
  4817  0011EC  0E41               	movlw	65
  4818  0011EE  6E16               	movwf	(___fldiv@a+3)^0,c
  4819  0011F0  EC28  F01D         	call	___fldiv	;wreg free
  4820  0011F4  C00F  F094         	movff	?___fldiv,efgtoa@u
  4821  0011F8  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  4822  0011FC  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  4823  001200  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  4824  001204                     
  4825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4826  001204  0100               	movlb	0	; () banked
  4827  001206  0790               	decf	efgtoa@e& (0+255),f,b
  4828  001208  A0D8               	btfss	status,0,c
  4829  00120A  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  4830  00120C                     l5257:
  4831                           
  4832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4833  00120C  C08C  F028         	movff	efgtoa@g,___flge@ff1
  4834  001210  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  4835  001214  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  4836  001218  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  4837  00121C  C094  F02C         	movff	efgtoa@u,___flge@ff2
  4838  001220  C095  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  4839  001224  C096  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  4840  001228  C097  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  4841  00122C  EC32  F02A         	call	___flge	;wreg free
  4842  001230  A0D8               	btfss	status,0,c
  4843  001232  EF1D  F009         	goto	u6121
  4844  001236  EF1F  F009         	goto	u6120
  4845  00123A                     u6121:
  4846  00123A  EFE8  F008         	goto	l5253
  4847  00123E                     u6120:
  4848  00123E                     l5259:
  4849                           
  4850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4851  00123E  C046  F007         	movff	efgtoa@c,tolower@c
  4852  001242  6A08               	clrf	(tolower@c+1)^0,c
  4853  001244  EC75  F02E         	call	_tolower	;wreg free
  4854  001248  5007               	movf	?_tolower^0,w,c
  4855  00124A  0100               	movlb	0	; () banked
  4856  00124C  6F81               	movwf	efgtoa@mode& (0+255),b
  4857  00124E                     
  4858                           ; BSR set to: 0
  4859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4860  00124E  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  4861  001252                     
  4862                           ; BSR set to: 0
  4863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4864  001252  0E67               	movlw	103
  4865  001254  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4866  001256  A4D8               	btfss	status,2,c
  4867  001258  EF30  F009         	goto	u6131
  4868  00125C  EF32  F009         	goto	u6130
  4869  001260                     u6131:
  4870  001260  EF58  F009         	goto	l5273
  4871  001264                     u6130:
  4872  001264                     
  4873                           ; BSR set to: 0
  4874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4875  001264  51F0               	movf	_prec& (0+255),w,b
  4876  001266  11F1               	iorwf	(_prec+1)& (0+255),w,b
  4877  001268  A4D8               	btfss	status,2,c
  4878  00126A  EF39  F009         	goto	u6141
  4879  00126E  EF3B  F009         	goto	u6140
  4880  001272                     u6141:
  4881  001272  EF3F  F009         	goto	l5269
  4882  001276                     u6140:
  4883  001276                     
  4884                           ; BSR set to: 0
  4885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4886  001276  0E00               	movlw	0
  4887  001278  6FF1               	movwf	(_prec+1)& (0+255),b
  4888  00127A  0E01               	movlw	1
  4889  00127C  6FF0               	movwf	_prec& (0+255),b
  4890  00127E                     l5269:
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4894  00127E  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  4895  001280  EF4C  F009         	goto	u6150
  4896  001284  51F1               	movf	(_prec+1)& (0+255),w,b
  4897  001286  E106               	bnz	u6151
  4898  001288  05F0               	decf	_prec& (0+255),w,b
  4899  00128A  B0D8               	btfsc	status,0,c
  4900  00128C  EF4A  F009         	goto	u6151
  4901  001290  EF4C  F009         	goto	u6150
  4902  001294                     u6151:
  4903  001294  EF52  F009         	goto	l1519
  4904  001298                     u6150:
  4905  001298                     l5271:
  4906                           
  4907                           ; BSR set to: 0
  4908  001298  0E00               	movlw	0
  4909  00129A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4910  00129C  0E06               	movlw	6
  4911  00129E  6F7C               	movwf	efgtoa@p& (0+255),b
  4912  0012A0  EF61  F009         	goto	l5279
  4913  0012A4                     l1519:
  4914                           
  4915                           ; BSR set to: 0
  4916  0012A4  C0F0  F07C         	movff	_prec,efgtoa@p
  4917  0012A8  C0F1  F07D         	movff	_prec+1,efgtoa@p+1
  4918  0012AC  EF61  F009         	goto	l5279
  4919  0012B0                     l5273:
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4923  0012B0  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  4924  0012B2  EF5D  F009         	goto	u6161
  4925  0012B6  EF5F  F009         	goto	u6160
  4926  0012BA                     u6161:
  4927  0012BA  EF4C  F009         	goto	l5271
  4928  0012BE                     u6160:
  4929  0012BE  EF52  F009         	goto	l1519
  4930  0012C2                     l5279:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4934  0012C2  0E67               	movlw	103
  4935  0012C4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4936  0012C6  A4D8               	btfss	status,2,c
  4937  0012C8  EF68  F009         	goto	u6171
  4938  0012CC  EF6A  F009         	goto	u6170
  4939  0012D0                     u6171:
  4940  0012D0  EF99  F009         	goto	l5289
  4941  0012D4                     u6170:
  4942  0012D4                     
  4943                           ; BSR set to: 0
  4944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4945  0012D4  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4946  0012D6  EF78  F009         	goto	u6180
  4947  0012DA  0EFC               	movlw	252
  4948  0012DC  5D90               	subwf	efgtoa@e& (0+255),w,b
  4949  0012DE  0EFF               	movlw	255
  4950  0012E0  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4951  0012E2  A0D8               	btfss	status,0,c
  4952  0012E4  EF76  F009         	goto	u6181
  4953  0012E8  EF78  F009         	goto	u6180
  4954  0012EC                     u6181:
  4955  0012EC  EF97  F009         	goto	l5287
  4956  0012F0                     u6180:
  4957  0012F0                     
  4958                           ; BSR set to: 0
  4959  0012F0  0EFF               	movlw	255
  4960  0012F2  6E47               	movwf	??_efgtoa^0,c
  4961  0012F4  0EFF               	movlw	255
  4962  0012F6  6E48               	movwf	(??_efgtoa+1)^0,c
  4963  0012F8  C07C  F049         	movff	efgtoa@p,??_efgtoa+2
  4964  0012FC  C07D  F04A         	movff	efgtoa@p+1,??_efgtoa+3
  4965  001300  5047               	movf	??_efgtoa^0,w,c
  4966  001302  2649               	addwf	(??_efgtoa+2)^0,f,c
  4967  001304  5048               	movf	(??_efgtoa+1)^0,w,c
  4968  001306  224A               	addwfc	(??_efgtoa+3)^0,f,c
  4969  001308  5190               	movf	efgtoa@e& (0+255),w,b
  4970  00130A  5C49               	subwf	(??_efgtoa+2)^0,w,c
  4971  00130C  504A               	movf	(??_efgtoa+3)^0,w,c
  4972  00130E  0A80               	xorlw	128
  4973  001310  6E4B               	movwf	(??_efgtoa+4)^0,c
  4974  001312  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4975  001314  0A80               	xorlw	128
  4976  001316  584B               	subwfb	(??_efgtoa+4)^0,w,c
  4977  001318  A0D8               	btfss	status,0,c
  4978  00131A  EF91  F009         	goto	u6191
  4979  00131E  EF93  F009         	goto	u6190
  4980  001322                     u6191:
  4981  001322  EF97  F009         	goto	l5287
  4982  001326                     u6190:
  4983  001326                     
  4984                           ; BSR set to: 0
  4985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4986  001326  0E66               	movlw	102
  4987  001328  6F80               	movwf	efgtoa@nmode& (0+255),b
  4988                           
  4989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4990  00132A  EF99  F009         	goto	l5289
  4991  00132E                     l5287:
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4995  00132E  0E65               	movlw	101
  4996  001330  6F80               	movwf	efgtoa@nmode& (0+255),b
  4997  001332                     l5289:
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5001  001332  C07C  F072         	movff	efgtoa@p,efgtoa@m
  5002  001336  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  5003  00133A                     
  5004                           ; BSR set to: 0
  5005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5006  00133A  0E67               	movlw	103
  5007  00133C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5008  00133E  A4D8               	btfss	status,2,c
  5009  001340  EFA4  F009         	goto	u6201
  5010  001344  EFA6  F009         	goto	u6200
  5011  001348                     u6201:
  5012  001348  EFB6  F009         	goto	l5297
  5013  00134C                     u6200:
  5014  00134C                     
  5015                           ; BSR set to: 0
  5016  00134C  0E66               	movlw	102
  5017  00134E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5018  001350  A4D8               	btfss	status,2,c
  5019  001352  EFAD  F009         	goto	u6211
  5020  001356  EFAF  F009         	goto	u6210
  5021  00135A                     u6211:
  5022  00135A  EFB8  F009         	goto	l5299
  5023  00135E                     u6210:
  5024  00135E                     
  5025                           ; BSR set to: 0
  5026  00135E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5027  001360  EFB6  F009         	goto	u6220
  5028  001364  EFB4  F009         	goto	u6221
  5029  001368                     u6221:
  5030  001368  EFB8  F009         	goto	l5299
  5031  00136C                     u6220:
  5032  00136C                     l5297:
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5036  00136C  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5037  00136E  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5038  001370                     l5299:
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5042  001370  0E66               	movlw	102
  5043  001372  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5044  001374  A4D8               	btfss	status,2,c
  5045  001376  EFBF  F009         	goto	u6231
  5046  00137A  EFC1  F009         	goto	u6230
  5047  00137E                     u6231:
  5048  00137E  EFE1  F009         	goto	l5309
  5049  001382                     u6230:
  5050  001382                     
  5051                           ; BSR set to: 0
  5052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5053  001382  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5054  001384  EFC8  F009         	goto	u6240
  5055  001388  EFC6  F009         	goto	u6241
  5056  00138C                     u6241:
  5057  00138C  EFD4  F009         	goto	l5305
  5058  001390                     u6240:
  5059  001390                     
  5060                           ; BSR set to: 0
  5061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5062  001390  0E00               	movlw	0
  5063  001392  6F94               	movwf	efgtoa@u& (0+255),b
  5064  001394  0E00               	movlw	0
  5065  001396  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5066  001398  0E80               	movlw	128
  5067  00139A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5068  00139C  0E3F               	movlw	63
  5069  00139E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5070                           
  5071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5072  0013A0  0E00               	movlw	0
  5073  0013A2  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5074  0013A4  0E00               	movlw	0
  5075  0013A6  6F90               	movwf	efgtoa@e& (0+255),b
  5076  0013A8                     l5305:
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5080  0013A8  0E67               	movlw	103
  5081  0013AA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5082  0013AC  B4D8               	btfsc	status,2,c
  5083  0013AE  EFDB  F009         	goto	u6251
  5084  0013B2  EFDD  F009         	goto	u6250
  5085  0013B6                     u6251:
  5086  0013B6  EFE1  F009         	goto	l5309
  5087  0013BA                     u6250:
  5088  0013BA                     
  5089                           ; BSR set to: 0
  5090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5091  0013BA  5190               	movf	efgtoa@e& (0+255),w,b
  5092  0013BC  2772               	addwf	efgtoa@m& (0+255),f,b
  5093  0013BE  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5094  0013C0  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5095  0013C2                     l5309:
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5099  0013C2  0E00               	movlw	0
  5100  0013C4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5101  0013C6  0E00               	movlw	0
  5102  0013C8  6F8A               	movwf	efgtoa@i& (0+255),b
  5103  0013CA                     
  5104                           ; BSR set to: 0
  5105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5106  0013CA  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5107  0013CE  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5108  0013D2  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5109  0013D6  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5110  0013DA                     
  5111                           ; BSR set to: 0
  5112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5113  0013DA  C094  F074         	movff	efgtoa@u,efgtoa@ou
  5114  0013DE  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  5115  0013E2  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  5116  0013E6  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  5117                           
  5118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5119  0013EA  EF72  F00A         	goto	l5323
  5120  0013EE                     l5315:
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5124  0013EE  C082  F00F         	movff	efgtoa@h,___fldiv@b
  5125  0013F2  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  5126  0013F6  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  5127  0013FA  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  5128  0013FE  C094  F013         	movff	efgtoa@u,___fldiv@a
  5129  001402  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  5130  001406  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  5131  00140A  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  5132  00140E  EC28  F01D         	call	___fldiv	;wreg free
  5133  001412  C00F  F028         	movff	?___fldiv,floorf@x
  5134  001416  C010  F029         	movff	?___fldiv+1,floorf@x+1
  5135  00141A  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  5136  00141E  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  5137  001422  EC67  F020         	call	_floorf	;wreg free
  5138  001426  C028  F086         	movff	?_floorf,efgtoa@l
  5139  00142A  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  5140  00142E  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  5141  001432  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  5142                           
  5143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5144  001436  C086  F001         	movff	efgtoa@l,___fltol@f1
  5145  00143A  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5146  00143E  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5147  001442  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5148  001446  ECAF  F029         	call	___fltol	;wreg free
  5149  00144A  C001  F078         	movff	?___fltol,efgtoa@d
  5150  00144E  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5151  001452                     
  5152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5153  001452  C082  F038         	movff	efgtoa@h,___flsub@b
  5154  001456  C083  F039         	movff	efgtoa@h+1,___flsub@b+1
  5155  00145A  C084  F03A         	movff	efgtoa@h+2,___flsub@b+2
  5156  00145E  C085  F03B         	movff	efgtoa@h+3,___flsub@b+3
  5157  001462  C094  F013         	movff	efgtoa@u,___flmul@a
  5158  001466  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  5159  00146A  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  5160  00146E  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  5161  001472  C086  F00F         	movff	efgtoa@l,___flmul@b
  5162  001476  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  5163  00147A  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  5164  00147E  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  5165  001482  EC13  F01B         	call	___flmul	;wreg free
  5166  001486  C00F  F03C         	movff	?___flmul,___flsub@a
  5167  00148A  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  5168  00148E  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  5169  001492  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  5170  001496  EC95  F030         	call	___flsub	;wreg free
  5171  00149A  C038  F082         	movff	?___flsub,efgtoa@h
  5172  00149E  C039  F083         	movff	?___flsub+1,efgtoa@h+1
  5173  0014A2  C03A  F084         	movff	?___flsub+2,efgtoa@h+2
  5174  0014A6  C03B  F085         	movff	?___flsub+3,efgtoa@h+3
  5175  0014AA                     
  5176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5177  0014AA  C094  F00F         	movff	efgtoa@u,___fldiv@b
  5178  0014AE  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5179  0014B2  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5180  0014B6  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5181  0014BA  0E00               	movlw	0
  5182  0014BC  6E13               	movwf	___fldiv@a^0,c
  5183  0014BE  0E00               	movlw	0
  5184  0014C0  6E14               	movwf	(___fldiv@a+1)^0,c
  5185  0014C2  0E20               	movlw	32
  5186  0014C4  6E15               	movwf	(___fldiv@a+2)^0,c
  5187  0014C6  0E41               	movlw	65
  5188  0014C8  6E16               	movwf	(___fldiv@a+3)^0,c
  5189  0014CA  EC28  F01D         	call	___fldiv	;wreg free
  5190  0014CE  C00F  F094         	movff	?___fldiv,efgtoa@u
  5191  0014D2  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  5192  0014D6  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  5193  0014DA  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  5194  0014DE                     
  5195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5196  0014DE  0100               	movlb	0	; () banked
  5197  0014E0  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5198  0014E2  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5199  0014E4                     l5323:
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5203  0014E4  5172               	movf	efgtoa@m& (0+255),w,b
  5204  0014E6  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5205  0014E8  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5206  0014EA  0A80               	xorlw	128
  5207  0014EC  6E47               	movwf	??_efgtoa^0,c
  5208  0014EE  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5209  0014F0  0A80               	xorlw	128
  5210  0014F2  5847               	subwfb	??_efgtoa^0,w,c
  5211  0014F4  A0D8               	btfss	status,0,c
  5212  0014F6  EF7F  F00A         	goto	u6261
  5213  0014FA  EF81  F00A         	goto	u6260
  5214  0014FE                     u6261:
  5215  0014FE  EFF7  F009         	goto	l5315
  5216  001502                     u6260:
  5217  001502                     
  5218                           ; BSR set to: 0
  5219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5220  001502  C094  F00F         	movff	efgtoa@u,___flmul@b
  5221  001506  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  5222  00150A  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  5223  00150E  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  5224  001512  0E00               	movlw	0
  5225  001514  6E13               	movwf	___flmul@a^0,c
  5226  001516  0E00               	movlw	0
  5227  001518  6E14               	movwf	(___flmul@a+1)^0,c
  5228  00151A  0EA0               	movlw	160
  5229  00151C  6E15               	movwf	(___flmul@a+2)^0,c
  5230  00151E  0E40               	movlw	64
  5231  001520  6E16               	movwf	(___flmul@a+3)^0,c
  5232  001522  EC13  F01B         	call	___flmul	;wreg free
  5233  001526  C00F  F086         	movff	?___flmul,efgtoa@l
  5234  00152A  C010  F087         	movff	?___flmul+1,efgtoa@l+1
  5235  00152E  C011  F088         	movff	?___flmul+2,efgtoa@l+2
  5236  001532  C012  F089         	movff	?___flmul+3,efgtoa@l+3
  5237  001536                     
  5238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5239  001536  C082  F028         	movff	efgtoa@h,___flge@ff1
  5240  00153A  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  5241  00153E  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  5242  001542  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  5243  001546  C086  F02C         	movff	efgtoa@l,___flge@ff2
  5244  00154A  C087  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  5245  00154E  C088  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  5246  001552  C089  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  5247  001556  EC32  F02A         	call	___flge	;wreg free
  5248  00155A  B0D8               	btfsc	status,0,c
  5249  00155C  EFB2  F00A         	goto	u6271
  5250  001560  EFB4  F00A         	goto	u6270
  5251  001564                     u6271:
  5252  001564  EFBF  F00A         	goto	l5331
  5253  001568                     u6270:
  5254  001568                     
  5255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5256  001568  0E00               	movlw	0
  5257  00156A  0100               	movlb	0	; () banked
  5258  00156C  6F86               	movwf	efgtoa@l& (0+255),b
  5259  00156E  0E00               	movlw	0
  5260  001570  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5261  001572  0E00               	movlw	0
  5262  001574  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5263  001576  0E00               	movlw	0
  5264  001578  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5265                           
  5266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5267  00157A  EFE8  F00A         	goto	l5337
  5268  00157E                     l5331:
  5269                           
  5270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5271  00157E  C082  F001         	movff	efgtoa@h,___fleq@ff1
  5272  001582  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5273  001586  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5274  00158A  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5275  00158E  C086  F005         	movff	efgtoa@l,___fleq@ff2
  5276  001592  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5277  001596  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5278  00159A  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5279  00159E  EC26  F02D         	call	___fleq	;wreg free
  5280  0015A2  A0D8               	btfss	status,0,c
  5281  0015A4  EFD6  F00A         	goto	u6281
  5282  0015A8  EFD8  F00A         	goto	u6280
  5283  0015AC                     u6281:
  5284  0015AC  EFE8  F00A         	goto	l5337
  5285  0015B0                     u6280:
  5286  0015B0  0100               	movlb	0	; () banked
  5287  0015B2  B178               	btfsc	efgtoa@d& (0+255),0,b
  5288  0015B4  EFDE  F00A         	goto	u6291
  5289  0015B8  EFE0  F00A         	goto	u6290
  5290  0015BC                     u6291:
  5291  0015BC  EFE8  F00A         	goto	l5337
  5292  0015C0                     u6290:
  5293  0015C0                     
  5294                           ; BSR set to: 0
  5295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5296  0015C0  0E00               	movlw	0
  5297  0015C2  6F86               	movwf	efgtoa@l& (0+255),b
  5298  0015C4  0E00               	movlw	0
  5299  0015C6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5300  0015C8  0E00               	movlw	0
  5301  0015CA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5302  0015CC  0E00               	movlw	0
  5303  0015CE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5304  0015D0                     l5337:
  5305                           
  5306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5307  0015D0  C08C  F028         	movff	efgtoa@g,___fladd@b
  5308  0015D4  C08D  F029         	movff	efgtoa@g+1,___fladd@b+1
  5309  0015D8  C08E  F02A         	movff	efgtoa@g+2,___fladd@b+2
  5310  0015DC  C08F  F02B         	movff	efgtoa@g+3,___fladd@b+3
  5311  0015E0  C086  F02C         	movff	efgtoa@l,___fladd@a
  5312  0015E4  C087  F02D         	movff	efgtoa@l+1,___fladd@a+1
  5313  0015E8  C088  F02E         	movff	efgtoa@l+2,___fladd@a+2
  5314  0015EC  C089  F02F         	movff	efgtoa@l+3,___fladd@a+3
  5315  0015F0  ECB3  F018         	call	___fladd	;wreg free
  5316  0015F4  C028  F082         	movff	?___fladd,efgtoa@h
  5317  0015F8  C029  F083         	movff	?___fladd+1,efgtoa@h+1
  5318  0015FC  C02A  F084         	movff	?___fladd+2,efgtoa@h+2
  5319  001600  C02B  F085         	movff	?___fladd+3,efgtoa@h+3
  5320  001604                     
  5321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5322  001604  C082  F028         	movff	efgtoa@h,___flge@ff1
  5323  001608  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  5324  00160C  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  5325  001610  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  5326  001614  0E00               	movlw	0
  5327  001616  6E13               	movwf	___flmul@a^0,c
  5328  001618  0E00               	movlw	0
  5329  00161A  6E14               	movwf	(___flmul@a+1)^0,c
  5330  00161C  0E20               	movlw	32
  5331  00161E  6E15               	movwf	(___flmul@a+2)^0,c
  5332  001620  0E41               	movlw	65
  5333  001622  6E16               	movwf	(___flmul@a+3)^0,c
  5334  001624  C074  F00F         	movff	efgtoa@ou,___flmul@b
  5335  001628  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  5336  00162C  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  5337  001630  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  5338  001634  EC13  F01B         	call	___flmul	;wreg free
  5339  001638  C00F  F02C         	movff	?___flmul,___flge@ff2
  5340  00163C  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  5341  001640  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  5342  001644  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  5343  001648  EC32  F02A         	call	___flge	;wreg free
  5344  00164C  A0D8               	btfss	status,0,c
  5345  00164E  EF2B  F00B         	goto	u6301
  5346  001652  EF2D  F00B         	goto	u6300
  5347  001656                     u6301:
  5348  001656  EF56  F00B         	goto	l5349
  5349  00165A                     u6300:
  5350  00165A                     
  5351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5352  00165A  0100               	movlb	0	; () banked
  5353  00165C  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5354  00165E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5355  001660                     
  5356                           ; BSR set to: 0
  5357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5358  001660  C074  F00F         	movff	efgtoa@ou,___flmul@b
  5359  001664  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  5360  001668  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  5361  00166C  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  5362  001670  0E00               	movlw	0
  5363  001672  6E13               	movwf	___flmul@a^0,c
  5364  001674  0E00               	movlw	0
  5365  001676  6E14               	movwf	(___flmul@a+1)^0,c
  5366  001678  0E20               	movlw	32
  5367  00167A  6E15               	movwf	(___flmul@a+2)^0,c
  5368  00167C  0E41               	movlw	65
  5369  00167E  6E16               	movwf	(___flmul@a+3)^0,c
  5370  001680  EC13  F01B         	call	___flmul	;wreg free
  5371  001684  C00F  F074         	movff	?___flmul,efgtoa@ou
  5372  001688  C010  F075         	movff	?___flmul+1,efgtoa@ou+1
  5373  00168C  C011  F076         	movff	?___flmul+2,efgtoa@ou+2
  5374  001690  C012  F077         	movff	?___flmul+3,efgtoa@ou+3
  5375  001694                     
  5376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5377  001694  0E66               	movlw	102
  5378  001696  0100               	movlb	0	; () banked
  5379  001698  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5380  00169A  A4D8               	btfss	status,2,c
  5381  00169C  EF52  F00B         	goto	u6311
  5382  0016A0  EF54  F00B         	goto	u6310
  5383  0016A4                     u6311:
  5384  0016A4  EF56  F00B         	goto	l5349
  5385  0016A8                     u6310:
  5386  0016A8                     
  5387                           ; BSR set to: 0
  5388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5389  0016A8  4B72               	infsnz	efgtoa@m& (0+255),f,b
  5390  0016AA  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  5391  0016AC                     l5349:
  5392                           
  5393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5394  0016AC  C074  F094         	movff	efgtoa@ou,efgtoa@u
  5395  0016B0  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5396  0016B4  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5397  0016B8  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5398  0016BC                     
  5399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5400  0016BC  0E65               	movlw	101
  5401  0016BE  0100               	movlb	0	; () banked
  5402  0016C0  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5403  0016C2  B4D8               	btfsc	status,2,c
  5404  0016C4  EF66  F00B         	goto	u6321
  5405  0016C8  EF68  F00B         	goto	u6320
  5406  0016CC                     u6321:
  5407  0016CC  EF6E  F00B         	goto	l5355
  5408  0016D0                     u6320:
  5409  0016D0                     
  5410                           ; BSR set to: 0
  5411  0016D0  C090  F070         	movff	efgtoa@e,efgtoa@ne
  5412  0016D4  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  5413  0016D8  EF72  F00B         	goto	l1547
  5414  0016DC                     l5355:
  5415                           
  5416                           ; BSR set to: 0
  5417  0016DC  0E00               	movlw	0
  5418  0016DE  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  5419  0016E0  0E00               	movlw	0
  5420  0016E2  6F70               	movwf	efgtoa@ne& (0+255),b
  5421  0016E4                     l1547:
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5425  0016E4  0E00               	movlw	0
  5426  0016E6  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5427  0016E8  0E00               	movlw	0
  5428  0016EA  6F6E               	movwf	efgtoa@pp& (0+255),b
  5429                           
  5430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5431  0016EC  0E00               	movlw	0
  5432  0016EE  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  5433  0016F0  0E00               	movlw	0
  5434  0016F2  6F6C               	movwf	efgtoa@t& (0+255),b
  5435                           
  5436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5437  0016F4  0E00               	movlw	0
  5438  0016F6  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5439  0016F8  0E00               	movlw	0
  5440  0016FA  6F8A               	movwf	efgtoa@i& (0+255),b
  5441                           
  5442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5443  0016FC  EF6D  F00C         	goto	l5405
  5444  001700                     l5357:
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5448  001700  C082  F00F         	movff	efgtoa@h,___fldiv@b
  5449  001704  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  5450  001708  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  5451  00170C  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  5452  001710  C094  F013         	movff	efgtoa@u,___fldiv@a
  5453  001714  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  5454  001718  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  5455  00171C  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  5456  001720  EC28  F01D         	call	___fldiv	;wreg free
  5457  001724  C00F  F028         	movff	?___fldiv,floorf@x
  5458  001728  C010  F029         	movff	?___fldiv+1,floorf@x+1
  5459  00172C  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  5460  001730  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  5461  001734  EC67  F020         	call	_floorf	;wreg free
  5462  001738  C028  F086         	movff	?_floorf,efgtoa@l
  5463  00173C  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  5464  001740  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  5465  001744  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  5466                           
  5467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5468  001748  C086  F001         	movff	efgtoa@l,___fltol@f1
  5469  00174C  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5470  001750  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5471  001754  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5472  001758  ECAF  F029         	call	___fltol	;wreg free
  5473  00175C  C001  F078         	movff	?___fltol,efgtoa@d
  5474  001760  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5475  001764                     
  5476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5477  001764  0100               	movlb	0	; () banked
  5478  001766  B9F2               	btfsc	_flags& (0+255),4,b
  5479  001768  EFB8  F00B         	goto	u6331
  5480  00176C  EFBA  F00B         	goto	u6330
  5481  001770                     u6331:
  5482  001770  EFD7  F00B         	goto	l5369
  5483  001774                     u6330:
  5484  001774                     
  5485                           ; BSR set to: 0
  5486  001774  5178               	movf	efgtoa@d& (0+255),w,b
  5487  001776  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5488  001778  A4D8               	btfss	status,2,c
  5489  00177A  EFC1  F00B         	goto	u6341
  5490  00177E  EFC3  F00B         	goto	u6340
  5491  001782                     u6341:
  5492  001782  EFD7  F00B         	goto	l5369
  5493  001786                     u6340:
  5494  001786                     
  5495                           ; BSR set to: 0
  5496  001786  0E67               	movlw	103
  5497  001788  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5498  00178A  A4D8               	btfss	status,2,c
  5499  00178C  EFCA  F00B         	goto	u6351
  5500  001790  EFCC  F00B         	goto	u6350
  5501  001794                     u6351:
  5502  001794  EFD7  F00B         	goto	l5369
  5503  001798                     u6350:
  5504  001798                     
  5505                           ; BSR set to: 0
  5506  001798  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5507  00179A  EFD3  F00B         	goto	u6360
  5508  00179E  EFD1  F00B         	goto	u6361
  5509  0017A2                     u6361:
  5510  0017A2  EFD7  F00B         	goto	l5369
  5511  0017A6                     u6360:
  5512  0017A6                     
  5513                           ; BSR set to: 0
  5514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5515  0017A6  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  5516  0017A8  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  5517                           
  5518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5519  0017AA  EF21  F00C         	goto	l5397
  5520  0017AE                     l5369:
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5524  0017AE  516E               	movf	efgtoa@pp& (0+255),w,b
  5525  0017B0  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5526  0017B2  A4D8               	btfss	status,2,c
  5527  0017B4  EFDE  F00B         	goto	u6371
  5528  0017B8  EFE0  F00B         	goto	u6370
  5529  0017BC                     u6371:
  5530  0017BC  EF0A  F00C         	goto	l5389
  5531  0017C0                     u6370:
  5532  0017C0                     
  5533                           ; BSR set to: 0
  5534  0017C0  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5535  0017C2  EFE7  F00B         	goto	u6380
  5536  0017C6  EFE5  F00B         	goto	u6381
  5537  0017CA                     u6381:
  5538  0017CA  EF0A  F00C         	goto	l5389
  5539  0017CE                     u6380:
  5540  0017CE                     
  5541                           ; BSR set to: 0
  5542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5543  0017CE  0E5C               	movlw	low _dbuf
  5544  0017D0  2592               	addwf	efgtoa@n& (0+255),w,b
  5545  0017D2  6ED9               	movwf	fsr2l,c
  5546  0017D4  0E01               	movlw	high _dbuf
  5547  0017D6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5548  0017D8  6EDA               	movwf	fsr2h,c
  5549  0017DA  0E2E               	movlw	46
  5550  0017DC  6EDF               	movwf	indf2,c
  5551  0017DE                     
  5552                           ; BSR set to: 0
  5553  0017DE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5554  0017E0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5555  0017E2                     
  5556                           ; BSR set to: 0
  5557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5558  0017E2  077E               	decf	efgtoa@w& (0+255),f,b
  5559  0017E4  A0D8               	btfss	status,0,c
  5560  0017E6  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5561  0017E8                     
  5562                           ; BSR set to: 0
  5563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5564  0017E8  0E00               	movlw	0
  5565  0017EA  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  5566  0017EC  0E01               	movlw	1
  5567  0017EE  6F6E               	movwf	efgtoa@pp& (0+255),b
  5568  0017F0  EF0A  F00C         	goto	l5389
  5569  0017F4                     l5381:
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5573  0017F4  0E5C               	movlw	low _dbuf
  5574  0017F6  2592               	addwf	efgtoa@n& (0+255),w,b
  5575  0017F8  6ED9               	movwf	fsr2l,c
  5576  0017FA  0E01               	movlw	high _dbuf
  5577  0017FC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5578  0017FE  6EDA               	movwf	fsr2h,c
  5579  001800  0E30               	movlw	48
  5580  001802  6EDF               	movwf	indf2,c
  5581  001804                     
  5582                           ; BSR set to: 0
  5583  001804  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5584  001806  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5585  001808                     
  5586                           ; BSR set to: 0
  5587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5588  001808  077E               	decf	efgtoa@w& (0+255),f,b
  5589  00180A  A0D8               	btfss	status,0,c
  5590  00180C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5591  00180E                     
  5592                           ; BSR set to: 0
  5593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5594  00180E  076C               	decf	efgtoa@t& (0+255),f,b
  5595  001810  A0D8               	btfss	status,0,c
  5596  001812  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  5597  001814                     l5389:
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5601  001814  516C               	movf	efgtoa@t& (0+255),w,b
  5602  001816  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5603  001818  A4D8               	btfss	status,2,c
  5604  00181A  EF11  F00C         	goto	u6391
  5605  00181E  EF13  F00C         	goto	u6390
  5606  001822                     u6391:
  5607  001822  EFFA  F00B         	goto	l5381
  5608  001826                     u6390:
  5609  001826                     
  5610                           ; BSR set to: 0
  5611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5612  001826  0E5C               	movlw	low _dbuf
  5613  001828  2592               	addwf	efgtoa@n& (0+255),w,b
  5614  00182A  6ED9               	movwf	fsr2l,c
  5615  00182C  0E01               	movlw	high _dbuf
  5616  00182E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5617  001830  6EDA               	movwf	fsr2h,c
  5618  001832  5178               	movf	efgtoa@d& (0+255),w,b
  5619  001834  0F30               	addlw	48
  5620  001836  6EDF               	movwf	indf2,c
  5621  001838                     
  5622                           ; BSR set to: 0
  5623  001838  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5624  00183A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5625  00183C                     
  5626                           ; BSR set to: 0
  5627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5628  00183C  077E               	decf	efgtoa@w& (0+255),f,b
  5629  00183E  A0D8               	btfss	status,0,c
  5630  001840  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5631  001842                     l5397:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5635  001842  C082  F038         	movff	efgtoa@h,___flsub@b
  5636  001846  C083  F039         	movff	efgtoa@h+1,___flsub@b+1
  5637  00184A  C084  F03A         	movff	efgtoa@h+2,___flsub@b+2
  5638  00184E  C085  F03B         	movff	efgtoa@h+3,___flsub@b+3
  5639  001852  C094  F013         	movff	efgtoa@u,___flmul@a
  5640  001856  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  5641  00185A  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  5642  00185E  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  5643  001862  C086  F00F         	movff	efgtoa@l,___flmul@b
  5644  001866  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  5645  00186A  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  5646  00186E  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  5647  001872  EC13  F01B         	call	___flmul	;wreg free
  5648  001876  C00F  F03C         	movff	?___flmul,___flsub@a
  5649  00187A  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  5650  00187E  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  5651  001882  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  5652  001886  EC95  F030         	call	___flsub	;wreg free
  5653  00188A  C038  F082         	movff	?___flsub,efgtoa@h
  5654  00188E  C039  F083         	movff	?___flsub+1,efgtoa@h+1
  5655  001892  C03A  F084         	movff	?___flsub+2,efgtoa@h+2
  5656  001896  C03B  F085         	movff	?___flsub+3,efgtoa@h+3
  5657  00189A                     
  5658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5659  00189A  C094  F00F         	movff	efgtoa@u,___fldiv@b
  5660  00189E  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5661  0018A2  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5662  0018A6  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5663  0018AA  0E00               	movlw	0
  5664  0018AC  6E13               	movwf	___fldiv@a^0,c
  5665  0018AE  0E00               	movlw	0
  5666  0018B0  6E14               	movwf	(___fldiv@a+1)^0,c
  5667  0018B2  0E20               	movlw	32
  5668  0018B4  6E15               	movwf	(___fldiv@a+2)^0,c
  5669  0018B6  0E41               	movlw	65
  5670  0018B8  6E16               	movwf	(___fldiv@a+3)^0,c
  5671  0018BA  EC28  F01D         	call	___fldiv	;wreg free
  5672  0018BE  C00F  F094         	movff	?___fldiv,efgtoa@u
  5673  0018C2  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  5674  0018C6  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  5675  0018CA  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  5676  0018CE                     
  5677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5678  0018CE  0100               	movlb	0	; () banked
  5679  0018D0  0770               	decf	efgtoa@ne& (0+255),f,b
  5680  0018D2  A0D8               	btfss	status,0,c
  5681  0018D4  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  5682  0018D6                     
  5683                           ; BSR set to: 0
  5684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5685  0018D6  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5686  0018D8  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5687  0018DA                     l5405:
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5691  0018DA  5172               	movf	efgtoa@m& (0+255),w,b
  5692  0018DC  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5693  0018DE  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5694  0018E0  0A80               	xorlw	128
  5695  0018E2  6E47               	movwf	??_efgtoa^0,c
  5696  0018E4  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  5697  0018E6  0A80               	xorlw	128
  5698  0018E8  5847               	subwfb	??_efgtoa^0,w,c
  5699  0018EA  B0D8               	btfsc	status,0,c
  5700  0018EC  EF7A  F00C         	goto	u6401
  5701  0018F0  EF7C  F00C         	goto	u6400
  5702  0018F4                     u6401:
  5703  0018F4  EF8A  F00C         	goto	l5409
  5704  0018F8                     u6400:
  5705  0018F8                     
  5706                           ; BSR set to: 0
  5707  0018F8  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5708  0018FA  EF88  F00C         	goto	u6411
  5709  0018FE  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  5710  001900  E109               	bnz	u6410
  5711  001902  0E4B               	movlw	75
  5712  001904  5D92               	subwf	efgtoa@n& (0+255),w,b
  5713  001906  A0D8               	btfss	status,0,c
  5714  001908  EF88  F00C         	goto	u6411
  5715  00190C  EF8A  F00C         	goto	u6410
  5716  001910                     u6411:
  5717  001910  EF80  F00B         	goto	l5357
  5718  001914                     u6410:
  5719  001914                     l5409:
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5723  001914  516E               	movf	efgtoa@pp& (0+255),w,b
  5724  001916  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5725  001918  A4D8               	btfss	status,2,c
  5726  00191A  EF91  F00C         	goto	u6421
  5727  00191E  EF93  F00C         	goto	u6420
  5728  001922                     u6421:
  5729  001922  EFA4  F00C         	goto	l5417
  5730  001926                     u6420:
  5731  001926                     
  5732                           ; BSR set to: 0
  5733  001926  A9F2               	btfss	_flags& (0+255),4,b
  5734  001928  EF98  F00C         	goto	u6431
  5735  00192C  EF9A  F00C         	goto	u6430
  5736  001930                     u6431:
  5737  001930  EFA4  F00C         	goto	l5417
  5738  001934                     u6430:
  5739  001934                     
  5740                           ; BSR set to: 0
  5741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5742  001934  0E5C               	movlw	low _dbuf
  5743  001936  2592               	addwf	efgtoa@n& (0+255),w,b
  5744  001938  6ED9               	movwf	fsr2l,c
  5745  00193A  0E01               	movlw	high _dbuf
  5746  00193C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5747  00193E  6EDA               	movwf	fsr2h,c
  5748  001940  0E2E               	movlw	46
  5749  001942  6EDF               	movwf	indf2,c
  5750  001944                     
  5751                           ; BSR set to: 0
  5752  001944  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5753  001946  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5754  001948                     l5417:
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5758  001948  0E5C               	movlw	low _dbuf
  5759  00194A  2592               	addwf	efgtoa@n& (0+255),w,b
  5760  00194C  6ED9               	movwf	fsr2l,c
  5761  00194E  0E01               	movlw	high _dbuf
  5762  001950  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5763  001952  6EDA               	movwf	fsr2h,c
  5764  001954  0E00               	movlw	0
  5765  001956  6EDF               	movwf	indf2,c
  5766  001958                     
  5767                           ; BSR set to: 0
  5768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5769  001958  0E65               	movlw	101
  5770  00195A  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  5771  00195C  A4D8               	btfss	status,2,c
  5772  00195E  EFB3  F00C         	goto	u6441
  5773  001962  EFB5  F00C         	goto	u6440
  5774  001966                     u6441:
  5775  001966  EF0F  F008         	goto	l5219
  5776  00196A                     u6440:
  5777  00196A                     
  5778                           ; BSR set to: 0
  5779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5780  00196A  0E00               	movlw	0
  5781  00196C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5782  00196E  0E4F               	movlw	79
  5783  001970  6F8A               	movwf	efgtoa@i& (0+255),b
  5784  001972                     
  5785                           ; BSR set to: 0
  5786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5787  001972  0E5C               	movlw	low _dbuf
  5788  001974  258A               	addwf	efgtoa@i& (0+255),w,b
  5789  001976  6ED9               	movwf	fsr2l,c
  5790  001978  0E01               	movlw	high _dbuf
  5791  00197A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5792  00197C  6EDA               	movwf	fsr2h,c
  5793  00197E  0E00               	movlw	0
  5794  001980  6EDF               	movwf	indf2,c
  5795  001982                     
  5796                           ; BSR set to: 0
  5797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5798  001982  0E00               	movlw	0
  5799  001984  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5800  001986  0E00               	movlw	0
  5801  001988  6F7A               	movwf	efgtoa@sign& (0+255),b
  5802  00198A                     
  5803                           ; BSR set to: 0
  5804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5805  00198A  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5806  00198C  EFCC  F00C         	goto	u6450
  5807  001990  EFCA  F00C         	goto	u6451
  5808  001994                     u6451:
  5809  001994  EFD4  F00C         	goto	l5433
  5810  001998                     u6450:
  5811  001998                     
  5812                           ; BSR set to: 0
  5813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5814  001998  0E00               	movlw	0
  5815  00199A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5816  00199C  0E01               	movlw	1
  5817  00199E  6F7A               	movwf	efgtoa@sign& (0+255),b
  5818  0019A0                     
  5819                           ; BSR set to: 0
  5820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5821  0019A0  6D90               	negf	efgtoa@e& (0+255),b
  5822  0019A2  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  5823  0019A4  B0D8               	btfsc	status,0,c
  5824  0019A6  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5825  0019A8                     l5433:
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5829  0019A8  0E00               	movlw	0
  5830  0019AA  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5831  0019AC  0E02               	movlw	2
  5832  0019AE  6F7C               	movwf	efgtoa@p& (0+255),b
  5833                           
  5834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5835  0019B0  EF05  F00D         	goto	l5445
  5836  0019B4                     l5435:
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5840  0019B4  078A               	decf	efgtoa@i& (0+255),f,b
  5841  0019B6  A0D8               	btfss	status,0,c
  5842  0019B8  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5843  0019BA                     
  5844                           ; BSR set to: 0
  5845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5846  0019BA  0E5C               	movlw	low _dbuf
  5847  0019BC  258A               	addwf	efgtoa@i& (0+255),w,b
  5848  0019BE  6ED9               	movwf	fsr2l,c
  5849  0019C0  0E01               	movlw	high _dbuf
  5850  0019C2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5851  0019C4  6EDA               	movwf	fsr2h,c
  5852  0019C6  C090  F001         	movff	efgtoa@e,___awmod@dividend
  5853  0019CA  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5854  0019CE  0E00               	movlw	0
  5855  0019D0  6E04               	movwf	(___awmod@divisor+1)^0,c
  5856  0019D2  0E0A               	movlw	10
  5857  0019D4  6E03               	movwf	___awmod@divisor^0,c
  5858  0019D6  ECCE  F02C         	call	___awmod	;wreg free
  5859  0019DA  5001               	movf	?___awmod^0,w,c
  5860  0019DC  0F30               	addlw	48
  5861  0019DE  6EDF               	movwf	indf2,c
  5862  0019E0                     
  5863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5864  0019E0  C090  F007         	movff	efgtoa@e,___awdiv@dividend
  5865  0019E4  C091  F008         	movff	efgtoa@e+1,___awdiv@dividend+1
  5866  0019E8  0E00               	movlw	0
  5867  0019EA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5868  0019EC  0E0A               	movlw	10
  5869  0019EE  6E09               	movwf	___awdiv@divisor^0,c
  5870  0019F0  EC6C  F02C         	call	___awdiv	;wreg free
  5871  0019F4  C007  F090         	movff	?___awdiv,efgtoa@e
  5872  0019F8  C008  F091         	movff	?___awdiv+1,efgtoa@e+1
  5873  0019FC                     
  5874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5875  0019FC  0100               	movlb	0	; () banked
  5876  0019FE  077C               	decf	efgtoa@p& (0+255),f,b
  5877  001A00  A0D8               	btfss	status,0,c
  5878  001A02  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  5879  001A04                     
  5880                           ; BSR set to: 0
  5881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5882  001A04  077E               	decf	efgtoa@w& (0+255),f,b
  5883  001A06  A0D8               	btfss	status,0,c
  5884  001A08  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5885  001A0A                     l5445:
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5889  001A0A  5190               	movf	efgtoa@e& (0+255),w,b
  5890  001A0C  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5891  001A0E  A4D8               	btfss	status,2,c
  5892  001A10  EF0C  F00D         	goto	u6461
  5893  001A14  EF0E  F00D         	goto	u6460
  5894  001A18                     u6461:
  5895  001A18  EFDA  F00C         	goto	l5435
  5896  001A1C                     u6460:
  5897  001A1C                     
  5898                           ; BSR set to: 0
  5899  001A1C  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5900  001A1E  EF1B  F00D         	goto	u6470
  5901  001A22  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  5902  001A24  E106               	bnz	u6471
  5903  001A26  057C               	decf	efgtoa@p& (0+255),w,b
  5904  001A28  B0D8               	btfsc	status,0,c
  5905  001A2A  EF19  F00D         	goto	u6471
  5906  001A2E  EF1B  F00D         	goto	u6470
  5907  001A32                     u6471:
  5908  001A32  EFDA  F00C         	goto	l5435
  5909  001A36                     u6470:
  5910  001A36                     
  5911                           ; BSR set to: 0
  5912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5913  001A36  078A               	decf	efgtoa@i& (0+255),f,b
  5914  001A38  A0D8               	btfss	status,0,c
  5915  001A3A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5916  001A3C                     
  5917                           ; BSR set to: 0
  5918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5919  001A3C  517A               	movf	efgtoa@sign& (0+255),w,b
  5920  001A3E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5921  001A40  A4D8               	btfss	status,2,c
  5922  001A42  EF25  F00D         	goto	u6481
  5923  001A46  EF27  F00D         	goto	u6480
  5924  001A4A                     u6481:
  5925  001A4A  EF2D  F00D         	goto	l5455
  5926  001A4E                     u6480:
  5927  001A4E                     
  5928                           ; BSR set to: 0
  5929  001A4E  0E00               	movlw	0
  5930  001A50  6F67               	movwf	(_efgtoa$3059+1)& (0+255),b
  5931  001A52  0E2B               	movlw	43
  5932  001A54  6F66               	movwf	_efgtoa$3059& (0+255),b
  5933  001A56  EF31  F00D         	goto	l5457
  5934  001A5A                     l5455:
  5935                           
  5936                           ; BSR set to: 0
  5937  001A5A  0E00               	movlw	0
  5938  001A5C  6F67               	movwf	(_efgtoa$3059+1)& (0+255),b
  5939  001A5E  0E2D               	movlw	45
  5940  001A60  6F66               	movwf	_efgtoa$3059& (0+255),b
  5941  001A62                     l5457:
  5942                           
  5943                           ; BSR set to: 0
  5944  001A62  0E5C               	movlw	low _dbuf
  5945  001A64  258A               	addwf	efgtoa@i& (0+255),w,b
  5946  001A66  6ED9               	movwf	fsr2l,c
  5947  001A68  0E01               	movlw	high _dbuf
  5948  001A6A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5949  001A6C  6EDA               	movwf	fsr2h,c
  5950  001A6E  C066  FFDF         	movff	_efgtoa$3059,indf2
  5951  001A72                     
  5952                           ; BSR set to: 0
  5953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5954  001A72  077E               	decf	efgtoa@w& (0+255),f,b
  5955  001A74  A0D8               	btfss	status,0,c
  5956  001A76  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5957  001A78                     
  5958                           ; BSR set to: 0
  5959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5960  001A78  078A               	decf	efgtoa@i& (0+255),f,b
  5961  001A7A  A0D8               	btfss	status,0,c
  5962  001A7C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5963  001A7E                     
  5964                           ; BSR set to: 0
  5965  001A7E  0EBF               	movlw	191
  5966  001A80  6E47               	movwf	??_efgtoa^0,c
  5967  001A82  0EFF               	movlw	255
  5968  001A84  6E48               	movwf	(??_efgtoa+1)^0,c
  5969  001A86  5046               	movf	efgtoa@c^0,w,c
  5970  001A88  6E49               	movwf	(??_efgtoa+2)^0,c
  5971  001A8A  6A4A               	clrf	(??_efgtoa+3)^0,c
  5972  001A8C  5047               	movf	??_efgtoa^0,w,c
  5973  001A8E  2649               	addwf	(??_efgtoa+2)^0,f,c
  5974  001A90  5048               	movf	(??_efgtoa+1)^0,w,c
  5975  001A92  224A               	addwfc	(??_efgtoa+3)^0,f,c
  5976  001A94  504A               	movf	(??_efgtoa+3)^0,w,c
  5977  001A96  E10A               	bnz	u6490
  5978  001A98  0E1A               	movlw	26
  5979  001A9A  5C49               	subwf	(??_efgtoa+2)^0,w,c
  5980  001A9C  A0D8               	btfss	status,0,c
  5981  001A9E  EF53  F00D         	goto	u6491
  5982  001AA2  EF56  F00D         	goto	u6490
  5983  001AA6                     u6491:
  5984  001AA6  0E01               	movlw	1
  5985  001AA8  EF57  F00D         	goto	u6500
  5986  001AAC                     u6490:
  5987  001AAC  0E00               	movlw	0
  5988  001AAE                     u6500:
  5989  001AAE  6F6A               	movwf	_efgtoa$3061& (0+255),b
  5990  001AB0  6B6B               	clrf	(_efgtoa$3061+1)& (0+255),b
  5991  001AB2                     
  5992                           ; BSR set to: 0
  5993  001AB2  516A               	movf	_efgtoa$3061& (0+255),w,b
  5994  001AB4  116B               	iorwf	(_efgtoa$3061+1)& (0+255),w,b
  5995  001AB6  A4D8               	btfss	status,2,c
  5996  001AB8  EF60  F00D         	goto	u6511
  5997  001ABC  EF62  F00D         	goto	u6510
  5998  001AC0                     u6511:
  5999  001AC0  EF68  F00D         	goto	l5471
  6000  001AC4                     u6510:
  6001  001AC4                     
  6002                           ; BSR set to: 0
  6003  001AC4  0E00               	movlw	0
  6004  001AC6  6F69               	movwf	(_efgtoa$3060+1)& (0+255),b
  6005  001AC8  0E65               	movlw	101
  6006  001ACA  6F68               	movwf	_efgtoa$3060& (0+255),b
  6007  001ACC  EF6C  F00D         	goto	l5473
  6008  001AD0                     l5471:
  6009                           
  6010                           ; BSR set to: 0
  6011  001AD0  0E00               	movlw	0
  6012  001AD2  6F69               	movwf	(_efgtoa$3060+1)& (0+255),b
  6013  001AD4  0E45               	movlw	69
  6014  001AD6  6F68               	movwf	_efgtoa$3060& (0+255),b
  6015  001AD8                     l5473:
  6016                           
  6017                           ; BSR set to: 0
  6018  001AD8  0E5C               	movlw	low _dbuf
  6019  001ADA  258A               	addwf	efgtoa@i& (0+255),w,b
  6020  001ADC  6ED9               	movwf	fsr2l,c
  6021  001ADE  0E01               	movlw	high _dbuf
  6022  001AE0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6023  001AE2  6EDA               	movwf	fsr2h,c
  6024  001AE4  C068  FFDF         	movff	_efgtoa$3060,indf2
  6025  001AE8                     
  6026                           ; BSR set to: 0
  6027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6028  001AE8  077E               	decf	efgtoa@w& (0+255),f,b
  6029  001AEA  A0D8               	btfss	status,0,c
  6030  001AEC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6031  001AEE                     
  6032                           ; BSR set to: 0
  6033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6034  001AEE  0E5C               	movlw	low _dbuf
  6035  001AF0  2592               	addwf	efgtoa@n& (0+255),w,b
  6036  001AF2  6E01               	movwf	strcpy@dest^0,c
  6037  001AF4  0E01               	movlw	high _dbuf
  6038  001AF6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6039  001AF8  6E02               	movwf	(strcpy@dest+1)^0,c
  6040  001AFA  0E5C               	movlw	low _dbuf
  6041  001AFC  258A               	addwf	efgtoa@i& (0+255),w,b
  6042  001AFE  6E03               	movwf	strcpy@src^0,c
  6043  001B00  0E01               	movlw	high _dbuf
  6044  001B02  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6045  001B04  6E04               	movwf	(strcpy@src+1)^0,c
  6046  001B06  ECA5  F02E         	call	_strcpy	;wreg free
  6047  001B0A  EF0F  F008         	goto	l5219
  6048  001B0E                     l1501:
  6049  001B0E  0012               	return		;funcret
  6050  001B10                     __end_of_efgtoa:
  6051                           	callstack 0
  6052                           
  6053 ;; *************** function _tolower *****************
  6054 ;; Defined at:
  6055 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  c               2    6[COMRAM] int 
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;		None
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  2    6[COMRAM] int 
  6062 ;; Registers used:
  6063 ;;		wreg, status,2, status,0
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6071 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6072 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6073 ;;Total ram usage:        8 bytes
  6074 ;; Hardware stack levels used: 1
  6075 ;; Hardware stack levels required when called: 1
  6076 ;; This function calls:
  6077 ;;		_isupper
  6078 ;; This function is called by:
  6079 ;;		_efgtoa
  6080 ;;		_vfpfcnvrt
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           	psect	text12
  6085  005CEA                     __ptext12:
  6086                           	callstack 0
  6087  005CEA                     _tolower:
  6088                           	callstack 25
  6089  005CEA  0EBF               	movlw	191
  6090  005CEC  6E09               	movwf	??_tolower^0,c
  6091  005CEE  0EFF               	movlw	255
  6092  005CF0  6E0A               	movwf	(??_tolower+1)^0,c
  6093  005CF2  C007  F00B         	movff	tolower@c,??_tolower+2
  6094  005CF6  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6095  005CFA  5009               	movf	??_tolower^0,w,c
  6096  005CFC  260B               	addwf	(??_tolower+2)^0,f,c
  6097  005CFE  500A               	movf	(??_tolower+1)^0,w,c
  6098  005D00  220C               	addwfc	(??_tolower+3)^0,f,c
  6099  005D02  500C               	movf	(??_tolower+3)^0,w,c
  6100  005D04  E10A               	bnz	u5640
  6101  005D06  0E1A               	movlw	26
  6102  005D08  5C0B               	subwf	(??_tolower+2)^0,w,c
  6103  005D0A  A0D8               	btfss	status,0,c
  6104  005D0C  EF8A  F02E         	goto	u5641
  6105  005D10  EF8D  F02E         	goto	u5640
  6106  005D14                     u5641:
  6107  005D14  0E01               	movlw	1
  6108  005D16  EF8E  F02E         	goto	u5650
  6109  005D1A                     u5640:
  6110  005D1A  0E00               	movlw	0
  6111  005D1C                     u5650:
  6112  005D1C  6E0D               	movwf	_tolower$3222^0,c
  6113  005D1E  6A0E               	clrf	(_tolower$3222+1)^0,c
  6114  005D20  500D               	movf	_tolower$3222^0,w,c
  6115  005D22  100E               	iorwf	(_tolower$3222+1)^0,w,c
  6116  005D24  B4D8               	btfsc	status,2,c
  6117  005D26  EF97  F02E         	goto	u5661
  6118  005D2A  EF99  F02E         	goto	u5660
  6119  005D2E                     u5661:
  6120  005D2E  EFA0  F02E         	goto	l1765
  6121  005D32                     u5660:
  6122  005D32  0E20               	movlw	32
  6123  005D34  1007               	iorwf	tolower@c^0,w,c
  6124  005D36  6E07               	movwf	?_tolower^0,c
  6125  005D38  5008               	movf	(tolower@c+1)^0,w,c
  6126  005D3A  6E08               	movwf	(?_tolower+1)^0,c
  6127  005D3C  EFA4  F02E         	goto	l1770
  6128  005D40                     l1765:
  6129  005D40  C007  F007         	movff	tolower@c,?_tolower
  6130  005D44  C008  F008         	movff	tolower@c+1,?_tolower+1
  6131  005D48                     l1770:
  6132  005D48  0012               	return		;funcret
  6133  005D4A                     __end_of_tolower:
  6134                           	callstack 0
  6135                           
  6136 ;; *************** function _isupper *****************
  6137 ;; Defined at:
  6138 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  c               2    0[COMRAM] int 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  2    0[COMRAM] int 
  6145 ;; Registers used:
  6146 ;;		wreg, status,2, status,0
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6154 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6155 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6156 ;;Total ram usage:        6 bytes
  6157 ;; Hardware stack levels used: 1
  6158 ;; This function calls:
  6159 ;;		Nothing
  6160 ;; This function is called by:
  6161 ;;		_efgtoa
  6162 ;;		_vfpfcnvrt
  6163 ;;		_tolower
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text13
  6168  0062AC                     __ptext13:
  6169                           	callstack 0
  6170  0062AC                     _isupper:
  6171                           	callstack 25
  6172  0062AC  0EBF               	movlw	191
  6173  0062AE  6E03               	movwf	??_isupper^0,c
  6174  0062B0  0EFF               	movlw	255
  6175  0062B2  6E04               	movwf	(??_isupper+1)^0,c
  6176  0062B4  C001  F005         	movff	isupper@c,??_isupper+2
  6177  0062B8  C002  F006         	movff	isupper@c+1,??_isupper+3
  6178  0062BC  5003               	movf	??_isupper^0,w,c
  6179  0062BE  2605               	addwf	(??_isupper+2)^0,f,c
  6180  0062C0  5004               	movf	(??_isupper+1)^0,w,c
  6181  0062C2  2206               	addwfc	(??_isupper+3)^0,f,c
  6182  0062C4  5006               	movf	(??_isupper+3)^0,w,c
  6183  0062C6  E10A               	bnz	u4630
  6184  0062C8  0E1A               	movlw	26
  6185  0062CA  5C05               	subwf	(??_isupper+2)^0,w,c
  6186  0062CC  A0D8               	btfss	status,0,c
  6187  0062CE  EF6B  F031         	goto	u4631
  6188  0062D2  EF6E  F031         	goto	u4630
  6189  0062D6                     u4631:
  6190  0062D6  0E01               	movlw	1
  6191  0062D8  EF6F  F031         	goto	u4640
  6192  0062DC                     u4630:
  6193  0062DC  0E00               	movlw	0
  6194  0062DE                     u4640:
  6195  0062DE  6E01               	movwf	?_isupper^0,c
  6196  0062E0  6A02               	clrf	(?_isupper+1)^0,c
  6197  0062E2  0012               	return		;funcret
  6198  0062E4                     __end_of_isupper:
  6199                           	callstack 0
  6200                           
  6201 ;; *************** function _strcpy *****************
  6202 ;; Defined at:
  6203 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6206 ;;		 -> dbuf(80), 
  6207 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6208 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  6209 ;;		 -> dbuf(80), 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  d               2    8[COMRAM] PTR unsigned char 
  6212 ;;		 -> dbuf(80), 
  6213 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6214 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  6215 ;;		 -> dbuf(80), 
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  2    0[COMRAM] PTR unsigned char 
  6218 ;; Registers used:
  6219 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6225 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6226 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6228 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6229 ;;Total ram usage:       10 bytes
  6230 ;; Hardware stack levels used: 1
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_efgtoa
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text14
  6239  005D4A                     __ptext14:
  6240                           	callstack 0
  6241  005D4A                     _strcpy:
  6242                           	callstack 25
  6243  005D4A  C003  F007         	movff	strcpy@src,strcpy@s
  6244  005D4E  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6245  005D52  C001  F009         	movff	strcpy@dest,strcpy@d
  6246  005D56  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6247  005D5A                     l5027:
  6248  005D5A  5007               	movf	strcpy@s^0,w,c
  6249  005D5C  6E05               	movwf	??_strcpy^0,c
  6250  005D5E  5008               	movf	(strcpy@s+1)^0,w,c
  6251  005D60  6E06               	movwf	(??_strcpy+1)^0,c
  6252  005D62  4A07               	infsnz	strcpy@s^0,f,c
  6253  005D64  2A08               	incf	(strcpy@s+1)^0,f,c
  6254  005D66  C005  FFF6         	movff	??_strcpy,tblptrl
  6255  005D6A  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6256  005D6E  0E00               	movlw	low (__smallconst shr (0+16))
  6257  005D70  6EF8               	movwf	tblptru,c
  6258  005D72  C009  FFD9         	movff	strcpy@d,fsr2l
  6259  005D76  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6260  005D7A  4A09               	infsnz	strcpy@d^0,f,c
  6261  005D7C  2A0A               	incf	(strcpy@d+1)^0,f,c
  6262  005D7E  0E0D               	movlw	(high __ramtop+-1)
  6263  005D80  64F7               	cpfsgt	tblptrh,c
  6264  005D82  D003               	bra	u5627
  6265  005D84  0008               	tblrd		*
  6266  005D86  50F5               	movf	tablat,w,c
  6267  005D88  D005               	bra	u5620
  6268  005D8A                     u5627:
  6269  005D8A  CFF6 FFE9          	movff	tblptrl,fsr0l
  6270  005D8E  CFF7 FFEA          	movff	tblptrh,fsr0h
  6271  005D92  50EF               	movf	indf0,w,c
  6272  005D94                     u5620:
  6273  005D94  6EDF               	movwf	indf2,c
  6274  005D96  50DF               	movf	indf2,w,c
  6275  005D98  A4D8               	btfss	status,2,c
  6276  005D9A  EFD1  F02E         	goto	u5631
  6277  005D9E  EFD3  F02E         	goto	u5630
  6278  005DA2                     u5631:
  6279  005DA2  EFAD  F02E         	goto	l5027
  6280  005DA6                     u5630:
  6281  005DA6  0012               	return		;funcret
  6282  005DA8                     __end_of_strcpy:
  6283                           	callstack 0
  6284                           
  6285 ;; *************** function _floorf *****************
  6286 ;; Defined at:
  6287 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  x               4   39[COMRAM] float 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  u               4   55[COMRAM] struct .
  6292 ;;  m               4   49[COMRAM] unsigned long 
  6293 ;;  e               2   53[COMRAM] int 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  4   39[COMRAM] float 
  6296 ;; Registers used:
  6297 ;;		wreg, status,2, status,0
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6306 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;Total ram usage:       20 bytes
  6308 ;; Hardware stack levels used: 1
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_efgtoa
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text15
  6317  0040CE                     __ptext15:
  6318                           	callstack 0
  6319  0040CE                     _floorf:
  6320                           	callstack 25
  6321  0040CE  C150  F038         	movff	floorf@F527,floorf@u
  6322  0040D2  C151  F039         	movff	floorf@F527+1,floorf@u+1
  6323  0040D6  C152  F03A         	movff	floorf@F527+2,floorf@u+2
  6324  0040DA  C153  F03B         	movff	floorf@F527+3,floorf@u+3
  6325  0040DE  C028  F038         	movff	floorf@x,floorf@u
  6326  0040E2  C029  F039         	movff	floorf@x+1,floorf@u+1
  6327  0040E6  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  6328  0040EA  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  6329  0040EE  0E81               	movlw	129
  6330  0040F0  6E2C               	movwf	??_floorf^0,c
  6331  0040F2  0EFF               	movlw	255
  6332  0040F4  6E2D               	movwf	(??_floorf+1)^0,c
  6333  0040F6  C038  F02E         	movff	floorf@u,??_floorf+2
  6334  0040FA  C039  F02F         	movff	floorf@u+1,??_floorf+3
  6335  0040FE  C03A  F030         	movff	floorf@u+2,??_floorf+4
  6336  004102  C03B  F031         	movff	floorf@u+3,??_floorf+5
  6337  004106  0E18               	movlw	24
  6338  004108  EF8B  F020         	goto	u5670
  6339  00410C                     u5675:
  6340  00410C  90D8               	bcf	status,0,c
  6341  00410E  3231               	rrcf	(??_floorf+5)^0,f,c
  6342  004110  3230               	rrcf	(??_floorf+4)^0,f,c
  6343  004112  322F               	rrcf	(??_floorf+3)^0,f,c
  6344  004114  322E               	rrcf	(??_floorf+2)^0,f,c
  6345  004116                     u5670:
  6346  004116  2EE8               	decfsz	wreg,f,c
  6347  004118  EF86  F020         	goto	u5675
  6348  00411C  502E               	movf	(??_floorf+2)^0,w,c
  6349  00411E  242C               	addwf	??_floorf^0,w,c
  6350  004120  6E36               	movwf	floorf@e^0,c
  6351  004122  0E00               	movlw	0
  6352  004124  202D               	addwfc	(??_floorf+1)^0,w,c
  6353  004126  6E37               	movwf	(floorf@e+1)^0,c
  6354  004128  BE37               	btfsc	(floorf@e+1)^0,7,c
  6355  00412A  EFA0  F020         	goto	u5681
  6356  00412E  5037               	movf	(floorf@e+1)^0,w,c
  6357  004130  E109               	bnz	u5680
  6358  004132  0E17               	movlw	23
  6359  004134  5C36               	subwf	floorf@e^0,w,c
  6360  004136  A0D8               	btfss	status,0,c
  6361  004138  EFA0  F020         	goto	u5681
  6362  00413C  EFA2  F020         	goto	u5680
  6363  004140                     u5681:
  6364  004140  EFAC  F020         	goto	l5045
  6365  004144                     u5680:
  6366  004144                     l5043:
  6367  004144  C028  F028         	movff	floorf@x,?_floorf
  6368  004148  C029  F029         	movff	floorf@x+1,?_floorf+1
  6369  00414C  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  6370  004150  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  6371  004154  EF6F  F021         	goto	l1689
  6372  004158                     l5045:
  6373  004158  BE37               	btfsc	(floorf@e+1)^0,7,c
  6374  00415A  EFB1  F020         	goto	u5691
  6375  00415E  EFB3  F020         	goto	u5690
  6376  004162                     u5691:
  6377  004162  EF23  F021         	goto	l5055
  6378  004166                     u5690:
  6379  004166  C036  F02C         	movff	floorf@e,??_floorf
  6380  00416A  0EFF               	movlw	255
  6381  00416C  6E2D               	movwf	(??_floorf+1)^0,c
  6382  00416E  0EFF               	movlw	255
  6383  004170  6E2E               	movwf	(??_floorf+2)^0,c
  6384  004172  0E7F               	movlw	127
  6385  004174  6E2F               	movwf	(??_floorf+3)^0,c
  6386  004176  0E00               	movlw	0
  6387  004178  6E30               	movwf	(??_floorf+4)^0,c
  6388  00417A                     u5705:
  6389  00417A  662C               	tstfsz	??_floorf^0,c
  6390  00417C  EFC2  F020         	goto	u5706
  6391  004180  EFCA  F020         	goto	u5707
  6392  004184                     u5706:
  6393  004184  3430               	rlcf	(??_floorf+4)^0,w,c
  6394  004186  3230               	rrcf	(??_floorf+4)^0,f,c
  6395  004188  322F               	rrcf	(??_floorf+3)^0,f,c
  6396  00418A  322E               	rrcf	(??_floorf+2)^0,f,c
  6397  00418C  322D               	rrcf	(??_floorf+1)^0,f,c
  6398  00418E  2E2C               	decfsz	??_floorf^0,f,c
  6399  004190  EFBD  F020         	goto	u5705
  6400  004194                     u5707:
  6401  004194  C02D  F032         	movff	??_floorf+1,floorf@m
  6402  004198  C02E  F033         	movff	??_floorf+2,floorf@m+1
  6403  00419C  C02F  F034         	movff	??_floorf+3,floorf@m+2
  6404  0041A0  C030  F035         	movff	??_floorf+4,floorf@m+3
  6405  0041A4  5032               	movf	floorf@m^0,w,c
  6406  0041A6  1438               	andwf	floorf@u^0,w,c
  6407  0041A8  6E2C               	movwf	??_floorf^0,c
  6408  0041AA  5033               	movf	(floorf@m+1)^0,w,c
  6409  0041AC  1439               	andwf	(floorf@u+1)^0,w,c
  6410  0041AE  6E2D               	movwf	(??_floorf+1)^0,c
  6411  0041B0  5034               	movf	(floorf@m+2)^0,w,c
  6412  0041B2  143A               	andwf	(floorf@u+2)^0,w,c
  6413  0041B4  6E2E               	movwf	(??_floorf+2)^0,c
  6414  0041B6  5035               	movf	(floorf@m+3)^0,w,c
  6415  0041B8  143B               	andwf	(floorf@u+3)^0,w,c
  6416  0041BA  6E2F               	movwf	(??_floorf+3)^0,c
  6417  0041BC  502C               	movf	??_floorf^0,w,c
  6418  0041BE  102D               	iorwf	(??_floorf+1)^0,w,c
  6419  0041C0  102E               	iorwf	(??_floorf+2)^0,w,c
  6420  0041C2  102F               	iorwf	(??_floorf+3)^0,w,c
  6421  0041C4  A4D8               	btfss	status,2,c
  6422  0041C6  EFE7  F020         	goto	u5711
  6423  0041CA  EFE9  F020         	goto	u5710
  6424  0041CE                     u5711:
  6425  0041CE  EFEB  F020         	goto	l5051
  6426  0041D2                     u5710:
  6427  0041D2  EFA2  F020         	goto	l5043
  6428  0041D6                     l5051:
  6429  0041D6  C038  F02C         	movff	floorf@u,??_floorf
  6430  0041DA  C039  F02D         	movff	floorf@u+1,??_floorf+1
  6431  0041DE  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  6432  0041E2  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  6433  0041E6  0E20               	movlw	32
  6434  0041E8  EFFB  F020         	goto	u5720
  6435  0041EC                     u5725:
  6436  0041EC  90D8               	bcf	status,0,c
  6437  0041EE  322F               	rrcf	(??_floorf+3)^0,f,c
  6438  0041F0  322E               	rrcf	(??_floorf+2)^0,f,c
  6439  0041F2  322D               	rrcf	(??_floorf+1)^0,f,c
  6440  0041F4  322C               	rrcf	??_floorf^0,f,c
  6441  0041F6                     u5720:
  6442  0041F6  2EE8               	decfsz	wreg,f,c
  6443  0041F8  EFF6  F020         	goto	u5725
  6444  0041FC  502C               	movf	??_floorf^0,w,c
  6445  0041FE  102D               	iorwf	(??_floorf+1)^0,w,c
  6446  004200  102E               	iorwf	(??_floorf+2)^0,w,c
  6447  004202  102F               	iorwf	(??_floorf+3)^0,w,c
  6448  004204  B4D8               	btfsc	status,2,c
  6449  004206  EF07  F021         	goto	u5731
  6450  00420A  EF09  F021         	goto	u5730
  6451  00420E                     u5731:
  6452  00420E  EF11  F021         	goto	l1692
  6453  004212                     u5730:
  6454  004212  5032               	movf	floorf@m^0,w,c
  6455  004214  2638               	addwf	floorf@u^0,f,c
  6456  004216  5033               	movf	(floorf@m+1)^0,w,c
  6457  004218  2239               	addwfc	(floorf@u+1)^0,f,c
  6458  00421A  5034               	movf	(floorf@m+2)^0,w,c
  6459  00421C  223A               	addwfc	(floorf@u+2)^0,f,c
  6460  00421E  5035               	movf	(floorf@m+3)^0,w,c
  6461  004220  223B               	addwfc	(floorf@u+3)^0,f,c
  6462  004222                     l1692:
  6463  004222  1C32               	comf	floorf@m^0,w,c
  6464  004224  6E2C               	movwf	??_floorf^0,c
  6465  004226  1C33               	comf	(floorf@m+1)^0,w,c
  6466  004228  6E2D               	movwf	(??_floorf+1)^0,c
  6467  00422A  1C34               	comf	(floorf@m+2)^0,w,c
  6468  00422C  6E2E               	movwf	(??_floorf+2)^0,c
  6469  00422E  1C35               	comf	(floorf@m+3)^0,w,c
  6470  004230  6E2F               	movwf	(??_floorf+3)^0,c
  6471  004232  502C               	movf	??_floorf^0,w,c
  6472  004234  1638               	andwf	floorf@u^0,f,c
  6473  004236  502D               	movf	(??_floorf+1)^0,w,c
  6474  004238  1639               	andwf	(floorf@u+1)^0,f,c
  6475  00423A  502E               	movf	(??_floorf+2)^0,w,c
  6476  00423C  163A               	andwf	(floorf@u+2)^0,f,c
  6477  00423E  502F               	movf	(??_floorf+3)^0,w,c
  6478  004240  163B               	andwf	(floorf@u+3)^0,f,c
  6479  004242  EF67  F021         	goto	l5063
  6480  004246                     l5055:
  6481  004246  C038  F02C         	movff	floorf@u,??_floorf
  6482  00424A  C039  F02D         	movff	floorf@u+1,??_floorf+1
  6483  00424E  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  6484  004252  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  6485  004256  0E20               	movlw	32
  6486  004258  EF33  F021         	goto	u5740
  6487  00425C                     u5745:
  6488  00425C  90D8               	bcf	status,0,c
  6489  00425E  322F               	rrcf	(??_floorf+3)^0,f,c
  6490  004260  322E               	rrcf	(??_floorf+2)^0,f,c
  6491  004262  322D               	rrcf	(??_floorf+1)^0,f,c
  6492  004264  322C               	rrcf	??_floorf^0,f,c
  6493  004266                     u5740:
  6494  004266  2EE8               	decfsz	wreg,f,c
  6495  004268  EF2E  F021         	goto	u5745
  6496  00426C  502C               	movf	??_floorf^0,w,c
  6497  00426E  102D               	iorwf	(??_floorf+1)^0,w,c
  6498  004270  102E               	iorwf	(??_floorf+2)^0,w,c
  6499  004272  102F               	iorwf	(??_floorf+3)^0,w,c
  6500  004274  A4D8               	btfss	status,2,c
  6501  004276  EF3F  F021         	goto	u5751
  6502  00427A  EF41  F021         	goto	u5750
  6503  00427E                     u5751:
  6504  00427E  EF4B  F021         	goto	l5059
  6505  004282                     u5750:
  6506  004282  0E00               	movlw	0
  6507  004284  6E38               	movwf	floorf@u^0,c
  6508  004286  0E00               	movlw	0
  6509  004288  6E39               	movwf	(floorf@u+1)^0,c
  6510  00428A  0E00               	movlw	0
  6511  00428C  6E3A               	movwf	(floorf@u+2)^0,c
  6512  00428E  0E00               	movlw	0
  6513  004290  6E3B               	movwf	(floorf@u+3)^0,c
  6514  004292  EF67  F021         	goto	l5063
  6515  004296                     l5059:
  6516  004296  90D8               	bcf	status,0,c
  6517  004298  3438               	rlcf	floorf@u^0,w,c
  6518  00429A  6E2C               	movwf	??_floorf^0,c
  6519  00429C  3439               	rlcf	(floorf@u+1)^0,w,c
  6520  00429E  6E2D               	movwf	(??_floorf+1)^0,c
  6521  0042A0  343A               	rlcf	(floorf@u+2)^0,w,c
  6522  0042A2  6E2E               	movwf	(??_floorf+2)^0,c
  6523  0042A4  343B               	rlcf	(floorf@u+3)^0,w,c
  6524  0042A6  6E2F               	movwf	(??_floorf+3)^0,c
  6525  0042A8  502C               	movf	??_floorf^0,w,c
  6526  0042AA  102D               	iorwf	(??_floorf+1)^0,w,c
  6527  0042AC  102E               	iorwf	(??_floorf+2)^0,w,c
  6528  0042AE  102F               	iorwf	(??_floorf+3)^0,w,c
  6529  0042B0  B4D8               	btfsc	status,2,c
  6530  0042B2  EF5D  F021         	goto	u5761
  6531  0042B6  EF5F  F021         	goto	u5760
  6532  0042BA                     u5761:
  6533  0042BA  EF67  F021         	goto	l5063
  6534  0042BE                     u5760:
  6535  0042BE  0E00               	movlw	0
  6536  0042C0  6E38               	movwf	floorf@u^0,c
  6537  0042C2  0E00               	movlw	0
  6538  0042C4  6E39               	movwf	(floorf@u+1)^0,c
  6539  0042C6  0E80               	movlw	128
  6540  0042C8  6E3A               	movwf	(floorf@u+2)^0,c
  6541  0042CA  0EBF               	movlw	191
  6542  0042CC  6E3B               	movwf	(floorf@u+3)^0,c
  6543  0042CE                     l5063:
  6544  0042CE  C038  F028         	movff	floorf@u,?_floorf
  6545  0042D2  C039  F029         	movff	floorf@u+1,?_floorf+1
  6546  0042D6  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  6547  0042DA  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  6548  0042DE                     l1689:
  6549  0042DE  0012               	return		;funcret
  6550  0042E0                     __end_of_floorf:
  6551                           	callstack 0
  6552                           
  6553 ;; *************** function ___fpclassifyf *****************
  6554 ;; Defined at:
  6555 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  x               4    0[COMRAM] float 
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;  u               4   10[COMRAM] struct .
  6560 ;;  e               2    8[COMRAM] int 
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  2    0[COMRAM] int 
  6563 ;; Registers used:
  6564 ;;		wreg, status,2, status,0
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6571 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6573 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6574 ;;Total ram usage:       14 bytes
  6575 ;; Hardware stack levels used: 1
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_efgtoa
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text16
  6584  005568                     __ptext16:
  6585                           	callstack 0
  6586  005568                     ___fpclassifyf:
  6587                           	callstack 25
  6588  005568  C154  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6589  00556C  C155  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6590  005570  C156  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6591  005574  C157  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6592  005578  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6593  00557C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6594  005580  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6595  005584  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6596  005588  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6597  00558C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6598  005590  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6599  005594  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6600  005598  0E18               	movlw	24
  6601  00559A  EFD4  F02A         	goto	u5550
  6602  00559E                     u5555:
  6603  00559E  90D8               	bcf	status,0,c
  6604  0055A0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6605  0055A2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6606  0055A4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6607  0055A6  3205               	rrcf	??___fpclassifyf^0,f,c
  6608  0055A8                     u5550:
  6609  0055A8  2EE8               	decfsz	wreg,f,c
  6610  0055AA  EFCF  F02A         	goto	u5555
  6611  0055AE  5005               	movf	??___fpclassifyf^0,w,c
  6612  0055B0  6E09               	movwf	___fpclassifyf@e^0,c
  6613  0055B2  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6614  0055B4  5009               	movf	___fpclassifyf@e^0,w,c
  6615  0055B6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6616  0055B8  A4D8               	btfss	status,2,c
  6617  0055BA  EFE1  F02A         	goto	u5561
  6618  0055BE  EFE3  F02A         	goto	u5560
  6619  0055C2                     u5561:
  6620  0055C2  EF03  F02B         	goto	l5015
  6621  0055C6                     u5560:
  6622  0055C6  90D8               	bcf	status,0,c
  6623  0055C8  340B               	rlcf	___fpclassifyf@u^0,w,c
  6624  0055CA  6E05               	movwf	??___fpclassifyf^0,c
  6625  0055CC  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6626  0055CE  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6627  0055D0  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6628  0055D2  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6629  0055D4  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6630  0055D6  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6631  0055D8  5005               	movf	??___fpclassifyf^0,w,c
  6632  0055DA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6633  0055DC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6634  0055DE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6635  0055E0  A4D8               	btfss	status,2,c
  6636  0055E2  EFF5  F02A         	goto	u5571
  6637  0055E6  EFF7  F02A         	goto	u5570
  6638  0055EA                     u5571:
  6639  0055EA  EFFD  F02A         	goto	l5011
  6640  0055EE                     u5570:
  6641  0055EE  0E00               	movlw	0
  6642  0055F0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6643  0055F2  0E02               	movlw	2
  6644  0055F4  6E01               	movwf	?___fpclassifyf^0,c
  6645  0055F6  EF32  F02B         	goto	l1644
  6646  0055FA                     l5011:
  6647  0055FA  0E00               	movlw	0
  6648  0055FC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6649  0055FE  0E03               	movlw	3
  6650  005600  6E01               	movwf	?___fpclassifyf^0,c
  6651  005602  EF32  F02B         	goto	l1644
  6652  005606                     l5015:
  6653  005606  2809               	incf	___fpclassifyf@e^0,w,c
  6654  005608  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6655  00560A  A4D8               	btfss	status,2,c
  6656  00560C  EF0A  F02B         	goto	u5581
  6657  005610  EF0C  F02B         	goto	u5580
  6658  005614                     u5581:
  6659  005614  EF2E  F02B         	goto	l5021
  6660  005618                     u5580:
  6661  005618  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6662  00561C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6663  005620  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6664  005624  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6665  005628  0E09               	movlw	9
  6666  00562A                     u5595:
  6667  00562A  90D8               	bcf	status,0,c
  6668  00562C  3605               	rlcf	??___fpclassifyf^0,f,c
  6669  00562E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6670  005630  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6671  005632  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6672  005634  2EE8               	decfsz	wreg,f,c
  6673  005636  EF15  F02B         	goto	u5595
  6674  00563A  5005               	movf	??___fpclassifyf^0,w,c
  6675  00563C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6676  00563E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6677  005640  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6678  005642  B4D8               	btfsc	status,2,c
  6679  005644  EF26  F02B         	goto	u5601
  6680  005648  EF29  F02B         	goto	u5600
  6681  00564C                     u5601:
  6682  00564C  0E01               	movlw	1
  6683  00564E  EF2A  F02B         	goto	u5610
  6684  005652                     u5600:
  6685  005652  0E00               	movlw	0
  6686  005654                     u5610:
  6687  005654  6E01               	movwf	?___fpclassifyf^0,c
  6688  005656  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6689  005658  EF32  F02B         	goto	l1644
  6690  00565C                     l5021:
  6691  00565C  0E00               	movlw	0
  6692  00565E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6693  005660  0E04               	movlw	4
  6694  005662  6E01               	movwf	?___fpclassifyf^0,c
  6695  005664                     l1644:
  6696  005664  0012               	return		;funcret
  6697  005666                     __end_of___fpclassifyf:
  6698                           	callstack 0
  6699                           
  6700 ;; *************** function ___fltol *****************
  6701 ;; Defined at:
  6702 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  f1              4    0[COMRAM] int 
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  exp1            1    9[COMRAM] unsigned char 
  6707 ;;  sign1           1    8[COMRAM] unsigned char 
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  4    0[COMRAM] long 
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;Total ram usage:       10 bytes
  6722 ;; Hardware stack levels used: 1
  6723 ;; This function calls:
  6724 ;;		Nothing
  6725 ;; This function is called by:
  6726 ;;		_efgtoa
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           	psect	text17
  6731  00535E                     __ptext17:
  6732                           	callstack 0
  6733  00535E                     ___fltol:
  6734                           	callstack 25
  6735  00535E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6736  005360  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6737  005362  6E0A               	movwf	___fltol@exp1^0,c
  6738  005364  500A               	movf	___fltol@exp1^0,w,c
  6739  005366  A4D8               	btfss	status,2,c
  6740  005368  EFB8  F029         	goto	u5431
  6741  00536C  EFBA  F029         	goto	u5430
  6742  005370                     u5431:
  6743  005370  EFC4  F029         	goto	l4939
  6744  005374                     u5430:
  6745  005374                     l4935:
  6746  005374  0E00               	movlw	0
  6747  005376  6E01               	movwf	?___fltol^0,c
  6748  005378  0E00               	movlw	0
  6749  00537A  6E02               	movwf	(?___fltol+1)^0,c
  6750  00537C  0E00               	movlw	0
  6751  00537E  6E03               	movwf	(?___fltol+2)^0,c
  6752  005380  0E00               	movlw	0
  6753  005382  6E04               	movwf	(?___fltol+3)^0,c
  6754  005384  EF31  F02A         	goto	l1028
  6755  005388                     l4939:
  6756  005388  C001  F005         	movff	___fltol@f1,??___fltol
  6757  00538C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6758  005390  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6759  005394  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6760  005398  0E20               	movlw	32
  6761  00539A  EFD4  F029         	goto	u5440
  6762  00539E                     u5445:
  6763  00539E  90D8               	bcf	status,0,c
  6764  0053A0  3208               	rrcf	(??___fltol+3)^0,f,c
  6765  0053A2  3207               	rrcf	(??___fltol+2)^0,f,c
  6766  0053A4  3206               	rrcf	(??___fltol+1)^0,f,c
  6767  0053A6  3205               	rrcf	??___fltol^0,f,c
  6768  0053A8                     u5440:
  6769  0053A8  2EE8               	decfsz	wreg,f,c
  6770  0053AA  EFCF  F029         	goto	u5445
  6771  0053AE  5005               	movf	??___fltol^0,w,c
  6772  0053B0  6E09               	movwf	___fltol@sign1^0,c
  6773  0053B2  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6774  0053B4  0EFF               	movlw	255
  6775  0053B6  1601               	andwf	___fltol@f1^0,f,c
  6776  0053B8  0EFF               	movlw	255
  6777  0053BA  1602               	andwf	(___fltol@f1+1)^0,f,c
  6778  0053BC  0EFF               	movlw	255
  6779  0053BE  1603               	andwf	(___fltol@f1+2)^0,f,c
  6780  0053C0  0E00               	movlw	0
  6781  0053C2  1604               	andwf	(___fltol@f1+3)^0,f,c
  6782  0053C4  0E96               	movlw	150
  6783  0053C6  5E0A               	subwf	___fltol@exp1^0,f,c
  6784  0053C8  BE0A               	btfsc	___fltol@exp1^0,7,c
  6785  0053CA  EFEB  F029         	goto	u5450
  6786  0053CE  EFE9  F029         	goto	u5451
  6787  0053D2                     u5451:
  6788  0053D2  EF01  F02A         	goto	l4959
  6789  0053D6                     u5450:
  6790  0053D6  500A               	movf	___fltol@exp1^0,w,c
  6791  0053D8  0A80               	xorlw	128
  6792  0053DA  0F97               	addlw	151
  6793  0053DC  B0D8               	btfsc	status,0,c
  6794  0053DE  EFF3  F029         	goto	u5461
  6795  0053E2  EFF5  F029         	goto	u5460
  6796  0053E6                     u5461:
  6797  0053E6  EFF7  F029         	goto	l4955
  6798  0053EA                     u5460:
  6799  0053EA  EFBA  F029         	goto	l4935
  6800  0053EE                     l4955:
  6801  0053EE  90D8               	bcf	status,0,c
  6802  0053F0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6803  0053F2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6804  0053F4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6805  0053F6  3201               	rrcf	___fltol@f1^0,f,c
  6806  0053F8  3E0A               	incfsz	___fltol@exp1^0,f,c
  6807  0053FA  EFF7  F029         	goto	l4955
  6808  0053FE  EF19  F02A         	goto	l4969
  6809  005402                     l4959:
  6810  005402  0E1F               	movlw	31
  6811  005404  640A               	cpfsgt	___fltol@exp1^0,c
  6812  005406  EF07  F02A         	goto	u5471
  6813  00540A  EF09  F02A         	goto	u5470
  6814  00540E                     u5471:
  6815  00540E  EF11  F02A         	goto	l4967
  6816  005412                     u5470:
  6817  005412  EFBA  F029         	goto	l4935
  6818  005416                     l4965:
  6819  005416  90D8               	bcf	status,0,c
  6820  005418  3601               	rlcf	___fltol@f1^0,f,c
  6821  00541A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6822  00541C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6823  00541E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6824  005420  060A               	decf	___fltol@exp1^0,f,c
  6825  005422                     l4967:
  6826  005422  500A               	movf	___fltol@exp1^0,w,c
  6827  005424  A4D8               	btfss	status,2,c
  6828  005426  EF17  F02A         	goto	u5481
  6829  00542A  EF19  F02A         	goto	u5480
  6830  00542E                     u5481:
  6831  00542E  EF0B  F02A         	goto	l4965
  6832  005432                     u5480:
  6833  005432                     l4969:
  6834  005432  5009               	movf	___fltol@sign1^0,w,c
  6835  005434  B4D8               	btfsc	status,2,c
  6836  005436  EF1F  F02A         	goto	u5491
  6837  00543A  EF21  F02A         	goto	u5490
  6838  00543E                     u5491:
  6839  00543E  EF29  F02A         	goto	l4973
  6840  005442                     u5490:
  6841  005442  1E04               	comf	(___fltol@f1+3)^0,f,c
  6842  005444  1E03               	comf	(___fltol@f1+2)^0,f,c
  6843  005446  1E02               	comf	(___fltol@f1+1)^0,f,c
  6844  005448  6C01               	negf	___fltol@f1^0,c
  6845  00544A  0E00               	movlw	0
  6846  00544C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6847  00544E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6848  005450  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6849  005452                     l4973:
  6850  005452  C001  F001         	movff	___fltol@f1,?___fltol
  6851  005456  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6852  00545A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6853  00545E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6854  005462                     l1028:
  6855  005462  0012               	return		;funcret
  6856  005464                     __end_of___fltol:
  6857                           	callstack 0
  6858                           
  6859 ;; *************** function ___flsub *****************
  6860 ;; Defined at:
  6861 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  b               4   55[COMRAM] long 
  6864 ;;  a               4   59[COMRAM] long 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  4   55[COMRAM] long 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6876 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6879 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6880 ;;Total ram usage:        8 bytes
  6881 ;; Hardware stack levels used: 1
  6882 ;; Hardware stack levels required when called: 1
  6883 ;; This function calls:
  6884 ;;		___fladd
  6885 ;; This function is called by:
  6886 ;;		_efgtoa
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text18
  6891  00612A                     __ptext18:
  6892                           	callstack 0
  6893  00612A                     ___flsub:
  6894                           	callstack 24
  6895  00612A  0E00               	movlw	0
  6896  00612C  1A3C               	xorwf	___flsub@a^0,f,c
  6897  00612E  0E00               	movlw	0
  6898  006130  1A3D               	xorwf	(___flsub@a+1)^0,f,c
  6899  006132  0E00               	movlw	0
  6900  006134  1A3E               	xorwf	(___flsub@a+2)^0,f,c
  6901  006136  0E80               	movlw	128
  6902  006138  1A3F               	xorwf	(___flsub@a+3)^0,f,c
  6903  00613A  C038  F028         	movff	___flsub@b,___fladd@b
  6904  00613E  C039  F029         	movff	___flsub@b+1,___fladd@b+1
  6905  006142  C03A  F02A         	movff	___flsub@b+2,___fladd@b+2
  6906  006146  C03B  F02B         	movff	___flsub@b+3,___fladd@b+3
  6907  00614A  C03C  F02C         	movff	___flsub@a,___fladd@a
  6908  00614E  C03D  F02D         	movff	___flsub@a+1,___fladd@a+1
  6909  006152  C03E  F02E         	movff	___flsub@a+2,___fladd@a+2
  6910  006156  C03F  F02F         	movff	___flsub@a+3,___fladd@a+3
  6911  00615A  ECB3  F018         	call	___fladd	;wreg free
  6912  00615E  C028  F038         	movff	?___fladd,?___flsub
  6913  006162  C029  F039         	movff	?___fladd+1,?___flsub+1
  6914  006166  C02A  F03A         	movff	?___fladd+2,?___flsub+2
  6915  00616A  C02B  F03B         	movff	?___fladd+3,?___flsub+3
  6916  00616E  0012               	return		;funcret
  6917  006170                     __end_of___flsub:
  6918                           	callstack 0
  6919                           
  6920 ;; *************** function ___flneg *****************
  6921 ;; Defined at:
  6922 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;  f1              4    0[COMRAM] long 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;		None
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  4    0[COMRAM] long 
  6929 ;; Registers used:
  6930 ;;		wreg, status,2, status,0
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6939 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6940 ;;Total ram usage:        4 bytes
  6941 ;; Hardware stack levels used: 1
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		_efgtoa
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text19
  6950  0062E4                     __ptext19:
  6951                           	callstack 0
  6952  0062E4                     ___flneg:
  6953                           	callstack 25
  6954  0062E4  5001               	movf	___flneg@f1^0,w,c
  6955  0062E6  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6956  0062E8  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6957  0062EA  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6958  0062EC  B4D8               	btfsc	status,2,c
  6959  0062EE  EF7B  F031         	goto	u5421
  6960  0062F2  EF7D  F031         	goto	u5420
  6961  0062F6                     u5421:
  6962  0062F6  EF85  F031         	goto	l4929
  6963  0062FA                     u5420:
  6964  0062FA  0E00               	movlw	0
  6965  0062FC  1A01               	xorwf	___flneg@f1^0,f,c
  6966  0062FE  0E00               	movlw	0
  6967  006300  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6968  006302  0E00               	movlw	0
  6969  006304  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6970  006306  0E80               	movlw	128
  6971  006308  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6972  00630A                     l4929:
  6973  00630A  C001  F001         	movff	___flneg@f1,?___flneg
  6974  00630E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6975  006312  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6976  006316  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6977  00631A  0012               	return		;funcret
  6978  00631C                     __end_of___flneg:
  6979                           	callstack 0
  6980                           
  6981 ;; *************** function ___fleq *****************
  6982 ;; Defined at:
  6983 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;  ff1             4    0[COMRAM] long 
  6986 ;;  ff2             4    4[COMRAM] long 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;		None               void
  6991 ;; Registers used:
  6992 ;;		wreg, status,2, status,0
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6998 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;Total ram usage:       12 bytes
  7003 ;; Hardware stack levels used: 1
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_efgtoa
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text20
  7012  005A4C                     __ptext20:
  7013                           	callstack 0
  7014  005A4C                     ___fleq:
  7015                           	callstack 25
  7016  005A4C  0E00               	movlw	0
  7017  005A4E  1401               	andwf	___fleq@ff1^0,w,c
  7018  005A50  6E09               	movwf	??___fleq^0,c
  7019  005A52  0E00               	movlw	0
  7020  005A54  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7021  005A56  6E0A               	movwf	(??___fleq+1)^0,c
  7022  005A58  0E80               	movlw	128
  7023  005A5A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7024  005A5C  6E0B               	movwf	(??___fleq+2)^0,c
  7025  005A5E  0E7F               	movlw	127
  7026  005A60  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7027  005A62  6E0C               	movwf	(??___fleq+3)^0,c
  7028  005A64  5009               	movf	??___fleq^0,w,c
  7029  005A66  100A               	iorwf	(??___fleq+1)^0,w,c
  7030  005A68  100B               	iorwf	(??___fleq+2)^0,w,c
  7031  005A6A  100C               	iorwf	(??___fleq+3)^0,w,c
  7032  005A6C  A4D8               	btfss	status,2,c
  7033  005A6E  EF3B  F02D         	goto	u5341
  7034  005A72  EF3D  F02D         	goto	u5340
  7035  005A76                     u5341:
  7036  005A76  EF45  F02D         	goto	l4891
  7037  005A7A                     u5340:
  7038  005A7A  0E00               	movlw	0
  7039  005A7C  6E01               	movwf	___fleq@ff1^0,c
  7040  005A7E  0E00               	movlw	0
  7041  005A80  6E02               	movwf	(___fleq@ff1+1)^0,c
  7042  005A82  0E00               	movlw	0
  7043  005A84  6E03               	movwf	(___fleq@ff1+2)^0,c
  7044  005A86  0E00               	movlw	0
  7045  005A88  6E04               	movwf	(___fleq@ff1+3)^0,c
  7046  005A8A                     l4891:
  7047  005A8A  0E00               	movlw	0
  7048  005A8C  1405               	andwf	___fleq@ff2^0,w,c
  7049  005A8E  6E09               	movwf	??___fleq^0,c
  7050  005A90  0E00               	movlw	0
  7051  005A92  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7052  005A94  6E0A               	movwf	(??___fleq+1)^0,c
  7053  005A96  0E80               	movlw	128
  7054  005A98  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7055  005A9A  6E0B               	movwf	(??___fleq+2)^0,c
  7056  005A9C  0E7F               	movlw	127
  7057  005A9E  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7058  005AA0  6E0C               	movwf	(??___fleq+3)^0,c
  7059  005AA2  5009               	movf	??___fleq^0,w,c
  7060  005AA4  100A               	iorwf	(??___fleq+1)^0,w,c
  7061  005AA6  100B               	iorwf	(??___fleq+2)^0,w,c
  7062  005AA8  100C               	iorwf	(??___fleq+3)^0,w,c
  7063  005AAA  A4D8               	btfss	status,2,c
  7064  005AAC  EF5A  F02D         	goto	u5351
  7065  005AB0  EF5C  F02D         	goto	u5350
  7066  005AB4                     u5351:
  7067  005AB4  EF64  F02D         	goto	l4895
  7068  005AB8                     u5350:
  7069  005AB8  0E00               	movlw	0
  7070  005ABA  6E05               	movwf	___fleq@ff2^0,c
  7071  005ABC  0E00               	movlw	0
  7072  005ABE  6E06               	movwf	(___fleq@ff2+1)^0,c
  7073  005AC0  0E00               	movlw	0
  7074  005AC2  6E07               	movwf	(___fleq@ff2+2)^0,c
  7075  005AC4  0E00               	movlw	0
  7076  005AC6  6E08               	movwf	(___fleq@ff2+3)^0,c
  7077  005AC8                     l4895:
  7078  005AC8  5005               	movf	___fleq@ff2^0,w,c
  7079  005ACA  1801               	xorwf	___fleq@ff1^0,w,c
  7080  005ACC  E10F               	bnz	u5360
  7081  005ACE  5006               	movf	(___fleq@ff2+1)^0,w,c
  7082  005AD0  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7083  005AD2  E10C               	bnz	u5360
  7084  005AD4  5007               	movf	(___fleq@ff2+2)^0,w,c
  7085  005AD6  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7086  005AD8  E109               	bnz	u5360
  7087  005ADA  5008               	movf	(___fleq@ff2+3)^0,w,c
  7088  005ADC  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7089  005ADE  B4D8               	btfsc	status,2,c
  7090  005AE0  EF74  F02D         	goto	u5361
  7091  005AE4  EF76  F02D         	goto	u5360
  7092  005AE8                     u5361:
  7093  005AE8  EF79  F02D         	goto	l4899
  7094  005AEC                     u5360:
  7095  005AEC  90D8               	bcf	status,0,c
  7096  005AEE  EF7A  F02D         	goto	l990
  7097  005AF2                     l4899:
  7098  005AF2  80D8               	bsf	status,0,c
  7099  005AF4                     l990:
  7100  005AF4  0012               	return		;funcret
  7101  005AF6                     __end_of___fleq:
  7102                           	callstack 0
  7103                           
  7104 ;; *************** function ___awmod *****************
  7105 ;; Defined at:
  7106 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  dividend        2    0[COMRAM] int 
  7109 ;;  divisor         2    2[COMRAM] int 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  sign            1    5[COMRAM] unsigned char 
  7112 ;;  counter         1    4[COMRAM] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  2    0[COMRAM] int 
  7115 ;; Registers used:
  7116 ;;		wreg, status,2, status,0
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7126 ;;Total ram usage:        6 bytes
  7127 ;; Hardware stack levels used: 1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_efgtoa
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text21
  7136  00599C                     __ptext21:
  7137                           	callstack 0
  7138  00599C                     ___awmod:
  7139                           	callstack 25
  7140  00599C  0E00               	movlw	0
  7141  00599E  6E06               	movwf	___awmod@sign^0,c
  7142  0059A0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7143  0059A2  EFD7  F02C         	goto	u5280
  7144  0059A6  EFD5  F02C         	goto	u5281
  7145  0059AA                     u5281:
  7146  0059AA  EFDD  F02C         	goto	l4859
  7147  0059AE                     u5280:
  7148  0059AE  6C01               	negf	___awmod@dividend^0,c
  7149  0059B0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7150  0059B2  B0D8               	btfsc	status,0,c
  7151  0059B4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7152  0059B6  0E01               	movlw	1
  7153  0059B8  6E06               	movwf	___awmod@sign^0,c
  7154  0059BA                     l4859:
  7155  0059BA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7156  0059BC  EFE4  F02C         	goto	u5290
  7157  0059C0  EFE2  F02C         	goto	u5291
  7158  0059C4                     u5291:
  7159  0059C4  EFE8  F02C         	goto	l4863
  7160  0059C8                     u5290:
  7161  0059C8  6C03               	negf	___awmod@divisor^0,c
  7162  0059CA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7163  0059CC  B0D8               	btfsc	status,0,c
  7164  0059CE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7165  0059D0                     l4863:
  7166  0059D0  5003               	movf	___awmod@divisor^0,w,c
  7167  0059D2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7168  0059D4  B4D8               	btfsc	status,2,c
  7169  0059D6  EFEF  F02C         	goto	u5301
  7170  0059DA  EFF1  F02C         	goto	u5300
  7171  0059DE                     u5301:
  7172  0059DE  EF15  F02D         	goto	l4879
  7173  0059E2                     u5300:
  7174  0059E2  0E01               	movlw	1
  7175  0059E4  6E05               	movwf	___awmod@counter^0,c
  7176  0059E6  EFF9  F02C         	goto	l4869
  7177  0059EA                     l4867:
  7178  0059EA  90D8               	bcf	status,0,c
  7179  0059EC  3603               	rlcf	___awmod@divisor^0,f,c
  7180  0059EE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7181  0059F0  2A05               	incf	___awmod@counter^0,f,c
  7182  0059F2                     l4869:
  7183  0059F2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7184  0059F4  EFFE  F02C         	goto	u5311
  7185  0059F8  EF00  F02D         	goto	u5310
  7186  0059FC                     u5311:
  7187  0059FC  EFF5  F02C         	goto	l4867
  7188  005A00                     u5310:
  7189  005A00                     l4871:
  7190  005A00  5003               	movf	___awmod@divisor^0,w,c
  7191  005A02  5C01               	subwf	___awmod@dividend^0,w,c
  7192  005A04  5004               	movf	(___awmod@divisor+1)^0,w,c
  7193  005A06  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7194  005A08  A0D8               	btfss	status,0,c
  7195  005A0A  EF09  F02D         	goto	u5321
  7196  005A0E  EF0B  F02D         	goto	u5320
  7197  005A12                     u5321:
  7198  005A12  EF0F  F02D         	goto	l4875
  7199  005A16                     u5320:
  7200  005A16  5003               	movf	___awmod@divisor^0,w,c
  7201  005A18  5E01               	subwf	___awmod@dividend^0,f,c
  7202  005A1A  5004               	movf	(___awmod@divisor+1)^0,w,c
  7203  005A1C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7204  005A1E                     l4875:
  7205  005A1E  90D8               	bcf	status,0,c
  7206  005A20  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7207  005A22  3203               	rrcf	___awmod@divisor^0,f,c
  7208  005A24  2E05               	decfsz	___awmod@counter^0,f,c
  7209  005A26  EF00  F02D         	goto	l4871
  7210  005A2A                     l4879:
  7211  005A2A  5006               	movf	___awmod@sign^0,w,c
  7212  005A2C  B4D8               	btfsc	status,2,c
  7213  005A2E  EF1B  F02D         	goto	u5331
  7214  005A32  EF1D  F02D         	goto	u5330
  7215  005A36                     u5331:
  7216  005A36  EF21  F02D         	goto	l4883
  7217  005A3A                     u5330:
  7218  005A3A  6C01               	negf	___awmod@dividend^0,c
  7219  005A3C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7220  005A3E  B0D8               	btfsc	status,0,c
  7221  005A40  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7222  005A42                     l4883:
  7223  005A42  C001  F001         	movff	___awmod@dividend,?___awmod
  7224  005A46  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7225  005A4A  0012               	return		;funcret
  7226  005A4C                     __end_of___awmod:
  7227                           	callstack 0
  7228                           
  7229 ;; *************** function _dtoa *****************
  7230 ;; Defined at:
  7231 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7234 ;;		 -> sprintf@f(6), 
  7235 ;;  d               8   29[COMRAM] long long 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  n               8   53[COMRAM] long long 
  7238 ;;  i               2   61[COMRAM] int 
  7239 ;;  s               2   51[COMRAM] int 
  7240 ;;  w               2   49[COMRAM] int 
  7241 ;;  p               2   47[COMRAM] int 
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  2   27[COMRAM] int 
  7244 ;; Registers used:
  7245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7251 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7252 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7253 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7254 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7255 ;;Total ram usage:       36 bytes
  7256 ;; Hardware stack levels used: 1
  7257 ;; Hardware stack levels required when called: 4
  7258 ;; This function calls:
  7259 ;;		___aodiv
  7260 ;;		___aomod
  7261 ;;		_abs
  7262 ;;		_pad
  7263 ;; This function is called by:
  7264 ;;		_vfpfcnvrt
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           	psect	text22
  7269  003DEA                     __ptext22:
  7270                           	callstack 0
  7271  003DEA                     _dtoa:
  7272                           	callstack 22
  7273  003DEA                     
  7274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7275  003DEA  C01E  F036         	movff	dtoa@d,dtoa@n
  7276  003DEE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7277  003DF2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7278  003DF6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7279  003DFA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7280  003DFE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7281  003E02  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7282  003E06  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7283  003E0A                     
  7284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7285  003E0A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7286  003E0C  EF0A  F01F         	goto	u5831
  7287  003E10  EF0D  F01F         	goto	u5830
  7288  003E14                     u5831:
  7289  003E14  0E01               	movlw	1
  7290  003E16  EF0E  F01F         	goto	u5840
  7291  003E1A                     u5830:
  7292  003E1A  0E00               	movlw	0
  7293  003E1C                     u5840:
  7294  003E1C  6E34               	movwf	dtoa@s^0,c
  7295  003E1E  6A35               	clrf	(dtoa@s+1)^0,c
  7296                           
  7297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7298  003E20  5034               	movf	dtoa@s^0,w,c
  7299  003E22  1035               	iorwf	(dtoa@s+1)^0,w,c
  7300  003E24  B4D8               	btfsc	status,2,c
  7301  003E26  EF17  F01F         	goto	u5851
  7302  003E2A  EF19  F01F         	goto	u5850
  7303  003E2E                     u5851:
  7304  003E2E  EF29  F01F         	goto	l5119
  7305  003E32                     u5850:
  7306  003E32                     
  7307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7308  003E32  1E3D               	comf	(dtoa@n+7)^0,f,c
  7309  003E34  1E3C               	comf	(dtoa@n+6)^0,f,c
  7310  003E36  1E3B               	comf	(dtoa@n+5)^0,f,c
  7311  003E38  1E3A               	comf	(dtoa@n+4)^0,f,c
  7312  003E3A  1E39               	comf	(dtoa@n+3)^0,f,c
  7313  003E3C  1E38               	comf	(dtoa@n+2)^0,f,c
  7314  003E3E  1E37               	comf	(dtoa@n+1)^0,f,c
  7315  003E40  6C36               	negf	dtoa@n^0,c
  7316  003E42  0E00               	movlw	0
  7317  003E44  2237               	addwfc	(dtoa@n+1)^0,f,c
  7318  003E46  2238               	addwfc	(dtoa@n+2)^0,f,c
  7319  003E48  2239               	addwfc	(dtoa@n+3)^0,f,c
  7320  003E4A  223A               	addwfc	(dtoa@n+4)^0,f,c
  7321  003E4C  223B               	addwfc	(dtoa@n+5)^0,f,c
  7322  003E4E  223C               	addwfc	(dtoa@n+6)^0,f,c
  7323  003E50  223D               	addwfc	(dtoa@n+7)^0,f,c
  7324  003E52                     l5119:
  7325                           
  7326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7327  003E52  0100               	movlb	0	; () banked
  7328  003E54  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  7329  003E56  EF2F  F01F         	goto	u5861
  7330  003E5A  EF31  F01F         	goto	u5860
  7331  003E5E                     u5861:
  7332  003E5E  EF32  F01F         	goto	l5123
  7333  003E62                     u5860:
  7334  003E62                     
  7335                           ; BSR set to: 0
  7336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7337  003E62  93F2               	bcf	_flags& (0+255),1,b
  7338  003E64                     l5123:
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7342  003E64  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  7343  003E66  EF3F  F01F         	goto	u5870
  7344  003E6A  51F1               	movf	(_prec+1)& (0+255),w,b
  7345  003E6C  E106               	bnz	u5871
  7346  003E6E  05F0               	decf	_prec& (0+255),w,b
  7347  003E70  B0D8               	btfsc	status,0,c
  7348  003E72  EF3D  F01F         	goto	u5871
  7349  003E76  EF3F  F01F         	goto	u5870
  7350  003E7A                     u5871:
  7351  003E7A  EF45  F01F         	goto	l1463
  7352  003E7E                     u5870:
  7353  003E7E                     
  7354                           ; BSR set to: 0
  7355  003E7E  0E00               	movlw	0
  7356  003E80  6E31               	movwf	(dtoa@p+1)^0,c
  7357  003E82  0E01               	movlw	1
  7358  003E84  6E30               	movwf	dtoa@p^0,c
  7359  003E86  EF49  F01F         	goto	l1465
  7360  003E8A                     l1463:
  7361                           
  7362                           ; BSR set to: 0
  7363  003E8A  C0F0  F030         	movff	_prec,dtoa@p
  7364  003E8E  C0F1  F031         	movff	_prec+1,dtoa@p+1
  7365  003E92                     l1465:
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7369  003E92  C0EE  F032         	movff	_width,dtoa@w
  7370  003E96  C0EF  F033         	movff	_width+1,dtoa@w+1
  7371  003E9A                     
  7372                           ; BSR set to: 0
  7373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7374  003E9A  5034               	movf	dtoa@s^0,w,c
  7375  003E9C  1035               	iorwf	(dtoa@s+1)^0,w,c
  7376  003E9E  A4D8               	btfss	status,2,c
  7377  003EA0  EF54  F01F         	goto	u5881
  7378  003EA4  EF56  F01F         	goto	u5880
  7379  003EA8                     u5881:
  7380  003EA8  EF5D  F01F         	goto	l5131
  7381  003EAC                     u5880:
  7382  003EAC                     
  7383                           ; BSR set to: 0
  7384  003EAC  A5F2               	btfss	_flags& (0+255),2,b
  7385  003EAE  EF5B  F01F         	goto	u5891
  7386  003EB2  EF5D  F01F         	goto	u5890
  7387  003EB6                     u5891:
  7388  003EB6  EF60  F01F         	goto	l5133
  7389  003EBA                     u5890:
  7390  003EBA                     l5131:
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7394  003EBA  0632               	decf	dtoa@w^0,f,c
  7395  003EBC  A0D8               	btfss	status,0,c
  7396  003EBE  0633               	decf	(dtoa@w+1)^0,f,c
  7397  003EC0                     l5133:
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7401  003EC0  0E00               	movlw	0
  7402  003EC2  6E3F               	movwf	(dtoa@i+1)^0,c
  7403  003EC4  0E4F               	movlw	79
  7404  003EC6  6E3E               	movwf	dtoa@i^0,c
  7405  003EC8                     
  7406                           ; BSR set to: 0
  7407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7408  003EC8  0E00               	movlw	0
  7409  003ECA  0101               	movlb	1	; () banked
  7410  003ECC  6FAB               	movwf	(_dbuf+79)& (0+255),b
  7411                           
  7412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7413  003ECE  EFE5  F01F         	goto	l5147
  7414  003ED2                     l5137:
  7415                           
  7416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7417  003ED2  063E               	decf	dtoa@i^0,f,c
  7418  003ED4  A0D8               	btfss	status,0,c
  7419  003ED6  063F               	decf	(dtoa@i+1)^0,f,c
  7420  003ED8                     
  7421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7422  003ED8  0E5C               	movlw	low _dbuf
  7423  003EDA  243E               	addwf	dtoa@i^0,w,c
  7424  003EDC  6ED9               	movwf	fsr2l,c
  7425  003EDE  0E01               	movlw	high _dbuf
  7426  003EE0  203F               	addwfc	(dtoa@i+1)^0,w,c
  7427  003EE2  6EDA               	movwf	fsr2h,c
  7428  003EE4  C036  F001         	movff	dtoa@n,___aomod@dividend
  7429  003EE8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7430  003EEC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7431  003EF0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7432  003EF4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7433  003EF8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7434  003EFC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7435  003F00  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7436  003F04  0E0A               	movlw	10
  7437  003F06  6E09               	movwf	___aomod@divisor^0,c
  7438  003F08  0E00               	movlw	0
  7439  003F0A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7440  003F0C  0E00               	movlw	0
  7441  003F0E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7442  003F10  0E00               	movlw	0
  7443  003F12  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7444  003F14  0E00               	movlw	0
  7445  003F16  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7446  003F18  0E00               	movlw	0
  7447  003F1A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7448  003F1C  0E00               	movlw	0
  7449  003F1E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7450  003F20  0E00               	movlw	0
  7451  003F22  6E10               	movwf	(___aomod@divisor+7)^0,c
  7452  003F24  EC2A  F027         	call	___aomod	;wreg free
  7453  003F28  C001  F026         	movff	?___aomod,??_dtoa
  7454  003F2C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7455  003F30  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7456  003F34  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7457  003F38  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7458  003F3C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7459  003F40  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7460  003F44  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7461  003F48  C026  F013         	movff	??_dtoa,abs@a
  7462  003F4C  C028  F014         	movff	??_dtoa+2,abs@a+1
  7463  003F50  ECFB  F030         	call	_abs	;wreg free
  7464  003F54  5013               	movf	?_abs^0,w,c
  7465  003F56  0F30               	addlw	48
  7466  003F58  6EDF               	movwf	indf2,c
  7467  003F5A                     
  7468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7469  003F5A  0630               	decf	dtoa@p^0,f,c
  7470  003F5C  A0D8               	btfss	status,0,c
  7471  003F5E  0631               	decf	(dtoa@p+1)^0,f,c
  7472  003F60                     
  7473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7474  003F60  0632               	decf	dtoa@w^0,f,c
  7475  003F62  A0D8               	btfss	status,0,c
  7476  003F64  0633               	decf	(dtoa@w+1)^0,f,c
  7477  003F66                     
  7478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7479  003F66  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7480  003F6A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7481  003F6E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7482  003F72  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7483  003F76  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7484  003F7A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7485  003F7E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7486  003F82  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7487  003F86  0E0A               	movlw	10
  7488  003F88  6E09               	movwf	___aodiv@divisor^0,c
  7489  003F8A  0E00               	movlw	0
  7490  003F8C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7491  003F8E  0E00               	movlw	0
  7492  003F90  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7493  003F92  0E00               	movlw	0
  7494  003F94  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7495  003F96  0E00               	movlw	0
  7496  003F98  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7497  003F9A  0E00               	movlw	0
  7498  003F9C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7499  003F9E  0E00               	movlw	0
  7500  003FA0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7501  003FA2  0E00               	movlw	0
  7502  003FA4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7503  003FA6  ECAB  F025         	call	___aodiv	;wreg free
  7504  003FAA  C001  F036         	movff	?___aodiv,dtoa@n
  7505  003FAE  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7506  003FB2  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7507  003FB6  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7508  003FBA  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7509  003FBE  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7510  003FC2  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7511  003FC6  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7512  003FCA                     l5147:
  7513                           
  7514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7515  003FCA  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7516  003FCC  EFF0  F01F         	goto	u5901
  7517  003FD0  503F               	movf	(dtoa@i+1)^0,w,c
  7518  003FD2  E108               	bnz	u5900
  7519  003FD4  043E               	decf	dtoa@i^0,w,c
  7520  003FD6  A0D8               	btfss	status,0,c
  7521  003FD8  EFF0  F01F         	goto	u5901
  7522  003FDC  EFF2  F01F         	goto	u5900
  7523  003FE0                     u5901:
  7524  003FE0  EF23  F020         	goto	l5157
  7525  003FE4                     u5900:
  7526  003FE4  5036               	movf	dtoa@n^0,w,c
  7527  003FE6  1037               	iorwf	(dtoa@n+1)^0,w,c
  7528  003FE8  1038               	iorwf	(dtoa@n+2)^0,w,c
  7529  003FEA  1039               	iorwf	(dtoa@n+3)^0,w,c
  7530  003FEC  103A               	iorwf	(dtoa@n+4)^0,w,c
  7531  003FEE  103B               	iorwf	(dtoa@n+5)^0,w,c
  7532  003FF0  103C               	iorwf	(dtoa@n+6)^0,w,c
  7533  003FF2  103D               	iorwf	(dtoa@n+7)^0,w,c
  7534  003FF4  A4D8               	btfss	status,2,c
  7535  003FF6  EFFF  F01F         	goto	u5911
  7536  003FFA  EF01  F020         	goto	u5910
  7537  003FFE                     u5911:
  7538  003FFE  EF69  F01F         	goto	l5137
  7539  004002                     u5910:
  7540  004002  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7541  004004  EF0E  F020         	goto	u5920
  7542  004008  5031               	movf	(dtoa@p+1)^0,w,c
  7543  00400A  E106               	bnz	u5921
  7544  00400C  0430               	decf	dtoa@p^0,w,c
  7545  00400E  B0D8               	btfsc	status,0,c
  7546  004010  EF0C  F020         	goto	u5921
  7547  004014  EF0E  F020         	goto	u5920
  7548  004018                     u5921:
  7549  004018  EF69  F01F         	goto	l5137
  7550  00401C                     u5920:
  7551  00401C  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7552  00401E  EF19  F020         	goto	u5931
  7553  004022  5033               	movf	(dtoa@w+1)^0,w,c
  7554  004024  E108               	bnz	u5930
  7555  004026  0432               	decf	dtoa@w^0,w,c
  7556  004028  A0D8               	btfss	status,0,c
  7557  00402A  EF19  F020         	goto	u5931
  7558  00402E  EF1B  F020         	goto	u5930
  7559  004032                     u5931:
  7560  004032  EF23  F020         	goto	l5157
  7561  004036                     u5930:
  7562  004036  0100               	movlb	0	; () banked
  7563  004038  B3F2               	btfsc	_flags& (0+255),1,b
  7564  00403A  EF21  F020         	goto	u5941
  7565  00403E  EF23  F020         	goto	u5940
  7566  004042                     u5941:
  7567  004042  EF69  F01F         	goto	l5137
  7568  004046                     u5940:
  7569  004046                     l5157:
  7570                           
  7571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7572  004046  5034               	movf	dtoa@s^0,w,c
  7573  004048  1035               	iorwf	(dtoa@s+1)^0,w,c
  7574  00404A  A4D8               	btfss	status,2,c
  7575  00404C  EF2A  F020         	goto	u5951
  7576  004050  EF2C  F020         	goto	u5950
  7577  004054                     u5951:
  7578  004054  EF34  F020         	goto	l5161
  7579  004058                     u5950:
  7580  004058  0100               	movlb	0	; () banked
  7581  00405A  A5F2               	btfss	_flags& (0+255),2,b
  7582  00405C  EF32  F020         	goto	u5961
  7583  004060  EF34  F020         	goto	u5960
  7584  004064                     u5961:
  7585  004064  EF52  F020         	goto	l5171
  7586  004068                     u5960:
  7587  004068                     l5161:
  7588                           
  7589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7590  004068  063E               	decf	dtoa@i^0,f,c
  7591  00406A  A0D8               	btfss	status,0,c
  7592  00406C  063F               	decf	(dtoa@i+1)^0,f,c
  7593  00406E                     
  7594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7595  00406E  5034               	movf	dtoa@s^0,w,c
  7596  004070  1035               	iorwf	(dtoa@s+1)^0,w,c
  7597  004072  A4D8               	btfss	status,2,c
  7598  004074  EF3E  F020         	goto	u5971
  7599  004078  EF40  F020         	goto	u5970
  7600  00407C                     u5971:
  7601  00407C  EF46  F020         	goto	l5167
  7602  004080                     u5970:
  7603  004080  0E00               	movlw	0
  7604  004082  6E2F               	movwf	(_dtoa$3026+1)^0,c
  7605  004084  0E2B               	movlw	43
  7606  004086  6E2E               	movwf	_dtoa$3026^0,c
  7607  004088  EF4A  F020         	goto	l5169
  7608  00408C                     l5167:
  7609  00408C  0E00               	movlw	0
  7610  00408E  6E2F               	movwf	(_dtoa$3026+1)^0,c
  7611  004090  0E2D               	movlw	45
  7612  004092  6E2E               	movwf	_dtoa$3026^0,c
  7613  004094                     l5169:
  7614  004094  0E5C               	movlw	low _dbuf
  7615  004096  243E               	addwf	dtoa@i^0,w,c
  7616  004098  6ED9               	movwf	fsr2l,c
  7617  00409A  0E01               	movlw	high _dbuf
  7618  00409C  203F               	addwfc	(dtoa@i+1)^0,w,c
  7619  00409E  6EDA               	movwf	fsr2h,c
  7620  0040A0  C02E  FFDF         	movff	_dtoa$3026,indf2
  7621  0040A4                     l5171:
  7622                           
  7623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7624  0040A4  C01C  F011         	movff	dtoa@fp,pad@fp
  7625  0040A8  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7626  0040AC  0E5C               	movlw	low _dbuf
  7627  0040AE  243E               	addwf	dtoa@i^0,w,c
  7628  0040B0  6E13               	movwf	pad@buf^0,c
  7629  0040B2  0E01               	movlw	high _dbuf
  7630  0040B4  203F               	addwfc	(dtoa@i+1)^0,w,c
  7631  0040B6  6E14               	movwf	(pad@buf+1)^0,c
  7632  0040B8  C032  F015         	movff	dtoa@w,pad@p
  7633  0040BC  C033  F016         	movff	dtoa@w+1,pad@p+1
  7634  0040C0  EC09  F02C         	call	_pad	;wreg free
  7635  0040C4  C011  F01C         	movff	?_pad,?_dtoa
  7636  0040C8  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7637  0040CC  0012               	return		;funcret
  7638  0040CE                     __end_of_dtoa:
  7639                           	callstack 0
  7640                           
  7641 ;; *************** function _pad *****************
  7642 ;; Defined at:
  7643 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7646 ;;		 -> sprintf@f(6), 
  7647 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7648 ;;		 -> dbuf(80), 
  7649 ;;  p               2   20[COMRAM] int 
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;  w               2   25[COMRAM] int 
  7652 ;;  i               2   23[COMRAM] int 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  2   16[COMRAM] int 
  7655 ;; Registers used:
  7656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7662 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7663 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7665 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;Total ram usage:       11 bytes
  7667 ;; Hardware stack levels used: 1
  7668 ;; Hardware stack levels required when called: 3
  7669 ;; This function calls:
  7670 ;;		_fputc
  7671 ;;		_fputs
  7672 ;;		_strlen
  7673 ;; This function is called by:
  7674 ;;		_dtoa
  7675 ;;		_efgtoa
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text23
  7680  005812                     __ptext23:
  7681                           	callstack 0
  7682  005812                     _pad:
  7683                           	callstack 22
  7684  005812                     
  7685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7686  005812  0100               	movlb	0	; () banked
  7687  005814  A1F2               	btfss	_flags& (0+255),0,b
  7688  005816  EF0F  F02C         	goto	u5501
  7689  00581A  EF11  F02C         	goto	u5500
  7690  00581E                     u5501:
  7691  00581E  EF1B  F02C         	goto	l4981
  7692  005822                     u5500:
  7693  005822                     
  7694                           ; BSR set to: 0
  7695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7696  005822  C013  F00A         	movff	pad@buf,fputs@s
  7697  005826  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7698  00582A  C011  F00C         	movff	pad@fp,fputs@fp
  7699  00582E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7700  005832  ECB8  F030         	call	_fputs	;wreg free
  7701  005836                     l4981:
  7702                           
  7703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7704  005836  BE16               	btfsc	(pad@p+1)^0,7,c
  7705  005838  EF20  F02C         	goto	u5511
  7706  00583C  EF22  F02C         	goto	u5510
  7707  005840                     u5511:
  7708  005840  EF28  F02C         	goto	l4985
  7709  005844                     u5510:
  7710  005844  C015  F01A         	movff	pad@p,pad@w
  7711  005848  C016  F01B         	movff	pad@p+1,pad@w+1
  7712  00584C  EF2C  F02C         	goto	l1452
  7713  005850                     l4985:
  7714  005850  0E00               	movlw	0
  7715  005852  6E1B               	movwf	(pad@w+1)^0,c
  7716  005854  0E00               	movlw	0
  7717  005856  6E1A               	movwf	pad@w^0,c
  7718  005858                     l1452:
  7719                           
  7720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7721  005858  0E00               	movlw	0
  7722  00585A  6E19               	movwf	(pad@i+1)^0,c
  7723  00585C  0E00               	movlw	0
  7724  00585E  6E18               	movwf	pad@i^0,c
  7725                           
  7726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7727  005860  EF3E  F02C         	goto	l4991
  7728  005864                     l4987:
  7729                           
  7730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7731  005864  0E00               	movlw	0
  7732  005866  6E02               	movwf	(fputc@c+1)^0,c
  7733  005868  0E20               	movlw	32
  7734  00586A  6E01               	movwf	fputc@c^0,c
  7735  00586C  C011  F003         	movff	pad@fp,fputc@fp
  7736  005870  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7737  005874  ECA4  F02B         	call	_fputc	;wreg free
  7738  005878                     
  7739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7740  005878  4A18               	infsnz	pad@i^0,f,c
  7741  00587A  2A19               	incf	(pad@i+1)^0,f,c
  7742  00587C                     l4991:
  7743                           
  7744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7745  00587C  501A               	movf	pad@w^0,w,c
  7746  00587E  5C18               	subwf	pad@i^0,w,c
  7747  005880  5019               	movf	(pad@i+1)^0,w,c
  7748  005882  0A80               	xorlw	128
  7749  005884  6E17               	movwf	??_pad^0,c
  7750  005886  501B               	movf	(pad@w+1)^0,w,c
  7751  005888  0A80               	xorlw	128
  7752  00588A  5817               	subwfb	??_pad^0,w,c
  7753  00588C  A0D8               	btfss	status,0,c
  7754  00588E  EF4B  F02C         	goto	u5521
  7755  005892  EF4D  F02C         	goto	u5520
  7756  005896                     u5521:
  7757  005896  EF32  F02C         	goto	l4987
  7758  00589A                     u5520:
  7759  00589A                     
  7760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7761  00589A  0100               	movlb	0	; () banked
  7762  00589C  B1F2               	btfsc	_flags& (0+255),0,b
  7763  00589E  EF53  F02C         	goto	u5531
  7764  0058A2  EF55  F02C         	goto	u5530
  7765  0058A6                     u5531:
  7766  0058A6  EF5F  F02C         	goto	l4995
  7767  0058AA                     u5530:
  7768  0058AA                     
  7769                           ; BSR set to: 0
  7770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7771  0058AA  C013  F00A         	movff	pad@buf,fputs@s
  7772  0058AE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7773  0058B2  C011  F00C         	movff	pad@fp,fputs@fp
  7774  0058B6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7775  0058BA  ECB8  F030         	call	_fputs	;wreg free
  7776  0058BE                     l4995:
  7777                           
  7778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7779  0058BE  C013  F001         	movff	pad@buf,strlen@s
  7780  0058C2  C014  F002         	movff	pad@buf+1,strlen@s+1
  7781  0058C6  EC55  F02F         	call	_strlen	;wreg free
  7782  0058CA  501A               	movf	pad@w^0,w,c
  7783  0058CC  2401               	addwf	?_strlen^0,w,c
  7784  0058CE  6E11               	movwf	?_pad^0,c
  7785  0058D0  501B               	movf	(pad@w+1)^0,w,c
  7786  0058D2  2002               	addwfc	(?_strlen+1)^0,w,c
  7787  0058D4  6E12               	movwf	(?_pad+1)^0,c
  7788  0058D6  0012               	return		;funcret
  7789  0058D8                     __end_of_pad:
  7790                           	callstack 0
  7791                           
  7792 ;; *************** function _strlen *****************
  7793 ;; Defined at:
  7794 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7797 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  7798 ;;		 -> STR_16(6), STR_14(5), STR_12(7), STR_10(11), 
  7799 ;;		 -> STR_8(6), STR_6(5), STR_4(4), STR_2(7), 
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7802 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  7803 ;;		 -> STR_16(6), STR_14(5), STR_12(7), STR_10(11), 
  7804 ;;		 -> STR_8(6), STR_6(5), STR_4(4), STR_2(7), 
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  2    0[COMRAM] unsigned int 
  7807 ;; Registers used:
  7808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7817 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7818 ;;Total ram usage:        4 bytes
  7819 ;; Hardware stack levels used: 1
  7820 ;; This function calls:
  7821 ;;		Nothing
  7822 ;; This function is called by:
  7823 ;;		_pad
  7824 ;;		_stoa
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           	psect	text24
  7829  005EAA                     __ptext24:
  7830                           	callstack 0
  7831  005EAA                     _strlen:
  7832                           	callstack 25
  7833  005EAA  C001  F003         	movff	strlen@s,strlen@a
  7834  005EAE  C002  F004         	movff	strlen@s+1,strlen@a+1
  7835  005EB2  EF5D  F02F         	goto	l4433
  7836  005EB6                     l4431:
  7837  005EB6  4A01               	infsnz	strlen@s^0,f,c
  7838  005EB8  2A02               	incf	(strlen@s+1)^0,f,c
  7839  005EBA                     l4433:
  7840  005EBA  C001  FFF6         	movff	strlen@s,tblptrl
  7841  005EBE  C002  FFF7         	movff	strlen@s+1,tblptrh
  7842  005EC2  0E00               	movlw	low (__smallconst shr (0+16))
  7843  005EC4  6EF8               	movwf	tblptru,c
  7844  005EC6  0E0D               	movlw	(high __ramtop+-1)
  7845  005EC8  64F7               	cpfsgt	tblptrh,c
  7846  005ECA  D003               	bra	u4617
  7847  005ECC  0008               	tblrd		*
  7848  005ECE  50F5               	movf	tablat,w,c
  7849  005ED0  D005               	bra	u4610
  7850  005ED2                     u4617:
  7851  005ED2  CFF6 FFE9          	movff	tblptrl,fsr0l
  7852  005ED6  CFF7 FFEA          	movff	tblptrh,fsr0h
  7853  005EDA  50EF               	movf	indf0,w,c
  7854  005EDC                     u4610:
  7855  005EDC  0900               	iorlw	0
  7856  005EDE  A4D8               	btfss	status,2,c
  7857  005EE0  EF74  F02F         	goto	u4621
  7858  005EE4  EF76  F02F         	goto	u4620
  7859  005EE8                     u4621:
  7860  005EE8  EF5B  F02F         	goto	l4431
  7861  005EEC                     u4620:
  7862  005EEC  5003               	movf	strlen@a^0,w,c
  7863  005EEE  5C01               	subwf	strlen@s^0,w,c
  7864  005EF0  6E01               	movwf	?_strlen^0,c
  7865  005EF2  5004               	movf	(strlen@a+1)^0,w,c
  7866  005EF4  5802               	subwfb	(strlen@s+1)^0,w,c
  7867  005EF6  6E02               	movwf	(?_strlen+1)^0,c
  7868  005EF8  0012               	return		;funcret
  7869  005EFA                     __end_of_strlen:
  7870                           	callstack 0
  7871                           
  7872 ;; *************** function _fputs *****************
  7873 ;; Defined at:
  7874 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7877 ;;		 -> dbuf(80), 
  7878 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7879 ;;		 -> sprintf@f(6), 
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;  i               2   14[COMRAM] int 
  7882 ;;  c               1   13[COMRAM] unsigned char 
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  2    9[COMRAM] int 
  7885 ;; Registers used:
  7886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7893 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7895 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7896 ;;Total ram usage:        7 bytes
  7897 ;; Hardware stack levels used: 1
  7898 ;; Hardware stack levels required when called: 2
  7899 ;; This function calls:
  7900 ;;		_fputc
  7901 ;; This function is called by:
  7902 ;;		_pad
  7903 ;; This function uses a non-reentrant model
  7904 ;;
  7905                           
  7906                           	psect	text25
  7907  006170                     __ptext25:
  7908                           	callstack 0
  7909  006170                     _fputs:
  7910                           	callstack 22
  7911  006170  0E00               	movlw	0
  7912  006172  6E10               	movwf	(fputs@i+1)^0,c
  7913  006174  0E00               	movlw	0
  7914  006176  6E0F               	movwf	fputs@i^0,c
  7915  006178  EFC9  F030         	goto	l4427
  7916  00617C                     l4423:
  7917  00617C  C00E  F001         	movff	fputs@c,fputc@c
  7918  006180  6A02               	clrf	(fputc@c+1)^0,c
  7919  006182  C00C  F003         	movff	fputs@fp,fputc@fp
  7920  006186  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7921  00618A  ECA4  F02B         	call	_fputc	;wreg free
  7922  00618E  4A0F               	infsnz	fputs@i^0,f,c
  7923  006190  2A10               	incf	(fputs@i+1)^0,f,c
  7924  006192                     l4427:
  7925  006192  500F               	movf	fputs@i^0,w,c
  7926  006194  240A               	addwf	fputs@s^0,w,c
  7927  006196  6ED9               	movwf	fsr2l,c
  7928  006198  5010               	movf	(fputs@i+1)^0,w,c
  7929  00619A  200B               	addwfc	(fputs@s+1)^0,w,c
  7930  00619C  6EDA               	movwf	fsr2h,c
  7931  00619E  50DF               	movf	indf2,w,c
  7932  0061A0  6E0E               	movwf	fputs@c^0,c
  7933  0061A2  500E               	movf	fputs@c^0,w,c
  7934  0061A4  A4D8               	btfss	status,2,c
  7935  0061A6  EFD7  F030         	goto	u4601
  7936  0061AA  EFD9  F030         	goto	u4600
  7937  0061AE                     u4601:
  7938  0061AE  EFBE  F030         	goto	l4423
  7939  0061B2                     u4600:
  7940  0061B2  0012               	return		;funcret
  7941  0061B4                     __end_of_fputs:
  7942                           	callstack 0
  7943                           
  7944 ;; *************** function _fputc *****************
  7945 ;; Defined at:
  7946 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  c               2    0[COMRAM] int 
  7949 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7950 ;;		 -> sprintf@f(6), 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;		None
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  2    0[COMRAM] int 
  7955 ;; Registers used:
  7956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7964 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;Total ram usage:        9 bytes
  7967 ;; Hardware stack levels used: 1
  7968 ;; Hardware stack levels required when called: 1
  7969 ;; This function calls:
  7970 ;;		_putch
  7971 ;; This function is called by:
  7972 ;;		_pad
  7973 ;;		_stoa
  7974 ;;		_vfpfcnvrt
  7975 ;;		_fputs
  7976 ;; This function uses a non-reentrant model
  7977 ;;
  7978                           
  7979                           	psect	text26
  7980  005748                     __ptext26:
  7981                           	callstack 0
  7982  005748                     _fputc:
  7983                           	callstack 24
  7984  005748  5003               	movf	fputc@fp^0,w,c
  7985  00574A  1004               	iorwf	(fputc@fp+1)^0,w,c
  7986  00574C  B4D8               	btfsc	status,2,c
  7987  00574E  EFAB  F02B         	goto	u4171
  7988  005752  EFAD  F02B         	goto	u4170
  7989  005756                     u4171:
  7990  005756  EFB6  F02B         	goto	l4209
  7991  00575A                     u4170:
  7992  00575A  5003               	movf	fputc@fp^0,w,c
  7993  00575C  1004               	iorwf	(fputc@fp+1)^0,w,c
  7994  00575E  A4D8               	btfss	status,2,c
  7995  005760  EFB4  F02B         	goto	u4181
  7996  005764  EFB6  F02B         	goto	u4180
  7997  005768                     u4181:
  7998  005768  EFBB  F02B         	goto	l4211
  7999  00576C                     u4180:
  8000  00576C                     l4209:
  8001  00576C  5001               	movf	fputc@c^0,w,c
  8002  00576E  EC9A  F032         	call	_putch
  8003  005772  EF08  F02C         	goto	l1728
  8004  005776                     l4211:
  8005  005776  EE20 F004          	lfsr	2,4
  8006  00577A  5003               	movf	fputc@fp^0,w,c
  8007  00577C  26D9               	addwf	fsr2l,f,c
  8008  00577E  5004               	movf	(fputc@fp+1)^0,w,c
  8009  005780  22DA               	addwfc	fsr2h,f,c
  8010  005782  50DE               	movf	postinc2,w,c
  8011  005784  10DE               	iorwf	postinc2,w,c
  8012  005786  B4D8               	btfsc	status,2,c
  8013  005788  EFC8  F02B         	goto	u4191
  8014  00578C  EFCA  F02B         	goto	u4190
  8015  005790                     u4191:
  8016  005790  EFE5  F02B         	goto	l4215
  8017  005794                     u4190:
  8018  005794  EE20 F004          	lfsr	2,4
  8019  005798  5003               	movf	fputc@fp^0,w,c
  8020  00579A  26D9               	addwf	fsr2l,f,c
  8021  00579C  5004               	movf	(fputc@fp+1)^0,w,c
  8022  00579E  22DA               	addwfc	fsr2h,f,c
  8023  0057A0  EE10 F002          	lfsr	1,2
  8024  0057A4  5003               	movf	fputc@fp^0,w,c
  8025  0057A6  26E1               	addwf	fsr1l,f,c
  8026  0057A8  5004               	movf	(fputc@fp+1)^0,w,c
  8027  0057AA  22E2               	addwfc	fsr1h,f,c
  8028  0057AC  50DE               	movf	postinc2,w,c
  8029  0057AE  5CE6               	subwf	postinc1,w,c
  8030  0057B0  50E6               	movf	postinc1,w,c
  8031  0057B2  0A80               	xorlw	128
  8032  0057B4  6E09               	movwf	(??_fputc+4)^0,c
  8033  0057B6  50DE               	movf	postinc2,w,c
  8034  0057B8  0A80               	xorlw	128
  8035  0057BA  5809               	subwfb	(??_fputc+4)^0,w,c
  8036  0057BC  B0D8               	btfsc	status,0,c
  8037  0057BE  EFE3  F02B         	goto	u4201
  8038  0057C2  EFE5  F02B         	goto	u4200
  8039  0057C6                     u4201:
  8040  0057C6  EF08  F02C         	goto	l1728
  8041  0057CA                     u4200:
  8042  0057CA                     l4215:
  8043  0057CA  EE20 F002          	lfsr	2,2
  8044  0057CE  5003               	movf	fputc@fp^0,w,c
  8045  0057D0  26D9               	addwf	fsr2l,f,c
  8046  0057D2  5004               	movf	(fputc@fp+1)^0,w,c
  8047  0057D4  22DA               	addwfc	fsr2h,f,c
  8048  0057D6  CFDE F005          	movff	postinc2,??_fputc
  8049  0057DA  CFDD F006          	movff	postdec2,??_fputc+1
  8050  0057DE  C003  FFD9         	movff	fputc@fp,fsr2l
  8051  0057E2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8052  0057E6  CFDE F007          	movff	postinc2,??_fputc+2
  8053  0057EA  CFDD F008          	movff	postdec2,??_fputc+3
  8054  0057EE  5005               	movf	??_fputc^0,w,c
  8055  0057F0  2407               	addwf	(??_fputc+2)^0,w,c
  8056  0057F2  6ED9               	movwf	fsr2l,c
  8057  0057F4  5006               	movf	(??_fputc+1)^0,w,c
  8058  0057F6  2008               	addwfc	(??_fputc+3)^0,w,c
  8059  0057F8  6EDA               	movwf	fsr2h,c
  8060  0057FA  C001  FFDF         	movff	fputc@c,indf2
  8061  0057FE  EE20 F002          	lfsr	2,2
  8062  005802  5003               	movf	fputc@fp^0,w,c
  8063  005804  26D9               	addwf	fsr2l,f,c
  8064  005806  5004               	movf	(fputc@fp+1)^0,w,c
  8065  005808  22DA               	addwfc	fsr2h,f,c
  8066  00580A  2ADE               	incf	postinc2,f,c
  8067  00580C  0E00               	movlw	0
  8068  00580E  22DD               	addwfc	postdec2,f,c
  8069  005810                     l1728:
  8070  005810  0012               	return		;funcret
  8071  005812                     __end_of_fputc:
  8072                           	callstack 0
  8073                           
  8074 ;; *************** function _putch *****************
  8075 ;; Defined at:
  8076 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  8077 ;; Parameters:    Size  Location     Type
  8078 ;;  c               1    wreg     unsigned char 
  8079 ;; Auto vars:     Size  Location     Type
  8080 ;;  c               1    0[COMRAM] unsigned char 
  8081 ;; Return value:  Size  Location     Type
  8082 ;;                  1    wreg      void 
  8083 ;; Registers used:
  8084 ;;		wreg
  8085 ;; Tracked objects:
  8086 ;;		On entry : 0/0
  8087 ;;		On exit  : 0/0
  8088 ;;		Unchanged: 0/0
  8089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8094 ;;Total ram usage:        0 bytes
  8095 ;; Hardware stack levels used: 1
  8096 ;; This function calls:
  8097 ;;		Nothing
  8098 ;; This function is called by:
  8099 ;;		_fputc
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text27
  8104  006534                     __ptext27:
  8105                           	callstack 0
  8106  006534                     _putch:
  8107                           	callstack 24
  8108  006534  0012               	return		;funcret
  8109  006536                     __end_of_putch:
  8110                           	callstack 0
  8111                           
  8112 ;; *************** function _abs *****************
  8113 ;; Defined at:
  8114 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  a               2   18[COMRAM] int 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  2   18[COMRAM] int 
  8121 ;; Registers used:
  8122 ;;		wreg, status,2, status,0
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8132 ;;Total ram usage:        4 bytes
  8133 ;; Hardware stack levels used: 1
  8134 ;; This function calls:
  8135 ;;		Nothing
  8136 ;; This function is called by:
  8137 ;;		_dtoa
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text28
  8142  0061F6                     __ptext28:
  8143                           	callstack 0
  8144  0061F6                     _abs:
  8145                           	callstack 25
  8146  0061F6  BE14               	btfsc	(abs@a+1)^0,7,c
  8147  0061F8  EF08  F031         	goto	u5540
  8148  0061FC  5014               	movf	(abs@a+1)^0,w,c
  8149  0061FE  E106               	bnz	u5541
  8150  006200  0413               	decf	abs@a^0,w,c
  8151  006202  B0D8               	btfsc	status,0,c
  8152  006204  EF06  F031         	goto	u5541
  8153  006208  EF08  F031         	goto	u5540
  8154  00620C                     u5541:
  8155  00620C  EF16  F031         	goto	l1649
  8156  006210                     u5540:
  8157  006210  C013  F015         	movff	abs@a,??_abs
  8158  006214  C014  F016         	movff	abs@a+1,??_abs+1
  8159  006218  1E15               	comf	??_abs^0,f,c
  8160  00621A  1E16               	comf	(??_abs+1)^0,f,c
  8161  00621C  4A15               	infsnz	??_abs^0,f,c
  8162  00621E  2A16               	incf	(??_abs+1)^0,f,c
  8163  006220  C015  F013         	movff	??_abs,?_abs
  8164  006224  C016  F014         	movff	??_abs+1,?_abs+1
  8165  006228  EF1A  F031         	goto	l1652
  8166  00622C                     l1649:
  8167  00622C  C013  F013         	movff	abs@a,?_abs
  8168  006230  C014  F014         	movff	abs@a+1,?_abs+1
  8169  006234                     l1652:
  8170  006234  0012               	return		;funcret
  8171  006236                     __end_of_abs:
  8172                           	callstack 0
  8173                           
  8174 ;; *************** function ___aomod *****************
  8175 ;; Defined at:
  8176 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  dividend        8    0[COMRAM] long long 
  8179 ;;  divisor         8    8[COMRAM] long long 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  sign            1   17[COMRAM] unsigned char 
  8182 ;;  counter         1   16[COMRAM] unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  8    0[COMRAM] long long 
  8185 ;; Registers used:
  8186 ;;		wreg, status,2, status,0
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8192 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8195 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8196 ;;Total ram usage:       18 bytes
  8197 ;; Hardware stack levels used: 1
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		_dtoa
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text29
  8206  004E54                     __ptext29:
  8207                           	callstack 0
  8208  004E54                     ___aomod:
  8209                           	callstack 25
  8210  004E54  0E00               	movlw	0
  8211  004E56  6E12               	movwf	___aomod@sign^0,c
  8212  004E58  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8213  004E5A  EF33  F027         	goto	u4740
  8214  004E5E  EF31  F027         	goto	u4741
  8215  004E62                     u4741:
  8216  004E62  EF45  F027         	goto	l4505
  8217  004E66                     u4740:
  8218  004E66  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8219  004E68  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8220  004E6A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8221  004E6C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8222  004E6E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8223  004E70  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8224  004E72  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8225  004E74  6C01               	negf	___aomod@dividend^0,c
  8226  004E76  0E00               	movlw	0
  8227  004E78  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8228  004E7A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8229  004E7C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8230  004E7E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8231  004E80  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8232  004E82  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8233  004E84  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8234  004E86  0E01               	movlw	1
  8235  004E88  6E12               	movwf	___aomod@sign^0,c
  8236  004E8A                     l4505:
  8237  004E8A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8238  004E8C  EF4C  F027         	goto	u4750
  8239  004E90  EF4A  F027         	goto	u4751
  8240  004E94                     u4751:
  8241  004E94  EF5C  F027         	goto	l4509
  8242  004E98                     u4750:
  8243  004E98  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8244  004E9A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8245  004E9C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8246  004E9E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8247  004EA0  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8248  004EA2  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8249  004EA4  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8250  004EA6  6C09               	negf	___aomod@divisor^0,c
  8251  004EA8  0E00               	movlw	0
  8252  004EAA  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8253  004EAC  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8254  004EAE  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8255  004EB0  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8256  004EB2  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8257  004EB4  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8258  004EB6  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8259  004EB8                     l4509:
  8260  004EB8  5009               	movf	___aomod@divisor^0,w,c
  8261  004EBA  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8262  004EBC  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8263  004EBE  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8264  004EC0  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8265  004EC2  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8266  004EC4  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8267  004EC6  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8268  004EC8  B4D8               	btfsc	status,2,c
  8269  004ECA  EF69  F027         	goto	u4761
  8270  004ECE  EF6B  F027         	goto	u4760
  8271  004ED2                     u4761:
  8272  004ED2  EFB3  F027         	goto	l4525
  8273  004ED6                     u4760:
  8274  004ED6  0E01               	movlw	1
  8275  004ED8  6E11               	movwf	___aomod@counter^0,c
  8276  004EDA  EF79  F027         	goto	l4515
  8277  004EDE                     l4513:
  8278  004EDE  90D8               	bcf	status,0,c
  8279  004EE0  3609               	rlcf	___aomod@divisor^0,f,c
  8280  004EE2  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8281  004EE4  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8282  004EE6  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8283  004EE8  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8284  004EEA  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8285  004EEC  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8286  004EEE  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8287  004EF0  2A11               	incf	___aomod@counter^0,f,c
  8288  004EF2                     l4515:
  8289  004EF2  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8290  004EF4  EF7E  F027         	goto	u4771
  8291  004EF8  EF80  F027         	goto	u4770
  8292  004EFC                     u4771:
  8293  004EFC  EF6F  F027         	goto	l4513
  8294  004F00                     u4770:
  8295  004F00                     l4517:
  8296  004F00  5009               	movf	___aomod@divisor^0,w,c
  8297  004F02  5C01               	subwf	___aomod@dividend^0,w,c
  8298  004F04  500A               	movf	(___aomod@divisor+1)^0,w,c
  8299  004F06  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8300  004F08  500B               	movf	(___aomod@divisor+2)^0,w,c
  8301  004F0A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8302  004F0C  500C               	movf	(___aomod@divisor+3)^0,w,c
  8303  004F0E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8304  004F10  500D               	movf	(___aomod@divisor+4)^0,w,c
  8305  004F12  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8306  004F14  500E               	movf	(___aomod@divisor+5)^0,w,c
  8307  004F16  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8308  004F18  500F               	movf	(___aomod@divisor+6)^0,w,c
  8309  004F1A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8310  004F1C  5010               	movf	(___aomod@divisor+7)^0,w,c
  8311  004F1E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8312  004F20  A0D8               	btfss	status,0,c
  8313  004F22  EF95  F027         	goto	u4781
  8314  004F26  EF97  F027         	goto	u4780
  8315  004F2A                     u4781:
  8316  004F2A  EFA7  F027         	goto	l4521
  8317  004F2E                     u4780:
  8318  004F2E  5009               	movf	___aomod@divisor^0,w,c
  8319  004F30  5E01               	subwf	___aomod@dividend^0,f,c
  8320  004F32  500A               	movf	(___aomod@divisor+1)^0,w,c
  8321  004F34  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8322  004F36  500B               	movf	(___aomod@divisor+2)^0,w,c
  8323  004F38  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8324  004F3A  500C               	movf	(___aomod@divisor+3)^0,w,c
  8325  004F3C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8326  004F3E  500D               	movf	(___aomod@divisor+4)^0,w,c
  8327  004F40  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8328  004F42  500E               	movf	(___aomod@divisor+5)^0,w,c
  8329  004F44  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8330  004F46  500F               	movf	(___aomod@divisor+6)^0,w,c
  8331  004F48  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8332  004F4A  5010               	movf	(___aomod@divisor+7)^0,w,c
  8333  004F4C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8334  004F4E                     l4521:
  8335  004F4E  90D8               	bcf	status,0,c
  8336  004F50  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8337  004F52  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8338  004F54  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8339  004F56  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8340  004F58  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8341  004F5A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8342  004F5C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8343  004F5E  3209               	rrcf	___aomod@divisor^0,f,c
  8344  004F60  2E11               	decfsz	___aomod@counter^0,f,c
  8345  004F62  EF80  F027         	goto	l4517
  8346  004F66                     l4525:
  8347  004F66  5012               	movf	___aomod@sign^0,w,c
  8348  004F68  B4D8               	btfsc	status,2,c
  8349  004F6A  EFB9  F027         	goto	u4791
  8350  004F6E  EFBB  F027         	goto	u4790
  8351  004F72                     u4791:
  8352  004F72  EFCB  F027         	goto	l4529
  8353  004F76                     u4790:
  8354  004F76  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8355  004F78  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8356  004F7A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8357  004F7C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8358  004F7E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8359  004F80  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8360  004F82  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8361  004F84  6C01               	negf	___aomod@dividend^0,c
  8362  004F86  0E00               	movlw	0
  8363  004F88  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8364  004F8A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8365  004F8C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8366  004F8E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8367  004F90  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8368  004F92  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8369  004F94  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8370  004F96                     l4529:
  8371  004F96  C001  F001         	movff	___aomod@dividend,?___aomod
  8372  004F9A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8373  004F9E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8374  004FA2  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8375  004FA6  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8376  004FAA  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8377  004FAE  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8378  004FB2  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8379  004FB6  0012               	return		;funcret
  8380  004FB8                     __end_of___aomod:
  8381                           	callstack 0
  8382                           
  8383 ;; *************** function ___aodiv *****************
  8384 ;; Defined at:
  8385 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  dividend        8    0[COMRAM] long long 
  8388 ;;  divisor         8    8[COMRAM] long long 
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;  quotient        8   18[COMRAM] long long 
  8391 ;;  sign            1   17[COMRAM] unsigned char 
  8392 ;;  counter         1   16[COMRAM] unsigned char 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  8    0[COMRAM] long long 
  8395 ;; Registers used:
  8396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8402 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8403 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8405 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8406 ;;Total ram usage:       26 bytes
  8407 ;; Hardware stack levels used: 1
  8408 ;; This function calls:
  8409 ;;		Nothing
  8410 ;; This function is called by:
  8411 ;;		_dtoa
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           	psect	text30
  8416  004B56                     __ptext30:
  8417                           	callstack 0
  8418  004B56                     ___aodiv:
  8419                           	callstack 25
  8420  004B56  0E00               	movlw	0
  8421  004B58  6E12               	movwf	___aodiv@sign^0,c
  8422  004B5A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8423  004B5C  EFB4  F025         	goto	u4670
  8424  004B60  EFB2  F025         	goto	u4671
  8425  004B64                     u4671:
  8426  004B64  EFC6  F025         	goto	l4461
  8427  004B68                     u4670:
  8428  004B68  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8429  004B6A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8430  004B6C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8431  004B6E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8432  004B70  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8433  004B72  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8434  004B74  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8435  004B76  6C09               	negf	___aodiv@divisor^0,c
  8436  004B78  0E00               	movlw	0
  8437  004B7A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8438  004B7C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8439  004B7E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8440  004B80  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8441  004B82  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8442  004B84  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8443  004B86  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8444  004B88  0E01               	movlw	1
  8445  004B8A  6E12               	movwf	___aodiv@sign^0,c
  8446  004B8C                     l4461:
  8447  004B8C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8448  004B8E  EFCD  F025         	goto	u4680
  8449  004B92  EFCB  F025         	goto	u4681
  8450  004B96                     u4681:
  8451  004B96  EFDF  F025         	goto	l4467
  8452  004B9A                     u4680:
  8453  004B9A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8454  004B9C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8455  004B9E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8456  004BA0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8457  004BA2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8458  004BA4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8459  004BA6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8460  004BA8  6C01               	negf	___aodiv@dividend^0,c
  8461  004BAA  0E00               	movlw	0
  8462  004BAC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8463  004BAE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8464  004BB0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8465  004BB2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8466  004BB4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8467  004BB6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8468  004BB8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8469  004BBA  0E01               	movlw	1
  8470  004BBC  1A12               	xorwf	___aodiv@sign^0,f,c
  8471  004BBE                     l4467:
  8472  004BBE  EE20  F013         	lfsr	2,___aodiv@quotient
  8473  004BC2  0E07               	movlw	7
  8474  004BC4                     u4691:
  8475  004BC4  6ADE               	clrf	postinc2,c
  8476  004BC6  06E8               	decf	wreg,f,c
  8477  004BC8  E2FD               	bc	u4691
  8478  004BCA  5009               	movf	___aodiv@divisor^0,w,c
  8479  004BCC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8480  004BCE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8481  004BD0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8482  004BD2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8483  004BD4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8484  004BD6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8485  004BD8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8486  004BDA  B4D8               	btfsc	status,2,c
  8487  004BDC  EFF2  F025         	goto	u4701
  8488  004BE0  EFF4  F025         	goto	u4700
  8489  004BE4                     u4701:
  8490  004BE4  EF46  F026         	goto	l4489
  8491  004BE8                     u4700:
  8492  004BE8  0E01               	movlw	1
  8493  004BEA  6E11               	movwf	___aodiv@counter^0,c
  8494  004BEC  EF02  F026         	goto	l4475
  8495  004BF0                     l4473:
  8496  004BF0  90D8               	bcf	status,0,c
  8497  004BF2  3609               	rlcf	___aodiv@divisor^0,f,c
  8498  004BF4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8499  004BF6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8500  004BF8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8501  004BFA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8502  004BFC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8503  004BFE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8504  004C00  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8505  004C02  2A11               	incf	___aodiv@counter^0,f,c
  8506  004C04                     l4475:
  8507  004C04  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8508  004C06  EF07  F026         	goto	u4711
  8509  004C0A  EF09  F026         	goto	u4710
  8510  004C0E                     u4711:
  8511  004C0E  EFF8  F025         	goto	l4473
  8512  004C12                     u4710:
  8513  004C12                     l4477:
  8514  004C12  90D8               	bcf	status,0,c
  8515  004C14  3613               	rlcf	___aodiv@quotient^0,f,c
  8516  004C16  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8517  004C18  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8518  004C1A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8519  004C1C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8520  004C1E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8521  004C20  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8522  004C22  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8523  004C24  5009               	movf	___aodiv@divisor^0,w,c
  8524  004C26  5C01               	subwf	___aodiv@dividend^0,w,c
  8525  004C28  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8526  004C2A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8527  004C2C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8528  004C2E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8529  004C30  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8530  004C32  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8531  004C34  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8532  004C36  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8533  004C38  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8534  004C3A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8535  004C3C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8536  004C3E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8537  004C40  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8538  004C42  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8539  004C44  A0D8               	btfss	status,0,c
  8540  004C46  EF27  F026         	goto	u4721
  8541  004C4A  EF29  F026         	goto	u4720
  8542  004C4E                     u4721:
  8543  004C4E  EF3A  F026         	goto	l4485
  8544  004C52                     u4720:
  8545  004C52  5009               	movf	___aodiv@divisor^0,w,c
  8546  004C54  5E01               	subwf	___aodiv@dividend^0,f,c
  8547  004C56  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8548  004C58  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8549  004C5A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8550  004C5C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8551  004C5E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8552  004C60  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8553  004C62  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8554  004C64  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8555  004C66  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8556  004C68  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8557  004C6A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8558  004C6C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8559  004C6E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8560  004C70  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8561  004C72  8013               	bsf	___aodiv@quotient^0,0,c
  8562  004C74                     l4485:
  8563  004C74  90D8               	bcf	status,0,c
  8564  004C76  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8565  004C78  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8566  004C7A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8567  004C7C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8568  004C7E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8569  004C80  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8570  004C82  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8571  004C84  3209               	rrcf	___aodiv@divisor^0,f,c
  8572  004C86  2E11               	decfsz	___aodiv@counter^0,f,c
  8573  004C88  EF09  F026         	goto	l4477
  8574  004C8C                     l4489:
  8575  004C8C  5012               	movf	___aodiv@sign^0,w,c
  8576  004C8E  B4D8               	btfsc	status,2,c
  8577  004C90  EF4C  F026         	goto	u4731
  8578  004C94  EF4E  F026         	goto	u4730
  8579  004C98                     u4731:
  8580  004C98  EF5E  F026         	goto	l4493
  8581  004C9C                     u4730:
  8582  004C9C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8583  004C9E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8584  004CA0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8585  004CA2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8586  004CA4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8587  004CA6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8588  004CA8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8589  004CAA  6C13               	negf	___aodiv@quotient^0,c
  8590  004CAC  0E00               	movlw	0
  8591  004CAE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8592  004CB0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8593  004CB2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8594  004CB4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8595  004CB6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8596  004CB8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8597  004CBA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8598  004CBC                     l4493:
  8599  004CBC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8600  004CC0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8601  004CC4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8602  004CC8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8603  004CCC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8604  004CD0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8605  004CD4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8606  004CD8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8607  004CDC  0012               	return		;funcret
  8608  004CDE                     __end_of___aodiv:
  8609                           	callstack 0
  8610                           
  8611 ;; *************** function _atoi *****************
  8612 ;; Defined at:
  8613 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8616 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  8617 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  8618 ;;		 -> STR_3(64), STR_1(64), 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;  n               2   20[COMRAM] int 
  8621 ;;  neg             2   13[COMRAM] int 
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  2    7[COMRAM] int 
  8624 ;; Registers used:
  8625 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8632 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8633 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8634 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8635 ;;Total ram usage:       15 bytes
  8636 ;; Hardware stack levels used: 1
  8637 ;; Hardware stack levels required when called: 1
  8638 ;; This function calls:
  8639 ;;		___wmul
  8640 ;;		_isdigit
  8641 ;;		_isspace
  8642 ;; This function is called by:
  8643 ;;		_vfpfcnvrt
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text31
  8648  004814                     __ptext31:
  8649                           	callstack 0
  8650  004814                     _atoi:
  8651                           	callstack 25
  8652  004814  0E00               	movlw	0
  8653  004816  6E16               	movwf	(atoi@n+1)^0,c
  8654  004818  0E00               	movlw	0
  8655  00481A  6E15               	movwf	atoi@n^0,c
  8656  00481C  0E00               	movlw	0
  8657  00481E  6E0F               	movwf	(atoi@neg+1)^0,c
  8658  004820  0E00               	movlw	0
  8659  004822  6E0E               	movwf	atoi@neg^0,c
  8660  004824  EF16  F024         	goto	l5529
  8661  004828                     l5527:
  8662  004828  4A08               	infsnz	atoi@s^0,f,c
  8663  00482A  2A09               	incf	(atoi@s+1)^0,f,c
  8664  00482C                     l5529:
  8665  00482C  0E01               	movlw	1
  8666  00482E  6E14               	movwf	_atoi$3129^0,c
  8667  004830  C008  FFF6         	movff	atoi@s,tblptrl
  8668  004834  C009  FFF7         	movff	atoi@s+1,tblptrh
  8669  004838                     	if	0	;tblptru may be non-zero
  8670  004838                     	endif
  8671  004838                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8672  004838  0E00               	movlw	low (__mediumconst shr (0+16))
  8673  00483A  6EF8               	movwf	tblptru,c
  8674  00483C                     	endif
  8675  00483C  0008               	tblrd		*
  8676  00483E  50F5               	movf	tablat,w,c
  8677  004840  0A20               	xorlw	32
  8678  004842  B4D8               	btfsc	status,2,c
  8679  004844  EF26  F024         	goto	u6621
  8680  004848  EF28  F024         	goto	u6620
  8681  00484C                     u6621:
  8682  00484C  EF47  F024         	goto	l5537
  8683  004850                     u6620:
  8684  004850  0EF7               	movlw	247
  8685  004852  6E0A               	movwf	??_atoi^0,c
  8686  004854  0EFF               	movlw	255
  8687  004856  6E0B               	movwf	(??_atoi+1)^0,c
  8688  004858  C008  FFF6         	movff	atoi@s,tblptrl
  8689  00485C  C009  FFF7         	movff	atoi@s+1,tblptrh
  8690  004860                     	if	0	;tblptru may be non-zero
  8691  004860                     	endif
  8692  004860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8693  004860  0E00               	movlw	low (__mediumconst shr (0+16))
  8694  004862  6EF8               	movwf	tblptru,c
  8695  004864                     	endif
  8696  004864  0008               	tblrd		*
  8697  004866  50F5               	movf	tablat,w,c
  8698  004868  6E0C               	movwf	(??_atoi+2)^0,c
  8699  00486A  6A0D               	clrf	(??_atoi+3)^0,c
  8700  00486C  500A               	movf	??_atoi^0,w,c
  8701  00486E  260C               	addwf	(??_atoi+2)^0,f,c
  8702  004870  500B               	movf	(??_atoi+1)^0,w,c
  8703  004872  220D               	addwfc	(??_atoi+3)^0,f,c
  8704  004874  500D               	movf	(??_atoi+3)^0,w,c
  8705  004876  E109               	bnz	u6630
  8706  004878  0E05               	movlw	5
  8707  00487A  5C0C               	subwf	(??_atoi+2)^0,w,c
  8708  00487C  A0D8               	btfss	status,0,c
  8709  00487E  EF43  F024         	goto	u6631
  8710  004882  EF45  F024         	goto	u6630
  8711  004886                     u6631:
  8712  004886  EF47  F024         	goto	l5537
  8713  00488A                     u6630:
  8714  00488A  0E00               	movlw	0
  8715  00488C  6E14               	movwf	_atoi$3129^0,c
  8716  00488E                     l5537:
  8717  00488E  C014  F010         	movff	_atoi$3129,_atoi$3128
  8718  004892  6A11               	clrf	(_atoi$3128+1)^0,c
  8719  004894  5010               	movf	_atoi$3128^0,w,c
  8720  004896  1011               	iorwf	(_atoi$3128+1)^0,w,c
  8721  004898  A4D8               	btfss	status,2,c
  8722  00489A  EF51  F024         	goto	u6641
  8723  00489E  EF53  F024         	goto	u6640
  8724  0048A2                     u6641:
  8725  0048A2  EF14  F024         	goto	l5527
  8726  0048A6                     u6640:
  8727  0048A6  EF5D  F024         	goto	l5547
  8728  0048AA                     l5543:
  8729  0048AA  0E00               	movlw	0
  8730  0048AC  6E0F               	movwf	(atoi@neg+1)^0,c
  8731  0048AE  0E01               	movlw	1
  8732  0048B0  6E0E               	movwf	atoi@neg^0,c
  8733  0048B2                     l5545:
  8734  0048B2  4A08               	infsnz	atoi@s^0,f,c
  8735  0048B4  2A09               	incf	(atoi@s+1)^0,f,c
  8736  0048B6  EF96  F024         	goto	l5553
  8737  0048BA                     l5547:
  8738  0048BA  C008  FFF6         	movff	atoi@s,tblptrl
  8739  0048BE  C009  FFF7         	movff	atoi@s+1,tblptrh
  8740  0048C2                     	if	0	;tblptru may be non-zero
  8741  0048C2                     	endif
  8742  0048C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8743  0048C2  0E00               	movlw	low (__mediumconst shr (0+16))
  8744  0048C4  6EF8               	movwf	tblptru,c
  8745  0048C6                     	endif
  8746  0048C6  0008               	tblrd		*
  8747  0048C8  50F5               	movf	tablat,w,c
  8748  0048CA  6E0A               	movwf	??_atoi^0,c
  8749  0048CC  6A0B               	clrf	(??_atoi+1)^0,c
  8750                           
  8751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8752                           ; Switch size 1, requested type "simple"
  8753                           ; Number of cases is 1, Range of values is 0 to 0
  8754                           ; switch strategies available:
  8755                           ; Name         Instructions Cycles
  8756                           ; simple_byte            4     3 (average)
  8757                           ;	Chosen strategy is simple_byte
  8758  0048CE  500B               	movf	(??_atoi+1)^0,w,c
  8759  0048D0  0A00               	xorlw	0	; case 0
  8760  0048D2  B4D8               	btfsc	status,2,c
  8761  0048D4  EF6E  F024         	goto	l6593
  8762  0048D8  EF96  F024         	goto	l5553
  8763  0048DC                     l6593:
  8764                           
  8765                           ; Switch size 1, requested type "simple"
  8766                           ; Number of cases is 2, Range of values is 43 to 45
  8767                           ; switch strategies available:
  8768                           ; Name         Instructions Cycles
  8769                           ; simple_byte            7     4 (average)
  8770                           ;	Chosen strategy is simple_byte
  8771  0048DC  500A               	movf	??_atoi^0,w,c
  8772  0048DE  0A2B               	xorlw	43	; case 43
  8773  0048E0  B4D8               	btfsc	status,2,c
  8774  0048E2  EF59  F024         	goto	l5545
  8775  0048E6  0A06               	xorlw	6	; case 45
  8776  0048E8  B4D8               	btfsc	status,2,c
  8777  0048EA  EF55  F024         	goto	l5543
  8778  0048EE  EF96  F024         	goto	l5553
  8779  0048F2                     l5549:
  8780  0048F2  C015  F001         	movff	atoi@n,___wmul@multiplier
  8781  0048F6  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8782  0048FA  0E00               	movlw	0
  8783  0048FC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8784  0048FE  0E0A               	movlw	10
  8785  004900  6E03               	movwf	___wmul@multiplicand^0,c
  8786  004902  ECEB  F031         	call	___wmul	;wreg free
  8787  004906  C008  FFF6         	movff	atoi@s,tblptrl
  8788  00490A  C009  FFF7         	movff	atoi@s+1,tblptrh
  8789  00490E                     	if	0	;tblptru may be non-zero
  8790  00490E                     	endif
  8791  00490E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8792  00490E  0E00               	movlw	low (__mediumconst shr (0+16))
  8793  004910  6EF8               	movwf	tblptru,c
  8794  004912                     	endif
  8795  004912  0008               	tblrd		*
  8796  004914  50F5               	movf	tablat,w,c
  8797  004916  5E01               	subwf	?___wmul^0,f,c
  8798  004918  0E00               	movlw	0
  8799  00491A  5A02               	subwfb	(?___wmul+1)^0,f,c
  8800  00491C  0E30               	movlw	48
  8801  00491E  2401               	addwf	?___wmul^0,w,c
  8802  004920  6E15               	movwf	atoi@n^0,c
  8803  004922  0E00               	movlw	0
  8804  004924  2002               	addwfc	(?___wmul+1)^0,w,c
  8805  004926  6E16               	movwf	(atoi@n+1)^0,c
  8806  004928  EF59  F024         	goto	l5545
  8807  00492C                     l5553:
  8808  00492C  0ED0               	movlw	208
  8809  00492E  6E0A               	movwf	??_atoi^0,c
  8810  004930  0EFF               	movlw	255
  8811  004932  6E0B               	movwf	(??_atoi+1)^0,c
  8812  004934  C008  FFF6         	movff	atoi@s,tblptrl
  8813  004938  C009  FFF7         	movff	atoi@s+1,tblptrh
  8814  00493C                     	if	0	;tblptru may be non-zero
  8815  00493C                     	endif
  8816  00493C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8817  00493C  0E00               	movlw	low (__mediumconst shr (0+16))
  8818  00493E  6EF8               	movwf	tblptru,c
  8819  004940                     	endif
  8820  004940  0008               	tblrd		*
  8821  004942  50F5               	movf	tablat,w,c
  8822  004944  6E0C               	movwf	(??_atoi+2)^0,c
  8823  004946  6A0D               	clrf	(??_atoi+3)^0,c
  8824  004948  500A               	movf	??_atoi^0,w,c
  8825  00494A  260C               	addwf	(??_atoi+2)^0,f,c
  8826  00494C  500B               	movf	(??_atoi+1)^0,w,c
  8827  00494E  220D               	addwfc	(??_atoi+3)^0,f,c
  8828  004950  500D               	movf	(??_atoi+3)^0,w,c
  8829  004952  E10A               	bnz	u6650
  8830  004954  0E0A               	movlw	10
  8831  004956  5C0C               	subwf	(??_atoi+2)^0,w,c
  8832  004958  A0D8               	btfss	status,0,c
  8833  00495A  EFB1  F024         	goto	u6651
  8834  00495E  EFB4  F024         	goto	u6650
  8835  004962                     u6651:
  8836  004962  0E01               	movlw	1
  8837  004964  EFB5  F024         	goto	u6660
  8838  004968                     u6650:
  8839  004968  0E00               	movlw	0
  8840  00496A                     u6660:
  8841  00496A  6E12               	movwf	_atoi$3130^0,c
  8842  00496C  6A13               	clrf	(_atoi$3130+1)^0,c
  8843  00496E  5012               	movf	_atoi$3130^0,w,c
  8844  004970  1013               	iorwf	(_atoi$3130+1)^0,w,c
  8845  004972  A4D8               	btfss	status,2,c
  8846  004974  EFBE  F024         	goto	u6671
  8847  004978  EFC0  F024         	goto	u6670
  8848  00497C                     u6671:
  8849  00497C  EF79  F024         	goto	l5549
  8850  004980                     u6670:
  8851  004980  500E               	movf	atoi@neg^0,w,c
  8852  004982  100F               	iorwf	(atoi@neg+1)^0,w,c
  8853  004984  A4D8               	btfss	status,2,c
  8854  004986  EFC7  F024         	goto	u6681
  8855  00498A  EFC9  F024         	goto	u6680
  8856  00498E                     u6681:
  8857  00498E  EFD7  F024         	goto	l1680
  8858  004992                     u6680:
  8859  004992  C015  F00A         	movff	atoi@n,??_atoi
  8860  004996  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8861  00499A  1E0A               	comf	??_atoi^0,f,c
  8862  00499C  1E0B               	comf	(??_atoi+1)^0,f,c
  8863  00499E  4A0A               	infsnz	??_atoi^0,f,c
  8864  0049A0  2A0B               	incf	(??_atoi+1)^0,f,c
  8865  0049A2  C00A  F008         	movff	??_atoi,?_atoi
  8866  0049A6  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8867  0049AA  EFDB  F024         	goto	l1683
  8868  0049AE                     l1680:
  8869  0049AE  C015  F008         	movff	atoi@n,?_atoi
  8870  0049B2  C016  F009         	movff	atoi@n+1,?_atoi+1
  8871  0049B6                     l1683:
  8872  0049B6  0012               	return		;funcret
  8873  0049B8                     __end_of_atoi:
  8874                           	callstack 0
  8875                           
  8876 ;; *************** function _isspace *****************
  8877 ;; Defined at:
  8878 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  c               2    0[COMRAM] int 
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;		None
  8883 ;; Return value:  Size  Location     Type
  8884 ;;                  2    0[COMRAM] int 
  8885 ;; Registers used:
  8886 ;;		wreg, status,2, status,0
  8887 ;; Tracked objects:
  8888 ;;		On entry : 0/0
  8889 ;;		On exit  : 0/0
  8890 ;;		Unchanged: 0/0
  8891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8894 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8895 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;Total ram usage:        7 bytes
  8897 ;; Hardware stack levels used: 1
  8898 ;; This function calls:
  8899 ;;		Nothing
  8900 ;; This function is called by:
  8901 ;;		_atoi
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           	psect	text32
  8906  005E58                     __ptext32:
  8907                           	callstack 0
  8908  005E58                     _isspace:
  8909                           	callstack 25
  8910  005E58  0E01               	movlw	1
  8911  005E5A  6E07               	movwf	_isspace$3159^0,c
  8912  005E5C  0E20               	movlw	32
  8913  005E5E  1801               	xorwf	isspace@c^0,w,c
  8914  005E60  1002               	iorwf	(isspace@c+1)^0,w,c
  8915  005E62  B4D8               	btfsc	status,2,c
  8916  005E64  EF36  F02F         	goto	u5791
  8917  005E68  EF38  F02F         	goto	u5790
  8918  005E6C                     u5791:
  8919  005E6C  EF51  F02F         	goto	l5079
  8920  005E70                     u5790:
  8921  005E70  0EF7               	movlw	247
  8922  005E72  6E03               	movwf	??_isspace^0,c
  8923  005E74  0EFF               	movlw	255
  8924  005E76  6E04               	movwf	(??_isspace+1)^0,c
  8925  005E78  C001  F005         	movff	isspace@c,??_isspace+2
  8926  005E7C  C002  F006         	movff	isspace@c+1,??_isspace+3
  8927  005E80  5003               	movf	??_isspace^0,w,c
  8928  005E82  2605               	addwf	(??_isspace+2)^0,f,c
  8929  005E84  5004               	movf	(??_isspace+1)^0,w,c
  8930  005E86  2206               	addwfc	(??_isspace+3)^0,f,c
  8931  005E88  5006               	movf	(??_isspace+3)^0,w,c
  8932  005E8A  E109               	bnz	u5800
  8933  005E8C  0E05               	movlw	5
  8934  005E8E  5C05               	subwf	(??_isspace+2)^0,w,c
  8935  005E90  A0D8               	btfss	status,0,c
  8936  005E92  EF4D  F02F         	goto	u5801
  8937  005E96  EF4F  F02F         	goto	u5800
  8938  005E9A                     u5801:
  8939  005E9A  EF51  F02F         	goto	l5079
  8940  005E9E                     u5800:
  8941  005E9E  0E00               	movlw	0
  8942  005EA0  6E07               	movwf	_isspace$3159^0,c
  8943  005EA2                     l5079:
  8944  005EA2  C007  F001         	movff	_isspace$3159,?_isspace
  8945  005EA6  6A02               	clrf	(?_isspace+1)^0,c
  8946  005EA8  0012               	return		;funcret
  8947  005EAA                     __end_of_isspace:
  8948                           	callstack 0
  8949                           
  8950 ;; *************** function _isdigit *****************
  8951 ;; Defined at:
  8952 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  c               2    0[COMRAM] int 
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;		None
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  2    0[COMRAM] int 
  8959 ;; Registers used:
  8960 ;;		wreg, status,2, status,0
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8969 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8970 ;;Total ram usage:        6 bytes
  8971 ;; Hardware stack levels used: 1
  8972 ;; This function calls:
  8973 ;;		Nothing
  8974 ;; This function is called by:
  8975 ;;		_vfpfcnvrt
  8976 ;;		_atoi
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text33
  8981  00631C                     __ptext33:
  8982                           	callstack 0
  8983  00631C                     _isdigit:
  8984                           	callstack 26
  8985  00631C  0ED0               	movlw	208
  8986  00631E  6E03               	movwf	??_isdigit^0,c
  8987  006320  0EFF               	movlw	255
  8988  006322  6E04               	movwf	(??_isdigit+1)^0,c
  8989  006324  C001  F005         	movff	isdigit@c,??_isdigit+2
  8990  006328  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8991  00632C  5003               	movf	??_isdigit^0,w,c
  8992  00632E  2605               	addwf	(??_isdigit+2)^0,f,c
  8993  006330  5004               	movf	(??_isdigit+1)^0,w,c
  8994  006332  2206               	addwfc	(??_isdigit+3)^0,f,c
  8995  006334  5006               	movf	(??_isdigit+3)^0,w,c
  8996  006336  E10A               	bnz	u5770
  8997  006338  0E0A               	movlw	10
  8998  00633A  5C05               	subwf	(??_isdigit+2)^0,w,c
  8999  00633C  A0D8               	btfss	status,0,c
  9000  00633E  EFA3  F031         	goto	u5771
  9001  006342  EFA6  F031         	goto	u5770
  9002  006346                     u5771:
  9003  006346  0E01               	movlw	1
  9004  006348  EFA7  F031         	goto	u5780
  9005  00634C                     u5770:
  9006  00634C  0E00               	movlw	0
  9007  00634E                     u5780:
  9008  00634E  6E01               	movwf	?_isdigit^0,c
  9009  006350  6A02               	clrf	(?_isdigit+1)^0,c
  9010  006352  0012               	return		;funcret
  9011  006354                     __end_of_isdigit:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function _sendStringSerial4 *****************
  9015 ;; Defined at:
  9016 ;;		line 46 in file "serial_comm.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  string          2    1[COMRAM] PTR unsigned char 
  9019 ;;		 -> colourclick_testing@buf(40), colourcards_testingRGBC@buf(30), 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;		None
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  1    wreg      void 
  9024 ;; Registers used:
  9025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9035 ;;Total ram usage:        2 bytes
  9036 ;; Hardware stack levels used: 1
  9037 ;; Hardware stack levels required when called: 1
  9038 ;; This function calls:
  9039 ;;		_sendCharSerial4
  9040 ;; This function is called by:
  9041 ;;		_colourcards_testingRGBC
  9042 ;;		_colourclick_testing
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text34
  9047  006354                     __ptext34:
  9048                           	callstack 0
  9049  006354                     _sendStringSerial4:
  9050                           	callstack 28
  9051  006354                     
  9052                           ;serial_comm.c: 48:     while (*string != 0) {
  9053  006354  EFB5  F031         	goto	l6001
  9054  006358                     l5997:
  9055                           
  9056                           ;serial_comm.c: 49:         sendCharSerial4(*string++);
  9057  006358  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9058  00635C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9059  006360  50DF               	movf	indf2,w,c
  9060  006362  EC4C  F032         	call	_sendCharSerial4
  9061  006366  4A02               	infsnz	sendStringSerial4@string^0,f,c
  9062  006368  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  9063  00636A                     l6001:
  9064                           
  9065                           ;serial_comm.c: 48:     while (*string != 0) {
  9066  00636A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9067  00636E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9068  006372  50DF               	movf	indf2,w,c
  9069  006374  A4D8               	btfss	status,2,c
  9070  006376  EFBF  F031         	goto	u7351
  9071  00637A  EFC1  F031         	goto	u7350
  9072  00637E                     u7351:
  9073  00637E  EFAC  F031         	goto	l5997
  9074  006382                     u7350:
  9075  006382  0012               	return		;funcret
  9076  006384                     __end_of_sendStringSerial4:
  9077                           	callstack 0
  9078                           
  9079 ;; *************** function _sendCharSerial4 *****************
  9080 ;; Defined at:
  9081 ;;		line 37 in file "serial_comm.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;  charToSend      1    wreg     unsigned char 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;  charToSend      1    0[COMRAM] unsigned char 
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      void 
  9088 ;; Registers used:
  9089 ;;		wreg
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9099 ;;Total ram usage:        1 bytes
  9100 ;; Hardware stack levels used: 1
  9101 ;; This function calls:
  9102 ;;		Nothing
  9103 ;; This function is called by:
  9104 ;;		_sendStringSerial4
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           	psect	text35
  9109  006498                     __ptext35:
  9110                           	callstack 0
  9111  006498                     _sendCharSerial4:
  9112                           	callstack 28
  9113                           
  9114                           ;incstack = 0
  9115                           ;sendCharSerial4@charToSend stored from wreg
  9116  006498  6E01               	movwf	sendCharSerial4@charToSend^0,c
  9117  00649A                     l467:
  9118  00649A  010E               	movlb	14	; () banked
  9119  00649C  A537               	btfss	55,2,b	;volatile
  9120  00649E  EF53  F032         	goto	u7081
  9121  0064A2  EF55  F032         	goto	u7080
  9122  0064A6                     u7081:
  9123  0064A6  EF4D  F032         	goto	l467
  9124  0064AA                     u7080:
  9125  0064AA                     
  9126                           ; BSR set to: 14
  9127                           ;serial_comm.c: 39:     TX4REG = charToSend;
  9128  0064AA  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9129  0064AE                     
  9130                           ; BSR set to: 14
  9131  0064AE  0012               	return		;funcret
  9132  0064B0                     __end_of_sendCharSerial4:
  9133                           	callstack 0
  9134                           
  9135 ;; *************** function _colourcards_readRGBC *****************
  9136 ;; Defined at:
  9137 ;;		line 12 in file "colour_cards.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  abs             2   74[COMRAM] PTR struct .
  9140 ;;		 -> main@current(8), 
  9141 ;;  mL              2   76[COMRAM] PTR struct .
  9142 ;;		 -> main@motorL(9), 
  9143 ;;  mR              2   78[COMRAM] PTR struct .
  9144 ;;		 -> main@motorR(9), 
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;  rel            12   82[COMRAM] struct .
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  1    wreg      void 
  9149 ;; Registers used:
  9150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9156 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9157 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9159 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9160 ;;Total ram usage:       20 bytes
  9161 ;; Hardware stack levels used: 1
  9162 ;; Hardware stack levels required when called: 5
  9163 ;; This function calls:
  9164 ;;		___flge
  9165 ;;		_colourcards_normaliseRGBC
  9166 ;;		_colourclick_readRGBC
  9167 ;;		_colourclick_readRGBC2
  9168 ;;		_forward
  9169 ;;		_reverse
  9170 ;;		_stop
  9171 ;;		_turnleft
  9172 ;;		_turnright
  9173 ;; This function is called by:
  9174 ;;		_main
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           	psect	text36
  9179  0023E2                     __ptext36:
  9180                           	callstack 0
  9181  0023E2                     _colourcards_readRGBC:
  9182                           	callstack 25
  9183  0023E2                     
  9184                           ;colour_cards.c: 12: void colourcards_readRGBC(RGBC_val *abs, DC_motor *mL, DC_motor *mR
      +                          );colour_cards.c: 13: {;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
  9185  0023E2  010E               	movlb	14	; () banked
  9186  0023E4  9329               	bcf	41,1,b	;volatile
  9187  0023E6                     
  9188                           ; BSR set to: 14
  9189                           ;colour_cards.c: 18:     RGB_rel rel;;colour_cards.c: 19:     colourclick_readRGBC(abs);
  9190  0023E6  C04B  F00C         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  9191  0023EA  C04C  F00D         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  9192  0023EE  ECD4  F02E         	call	_colourclick_readRGBC	;wreg free
  9193                           
  9194                           ;colour_cards.c: 20:     colourcards_normaliseRGBC(abs, &rel);
  9195  0023F2  C04B  F028         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9196  0023F6  C04C  F029         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9197  0023FA  0E53               	movlw	low colourcards_readRGBC@rel
  9198  0023FC  6E2A               	movwf	colourcards_normaliseRGBC@rel^0,c
  9199  0023FE  0E00               	movlw	high colourcards_readRGBC@rel
  9200  002400  6E2B               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9201  002402  EC6F  F026         	call	_colourcards_normaliseRGBC	;wreg free
  9202  002406                     
  9203                           ;colour_cards.c: 24:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  9204  002406  0E71               	movlw	113
  9205  002408  6E28               	movwf	___flge@ff1^0,c
  9206  00240A  0E3D               	movlw	61
  9207  00240C  6E29               	movwf	(___flge@ff1+1)^0,c
  9208  00240E  0E0A               	movlw	10
  9209  002410  6E2A               	movwf	(___flge@ff1+2)^0,c
  9210  002412  0E3F               	movlw	63
  9211  002414  6E2B               	movwf	(___flge@ff1+3)^0,c
  9212  002416  C053  F02C         	movff	colourcards_readRGBC@rel,___flge@ff2
  9213  00241A  C054  F02D         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9214  00241E  C055  F02E         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9215  002422  C056  F02F         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9216  002426  EC32  F02A         	call	___flge	;wreg free
  9217  00242A  B0D8               	btfsc	status,0,c
  9218  00242C  EF1A  F012         	goto	u7621
  9219  002430  EF1C  F012         	goto	u7620
  9220  002434                     u7621:
  9221  002434  EFB0  F012         	goto	l6207
  9222  002438                     u7620:
  9223  002438  C057  F028         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  9224  00243C  C058  F029         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  9225  002440  C059  F02A         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  9226  002444  C05A  F02B         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  9227  002448  0E48               	movlw	72
  9228  00244A  6E2C               	movwf	___flge@ff2^0,c
  9229  00244C  0EE1               	movlw	225
  9230  00244E  6E2D               	movwf	(___flge@ff2+1)^0,c
  9231  002450  0E7A               	movlw	122
  9232  002452  6E2E               	movwf	(___flge@ff2+2)^0,c
  9233  002454  0E3E               	movlw	62
  9234  002456  6E2F               	movwf	(___flge@ff2+3)^0,c
  9235  002458  EC32  F02A         	call	___flge	;wreg free
  9236  00245C  B0D8               	btfsc	status,0,c
  9237  00245E  EF33  F012         	goto	u7631
  9238  002462  EF35  F012         	goto	u7630
  9239  002466                     u7631:
  9240  002466  EFB0  F012         	goto	l6207
  9241  00246A                     u7630:
  9242  00246A  C05B  F028         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  9243  00246E  C05C  F029         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  9244  002472  C05D  F02A         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  9245  002476  C05E  F02B         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  9246  00247A  0EEC               	movlw	236
  9247  00247C  6E2C               	movwf	___flge@ff2^0,c
  9248  00247E  0E51               	movlw	81
  9249  002480  6E2D               	movwf	(___flge@ff2+1)^0,c
  9250  002482  0E38               	movlw	56
  9251  002484  6E2E               	movwf	(___flge@ff2+2)^0,c
  9252  002486  0E3E               	movlw	62
  9253  002488  6E2F               	movwf	(___flge@ff2+3)^0,c
  9254  00248A  EC32  F02A         	call	___flge	;wreg free
  9255  00248E  B0D8               	btfsc	status,0,c
  9256  002490  EF4C  F012         	goto	u7641
  9257  002494  EF4E  F012         	goto	u7640
  9258  002498                     u7641:
  9259  002498  EFB0  F012         	goto	l6207
  9260  00249C                     u7640:
  9261  00249C                     
  9262                           ;colour_cards.c: 25:         colourclick_readRGBC2(abs, 3);
  9263  00249C  C04B  F00E         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  9264  0024A0  C04C  F00F         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  9265  0024A4  0E03               	movlw	3
  9266  0024A6  6E10               	movwf	colourclick_readRGBC2@mode^0,c
  9267  0024A8  ECDC  F027         	call	_colourclick_readRGBC2	;wreg free
  9268                           
  9269                           ;colour_cards.c: 26:         colourcards_normaliseRGBC(abs, &rel);
  9270  0024AC  C04B  F028         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9271  0024B0  C04C  F029         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9272  0024B4  0E53               	movlw	low colourcards_readRGBC@rel
  9273  0024B6  6E2A               	movwf	colourcards_normaliseRGBC@rel^0,c
  9274  0024B8  0E00               	movlw	high colourcards_readRGBC@rel
  9275  0024BA  6E2B               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9276  0024BC  EC6F  F026         	call	_colourcards_normaliseRGBC	;wreg free
  9277  0024C0                     
  9278                           ;colour_cards.c: 27:         if (rel.B<0.56) {
  9279  0024C0  C05B  F028         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  9280  0024C4  C05C  F029         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  9281  0024C8  C05D  F02A         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  9282  0024CC  C05E  F02B         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  9283  0024D0  0E29               	movlw	41
  9284  0024D2  6E2C               	movwf	___flge@ff2^0,c
  9285  0024D4  0E5C               	movlw	92
  9286  0024D6  6E2D               	movwf	(___flge@ff2+1)^0,c
  9287  0024D8  0E0F               	movlw	15
  9288  0024DA  6E2E               	movwf	(___flge@ff2+2)^0,c
  9289  0024DC  0E3F               	movlw	63
  9290  0024DE  6E2F               	movwf	(___flge@ff2+3)^0,c
  9291  0024E0  EC32  F02A         	call	___flge	;wreg free
  9292  0024E4  B0D8               	btfsc	status,0,c
  9293  0024E6  EF77  F012         	goto	u7651
  9294  0024EA  EF79  F012         	goto	u7650
  9295  0024EE                     u7651:
  9296  0024EE  EF96  F012         	goto	l6203
  9297  0024F2                     u7650:
  9298  0024F2                     
  9299                           ;colour_cards.c: 29:             turnright(mL, mR, 135);
  9300  0024F2  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  9301  0024F6  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9302  0024FA  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  9303  0024FE  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9304  002502  0E00               	movlw	0
  9305  002504  6E4A               	movwf	(turnright@deg+1)^0,c
  9306  002506  0E87               	movlw	135
  9307  002508  6E49               	movwf	turnright@deg^0,c
  9308  00250A  EC7D  F02F         	call	_turnright	;wreg free
  9309                           
  9310                           ;colour_cards.c: 30:             stop(mL, mR);
  9311  00250E  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9312  002512  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9313  002516  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9314  00251A  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9315  00251E  EC09  F02E         	call	_stop	;wreg free
  9316  002522                     l6201:
  9317                           
  9318                           ;colour_cards.c: 31:             unknowncard_flag = 0;
  9319  002522  0E00               	movlw	0
  9320  002524  0100               	movlb	0	; () banked
  9321  002526  6FF7               	movwf	_unknowncard_flag& (0+255),b	;volatile
  9322                           
  9323                           ;colour_cards.c: 32:         } else {
  9324  002528  EFBA  F015         	goto	l6307
  9325  00252C                     l6203:
  9326                           
  9327                           ;colour_cards.c: 34:             turnright(mL, mR, 90);
  9328  00252C  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  9329  002530  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9330  002534  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  9331  002538  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9332  00253C  0E00               	movlw	0
  9333  00253E  6E4A               	movwf	(turnright@deg+1)^0,c
  9334  002540  0E5A               	movlw	90
  9335  002542  6E49               	movwf	turnright@deg^0,c
  9336  002544  EC7D  F02F         	call	_turnright	;wreg free
  9337                           
  9338                           ;colour_cards.c: 35:             stop(mL, mR);
  9339  002548  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9340  00254C  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9341  002550  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9342  002554  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9343  002558  EC09  F02E         	call	_stop	;wreg free
  9344  00255C  EF91  F012         	goto	l6201
  9345  002560                     l6207:
  9346  002560  C053  F028         	movff	colourcards_readRGBC@rel,___flge@ff1
  9347  002564  C054  F029         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9348  002568  C055  F02A         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9349  00256C  C056  F02B         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9350  002570  0EAE               	movlw	174
  9351  002572  6E2C               	movwf	___flge@ff2^0,c
  9352  002574  0E47               	movlw	71
  9353  002576  6E2D               	movwf	(___flge@ff2+1)^0,c
  9354  002578  0EE1               	movlw	225
  9355  00257A  6E2E               	movwf	(___flge@ff2+2)^0,c
  9356  00257C  0E3E               	movlw	62
  9357  00257E  6E2F               	movwf	(___flge@ff2+3)^0,c
  9358  002580  EC32  F02A         	call	___flge	;wreg free
  9359  002584  B0D8               	btfsc	status,0,c
  9360  002586  EFC7  F012         	goto	u7661
  9361  00258A  EFC9  F012         	goto	u7660
  9362  00258E                     u7661:
  9363  00258E  EFBF  F013         	goto	l6235
  9364  002592                     u7660:
  9365  002592  0E9A               	movlw	154
  9366  002594  6E28               	movwf	___flge@ff1^0,c
  9367  002596  0E99               	movlw	153
  9368  002598  6E29               	movwf	(___flge@ff1+1)^0,c
  9369  00259A  0E99               	movlw	153
  9370  00259C  6E2A               	movwf	(___flge@ff1+2)^0,c
  9371  00259E  0E3E               	movlw	62
  9372  0025A0  6E2B               	movwf	(___flge@ff1+3)^0,c
  9373  0025A2  C057  F02C         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9374  0025A6  C058  F02D         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9375  0025AA  C059  F02E         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9376  0025AE  C05A  F02F         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9377  0025B2  EC32  F02A         	call	___flge	;wreg free
  9378  0025B6  B0D8               	btfsc	status,0,c
  9379  0025B8  EFE0  F012         	goto	u7671
  9380  0025BC  EFE2  F012         	goto	u7670
  9381  0025C0                     u7671:
  9382  0025C0  EFBF  F013         	goto	l6235
  9383  0025C4                     u7670:
  9384  0025C4  0E14               	movlw	20
  9385  0025C6  6E28               	movwf	___flge@ff1^0,c
  9386  0025C8  0EAE               	movlw	174
  9387  0025CA  6E29               	movwf	(___flge@ff1+1)^0,c
  9388  0025CC  0E47               	movlw	71
  9389  0025CE  6E2A               	movwf	(___flge@ff1+2)^0,c
  9390  0025D0  0E3E               	movlw	62
  9391  0025D2  6E2B               	movwf	(___flge@ff1+3)^0,c
  9392  0025D4  C05B  F02C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9393  0025D8  C05C  F02D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9394  0025DC  C05D  F02E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9395  0025E0  C05E  F02F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9396  0025E4  EC32  F02A         	call	___flge	;wreg free
  9397  0025E8  B0D8               	btfsc	status,0,c
  9398  0025EA  EFF9  F012         	goto	u7681
  9399  0025EE  EFFB  F012         	goto	u7680
  9400  0025F2                     u7681:
  9401  0025F2  EFBF  F013         	goto	l6235
  9402  0025F6                     u7680:
  9403  0025F6                     
  9404                           ;colour_cards.c: 41:         colourclick_readRGBC2(abs, 3);
  9405  0025F6  C04B  F00E         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  9406  0025FA  C04C  F00F         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  9407  0025FE  0E03               	movlw	3
  9408  002600  6E10               	movwf	colourclick_readRGBC2@mode^0,c
  9409  002602  ECDC  F027         	call	_colourclick_readRGBC2	;wreg free
  9410                           
  9411                           ;colour_cards.c: 42:         colourcards_normaliseRGBC(abs, &rel);
  9412  002606  C04B  F028         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9413  00260A  C04C  F029         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9414  00260E  0E53               	movlw	low colourcards_readRGBC@rel
  9415  002610  6E2A               	movwf	colourcards_normaliseRGBC@rel^0,c
  9416  002612  0E00               	movlw	high colourcards_readRGBC@rel
  9417  002614  6E2B               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9418  002616  EC6F  F026         	call	_colourcards_normaliseRGBC	;wreg free
  9419  00261A                     
  9420                           ;colour_cards.c: 43:         if ((rel.R<0.65) && (rel.B>0.67)) {
  9421  00261A  C053  F028         	movff	colourcards_readRGBC@rel,___flge@ff1
  9422  00261E  C054  F029         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9423  002622  C055  F02A         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9424  002626  C056  F02B         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9425  00262A  0E66               	movlw	102
  9426  00262C  6E2C               	movwf	___flge@ff2^0,c
  9427  00262E  0E66               	movlw	102
  9428  002630  6E2D               	movwf	(___flge@ff2+1)^0,c
  9429  002632  0E26               	movlw	38
  9430  002634  6E2E               	movwf	(___flge@ff2+2)^0,c
  9431  002636  0E3F               	movlw	63
  9432  002638  6E2F               	movwf	(___flge@ff2+3)^0,c
  9433  00263A  EC32  F02A         	call	___flge	;wreg free
  9434  00263E  B0D8               	btfsc	status,0,c
  9435  002640  EF24  F013         	goto	u7691
  9436  002644  EF26  F013         	goto	u7690
  9437  002648                     u7691:
  9438  002648  EF59  F013         	goto	l6223
  9439  00264C                     u7690:
  9440  00264C  0E1F               	movlw	31
  9441  00264E  6E28               	movwf	___flge@ff1^0,c
  9442  002650  0E85               	movlw	133
  9443  002652  6E29               	movwf	(___flge@ff1+1)^0,c
  9444  002654  0E2B               	movlw	43
  9445  002656  6E2A               	movwf	(___flge@ff1+2)^0,c
  9446  002658  0E3F               	movlw	63
  9447  00265A  6E2B               	movwf	(___flge@ff1+3)^0,c
  9448  00265C  C05B  F02C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9449  002660  C05C  F02D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9450  002664  C05D  F02E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9451  002668  C05E  F02F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9452  00266C  EC32  F02A         	call	___flge	;wreg free
  9453  002670  B0D8               	btfsc	status,0,c
  9454  002672  EF3D  F013         	goto	u7701
  9455  002676  EF3F  F013         	goto	u7700
  9456  00267A                     u7701:
  9457  00267A  EF59  F013         	goto	l6223
  9458  00267E                     u7700:
  9459  00267E                     
  9460                           ;colour_cards.c: 45:             turnright(mL, mR, 180);
  9461  00267E  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  9462  002682  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9463  002686  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  9464  00268A  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9465  00268E  0E00               	movlw	0
  9466  002690  6E4A               	movwf	(turnright@deg+1)^0,c
  9467  002692  0EB4               	movlw	180
  9468  002694  6E49               	movwf	turnright@deg^0,c
  9469  002696  EC7D  F02F         	call	_turnright	;wreg free
  9470                           
  9471                           ;colour_cards.c: 46:             stop(mL, mR);
  9472  00269A  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9473  00269E  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9474  0026A2  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9475  0026A6  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9476  0026AA  EC09  F02E         	call	_stop	;wreg free
  9477  0026AE  EF91  F012         	goto	l6201
  9478  0026B2                     l6223:
  9479  0026B2  C053  F028         	movff	colourcards_readRGBC@rel,___flge@ff1
  9480  0026B6  C054  F029         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9481  0026BA  C055  F02A         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9482  0026BE  C056  F02B         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9483  0026C2  0EEC               	movlw	236
  9484  0026C4  6E2C               	movwf	___flge@ff2^0,c
  9485  0026C6  0E51               	movlw	81
  9486  0026C8  6E2D               	movwf	(___flge@ff2+1)^0,c
  9487  0026CA  0EB8               	movlw	184
  9488  0026CC  6E2E               	movwf	(___flge@ff2+2)^0,c
  9489  0026CE  0E3D               	movlw	61
  9490  0026D0  6E2F               	movwf	(___flge@ff2+3)^0,c
  9491  0026D2  EC32  F02A         	call	___flge	;wreg free
  9492  0026D6  B0D8               	btfsc	status,0,c
  9493  0026D8  EF70  F013         	goto	u7711
  9494  0026DC  EF72  F013         	goto	u7710
  9495  0026E0                     u7711:
  9496  0026E0  EFA5  F013         	goto	l6231
  9497  0026E4                     u7710:
  9498  0026E4  0E52               	movlw	82
  9499  0026E6  6E28               	movwf	___flge@ff1^0,c
  9500  0026E8  0EB8               	movlw	184
  9501  0026EA  6E29               	movwf	(___flge@ff1+1)^0,c
  9502  0026EC  0E1E               	movlw	30
  9503  0026EE  6E2A               	movwf	(___flge@ff1+2)^0,c
  9504  0026F0  0E3F               	movlw	63
  9505  0026F2  6E2B               	movwf	(___flge@ff1+3)^0,c
  9506  0026F4  C05B  F02C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9507  0026F8  C05C  F02D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9508  0026FC  C05D  F02E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9509  002700  C05E  F02F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9510  002704  EC32  F02A         	call	___flge	;wreg free
  9511  002708  B0D8               	btfsc	status,0,c
  9512  00270A  EF89  F013         	goto	u7721
  9513  00270E  EF8B  F013         	goto	u7720
  9514  002712                     u7721:
  9515  002712  EFA5  F013         	goto	l6231
  9516  002716                     u7720:
  9517  002716                     
  9518                           ;colour_cards.c: 50:             turnleft(mL, mR, 90);
  9519  002716  C04D  F045         	movff	colourcards_readRGBC@mL,turnleft@mL
  9520  00271A  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9521  00271E  C04F  F047         	movff	colourcards_readRGBC@mR,turnleft@mR
  9522  002722  C050  F048         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9523  002726  0E00               	movlw	0
  9524  002728  6E4A               	movwf	(turnleft@deg+1)^0,c
  9525  00272A  0E5A               	movlw	90
  9526  00272C  6E49               	movwf	turnleft@deg^0,c
  9527  00272E  ECA5  F02F         	call	_turnleft	;wreg free
  9528                           
  9529                           ;colour_cards.c: 51:             stop(mL, mR);
  9530  002732  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9531  002736  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9532  00273A  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9533  00273E  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9534  002742  EC09  F02E         	call	_stop	;wreg free
  9535  002746  EF91  F012         	goto	l6201
  9536  00274A                     l6231:
  9537                           
  9538                           ;colour_cards.c: 55:             turnleft(mL, mR, 135);
  9539  00274A  C04D  F045         	movff	colourcards_readRGBC@mL,turnleft@mL
  9540  00274E  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9541  002752  C04F  F047         	movff	colourcards_readRGBC@mR,turnleft@mR
  9542  002756  C050  F048         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9543  00275A  0E00               	movlw	0
  9544  00275C  6E4A               	movwf	(turnleft@deg+1)^0,c
  9545  00275E  0E87               	movlw	135
  9546  002760  6E49               	movwf	turnleft@deg^0,c
  9547  002762  ECA5  F02F         	call	_turnleft	;wreg free
  9548                           
  9549                           ;colour_cards.c: 56:             stop(mL, mR);
  9550  002766  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9551  00276A  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9552  00276E  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9553  002772  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9554  002776  EC09  F02E         	call	_stop	;wreg free
  9555  00277A  EF91  F012         	goto	l6201
  9556  00277E                     l6235:
  9557  00277E  0E48               	movlw	72
  9558  002780  6E28               	movwf	___flge@ff1^0,c
  9559  002782  0EE1               	movlw	225
  9560  002784  6E29               	movwf	(___flge@ff1+1)^0,c
  9561  002786  0EFA               	movlw	250
  9562  002788  6E2A               	movwf	(___flge@ff1+2)^0,c
  9563  00278A  0E3E               	movlw	62
  9564  00278C  6E2B               	movwf	(___flge@ff1+3)^0,c
  9565  00278E  C053  F02C         	movff	colourcards_readRGBC@rel,___flge@ff2
  9566  002792  C054  F02D         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9567  002796  C055  F02E         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9568  00279A  C056  F02F         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9569  00279E  EC32  F02A         	call	___flge	;wreg free
  9570  0027A2  B0D8               	btfsc	status,0,c
  9571  0027A4  EFD6  F013         	goto	u7731
  9572  0027A8  EFD8  F013         	goto	u7730
  9573  0027AC                     u7731:
  9574  0027AC  EF44  F014         	goto	l6251
  9575  0027B0                     u7730:
  9576  0027B0  0E85               	movlw	133
  9577  0027B2  6E28               	movwf	___flge@ff1^0,c
  9578  0027B4  0EEB               	movlw	235
  9579  0027B6  6E29               	movwf	(___flge@ff1+1)^0,c
  9580  0027B8  0E91               	movlw	145
  9581  0027BA  6E2A               	movwf	(___flge@ff1+2)^0,c
  9582  0027BC  0E3E               	movlw	62
  9583  0027BE  6E2B               	movwf	(___flge@ff1+3)^0,c
  9584  0027C0  C057  F02C         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9585  0027C4  C058  F02D         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9586  0027C8  C059  F02E         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9587  0027CC  C05A  F02F         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9588  0027D0  EC32  F02A         	call	___flge	;wreg free
  9589  0027D4  B0D8               	btfsc	status,0,c
  9590  0027D6  EFEF  F013         	goto	u7741
  9591  0027DA  EFF1  F013         	goto	u7740
  9592  0027DE                     u7741:
  9593  0027DE  EF44  F014         	goto	l6251
  9594  0027E2                     u7740:
  9595  0027E2  0EEC               	movlw	236
  9596  0027E4  6E28               	movwf	___flge@ff1^0,c
  9597  0027E6  0E51               	movlw	81
  9598  0027E8  6E29               	movwf	(___flge@ff1+1)^0,c
  9599  0027EA  0E38               	movlw	56
  9600  0027EC  6E2A               	movwf	(___flge@ff1+2)^0,c
  9601  0027EE  0E3E               	movlw	62
  9602  0027F0  6E2B               	movwf	(___flge@ff1+3)^0,c
  9603  0027F2  C05B  F02C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9604  0027F6  C05C  F02D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9605  0027FA  C05D  F02E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9606  0027FE  C05E  F02F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9607  002802  EC32  F02A         	call	___flge	;wreg free
  9608  002806  B0D8               	btfsc	status,0,c
  9609  002808  EF08  F014         	goto	u7751
  9610  00280C  EF0A  F014         	goto	u7750
  9611  002810                     u7751:
  9612  002810  EF44  F014         	goto	l6251
  9613  002814                     u7750:
  9614  002814                     
  9615                           ;colour_cards.c: 63:         reverse(mL, mR);
  9616  002814  C04D  F01A         	movff	colourcards_readRGBC@mL,reverse@mL
  9617  002818  C04E  F01B         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  9618  00281C  C04F  F01C         	movff	colourcards_readRGBC@mR,reverse@mR
  9619  002820  C050  F01D         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  9620  002824  EC7B  F02D         	call	_reverse	;wreg free
  9621                           
  9622                           ;colour_cards.c: 64:         stop(mL, mR);
  9623  002828  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9624  00282C  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9625  002830  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9626  002834  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9627  002838  EC09  F02E         	call	_stop	;wreg free
  9628  00283C                     
  9629                           ;colour_cards.c: 65:         _delay((unsigned long)((100)*(64000000/4000.0)));
  9630  00283C  0E09               	movlw	9
  9631  00283E  6E52               	movwf	(??_colourcards_readRGBC+1)^0,c
  9632  002840  0E1E               	movlw	30
  9633  002842  6E51               	movwf	??_colourcards_readRGBC^0,c
  9634  002844  0EE4               	movlw	228
  9635  002846                     u8367:
  9636  002846  2EE8               	decfsz	wreg,f,c
  9637  002848  D7FE               	bra	u8367
  9638  00284A  2E51               	decfsz	??_colourcards_readRGBC^0,f,c
  9639  00284C  D7FC               	bra	u8367
  9640  00284E  2E52               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9641  002850  D7FA               	bra	u8367
  9642  002852  D000               	nop2	
  9643  002854                     
  9644                           ;colour_cards.c: 66:         turnright(mL, mR, 90);
  9645  002854  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  9646  002858  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9647  00285C  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  9648  002860  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9649  002864  0E00               	movlw	0
  9650  002866  6E4A               	movwf	(turnright@deg+1)^0,c
  9651  002868  0E5A               	movlw	90
  9652  00286A  6E49               	movwf	turnright@deg^0,c
  9653  00286C  EC7D  F02F         	call	_turnright	;wreg free
  9654  002870                     l6247:
  9655                           
  9656                           ;colour_cards.c: 67:         stop(mL, mR);
  9657  002870  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9658  002874  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9659  002878  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9660  00287C  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9661  002880  EC09  F02E         	call	_stop	;wreg free
  9662  002884  EF91  F012         	goto	l6201
  9663  002888                     l6251:
  9664  002888  0E48               	movlw	72
  9665  00288A  6E28               	movwf	___flge@ff1^0,c
  9666  00288C  0EE1               	movlw	225
  9667  00288E  6E29               	movwf	(___flge@ff1+1)^0,c
  9668  002890  0EFA               	movlw	250
  9669  002892  6E2A               	movwf	(___flge@ff1+2)^0,c
  9670  002894  0E3E               	movlw	62
  9671  002896  6E2B               	movwf	(___flge@ff1+3)^0,c
  9672  002898  C053  F02C         	movff	colourcards_readRGBC@rel,___flge@ff2
  9673  00289C  C054  F02D         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9674  0028A0  C055  F02E         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9675  0028A4  C056  F02F         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9676  0028A8  EC32  F02A         	call	___flge	;wreg free
  9677  0028AC  B0D8               	btfsc	status,0,c
  9678  0028AE  EF5B  F014         	goto	u7761
  9679  0028B2  EF5D  F014         	goto	u7760
  9680  0028B6                     u7761:
  9681  0028B6  EFBF  F014         	goto	l6267
  9682  0028BA                     u7760:
  9683  0028BA  C057  F028         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  9684  0028BE  C058  F029         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  9685  0028C2  C059  F02A         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  9686  0028C6  C05A  F02B         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  9687  0028CA  0ECD               	movlw	205
  9688  0028CC  6E2C               	movwf	___flge@ff2^0,c
  9689  0028CE  0ECC               	movlw	204
  9690  0028D0  6E2D               	movwf	(___flge@ff2+1)^0,c
  9691  0028D2  0E8C               	movlw	140
  9692  0028D4  6E2E               	movwf	(___flge@ff2+2)^0,c
  9693  0028D6  0E3E               	movlw	62
  9694  0028D8  6E2F               	movwf	(___flge@ff2+3)^0,c
  9695  0028DA  EC32  F02A         	call	___flge	;wreg free
  9696  0028DE  B0D8               	btfsc	status,0,c
  9697  0028E0  EF74  F014         	goto	u7771
  9698  0028E4  EF76  F014         	goto	u7770
  9699  0028E8                     u7771:
  9700  0028E8  EFBF  F014         	goto	l6267
  9701  0028EC                     u7770:
  9702  0028EC  0E14               	movlw	20
  9703  0028EE  6E28               	movwf	___flge@ff1^0,c
  9704  0028F0  0EAE               	movlw	174
  9705  0028F2  6E29               	movwf	(___flge@ff1+1)^0,c
  9706  0028F4  0E47               	movlw	71
  9707  0028F6  6E2A               	movwf	(___flge@ff1+2)^0,c
  9708  0028F8  0E3E               	movlw	62
  9709  0028FA  6E2B               	movwf	(___flge@ff1+3)^0,c
  9710  0028FC  C05B  F02C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9711  002900  C05C  F02D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9712  002904  C05D  F02E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9713  002908  C05E  F02F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9714  00290C  EC32  F02A         	call	___flge	;wreg free
  9715  002910  B0D8               	btfsc	status,0,c
  9716  002912  EF8D  F014         	goto	u7781
  9717  002916  EF8F  F014         	goto	u7780
  9718  00291A                     u7781:
  9719  00291A  EFBF  F014         	goto	l6267
  9720  00291E                     u7780:
  9721  00291E                     
  9722                           ;colour_cards.c: 72:         reverse(mL, mR);
  9723  00291E  C04D  F01A         	movff	colourcards_readRGBC@mL,reverse@mL
  9724  002922  C04E  F01B         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  9725  002926  C04F  F01C         	movff	colourcards_readRGBC@mR,reverse@mR
  9726  00292A  C050  F01D         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  9727  00292E  EC7B  F02D         	call	_reverse	;wreg free
  9728                           
  9729                           ;colour_cards.c: 73:         stop(mL, mR);
  9730  002932  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9731  002936  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9732  00293A  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9733  00293E  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9734  002942  EC09  F02E         	call	_stop	;wreg free
  9735  002946                     
  9736                           ;colour_cards.c: 74:         _delay((unsigned long)((100)*(64000000/4000.0)));
  9737  002946  0E09               	movlw	9
  9738  002948  6E52               	movwf	(??_colourcards_readRGBC+1)^0,c
  9739  00294A  0E1E               	movlw	30
  9740  00294C  6E51               	movwf	??_colourcards_readRGBC^0,c
  9741  00294E  0EE4               	movlw	228
  9742  002950                     u8377:
  9743  002950  2EE8               	decfsz	wreg,f,c
  9744  002952  D7FE               	bra	u8377
  9745  002954  2E51               	decfsz	??_colourcards_readRGBC^0,f,c
  9746  002956  D7FC               	bra	u8377
  9747  002958  2E52               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9748  00295A  D7FA               	bra	u8377
  9749  00295C  D000               	nop2	
  9750  00295E                     
  9751                           ;colour_cards.c: 75:         turnleft(mL, mR, 90);
  9752  00295E  C04D  F045         	movff	colourcards_readRGBC@mL,turnleft@mL
  9753  002962  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9754  002966  C04F  F047         	movff	colourcards_readRGBC@mR,turnleft@mR
  9755  00296A  C050  F048         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9756  00296E  0E00               	movlw	0
  9757  002970  6E4A               	movwf	(turnleft@deg+1)^0,c
  9758  002972  0E5A               	movlw	90
  9759  002974  6E49               	movwf	turnleft@deg^0,c
  9760  002976  ECA5  F02F         	call	_turnleft	;wreg free
  9761  00297A  EF38  F014         	goto	l6247
  9762  00297E                     l6267:
  9763  00297E  C053  F028         	movff	colourcards_readRGBC@rel,___flge@ff1
  9764  002982  C054  F029         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9765  002986  C055  F02A         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9766  00298A  C056  F02B         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9767  00298E  0E1F               	movlw	31
  9768  002990  6E2C               	movwf	___flge@ff2^0,c
  9769  002992  0E85               	movlw	133
  9770  002994  6E2D               	movwf	(___flge@ff2+1)^0,c
  9771  002996  0EEB               	movlw	235
  9772  002998  6E2E               	movwf	(___flge@ff2+2)^0,c
  9773  00299A  0E3E               	movlw	62
  9774  00299C  6E2F               	movwf	(___flge@ff2+3)^0,c
  9775  00299E  EC32  F02A         	call	___flge	;wreg free
  9776  0029A2  B0D8               	btfsc	status,0,c
  9777  0029A4  EFD6  F014         	goto	u7791
  9778  0029A8  EFD8  F014         	goto	u7790
  9779  0029AC                     u7791:
  9780  0029AC  EF29  F015         	goto	l6279
  9781  0029B0                     u7790:
  9782  0029B0  0E3D               	movlw	61
  9783  0029B2  6E28               	movwf	___flge@ff1^0,c
  9784  0029B4  0E0A               	movlw	10
  9785  0029B6  6E29               	movwf	(___flge@ff1+1)^0,c
  9786  0029B8  0E97               	movlw	151
  9787  0029BA  6E2A               	movwf	(___flge@ff1+2)^0,c
  9788  0029BC  0E3E               	movlw	62
  9789  0029BE  6E2B               	movwf	(___flge@ff1+3)^0,c
  9790  0029C0  C057  F02C         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9791  0029C4  C058  F02D         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9792  0029C8  C059  F02E         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9793  0029CC  C05A  F02F         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9794  0029D0  EC32  F02A         	call	___flge	;wreg free
  9795  0029D4  B0D8               	btfsc	status,0,c
  9796  0029D6  EFEF  F014         	goto	u7801
  9797  0029DA  EFF1  F014         	goto	u7800
  9798  0029DE                     u7801:
  9799  0029DE  EF29  F015         	goto	l6279
  9800  0029E2                     u7800:
  9801  0029E2  0E3D               	movlw	61
  9802  0029E4  6E28               	movwf	___flge@ff1^0,c
  9803  0029E6  0E0A               	movlw	10
  9804  0029E8  6E29               	movwf	(___flge@ff1+1)^0,c
  9805  0029EA  0E57               	movlw	87
  9806  0029EC  6E2A               	movwf	(___flge@ff1+2)^0,c
  9807  0029EE  0E3E               	movlw	62
  9808  0029F0  6E2B               	movwf	(___flge@ff1+3)^0,c
  9809  0029F2  C05B  F02C         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9810  0029F6  C05C  F02D         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9811  0029FA  C05D  F02E         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9812  0029FE  C05E  F02F         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9813  002A02  EC32  F02A         	call	___flge	;wreg free
  9814  002A06  B0D8               	btfsc	status,0,c
  9815  002A08  EF08  F015         	goto	u7811
  9816  002A0C  EF0A  F015         	goto	u7810
  9817  002A10                     u7811:
  9818  002A10  EF29  F015         	goto	l6279
  9819  002A14                     u7810:
  9820  002A14                     
  9821                           ;colour_cards.c: 81:         turnright(mL, mR, 180);
  9822  002A14  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  9823  002A18  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9824  002A1C  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  9825  002A20  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9826  002A24  0E00               	movlw	0
  9827  002A26  6E4A               	movwf	(turnright@deg+1)^0,c
  9828  002A28  0EB4               	movlw	180
  9829  002A2A  6E49               	movwf	turnright@deg^0,c
  9830  002A2C  EC7D  F02F         	call	_turnright	;wreg free
  9831                           
  9832                           ;colour_cards.c: 82:         stop(mL, mR);
  9833  002A30  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9834  002A34  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9835  002A38  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9836  002A3C  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9837  002A40  EC09  F02E         	call	_stop	;wreg free
  9838  002A44                     
  9839                           ;colour_cards.c: 83:         unknowncard_flag = 0;
  9840  002A44  0E00               	movlw	0
  9841  002A46  0100               	movlb	0	; () banked
  9842  002A48  6FF7               	movwf	_unknowncard_flag& (0+255),b	;volatile
  9843  002A4A                     
  9844                           ; BSR set to: 0
  9845                           ;colour_cards.c: 84:         returnhome_flag = 1;
  9846  002A4A  0E01               	movlw	1
  9847  002A4C  6FF6               	movwf	_returnhome_flag& (0+255),b	;volatile
  9848                           
  9849                           ;colour_cards.c: 86:     } else {
  9850  002A4E  EFBA  F015         	goto	l6307
  9851  002A52                     l6279:
  9852                           
  9853                           ;colour_cards.c: 88:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  9854  002A52  0E52               	movlw	82
  9855  002A54  6E52               	movwf	(??_colourcards_readRGBC+1)^0,c
  9856  002A56  0E2B               	movlw	43
  9857  002A58  6E51               	movwf	??_colourcards_readRGBC^0,c
  9858  002A5A  0E00               	movlw	0
  9859  002A5C                     u8387:
  9860  002A5C  2EE8               	decfsz	wreg,f,c
  9861  002A5E  D7FE               	bra	u8387
  9862  002A60  2E51               	decfsz	??_colourcards_readRGBC^0,f,c
  9863  002A62  D7FC               	bra	u8387
  9864  002A64  2E52               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9865  002A66  D7FA               	bra	u8387
  9866  002A68  D000               	nop2	
  9867  002A6A                     
  9868                           ;colour_cards.c: 89:         forward(mL, mR);
  9869  002A6A  C04D  F01A         	movff	colourcards_readRGBC@mL,forward@mL
  9870  002A6E  C04E  F01B         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  9871  002A72  C04F  F01C         	movff	colourcards_readRGBC@mR,forward@mR
  9872  002A76  C050  F01D         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  9873  002A7A  ECC2  F02D         	call	_forward	;wreg free
  9874  002A7E                     
  9875                           ;colour_cards.c: 90:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9876  002A7E  0ED0               	movlw	208
  9877  002A80  6E51               	movwf	??_colourcards_readRGBC^0,c
  9878  002A82  0ECA               	movlw	202
  9879  002A84                     u8397:
  9880  002A84  2EE8               	decfsz	wreg,f,c
  9881  002A86  D7FE               	bra	u8397
  9882  002A88  2E51               	decfsz	??_colourcards_readRGBC^0,f,c
  9883  002A8A  D7FC               	bra	u8397
  9884                           
  9885                           ;colour_cards.c: 91:         stop(mL, mR);
  9886  002A8C  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9887  002A90  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9888  002A94  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9889  002A98  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9890  002A9C  EC09  F02E         	call	_stop	;wreg free
  9891  002AA0                     
  9892                           ;colour_cards.c: 92:         colourclick_readRGBC(abs);
  9893  002AA0  C04B  F00C         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  9894  002AA4  C04C  F00D         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  9895  002AA8  ECD4  F02E         	call	_colourclick_readRGBC	;wreg free
  9896  002AAC                     
  9897                           ;colour_cards.c: 93:         if ((abs->C < interrupts_lowerbound) || (abs->C > interrupt
      +                          s_upperbound)) {
  9898  002AAC  EE20 F006          	lfsr	2,6
  9899  002AB0  504B               	movf	colourcards_readRGBC@abs^0,w,c
  9900  002AB2  26D9               	addwf	fsr2l,f,c
  9901  002AB4  504C               	movf	(colourcards_readRGBC@abs+1)^0,w,c
  9902  002AB6  22DA               	addwfc	fsr2h,f,c
  9903  002AB8  0100               	movlb	0	; () banked
  9904  002ABA  51F4               	movf	_interrupts_lowerbound& (0+255),w,b	;volatile
  9905  002ABC  5CDE               	subwf	postinc2,w,c
  9906  002ABE  51F5               	movf	(_interrupts_lowerbound+1)& (0+255),w,b	;volatile
  9907  002AC0  58DE               	subwfb	postinc2,w,c
  9908  002AC2  A0D8               	btfss	status,0,c
  9909  002AC4  EF66  F015         	goto	u7821
  9910  002AC8  EF68  F015         	goto	u7820
  9911  002ACC                     u7821:
  9912  002ACC  EF79  F015         	goto	l6291
  9913  002AD0                     u7820:
  9914  002AD0                     
  9915                           ; BSR set to: 0
  9916  002AD0  EE20 F006          	lfsr	2,6
  9917  002AD4  504B               	movf	colourcards_readRGBC@abs^0,w,c
  9918  002AD6  26D9               	addwf	fsr2l,f,c
  9919  002AD8  504C               	movf	(colourcards_readRGBC@abs+1)^0,w,c
  9920  002ADA  22DA               	addwfc	fsr2h,f,c
  9921  002ADC  50DE               	movf	postinc2,w,c
  9922  002ADE  5DFD               	subwf	_interrupts_upperbound& (0+255),w,b	;volatile
  9923  002AE0  50DE               	movf	postinc2,w,c
  9924  002AE2  59FE               	subwfb	(_interrupts_upperbound+1)& (0+255),w,b	;volatile
  9925  002AE4  B0D8               	btfsc	status,0,c
  9926  002AE6  EF77  F015         	goto	u7831
  9927  002AEA  EF79  F015         	goto	u7830
  9928  002AEE                     u7831:
  9929  002AEE  EFAE  F015         	goto	l6303
  9930  002AF2                     u7830:
  9931  002AF2                     l6291:
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;colour_cards.c: 94:             if (unknowncard_flag<3) {
  9935  002AF2  0E03               	movlw	3
  9936  002AF4  61F7               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
  9937  002AF6  EF7F  F015         	goto	u7841
  9938  002AFA  EF81  F015         	goto	u7840
  9939  002AFE                     u7841:
  9940  002AFE  EF87  F015         	goto	l160
  9941  002B02                     u7840:
  9942  002B02                     
  9943                           ; BSR set to: 0
  9944                           ;colour_cards.c: 95:                 PIR0bits.INT1IF = 1;
  9945  002B02  010E               	movlb	14	; () banked
  9946  002B04  8333               	bsf	51,1,b	;volatile
  9947  002B06                     
  9948                           ; BSR set to: 14
  9949                           ;colour_cards.c: 96:                 unknowncard_flag++;
  9950  002B06  0100               	movlb	0	; () banked
  9951  002B08  2BF7               	incf	_unknowncard_flag& (0+255),f,b	;volatile
  9952                           
  9953                           ;colour_cards.c: 97:             } else {
  9954  002B0A  EFBA  F015         	goto	l6307
  9955  002B0E                     l160:
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;colour_cards.c: 98:                 LATHbits.LATH3 = 1;
  9959  002B0E  8680               	bsf	128,3,c	;volatile
  9960  002B10                     
  9961                           ; BSR set to: 0
  9962                           ;colour_cards.c: 99:                 turnright(mL, mR, 180);
  9963  002B10  C04D  F045         	movff	colourcards_readRGBC@mL,turnright@mL
  9964  002B14  C04E  F046         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9965  002B18  C04F  F047         	movff	colourcards_readRGBC@mR,turnright@mR
  9966  002B1C  C050  F048         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9967  002B20  0E00               	movlw	0
  9968  002B22  6E4A               	movwf	(turnright@deg+1)^0,c
  9969  002B24  0EB4               	movlw	180
  9970  002B26  6E49               	movwf	turnright@deg^0,c
  9971  002B28  EC7D  F02F         	call	_turnright	;wreg free
  9972                           
  9973                           ;colour_cards.c: 100:                 stop(mL, mR);
  9974  002B2C  C04D  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9975  002B30  C04E  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9976  002B34  C04F  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9977  002B38  C050  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9978  002B3C  EC09  F02E         	call	_stop	;wreg free
  9979  002B40                     
  9980                           ;colour_cards.c: 101:                 returnhome_flag = !returnhome_flag;
  9981  002B40  0100               	movlb	0	; () banked
  9982  002B42  51F6               	movf	_returnhome_flag& (0+255),w,b	;volatile
  9983  002B44  B4D8               	btfsc	status,2,c
  9984  002B46  EFA7  F015         	goto	u7851
  9985  002B4A  EFAA  F015         	goto	u7850
  9986  002B4E                     u7851:
  9987  002B4E  0E01               	movlw	1
  9988  002B50  EFAB  F015         	goto	u7860
  9989  002B54                     u7850:
  9990  002B54  0E00               	movlw	0
  9991  002B56                     u7860:
  9992  002B56  6FF6               	movwf	_returnhome_flag& (0+255),b	;volatile
  9993  002B58  EF91  F012         	goto	l6201
  9994  002B5C                     l6303:
  9995                           
  9996                           ; BSR set to: 0
  9997                           ;colour_cards.c: 105:             forward(mL, mR);
  9998  002B5C  C04D  F01A         	movff	colourcards_readRGBC@mL,forward@mL
  9999  002B60  C04E  F01B         	movff	colourcards_readRGBC@mL+1,forward@mL+1
 10000  002B64  C04F  F01C         	movff	colourcards_readRGBC@mR,forward@mR
 10001  002B68  C050  F01D         	movff	colourcards_readRGBC@mR+1,forward@mR+1
 10002  002B6C  ECC2  F02D         	call	_forward	;wreg free
 10003  002B70  EF91  F012         	goto	l6201
 10004  002B74                     l6307:
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;colour_cards.c: 110:     colourcard_flag = 0;
 10008  002B74  0E00               	movlw	0
 10009  002B76  6FF8               	movwf	_colourcard_flag& (0+255),b	;volatile
 10010  002B78                     
 10011                           ; BSR set to: 0
 10012                           ;colour_cards.c: 111:     PIE0bits.INT1IE = 1;
 10013  002B78  010E               	movlb	14	; () banked
 10014  002B7A  8329               	bsf	41,1,b	;volatile
 10015  002B7C                     
 10016                           ; BSR set to: 14
 10017  002B7C  0012               	return		;funcret
 10018  002B7E                     __end_of_colourcards_readRGBC:
 10019                           	callstack 0
 10020                           
 10021 ;; *************** function _turnright *****************
 10022 ;; Defined at:
 10023 ;;		line 231 in file "DC_motors.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;  mL              2   68[COMRAM] PTR struct .
 10026 ;;		 -> main@motorL(9), 
 10027 ;;  mR              2   70[COMRAM] PTR struct .
 10028 ;;		 -> main@motorR(9), 
 10029 ;;  deg             2   72[COMRAM] unsigned int 
 10030 ;; Auto vars:     Size  Location     Type
 10031 ;;		None
 10032 ;; Return value:  Size  Location     Type
 10033 ;;                  1    wreg      void 
 10034 ;; Registers used:
 10035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10036 ;; Tracked objects:
 10037 ;;		On entry : 0/0
 10038 ;;		On exit  : 0/0
 10039 ;;		Unchanged: 0/0
 10040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10041 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10044 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10045 ;;Total ram usage:        6 bytes
 10046 ;; Hardware stack levels used: 1
 10047 ;; Hardware stack levels required when called: 3
 10048 ;; This function calls:
 10049 ;;		_left
 10050 ;;		_right
 10051 ;; This function is called by:
 10052 ;;		_colourcards_readRGBC
 10053 ;;		_DCmotors_calibration
 10054 ;;		_DCmotors_testing
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text37
 10059  005EFA                     __ptext37:
 10060                           	callstack 0
 10061  005EFA                     _turnright:
 10062                           	callstack 26
 10063  005EFA                     
 10064                           ;DC_motors.c: 231: void turnright(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motor
      +                          s.c: 232: {;DC_motors.c: 233:     if (returnhome_flag==0) {
 10065  005EFA  0100               	movlb	0	; () banked
 10066  005EFC  51F6               	movf	_returnhome_flag& (0+255),w,b	;volatile
 10067  005EFE  A4D8               	btfss	status,2,c
 10068  005F00  EF84  F02F         	goto	u7271
 10069  005F04  EF86  F02F         	goto	u7270
 10070  005F08                     u7271:
 10071  005F08  EF96  F02F         	goto	l5933
 10072  005F0C                     u7270:
 10073  005F0C                     
 10074                           ; BSR set to: 0
 10075                           ;DC_motors.c: 234:         right(mL, mR, deg);
 10076  005F0C  C045  F01A         	movff	turnright@mL,right@mL
 10077  005F10  C046  F01B         	movff	turnright@mL+1,right@mL+1
 10078  005F14  C047  F01C         	movff	turnright@mR,right@mR
 10079  005F18  C048  F01D         	movff	turnright@mR+1,right@mR+1
 10080  005F1C  C049  F01E         	movff	turnright@deg,right@deg
 10081  005F20  C04A  F01F         	movff	turnright@deg+1,right@deg+1
 10082  005F24  EC87  F028         	call	_right	;wreg free
 10083                           
 10084                           ;DC_motors.c: 235:     } else {
 10085  005F28  EFA4  F02F         	goto	l634
 10086  005F2C                     l5933:
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;DC_motors.c: 236:         left(mL, mR, deg);
 10090  005F2C  C045  F038         	movff	turnright@mL,left@mL
 10091  005F30  C046  F039         	movff	turnright@mL+1,left@mL+1
 10092  005F34  C047  F03A         	movff	turnright@mR,left@mR
 10093  005F38  C048  F03B         	movff	turnright@mR+1,left@mR+1
 10094  005F3C  C049  F03C         	movff	turnright@deg,left@deg
 10095  005F40  C04A  F03D         	movff	turnright@deg+1,left@deg+1
 10096  005F44  EC34  F023         	call	_left	;wreg free
 10097  005F48                     l634:
 10098  005F48  0012               	return		;funcret
 10099  005F4A                     __end_of_turnright:
 10100                           	callstack 0
 10101                           
 10102 ;; *************** function _turnleft *****************
 10103 ;; Defined at:
 10104 ;;		line 218 in file "DC_motors.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;  mL              2   68[COMRAM] PTR struct .
 10107 ;;		 -> main@motorL(9), 
 10108 ;;  mR              2   70[COMRAM] PTR struct .
 10109 ;;		 -> main@motorR(9), 
 10110 ;;  deg             2   72[COMRAM] unsigned int 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;		None
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  1    wreg      void 
 10115 ;; Registers used:
 10116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10122 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10125 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10126 ;;Total ram usage:        6 bytes
 10127 ;; Hardware stack levels used: 1
 10128 ;; Hardware stack levels required when called: 3
 10129 ;; This function calls:
 10130 ;;		_left
 10131 ;;		_right
 10132 ;; This function is called by:
 10133 ;;		_colourcards_readRGBC
 10134 ;;		_DCmotors_calibration
 10135 ;;		_DCmotors_testing
 10136 ;; This function uses a non-reentrant model
 10137 ;;
 10138                           
 10139                           	psect	text38
 10140  005F4A                     __ptext38:
 10141                           	callstack 0
 10142  005F4A                     _turnleft:
 10143                           	callstack 26
 10144  005F4A                     
 10145                           ;DC_motors.c: 218: void turnleft(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors
      +                          .c: 219: {;DC_motors.c: 220:     if (returnhome_flag==0) {
 10146  005F4A  0100               	movlb	0	; () banked
 10147  005F4C  51F6               	movf	_returnhome_flag& (0+255),w,b	;volatile
 10148  005F4E  A4D8               	btfss	status,2,c
 10149  005F50  EFAC  F02F         	goto	u7301
 10150  005F54  EFAE  F02F         	goto	u7300
 10151  005F58                     u7301:
 10152  005F58  EFBE  F02F         	goto	l5953
 10153  005F5C                     u7300:
 10154  005F5C                     
 10155                           ; BSR set to: 0
 10156                           ;DC_motors.c: 221:         left(mL, mR, deg);
 10157  005F5C  C045  F038         	movff	turnleft@mL,left@mL
 10158  005F60  C046  F039         	movff	turnleft@mL+1,left@mL+1
 10159  005F64  C047  F03A         	movff	turnleft@mR,left@mR
 10160  005F68  C048  F03B         	movff	turnleft@mR+1,left@mR+1
 10161  005F6C  C049  F03C         	movff	turnleft@deg,left@deg
 10162  005F70  C04A  F03D         	movff	turnleft@deg+1,left@deg+1
 10163  005F74  EC34  F023         	call	_left	;wreg free
 10164                           
 10165                           ;DC_motors.c: 222:     } else {
 10166  005F78  EFCC  F02F         	goto	l629
 10167  005F7C                     l5953:
 10168                           
 10169                           ; BSR set to: 0
 10170                           ;DC_motors.c: 223:         right(mL, mR, deg);
 10171  005F7C  C045  F01A         	movff	turnleft@mL,right@mL
 10172  005F80  C046  F01B         	movff	turnleft@mL+1,right@mL+1
 10173  005F84  C047  F01C         	movff	turnleft@mR,right@mR
 10174  005F88  C048  F01D         	movff	turnleft@mR+1,right@mR+1
 10175  005F8C  C049  F01E         	movff	turnleft@deg,right@deg
 10176  005F90  C04A  F01F         	movff	turnleft@deg+1,right@deg+1
 10177  005F94  EC87  F028         	call	_right	;wreg free
 10178  005F98                     l629:
 10179  005F98  0012               	return		;funcret
 10180  005F9A                     __end_of_turnleft:
 10181                           	callstack 0
 10182                           
 10183 ;; *************** function _right *****************
 10184 ;; Defined at:
 10185 ;;		line 183 in file "DC_motors.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  mL              2   25[COMRAM] PTR struct .
 10188 ;;		 -> main@motorL(9), 
 10189 ;;  mR              2   27[COMRAM] PTR struct .
 10190 ;;		 -> main@motorR(9), 
 10191 ;;  deg             2   29[COMRAM] unsigned int 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;  i               2   35[COMRAM] unsigned int 
 10194 ;;  delay           2   33[COMRAM] unsigned int 
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  1    wreg      void 
 10197 ;; Registers used:
 10198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10204 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10205 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10207 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10208 ;;Total ram usage:       12 bytes
 10209 ;; Hardware stack levels used: 1
 10210 ;; Hardware stack levels required when called: 2
 10211 ;; This function calls:
 10212 ;;		_DCmotors_setPWM
 10213 ;; This function is called by:
 10214 ;;		_turnleft
 10215 ;;		_turnright
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text39
 10220  00510E                     __ptext39:
 10221                           	callstack 0
 10222  00510E                     _right:
 10223                           	callstack 26
 10224  00510E                     
 10225                           ;DC_motors.c: 183: void right(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c:
      +                           184: {;DC_motors.c: 186:     unsigned int delay = (8*deg) + 180;
 10226  00510E  C01E  F020         	movff	right@deg,??_right
 10227  005112  C01F  F021         	movff	right@deg+1,??_right+1
 10228  005116  90D8               	bcf	status,0,c
 10229  005118  3620               	rlcf	??_right^0,f,c
 10230  00511A  3621               	rlcf	(??_right+1)^0,f,c
 10231  00511C  90D8               	bcf	status,0,c
 10232  00511E  3620               	rlcf	??_right^0,f,c
 10233  005120  3621               	rlcf	(??_right+1)^0,f,c
 10234  005122  90D8               	bcf	status,0,c
 10235  005124  3620               	rlcf	??_right^0,f,c
 10236  005126  3621               	rlcf	(??_right+1)^0,f,c
 10237  005128  0EB4               	movlw	180
 10238  00512A  2420               	addwf	??_right^0,w,c
 10239  00512C  6E22               	movwf	right@delay^0,c
 10240  00512E  0E00               	movlw	0
 10241  005130  2021               	addwfc	(??_right+1)^0,w,c
 10242  005132  6E23               	movwf	(right@delay+1)^0,c
 10243  005134                     
 10244                           ;DC_motors.c: 189:     mL->direction = 1;
 10245  005134  EE20 F001          	lfsr	2,1
 10246  005138  501A               	movf	right@mL^0,w,c
 10247  00513A  26D9               	addwf	fsr2l,f,c
 10248  00513C  501B               	movf	(right@mL+1)^0,w,c
 10249  00513E  22DA               	addwfc	fsr2h,f,c
 10250  005140  0E01               	movlw	1
 10251  005142  6EDF               	movwf	indf2,c
 10252  005144                     
 10253                           ;DC_motors.c: 190:     mR->direction = 0;
 10254  005144  EE20 F001          	lfsr	2,1
 10255  005148  501C               	movf	right@mR^0,w,c
 10256  00514A  26D9               	addwf	fsr2l,f,c
 10257  00514C  501D               	movf	(right@mR+1)^0,w,c
 10258  00514E  22DA               	addwfc	fsr2h,f,c
 10259  005150  0E00               	movlw	0
 10260  005152  6EDF               	movwf	indf2,c
 10261                           
 10262                           ;DC_motors.c: 193:     while((mL->power < 40) || (mR->power < 40)){
 10263  005154  EFEF  F028         	goto	l5843
 10264  005158                     l5827:
 10265                           
 10266                           ;DC_motors.c: 195:         LATHbits.LATH0 = !LATHbits.LATH0;
 10267  005158  A080               	btfss	128,0,c	;volatile
 10268  00515A  EFB1  F028         	goto	u7161
 10269  00515E  EFB5  F028         	goto	u7160
 10270  005162                     u7161:
 10271  005162  6A20               	clrf	??_right^0,c
 10272  005164  2A20               	incf	??_right^0,f,c
 10273  005166  EFB6  F028         	goto	u7178
 10274  00516A                     u7160:
 10275  00516A  6A20               	clrf	??_right^0,c
 10276  00516C                     u7178:
 10277  00516C  5080               	movf	128,w,c	;volatile
 10278  00516E  1820               	xorwf	??_right^0,w,c
 10279  005170  0BFE               	andlw	-2
 10280  005172  1820               	xorwf	??_right^0,w,c
 10281  005174  6E80               	movwf	128,c	;volatile
 10282  005176                     
 10283                           ;DC_motors.c: 198:         if (mL->power < 40) {mL->power += 10;}
 10284  005176  C01A  FFD9         	movff	right@mL,fsr2l
 10285  00517A  C01B  FFDA         	movff	right@mL+1,fsr2h
 10286  00517E  0E28               	movlw	40
 10287  005180  60DF               	cpfslt	indf2,c
 10288  005182  EFC5  F028         	goto	u7181
 10289  005186  EFC7  F028         	goto	u7180
 10290  00518A                     u7181:
 10291  00518A  EFCD  F028         	goto	l5833
 10292  00518E                     u7180:
 10293  00518E  C01A  FFD9         	movff	right@mL,fsr2l
 10294  005192  C01B  FFDA         	movff	right@mL+1,fsr2h
 10295  005196  0E0A               	movlw	10
 10296  005198  26DF               	addwf	indf2,f,c
 10297  00519A                     l5833:
 10298                           
 10299                           ;DC_motors.c: 199:         if (mR->power < 40) {mR->power += 10;}
 10300  00519A  C01C  FFD9         	movff	right@mR,fsr2l
 10301  00519E  C01D  FFDA         	movff	right@mR+1,fsr2h
 10302  0051A2  0E28               	movlw	40
 10303  0051A4  60DF               	cpfslt	indf2,c
 10304  0051A6  EFD7  F028         	goto	u7191
 10305  0051AA  EFD9  F028         	goto	u7190
 10306  0051AE                     u7191:
 10307  0051AE  EFDF  F028         	goto	l5837
 10308  0051B2                     u7190:
 10309  0051B2  C01C  FFD9         	movff	right@mR,fsr2l
 10310  0051B6  C01D  FFDA         	movff	right@mR+1,fsr2h
 10311  0051BA  0E0A               	movlw	10
 10312  0051BC  26DF               	addwf	indf2,f,c
 10313  0051BE                     l5837:
 10314                           
 10315                           ;DC_motors.c: 202:         DCmotors_setPWM(mL);
 10316  0051BE  C01A  F00F         	movff	right@mL,DCmotors_setPWM@m
 10317  0051C2  C01B  F010         	movff	right@mL+1,DCmotors_setPWM@m+1
 10318  0051C6  EC70  F021         	call	_DCmotors_setPWM	;wreg free
 10319  0051CA                     
 10320                           ;DC_motors.c: 203:         DCmotors_setPWM(mR);
 10321  0051CA  C01C  F00F         	movff	right@mR,DCmotors_setPWM@m
 10322  0051CE  C01D  F010         	movff	right@mR+1,DCmotors_setPWM@m+1
 10323  0051D2  EC70  F021         	call	_DCmotors_setPWM	;wreg free
 10324  0051D6                     
 10325                           ;DC_motors.c: 204:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 10326  0051D6  0EA0               	movlw	160
 10327  0051D8                     u8407:
 10328  0051D8  D000               	nop2	
 10329  0051DA  2EE8               	decfsz	wreg,f,c
 10330  0051DC  D7FD               	bra	u8407
 10331  0051DE                     l5843:
 10332                           
 10333                           ;DC_motors.c: 193:     while((mL->power < 40) || (mR->power < 40)){
 10334  0051DE  C01A  FFD9         	movff	right@mL,fsr2l
 10335  0051E2  C01B  FFDA         	movff	right@mL+1,fsr2h
 10336  0051E6  0E27               	movlw	39
 10337  0051E8  64DF               	cpfsgt	indf2,c
 10338  0051EA  EFF9  F028         	goto	u7201
 10339  0051EE  EFFB  F028         	goto	u7200
 10340  0051F2                     u7201:
 10341  0051F2  EFAC  F028         	goto	l5827
 10342  0051F6                     u7200:
 10343  0051F6  C01C  FFD9         	movff	right@mR,fsr2l
 10344  0051FA  C01D  FFDA         	movff	right@mR+1,fsr2h
 10345  0051FE  0E27               	movlw	39
 10346  005200  64DF               	cpfsgt	indf2,c
 10347  005202  EF05  F029         	goto	u7211
 10348  005206  EF07  F029         	goto	u7210
 10349  00520A                     u7211:
 10350  00520A  EFAC  F028         	goto	l5827
 10351  00520E                     u7210:
 10352  00520E                     
 10353                           ;DC_motors.c: 207:     unsigned int i;;DC_motors.c: 208:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
 10354  00520E  0E00               	movlw	0
 10355  005210  6E25               	movwf	(right@i+1)^0,c
 10356  005212  0E00               	movlw	0
 10357  005214  6E24               	movwf	right@i^0,c
 10358  005216  EF17  F029         	goto	l621
 10359  00521A                     l5849:
 10360  00521A  0E15               	movlw	21
 10361  00521C  6E20               	movwf	??_right^0,c
 10362  00521E  0EC6               	movlw	198
 10363  005220                     u8417:
 10364  005220  2EE8               	decfsz	wreg,f,c
 10365  005222  D7FE               	bra	u8417
 10366  005224  2E20               	decfsz	??_right^0,f,c
 10367  005226  D7FC               	bra	u8417
 10368  005228  D000               	nop2	
 10369  00522A  4A24               	infsnz	right@i^0,f,c
 10370  00522C  2A25               	incf	(right@i+1)^0,f,c
 10371  00522E                     l621:
 10372  00522E  5022               	movf	right@delay^0,w,c
 10373  005230  5C24               	subwf	right@i^0,w,c
 10374  005232  5023               	movf	(right@delay+1)^0,w,c
 10375  005234  5825               	subwfb	(right@i+1)^0,w,c
 10376  005236  A0D8               	btfss	status,0,c
 10377  005238  EF20  F029         	goto	u7221
 10378  00523C  EF22  F029         	goto	u7220
 10379  005240                     u7221:
 10380  005240  EF0D  F029         	goto	l5849
 10381  005244                     u7220:
 10382  005244                     
 10383                           ;DC_motors.c: 209:     _delay((unsigned long)((1)*(64000000/4000.0)));
 10384  005244  0E15               	movlw	21
 10385  005246  6E20               	movwf	??_right^0,c
 10386  005248  0EC6               	movlw	198
 10387  00524A                     u8427:
 10388  00524A  2EE8               	decfsz	wreg,f,c
 10389  00524C  D7FE               	bra	u8427
 10390  00524E  2E20               	decfsz	??_right^0,f,c
 10391  005250  D7FC               	bra	u8427
 10392  005252  D000               	nop2	
 10393  005254                     
 10394                           ;DC_motors.c: 211:     LATHbits.LATH0 = 0;
 10395  005254  9080               	bcf	128,0,c	;volatile
 10396  005256  0012               	return		;funcret
 10397  005258                     __end_of_right:
 10398                           	callstack 0
 10399                           
 10400 ;; *************** function _left *****************
 10401 ;; Defined at:
 10402 ;;		line 150 in file "DC_motors.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;  mL              2   55[COMRAM] PTR struct .
 10405 ;;		 -> main@motorL(9), 
 10406 ;;  mR              2   57[COMRAM] PTR struct .
 10407 ;;		 -> main@motorR(9), 
 10408 ;;  deg             2   59[COMRAM] unsigned int 
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;  delay           4   62[COMRAM] unsigned int 
 10411 ;;  i               2   66[COMRAM] unsigned int 
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  1    wreg      void 
 10414 ;; Registers used:
 10415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10416 ;; Tracked objects:
 10417 ;;		On entry : 0/0
 10418 ;;		On exit  : 0/0
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10421 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10422 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10424 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10425 ;;Total ram usage:       13 bytes
 10426 ;; Hardware stack levels used: 1
 10427 ;; Hardware stack levels required when called: 2
 10428 ;; This function calls:
 10429 ;;		_DCmotors_setPWM
 10430 ;;		___fladd
 10431 ;;		___flge
 10432 ;;		___flmul
 10433 ;;		___xxtofl
 10434 ;; This function is called by:
 10435 ;;		_turnleft
 10436 ;;		_turnright
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           	psect	text40
 10441  004668                     __ptext40:
 10442                           	callstack 0
 10443  004668                     _left:
 10444                           	callstack 26
 10445  004668                     
 10446                           ;DC_motors.c: 150: void left(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c: 
      +                          151: {;DC_motors.c: 153:     double delay = (deg*12.5) - 135;
 10447  004668  0E00               	movlw	0
 10448  00466A  6E13               	movwf	___flmul@a^0,c
 10449  00466C  0E00               	movlw	0
 10450  00466E  6E14               	movwf	(___flmul@a+1)^0,c
 10451  004670  0E48               	movlw	72
 10452  004672  6E15               	movwf	(___flmul@a+2)^0,c
 10453  004674  0E41               	movlw	65
 10454  004676  6E16               	movwf	(___flmul@a+3)^0,c
 10455  004678  C03C  F001         	movff	left@deg,___xxtofl@val
 10456  00467C  C03D  F002         	movff	left@deg+1,___xxtofl@val+1
 10457  004680  6A03               	clrf	(___xxtofl@val+2)^0,c
 10458  004682  6A04               	clrf	(___xxtofl@val+3)^0,c
 10459  004684  0E00               	movlw	0
 10460  004686  EC5A  F022         	call	___xxtofl
 10461  00468A  C001  F00F         	movff	?___xxtofl,___flmul@b
 10462  00468E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
 10463  004692  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
 10464  004696  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
 10465  00469A  EC13  F01B         	call	___flmul	;wreg free
 10466  00469E  C00F  F028         	movff	?___flmul,___fladd@b
 10467  0046A2  C010  F029         	movff	?___flmul+1,___fladd@b+1
 10468  0046A6  C011  F02A         	movff	?___flmul+2,___fladd@b+2
 10469  0046AA  C012  F02B         	movff	?___flmul+3,___fladd@b+3
 10470  0046AE  0E00               	movlw	0
 10471  0046B0  6E2C               	movwf	___fladd@a^0,c
 10472  0046B2  0E00               	movlw	0
 10473  0046B4  6E2D               	movwf	(___fladd@a+1)^0,c
 10474  0046B6  0E07               	movlw	7
 10475  0046B8  6E2E               	movwf	(___fladd@a+2)^0,c
 10476  0046BA  0EC3               	movlw	195
 10477  0046BC  6E2F               	movwf	(___fladd@a+3)^0,c
 10478  0046BE  ECB3  F018         	call	___fladd	;wreg free
 10479  0046C2  C028  F03F         	movff	?___fladd,left@delay
 10480  0046C6  C029  F040         	movff	?___fladd+1,left@delay+1
 10481  0046CA  C02A  F041         	movff	?___fladd+2,left@delay+2
 10482  0046CE  C02B  F042         	movff	?___fladd+3,left@delay+3
 10483  0046D2                     
 10484                           ;DC_motors.c: 156:     mL->direction = 0;
 10485  0046D2  EE20 F001          	lfsr	2,1
 10486  0046D6  5038               	movf	left@mL^0,w,c
 10487  0046D8  26D9               	addwf	fsr2l,f,c
 10488  0046DA  5039               	movf	(left@mL+1)^0,w,c
 10489  0046DC  22DA               	addwfc	fsr2h,f,c
 10490  0046DE  0E00               	movlw	0
 10491  0046E0  6EDF               	movwf	indf2,c
 10492  0046E2                     
 10493                           ;DC_motors.c: 157:     mR->direction = 1;
 10494  0046E2  EE20 F001          	lfsr	2,1
 10495  0046E6  503A               	movf	left@mR^0,w,c
 10496  0046E8  26D9               	addwf	fsr2l,f,c
 10497  0046EA  503B               	movf	(left@mR+1)^0,w,c
 10498  0046EC  22DA               	addwfc	fsr2h,f,c
 10499  0046EE  0E01               	movlw	1
 10500  0046F0  6EDF               	movwf	indf2,c
 10501                           
 10502                           ;DC_motors.c: 160:     while((mL->power < 40) || (mR->power < 40)){
 10503  0046F2  EFBE  F023         	goto	l5809
 10504  0046F6                     l5793:
 10505                           
 10506                           ;DC_motors.c: 162:         LATFbits.LATF0 = !LATFbits.LATF0;
 10507  0046F6  A07E               	btfss	126,0,c	;volatile
 10508  0046F8  EF80  F023         	goto	u7091
 10509  0046FC  EF84  F023         	goto	u7090
 10510  004700                     u7091:
 10511  004700  6A3E               	clrf	??_left^0,c
 10512  004702  2A3E               	incf	??_left^0,f,c
 10513  004704  EF85  F023         	goto	u7108
 10514  004708                     u7090:
 10515  004708  6A3E               	clrf	??_left^0,c
 10516  00470A                     u7108:
 10517  00470A  507E               	movf	126,w,c	;volatile
 10518  00470C  183E               	xorwf	??_left^0,w,c
 10519  00470E  0BFE               	andlw	-2
 10520  004710  183E               	xorwf	??_left^0,w,c
 10521  004712  6E7E               	movwf	126,c	;volatile
 10522  004714                     
 10523                           ;DC_motors.c: 165:         if (mL->power < 40) {mL->power += 10;}
 10524  004714  C038  FFD9         	movff	left@mL,fsr2l
 10525  004718  C039  FFDA         	movff	left@mL+1,fsr2h
 10526  00471C  0E28               	movlw	40
 10527  00471E  60DF               	cpfslt	indf2,c
 10528  004720  EF94  F023         	goto	u7111
 10529  004724  EF96  F023         	goto	u7110
 10530  004728                     u7111:
 10531  004728  EF9C  F023         	goto	l5799
 10532  00472C                     u7110:
 10533  00472C  C038  FFD9         	movff	left@mL,fsr2l
 10534  004730  C039  FFDA         	movff	left@mL+1,fsr2h
 10535  004734  0E0A               	movlw	10
 10536  004736  26DF               	addwf	indf2,f,c
 10537  004738                     l5799:
 10538                           
 10539                           ;DC_motors.c: 166:         if (mR->power < 40) {mR->power += 10;}
 10540  004738  C03A  FFD9         	movff	left@mR,fsr2l
 10541  00473C  C03B  FFDA         	movff	left@mR+1,fsr2h
 10542  004740  0E28               	movlw	40
 10543  004742  60DF               	cpfslt	indf2,c
 10544  004744  EFA6  F023         	goto	u7121
 10545  004748  EFA8  F023         	goto	u7120
 10546  00474C                     u7121:
 10547  00474C  EFAE  F023         	goto	l5803
 10548  004750                     u7120:
 10549  004750  C03A  FFD9         	movff	left@mR,fsr2l
 10550  004754  C03B  FFDA         	movff	left@mR+1,fsr2h
 10551  004758  0E0A               	movlw	10
 10552  00475A  26DF               	addwf	indf2,f,c
 10553  00475C                     l5803:
 10554                           
 10555                           ;DC_motors.c: 169:         DCmotors_setPWM(mL);
 10556  00475C  C038  F00F         	movff	left@mL,DCmotors_setPWM@m
 10557  004760  C039  F010         	movff	left@mL+1,DCmotors_setPWM@m+1
 10558  004764  EC70  F021         	call	_DCmotors_setPWM	;wreg free
 10559  004768                     
 10560                           ;DC_motors.c: 170:         DCmotors_setPWM(mR);
 10561  004768  C03A  F00F         	movff	left@mR,DCmotors_setPWM@m
 10562  00476C  C03B  F010         	movff	left@mR+1,DCmotors_setPWM@m+1
 10563  004770  EC70  F021         	call	_DCmotors_setPWM	;wreg free
 10564  004774                     
 10565                           ;DC_motors.c: 171:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 10566  004774  0EA0               	movlw	160
 10567  004776                     u8437:
 10568  004776  D000               	nop2	
 10569  004778  2EE8               	decfsz	wreg,f,c
 10570  00477A  D7FD               	bra	u8437
 10571  00477C                     l5809:
 10572                           
 10573                           ;DC_motors.c: 160:     while((mL->power < 40) || (mR->power < 40)){
 10574  00477C  C038  FFD9         	movff	left@mL,fsr2l
 10575  004780  C039  FFDA         	movff	left@mL+1,fsr2h
 10576  004784  0E27               	movlw	39
 10577  004786  64DF               	cpfsgt	indf2,c
 10578  004788  EFC8  F023         	goto	u7131
 10579  00478C  EFCA  F023         	goto	u7130
 10580  004790                     u7131:
 10581  004790  EF7B  F023         	goto	l5793
 10582  004794                     u7130:
 10583  004794  C03A  FFD9         	movff	left@mR,fsr2l
 10584  004798  C03B  FFDA         	movff	left@mR+1,fsr2h
 10585  00479C  0E27               	movlw	39
 10586  00479E  64DF               	cpfsgt	indf2,c
 10587  0047A0  EFD4  F023         	goto	u7141
 10588  0047A4  EFD6  F023         	goto	u7140
 10589  0047A8                     u7141:
 10590  0047A8  EF7B  F023         	goto	l5793
 10591  0047AC                     u7140:
 10592  0047AC                     
 10593                           ;DC_motors.c: 174:     unsigned int i;;DC_motors.c: 175:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
 10594  0047AC  0E00               	movlw	0
 10595  0047AE  6E44               	movwf	(left@i+1)^0,c
 10596  0047B0  0E00               	movlw	0
 10597  0047B2  6E43               	movwf	left@i^0,c
 10598  0047B4  EFE6  F023         	goto	l5819
 10599  0047B8                     l5815:
 10600  0047B8  0E15               	movlw	21
 10601  0047BA  6E3E               	movwf	??_left^0,c
 10602  0047BC  0EC6               	movlw	198
 10603  0047BE                     u8447:
 10604  0047BE  2EE8               	decfsz	wreg,f,c
 10605  0047C0  D7FE               	bra	u8447
 10606  0047C2  2E3E               	decfsz	??_left^0,f,c
 10607  0047C4  D7FC               	bra	u8447
 10608  0047C6  D000               	nop2	
 10609  0047C8  4A43               	infsnz	left@i^0,f,c
 10610  0047CA  2A44               	incf	(left@i+1)^0,f,c
 10611  0047CC                     l5819:
 10612  0047CC  C043  F001         	movff	left@i,___xxtofl@val
 10613  0047D0  C044  F002         	movff	left@i+1,___xxtofl@val+1
 10614  0047D4  6A03               	clrf	(___xxtofl@val+2)^0,c
 10615  0047D6  6A04               	clrf	(___xxtofl@val+3)^0,c
 10616  0047D8  0E00               	movlw	0
 10617  0047DA  EC5A  F022         	call	___xxtofl
 10618  0047DE  C001  F028         	movff	?___xxtofl,___flge@ff1
 10619  0047E2  C002  F029         	movff	?___xxtofl+1,___flge@ff1+1
 10620  0047E6  C003  F02A         	movff	?___xxtofl+2,___flge@ff1+2
 10621  0047EA  C004  F02B         	movff	?___xxtofl+3,___flge@ff1+3
 10622  0047EE  C03F  F02C         	movff	left@delay,___flge@ff2
 10623  0047F2  C040  F02D         	movff	left@delay+1,___flge@ff2+1
 10624  0047F6  C041  F02E         	movff	left@delay+2,___flge@ff2+2
 10625  0047FA  C042  F02F         	movff	left@delay+3,___flge@ff2+3
 10626  0047FE  EC32  F02A         	call	___flge	;wreg free
 10627  004802  A0D8               	btfss	status,0,c
 10628  004804  EF06  F024         	goto	u7151
 10629  004808  EF08  F024         	goto	u7150
 10630  00480C                     u7151:
 10631  00480C  EFDC  F023         	goto	l5815
 10632  004810                     u7150:
 10633  004810                     
 10634                           ;DC_motors.c: 177:     LATFbits.LATF0 = 0;
 10635  004810  907E               	bcf	126,0,c	;volatile
 10636  004812  0012               	return		;funcret
 10637  004814                     __end_of_left:
 10638                           	callstack 0
 10639                           
 10640 ;; *************** function ___flmul *****************
 10641 ;; Defined at:
 10642 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;  b               4   14[COMRAM] void 
 10645 ;;  a               4   18[COMRAM] void 
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;  prod            4   33[COMRAM] struct .
 10648 ;;  grs             4   27[COMRAM] unsigned long 
 10649 ;;  temp            2   37[COMRAM] struct .
 10650 ;;  bexp            1   32[COMRAM] unsigned char 
 10651 ;;  aexp            1   31[COMRAM] unsigned char 
 10652 ;;  sign            1   26[COMRAM] unsigned char 
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  4   14[COMRAM] unsigned char 
 10655 ;; Registers used:
 10656 ;;		wreg, status,2, status,0, prodl, prodh
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10662 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10663 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10664 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10665 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10666 ;;Total ram usage:       25 bytes
 10667 ;; Hardware stack levels used: 1
 10668 ;; This function calls:
 10669 ;;		Nothing
 10670 ;; This function is called by:
 10671 ;;		_left
 10672 ;;		_efgtoa
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           	psect	text41
 10677  003626                     __ptext41:
 10678                           	callstack 0
 10679  003626                     ___flmul:
 10680                           	callstack 25
 10681  003626  5012               	movf	(___flmul@b+3)^0,w,c
 10682  003628  0B80               	andlw	128
 10683  00362A  6E1B               	movwf	___flmul@sign^0,c
 10684  00362C  5012               	movf	(___flmul@b+3)^0,w,c
 10685  00362E  2412               	addwf	(___flmul@b+3)^0,w,c
 10686  003630  6E21               	movwf	___flmul@bexp^0,c
 10687  003632  AE11               	btfss	(___flmul@b+2)^0,7,c
 10688  003634  EF1E  F01B         	goto	u5031
 10689  003638  EF20  F01B         	goto	u5030
 10690  00363C                     u5031:
 10691  00363C  EF21  F01B         	goto	l4677
 10692  003640                     u5030:
 10693  003640  8021               	bsf	___flmul@bexp^0,0,c
 10694  003642                     l4677:
 10695  003642  5021               	movf	___flmul@bexp^0,w,c
 10696  003644  B4D8               	btfsc	status,2,c
 10697  003646  EF27  F01B         	goto	u5041
 10698  00364A  EF29  F01B         	goto	u5040
 10699  00364E                     u5041:
 10700  00364E  EF3C  F01B         	goto	l4685
 10701  003652                     u5040:
 10702  003652  2821               	incf	___flmul@bexp^0,w,c
 10703  003654  A4D8               	btfss	status,2,c
 10704  003656  EF2F  F01B         	goto	u5051
 10705  00365A  EF31  F01B         	goto	u5050
 10706  00365E                     u5051:
 10707  00365E  EF39  F01B         	goto	l4683
 10708  003662                     u5050:
 10709  003662  0E00               	movlw	0
 10710  003664  6E0F               	movwf	___flmul@b^0,c
 10711  003666  0E00               	movlw	0
 10712  003668  6E10               	movwf	(___flmul@b+1)^0,c
 10713  00366A  0E00               	movlw	0
 10714  00366C  6E11               	movwf	(___flmul@b+2)^0,c
 10715  00366E  0E00               	movlw	0
 10716  003670  6E12               	movwf	(___flmul@b+3)^0,c
 10717  003672                     l4683:
 10718  003672  8E11               	bsf	(___flmul@b+2)^0,7,c
 10719  003674  EF44  F01B         	goto	l4687
 10720  003678                     l4685:
 10721  003678  0E00               	movlw	0
 10722  00367A  6E0F               	movwf	___flmul@b^0,c
 10723  00367C  0E00               	movlw	0
 10724  00367E  6E10               	movwf	(___flmul@b+1)^0,c
 10725  003680  0E00               	movlw	0
 10726  003682  6E11               	movwf	(___flmul@b+2)^0,c
 10727  003684  0E00               	movlw	0
 10728  003686  6E12               	movwf	(___flmul@b+3)^0,c
 10729  003688                     l4687:
 10730  003688  5016               	movf	(___flmul@a+3)^0,w,c
 10731  00368A  0B80               	andlw	128
 10732  00368C  1A1B               	xorwf	___flmul@sign^0,f,c
 10733  00368E  5016               	movf	(___flmul@a+3)^0,w,c
 10734  003690  2416               	addwf	(___flmul@a+3)^0,w,c
 10735  003692  6E20               	movwf	___flmul@aexp^0,c
 10736  003694  AE15               	btfss	(___flmul@a+2)^0,7,c
 10737  003696  EF4F  F01B         	goto	u5061
 10738  00369A  EF51  F01B         	goto	u5060
 10739  00369E                     u5061:
 10740  00369E  EF52  F01B         	goto	l4695
 10741  0036A2                     u5060:
 10742  0036A2  8020               	bsf	___flmul@aexp^0,0,c
 10743  0036A4                     l4695:
 10744  0036A4  5020               	movf	___flmul@aexp^0,w,c
 10745  0036A6  B4D8               	btfsc	status,2,c
 10746  0036A8  EF58  F01B         	goto	u5071
 10747  0036AC  EF5A  F01B         	goto	u5070
 10748  0036B0                     u5071:
 10749  0036B0  EF6D  F01B         	goto	l4703
 10750  0036B4                     u5070:
 10751  0036B4  2820               	incf	___flmul@aexp^0,w,c
 10752  0036B6  A4D8               	btfss	status,2,c
 10753  0036B8  EF60  F01B         	goto	u5081
 10754  0036BC  EF62  F01B         	goto	u5080
 10755  0036C0                     u5081:
 10756  0036C0  EF6A  F01B         	goto	l4701
 10757  0036C4                     u5080:
 10758  0036C4  0E00               	movlw	0
 10759  0036C6  6E13               	movwf	___flmul@a^0,c
 10760  0036C8  0E00               	movlw	0
 10761  0036CA  6E14               	movwf	(___flmul@a+1)^0,c
 10762  0036CC  0E00               	movlw	0
 10763  0036CE  6E15               	movwf	(___flmul@a+2)^0,c
 10764  0036D0  0E00               	movlw	0
 10765  0036D2  6E16               	movwf	(___flmul@a+3)^0,c
 10766  0036D4                     l4701:
 10767  0036D4  8E15               	bsf	(___flmul@a+2)^0,7,c
 10768  0036D6  EF75  F01B         	goto	l1345
 10769  0036DA                     l4703:
 10770  0036DA  0E00               	movlw	0
 10771  0036DC  6E13               	movwf	___flmul@a^0,c
 10772  0036DE  0E00               	movlw	0
 10773  0036E0  6E14               	movwf	(___flmul@a+1)^0,c
 10774  0036E2  0E00               	movlw	0
 10775  0036E4  6E15               	movwf	(___flmul@a+2)^0,c
 10776  0036E6  0E00               	movlw	0
 10777  0036E8  6E16               	movwf	(___flmul@a+3)^0,c
 10778  0036EA                     l1345:
 10779  0036EA  5020               	movf	___flmul@aexp^0,w,c
 10780  0036EC  B4D8               	btfsc	status,2,c
 10781  0036EE  EF7B  F01B         	goto	u5091
 10782  0036F2  EF7D  F01B         	goto	u5090
 10783  0036F6                     u5091:
 10784  0036F6  EF85  F01B         	goto	l4707
 10785  0036FA                     u5090:
 10786  0036FA  5021               	movf	___flmul@bexp^0,w,c
 10787  0036FC  A4D8               	btfss	status,2,c
 10788  0036FE  EF83  F01B         	goto	u5101
 10789  003702  EF85  F01B         	goto	u5100
 10790  003706                     u5101:
 10791  003706  EF8F  F01B         	goto	l4711
 10792  00370A                     u5100:
 10793  00370A                     l4707:
 10794  00370A  0E00               	movlw	0
 10795  00370C  6E0F               	movwf	?___flmul^0,c
 10796  00370E  0E00               	movlw	0
 10797  003710  6E10               	movwf	(?___flmul+1)^0,c
 10798  003712  0E00               	movlw	0
 10799  003714  6E11               	movwf	(?___flmul+2)^0,c
 10800  003716  0E00               	movlw	0
 10801  003718  6E12               	movwf	(?___flmul+3)^0,c
 10802  00371A  EF27  F01D         	goto	l1349
 10803  00371E                     l4711:
 10804  00371E  5015               	movf	(___flmul@a+2)^0,w,c
 10805  003720  020F               	mulwf	___flmul@b^0,c
 10806  003722  CFF3 F026          	movff	prodl,___flmul@temp
 10807  003726  CFF4 F027          	movff	prodh,___flmul@temp+1
 10808  00372A  5026               	movf	___flmul@temp^0,w,c
 10809  00372C  6E1C               	movwf	___flmul@grs^0,c
 10810  00372E  6A1D               	clrf	(___flmul@grs+1)^0,c
 10811  003730  6A1E               	clrf	(___flmul@grs+2)^0,c
 10812  003732  6A1F               	clrf	(___flmul@grs+3)^0,c
 10813  003734  5027               	movf	(___flmul@temp+1)^0,w,c
 10814  003736  6E22               	movwf	___flmul@prod^0,c
 10815  003738  6A23               	clrf	(___flmul@prod+1)^0,c
 10816  00373A  6A24               	clrf	(___flmul@prod+2)^0,c
 10817  00373C  6A25               	clrf	(___flmul@prod+3)^0,c
 10818  00373E  5014               	movf	(___flmul@a+1)^0,w,c
 10819  003740  0210               	mulwf	(___flmul@b+1)^0,c
 10820  003742  CFF3 F026          	movff	prodl,___flmul@temp
 10821  003746  CFF4 F027          	movff	prodh,___flmul@temp+1
 10822  00374A  5026               	movf	___flmul@temp^0,w,c
 10823  00374C  261C               	addwf	___flmul@grs^0,f,c
 10824  00374E  0E00               	movlw	0
 10825  003750  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10826  003752  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10827  003754  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10828  003756  5027               	movf	(___flmul@temp+1)^0,w,c
 10829  003758  2622               	addwf	___flmul@prod^0,f,c
 10830  00375A  0E00               	movlw	0
 10831  00375C  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10832  00375E  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10833  003760  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10834  003762  5013               	movf	___flmul@a^0,w,c
 10835  003764  0211               	mulwf	(___flmul@b+2)^0,c
 10836  003766  CFF3 F026          	movff	prodl,___flmul@temp
 10837  00376A  CFF4 F027          	movff	prodh,___flmul@temp+1
 10838  00376E  5026               	movf	___flmul@temp^0,w,c
 10839  003770  261C               	addwf	___flmul@grs^0,f,c
 10840  003772  0E00               	movlw	0
 10841  003774  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10842  003776  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10843  003778  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10844  00377A  5027               	movf	(___flmul@temp+1)^0,w,c
 10845  00377C  2622               	addwf	___flmul@prod^0,f,c
 10846  00377E  0E00               	movlw	0
 10847  003780  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10848  003782  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10849  003784  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10850  003786  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10851  00378A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10852  00378E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10853  003792  6A1C               	clrf	___flmul@grs^0,c
 10854  003794  5013               	movf	___flmul@a^0,w,c
 10855  003796  0210               	mulwf	(___flmul@b+1)^0,c
 10856  003798  CFF3 F026          	movff	prodl,___flmul@temp
 10857  00379C  CFF4 F027          	movff	prodh,___flmul@temp+1
 10858  0037A0  5026               	movf	___flmul@temp^0,w,c
 10859  0037A2  261C               	addwf	___flmul@grs^0,f,c
 10860  0037A4  5027               	movf	(___flmul@temp+1)^0,w,c
 10861  0037A6  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10862  0037A8  0E00               	movlw	0
 10863  0037AA  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10864  0037AC  0E00               	movlw	0
 10865  0037AE  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10866  0037B0  5014               	movf	(___flmul@a+1)^0,w,c
 10867  0037B2  020F               	mulwf	___flmul@b^0,c
 10868  0037B4  CFF3 F026          	movff	prodl,___flmul@temp
 10869  0037B8  CFF4 F027          	movff	prodh,___flmul@temp+1
 10870  0037BC  5026               	movf	___flmul@temp^0,w,c
 10871  0037BE  261C               	addwf	___flmul@grs^0,f,c
 10872  0037C0  5027               	movf	(___flmul@temp+1)^0,w,c
 10873  0037C2  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10874  0037C4  0E00               	movlw	0
 10875  0037C6  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10876  0037C8  0E00               	movlw	0
 10877  0037CA  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10878  0037CC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10879  0037D0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10880  0037D4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10881  0037D8  6A1C               	clrf	___flmul@grs^0,c
 10882  0037DA  5013               	movf	___flmul@a^0,w,c
 10883  0037DC  020F               	mulwf	___flmul@b^0,c
 10884  0037DE  CFF3 F026          	movff	prodl,___flmul@temp
 10885  0037E2  CFF4 F027          	movff	prodh,___flmul@temp+1
 10886  0037E6  5026               	movf	___flmul@temp^0,w,c
 10887  0037E8  261C               	addwf	___flmul@grs^0,f,c
 10888  0037EA  5027               	movf	(___flmul@temp+1)^0,w,c
 10889  0037EC  221D               	addwfc	(___flmul@grs+1)^0,f,c
 10890  0037EE  0E00               	movlw	0
 10891  0037F0  221E               	addwfc	(___flmul@grs+2)^0,f,c
 10892  0037F2  0E00               	movlw	0
 10893  0037F4  221F               	addwfc	(___flmul@grs+3)^0,f,c
 10894  0037F6  5015               	movf	(___flmul@a+2)^0,w,c
 10895  0037F8  0210               	mulwf	(___flmul@b+1)^0,c
 10896  0037FA  CFF3 F026          	movff	prodl,___flmul@temp
 10897  0037FE  CFF4 F027          	movff	prodh,___flmul@temp+1
 10898  003802  5026               	movf	___flmul@temp^0,w,c
 10899  003804  2622               	addwf	___flmul@prod^0,f,c
 10900  003806  5027               	movf	(___flmul@temp+1)^0,w,c
 10901  003808  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10902  00380A  0E00               	movlw	0
 10903  00380C  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10904  00380E  0E00               	movlw	0
 10905  003810  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10906  003812  5014               	movf	(___flmul@a+1)^0,w,c
 10907  003814  0211               	mulwf	(___flmul@b+2)^0,c
 10908  003816  CFF3 F026          	movff	prodl,___flmul@temp
 10909  00381A  CFF4 F027          	movff	prodh,___flmul@temp+1
 10910  00381E  5026               	movf	___flmul@temp^0,w,c
 10911  003820  2622               	addwf	___flmul@prod^0,f,c
 10912  003822  5027               	movf	(___flmul@temp+1)^0,w,c
 10913  003824  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10914  003826  0E00               	movlw	0
 10915  003828  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10916  00382A  0E00               	movlw	0
 10917  00382C  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10918  00382E  5015               	movf	(___flmul@a+2)^0,w,c
 10919  003830  0211               	mulwf	(___flmul@b+2)^0,c
 10920  003832  CFF3 F026          	movff	prodl,___flmul@temp
 10921  003836  CFF4 F027          	movff	prodh,___flmul@temp+1
 10922  00383A  5026               	movf	___flmul@temp^0,w,c
 10923  00383C  6E17               	movwf	??___flmul^0,c
 10924  00383E  5027               	movf	(___flmul@temp+1)^0,w,c
 10925  003840  6E18               	movwf	(??___flmul+1)^0,c
 10926  003842  6A19               	clrf	(??___flmul+2)^0,c
 10927  003844  6A1A               	clrf	(??___flmul+3)^0,c
 10928  003846  C019  F01A         	movff	??___flmul+2,??___flmul+3
 10929  00384A  C018  F019         	movff	??___flmul+1,??___flmul+2
 10930  00384E  C017  F018         	movff	??___flmul,??___flmul+1
 10931  003852  6A17               	clrf	??___flmul^0,c
 10932  003854  5017               	movf	??___flmul^0,w,c
 10933  003856  2622               	addwf	___flmul@prod^0,f,c
 10934  003858  5018               	movf	(??___flmul+1)^0,w,c
 10935  00385A  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10936  00385C  5019               	movf	(??___flmul+2)^0,w,c
 10937  00385E  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10938  003860  501A               	movf	(??___flmul+3)^0,w,c
 10939  003862  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10940  003864  C01C  F017         	movff	___flmul@grs,??___flmul
 10941  003868  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
 10942  00386C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
 10943  003870  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
 10944  003874  0E19               	movlw	25
 10945  003876  EF42  F01C         	goto	u5110
 10946  00387A                     u5115:
 10947  00387A  90D8               	bcf	status,0,c
 10948  00387C  321A               	rrcf	(??___flmul+3)^0,f,c
 10949  00387E  3219               	rrcf	(??___flmul+2)^0,f,c
 10950  003880  3218               	rrcf	(??___flmul+1)^0,f,c
 10951  003882  3217               	rrcf	??___flmul^0,f,c
 10952  003884                     u5110:
 10953  003884  2EE8               	decfsz	wreg,f,c
 10954  003886  EF3D  F01C         	goto	u5115
 10955  00388A  5017               	movf	??___flmul^0,w,c
 10956  00388C  2622               	addwf	___flmul@prod^0,f,c
 10957  00388E  5018               	movf	(??___flmul+1)^0,w,c
 10958  003890  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10959  003892  5019               	movf	(??___flmul+2)^0,w,c
 10960  003894  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10961  003896  501A               	movf	(??___flmul+3)^0,w,c
 10962  003898  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10963  00389A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 10964  00389E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 10965  0038A2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 10966  0038A6  6A1C               	clrf	___flmul@grs^0,c
 10967  0038A8  5020               	movf	___flmul@aexp^0,w,c
 10968  0038AA  C021  F017         	movff	___flmul@bexp,??___flmul
 10969  0038AE  6A18               	clrf	(??___flmul+1)^0,c
 10970  0038B0  2617               	addwf	??___flmul^0,f,c
 10971  0038B2  0E00               	movlw	0
 10972  0038B4  2218               	addwfc	(??___flmul+1)^0,f,c
 10973  0038B6  0E82               	movlw	130
 10974  0038B8  2417               	addwf	??___flmul^0,w,c
 10975  0038BA  6E26               	movwf	___flmul@temp^0,c
 10976  0038BC  0EFF               	movlw	255
 10977  0038BE  2018               	addwfc	(??___flmul+1)^0,w,c
 10978  0038C0  6E27               	movwf	(___flmul@temp+1)^0,c
 10979  0038C2  EF78  F01C         	goto	l4759
 10980  0038C6                     l4753:
 10981  0038C6  90D8               	bcf	status,0,c
 10982  0038C8  3622               	rlcf	___flmul@prod^0,f,c
 10983  0038CA  3623               	rlcf	(___flmul@prod+1)^0,f,c
 10984  0038CC  3624               	rlcf	(___flmul@prod+2)^0,f,c
 10985  0038CE  3625               	rlcf	(___flmul@prod+3)^0,f,c
 10986  0038D0  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 10987  0038D2  EF6D  F01C         	goto	u5121
 10988  0038D6  EF6F  F01C         	goto	u5120
 10989  0038DA                     u5121:
 10990  0038DA  EF70  F01C         	goto	l1352
 10991  0038DE                     u5120:
 10992  0038DE  8022               	bsf	___flmul@prod^0,0,c
 10993  0038E0                     l1352:
 10994  0038E0  90D8               	bcf	status,0,c
 10995  0038E2  361C               	rlcf	___flmul@grs^0,f,c
 10996  0038E4  361D               	rlcf	(___flmul@grs+1)^0,f,c
 10997  0038E6  361E               	rlcf	(___flmul@grs+2)^0,f,c
 10998  0038E8  361F               	rlcf	(___flmul@grs+3)^0,f,c
 10999  0038EA  0626               	decf	___flmul@temp^0,f,c
 11000  0038EC  A0D8               	btfss	status,0,c
 11001  0038EE  0627               	decf	(___flmul@temp+1)^0,f,c
 11002  0038F0                     l4759:
 11003  0038F0  AE24               	btfss	(___flmul@prod+2)^0,7,c
 11004  0038F2  EF7D  F01C         	goto	u5131
 11005  0038F6  EF7F  F01C         	goto	u5130
 11006  0038FA                     u5131:
 11007  0038FA  EF63  F01C         	goto	l4753
 11008  0038FE                     u5130:
 11009  0038FE  0E00               	movlw	0
 11010  003900  6E20               	movwf	___flmul@aexp^0,c
 11011  003902  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 11012  003904  EF86  F01C         	goto	u5141
 11013  003908  EF88  F01C         	goto	u5140
 11014  00390C                     u5141:
 11015  00390C  EFAC  F01C         	goto	l1354
 11016  003910                     u5140:
 11017  003910  0EFF               	movlw	255
 11018  003912  141C               	andwf	___flmul@grs^0,w,c
 11019  003914  6E17               	movwf	??___flmul^0,c
 11020  003916  0EFF               	movlw	255
 11021  003918  141D               	andwf	(___flmul@grs+1)^0,w,c
 11022  00391A  6E18               	movwf	(??___flmul+1)^0,c
 11023  00391C  0EFF               	movlw	255
 11024  00391E  141E               	andwf	(___flmul@grs+2)^0,w,c
 11025  003920  6E19               	movwf	(??___flmul+2)^0,c
 11026  003922  0E7F               	movlw	127
 11027  003924  141F               	andwf	(___flmul@grs+3)^0,w,c
 11028  003926  6E1A               	movwf	(??___flmul+3)^0,c
 11029  003928  5017               	movf	??___flmul^0,w,c
 11030  00392A  1018               	iorwf	(??___flmul+1)^0,w,c
 11031  00392C  1019               	iorwf	(??___flmul+2)^0,w,c
 11032  00392E  101A               	iorwf	(??___flmul+3)^0,w,c
 11033  003930  B4D8               	btfsc	status,2,c
 11034  003932  EF9D  F01C         	goto	u5151
 11035  003936  EF9F  F01C         	goto	u5150
 11036  00393A                     u5151:
 11037  00393A  EFA3  F01C         	goto	l1355
 11038  00393E                     u5150:
 11039  00393E                     l4767:
 11040  00393E  0E01               	movlw	1
 11041  003940  6E20               	movwf	___flmul@aexp^0,c
 11042  003942  EFAC  F01C         	goto	l1354
 11043  003946                     l1355:
 11044  003946  A022               	btfss	___flmul@prod^0,0,c
 11045  003948  EFA8  F01C         	goto	u5161
 11046  00394C  EFAA  F01C         	goto	u5160
 11047  003950                     u5161:
 11048  003950  EFAC  F01C         	goto	l1354
 11049  003954                     u5160:
 11050  003954  EF9F  F01C         	goto	l4767
 11051  003958                     l1354:
 11052  003958  5020               	movf	___flmul@aexp^0,w,c
 11053  00395A  B4D8               	btfsc	status,2,c
 11054  00395C  EFB2  F01C         	goto	u5171
 11055  003960  EFB4  F01C         	goto	u5170
 11056  003964                     u5171:
 11057  003964  EFD8  F01C         	goto	l4779
 11058  003968                     u5170:
 11059  003968  0E01               	movlw	1
 11060  00396A  2622               	addwf	___flmul@prod^0,f,c
 11061  00396C  0E00               	movlw	0
 11062  00396E  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11063  003970  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11064  003972  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11065  003974  A025               	btfss	(___flmul@prod+3)^0,0,c
 11066  003976  EFBF  F01C         	goto	u5181
 11067  00397A  EFC1  F01C         	goto	u5180
 11068  00397E                     u5181:
 11069  00397E  EFD8  F01C         	goto	l4779
 11070  003982                     u5180:
 11071  003982  C022  F017         	movff	___flmul@prod,??___flmul
 11072  003986  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 11073  00398A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 11074  00398E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 11075  003992  341A               	rlcf	(??___flmul+3)^0,w,c
 11076  003994  321A               	rrcf	(??___flmul+3)^0,f,c
 11077  003996  3219               	rrcf	(??___flmul+2)^0,f,c
 11078  003998  3218               	rrcf	(??___flmul+1)^0,f,c
 11079  00399A  3217               	rrcf	??___flmul^0,f,c
 11080  00399C  C017  F022         	movff	??___flmul,___flmul@prod
 11081  0039A0  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 11082  0039A4  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 11083  0039A8  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 11084  0039AC  4A26               	infsnz	___flmul@temp^0,f,c
 11085  0039AE  2A27               	incf	(___flmul@temp+1)^0,f,c
 11086  0039B0                     l4779:
 11087  0039B0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 11088  0039B2  EFE3  F01C         	goto	u5191
 11089  0039B6  5027               	movf	(___flmul@temp+1)^0,w,c
 11090  0039B8  E108               	bnz	u5190
 11091  0039BA  2826               	incf	___flmul@temp^0,w,c
 11092  0039BC  A0D8               	btfss	status,0,c
 11093  0039BE  EFE3  F01C         	goto	u5191
 11094  0039C2  EFE5  F01C         	goto	u5190
 11095  0039C6                     u5191:
 11096  0039C6  EFEF  F01C         	goto	l4783
 11097  0039CA                     u5190:
 11098  0039CA  0E00               	movlw	0
 11099  0039CC  6E22               	movwf	___flmul@prod^0,c
 11100  0039CE  0E00               	movlw	0
 11101  0039D0  6E23               	movwf	(___flmul@prod+1)^0,c
 11102  0039D2  0E80               	movlw	128
 11103  0039D4  6E24               	movwf	(___flmul@prod+2)^0,c
 11104  0039D6  0E7F               	movlw	127
 11105  0039D8  6E25               	movwf	(___flmul@prod+3)^0,c
 11106  0039DA  EF1D  F01D         	goto	l4795
 11107  0039DE                     l4783:
 11108  0039DE  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 11109  0039E0  EFFC  F01C         	goto	u5200
 11110  0039E4  5027               	movf	(___flmul@temp+1)^0,w,c
 11111  0039E6  E106               	bnz	u5201
 11112  0039E8  0426               	decf	___flmul@temp^0,w,c
 11113  0039EA  B0D8               	btfsc	status,0,c
 11114  0039EC  EFFA  F01C         	goto	u5201
 11115  0039F0  EFFC  F01C         	goto	u5200
 11116  0039F4                     u5201:
 11117  0039F4  EF08  F01D         	goto	l1362
 11118  0039F8                     u5200:
 11119  0039F8  0E00               	movlw	0
 11120  0039FA  6E22               	movwf	___flmul@prod^0,c
 11121  0039FC  0E00               	movlw	0
 11122  0039FE  6E23               	movwf	(___flmul@prod+1)^0,c
 11123  003A00  0E00               	movlw	0
 11124  003A02  6E24               	movwf	(___flmul@prod+2)^0,c
 11125  003A04  0E00               	movlw	0
 11126  003A06  6E25               	movwf	(___flmul@prod+3)^0,c
 11127  003A08  0E00               	movlw	0
 11128  003A0A  6E1B               	movwf	___flmul@sign^0,c
 11129  003A0C  EF1D  F01D         	goto	l4795
 11130  003A10                     l1362:
 11131  003A10  C026  F021         	movff	___flmul@temp,___flmul@bexp
 11132  003A14  0EFF               	movlw	255
 11133  003A16  1622               	andwf	___flmul@prod^0,f,c
 11134  003A18  0EFF               	movlw	255
 11135  003A1A  1623               	andwf	(___flmul@prod+1)^0,f,c
 11136  003A1C  0E7F               	movlw	127
 11137  003A1E  1624               	andwf	(___flmul@prod+2)^0,f,c
 11138  003A20  0E00               	movlw	0
 11139  003A22  1625               	andwf	(___flmul@prod+3)^0,f,c
 11140  003A24  A021               	btfss	___flmul@bexp^0,0,c
 11141  003A26  EF17  F01D         	goto	u5211
 11142  003A2A  EF19  F01D         	goto	u5210
 11143  003A2E                     u5211:
 11144  003A2E  EF1A  F01D         	goto	l4793
 11145  003A32                     u5210:
 11146  003A32  8E24               	bsf	(___flmul@prod+2)^0,7,c
 11147  003A34                     l4793:
 11148  003A34  90D8               	bcf	status,0,c
 11149  003A36  3021               	rrcf	___flmul@bexp^0,w,c
 11150  003A38  6E25               	movwf	(___flmul@prod+3)^0,c
 11151  003A3A                     l4795:
 11152  003A3A  501B               	movf	___flmul@sign^0,w,c
 11153  003A3C  1225               	iorwf	(___flmul@prod+3)^0,f,c
 11154  003A3E  C022  F00F         	movff	___flmul@prod,?___flmul
 11155  003A42  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 11156  003A46  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 11157  003A4A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 11158  003A4E                     l1349:
 11159  003A4E  0012               	return		;funcret
 11160  003A50                     __end_of___flmul:
 11161                           	callstack 0
 11162                           
 11163 ;; *************** function ___flge *****************
 11164 ;; Defined at:
 11165 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;  ff1             4   39[COMRAM] unsigned char 
 11168 ;;  ff2             4   43[COMRAM] unsigned char 
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;		None
 11171 ;; Return value:  Size  Location     Type
 11172 ;;		None               void
 11173 ;; Registers used:
 11174 ;;		wreg, status,2, status,0
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11180 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11182 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11183 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11184 ;;Total ram usage:       12 bytes
 11185 ;; Hardware stack levels used: 1
 11186 ;; This function calls:
 11187 ;;		Nothing
 11188 ;; This function is called by:
 11189 ;;		_colourcards_readRGBC
 11190 ;;		_colourcards_testingRGBC
 11191 ;;		_left
 11192 ;;		_efgtoa
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196                           	psect	text42
 11197  005464                     __ptext42:
 11198                           	callstack 0
 11199  005464                     ___flge:
 11200                           	callstack 25
 11201  005464  0E00               	movlw	0
 11202  005466  1428               	andwf	___flge@ff1^0,w,c
 11203  005468  6E30               	movwf	??___flge^0,c
 11204  00546A  0E00               	movlw	0
 11205  00546C  1429               	andwf	(___flge@ff1+1)^0,w,c
 11206  00546E  6E31               	movwf	(??___flge+1)^0,c
 11207  005470  0E80               	movlw	128
 11208  005472  142A               	andwf	(___flge@ff1+2)^0,w,c
 11209  005474  6E32               	movwf	(??___flge+2)^0,c
 11210  005476  0E7F               	movlw	127
 11211  005478  142B               	andwf	(___flge@ff1+3)^0,w,c
 11212  00547A  6E33               	movwf	(??___flge+3)^0,c
 11213  00547C  5030               	movf	??___flge^0,w,c
 11214  00547E  1031               	iorwf	(??___flge+1)^0,w,c
 11215  005480  1032               	iorwf	(??___flge+2)^0,w,c
 11216  005482  1033               	iorwf	(??___flge+3)^0,w,c
 11217  005484  A4D8               	btfss	status,2,c
 11218  005486  EF47  F02A         	goto	u5371
 11219  00548A  EF49  F02A         	goto	u5370
 11220  00548E                     u5371:
 11221  00548E  EF51  F02A         	goto	l4907
 11222  005492                     u5370:
 11223  005492  0E00               	movlw	0
 11224  005494  6E28               	movwf	___flge@ff1^0,c
 11225  005496  0E00               	movlw	0
 11226  005498  6E29               	movwf	(___flge@ff1+1)^0,c
 11227  00549A  0E00               	movlw	0
 11228  00549C  6E2A               	movwf	(___flge@ff1+2)^0,c
 11229  00549E  0E00               	movlw	0
 11230  0054A0  6E2B               	movwf	(___flge@ff1+3)^0,c
 11231  0054A2                     l4907:
 11232  0054A2  0E00               	movlw	0
 11233  0054A4  142C               	andwf	___flge@ff2^0,w,c
 11234  0054A6  6E30               	movwf	??___flge^0,c
 11235  0054A8  0E00               	movlw	0
 11236  0054AA  142D               	andwf	(___flge@ff2+1)^0,w,c
 11237  0054AC  6E31               	movwf	(??___flge+1)^0,c
 11238  0054AE  0E80               	movlw	128
 11239  0054B0  142E               	andwf	(___flge@ff2+2)^0,w,c
 11240  0054B2  6E32               	movwf	(??___flge+2)^0,c
 11241  0054B4  0E7F               	movlw	127
 11242  0054B6  142F               	andwf	(___flge@ff2+3)^0,w,c
 11243  0054B8  6E33               	movwf	(??___flge+3)^0,c
 11244  0054BA  5030               	movf	??___flge^0,w,c
 11245  0054BC  1031               	iorwf	(??___flge+1)^0,w,c
 11246  0054BE  1032               	iorwf	(??___flge+2)^0,w,c
 11247  0054C0  1033               	iorwf	(??___flge+3)^0,w,c
 11248  0054C2  A4D8               	btfss	status,2,c
 11249  0054C4  EF66  F02A         	goto	u5381
 11250  0054C8  EF68  F02A         	goto	u5380
 11251  0054CC                     u5381:
 11252  0054CC  EF70  F02A         	goto	l4911
 11253  0054D0                     u5380:
 11254  0054D0  0E00               	movlw	0
 11255  0054D2  6E2C               	movwf	___flge@ff2^0,c
 11256  0054D4  0E00               	movlw	0
 11257  0054D6  6E2D               	movwf	(___flge@ff2+1)^0,c
 11258  0054D8  0E00               	movlw	0
 11259  0054DA  6E2E               	movwf	(___flge@ff2+2)^0,c
 11260  0054DC  0E00               	movlw	0
 11261  0054DE  6E2F               	movwf	(___flge@ff2+3)^0,c
 11262  0054E0                     l4911:
 11263  0054E0  AE2B               	btfss	(___flge@ff1+3)^0,7,c
 11264  0054E2  EF75  F02A         	goto	u5391
 11265  0054E6  EF77  F02A         	goto	u5390
 11266  0054EA                     u5391:
 11267  0054EA  EF80  F02A         	goto	l4915
 11268  0054EE                     u5390:
 11269  0054EE  6C28               	negf	___flge@ff1^0,c
 11270  0054F0  1E29               	comf	(___flge@ff1+1)^0,f,c
 11271  0054F2  B0D8               	btfsc	status,0,c
 11272  0054F4  2A29               	incf	(___flge@ff1+1)^0,f,c
 11273  0054F6  1E2A               	comf	(___flge@ff1+2)^0,f,c
 11274  0054F8  B0D8               	btfsc	status,0,c
 11275  0054FA  2A2A               	incf	(___flge@ff1+2)^0,f,c
 11276  0054FC  0E80               	movlw	128
 11277  0054FE  562B               	subfwb	(___flge@ff1+3)^0,f,c
 11278  005500                     l4915:
 11279  005500  AE2F               	btfss	(___flge@ff2+3)^0,7,c
 11280  005502  EF85  F02A         	goto	u5401
 11281  005506  EF87  F02A         	goto	u5400
 11282  00550A                     u5401:
 11283  00550A  EF90  F02A         	goto	l996
 11284  00550E                     u5400:
 11285  00550E  6C2C               	negf	___flge@ff2^0,c
 11286  005510  1E2D               	comf	(___flge@ff2+1)^0,f,c
 11287  005512  B0D8               	btfsc	status,0,c
 11288  005514  2A2D               	incf	(___flge@ff2+1)^0,f,c
 11289  005516  1E2E               	comf	(___flge@ff2+2)^0,f,c
 11290  005518  B0D8               	btfsc	status,0,c
 11291  00551A  2A2E               	incf	(___flge@ff2+2)^0,f,c
 11292  00551C  0E80               	movlw	128
 11293  00551E  562F               	subfwb	(___flge@ff2+3)^0,f,c
 11294  005520                     l996:
 11295  005520  0E00               	movlw	0
 11296  005522  1A28               	xorwf	___flge@ff1^0,f,c
 11297  005524  0E00               	movlw	0
 11298  005526  1A29               	xorwf	(___flge@ff1+1)^0,f,c
 11299  005528  0E00               	movlw	0
 11300  00552A  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
 11301  00552C  0E80               	movlw	128
 11302  00552E  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
 11303  005530  0E00               	movlw	0
 11304  005532  1A2C               	xorwf	___flge@ff2^0,f,c
 11305  005534  0E00               	movlw	0
 11306  005536  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
 11307  005538  0E00               	movlw	0
 11308  00553A  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
 11309  00553C  0E80               	movlw	128
 11310  00553E  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
 11311  005540  502C               	movf	___flge@ff2^0,w,c
 11312  005542  5C28               	subwf	___flge@ff1^0,w,c
 11313  005544  502D               	movf	(___flge@ff2+1)^0,w,c
 11314  005546  5829               	subwfb	(___flge@ff1+1)^0,w,c
 11315  005548  502E               	movf	(___flge@ff2+2)^0,w,c
 11316  00554A  582A               	subwfb	(___flge@ff1+2)^0,w,c
 11317  00554C  502F               	movf	(___flge@ff2+3)^0,w,c
 11318  00554E  582B               	subwfb	(___flge@ff1+3)^0,w,c
 11319  005550  B0D8               	btfsc	status,0,c
 11320  005552  EFAD  F02A         	goto	u5411
 11321  005556  EFAF  F02A         	goto	u5410
 11322  00555A                     u5411:
 11323  00555A  EFB2  F02A         	goto	l4921
 11324  00555E                     u5410:
 11325  00555E  90D8               	bcf	status,0,c
 11326  005560  EFB3  F02A         	goto	l1001
 11327  005564                     l4921:
 11328  005564  80D8               	bsf	status,0,c
 11329  005566                     l1001:
 11330  005566  0012               	return		;funcret
 11331  005568                     __end_of___flge:
 11332                           	callstack 0
 11333                           
 11334 ;; *************** function ___fladd *****************
 11335 ;; Defined at:
 11336 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;  b               4   39[COMRAM] unsigned char 
 11339 ;;  a               4   43[COMRAM] unsigned char 
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;  grs             1   54[COMRAM] unsigned char 
 11342 ;;  bexp            1   53[COMRAM] unsigned char 
 11343 ;;  aexp            1   52[COMRAM] unsigned char 
 11344 ;;  signs           1   51[COMRAM] unsigned char 
 11345 ;; Return value:  Size  Location     Type
 11346 ;;                  4   39[COMRAM] unsigned char 
 11347 ;; Registers used:
 11348 ;;		wreg, status,2, status,0
 11349 ;; Tracked objects:
 11350 ;;		On entry : 0/0
 11351 ;;		On exit  : 0/0
 11352 ;;		Unchanged: 0/0
 11353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11354 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11355 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11356 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11357 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11358 ;;Total ram usage:       16 bytes
 11359 ;; Hardware stack levels used: 1
 11360 ;; This function calls:
 11361 ;;		Nothing
 11362 ;; This function is called by:
 11363 ;;		_left
 11364 ;;		___flsub
 11365 ;;		_efgtoa
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text43
 11370  003166                     __ptext43:
 11371                           	callstack 0
 11372  003166                     ___fladd:
 11373                           	callstack 24
 11374  003166  502B               	movf	(___fladd@b+3)^0,w,c
 11375  003168  0B80               	andlw	128
 11376  00316A  6E34               	movwf	___fladd@signs^0,c
 11377  00316C  502B               	movf	(___fladd@b+3)^0,w,c
 11378  00316E  242B               	addwf	(___fladd@b+3)^0,w,c
 11379  003170  6E36               	movwf	___fladd@bexp^0,c
 11380  003172  AE2A               	btfss	(___fladd@b+2)^0,7,c
 11381  003174  EFBE  F018         	goto	u4211
 11382  003178  EFC0  F018         	goto	u4210
 11383  00317C                     u4211:
 11384  00317C  EFC1  F018         	goto	l4225
 11385  003180                     u4210:
 11386  003180  8036               	bsf	___fladd@bexp^0,0,c
 11387  003182                     l4225:
 11388  003182  5036               	movf	___fladd@bexp^0,w,c
 11389  003184  B4D8               	btfsc	status,2,c
 11390  003186  EFC7  F018         	goto	u4221
 11391  00318A  EFC9  F018         	goto	u4220
 11392  00318E                     u4221:
 11393  00318E  EFDE  F018         	goto	l4235
 11394  003192                     u4220:
 11395  003192  2836               	incf	___fladd@bexp^0,w,c
 11396  003194  A4D8               	btfss	status,2,c
 11397  003196  EFCF  F018         	goto	u4231
 11398  00319A  EFD1  F018         	goto	u4230
 11399  00319E                     u4231:
 11400  00319E  EFD9  F018         	goto	l4231
 11401  0031A2                     u4230:
 11402  0031A2  0E00               	movlw	0
 11403  0031A4  6E28               	movwf	___fladd@b^0,c
 11404  0031A6  0E00               	movlw	0
 11405  0031A8  6E29               	movwf	(___fladd@b+1)^0,c
 11406  0031AA  0E00               	movlw	0
 11407  0031AC  6E2A               	movwf	(___fladd@b+2)^0,c
 11408  0031AE  0E00               	movlw	0
 11409  0031B0  6E2B               	movwf	(___fladd@b+3)^0,c
 11410  0031B2                     l4231:
 11411  0031B2  8E2A               	bsf	(___fladd@b+2)^0,7,c
 11412  0031B4  0E00               	movlw	0
 11413  0031B6  6E2B               	movwf	(___fladd@b+3)^0,c
 11414  0031B8  EFE6  F018         	goto	l4237
 11415  0031BC                     l4235:
 11416  0031BC  0E00               	movlw	0
 11417  0031BE  6E28               	movwf	___fladd@b^0,c
 11418  0031C0  0E00               	movlw	0
 11419  0031C2  6E29               	movwf	(___fladd@b+1)^0,c
 11420  0031C4  0E00               	movlw	0
 11421  0031C6  6E2A               	movwf	(___fladd@b+2)^0,c
 11422  0031C8  0E00               	movlw	0
 11423  0031CA  6E2B               	movwf	(___fladd@b+3)^0,c
 11424  0031CC                     l4237:
 11425  0031CC  502F               	movf	(___fladd@a+3)^0,w,c
 11426  0031CE  0B80               	andlw	128
 11427  0031D0  6E35               	movwf	___fladd@aexp^0,c
 11428  0031D2  5034               	movf	___fladd@signs^0,w,c
 11429  0031D4  1835               	xorwf	___fladd@aexp^0,w,c
 11430  0031D6  B4D8               	btfsc	status,2,c
 11431  0031D8  EFF0  F018         	goto	u4241
 11432  0031DC  EFF2  F018         	goto	u4240
 11433  0031E0                     u4241:
 11434  0031E0  EFF3  F018         	goto	l4243
 11435  0031E4                     u4240:
 11436  0031E4  8C34               	bsf	___fladd@signs^0,6,c
 11437  0031E6                     l4243:
 11438  0031E6  502F               	movf	(___fladd@a+3)^0,w,c
 11439  0031E8  242F               	addwf	(___fladd@a+3)^0,w,c
 11440  0031EA  6E35               	movwf	___fladd@aexp^0,c
 11441  0031EC  AE2E               	btfss	(___fladd@a+2)^0,7,c
 11442  0031EE  EFFB  F018         	goto	u4251
 11443  0031F2  EFFD  F018         	goto	u4250
 11444  0031F6                     u4251:
 11445  0031F6  EFFE  F018         	goto	l4249
 11446  0031FA                     u4250:
 11447  0031FA  8035               	bsf	___fladd@aexp^0,0,c
 11448  0031FC                     l4249:
 11449  0031FC  5035               	movf	___fladd@aexp^0,w,c
 11450  0031FE  B4D8               	btfsc	status,2,c
 11451  003200  EF04  F019         	goto	u4261
 11452  003204  EF06  F019         	goto	u4260
 11453  003208                     u4261:
 11454  003208  EF1B  F019         	goto	l4259
 11455  00320C                     u4260:
 11456  00320C  2835               	incf	___fladd@aexp^0,w,c
 11457  00320E  A4D8               	btfss	status,2,c
 11458  003210  EF0C  F019         	goto	u4271
 11459  003214  EF0E  F019         	goto	u4270
 11460  003218                     u4271:
 11461  003218  EF16  F019         	goto	l4255
 11462  00321C                     u4270:
 11463  00321C  0E00               	movlw	0
 11464  00321E  6E2C               	movwf	___fladd@a^0,c
 11465  003220  0E00               	movlw	0
 11466  003222  6E2D               	movwf	(___fladd@a+1)^0,c
 11467  003224  0E00               	movlw	0
 11468  003226  6E2E               	movwf	(___fladd@a+2)^0,c
 11469  003228  0E00               	movlw	0
 11470  00322A  6E2F               	movwf	(___fladd@a+3)^0,c
 11471  00322C                     l4255:
 11472  00322C  8E2E               	bsf	(___fladd@a+2)^0,7,c
 11473  00322E  0E00               	movlw	0
 11474  003230  6E2F               	movwf	(___fladd@a+3)^0,c
 11475  003232  EF23  F019         	goto	l4261
 11476  003236                     l4259:
 11477  003236  0E00               	movlw	0
 11478  003238  6E2C               	movwf	___fladd@a^0,c
 11479  00323A  0E00               	movlw	0
 11480  00323C  6E2D               	movwf	(___fladd@a+1)^0,c
 11481  00323E  0E00               	movlw	0
 11482  003240  6E2E               	movwf	(___fladd@a+2)^0,c
 11483  003242  0E00               	movlw	0
 11484  003244  6E2F               	movwf	(___fladd@a+3)^0,c
 11485  003246                     l4261:
 11486  003246  5036               	movf	___fladd@bexp^0,w,c
 11487  003248  5C35               	subwf	___fladd@aexp^0,w,c
 11488  00324A  B0D8               	btfsc	status,0,c
 11489  00324C  EF2A  F019         	goto	u4281
 11490  003250  EF2C  F019         	goto	u4280
 11491  003254                     u4281:
 11492  003254  EF53  F019         	goto	l4297
 11493  003258                     u4280:
 11494  003258  AC34               	btfss	___fladd@signs^0,6,c
 11495  00325A  EF31  F019         	goto	u4291
 11496  00325E  EF33  F019         	goto	u4290
 11497  003262                     u4291:
 11498  003262  EF35  F019         	goto	l4267
 11499  003266                     u4290:
 11500  003266  0E80               	movlw	128
 11501  003268  1A34               	xorwf	___fladd@signs^0,f,c
 11502  00326A                     l4267:
 11503  00326A  C036  F037         	movff	___fladd@bexp,___fladd@grs
 11504  00326E  C035  F036         	movff	___fladd@aexp,___fladd@bexp
 11505  003272  C037  F035         	movff	___fladd@grs,___fladd@aexp
 11506  003276  C028  F037         	movff	___fladd@b,___fladd@grs
 11507  00327A  C02C  F028         	movff	___fladd@a,___fladd@b
 11508  00327E  C037  F02C         	movff	___fladd@grs,___fladd@a
 11509  003282  C029  F037         	movff	___fladd@b+1,___fladd@grs
 11510  003286  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
 11511  00328A  C037  F02D         	movff	___fladd@grs,___fladd@a+1
 11512  00328E  C02A  F037         	movff	___fladd@b+2,___fladd@grs
 11513  003292  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
 11514  003296  C037  F02E         	movff	___fladd@grs,___fladd@a+2
 11515  00329A  C02B  F037         	movff	___fladd@b+3,___fladd@grs
 11516  00329E  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
 11517  0032A2  C037  F02F         	movff	___fladd@grs,___fladd@a+3
 11518  0032A6                     l4297:
 11519  0032A6  0E00               	movlw	0
 11520  0032A8  6E37               	movwf	___fladd@grs^0,c
 11521  0032AA  5036               	movf	___fladd@bexp^0,w,c
 11522  0032AC  C035  F030         	movff	___fladd@aexp,??___fladd
 11523  0032B0  6A31               	clrf	(??___fladd+1)^0,c
 11524  0032B2  5E30               	subwf	??___fladd^0,f,c
 11525  0032B4  0E00               	movlw	0
 11526  0032B6  5A31               	subwfb	(??___fladd+1)^0,f,c
 11527  0032B8  BE31               	btfsc	(??___fladd+1)^0,7,c
 11528  0032BA  EF68  F019         	goto	u4301
 11529  0032BE  5031               	movf	(??___fladd+1)^0,w,c
 11530  0032C0  E109               	bnz	u4300
 11531  0032C2  0E1A               	movlw	26
 11532  0032C4  5C30               	subwf	??___fladd^0,w,c
 11533  0032C6  A0D8               	btfss	status,0,c
 11534  0032C8  EF68  F019         	goto	u4301
 11535  0032CC  EF6A  F019         	goto	u4300
 11536  0032D0                     u4301:
 11537  0032D0  EFA1  F019         	goto	l1260
 11538  0032D4                     u4300:
 11539  0032D4  5028               	movf	___fladd@b^0,w,c
 11540  0032D6  1029               	iorwf	(___fladd@b+1)^0,w,c
 11541  0032D8  102A               	iorwf	(___fladd@b+2)^0,w,c
 11542  0032DA  102B               	iorwf	(___fladd@b+3)^0,w,c
 11543  0032DC  A4D8               	btfss	status,2,c
 11544  0032DE  EF73  F019         	goto	u4311
 11545  0032E2  EF76  F019         	goto	u4310
 11546  0032E6                     u4311:
 11547  0032E6  0E01               	movlw	1
 11548  0032E8  EF77  F019         	goto	u4320
 11549  0032EC                     u4310:
 11550  0032EC  0E00               	movlw	0
 11551  0032EE                     u4320:
 11552  0032EE  6E37               	movwf	___fladd@grs^0,c
 11553  0032F0  0E00               	movlw	0
 11554  0032F2  6E28               	movwf	___fladd@b^0,c
 11555  0032F4  0E00               	movlw	0
 11556  0032F6  6E29               	movwf	(___fladd@b+1)^0,c
 11557  0032F8  0E00               	movlw	0
 11558  0032FA  6E2A               	movwf	(___fladd@b+2)^0,c
 11559  0032FC  0E00               	movlw	0
 11560  0032FE  6E2B               	movwf	(___fladd@b+3)^0,c
 11561  003300  C035  F036         	movff	___fladd@aexp,___fladd@bexp
 11562  003304  EFAA  F019         	goto	l1259
 11563  003308                     l1261:
 11564  003308  A037               	btfss	___fladd@grs^0,0,c
 11565  00330A  EF89  F019         	goto	u4331
 11566  00330E  EF8B  F019         	goto	u4330
 11567  003312                     u4331:
 11568  003312  EF91  F019         	goto	l4309
 11569  003316                     u4330:
 11570  003316  90D8               	bcf	status,0,c
 11571  003318  3037               	rrcf	___fladd@grs^0,w,c
 11572  00331A  0901               	iorlw	1
 11573  00331C  6E37               	movwf	___fladd@grs^0,c
 11574  00331E  EF93  F019         	goto	l4311
 11575  003322                     l4309:
 11576  003322  90D8               	bcf	status,0,c
 11577  003324  3237               	rrcf	___fladd@grs^0,f,c
 11578  003326                     l4311:
 11579  003326  A028               	btfss	___fladd@b^0,0,c
 11580  003328  EF98  F019         	goto	u4341
 11581  00332C  EF9A  F019         	goto	u4340
 11582  003330                     u4341:
 11583  003330  EF9B  F019         	goto	l4315
 11584  003334                     u4340:
 11585  003334  8E37               	bsf	___fladd@grs^0,7,c
 11586  003336                     l4315:
 11587  003336  342B               	rlcf	(___fladd@b+3)^0,w,c
 11588  003338  322B               	rrcf	(___fladd@b+3)^0,f,c
 11589  00333A  322A               	rrcf	(___fladd@b+2)^0,f,c
 11590  00333C  3229               	rrcf	(___fladd@b+1)^0,f,c
 11591  00333E  3228               	rrcf	___fladd@b^0,f,c
 11592  003340  2A36               	incf	___fladd@bexp^0,f,c
 11593  003342                     l1260:
 11594  003342  5035               	movf	___fladd@aexp^0,w,c
 11595  003344  5C36               	subwf	___fladd@bexp^0,w,c
 11596  003346  A0D8               	btfss	status,0,c
 11597  003348  EFA8  F019         	goto	u4351
 11598  00334C  EFAA  F019         	goto	u4350
 11599  003350                     u4351:
 11600  003350  EF84  F019         	goto	l1261
 11601  003354                     u4350:
 11602  003354                     l1259:
 11603  003354  BC34               	btfsc	___fladd@signs^0,6,c
 11604  003356  EFAF  F019         	goto	u4361
 11605  00335A  EFB1  F019         	goto	u4360
 11606  00335E                     u4361:
 11607  00335E  EFF1  F019         	goto	l4343
 11608  003362                     u4360:
 11609  003362  5036               	movf	___fladd@bexp^0,w,c
 11610  003364  A4D8               	btfss	status,2,c
 11611  003366  EFB7  F019         	goto	u4371
 11612  00336A  EFB9  F019         	goto	u4370
 11613  00336E                     u4371:
 11614  00336E  EFC3  F019         	goto	l4325
 11615  003372                     u4370:
 11616  003372  0E00               	movlw	0
 11617  003374  6E28               	movwf	?___fladd^0,c
 11618  003376  0E00               	movlw	0
 11619  003378  6E29               	movwf	(?___fladd+1)^0,c
 11620  00337A  0E00               	movlw	0
 11621  00337C  6E2A               	movwf	(?___fladd+2)^0,c
 11622  00337E  0E00               	movlw	0
 11623  003380  6E2B               	movwf	(?___fladd+3)^0,c
 11624  003382  EF12  F01B         	goto	l1268
 11625  003386                     l4325:
 11626  003386  502C               	movf	___fladd@a^0,w,c
 11627  003388  2628               	addwf	___fladd@b^0,f,c
 11628  00338A  502D               	movf	(___fladd@a+1)^0,w,c
 11629  00338C  2229               	addwfc	(___fladd@b+1)^0,f,c
 11630  00338E  502E               	movf	(___fladd@a+2)^0,w,c
 11631  003390  222A               	addwfc	(___fladd@b+2)^0,f,c
 11632  003392  502F               	movf	(___fladd@a+3)^0,w,c
 11633  003394  222B               	addwfc	(___fladd@b+3)^0,f,c
 11634  003396  A02B               	btfss	(___fladd@b+3)^0,0,c
 11635  003398  EFD0  F019         	goto	u4381
 11636  00339C  EFD2  F019         	goto	u4380
 11637  0033A0                     u4381:
 11638  0033A0  EF7E  F01A         	goto	l4379
 11639  0033A4                     u4380:
 11640  0033A4  A037               	btfss	___fladd@grs^0,0,c
 11641  0033A6  EFD7  F019         	goto	u4391
 11642  0033AA  EFD9  F019         	goto	u4390
 11643  0033AE                     u4391:
 11644  0033AE  EFDF  F019         	goto	l4333
 11645  0033B2                     u4390:
 11646  0033B2  90D8               	bcf	status,0,c
 11647  0033B4  3037               	rrcf	___fladd@grs^0,w,c
 11648  0033B6  0901               	iorlw	1
 11649  0033B8  6E37               	movwf	___fladd@grs^0,c
 11650  0033BA  EFE1  F019         	goto	l4335
 11651  0033BE                     l4333:
 11652  0033BE  90D8               	bcf	status,0,c
 11653  0033C0  3237               	rrcf	___fladd@grs^0,f,c
 11654  0033C2                     l4335:
 11655  0033C2  A028               	btfss	___fladd@b^0,0,c
 11656  0033C4  EFE6  F019         	goto	u4401
 11657  0033C8  EFE8  F019         	goto	u4400
 11658  0033CC                     u4401:
 11659  0033CC  EFE9  F019         	goto	l4339
 11660  0033D0                     u4400:
 11661  0033D0  8E37               	bsf	___fladd@grs^0,7,c
 11662  0033D2                     l4339:
 11663  0033D2  342B               	rlcf	(___fladd@b+3)^0,w,c
 11664  0033D4  322B               	rrcf	(___fladd@b+3)^0,f,c
 11665  0033D6  322A               	rrcf	(___fladd@b+2)^0,f,c
 11666  0033D8  3229               	rrcf	(___fladd@b+1)^0,f,c
 11667  0033DA  3228               	rrcf	___fladd@b^0,f,c
 11668  0033DC  2A36               	incf	___fladd@bexp^0,f,c
 11669  0033DE  EF7E  F01A         	goto	l4379
 11670  0033E2                     l4343:
 11671  0033E2  502C               	movf	___fladd@a^0,w,c
 11672  0033E4  5C28               	subwf	___fladd@b^0,w,c
 11673  0033E6  502D               	movf	(___fladd@a+1)^0,w,c
 11674  0033E8  5829               	subwfb	(___fladd@b+1)^0,w,c
 11675  0033EA  502E               	movf	(___fladd@a+2)^0,w,c
 11676  0033EC  582A               	subwfb	(___fladd@b+2)^0,w,c
 11677  0033EE  502B               	movf	(___fladd@b+3)^0,w,c
 11678  0033F0  0A80               	xorlw	128
 11679  0033F2  6E30               	movwf	??___fladd^0,c
 11680  0033F4  502F               	movf	(___fladd@a+3)^0,w,c
 11681  0033F6  0A80               	xorlw	128
 11682  0033F8  5830               	subwfb	??___fladd^0,w,c
 11683  0033FA  B0D8               	btfsc	status,0,c
 11684  0033FC  EF02  F01A         	goto	u4411
 11685  003400  EF04  F01A         	goto	u4410
 11686  003404                     u4411:
 11687  003404  EF2F  F01A         	goto	l4353
 11688  003408                     u4410:
 11689  003408  5028               	movf	___fladd@b^0,w,c
 11690  00340A  5C2C               	subwf	___fladd@a^0,w,c
 11691  00340C  6E30               	movwf	??___fladd^0,c
 11692  00340E  5029               	movf	(___fladd@b+1)^0,w,c
 11693  003410  582D               	subwfb	(___fladd@a+1)^0,w,c
 11694  003412  6E31               	movwf	(??___fladd+1)^0,c
 11695  003414  502A               	movf	(___fladd@b+2)^0,w,c
 11696  003416  582E               	subwfb	(___fladd@a+2)^0,w,c
 11697  003418  6E32               	movwf	(??___fladd+2)^0,c
 11698  00341A  502B               	movf	(___fladd@b+3)^0,w,c
 11699  00341C  582F               	subwfb	(___fladd@a+3)^0,w,c
 11700  00341E  6E33               	movwf	(??___fladd+3)^0,c
 11701  003420  0EFF               	movlw	255
 11702  003422  2430               	addwf	??___fladd^0,w,c
 11703  003424  6E28               	movwf	___fladd@b^0,c
 11704  003426  0EFF               	movlw	255
 11705  003428  2031               	addwfc	(??___fladd+1)^0,w,c
 11706  00342A  6E29               	movwf	(___fladd@b+1)^0,c
 11707  00342C  0EFF               	movlw	255
 11708  00342E  2032               	addwfc	(??___fladd+2)^0,w,c
 11709  003430  6E2A               	movwf	(___fladd@b+2)^0,c
 11710  003432  0EFF               	movlw	255
 11711  003434  2033               	addwfc	(??___fladd+3)^0,w,c
 11712  003436  6E2B               	movwf	(___fladd@b+3)^0,c
 11713  003438  0E80               	movlw	128
 11714  00343A  1A34               	xorwf	___fladd@signs^0,f,c
 11715  00343C  6C37               	negf	___fladd@grs^0,c
 11716  00343E  5037               	movf	___fladd@grs^0,w,c
 11717  003440  A4D8               	btfss	status,2,c
 11718  003442  EF25  F01A         	goto	u4421
 11719  003446  EF27  F01A         	goto	u4420
 11720  00344A                     u4421:
 11721  00344A  EF37  F01A         	goto	l1276
 11722  00344E                     u4420:
 11723  00344E  0E01               	movlw	1
 11724  003450  2628               	addwf	___fladd@b^0,f,c
 11725  003452  0E00               	movlw	0
 11726  003454  2229               	addwfc	(___fladd@b+1)^0,f,c
 11727  003456  222A               	addwfc	(___fladd@b+2)^0,f,c
 11728  003458  222B               	addwfc	(___fladd@b+3)^0,f,c
 11729  00345A  EF37  F01A         	goto	l1276
 11730  00345E                     l4353:
 11731  00345E  502C               	movf	___fladd@a^0,w,c
 11732  003460  5E28               	subwf	___fladd@b^0,f,c
 11733  003462  502D               	movf	(___fladd@a+1)^0,w,c
 11734  003464  5A29               	subwfb	(___fladd@b+1)^0,f,c
 11735  003466  502E               	movf	(___fladd@a+2)^0,w,c
 11736  003468  5A2A               	subwfb	(___fladd@b+2)^0,f,c
 11737  00346A  502F               	movf	(___fladd@a+3)^0,w,c
 11738  00346C  5A2B               	subwfb	(___fladd@b+3)^0,f,c
 11739  00346E                     l1276:
 11740  00346E  5028               	movf	___fladd@b^0,w,c
 11741  003470  1029               	iorwf	(___fladd@b+1)^0,w,c
 11742  003472  102A               	iorwf	(___fladd@b+2)^0,w,c
 11743  003474  102B               	iorwf	(___fladd@b+3)^0,w,c
 11744  003476  A4D8               	btfss	status,2,c
 11745  003478  EF40  F01A         	goto	u4431
 11746  00347C  EF42  F01A         	goto	u4430
 11747  003480                     u4431:
 11748  003480  EF77  F01A         	goto	l4377
 11749  003484                     u4430:
 11750  003484  5037               	movf	___fladd@grs^0,w,c
 11751  003486  A4D8               	btfss	status,2,c
 11752  003488  EF48  F01A         	goto	u4441
 11753  00348C  EF4A  F01A         	goto	u4440
 11754  003490                     u4441:
 11755  003490  EF77  F01A         	goto	l4377
 11756  003494                     u4440:
 11757  003494  0E00               	movlw	0
 11758  003496  6E28               	movwf	?___fladd^0,c
 11759  003498  0E00               	movlw	0
 11760  00349A  6E29               	movwf	(?___fladd+1)^0,c
 11761  00349C  0E00               	movlw	0
 11762  00349E  6E2A               	movwf	(?___fladd+2)^0,c
 11763  0034A0  0E00               	movlw	0
 11764  0034A2  6E2B               	movwf	(?___fladd+3)^0,c
 11765  0034A4  EF12  F01B         	goto	l1268
 11766  0034A8                     l4361:
 11767  0034A8  90D8               	bcf	status,0,c
 11768  0034AA  3628               	rlcf	___fladd@b^0,f,c
 11769  0034AC  3629               	rlcf	(___fladd@b+1)^0,f,c
 11770  0034AE  362A               	rlcf	(___fladd@b+2)^0,f,c
 11771  0034B0  362B               	rlcf	(___fladd@b+3)^0,f,c
 11772  0034B2  AE37               	btfss	___fladd@grs^0,7,c
 11773  0034B4  EF5E  F01A         	goto	u4451
 11774  0034B8  EF60  F01A         	goto	u4450
 11775  0034BC                     u4451:
 11776  0034BC  EF61  F01A         	goto	l4367
 11777  0034C0                     u4450:
 11778  0034C0  8028               	bsf	___fladd@b^0,0,c
 11779  0034C2                     l4367:
 11780  0034C2  A037               	btfss	___fladd@grs^0,0,c
 11781  0034C4  EF66  F01A         	goto	u4461
 11782  0034C8  EF68  F01A         	goto	u4460
 11783  0034CC                     u4461:
 11784  0034CC  EF6C  F01A         	goto	l4371
 11785  0034D0                     u4460:
 11786  0034D0  80D8               	bsf	status,0,c
 11787  0034D2  3637               	rlcf	___fladd@grs^0,f,c
 11788  0034D4  EF6E  F01A         	goto	l4373
 11789  0034D8                     l4371:
 11790  0034D8  90D8               	bcf	status,0,c
 11791  0034DA  3637               	rlcf	___fladd@grs^0,f,c
 11792  0034DC                     l4373:
 11793  0034DC  5036               	movf	___fladd@bexp^0,w,c
 11794  0034DE  B4D8               	btfsc	status,2,c
 11795  0034E0  EF74  F01A         	goto	u4471
 11796  0034E4  EF76  F01A         	goto	u4470
 11797  0034E8                     u4471:
 11798  0034E8  EF77  F01A         	goto	l4377
 11799  0034EC                     u4470:
 11800  0034EC  0636               	decf	___fladd@bexp^0,f,c
 11801  0034EE                     l4377:
 11802  0034EE  AE2A               	btfss	(___fladd@b+2)^0,7,c
 11803  0034F0  EF7C  F01A         	goto	u4481
 11804  0034F4  EF7E  F01A         	goto	u4480
 11805  0034F8                     u4481:
 11806  0034F8  EF54  F01A         	goto	l4361
 11807  0034FC                     u4480:
 11808  0034FC                     l4379:
 11809  0034FC  0E00               	movlw	0
 11810  0034FE  6E35               	movwf	___fladd@aexp^0,c
 11811  003500  AE37               	btfss	___fladd@grs^0,7,c
 11812  003502  EF85  F01A         	goto	u4491
 11813  003506  EF87  F01A         	goto	u4490
 11814  00350A                     u4491:
 11815  00350A  EF9F  F01A         	goto	l1285
 11816  00350E                     u4490:
 11817  00350E  C037  F030         	movff	___fladd@grs,??___fladd
 11818  003512  0E7F               	movlw	127
 11819  003514  1630               	andwf	??___fladd^0,f,c
 11820  003516  B4D8               	btfsc	status,2,c
 11821  003518  EF90  F01A         	goto	u4501
 11822  00351C  EF92  F01A         	goto	u4500
 11823  003520                     u4501:
 11824  003520  EF96  F01A         	goto	l1286
 11825  003524                     u4500:
 11826  003524                     l4385:
 11827  003524  0E01               	movlw	1
 11828  003526  6E35               	movwf	___fladd@aexp^0,c
 11829  003528  EF9F  F01A         	goto	l1285
 11830  00352C                     l1286:
 11831  00352C  A028               	btfss	___fladd@b^0,0,c
 11832  00352E  EF9B  F01A         	goto	u4511
 11833  003532  EF9D  F01A         	goto	u4510
 11834  003536                     u4511:
 11835  003536  EF9F  F01A         	goto	l1285
 11836  00353A                     u4510:
 11837  00353A  EF92  F01A         	goto	l4385
 11838  00353E                     l1285:
 11839  00353E  5035               	movf	___fladd@aexp^0,w,c
 11840  003540  B4D8               	btfsc	status,2,c
 11841  003542  EFA5  F01A         	goto	u4521
 11842  003546  EFA7  F01A         	goto	u4520
 11843  00354A                     u4521:
 11844  00354A  EFD2  F01A         	goto	l4397
 11845  00354E                     u4520:
 11846  00354E  0E01               	movlw	1
 11847  003550  2628               	addwf	___fladd@b^0,f,c
 11848  003552  0E00               	movlw	0
 11849  003554  2229               	addwfc	(___fladd@b+1)^0,f,c
 11850  003556  222A               	addwfc	(___fladd@b+2)^0,f,c
 11851  003558  222B               	addwfc	(___fladd@b+3)^0,f,c
 11852  00355A  A02B               	btfss	(___fladd@b+3)^0,0,c
 11853  00355C  EFB2  F01A         	goto	u4531
 11854  003560  EFB4  F01A         	goto	u4530
 11855  003564                     u4531:
 11856  003564  EFD2  F01A         	goto	l4397
 11857  003568                     u4530:
 11858  003568  C028  F030         	movff	___fladd@b,??___fladd
 11859  00356C  C029  F031         	movff	___fladd@b+1,??___fladd+1
 11860  003570  C02A  F032         	movff	___fladd@b+2,??___fladd+2
 11861  003574  C02B  F033         	movff	___fladd@b+3,??___fladd+3
 11862  003578  3433               	rlcf	(??___fladd+3)^0,w,c
 11863  00357A  3233               	rrcf	(??___fladd+3)^0,f,c
 11864  00357C  3232               	rrcf	(??___fladd+2)^0,f,c
 11865  00357E  3231               	rrcf	(??___fladd+1)^0,f,c
 11866  003580  3230               	rrcf	??___fladd^0,f,c
 11867  003582  C030  F028         	movff	??___fladd,___fladd@b
 11868  003586  C031  F029         	movff	??___fladd+1,___fladd@b+1
 11869  00358A  C032  F02A         	movff	??___fladd+2,___fladd@b+2
 11870  00358E  C033  F02B         	movff	??___fladd+3,___fladd@b+3
 11871  003592  2836               	incf	___fladd@bexp^0,w,c
 11872  003594  B4D8               	btfsc	status,2,c
 11873  003596  EFCF  F01A         	goto	u4541
 11874  00359A  EFD1  F01A         	goto	u4540
 11875  00359E                     u4541:
 11876  00359E  EFD2  F01A         	goto	l4397
 11877  0035A2                     u4540:
 11878  0035A2  2A36               	incf	___fladd@bexp^0,f,c
 11879  0035A4                     l4397:
 11880  0035A4  2836               	incf	___fladd@bexp^0,w,c
 11881  0035A6  B4D8               	btfsc	status,2,c
 11882  0035A8  EFD8  F01A         	goto	u4551
 11883  0035AC  EFDA  F01A         	goto	u4550
 11884  0035B0                     u4551:
 11885  0035B0  EFE2  F01A         	goto	l4401
 11886  0035B4                     u4550:
 11887  0035B4  5036               	movf	___fladd@bexp^0,w,c
 11888  0035B6  A4D8               	btfss	status,2,c
 11889  0035B8  EFE0  F01A         	goto	u4561
 11890  0035BC  EFE2  F01A         	goto	u4560
 11891  0035C0                     u4561:
 11892  0035C0  EFF4  F01A         	goto	l4405
 11893  0035C4                     u4560:
 11894  0035C4                     l4401:
 11895  0035C4  0E00               	movlw	0
 11896  0035C6  6E28               	movwf	___fladd@b^0,c
 11897  0035C8  0E00               	movlw	0
 11898  0035CA  6E29               	movwf	(___fladd@b+1)^0,c
 11899  0035CC  0E00               	movlw	0
 11900  0035CE  6E2A               	movwf	(___fladd@b+2)^0,c
 11901  0035D0  0E00               	movlw	0
 11902  0035D2  6E2B               	movwf	(___fladd@b+3)^0,c
 11903  0035D4  5036               	movf	___fladd@bexp^0,w,c
 11904  0035D6  A4D8               	btfss	status,2,c
 11905  0035D8  EFF0  F01A         	goto	u4571
 11906  0035DC  EFF2  F01A         	goto	u4570
 11907  0035E0                     u4571:
 11908  0035E0  EFF4  F01A         	goto	l4405
 11909  0035E4                     u4570:
 11910  0035E4  0E00               	movlw	0
 11911  0035E6  6E34               	movwf	___fladd@signs^0,c
 11912  0035E8                     l4405:
 11913  0035E8  A036               	btfss	___fladd@bexp^0,0,c
 11914  0035EA  EFF9  F01A         	goto	u4581
 11915  0035EE  EFFB  F01A         	goto	u4580
 11916  0035F2                     u4581:
 11917  0035F2  EFFE  F01A         	goto	l4409
 11918  0035F6                     u4580:
 11919  0035F6  8E2A               	bsf	(___fladd@b+2)^0,7,c
 11920  0035F8  EFFF  F01A         	goto	l4411
 11921  0035FC                     l4409:
 11922  0035FC  9E2A               	bcf	(___fladd@b+2)^0,7,c
 11923  0035FE                     l4411:
 11924  0035FE  90D8               	bcf	status,0,c
 11925  003600  3036               	rrcf	___fladd@bexp^0,w,c
 11926  003602  6E2B               	movwf	(___fladd@b+3)^0,c
 11927  003604  AE34               	btfss	___fladd@signs^0,7,c
 11928  003606  EF07  F01B         	goto	u4591
 11929  00360A  EF09  F01B         	goto	u4590
 11930  00360E                     u4591:
 11931  00360E  EF0A  F01B         	goto	l4417
 11932  003612                     u4590:
 11933  003612  8E2B               	bsf	(___fladd@b+3)^0,7,c
 11934  003614                     l4417:
 11935  003614  C028  F028         	movff	___fladd@b,?___fladd
 11936  003618  C029  F029         	movff	___fladd@b+1,?___fladd+1
 11937  00361C  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
 11938  003620  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
 11939  003624                     l1268:
 11940  003624  0012               	return		;funcret
 11941  003626                     __end_of___fladd:
 11942                           	callstack 0
 11943                           
 11944 ;; *************** function _stop *****************
 11945 ;; Defined at:
 11946 ;;		line 129 in file "DC_motors.c"
 11947 ;; Parameters:    Size  Location     Type
 11948 ;;  mL              2   25[COMRAM] PTR struct .
 11949 ;;		 -> main@motorL(9), 
 11950 ;;  mR              2   27[COMRAM] PTR struct .
 11951 ;;		 -> main@motorR(9), 
 11952 ;; Auto vars:     Size  Location     Type
 11953 ;;		None
 11954 ;; Return value:  Size  Location     Type
 11955 ;;                  1    wreg      void 
 11956 ;; Registers used:
 11957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11958 ;; Tracked objects:
 11959 ;;		On entry : 0/0
 11960 ;;		On exit  : 0/0
 11961 ;;		Unchanged: 0/0
 11962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11966 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11967 ;;Total ram usage:        4 bytes
 11968 ;; Hardware stack levels used: 1
 11969 ;; Hardware stack levels required when called: 2
 11970 ;; This function calls:
 11971 ;;		_DCmotors_setPWM
 11972 ;; This function is called by:
 11973 ;;		_colourcards_readRGBC
 11974 ;;		_DCmotors_calibration
 11975 ;;		_DCmotors_testing
 11976 ;; This function uses a non-reentrant model
 11977 ;;
 11978                           
 11979                           	psect	text44
 11980  005C12                     __ptext44:
 11981                           	callstack 0
 11982  005C12                     _stop:
 11983                           	callstack 27
 11984  005C12                     
 11985                           ;DC_motors.c: 129: void stop(DC_motor *mL, DC_motor *mR);DC_motors.c: 130: {;DC_motors.c
      +                          : 131:     LATDbits.LATD4 = 1;
 11986  005C12  887C               	bsf	124,4,c	;volatile
 11987                           
 11988                           ;DC_motors.c: 134:     while((mL->power > 0) && (mR->power > 0)){
 11989  005C14  EF28  F02E         	goto	l5945
 11990  005C18                     l5937:
 11991                           
 11992                           ;DC_motors.c: 135:         mL->power -= 10;
 11993  005C18  C01A  FFD9         	movff	stop@mL,fsr2l
 11994  005C1C  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11995  005C20  0E0A               	movlw	10
 11996  005C22  5EDF               	subwf	indf2,f,c
 11997                           
 11998                           ;DC_motors.c: 136:         mR->power -= 10;
 11999  005C24  C01C  FFD9         	movff	stop@mR,fsr2l
 12000  005C28  C01D  FFDA         	movff	stop@mR+1,fsr2h
 12001  005C2C  0E0A               	movlw	10
 12002  005C2E  5EDF               	subwf	indf2,f,c
 12003  005C30                     
 12004                           ;DC_motors.c: 139:         DCmotors_setPWM(mL);
 12005  005C30  C01A  F00F         	movff	stop@mL,DCmotors_setPWM@m
 12006  005C34  C01B  F010         	movff	stop@mL+1,DCmotors_setPWM@m+1
 12007  005C38  EC70  F021         	call	_DCmotors_setPWM	;wreg free
 12008  005C3C                     
 12009                           ;DC_motors.c: 140:         DCmotors_setPWM(mR);
 12010  005C3C  C01C  F00F         	movff	stop@mR,DCmotors_setPWM@m
 12011  005C40  C01D  F010         	movff	stop@mR+1,DCmotors_setPWM@m+1
 12012  005C44  EC70  F021         	call	_DCmotors_setPWM	;wreg free
 12013  005C48                     
 12014                           ;DC_motors.c: 141:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 12015  005C48  0EA0               	movlw	160
 12016  005C4A                     u8457:
 12017  005C4A  D000               	nop2	
 12018  005C4C  2EE8               	decfsz	wreg,f,c
 12019  005C4E  D7FD               	bra	u8457
 12020  005C50                     l5945:
 12021                           
 12022                           ;DC_motors.c: 134:     while((mL->power > 0) && (mR->power > 0)){
 12023  005C50  C01A  FFD9         	movff	stop@mL,fsr2l
 12024  005C54  C01B  FFDA         	movff	stop@mL+1,fsr2h
 12025  005C58  50DF               	movf	indf2,w,c
 12026  005C5A  B4D8               	btfsc	status,2,c
 12027  005C5C  EF32  F02E         	goto	u7281
 12028  005C60  EF34  F02E         	goto	u7280
 12029  005C64                     u7281:
 12030  005C64  EF40  F02E         	goto	l601
 12031  005C68                     u7280:
 12032  005C68  C01C  FFD9         	movff	stop@mR,fsr2l
 12033  005C6C  C01D  FFDA         	movff	stop@mR+1,fsr2h
 12034  005C70  50DF               	movf	indf2,w,c
 12035  005C72  A4D8               	btfss	status,2,c
 12036  005C74  EF3E  F02E         	goto	u7291
 12037  005C78  EF40  F02E         	goto	u7290
 12038  005C7C                     u7291:
 12039  005C7C  EF0C  F02E         	goto	l5937
 12040  005C80                     u7290:
 12041  005C80                     l601:
 12042                           
 12043                           ;DC_motors.c: 144:     LATDbits.LATD4 = 0;
 12044  005C80  987C               	bcf	124,4,c	;volatile
 12045  005C82  0012               	return		;funcret
 12046  005C84                     __end_of_stop:
 12047                           	callstack 0
 12048                           
 12049 ;; *************** function _reverse *****************
 12050 ;; Defined at:
 12051 ;;		line 108 in file "DC_motors.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  mL              2   25[COMRAM] PTR struct .
 12054 ;;		 -> main@motorL(9), 
 12055 ;;  mR              2   27[COMRAM] PTR struct .
 12056 ;;		 -> main@motorR(9), 
 12057 ;; Auto vars:     Size  Location     Type
 12058 ;;		None
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  1    wreg      void 
 12061 ;; Registers used:
 12062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12063 ;; Tracked objects:
 12064 ;;		On entry : 0/0
 12065 ;;		On exit  : 0/0
 12066 ;;		Unchanged: 0/0
 12067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12071 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12072 ;;Total ram usage:        5 bytes
 12073 ;; Hardware stack levels used: 1
 12074 ;; Hardware stack levels required when called: 2
 12075 ;; This function calls:
 12076 ;;		_DCmotors_setPWM
 12077 ;; This function is called by:
 12078 ;;		_colourcards_readRGBC
 12079 ;;		_DCmotors_testing
 12080 ;; This function uses a non-reentrant model
 12081 ;;
 12082                           
 12083                           	psect	text45
 12084  005AF6                     __ptext45:
 12085                           	callstack 0
 12086  005AF6                     _reverse:
 12087                           	callstack 27
 12088  005AF6                     
 12089                           ;DC_motors.c: 108: void reverse(DC_motor *mL, DC_motor *mR);DC_motors.c: 109: {;DC_motor
      +                          s.c: 111:     mL->direction = 0;
 12090  005AF6  EE20 F001          	lfsr	2,1
 12091  005AFA  501A               	movf	reverse@mL^0,w,c
 12092  005AFC  26D9               	addwf	fsr2l,f,c
 12093  005AFE  501B               	movf	(reverse@mL+1)^0,w,c
 12094  005B00  22DA               	addwfc	fsr2h,f,c
 12095  005B02  0E00               	movlw	0
 12096  005B04  6EDF               	movwf	indf2,c
 12097                           
 12098                           ;DC_motors.c: 112:     mR->direction = 0;
 12099  005B06  EE20 F001          	lfsr	2,1
 12100  005B0A  501C               	movf	reverse@mR^0,w,c
 12101  005B0C  26D9               	addwf	fsr2l,f,c
 12102  005B0E  501D               	movf	(reverse@mR+1)^0,w,c
 12103  005B10  22DA               	addwfc	fsr2h,f,c
 12104  005B12  0E00               	movlw	0
 12105  005B14  6EDF               	movwf	indf2,c
 12106                           
 12107                           ;DC_motors.c: 115:     while((mL->power < 40) && (mR->power < 40)){
 12108  005B16  EFA9  F02D         	goto	l5965
 12109  005B1A                     l5957:
 12110                           
 12111                           ;DC_motors.c: 116:         mL->power += 10;
 12112  005B1A  C01A  FFD9         	movff	reverse@mL,fsr2l
 12113  005B1E  C01B  FFDA         	movff	reverse@mL+1,fsr2h
 12114  005B22  0E0A               	movlw	10
 12115  005B24  26DF               	addwf	indf2,f,c
 12116                           
 12117                           ;DC_motors.c: 117:         mR->power += 10;
 12118  005B26  C01C  FFD9         	movff	reverse@mR,fsr2l
 12119  005B2A  C01D  FFDA         	movff	reverse@mR+1,fsr2h
 12120  005B2E  0E0A               	movlw	10
 12121  005B30  26DF               	addwf	indf2,f,c
 12122  005B32                     
 12123                           ;DC_motors.c: 119:         DCmotors_setPWM(mL);
 12124  005B32  C01A  F00F         	movff	reverse@mL,DCmotors_setPWM@m
 12125  005B36  C01B  F010         	movff	reverse@mL+1,DCmotors_setPWM@m+1
 12126  005B3A  EC70  F021         	call	_DCmotors_setPWM	;wreg free
 12127  005B3E                     
 12128                           ;DC_motors.c: 120:         DCmotors_setPWM(mR);
 12129  005B3E  C01C  F00F         	movff	reverse@mR,DCmotors_setPWM@m
 12130  005B42  C01D  F010         	movff	reverse@mR+1,DCmotors_setPWM@m+1
 12131  005B46  EC70  F021         	call	_DCmotors_setPWM	;wreg free
 12132  005B4A                     
 12133                           ;DC_motors.c: 121:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 12134  005B4A  0EA0               	movlw	160
 12135  005B4C                     u8467:
 12136  005B4C  D000               	nop2	
 12137  005B4E  2EE8               	decfsz	wreg,f,c
 12138  005B50  D7FD               	bra	u8467
 12139  005B52                     l5965:
 12140                           
 12141                           ;DC_motors.c: 115:     while((mL->power < 40) && (mR->power < 40)){
 12142  005B52  C01A  FFD9         	movff	reverse@mL,fsr2l
 12143  005B56  C01B  FFDA         	movff	reverse@mL+1,fsr2h
 12144  005B5A  0E28               	movlw	40
 12145  005B5C  60DF               	cpfslt	indf2,c
 12146  005B5E  EFB3  F02D         	goto	u7311
 12147  005B62  EFB5  F02D         	goto	u7310
 12148  005B66                     u7311:
 12149  005B66  EFC1  F02D         	goto	l594
 12150  005B6A                     u7310:
 12151  005B6A  C01C  FFD9         	movff	reverse@mR,fsr2l
 12152  005B6E  C01D  FFDA         	movff	reverse@mR+1,fsr2h
 12153  005B72  0E27               	movlw	39
 12154  005B74  64DF               	cpfsgt	indf2,c
 12155  005B76  EFBF  F02D         	goto	u7321
 12156  005B7A  EFC1  F02D         	goto	u7320
 12157  005B7E                     u7321:
 12158  005B7E  EF8D  F02D         	goto	l5957
 12159  005B82                     u7320:
 12160  005B82                     l594:
 12161  005B82  0012               	return		;funcret
 12162  005B84                     __end_of_reverse:
 12163                           	callstack 0
 12164                           
 12165 ;; *************** function _forward *****************
 12166 ;; Defined at:
 12167 ;;		line 88 in file "DC_motors.c"
 12168 ;; Parameters:    Size  Location     Type
 12169 ;;  mL              2   25[COMRAM] PTR struct .
 12170 ;;		 -> main@motorL(9), 
 12171 ;;  mR              2   27[COMRAM] PTR struct .
 12172 ;;		 -> main@motorR(9), 
 12173 ;; Auto vars:     Size  Location     Type
 12174 ;;		None
 12175 ;; Return value:  Size  Location     Type
 12176 ;;                  1    wreg      void 
 12177 ;; Registers used:
 12178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12179 ;; Tracked objects:
 12180 ;;		On entry : 0/0
 12181 ;;		On exit  : 0/0
 12182 ;;		Unchanged: 0/0
 12183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12187 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12188 ;;Total ram usage:        5 bytes
 12189 ;; Hardware stack levels used: 1
 12190 ;; Hardware stack levels required when called: 2
 12191 ;; This function calls:
 12192 ;;		_DCmotors_setPWM
 12193 ;; This function is called by:
 12194 ;;		_colourcards_readRGBC
 12195 ;;		_DCmotors_testing
 12196 ;; This function uses a non-reentrant model
 12197 ;;
 12198                           
 12199                           	psect	text46
 12200  005B84                     __ptext46:
 12201                           	callstack 0
 12202  005B84                     _forward:
 12203                           	callstack 27
 12204  005B84                     
 12205                           ;DC_motors.c: 88: void forward(DC_motor *mL, DC_motor *mR);DC_motors.c: 89: {;DC_motors.
      +                          c: 90:     mL->direction = 1;
 12206  005B84  EE20 F001          	lfsr	2,1
 12207  005B88  501A               	movf	forward@mL^0,w,c
 12208  005B8A  26D9               	addwf	fsr2l,f,c
 12209  005B8C  501B               	movf	(forward@mL+1)^0,w,c
 12210  005B8E  22DA               	addwfc	fsr2h,f,c
 12211  005B90  0E01               	movlw	1
 12212  005B92  6EDF               	movwf	indf2,c
 12213                           
 12214                           ;DC_motors.c: 91:     mR->direction = 1;
 12215  005B94  EE20 F001          	lfsr	2,1
 12216  005B98  501C               	movf	forward@mR^0,w,c
 12217  005B9A  26D9               	addwf	fsr2l,f,c
 12218  005B9C  501D               	movf	(forward@mR+1)^0,w,c
 12219  005B9E  22DA               	addwfc	fsr2h,f,c
 12220  005BA0  0E01               	movlw	1
 12221  005BA2  6EDF               	movwf	indf2,c
 12222                           
 12223                           ;DC_motors.c: 94:     while((mL->power < 20) && (mR->power < 20)){
 12224  005BA4  EFF0  F02D         	goto	l5979
 12225  005BA8                     l5971:
 12226                           
 12227                           ;DC_motors.c: 95:         mL->power += 10;
 12228  005BA8  C01A  FFD9         	movff	forward@mL,fsr2l
 12229  005BAC  C01B  FFDA         	movff	forward@mL+1,fsr2h
 12230  005BB0  0E0A               	movlw	10
 12231  005BB2  26DF               	addwf	indf2,f,c
 12232                           
 12233                           ;DC_motors.c: 96:         mR->power += 10;
 12234  005BB4  C01C  FFD9         	movff	forward@mR,fsr2l
 12235  005BB8  C01D  FFDA         	movff	forward@mR+1,fsr2h
 12236  005BBC  0E0A               	movlw	10
 12237  005BBE  26DF               	addwf	indf2,f,c
 12238  005BC0                     
 12239                           ;DC_motors.c: 98:         DCmotors_setPWM(mL);
 12240  005BC0  C01A  F00F         	movff	forward@mL,DCmotors_setPWM@m
 12241  005BC4  C01B  F010         	movff	forward@mL+1,DCmotors_setPWM@m+1
 12242  005BC8  EC70  F021         	call	_DCmotors_setPWM	;wreg free
 12243  005BCC                     
 12244                           ;DC_motors.c: 99:         DCmotors_setPWM(mR);
 12245  005BCC  C01C  F00F         	movff	forward@mR,DCmotors_setPWM@m
 12246  005BD0  C01D  F010         	movff	forward@mR+1,DCmotors_setPWM@m+1
 12247  005BD4  EC70  F021         	call	_DCmotors_setPWM	;wreg free
 12248  005BD8                     
 12249                           ;DC_motors.c: 100:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 12250  005BD8  0EA0               	movlw	160
 12251  005BDA                     u8477:
 12252  005BDA  D000               	nop2	
 12253  005BDC  2EE8               	decfsz	wreg,f,c
 12254  005BDE  D7FD               	bra	u8477
 12255  005BE0                     l5979:
 12256                           
 12257                           ;DC_motors.c: 94:     while((mL->power < 20) && (mR->power < 20)){
 12258  005BE0  C01A  FFD9         	movff	forward@mL,fsr2l
 12259  005BE4  C01B  FFDA         	movff	forward@mL+1,fsr2h
 12260  005BE8  0E14               	movlw	20
 12261  005BEA  60DF               	cpfslt	indf2,c
 12262  005BEC  EFFA  F02D         	goto	u7331
 12263  005BF0  EFFC  F02D         	goto	u7330
 12264  005BF4                     u7331:
 12265  005BF4  EF08  F02E         	goto	l586
 12266  005BF8                     u7330:
 12267  005BF8  C01C  FFD9         	movff	forward@mR,fsr2l
 12268  005BFC  C01D  FFDA         	movff	forward@mR+1,fsr2h
 12269  005C00  0E13               	movlw	19
 12270  005C02  64DF               	cpfsgt	indf2,c
 12271  005C04  EF06  F02E         	goto	u7341
 12272  005C08  EF08  F02E         	goto	u7340
 12273  005C0C                     u7341:
 12274  005C0C  EFD4  F02D         	goto	l5971
 12275  005C10                     u7340:
 12276  005C10                     l586:
 12277  005C10  0012               	return		;funcret
 12278  005C12                     __end_of_forward:
 12279                           	callstack 0
 12280                           
 12281 ;; *************** function _DCmotors_setPWM *****************
 12282 ;; Defined at:
 12283 ;;		line 51 in file "DC_motors.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;  m               2   14[COMRAM] PTR struct .
 12286 ;;		 -> main@motorR(9), main@motorL(9), 
 12287 ;; Auto vars:     Size  Location     Type
 12288 ;;  PWMduty         2   23[COMRAM] int 
 12289 ;; Return value:  Size  Location     Type
 12290 ;;                  1    wreg      void 
 12291 ;; Registers used:
 12292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12293 ;; Tracked objects:
 12294 ;;		On entry : 0/0
 12295 ;;		On exit  : 0/0
 12296 ;;		Unchanged: 0/0
 12297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12300 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12301 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12302 ;;Total ram usage:       11 bytes
 12303 ;; Hardware stack levels used: 1
 12304 ;; Hardware stack levels required when called: 1
 12305 ;; This function calls:
 12306 ;;		___awdiv
 12307 ;;		___wmul
 12308 ;; This function is called by:
 12309 ;;		_forward
 12310 ;;		_reverse
 12311 ;;		_stop
 12312 ;;		_left
 12313 ;;		_right
 12314 ;; This function uses a non-reentrant model
 12315 ;;
 12316                           
 12317                           	psect	text47
 12318  0042E0                     __ptext47:
 12319                           	callstack 0
 12320  0042E0                     _DCmotors_setPWM:
 12321                           	callstack 26
 12322  0042E0                     
 12323                           ;DC_motors.c: 51: void DCmotors_setPWM(DC_motor *m);DC_motors.c: 52: {;DC_motors.c: 53: 
      +                           int PWMduty;;DC_motors.c: 55:  if (m->direction){
 12324  0042E0  EE20 F001          	lfsr	2,1
 12325  0042E4  500F               	movf	DCmotors_setPWM@m^0,w,c
 12326  0042E6  26D9               	addwf	fsr2l,f,c
 12327  0042E8  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12328  0042EA  22DA               	addwfc	fsr2h,f,c
 12329  0042EC  50DF               	movf	indf2,w,c
 12330  0042EE  B4D8               	btfsc	status,2,c
 12331  0042F0  EF7C  F021         	goto	u6741
 12332  0042F4  EF7E  F021         	goto	u6740
 12333  0042F8                     u6741:
 12334  0042F8  EFAF  F021         	goto	l5615
 12335  0042FC                     u6740:
 12336  0042FC                     
 12337                           ;DC_motors.c: 56:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
 12338  0042FC  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 12339  004300  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 12340  004304  50DF               	movf	indf2,w,c
 12341  004306  6E11               	movwf	??_DCmotors_setPWM^0,c
 12342  004308  5011               	movf	??_DCmotors_setPWM^0,w,c
 12343  00430A  6E01               	movwf	___wmul@multiplier^0,c
 12344  00430C  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12345  00430E  EE20 F007          	lfsr	2,7
 12346  004312  500F               	movf	DCmotors_setPWM@m^0,w,c
 12347  004314  26D9               	addwf	fsr2l,f,c
 12348  004316  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12349  004318  22DA               	addwfc	fsr2h,f,c
 12350  00431A  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12351  00431E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12352  004322  ECEB  F031         	call	___wmul	;wreg free
 12353  004326  C001  F007         	movff	?___wmul,___awdiv@dividend
 12354  00432A  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 12355  00432E  0E00               	movlw	0
 12356  004330  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 12357  004332  0E64               	movlw	100
 12358  004334  6E09               	movwf	___awdiv@divisor^0,c
 12359  004336  EC6C  F02C         	call	___awdiv	;wreg free
 12360  00433A  EE20 F007          	lfsr	2,7
 12361  00433E  500F               	movf	DCmotors_setPWM@m^0,w,c
 12362  004340  26D9               	addwf	fsr2l,f,c
 12363  004342  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12364  004344  22DA               	addwfc	fsr2h,f,c
 12365  004346  CFDE F012          	movff	postinc2,??_DCmotors_setPWM+1
 12366  00434A  CFDD F013          	movff	postdec2,??_DCmotors_setPWM+2
 12367  00434E  5007               	movf	?___awdiv^0,w,c
 12368  004350  5C12               	subwf	(??_DCmotors_setPWM+1)^0,w,c
 12369  004352  6E18               	movwf	DCmotors_setPWM@PWMduty^0,c
 12370  004354  5008               	movf	(?___awdiv+1)^0,w,c
 12371  004356  5813               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
 12372  004358  6E19               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
 12373                           
 12374                           ;DC_motors.c: 57:  } else {
 12375  00435A  EFD2  F021         	goto	l5617
 12376  00435E                     l5615:
 12377                           
 12378                           ;DC_motors.c: 58:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 12379  00435E  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 12380  004362  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 12381  004366  50DF               	movf	indf2,w,c
 12382  004368  6E11               	movwf	??_DCmotors_setPWM^0,c
 12383  00436A  5011               	movf	??_DCmotors_setPWM^0,w,c
 12384  00436C  6E01               	movwf	___wmul@multiplier^0,c
 12385  00436E  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12386  004370  EE20 F007          	lfsr	2,7
 12387  004374  500F               	movf	DCmotors_setPWM@m^0,w,c
 12388  004376  26D9               	addwf	fsr2l,f,c
 12389  004378  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12390  00437A  22DA               	addwfc	fsr2h,f,c
 12391  00437C  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12392  004380  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12393  004384  ECEB  F031         	call	___wmul	;wreg free
 12394  004388  C001  F007         	movff	?___wmul,___awdiv@dividend
 12395  00438C  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 12396  004390  0E00               	movlw	0
 12397  004392  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 12398  004394  0E64               	movlw	100
 12399  004396  6E09               	movwf	___awdiv@divisor^0,c
 12400  004398  EC6C  F02C         	call	___awdiv	;wreg free
 12401  00439C  C007  F018         	movff	?___awdiv,DCmotors_setPWM@PWMduty
 12402  0043A0  C008  F019         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
 12403  0043A4                     l5617:
 12404                           
 12405                           ;DC_motors.c: 61:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
 12406  0043A4  EE20 F002          	lfsr	2,2
 12407  0043A8  500F               	movf	DCmotors_setPWM@m^0,w,c
 12408  0043AA  26D9               	addwf	fsr2l,f,c
 12409  0043AC  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12410  0043AE  22DA               	addwfc	fsr2h,f,c
 12411  0043B0  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 12412  0043B4  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 12413  0043B8  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 12414  0043BC  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 12415  0043C0  C018  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
 12416  0043C4                     
 12417                           ;DC_motors.c: 63:  if (m->direction){
 12418  0043C4  EE20 F001          	lfsr	2,1
 12419  0043C8  500F               	movf	DCmotors_setPWM@m^0,w,c
 12420  0043CA  26D9               	addwf	fsr2l,f,c
 12421  0043CC  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12422  0043CE  22DA               	addwfc	fsr2h,f,c
 12423  0043D0  50DF               	movf	indf2,w,c
 12424  0043D2  B4D8               	btfsc	status,2,c
 12425  0043D4  EFEE  F021         	goto	u6751
 12426  0043D8  EFF0  F021         	goto	u6750
 12427  0043DC                     u6751:
 12428  0043DC  EF25  F022         	goto	l5623
 12429  0043E0                     u6750:
 12430  0043E0                     
 12431                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
 12432  0043E0  EE20 F004          	lfsr	2,4
 12433  0043E4  500F               	movf	DCmotors_setPWM@m^0,w,c
 12434  0043E6  26D9               	addwf	fsr2l,f,c
 12435  0043E8  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12436  0043EA  22DA               	addwfc	fsr2h,f,c
 12437  0043EC  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 12438  0043F0  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 12439  0043F4  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 12440  0043F8  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 12441  0043FC  EE10 F004          	lfsr	1,4
 12442  004400  500F               	movf	DCmotors_setPWM@m^0,w,c
 12443  004402  26E1               	addwf	fsr1l,f,c
 12444  004404  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12445  004406  22E2               	addwfc	fsr1h,f,c
 12446  004408  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
 12447  00440C  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
 12448  004410  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 12449  004414  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 12450  004418  50E7               	movf	indf1,w,c
 12451  00441A  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
 12452  00441C  EE10 F006          	lfsr	1,6
 12453  004420  500F               	movf	DCmotors_setPWM@m^0,w,c
 12454  004422  26E1               	addwf	fsr1l,f,c
 12455  004424  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12456  004426  22E2               	addwfc	fsr1h,f,c
 12457  004428  50E7               	movf	indf1,w,c
 12458  00442A  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
 12459  00442C  0E01               	movlw	1
 12460  00442E  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
 12461  004430  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
 12462  004432  EF1D  F022         	goto	u6764
 12463  004436                     u6765:
 12464  004436  90D8               	bcf	status,0,c
 12465  004438  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 12466  00443A                     u6764:
 12467  00443A  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 12468  00443C  EF1B  F022         	goto	u6765
 12469  004440  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
 12470  004442  1015               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
 12471  004444  6EDF               	movwf	indf2,c
 12472                           
 12473                           ;DC_motors.c: 65:  } else {
 12474  004446  EF59  F022         	goto	l573
 12475  00444A                     l5623:
 12476                           
 12477                           ;DC_motors.c: 66:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
 12478  00444A  EE20 F004          	lfsr	2,4
 12479  00444E  500F               	movf	DCmotors_setPWM@m^0,w,c
 12480  004450  26D9               	addwf	fsr2l,f,c
 12481  004452  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12482  004454  22DA               	addwfc	fsr2h,f,c
 12483  004456  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 12484  00445A  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 12485  00445E  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 12486  004462  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 12487  004466  EE10 F004          	lfsr	1,4
 12488  00446A  500F               	movf	DCmotors_setPWM@m^0,w,c
 12489  00446C  26E1               	addwf	fsr1l,f,c
 12490  00446E  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12491  004470  22E2               	addwfc	fsr1h,f,c
 12492  004472  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
 12493  004476  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
 12494  00447A  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 12495  00447E  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 12496  004482  50E7               	movf	indf1,w,c
 12497  004484  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
 12498  004486  EE10 F006          	lfsr	1,6
 12499  00448A  500F               	movf	DCmotors_setPWM@m^0,w,c
 12500  00448C  26E1               	addwf	fsr1l,f,c
 12501  00448E  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 12502  004490  22E2               	addwfc	fsr1h,f,c
 12503  004492  50E7               	movf	indf1,w,c
 12504  004494  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
 12505  004496  0E01               	movlw	1
 12506  004498  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
 12507  00449A  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
 12508  00449C  EF52  F022         	goto	u6774
 12509  0044A0                     u6775:
 12510  0044A0  90D8               	bcf	status,0,c
 12511  0044A2  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 12512  0044A4                     u6774:
 12513  0044A4  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 12514  0044A6  EF50  F022         	goto	u6775
 12515  0044AA  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
 12516  0044AC  0AFF               	xorlw	255
 12517  0044AE  1415               	andwf	(??_DCmotors_setPWM+4)^0,w,c
 12518  0044B0  6EDF               	movwf	indf2,c
 12519  0044B2                     l573:
 12520  0044B2  0012               	return		;funcret
 12521  0044B4                     __end_of_DCmotors_setPWM:
 12522                           	callstack 0
 12523                           
 12524 ;; *************** function ___wmul *****************
 12525 ;; Defined at:
 12526 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 12527 ;; Parameters:    Size  Location     Type
 12528 ;;  multiplier      2    0[COMRAM] unsigned int 
 12529 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12530 ;; Auto vars:     Size  Location     Type
 12531 ;;  product         2    4[COMRAM] unsigned int 
 12532 ;; Return value:  Size  Location     Type
 12533 ;;                  2    0[COMRAM] unsigned int 
 12534 ;; Registers used:
 12535 ;;		wreg, status,2, status,0, prodl, prodh
 12536 ;; Tracked objects:
 12537 ;;		On entry : 0/0
 12538 ;;		On exit  : 0/0
 12539 ;;		Unchanged: 0/0
 12540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12541 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12544 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12545 ;;Total ram usage:        6 bytes
 12546 ;; Hardware stack levels used: 1
 12547 ;; This function calls:
 12548 ;;		Nothing
 12549 ;; This function is called by:
 12550 ;;		_DCmotors_setPWM
 12551 ;;		_atoi
 12552 ;; This function uses a non-reentrant model
 12553 ;;
 12554                           
 12555                           	psect	text48
 12556  0063D6                     __ptext48:
 12557                           	callstack 0
 12558  0063D6                     ___wmul:
 12559                           	callstack 25
 12560  0063D6  5001               	movf	___wmul@multiplier^0,w,c
 12561  0063D8  0203               	mulwf	___wmul@multiplicand^0,c
 12562  0063DA  CFF3 F005          	movff	prodl,___wmul@product
 12563  0063DE  CFF4 F006          	movff	prodh,___wmul@product+1
 12564  0063E2  5001               	movf	___wmul@multiplier^0,w,c
 12565  0063E4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12566  0063E6  50F3               	movf	243,w,c
 12567  0063E8  2606               	addwf	(___wmul@product+1)^0,f,c
 12568  0063EA  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12569  0063EC  0203               	mulwf	___wmul@multiplicand^0,c
 12570  0063EE  50F3               	movf	243,w,c
 12571  0063F0  2606               	addwf	(___wmul@product+1)^0,f,c
 12572  0063F2  C005  F001         	movff	___wmul@product,?___wmul
 12573  0063F6  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12574  0063FA  0012               	return		;funcret
 12575  0063FC                     __end_of___wmul:
 12576                           	callstack 0
 12577                           
 12578 ;; *************** function ___awdiv *****************
 12579 ;; Defined at:
 12580 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;  dividend        2    6[COMRAM] int 
 12583 ;;  divisor         2    8[COMRAM] int 
 12584 ;; Auto vars:     Size  Location     Type
 12585 ;;  quotient        2   12[COMRAM] int 
 12586 ;;  sign            1   11[COMRAM] unsigned char 
 12587 ;;  counter         1   10[COMRAM] unsigned char 
 12588 ;; Return value:  Size  Location     Type
 12589 ;;                  2    6[COMRAM] int 
 12590 ;; Registers used:
 12591 ;;		wreg, status,2, status,0
 12592 ;; Tracked objects:
 12593 ;;		On entry : 0/0
 12594 ;;		On exit  : 0/0
 12595 ;;		Unchanged: 0/0
 12596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12598 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12600 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12601 ;;Total ram usage:        8 bytes
 12602 ;; Hardware stack levels used: 1
 12603 ;; This function calls:
 12604 ;;		Nothing
 12605 ;; This function is called by:
 12606 ;;		_DCmotors_setPWM
 12607 ;;		_efgtoa
 12608 ;; This function uses a non-reentrant model
 12609 ;;
 12610                           
 12611                           	psect	text49
 12612  0058D8                     __ptext49:
 12613                           	callstack 0
 12614  0058D8                     ___awdiv:
 12615                           	callstack 25
 12616  0058D8  0E00               	movlw	0
 12617  0058DA  6E0C               	movwf	___awdiv@sign^0,c
 12618  0058DC  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 12619  0058DE  EF75  F02C         	goto	u5220
 12620  0058E2  EF73  F02C         	goto	u5221
 12621  0058E6                     u5221:
 12622  0058E6  EF7B  F02C         	goto	l4815
 12623  0058EA                     u5220:
 12624  0058EA  6C09               	negf	___awdiv@divisor^0,c
 12625  0058EC  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 12626  0058EE  B0D8               	btfsc	status,0,c
 12627  0058F0  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 12628  0058F2  0E01               	movlw	1
 12629  0058F4  6E0C               	movwf	___awdiv@sign^0,c
 12630  0058F6                     l4815:
 12631  0058F6  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 12632  0058F8  EF82  F02C         	goto	u5230
 12633  0058FC  EF80  F02C         	goto	u5231
 12634  005900                     u5231:
 12635  005900  EF88  F02C         	goto	l4821
 12636  005904                     u5230:
 12637  005904  6C07               	negf	___awdiv@dividend^0,c
 12638  005906  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 12639  005908  B0D8               	btfsc	status,0,c
 12640  00590A  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 12641  00590C  0E01               	movlw	1
 12642  00590E  1A0C               	xorwf	___awdiv@sign^0,f,c
 12643  005910                     l4821:
 12644  005910  0E00               	movlw	0
 12645  005912  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 12646  005914  0E00               	movlw	0
 12647  005916  6E0D               	movwf	___awdiv@quotient^0,c
 12648  005918  5009               	movf	___awdiv@divisor^0,w,c
 12649  00591A  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 12650  00591C  B4D8               	btfsc	status,2,c
 12651  00591E  EF93  F02C         	goto	u5241
 12652  005922  EF95  F02C         	goto	u5240
 12653  005926                     u5241:
 12654  005926  EFBD  F02C         	goto	l4843
 12655  00592A                     u5240:
 12656  00592A  0E01               	movlw	1
 12657  00592C  6E0B               	movwf	___awdiv@counter^0,c
 12658  00592E  EF9D  F02C         	goto	l4829
 12659  005932                     l4827:
 12660  005932  90D8               	bcf	status,0,c
 12661  005934  3609               	rlcf	___awdiv@divisor^0,f,c
 12662  005936  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 12663  005938  2A0B               	incf	___awdiv@counter^0,f,c
 12664  00593A                     l4829:
 12665  00593A  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 12666  00593C  EFA2  F02C         	goto	u5251
 12667  005940  EFA4  F02C         	goto	u5250
 12668  005944                     u5251:
 12669  005944  EF99  F02C         	goto	l4827
 12670  005948                     u5250:
 12671  005948                     l4831:
 12672  005948  90D8               	bcf	status,0,c
 12673  00594A  360D               	rlcf	___awdiv@quotient^0,f,c
 12674  00594C  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 12675  00594E  5009               	movf	___awdiv@divisor^0,w,c
 12676  005950  5C07               	subwf	___awdiv@dividend^0,w,c
 12677  005952  500A               	movf	(___awdiv@divisor+1)^0,w,c
 12678  005954  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 12679  005956  A0D8               	btfss	status,0,c
 12680  005958  EFB0  F02C         	goto	u5261
 12681  00595C  EFB2  F02C         	goto	u5260
 12682  005960                     u5261:
 12683  005960  EFB7  F02C         	goto	l4839
 12684  005964                     u5260:
 12685  005964  5009               	movf	___awdiv@divisor^0,w,c
 12686  005966  5E07               	subwf	___awdiv@dividend^0,f,c
 12687  005968  500A               	movf	(___awdiv@divisor+1)^0,w,c
 12688  00596A  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 12689  00596C  800D               	bsf	___awdiv@quotient^0,0,c
 12690  00596E                     l4839:
 12691  00596E  90D8               	bcf	status,0,c
 12692  005970  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 12693  005972  3209               	rrcf	___awdiv@divisor^0,f,c
 12694  005974  2E0B               	decfsz	___awdiv@counter^0,f,c
 12695  005976  EFA4  F02C         	goto	l4831
 12696  00597A                     l4843:
 12697  00597A  500C               	movf	___awdiv@sign^0,w,c
 12698  00597C  B4D8               	btfsc	status,2,c
 12699  00597E  EFC3  F02C         	goto	u5271
 12700  005982  EFC5  F02C         	goto	u5270
 12701  005986                     u5271:
 12702  005986  EFC9  F02C         	goto	l4847
 12703  00598A                     u5270:
 12704  00598A  6C0D               	negf	___awdiv@quotient^0,c
 12705  00598C  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 12706  00598E  B0D8               	btfsc	status,0,c
 12707  005990  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 12708  005992                     l4847:
 12709  005992  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 12710  005996  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 12711  00599A  0012               	return		;funcret
 12712  00599C                     __end_of___awdiv:
 12713                           	callstack 0
 12714                           
 12715 ;; *************** function _colourclick_readRGBC2 *****************
 12716 ;; Defined at:
 12717 ;;		line 140 in file "colour_click.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;  tmpval          2   13[COMRAM] PTR struct .
 12720 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
 12721 ;;  mode            1   15[COMRAM] unsigned char 
 12722 ;; Auto vars:     Size  Location     Type
 12723 ;;		None
 12724 ;; Return value:  Size  Location     Type
 12725 ;;                  1    wreg      void 
 12726 ;; Registers used:
 12727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12728 ;; Tracked objects:
 12729 ;;		On entry : 0/0
 12730 ;;		On exit  : 0/0
 12731 ;;		Unchanged: 0/0
 12732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12733 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12736 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12737 ;;Total ram usage:        5 bytes
 12738 ;; Hardware stack levels used: 1
 12739 ;; Hardware stack levels required when called: 4
 12740 ;; This function calls:
 12741 ;;		_colourclickLEDs_C
 12742 ;;		_colourclick_readRGBC
 12743 ;; This function is called by:
 12744 ;;		_colourcards_readRGBC
 12745 ;;		_colourcards_testingRGBC
 12746 ;; This function uses a non-reentrant model
 12747 ;;
 12748                           
 12749                           	psect	text50
 12750  004FB8                     __ptext50:
 12751                           	callstack 0
 12752  004FB8                     _colourclick_readRGBC2:
 12753                           	callstack 25
 12754  004FB8                     
 12755                           ;colour_click.c: 140: void colourclick_readRGBC2(RGBC_val *tmpval, unsigned char mode);c
      +                          olour_click.c: 141: {;colour_click.c: 142:     colourclickLEDs_C(0);
 12756  004FB8  0E00               	movlw	0
 12757  004FBA  ECFE  F031         	call	_colourclickLEDs_C
 12758  004FBE                     
 12759                           ;colour_click.c: 143:     _delay((unsigned long)((100)*(64000000/4000.0)));
 12760  004FBE  0E09               	movlw	9
 12761  004FC0  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
 12762  004FC2  0E1E               	movlw	30
 12763  004FC4  6E11               	movwf	??_colourclick_readRGBC2^0,c
 12764  004FC6  0EE4               	movlw	228
 12765  004FC8                     u8487:
 12766  004FC8  2EE8               	decfsz	wreg,f,c
 12767  004FCA  D7FE               	bra	u8487
 12768  004FCC  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
 12769  004FCE  D7FC               	bra	u8487
 12770  004FD0  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 12771  004FD2  D7FA               	bra	u8487
 12772  004FD4  D000               	nop2	
 12773  004FD6                     
 12774                           ;colour_click.c: 145:     if (mode==1) {
 12775  004FD6  0410               	decf	colourclick_readRGBC2@mode^0,w,c
 12776  004FD8  A4D8               	btfss	status,2,c
 12777  004FDA  EFF1  F027         	goto	u7241
 12778  004FDE  EFF3  F027         	goto	u7240
 12779  004FE2                     u7241:
 12780  004FE2  EF21  F028         	goto	l5897
 12781  004FE6                     u7240:
 12782  004FE6                     
 12783                           ;colour_click.c: 146:         LATGbits.LATG1 = 1;
 12784  004FE6  827F               	bsf	127,1,c	;volatile
 12785  004FE8                     
 12786                           ;colour_click.c: 147:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 12787  004FE8  0E52               	movlw	82
 12788  004FEA  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
 12789  004FEC  0E2B               	movlw	43
 12790  004FEE  6E11               	movwf	??_colourclick_readRGBC2^0,c
 12791  004FF0  0E00               	movlw	0
 12792  004FF2                     u8497:
 12793  004FF2  2EE8               	decfsz	wreg,f,c
 12794  004FF4  D7FE               	bra	u8497
 12795  004FF6  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
 12796  004FF8  D7FC               	bra	u8497
 12797  004FFA  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 12798  004FFC  D7FA               	bra	u8497
 12799  004FFE  D000               	nop2	
 12800  005000                     
 12801                           ;colour_click.c: 148:         colourclick_readRGBC(tmpval);
 12802  005000  C00E  F00C         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 12803  005004  C00F  F00D         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 12804  005008  ECD4  F02E         	call	_colourclick_readRGBC	;wreg free
 12805  00500C                     
 12806                           ;colour_click.c: 149:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 12807  00500C  0E52               	movlw	82
 12808  00500E  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
 12809  005010  0E2B               	movlw	43
 12810  005012  6E11               	movwf	??_colourclick_readRGBC2^0,c
 12811  005014  0E00               	movlw	0
 12812  005016                     u8507:
 12813  005016  2EE8               	decfsz	wreg,f,c
 12814  005018  D7FE               	bra	u8507
 12815  00501A  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
 12816  00501C  D7FC               	bra	u8507
 12817  00501E  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 12818  005020  D7FA               	bra	u8507
 12819  005022  D000               	nop2	
 12820  005024                     
 12821                           ;colour_click.c: 150:         LATGbits.LATG1 = 0;
 12822  005024  927F               	bcf	127,1,c	;volatile
 12823  005026                     l5895:
 12824                           
 12825                           ;colour_click.c: 151:         _delay((unsigned long)((20)*(64000000/4000.0)));
 12826  005026  0E02               	movlw	2
 12827  005028  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
 12828  00502A  0EA0               	movlw	160
 12829  00502C  6E11               	movwf	??_colourclick_readRGBC2^0,c
 12830  00502E  0E92               	movlw	146
 12831  005030                     u8517:
 12832  005030  2EE8               	decfsz	wreg,f,c
 12833  005032  D7FE               	bra	u8517
 12834  005034  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
 12835  005036  D7FC               	bra	u8517
 12836  005038  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 12837  00503A  D7FA               	bra	u8517
 12838  00503C  D000               	nop2	
 12839                           
 12840                           ;colour_click.c: 152:     } else if (mode==2) {
 12841  00503E  EF77  F028         	goto	l5925
 12842  005042                     l5897:
 12843  005042  0E02               	movlw	2
 12844  005044  1810               	xorwf	colourclick_readRGBC2@mode^0,w,c
 12845  005046  A4D8               	btfss	status,2,c
 12846  005048  EF28  F028         	goto	u7251
 12847  00504C  EF2A  F028         	goto	u7250
 12848  005050                     u7251:
 12849  005050  EF4C  F028         	goto	l5911
 12850  005054                     u7250:
 12851  005054                     
 12852                           ;colour_click.c: 153:         LATAbits.LATA4 = 1;
 12853  005054  8879               	bsf	121,4,c	;volatile
 12854  005056                     
 12855                           ;colour_click.c: 154:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 12856  005056  0E52               	movlw	82
 12857  005058  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
 12858  00505A  0E2B               	movlw	43
 12859  00505C  6E11               	movwf	??_colourclick_readRGBC2^0,c
 12860  00505E  0E00               	movlw	0
 12861  005060                     u8527:
 12862  005060  2EE8               	decfsz	wreg,f,c
 12863  005062  D7FE               	bra	u8527
 12864  005064  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
 12865  005066  D7FC               	bra	u8527
 12866  005068  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 12867  00506A  D7FA               	bra	u8527
 12868  00506C  D000               	nop2	
 12869  00506E                     
 12870                           ;colour_click.c: 155:         colourclick_readRGBC(tmpval);
 12871  00506E  C00E  F00C         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 12872  005072  C00F  F00D         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 12873  005076  ECD4  F02E         	call	_colourclick_readRGBC	;wreg free
 12874  00507A                     
 12875                           ;colour_click.c: 156:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 12876  00507A  0E52               	movlw	82
 12877  00507C  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
 12878  00507E  0E2B               	movlw	43
 12879  005080  6E11               	movwf	??_colourclick_readRGBC2^0,c
 12880  005082  0E00               	movlw	0
 12881  005084                     u8537:
 12882  005084  2EE8               	decfsz	wreg,f,c
 12883  005086  D7FE               	bra	u8537
 12884  005088  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
 12885  00508A  D7FC               	bra	u8537
 12886  00508C  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 12887  00508E  D7FA               	bra	u8537
 12888  005090  D000               	nop2	
 12889  005092                     
 12890                           ;colour_click.c: 157:         LATAbits.LATA4 = 0;
 12891  005092  9879               	bcf	121,4,c	;volatile
 12892  005094  EF13  F028         	goto	l5895
 12893  005098                     l5911:
 12894  005098  0E03               	movlw	3
 12895  00509A  1810               	xorwf	colourclick_readRGBC2@mode^0,w,c
 12896  00509C  A4D8               	btfss	status,2,c
 12897  00509E  EF53  F028         	goto	u7261
 12898  0050A2  EF55  F028         	goto	u7260
 12899  0050A6                     u7261:
 12900  0050A6  EF77  F028         	goto	l5925
 12901  0050AA                     u7260:
 12902  0050AA                     
 12903                           ;colour_click.c: 160:         LATFbits.LATF7 = 1;
 12904  0050AA  8E7E               	bsf	126,7,c	;volatile
 12905  0050AC                     
 12906                           ;colour_click.c: 161:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 12907  0050AC  0E52               	movlw	82
 12908  0050AE  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
 12909  0050B0  0E2B               	movlw	43
 12910  0050B2  6E11               	movwf	??_colourclick_readRGBC2^0,c
 12911  0050B4  0E00               	movlw	0
 12912  0050B6                     u8547:
 12913  0050B6  2EE8               	decfsz	wreg,f,c
 12914  0050B8  D7FE               	bra	u8547
 12915  0050BA  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
 12916  0050BC  D7FC               	bra	u8547
 12917  0050BE  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 12918  0050C0  D7FA               	bra	u8547
 12919  0050C2  D000               	nop2	
 12920  0050C4                     
 12921                           ;colour_click.c: 162:         colourclick_readRGBC(tmpval);
 12922  0050C4  C00E  F00C         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 12923  0050C8  C00F  F00D         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 12924  0050CC  ECD4  F02E         	call	_colourclick_readRGBC	;wreg free
 12925  0050D0                     
 12926                           ;colour_click.c: 163:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 12927  0050D0  0E52               	movlw	82
 12928  0050D2  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
 12929  0050D4  0E2B               	movlw	43
 12930  0050D6  6E11               	movwf	??_colourclick_readRGBC2^0,c
 12931  0050D8  0E00               	movlw	0
 12932  0050DA                     u8557:
 12933  0050DA  2EE8               	decfsz	wreg,f,c
 12934  0050DC  D7FE               	bra	u8557
 12935  0050DE  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
 12936  0050E0  D7FC               	bra	u8557
 12937  0050E2  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 12938  0050E4  D7FA               	bra	u8557
 12939  0050E6  D000               	nop2	
 12940  0050E8                     
 12941                           ;colour_click.c: 164:         LATFbits.LATF7 = 0;
 12942  0050E8  9E7E               	bcf	126,7,c	;volatile
 12943  0050EA  EF13  F028         	goto	l5895
 12944  0050EE                     l5925:
 12945                           
 12946                           ;colour_click.c: 168:     colourclickLEDs_C(1);
 12947  0050EE  0E01               	movlw	1
 12948  0050F0  ECFE  F031         	call	_colourclickLEDs_C
 12949  0050F4                     
 12950                           ;colour_click.c: 169:     _delay((unsigned long)((100)*(64000000/4000.0)));
 12951  0050F4  0E09               	movlw	9
 12952  0050F6  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
 12953  0050F8  0E1E               	movlw	30
 12954  0050FA  6E11               	movwf	??_colourclick_readRGBC2^0,c
 12955  0050FC  0EE4               	movlw	228
 12956  0050FE                     u8567:
 12957  0050FE  2EE8               	decfsz	wreg,f,c
 12958  005100  D7FE               	bra	u8567
 12959  005102  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
 12960  005104  D7FC               	bra	u8567
 12961  005106  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 12962  005108  D7FA               	bra	u8567
 12963  00510A  D000               	nop2	
 12964  00510C  0012               	return		;funcret
 12965  00510E                     __end_of_colourclick_readRGBC2:
 12966                           	callstack 0
 12967                           
 12968 ;; *************** function _colourclick_readRGBC *****************
 12969 ;; Defined at:
 12970 ;;		line 128 in file "colour_click.c"
 12971 ;; Parameters:    Size  Location     Type
 12972 ;;  tmpval          2   11[COMRAM] PTR struct .
 12973 ;;		 -> colourclick_calibration@current(8), colourclick_calibration@initial(8), colourcards_testingRGBC@abs(8), main@cur
      +rent(8), 
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;		None
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  1    wreg      void 
 12978 ;; Registers used:
 12979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12980 ;; Tracked objects:
 12981 ;;		On entry : 0/0
 12982 ;;		On exit  : 0/0
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12989 ;;Total ram usage:        2 bytes
 12990 ;; Hardware stack levels used: 1
 12991 ;; Hardware stack levels required when called: 3
 12992 ;; This function calls:
 12993 ;;		_colourclick_readB
 12994 ;;		_colourclick_readC
 12995 ;;		_colourclick_readG
 12996 ;;		_colourclick_readR
 12997 ;; This function is called by:
 12998 ;;		_colourcards_readRGBC
 12999 ;;		_colourcards_testingRGBC
 13000 ;;		_colourclick_readRGBC2
 13001 ;;		_colourclick_calibration
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005                           	psect	text51
 13006  005DA8                     __ptext51:
 13007                           	callstack 0
 13008  005DA8                     _colourclick_readRGBC:
 13009                           	callstack 25
 13010  005DA8                     
 13011                           ;colour_click.c: 128: void colourclick_readRGBC(RGBC_val *tmpval);colour_click.c: 129: {
      +                          ;colour_click.c: 130:     tmpval->R = colourclick_readR();
 13012  005DA8  ECCD  F02F         	call	_colourclick_readR	;wreg free
 13013  005DAC  C00C  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
 13014  005DB0  C00D  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
 13015  005DB4  C005  FFDE         	movff	?_colourclick_readR,postinc2
 13016  005DB8  C006  FFDD         	movff	?_colourclick_readR+1,postdec2
 13017                           
 13018                           ;colour_click.c: 131:     tmpval->G = colourclick_readG();
 13019  005DBC  ECF5  F02F         	call	_colourclick_readG	;wreg free
 13020  005DC0  EE20 F002          	lfsr	2,2
 13021  005DC4  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 13022  005DC6  26D9               	addwf	fsr2l,f,c
 13023  005DC8  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 13024  005DCA  22DA               	addwfc	fsr2h,f,c
 13025  005DCC  C005  FFDE         	movff	?_colourclick_readG,postinc2
 13026  005DD0  C006  FFDD         	movff	?_colourclick_readG+1,postdec2
 13027                           
 13028                           ;colour_click.c: 132:     tmpval->B = colourclick_readB();
 13029  005DD4  EC45  F030         	call	_colourclick_readB	;wreg free
 13030  005DD8  EE20 F004          	lfsr	2,4
 13031  005DDC  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 13032  005DDE  26D9               	addwf	fsr2l,f,c
 13033  005DE0  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 13034  005DE2  22DA               	addwfc	fsr2h,f,c
 13035  005DE4  C005  FFDE         	movff	?_colourclick_readB,postinc2
 13036  005DE8  C006  FFDD         	movff	?_colourclick_readB+1,postdec2
 13037                           
 13038                           ;colour_click.c: 133:     tmpval->C = colourclick_readC();
 13039  005DEC  EC1D  F030         	call	_colourclick_readC	;wreg free
 13040  005DF0  EE20 F006          	lfsr	2,6
 13041  005DF4  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 13042  005DF6  26D9               	addwf	fsr2l,f,c
 13043  005DF8  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 13044  005DFA  22DA               	addwfc	fsr2h,f,c
 13045  005DFC  C005  FFDE         	movff	?_colourclick_readC,postinc2
 13046  005E00  C006  FFDD         	movff	?_colourclick_readC+1,postdec2
 13047  005E04  0012               	return		;funcret
 13048  005E06                     __end_of_colourclick_readRGBC:
 13049                           	callstack 0
 13050                           
 13051 ;; *************** function _colourclick_readR *****************
 13052 ;; Defined at:
 13053 ;;		line 53 in file "colour_click.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;		None
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;  tmp             2    9[COMRAM] unsigned int 
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  2    4[COMRAM] unsigned int 
 13060 ;; Registers used:
 13061 ;;		wreg, status,2, status,0, cstack
 13062 ;; Tracked objects:
 13063 ;;		On entry : 0/0
 13064 ;;		On exit  : 0/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13069 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13070 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13071 ;;Total ram usage:        7 bytes
 13072 ;; Hardware stack levels used: 1
 13073 ;; Hardware stack levels required when called: 2
 13074 ;; This function calls:
 13075 ;;		_I2C_2_Master_Read
 13076 ;;		_I2C_2_Master_RepStart
 13077 ;;		_I2C_2_Master_Start
 13078 ;;		_I2C_2_Master_Stop
 13079 ;;		_I2C_2_Master_Write
 13080 ;; This function is called by:
 13081 ;;		_colourclick_readRGBC
 13082 ;; This function uses a non-reentrant model
 13083 ;;
 13084                           
 13085                           	psect	text52
 13086  005F9A                     __ptext52:
 13087                           	callstack 0
 13088  005F9A                     _colourclick_readR:
 13089                           	callstack 25
 13090  005F9A                     
 13091                           ;colour_click.c: 55:  unsigned int tmp;;colour_click.c: 56:  I2C_2_Master_Start();
 13092  005F9A  EC87  F032         	call	_I2C_2_Master_Start	;wreg free
 13093                           
 13094                           ;colour_click.c: 57:  I2C_2_Master_Write(0x52 | 0x00);
 13095  005F9E  0E52               	movlw	82
 13096  005FA0  EC76  F032         	call	_I2C_2_Master_Write
 13097                           
 13098                           ;colour_click.c: 58:  I2C_2_Master_Write(0xA0 | 0x16);
 13099  005FA4  0EB6               	movlw	182
 13100  005FA6  EC76  F032         	call	_I2C_2_Master_Write
 13101                           
 13102                           ;colour_click.c: 59:  I2C_2_Master_RepStart();
 13103  005FAA  EC8C  F032         	call	_I2C_2_Master_RepStart	;wreg free
 13104                           
 13105                           ;colour_click.c: 60:  I2C_2_Master_Write(0x52 | 0x01);
 13106  005FAE  0E53               	movlw	83
 13107  005FB0  EC76  F032         	call	_I2C_2_Master_Write
 13108                           
 13109                           ;colour_click.c: 61:  tmp=I2C_2_Master_Read(1);
 13110  005FB4  0E01               	movlw	1
 13111  005FB6  ECDA  F030         	call	_I2C_2_Master_Read
 13112  005FBA  6E07               	movwf	??_colourclick_readR^0,c
 13113  005FBC  5007               	movf	??_colourclick_readR^0,w,c
 13114  005FBE  6E0A               	movwf	colourclick_readR@tmp^0,c
 13115  005FC0  6A0B               	clrf	(colourclick_readR@tmp+1)^0,c
 13116                           
 13117                           ;colour_click.c: 62:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13118  005FC2  0E00               	movlw	0
 13119  005FC4  ECDA  F030         	call	_I2C_2_Master_Read
 13120  005FC8  6E07               	movwf	??_colourclick_readR^0,c
 13121  005FCA  5007               	movf	??_colourclick_readR^0,w,c
 13122  005FCC  6E09               	movwf	(??_colourclick_readR+2)^0,c
 13123  005FCE  6A08               	clrf	(??_colourclick_readR+1)^0,c
 13124  005FD0  500A               	movf	colourclick_readR@tmp^0,w,c
 13125  005FD2  1008               	iorwf	(??_colourclick_readR+1)^0,w,c
 13126  005FD4  6E0A               	movwf	colourclick_readR@tmp^0,c
 13127  005FD6  500B               	movf	(colourclick_readR@tmp+1)^0,w,c
 13128  005FD8  1009               	iorwf	(??_colourclick_readR+2)^0,w,c
 13129  005FDA  6E0B               	movwf	(colourclick_readR@tmp+1)^0,c
 13130                           
 13131                           ;colour_click.c: 63:  I2C_2_Master_Stop();
 13132  005FDC  EC82  F032         	call	_I2C_2_Master_Stop	;wreg free
 13133  005FE0                     
 13134                           ;colour_click.c: 64:  return tmp;
 13135  005FE0  C00A  F005         	movff	colourclick_readR@tmp,?_colourclick_readR
 13136  005FE4  C00B  F006         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
 13137  005FE8  0012               	return		;funcret
 13138  005FEA                     __end_of_colourclick_readR:
 13139                           	callstack 0
 13140                           
 13141 ;; *************** function _colourclick_readG *****************
 13142 ;; Defined at:
 13143 ;;		line 72 in file "colour_click.c"
 13144 ;; Parameters:    Size  Location     Type
 13145 ;;		None
 13146 ;; Auto vars:     Size  Location     Type
 13147 ;;  tmp             2    9[COMRAM] unsigned int 
 13148 ;; Return value:  Size  Location     Type
 13149 ;;                  2    4[COMRAM] unsigned int 
 13150 ;; Registers used:
 13151 ;;		wreg, status,2, status,0, cstack
 13152 ;; Tracked objects:
 13153 ;;		On entry : 0/0
 13154 ;;		On exit  : 0/0
 13155 ;;		Unchanged: 0/0
 13156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13159 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13160 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13161 ;;Total ram usage:        7 bytes
 13162 ;; Hardware stack levels used: 1
 13163 ;; Hardware stack levels required when called: 2
 13164 ;; This function calls:
 13165 ;;		_I2C_2_Master_Read
 13166 ;;		_I2C_2_Master_RepStart
 13167 ;;		_I2C_2_Master_Start
 13168 ;;		_I2C_2_Master_Stop
 13169 ;;		_I2C_2_Master_Write
 13170 ;; This function is called by:
 13171 ;;		_colourclick_readRGBC
 13172 ;; This function uses a non-reentrant model
 13173 ;;
 13174                           
 13175                           	psect	text53
 13176  005FEA                     __ptext53:
 13177                           	callstack 0
 13178  005FEA                     _colourclick_readG:
 13179                           	callstack 25
 13180  005FEA                     
 13181                           ;colour_click.c: 74:  unsigned int tmp;;colour_click.c: 75:  I2C_2_Master_Start();
 13182  005FEA  EC87  F032         	call	_I2C_2_Master_Start	;wreg free
 13183                           
 13184                           ;colour_click.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
 13185  005FEE  0E52               	movlw	82
 13186  005FF0  EC76  F032         	call	_I2C_2_Master_Write
 13187                           
 13188                           ;colour_click.c: 77:  I2C_2_Master_Write(0xA0 | 0x18);
 13189  005FF4  0EB8               	movlw	184
 13190  005FF6  EC76  F032         	call	_I2C_2_Master_Write
 13191                           
 13192                           ;colour_click.c: 78:  I2C_2_Master_RepStart();
 13193  005FFA  EC8C  F032         	call	_I2C_2_Master_RepStart	;wreg free
 13194                           
 13195                           ;colour_click.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
 13196  005FFE  0E53               	movlw	83
 13197  006000  EC76  F032         	call	_I2C_2_Master_Write
 13198                           
 13199                           ;colour_click.c: 80:  tmp=I2C_2_Master_Read(1);
 13200  006004  0E01               	movlw	1
 13201  006006  ECDA  F030         	call	_I2C_2_Master_Read
 13202  00600A  6E07               	movwf	??_colourclick_readG^0,c
 13203  00600C  5007               	movf	??_colourclick_readG^0,w,c
 13204  00600E  6E0A               	movwf	colourclick_readG@tmp^0,c
 13205  006010  6A0B               	clrf	(colourclick_readG@tmp+1)^0,c
 13206                           
 13207                           ;colour_click.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13208  006012  0E00               	movlw	0
 13209  006014  ECDA  F030         	call	_I2C_2_Master_Read
 13210  006018  6E07               	movwf	??_colourclick_readG^0,c
 13211  00601A  5007               	movf	??_colourclick_readG^0,w,c
 13212  00601C  6E09               	movwf	(??_colourclick_readG+2)^0,c
 13213  00601E  6A08               	clrf	(??_colourclick_readG+1)^0,c
 13214  006020  500A               	movf	colourclick_readG@tmp^0,w,c
 13215  006022  1008               	iorwf	(??_colourclick_readG+1)^0,w,c
 13216  006024  6E0A               	movwf	colourclick_readG@tmp^0,c
 13217  006026  500B               	movf	(colourclick_readG@tmp+1)^0,w,c
 13218  006028  1009               	iorwf	(??_colourclick_readG+2)^0,w,c
 13219  00602A  6E0B               	movwf	(colourclick_readG@tmp+1)^0,c
 13220                           
 13221                           ;colour_click.c: 82:  I2C_2_Master_Stop();
 13222  00602C  EC82  F032         	call	_I2C_2_Master_Stop	;wreg free
 13223  006030                     
 13224                           ;colour_click.c: 83:  return tmp;
 13225  006030  C00A  F005         	movff	colourclick_readG@tmp,?_colourclick_readG
 13226  006034  C00B  F006         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
 13227  006038  0012               	return		;funcret
 13228  00603A                     __end_of_colourclick_readG:
 13229                           	callstack 0
 13230                           
 13231 ;; *************** function _colourclick_readC *****************
 13232 ;; Defined at:
 13233 ;;		line 110 in file "colour_click.c"
 13234 ;; Parameters:    Size  Location     Type
 13235 ;;		None
 13236 ;; Auto vars:     Size  Location     Type
 13237 ;;  tmp             2    9[COMRAM] unsigned int 
 13238 ;; Return value:  Size  Location     Type
 13239 ;;                  2    4[COMRAM] unsigned int 
 13240 ;; Registers used:
 13241 ;;		wreg, status,2, status,0, cstack
 13242 ;; Tracked objects:
 13243 ;;		On entry : 0/0
 13244 ;;		On exit  : 0/0
 13245 ;;		Unchanged: 0/0
 13246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13249 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13250 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13251 ;;Total ram usage:        7 bytes
 13252 ;; Hardware stack levels used: 1
 13253 ;; Hardware stack levels required when called: 2
 13254 ;; This function calls:
 13255 ;;		_I2C_2_Master_Read
 13256 ;;		_I2C_2_Master_RepStart
 13257 ;;		_I2C_2_Master_Start
 13258 ;;		_I2C_2_Master_Stop
 13259 ;;		_I2C_2_Master_Write
 13260 ;; This function is called by:
 13261 ;;		_colourclick_readRGBC
 13262 ;; This function uses a non-reentrant model
 13263 ;;
 13264                           
 13265                           	psect	text54
 13266  00603A                     __ptext54:
 13267                           	callstack 0
 13268  00603A                     _colourclick_readC:
 13269                           	callstack 25
 13270  00603A                     
 13271                           ;colour_click.c: 112:  unsigned int tmp;;colour_click.c: 113:  I2C_2_Master_Start();
 13272  00603A  EC87  F032         	call	_I2C_2_Master_Start	;wreg free
 13273                           
 13274                           ;colour_click.c: 114:  I2C_2_Master_Write(0x52 | 0x00);
 13275  00603E  0E52               	movlw	82
 13276  006040  EC76  F032         	call	_I2C_2_Master_Write
 13277                           
 13278                           ;colour_click.c: 115:  I2C_2_Master_Write(0xA0 | 0x14);
 13279  006044  0EB4               	movlw	180
 13280  006046  EC76  F032         	call	_I2C_2_Master_Write
 13281                           
 13282                           ;colour_click.c: 116:  I2C_2_Master_RepStart();
 13283  00604A  EC8C  F032         	call	_I2C_2_Master_RepStart	;wreg free
 13284                           
 13285                           ;colour_click.c: 117:  I2C_2_Master_Write(0x52 | 0x01);
 13286  00604E  0E53               	movlw	83
 13287  006050  EC76  F032         	call	_I2C_2_Master_Write
 13288                           
 13289                           ;colour_click.c: 118:  tmp=I2C_2_Master_Read(1);
 13290  006054  0E01               	movlw	1
 13291  006056  ECDA  F030         	call	_I2C_2_Master_Read
 13292  00605A  6E07               	movwf	??_colourclick_readC^0,c
 13293  00605C  5007               	movf	??_colourclick_readC^0,w,c
 13294  00605E  6E0A               	movwf	colourclick_readC@tmp^0,c
 13295  006060  6A0B               	clrf	(colourclick_readC@tmp+1)^0,c
 13296                           
 13297                           ;colour_click.c: 119:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13298  006062  0E00               	movlw	0
 13299  006064  ECDA  F030         	call	_I2C_2_Master_Read
 13300  006068  6E07               	movwf	??_colourclick_readC^0,c
 13301  00606A  5007               	movf	??_colourclick_readC^0,w,c
 13302  00606C  6E09               	movwf	(??_colourclick_readC+2)^0,c
 13303  00606E  6A08               	clrf	(??_colourclick_readC+1)^0,c
 13304  006070  500A               	movf	colourclick_readC@tmp^0,w,c
 13305  006072  1008               	iorwf	(??_colourclick_readC+1)^0,w,c
 13306  006074  6E0A               	movwf	colourclick_readC@tmp^0,c
 13307  006076  500B               	movf	(colourclick_readC@tmp+1)^0,w,c
 13308  006078  1009               	iorwf	(??_colourclick_readC+2)^0,w,c
 13309  00607A  6E0B               	movwf	(colourclick_readC@tmp+1)^0,c
 13310                           
 13311                           ;colour_click.c: 120:  I2C_2_Master_Stop();
 13312  00607C  EC82  F032         	call	_I2C_2_Master_Stop	;wreg free
 13313  006080                     
 13314                           ;colour_click.c: 121:  return tmp;
 13315  006080  C00A  F005         	movff	colourclick_readC@tmp,?_colourclick_readC
 13316  006084  C00B  F006         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
 13317  006088  0012               	return		;funcret
 13318  00608A                     __end_of_colourclick_readC:
 13319                           	callstack 0
 13320                           
 13321 ;; *************** function _colourclick_readB *****************
 13322 ;; Defined at:
 13323 ;;		line 91 in file "colour_click.c"
 13324 ;; Parameters:    Size  Location     Type
 13325 ;;		None
 13326 ;; Auto vars:     Size  Location     Type
 13327 ;;  tmp             2    9[COMRAM] unsigned int 
 13328 ;; Return value:  Size  Location     Type
 13329 ;;                  2    4[COMRAM] unsigned int 
 13330 ;; Registers used:
 13331 ;;		wreg, status,2, status,0, cstack
 13332 ;; Tracked objects:
 13333 ;;		On entry : 0/0
 13334 ;;		On exit  : 0/0
 13335 ;;		Unchanged: 0/0
 13336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13339 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13340 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13341 ;;Total ram usage:        7 bytes
 13342 ;; Hardware stack levels used: 1
 13343 ;; Hardware stack levels required when called: 2
 13344 ;; This function calls:
 13345 ;;		_I2C_2_Master_Read
 13346 ;;		_I2C_2_Master_RepStart
 13347 ;;		_I2C_2_Master_Start
 13348 ;;		_I2C_2_Master_Stop
 13349 ;;		_I2C_2_Master_Write
 13350 ;; This function is called by:
 13351 ;;		_colourclick_readRGBC
 13352 ;; This function uses a non-reentrant model
 13353 ;;
 13354                           
 13355                           	psect	text55
 13356  00608A                     __ptext55:
 13357                           	callstack 0
 13358  00608A                     _colourclick_readB:
 13359                           	callstack 25
 13360  00608A                     
 13361                           ;colour_click.c: 93:  unsigned int tmp;;colour_click.c: 94:  I2C_2_Master_Start();
 13362  00608A  EC87  F032         	call	_I2C_2_Master_Start	;wreg free
 13363                           
 13364                           ;colour_click.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
 13365  00608E  0E52               	movlw	82
 13366  006090  EC76  F032         	call	_I2C_2_Master_Write
 13367                           
 13368                           ;colour_click.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
 13369  006094  0EBA               	movlw	186
 13370  006096  EC76  F032         	call	_I2C_2_Master_Write
 13371                           
 13372                           ;colour_click.c: 97:  I2C_2_Master_RepStart();
 13373  00609A  EC8C  F032         	call	_I2C_2_Master_RepStart	;wreg free
 13374                           
 13375                           ;colour_click.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
 13376  00609E  0E53               	movlw	83
 13377  0060A0  EC76  F032         	call	_I2C_2_Master_Write
 13378                           
 13379                           ;colour_click.c: 99:  tmp=I2C_2_Master_Read(1);
 13380  0060A4  0E01               	movlw	1
 13381  0060A6  ECDA  F030         	call	_I2C_2_Master_Read
 13382  0060AA  6E07               	movwf	??_colourclick_readB^0,c
 13383  0060AC  5007               	movf	??_colourclick_readB^0,w,c
 13384  0060AE  6E0A               	movwf	colourclick_readB@tmp^0,c
 13385  0060B0  6A0B               	clrf	(colourclick_readB@tmp+1)^0,c
 13386                           
 13387                           ;colour_click.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13388  0060B2  0E00               	movlw	0
 13389  0060B4  ECDA  F030         	call	_I2C_2_Master_Read
 13390  0060B8  6E07               	movwf	??_colourclick_readB^0,c
 13391  0060BA  5007               	movf	??_colourclick_readB^0,w,c
 13392  0060BC  6E09               	movwf	(??_colourclick_readB+2)^0,c
 13393  0060BE  6A08               	clrf	(??_colourclick_readB+1)^0,c
 13394  0060C0  500A               	movf	colourclick_readB@tmp^0,w,c
 13395  0060C2  1008               	iorwf	(??_colourclick_readB+1)^0,w,c
 13396  0060C4  6E0A               	movwf	colourclick_readB@tmp^0,c
 13397  0060C6  500B               	movf	(colourclick_readB@tmp+1)^0,w,c
 13398  0060C8  1009               	iorwf	(??_colourclick_readB+2)^0,w,c
 13399  0060CA  6E0B               	movwf	(colourclick_readB@tmp+1)^0,c
 13400                           
 13401                           ;colour_click.c: 101:  I2C_2_Master_Stop();
 13402  0060CC  EC82  F032         	call	_I2C_2_Master_Stop	;wreg free
 13403  0060D0                     
 13404                           ;colour_click.c: 102:  return tmp;
 13405  0060D0  C00A  F005         	movff	colourclick_readB@tmp,?_colourclick_readB
 13406  0060D4  C00B  F006         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
 13407  0060D8  0012               	return		;funcret
 13408  0060DA                     __end_of_colourclick_readB:
 13409                           	callstack 0
 13410                           
 13411 ;; *************** function _I2C_2_Master_Write *****************
 13412 ;; Defined at:
 13413 ;;		line 69 in file "I2C.c"
 13414 ;; Parameters:    Size  Location     Type
 13415 ;;  data_byte       1    wreg     unsigned char 
 13416 ;; Auto vars:     Size  Location     Type
 13417 ;;  data_byte       1    1[COMRAM] unsigned char 
 13418 ;; Return value:  Size  Location     Type
 13419 ;;                  1    wreg      void 
 13420 ;; Registers used:
 13421 ;;		wreg, status,2, status,0, cstack
 13422 ;; Tracked objects:
 13423 ;;		On entry : 0/0
 13424 ;;		On exit  : 0/0
 13425 ;;		Unchanged: 0/0
 13426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13430 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13431 ;;Total ram usage:        1 bytes
 13432 ;; Hardware stack levels used: 1
 13433 ;; Hardware stack levels required when called: 1
 13434 ;; This function calls:
 13435 ;;		_I2C_2_Master_Idle
 13436 ;; This function is called by:
 13437 ;;		_colourclick_writetoaddr
 13438 ;;		_colourclick_readR
 13439 ;;		_colourclick_readG
 13440 ;;		_colourclick_readB
 13441 ;;		_colourclick_readC
 13442 ;; This function uses a non-reentrant model
 13443 ;;
 13444                           
 13445                           	psect	text56
 13446  0064EC                     __ptext56:
 13447                           	callstack 0
 13448  0064EC                     _I2C_2_Master_Write:
 13449                           	callstack 27
 13450                           
 13451                           ;incstack = 0
 13452                           ;I2C_2_Master_Write@data_byte stored from wreg
 13453  0064EC  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 13454  0064EE                     
 13455                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
 13456  0064EE  ECD7  F031         	call	_I2C_2_Master_Idle	;wreg free
 13457  0064F2                     
 13458                           ;I2C.c: 72:   SSP2BUF = data_byte;
 13459  0064F2  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 13460  0064F6  0012               	return		;funcret
 13461  0064F8                     __end_of_I2C_2_Master_Write:
 13462                           	callstack 0
 13463                           
 13464 ;; *************** function _I2C_2_Master_Stop *****************
 13465 ;; Defined at:
 13466 ;;		line 59 in file "I2C.c"
 13467 ;; Parameters:    Size  Location     Type
 13468 ;;		None
 13469 ;; Auto vars:     Size  Location     Type
 13470 ;;		None
 13471 ;; Return value:  Size  Location     Type
 13472 ;;                  1    wreg      void 
 13473 ;; Registers used:
 13474 ;;		wreg, status,2, status,0, cstack
 13475 ;; Tracked objects:
 13476 ;;		On entry : 0/0
 13477 ;;		On exit  : 0/0
 13478 ;;		Unchanged: 0/0
 13479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13484 ;;Total ram usage:        0 bytes
 13485 ;; Hardware stack levels used: 1
 13486 ;; Hardware stack levels required when called: 1
 13487 ;; This function calls:
 13488 ;;		_I2C_2_Master_Idle
 13489 ;; This function is called by:
 13490 ;;		_colourclick_writetoaddr
 13491 ;;		_colourclick_readR
 13492 ;;		_colourclick_readG
 13493 ;;		_colourclick_readB
 13494 ;;		_colourclick_readC
 13495 ;; This function uses a non-reentrant model
 13496 ;;
 13497                           
 13498                           	psect	text57
 13499  006504                     __ptext57:
 13500                           	callstack 0
 13501  006504                     _I2C_2_Master_Stop:
 13502                           	callstack 27
 13503  006504                     
 13504                           ;I2C.c: 61:   I2C_2_Master_Idle();
 13505  006504  ECD7  F031         	call	_I2C_2_Master_Idle	;wreg free
 13506  006508                     
 13507                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
 13508  006508  010E               	movlb	14	; () banked
 13509  00650A  85DA               	bsf	218,2,b	;volatile
 13510  00650C                     
 13511                           ; BSR set to: 14
 13512  00650C  0012               	return		;funcret
 13513  00650E                     __end_of_I2C_2_Master_Stop:
 13514                           	callstack 0
 13515                           
 13516 ;; *************** function _I2C_2_Master_Start *****************
 13517 ;; Defined at:
 13518 ;;		line 39 in file "I2C.c"
 13519 ;; Parameters:    Size  Location     Type
 13520 ;;		None
 13521 ;; Auto vars:     Size  Location     Type
 13522 ;;		None
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  1    wreg      void 
 13525 ;; Registers used:
 13526 ;;		wreg, status,2, status,0, cstack
 13527 ;; Tracked objects:
 13528 ;;		On entry : 0/0
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13536 ;;Total ram usage:        0 bytes
 13537 ;; Hardware stack levels used: 1
 13538 ;; Hardware stack levels required when called: 1
 13539 ;; This function calls:
 13540 ;;		_I2C_2_Master_Idle
 13541 ;; This function is called by:
 13542 ;;		_colourclick_writetoaddr
 13543 ;;		_colourclick_readR
 13544 ;;		_colourclick_readG
 13545 ;;		_colourclick_readB
 13546 ;;		_colourclick_readC
 13547 ;; This function uses a non-reentrant model
 13548 ;;
 13549                           
 13550                           	psect	text58
 13551  00650E                     __ptext58:
 13552                           	callstack 0
 13553  00650E                     _I2C_2_Master_Start:
 13554                           	callstack 27
 13555  00650E                     
 13556                           ;I2C.c: 41:   I2C_2_Master_Idle();
 13557  00650E  ECD7  F031         	call	_I2C_2_Master_Idle	;wreg free
 13558  006512                     
 13559                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
 13560  006512  010E               	movlb	14	; () banked
 13561  006514  81DA               	bsf	218,0,b	;volatile
 13562  006516                     
 13563                           ; BSR set to: 14
 13564  006516  0012               	return		;funcret
 13565  006518                     __end_of_I2C_2_Master_Start:
 13566                           	callstack 0
 13567                           
 13568 ;; *************** function _I2C_2_Master_RepStart *****************
 13569 ;; Defined at:
 13570 ;;		line 49 in file "I2C.c"
 13571 ;; Parameters:    Size  Location     Type
 13572 ;;		None
 13573 ;; Auto vars:     Size  Location     Type
 13574 ;;		None
 13575 ;; Return value:  Size  Location     Type
 13576 ;;                  1    wreg      void 
 13577 ;; Registers used:
 13578 ;;		wreg, status,2, status,0, cstack
 13579 ;; Tracked objects:
 13580 ;;		On entry : 0/0
 13581 ;;		On exit  : 0/0
 13582 ;;		Unchanged: 0/0
 13583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13588 ;;Total ram usage:        0 bytes
 13589 ;; Hardware stack levels used: 1
 13590 ;; Hardware stack levels required when called: 1
 13591 ;; This function calls:
 13592 ;;		_I2C_2_Master_Idle
 13593 ;; This function is called by:
 13594 ;;		_colourclick_readR
 13595 ;;		_colourclick_readG
 13596 ;;		_colourclick_readB
 13597 ;;		_colourclick_readC
 13598 ;; This function uses a non-reentrant model
 13599 ;;
 13600                           
 13601                           	psect	text59
 13602  006518                     __ptext59:
 13603                           	callstack 0
 13604  006518                     _I2C_2_Master_RepStart:
 13605                           	callstack 25
 13606  006518                     
 13607                           ;I2C.c: 51:   I2C_2_Master_Idle();
 13608  006518  ECD7  F031         	call	_I2C_2_Master_Idle	;wreg free
 13609  00651C                     
 13610                           ;I2C.c: 52:   SSP2CON2bits.RSEN = 1;
 13611  00651C  010E               	movlb	14	; () banked
 13612  00651E  83DA               	bsf	218,1,b	;volatile
 13613  006520                     
 13614                           ; BSR set to: 14
 13615  006520  0012               	return		;funcret
 13616  006522                     __end_of_I2C_2_Master_RepStart:
 13617                           	callstack 0
 13618                           
 13619 ;; *************** function _I2C_2_Master_Read *****************
 13620 ;; Defined at:
 13621 ;;		line 79 in file "I2C.c"
 13622 ;; Parameters:    Size  Location     Type
 13623 ;;  ack             1    wreg     unsigned char 
 13624 ;; Auto vars:     Size  Location     Type
 13625 ;;  ack             1    2[COMRAM] unsigned char 
 13626 ;;  tmp             1    3[COMRAM] unsigned char 
 13627 ;; Return value:  Size  Location     Type
 13628 ;;                  1    wreg      unsigned char 
 13629 ;; Registers used:
 13630 ;;		wreg, status,2, status,0, cstack
 13631 ;; Tracked objects:
 13632 ;;		On entry : 0/0
 13633 ;;		On exit  : 0/0
 13634 ;;		Unchanged: 0/0
 13635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13639 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13640 ;;Total ram usage:        3 bytes
 13641 ;; Hardware stack levels used: 1
 13642 ;; Hardware stack levels required when called: 1
 13643 ;; This function calls:
 13644 ;;		_I2C_2_Master_Idle
 13645 ;; This function is called by:
 13646 ;;		_colourclick_readR
 13647 ;;		_colourclick_readG
 13648 ;;		_colourclick_readB
 13649 ;;		_colourclick_readC
 13650 ;; This function uses a non-reentrant model
 13651 ;;
 13652                           
 13653                           	psect	text60
 13654  0061B4                     __ptext60:
 13655                           	callstack 0
 13656  0061B4                     _I2C_2_Master_Read:
 13657                           	callstack 25
 13658                           
 13659                           ; BSR set to: 14
 13660                           ;incstack = 0
 13661                           ;I2C_2_Master_Read@ack stored from wreg
 13662  0061B4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 13663  0061B6                     
 13664                           ;I2C.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);I2C.c: 80: {;I2C.c: 81:  
      +                           unsigned char tmp;;I2C.c: 82:   I2C_2_Master_Idle();
 13665  0061B6  ECD7  F031         	call	_I2C_2_Master_Idle	;wreg free
 13666  0061BA                     
 13667                           ;I2C.c: 83:   SSP2CON2bits.RCEN = 1;
 13668  0061BA  010E               	movlb	14	; () banked
 13669  0061BC  87DA               	bsf	218,3,b	;volatile
 13670                           
 13671                           ;I2C.c: 84:   I2C_2_Master_Idle();
 13672  0061BE  ECD7  F031         	call	_I2C_2_Master_Idle	;wreg free
 13673  0061C2                     
 13674                           ;I2C.c: 85:   tmp = SSP2BUF;
 13675  0061C2  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 13676                           
 13677                           ;I2C.c: 86:   I2C_2_Master_Idle();
 13678  0061C6  ECD7  F031         	call	_I2C_2_Master_Idle	;wreg free
 13679  0061CA                     
 13680                           ;I2C.c: 87:   SSP2CON2bits.ACKDT = !ack;
 13681  0061CA  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 13682  0061CC  B4D8               	btfsc	status,2,c
 13683  0061CE  EFEB  F030         	goto	u5811
 13684  0061D2  EFEF  F030         	goto	u5810
 13685  0061D6                     u5811:
 13686  0061D6  6A02               	clrf	??_I2C_2_Master_Read^0,c
 13687  0061D8  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 13688  0061DA  EFF0  F030         	goto	u5828
 13689  0061DE                     u5810:
 13690  0061DE  6A02               	clrf	??_I2C_2_Master_Read^0,c
 13691  0061E0                     u5828:
 13692  0061E0  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 13693  0061E2  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 13694  0061E4  010E               	movlb	14	; () banked
 13695  0061E6  51DA               	movf	218,w,b	;volatile
 13696  0061E8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 13697  0061EA  0BDF               	andlw	-33
 13698  0061EC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 13699  0061EE  6FDA               	movwf	218,b	;volatile
 13700  0061F0                     
 13701                           ; BSR set to: 14
 13702                           ;I2C.c: 88:   SSP2CON2bits.ACKEN = 1;
 13703  0061F0  89DA               	bsf	218,4,b	;volatile
 13704  0061F2                     
 13705                           ; BSR set to: 14
 13706                           ;I2C.c: 89:   return tmp;
 13707  0061F2  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 13708  0061F4                     
 13709                           ; BSR set to: 14
 13710  0061F4  0012               	return		;funcret
 13711  0061F6                     __end_of_I2C_2_Master_Read:
 13712                           	callstack 0
 13713                           
 13714 ;; *************** function _I2C_2_Master_Idle *****************
 13715 ;; Defined at:
 13716 ;;		line 30 in file "I2C.c"
 13717 ;; Parameters:    Size  Location     Type
 13718 ;;		None
 13719 ;; Auto vars:     Size  Location     Type
 13720 ;;		None
 13721 ;; Return value:  Size  Location     Type
 13722 ;;                  1    wreg      void 
 13723 ;; Registers used:
 13724 ;;		wreg, status,2, status,0
 13725 ;; Tracked objects:
 13726 ;;		On entry : 0/0
 13727 ;;		On exit  : 0/0
 13728 ;;		Unchanged: 0/0
 13729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13733 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13734 ;;Total ram usage:        1 bytes
 13735 ;; Hardware stack levels used: 1
 13736 ;; This function calls:
 13737 ;;		Nothing
 13738 ;; This function is called by:
 13739 ;;		_I2C_2_Master_Start
 13740 ;;		_I2C_2_Master_RepStart
 13741 ;;		_I2C_2_Master_Stop
 13742 ;;		_I2C_2_Master_Write
 13743 ;;		_I2C_2_Master_Read
 13744 ;; This function uses a non-reentrant model
 13745 ;;
 13746                           
 13747                           	psect	text61
 13748  0063AE                     __ptext61:
 13749                           	callstack 0
 13750  0063AE                     _I2C_2_Master_Idle:
 13751                           	callstack 27
 13752  0063AE                     l401:
 13753  0063AE  010E               	movlb	14	; () banked
 13754  0063B0  B5D8               	btfsc	216,2,b	;volatile
 13755  0063B2  EFDD  F031         	goto	u4651
 13756  0063B6  EFDF  F031         	goto	u4650
 13757  0063BA                     u4651:
 13758  0063BA  EFD7  F031         	goto	l401
 13759  0063BE                     u4650:
 13760  0063BE                     
 13761                           ; BSR set to: 14
 13762  0063BE  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 13763  0063C2  0E1F               	movlw	31
 13764  0063C4  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 13765  0063C6  A4D8               	btfss	status,2,c
 13766  0063C8  EFE8  F031         	goto	u4661
 13767  0063CC  EFEA  F031         	goto	u4660
 13768  0063D0                     u4661:
 13769  0063D0  EFD7  F031         	goto	l401
 13770  0063D4                     u4660:
 13771  0063D4                     
 13772                           ; BSR set to: 14
 13773  0063D4  0012               	return		;funcret
 13774  0063D6                     __end_of_I2C_2_Master_Idle:
 13775                           	callstack 0
 13776                           
 13777 ;; *************** function _colourclickLEDs_C *****************
 13778 ;; Defined at:
 13779 ;;		line 84 in file "buttons_n_LEDs.c"
 13780 ;; Parameters:    Size  Location     Type
 13781 ;;  tog             1    wreg     unsigned char 
 13782 ;; Auto vars:     Size  Location     Type
 13783 ;;  tog             1    0[COMRAM] unsigned char 
 13784 ;; Return value:  Size  Location     Type
 13785 ;;                  1    wreg      void 
 13786 ;; Registers used:
 13787 ;;		wreg
 13788 ;; Tracked objects:
 13789 ;;		On entry : 0/0
 13790 ;;		On exit  : 0/0
 13791 ;;		Unchanged: 0/0
 13792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13796 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13797 ;;Total ram usage:        1 bytes
 13798 ;; Hardware stack levels used: 1
 13799 ;; This function calls:
 13800 ;;		Nothing
 13801 ;; This function is called by:
 13802 ;;		_main
 13803 ;;		_colourcards_testingRGBC
 13804 ;;		_colourclick_readRGBC2
 13805 ;;		_colourclickLEDs_init
 13806 ;;		_colourclick_calibration
 13807 ;; This function uses a non-reentrant model
 13808 ;;
 13809                           
 13810                           	psect	text62
 13811  0063FC                     __ptext62:
 13812                           	callstack 0
 13813  0063FC                     _colourclickLEDs_C:
 13814                           	callstack 28
 13815                           
 13816                           ; BSR set to: 14
 13817                           ;incstack = 0
 13818                           ;colourclickLEDs_C@tog stored from wreg
 13819  0063FC  6E01               	movwf	colourclickLEDs_C@tog^0,c
 13820  0063FE                     
 13821                           ;buttons_n_LEDs.c: 84: void colourclickLEDs_C(unsigned char tog);buttons_n_LEDs.c: 85: {
      +                          ;buttons_n_LEDs.c: 86:     LATGbits.LATG1 = tog;
 13822  0063FE  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
 13823  006400  D002               	bra	u7055
 13824  006402  927F               	bcf	127,1,c	;volatile
 13825  006404  D001               	bra	u7056
 13826  006406                     u7055:
 13827  006406  827F               	bsf	127,1,c	;volatile
 13828  006408                     u7056:
 13829                           
 13830                           ;buttons_n_LEDs.c: 87:     LATAbits.LATA4 = tog;
 13831  006408  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
 13832  00640A  D002               	bra	u7065
 13833  00640C  9879               	bcf	121,4,c	;volatile
 13834  00640E  D001               	bra	u7066
 13835  006410                     u7065:
 13836  006410  8879               	bsf	121,4,c	;volatile
 13837  006412                     u7066:
 13838                           
 13839                           ;buttons_n_LEDs.c: 88:     LATFbits.LATF7 = tog;
 13840  006412  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
 13841  006414  D002               	bra	u7075
 13842  006416  9E7E               	bcf	126,7,c	;volatile
 13843  006418  D001               	bra	u7076
 13844  00641A                     u7075:
 13845  00641A  8E7E               	bsf	126,7,c	;volatile
 13846  00641C                     u7076:
 13847  00641C  0012               	return		;funcret
 13848  00641E                     __end_of_colourclickLEDs_C:
 13849                           	callstack 0
 13850                           
 13851 ;; *************** function _colourcards_normaliseRGBC *****************
 13852 ;; Defined at:
 13853 ;;		line 211 in file "colour_cards.c"
 13854 ;; Parameters:    Size  Location     Type
 13855 ;;  abs             2   39[COMRAM] PTR struct .
 13856 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
 13857 ;;  rel             2   41[COMRAM] PTR struct .
 13858 ;;		 -> colourcards_testingRGBC@rel(12), colourcards_readRGBC@rel(12), 
 13859 ;; Auto vars:     Size  Location     Type
 13860 ;;  C               2   49[COMRAM] unsigned int 
 13861 ;;  B               2   47[COMRAM] unsigned int 
 13862 ;;  G               2   45[COMRAM] unsigned int 
 13863 ;;  R               2   43[COMRAM] unsigned int 
 13864 ;; Return value:  Size  Location     Type
 13865 ;;                  1    wreg      void 
 13866 ;; Registers used:
 13867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13868 ;; Tracked objects:
 13869 ;;		On entry : 0/0
 13870 ;;		On exit  : 0/0
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13874 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13876 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13877 ;;Total ram usage:       12 bytes
 13878 ;; Hardware stack levels used: 1
 13879 ;; Hardware stack levels required when called: 1
 13880 ;; This function calls:
 13881 ;;		___fldiv
 13882 ;;		___xxtofl
 13883 ;; This function is called by:
 13884 ;;		_colourcards_readRGBC
 13885 ;;		_colourcards_testingRGBC
 13886 ;; This function uses a non-reentrant model
 13887 ;;
 13888                           
 13889                           	psect	text63
 13890  004CDE                     __ptext63:
 13891                           	callstack 0
 13892  004CDE                     _colourcards_normaliseRGBC:
 13893                           	callstack 28
 13894  004CDE                     
 13895                           ;colour_cards.c: 211: void colourcards_normaliseRGBC(RGBC_val *abs, RGB_rel *rel);colour
      +                          _cards.c: 212: {;colour_cards.c: 213:     unsigned int R = abs->R;
 13896  004CDE  C028  FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
 13897  004CE2  C029  FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
 13898  004CE6  CFDE F02C          	movff	postinc2,colourcards_normaliseRGBC@R
 13899  004CEA  CFDD F02D          	movff	postdec2,colourcards_normaliseRGBC@R+1
 13900  004CEE                     
 13901                           ;colour_cards.c: 214:     unsigned int G = abs->G;
 13902  004CEE  EE20 F002          	lfsr	2,2
 13903  004CF2  5028               	movf	colourcards_normaliseRGBC@abs^0,w,c
 13904  004CF4  26D9               	addwf	fsr2l,f,c
 13905  004CF6  5029               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 13906  004CF8  22DA               	addwfc	fsr2h,f,c
 13907  004CFA  CFDE F02E          	movff	postinc2,colourcards_normaliseRGBC@G
 13908  004CFE  CFDD F02F          	movff	postdec2,colourcards_normaliseRGBC@G+1
 13909  004D02                     
 13910                           ;colour_cards.c: 215:     unsigned int B = abs->B;
 13911  004D02  EE20 F004          	lfsr	2,4
 13912  004D06  5028               	movf	colourcards_normaliseRGBC@abs^0,w,c
 13913  004D08  26D9               	addwf	fsr2l,f,c
 13914  004D0A  5029               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 13915  004D0C  22DA               	addwfc	fsr2h,f,c
 13916  004D0E  CFDE F030          	movff	postinc2,colourcards_normaliseRGBC@B
 13917  004D12  CFDD F031          	movff	postdec2,colourcards_normaliseRGBC@B+1
 13918  004D16                     
 13919                           ;colour_cards.c: 216:     unsigned int C = abs->C;
 13920  004D16  EE20 F006          	lfsr	2,6
 13921  004D1A  5028               	movf	colourcards_normaliseRGBC@abs^0,w,c
 13922  004D1C  26D9               	addwf	fsr2l,f,c
 13923  004D1E  5029               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 13924  004D20  22DA               	addwfc	fsr2h,f,c
 13925  004D22  CFDE F032          	movff	postinc2,colourcards_normaliseRGBC@C
 13926  004D26  CFDD F033          	movff	postdec2,colourcards_normaliseRGBC@C+1
 13927  004D2A                     
 13928                           ;colour_cards.c: 218:     rel->R = (float)R/(float)C;
 13929  004D2A  C02C  F001         	movff	colourcards_normaliseRGBC@R,___xxtofl@val
 13930  004D2E  C02D  F002         	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
 13931  004D32  6A03               	clrf	(___xxtofl@val+2)^0,c
 13932  004D34  6A04               	clrf	(___xxtofl@val+3)^0,c
 13933  004D36  0E00               	movlw	0
 13934  004D38  EC5A  F022         	call	___xxtofl
 13935  004D3C  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13936  004D40  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13937  004D44  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13938  004D48  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13939  004D4C  C032  F001         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 13940  004D50  C033  F002         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 13941  004D54  6A03               	clrf	(___xxtofl@val+2)^0,c
 13942  004D56  6A04               	clrf	(___xxtofl@val+3)^0,c
 13943  004D58  0E00               	movlw	0
 13944  004D5A  EC5A  F022         	call	___xxtofl
 13945  004D5E  C001  F013         	movff	?___xxtofl,___fldiv@a
 13946  004D62  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
 13947  004D66  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
 13948  004D6A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
 13949  004D6E  EC28  F01D         	call	___fldiv	;wreg free
 13950  004D72  C02A  FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
 13951  004D76  C02B  FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
 13952  004D7A  C00F  FFDE         	movff	?___fldiv,postinc2
 13953  004D7E  C010  FFDE         	movff	?___fldiv+1,postinc2
 13954  004D82  C011  FFDE         	movff	?___fldiv+2,postinc2
 13955  004D86  C012  FFDE         	movff	?___fldiv+3,postinc2
 13956  004D8A                     
 13957                           ;colour_cards.c: 219:     rel->G = (float)G/(float)C;
 13958  004D8A  C02E  F001         	movff	colourcards_normaliseRGBC@G,___xxtofl@val
 13959  004D8E  C02F  F002         	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
 13960  004D92  6A03               	clrf	(___xxtofl@val+2)^0,c
 13961  004D94  6A04               	clrf	(___xxtofl@val+3)^0,c
 13962  004D96  0E00               	movlw	0
 13963  004D98  EC5A  F022         	call	___xxtofl
 13964  004D9C  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13965  004DA0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13966  004DA4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13967  004DA8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13968  004DAC  C032  F001         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 13969  004DB0  C033  F002         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 13970  004DB4  6A03               	clrf	(___xxtofl@val+2)^0,c
 13971  004DB6  6A04               	clrf	(___xxtofl@val+3)^0,c
 13972  004DB8  0E00               	movlw	0
 13973  004DBA  EC5A  F022         	call	___xxtofl
 13974  004DBE  C001  F013         	movff	?___xxtofl,___fldiv@a
 13975  004DC2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
 13976  004DC6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
 13977  004DCA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
 13978  004DCE  EC28  F01D         	call	___fldiv	;wreg free
 13979  004DD2  EE20 F004          	lfsr	2,4
 13980  004DD6  502A               	movf	colourcards_normaliseRGBC@rel^0,w,c
 13981  004DD8  26D9               	addwf	fsr2l,f,c
 13982  004DDA  502B               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
 13983  004DDC  22DA               	addwfc	fsr2h,f,c
 13984  004DDE  C00F  FFDE         	movff	?___fldiv,postinc2
 13985  004DE2  C010  FFDE         	movff	?___fldiv+1,postinc2
 13986  004DE6  C011  FFDE         	movff	?___fldiv+2,postinc2
 13987  004DEA  C012  FFDE         	movff	?___fldiv+3,postinc2
 13988  004DEE                     
 13989                           ;colour_cards.c: 220:     rel->B = (float)B/(float)C;
 13990  004DEE  C030  F001         	movff	colourcards_normaliseRGBC@B,___xxtofl@val
 13991  004DF2  C031  F002         	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
 13992  004DF6  6A03               	clrf	(___xxtofl@val+2)^0,c
 13993  004DF8  6A04               	clrf	(___xxtofl@val+3)^0,c
 13994  004DFA  0E00               	movlw	0
 13995  004DFC  EC5A  F022         	call	___xxtofl
 13996  004E00  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13997  004E04  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13998  004E08  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13999  004E0C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 14000  004E10  C032  F001         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 14001  004E14  C033  F002         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 14002  004E18  6A03               	clrf	(___xxtofl@val+2)^0,c
 14003  004E1A  6A04               	clrf	(___xxtofl@val+3)^0,c
 14004  004E1C  0E00               	movlw	0
 14005  004E1E  EC5A  F022         	call	___xxtofl
 14006  004E22  C001  F013         	movff	?___xxtofl,___fldiv@a
 14007  004E26  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
 14008  004E2A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
 14009  004E2E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
 14010  004E32  EC28  F01D         	call	___fldiv	;wreg free
 14011  004E36  EE20 F008          	lfsr	2,8
 14012  004E3A  502A               	movf	colourcards_normaliseRGBC@rel^0,w,c
 14013  004E3C  26D9               	addwf	fsr2l,f,c
 14014  004E3E  502B               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
 14015  004E40  22DA               	addwfc	fsr2h,f,c
 14016  004E42  C00F  FFDE         	movff	?___fldiv,postinc2
 14017  004E46  C010  FFDE         	movff	?___fldiv+1,postinc2
 14018  004E4A  C011  FFDE         	movff	?___fldiv+2,postinc2
 14019  004E4E  C012  FFDE         	movff	?___fldiv+3,postinc2
 14020  004E52  0012               	return		;funcret
 14021  004E54                     __end_of_colourcards_normaliseRGBC:
 14022                           	callstack 0
 14023                           
 14024 ;; *************** function ___xxtofl *****************
 14025 ;; Defined at:
 14026 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 14027 ;; Parameters:    Size  Location     Type
 14028 ;;  sign            1    wreg     unsigned char 
 14029 ;;  val             4    0[COMRAM] long 
 14030 ;; Auto vars:     Size  Location     Type
 14031 ;;  sign            1    8[COMRAM] unsigned char 
 14032 ;;  arg             4   10[COMRAM] unsigned long 
 14033 ;;  exp             1    9[COMRAM] unsigned char 
 14034 ;; Return value:  Size  Location     Type
 14035 ;;                  4    0[COMRAM] unsigned char 
 14036 ;; Registers used:
 14037 ;;		wreg, status,2, status,0
 14038 ;; Tracked objects:
 14039 ;;		On entry : 0/0
 14040 ;;		On exit  : 0/0
 14041 ;;		Unchanged: 0/0
 14042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14044 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14046 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14047 ;;Total ram usage:       14 bytes
 14048 ;; Hardware stack levels used: 1
 14049 ;; This function calls:
 14050 ;;		Nothing
 14051 ;; This function is called by:
 14052 ;;		_colourcards_normaliseRGBC
 14053 ;;		_left
 14054 ;; This function uses a non-reentrant model
 14055 ;;
 14056                           
 14057                           	psect	text64
 14058  0044B4                     __ptext64:
 14059                           	callstack 0
 14060  0044B4                     ___xxtofl:
 14061                           	callstack 28
 14062                           
 14063                           ;incstack = 0
 14064                           ;___xxtofl@sign stored from wreg
 14065  0044B4  6E09               	movwf	___xxtofl@sign^0,c
 14066  0044B6  5009               	movf	___xxtofl@sign^0,w,c
 14067  0044B8  B4D8               	btfsc	status,2,c
 14068  0044BA  EF61  F022         	goto	u6781
 14069  0044BE  EF63  F022         	goto	u6780
 14070  0044C2                     u6781:
 14071  0044C2  EF85  F022         	goto	l1386
 14072  0044C6                     u6780:
 14073  0044C6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 14074  0044C8  EF6A  F022         	goto	u6790
 14075  0044CC  EF68  F022         	goto	u6791
 14076  0044D0                     u6791:
 14077  0044D0  EF85  F022         	goto	l1386
 14078  0044D4                     u6790:
 14079  0044D4  C001  F005         	movff	___xxtofl@val,??___xxtofl
 14080  0044D8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 14081  0044DC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 14082  0044E0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 14083  0044E4  1E05               	comf	??___xxtofl^0,f,c
 14084  0044E6  1E06               	comf	(??___xxtofl+1)^0,f,c
 14085  0044E8  1E07               	comf	(??___xxtofl+2)^0,f,c
 14086  0044EA  1E08               	comf	(??___xxtofl+3)^0,f,c
 14087  0044EC  2A05               	incf	??___xxtofl^0,f,c
 14088  0044EE  0E00               	movlw	0
 14089  0044F0  2206               	addwfc	(??___xxtofl+1)^0,f,c
 14090  0044F2  2207               	addwfc	(??___xxtofl+2)^0,f,c
 14091  0044F4  2208               	addwfc	(??___xxtofl+3)^0,f,c
 14092  0044F6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 14093  0044FA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 14094  0044FE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 14095  004502  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 14096  004506  EF8D  F022         	goto	l5631
 14097  00450A                     l1386:
 14098  00450A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 14099  00450E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14100  004512  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14101  004516  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14102  00451A                     l5631:
 14103  00451A  5001               	movf	___xxtofl@val^0,w,c
 14104  00451C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 14105  00451E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 14106  004520  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 14107  004522  A4D8               	btfss	status,2,c
 14108  004524  EF96  F022         	goto	u6801
 14109  004528  EF98  F022         	goto	u6800
 14110  00452C                     u6801:
 14111  00452C  EFA2  F022         	goto	l5637
 14112  004530                     u6800:
 14113  004530  0E00               	movlw	0
 14114  004532  6E01               	movwf	?___xxtofl^0,c
 14115  004534  0E00               	movlw	0
 14116  004536  6E02               	movwf	(?___xxtofl+1)^0,c
 14117  004538  0E00               	movlw	0
 14118  00453A  6E03               	movwf	(?___xxtofl+2)^0,c
 14119  00453C  0E00               	movlw	0
 14120  00453E  6E04               	movwf	(?___xxtofl+3)^0,c
 14121  004540  EF33  F023         	goto	l1389
 14122  004544                     l5637:
 14123  004544  0E96               	movlw	150
 14124  004546  6E0A               	movwf	___xxtofl@exp^0,c
 14125  004548  EFAC  F022         	goto	l5641
 14126  00454C                     l5639:
 14127  00454C  2A0A               	incf	___xxtofl@exp^0,f,c
 14128  00454E  90D8               	bcf	status,0,c
 14129  004550  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 14130  004552  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 14131  004554  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 14132  004556  320B               	rrcf	___xxtofl@arg^0,f,c
 14133  004558                     l5641:
 14134  004558  0E00               	movlw	0
 14135  00455A  140B               	andwf	___xxtofl@arg^0,w,c
 14136  00455C  6E05               	movwf	??___xxtofl^0,c
 14137  00455E  0E00               	movlw	0
 14138  004560  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 14139  004562  6E06               	movwf	(??___xxtofl+1)^0,c
 14140  004564  0E00               	movlw	0
 14141  004566  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 14142  004568  6E07               	movwf	(??___xxtofl+2)^0,c
 14143  00456A  0EFE               	movlw	254
 14144  00456C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 14145  00456E  6E08               	movwf	(??___xxtofl+3)^0,c
 14146  004570  5005               	movf	??___xxtofl^0,w,c
 14147  004572  1006               	iorwf	(??___xxtofl+1)^0,w,c
 14148  004574  1007               	iorwf	(??___xxtofl+2)^0,w,c
 14149  004576  1008               	iorwf	(??___xxtofl+3)^0,w,c
 14150  004578  A4D8               	btfss	status,2,c
 14151  00457A  EFC1  F022         	goto	u6811
 14152  00457E  EFC3  F022         	goto	u6810
 14153  004582                     u6811:
 14154  004582  EFA6  F022         	goto	l5639
 14155  004586                     u6810:
 14156  004586  EFD1  F022         	goto	l1393
 14157  00458A                     l5643:
 14158  00458A  2A0A               	incf	___xxtofl@exp^0,f,c
 14159  00458C  0E01               	movlw	1
 14160  00458E  260B               	addwf	___xxtofl@arg^0,f,c
 14161  004590  0E00               	movlw	0
 14162  004592  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 14163  004594  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 14164  004596  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 14165  004598  90D8               	bcf	status,0,c
 14166  00459A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 14167  00459C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 14168  00459E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 14169  0045A0  320B               	rrcf	___xxtofl@arg^0,f,c
 14170  0045A2                     l1393:
 14171  0045A2  0E00               	movlw	0
 14172  0045A4  140B               	andwf	___xxtofl@arg^0,w,c
 14173  0045A6  6E05               	movwf	??___xxtofl^0,c
 14174  0045A8  0E00               	movlw	0
 14175  0045AA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 14176  0045AC  6E06               	movwf	(??___xxtofl+1)^0,c
 14177  0045AE  0E00               	movlw	0
 14178  0045B0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 14179  0045B2  6E07               	movwf	(??___xxtofl+2)^0,c
 14180  0045B4  0EFF               	movlw	255
 14181  0045B6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 14182  0045B8  6E08               	movwf	(??___xxtofl+3)^0,c
 14183  0045BA  5005               	movf	??___xxtofl^0,w,c
 14184  0045BC  1006               	iorwf	(??___xxtofl+1)^0,w,c
 14185  0045BE  1007               	iorwf	(??___xxtofl+2)^0,w,c
 14186  0045C0  1008               	iorwf	(??___xxtofl+3)^0,w,c
 14187  0045C2  A4D8               	btfss	status,2,c
 14188  0045C4  EFE6  F022         	goto	u6821
 14189  0045C8  EFE8  F022         	goto	u6820
 14190  0045CC                     u6821:
 14191  0045CC  EFC5  F022         	goto	l5643
 14192  0045D0                     u6820:
 14193  0045D0  EFF0  F022         	goto	l5651
 14194  0045D4                     l5649:
 14195  0045D4  060A               	decf	___xxtofl@exp^0,f,c
 14196  0045D6  90D8               	bcf	status,0,c
 14197  0045D8  360B               	rlcf	___xxtofl@arg^0,f,c
 14198  0045DA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 14199  0045DC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 14200  0045DE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 14201  0045E0                     l5651:
 14202  0045E0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 14203  0045E2  EFF5  F022         	goto	u6831
 14204  0045E6  EFF7  F022         	goto	u6830
 14205  0045EA                     u6831:
 14206  0045EA  EFFF  F022         	goto	l1400
 14207  0045EE                     u6830:
 14208  0045EE  0E02               	movlw	2
 14209  0045F0  600A               	cpfslt	___xxtofl@exp^0,c
 14210  0045F2  EFFD  F022         	goto	u6841
 14211  0045F6  EFFF  F022         	goto	u6840
 14212  0045FA                     u6841:
 14213  0045FA  EFEA  F022         	goto	l5649
 14214  0045FE                     u6840:
 14215  0045FE                     l1400:
 14216  0045FE  B00A               	btfsc	___xxtofl@exp^0,0,c
 14217  004600  EF04  F023         	goto	u6851
 14218  004604  EF06  F023         	goto	u6850
 14219  004608                     u6851:
 14220  004608  EF07  F023         	goto	l5657
 14221  00460C                     u6850:
 14222  00460C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 14223  00460E                     l5657:
 14224  00460E  90D8               	bcf	status,0,c
 14225  004610  320A               	rrcf	___xxtofl@exp^0,f,c
 14226  004612  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14227  004616  6A06               	clrf	(??___xxtofl+1)^0,c
 14228  004618  6A07               	clrf	(??___xxtofl+2)^0,c
 14229  00461A  6A08               	clrf	(??___xxtofl+3)^0,c
 14230  00461C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14231  004620  6A07               	clrf	(??___xxtofl+2)^0,c
 14232  004622  6A06               	clrf	(??___xxtofl+1)^0,c
 14233  004624  6A05               	clrf	??___xxtofl^0,c
 14234  004626  5005               	movf	??___xxtofl^0,w,c
 14235  004628  120B               	iorwf	___xxtofl@arg^0,f,c
 14236  00462A  5006               	movf	(??___xxtofl+1)^0,w,c
 14237  00462C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 14238  00462E  5007               	movf	(??___xxtofl+2)^0,w,c
 14239  004630  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 14240  004632  5008               	movf	(??___xxtofl+3)^0,w,c
 14241  004634  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 14242  004636  5009               	movf	___xxtofl@sign^0,w,c
 14243  004638  B4D8               	btfsc	status,2,c
 14244  00463A  EF21  F023         	goto	u6861
 14245  00463E  EF23  F023         	goto	u6860
 14246  004642                     u6861:
 14247  004642  EF2B  F023         	goto	l5667
 14248  004646                     u6860:
 14249  004646  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 14250  004648  EF2A  F023         	goto	u6870
 14251  00464C  EF28  F023         	goto	u6871
 14252  004650                     u6871:
 14253  004650  EF2B  F023         	goto	l5667
 14254  004654                     u6870:
 14255  004654  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 14256  004656                     l5667:
 14257  004656  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14258  00465A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14259  00465E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14260  004662  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14261  004666                     l1389:
 14262  004666  0012               	return		;funcret
 14263  004668                     __end_of___xxtofl:
 14264                           	callstack 0
 14265                           
 14266 ;; *************** function ___fldiv *****************
 14267 ;; Defined at:
 14268 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 14269 ;; Parameters:    Size  Location     Type
 14270 ;;  b               4   14[COMRAM] unsigned char 
 14271 ;;  a               4   18[COMRAM] unsigned char 
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;  grs             4   33[COMRAM] unsigned long 
 14274 ;;  rem             4   26[COMRAM] unsigned long 
 14275 ;;  new_exp         2   31[COMRAM] short 
 14276 ;;  aexp            1   38[COMRAM] unsigned char 
 14277 ;;  bexp            1   37[COMRAM] unsigned char 
 14278 ;;  sign            1   30[COMRAM] unsigned char 
 14279 ;; Return value:  Size  Location     Type
 14280 ;;                  4   14[COMRAM] unsigned char 
 14281 ;; Registers used:
 14282 ;;		wreg, status,2, status,0
 14283 ;; Tracked objects:
 14284 ;;		On entry : 0/0
 14285 ;;		On exit  : 0/0
 14286 ;;		Unchanged: 0/0
 14287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14288 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14289 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14290 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14291 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14292 ;;Total ram usage:       25 bytes
 14293 ;; Hardware stack levels used: 1
 14294 ;; This function calls:
 14295 ;;		Nothing
 14296 ;; This function is called by:
 14297 ;;		_colourcards_normaliseRGBC
 14298 ;;		_efgtoa
 14299 ;; This function uses a non-reentrant model
 14300 ;;
 14301                           
 14302                           	psect	text65
 14303  003A50                     __ptext65:
 14304                           	callstack 0
 14305  003A50                     ___fldiv:
 14306                           	callstack 25
 14307  003A50  5012               	movf	(___fldiv@b+3)^0,w,c
 14308  003A52  0B80               	andlw	128
 14309  003A54  6E1F               	movwf	___fldiv@sign^0,c
 14310  003A56  5012               	movf	(___fldiv@b+3)^0,w,c
 14311  003A58  2412               	addwf	(___fldiv@b+3)^0,w,c
 14312  003A5A  6E26               	movwf	___fldiv@bexp^0,c
 14313  003A5C  AE11               	btfss	(___fldiv@b+2)^0,7,c
 14314  003A5E  EF33  F01D         	goto	u4801
 14315  003A62  EF35  F01D         	goto	u4800
 14316  003A66                     u4801:
 14317  003A66  EF36  F01D         	goto	l4539
 14318  003A6A                     u4800:
 14319  003A6A  8026               	bsf	___fldiv@bexp^0,0,c
 14320  003A6C                     l4539:
 14321  003A6C  5026               	movf	___fldiv@bexp^0,w,c
 14322  003A6E  B4D8               	btfsc	status,2,c
 14323  003A70  EF3C  F01D         	goto	u4811
 14324  003A74  EF3E  F01D         	goto	u4810
 14325  003A78                     u4811:
 14326  003A78  EF53  F01D         	goto	l4549
 14327  003A7C                     u4810:
 14328  003A7C  2826               	incf	___fldiv@bexp^0,w,c
 14329  003A7E  A4D8               	btfss	status,2,c
 14330  003A80  EF44  F01D         	goto	u4821
 14331  003A84  EF46  F01D         	goto	u4820
 14332  003A88                     u4821:
 14333  003A88  EF4E  F01D         	goto	l4545
 14334  003A8C                     u4820:
 14335  003A8C  0E00               	movlw	0
 14336  003A8E  6E0F               	movwf	___fldiv@b^0,c
 14337  003A90  0E00               	movlw	0
 14338  003A92  6E10               	movwf	(___fldiv@b+1)^0,c
 14339  003A94  0E00               	movlw	0
 14340  003A96  6E11               	movwf	(___fldiv@b+2)^0,c
 14341  003A98  0E00               	movlw	0
 14342  003A9A  6E12               	movwf	(___fldiv@b+3)^0,c
 14343  003A9C                     l4545:
 14344  003A9C  8E11               	bsf	(___fldiv@b+2)^0,7,c
 14345  003A9E  0E00               	movlw	0
 14346  003AA0  6E12               	movwf	(___fldiv@b+3)^0,c
 14347  003AA2  EF5B  F01D         	goto	l4551
 14348  003AA6                     l4549:
 14349  003AA6  0E00               	movlw	0
 14350  003AA8  6E0F               	movwf	___fldiv@b^0,c
 14351  003AAA  0E00               	movlw	0
 14352  003AAC  6E10               	movwf	(___fldiv@b+1)^0,c
 14353  003AAE  0E00               	movlw	0
 14354  003AB0  6E11               	movwf	(___fldiv@b+2)^0,c
 14355  003AB2  0E00               	movlw	0
 14356  003AB4  6E12               	movwf	(___fldiv@b+3)^0,c
 14357  003AB6                     l4551:
 14358  003AB6  5016               	movf	(___fldiv@a+3)^0,w,c
 14359  003AB8  0B80               	andlw	128
 14360  003ABA  1A1F               	xorwf	___fldiv@sign^0,f,c
 14361  003ABC  5016               	movf	(___fldiv@a+3)^0,w,c
 14362  003ABE  2416               	addwf	(___fldiv@a+3)^0,w,c
 14363  003AC0  6E27               	movwf	___fldiv@aexp^0,c
 14364  003AC2  AE15               	btfss	(___fldiv@a+2)^0,7,c
 14365  003AC4  EF66  F01D         	goto	u4831
 14366  003AC8  EF68  F01D         	goto	u4830
 14367  003ACC                     u4831:
 14368  003ACC  EF69  F01D         	goto	l4559
 14369  003AD0                     u4830:
 14370  003AD0  8027               	bsf	___fldiv@aexp^0,0,c
 14371  003AD2                     l4559:
 14372  003AD2  5027               	movf	___fldiv@aexp^0,w,c
 14373  003AD4  B4D8               	btfsc	status,2,c
 14374  003AD6  EF6F  F01D         	goto	u4841
 14375  003ADA  EF71  F01D         	goto	u4840
 14376  003ADE                     u4841:
 14377  003ADE  EF86  F01D         	goto	l4569
 14378  003AE2                     u4840:
 14379  003AE2  2827               	incf	___fldiv@aexp^0,w,c
 14380  003AE4  A4D8               	btfss	status,2,c
 14381  003AE6  EF77  F01D         	goto	u4851
 14382  003AEA  EF79  F01D         	goto	u4850
 14383  003AEE                     u4851:
 14384  003AEE  EF81  F01D         	goto	l4565
 14385  003AF2                     u4850:
 14386  003AF2  0E00               	movlw	0
 14387  003AF4  6E13               	movwf	___fldiv@a^0,c
 14388  003AF6  0E00               	movlw	0
 14389  003AF8  6E14               	movwf	(___fldiv@a+1)^0,c
 14390  003AFA  0E00               	movlw	0
 14391  003AFC  6E15               	movwf	(___fldiv@a+2)^0,c
 14392  003AFE  0E00               	movlw	0
 14393  003B00  6E16               	movwf	(___fldiv@a+3)^0,c
 14394  003B02                     l4565:
 14395  003B02  8E15               	bsf	(___fldiv@a+2)^0,7,c
 14396  003B04  0E00               	movlw	0
 14397  003B06  6E16               	movwf	(___fldiv@a+3)^0,c
 14398  003B08  EF8E  F01D         	goto	l4571
 14399  003B0C                     l4569:
 14400  003B0C  0E00               	movlw	0
 14401  003B0E  6E13               	movwf	___fldiv@a^0,c
 14402  003B10  0E00               	movlw	0
 14403  003B12  6E14               	movwf	(___fldiv@a+1)^0,c
 14404  003B14  0E00               	movlw	0
 14405  003B16  6E15               	movwf	(___fldiv@a+2)^0,c
 14406  003B18  0E00               	movlw	0
 14407  003B1A  6E16               	movwf	(___fldiv@a+3)^0,c
 14408  003B1C                     l4571:
 14409  003B1C  5013               	movf	___fldiv@a^0,w,c
 14410  003B1E  1014               	iorwf	(___fldiv@a+1)^0,w,c
 14411  003B20  1015               	iorwf	(___fldiv@a+2)^0,w,c
 14412  003B22  1016               	iorwf	(___fldiv@a+3)^0,w,c
 14413  003B24  A4D8               	btfss	status,2,c
 14414  003B26  EF97  F01D         	goto	u4861
 14415  003B2A  EF99  F01D         	goto	u4860
 14416  003B2E                     u4861:
 14417  003B2E  EFB1  F01D         	goto	l4583
 14418  003B32                     u4860:
 14419  003B32  0E00               	movlw	0
 14420  003B34  6E0F               	movwf	___fldiv@b^0,c
 14421  003B36  0E00               	movlw	0
 14422  003B38  6E10               	movwf	(___fldiv@b+1)^0,c
 14423  003B3A  0E00               	movlw	0
 14424  003B3C  6E11               	movwf	(___fldiv@b+2)^0,c
 14425  003B3E  0E00               	movlw	0
 14426  003B40  6E12               	movwf	(___fldiv@b+3)^0,c
 14427  003B42  0E80               	movlw	128
 14428  003B44  1211               	iorwf	(___fldiv@b+2)^0,f,c
 14429  003B46  0E7F               	movlw	127
 14430  003B48  1212               	iorwf	(___fldiv@b+3)^0,f,c
 14431  003B4A                     l4577:
 14432  003B4A  501F               	movf	___fldiv@sign^0,w,c
 14433  003B4C  1212               	iorwf	(___fldiv@b+3)^0,f,c
 14434  003B4E  C00F  F00F         	movff	___fldiv@b,?___fldiv
 14435  003B52  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 14436  003B56  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 14437  003B5A  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 14438  003B5E  EFF4  F01E         	goto	l1313
 14439  003B62                     l4583:
 14440  003B62  5026               	movf	___fldiv@bexp^0,w,c
 14441  003B64  A4D8               	btfss	status,2,c
 14442  003B66  EFB7  F01D         	goto	u4871
 14443  003B6A  EFB9  F01D         	goto	u4870
 14444  003B6E                     u4871:
 14445  003B6E  EFC3  F01D         	goto	l4591
 14446  003B72                     u4870:
 14447  003B72  0E00               	movlw	0
 14448  003B74  6E0F               	movwf	?___fldiv^0,c
 14449  003B76  0E00               	movlw	0
 14450  003B78  6E10               	movwf	(?___fldiv+1)^0,c
 14451  003B7A  0E00               	movlw	0
 14452  003B7C  6E11               	movwf	(?___fldiv+2)^0,c
 14453  003B7E  0E00               	movlw	0
 14454  003B80  6E12               	movwf	(?___fldiv+3)^0,c
 14455  003B82  EFF4  F01E         	goto	l1313
 14456  003B86                     l4591:
 14457  003B86  5027               	movf	___fldiv@aexp^0,w,c
 14458  003B88  C026  F017         	movff	___fldiv@bexp,??___fldiv
 14459  003B8C  6A18               	clrf	(??___fldiv+1)^0,c
 14460  003B8E  5E17               	subwf	??___fldiv^0,f,c
 14461  003B90  0E00               	movlw	0
 14462  003B92  5A18               	subwfb	(??___fldiv+1)^0,f,c
 14463  003B94  0E7F               	movlw	127
 14464  003B96  2417               	addwf	??___fldiv^0,w,c
 14465  003B98  6E20               	movwf	___fldiv@new_exp^0,c
 14466  003B9A  0E00               	movlw	0
 14467  003B9C  2018               	addwfc	(??___fldiv+1)^0,w,c
 14468  003B9E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 14469  003BA0  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 14470  003BA4  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 14471  003BA8  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 14472  003BAC  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 14473  003BB0  0E00               	movlw	0
 14474  003BB2  6E0F               	movwf	___fldiv@b^0,c
 14475  003BB4  0E00               	movlw	0
 14476  003BB6  6E10               	movwf	(___fldiv@b+1)^0,c
 14477  003BB8  0E00               	movlw	0
 14478  003BBA  6E11               	movwf	(___fldiv@b+2)^0,c
 14479  003BBC  0E00               	movlw	0
 14480  003BBE  6E12               	movwf	(___fldiv@b+3)^0,c
 14481  003BC0  0E00               	movlw	0
 14482  003BC2  6E22               	movwf	___fldiv@grs^0,c
 14483  003BC4  0E00               	movlw	0
 14484  003BC6  6E23               	movwf	(___fldiv@grs+1)^0,c
 14485  003BC8  0E00               	movlw	0
 14486  003BCA  6E24               	movwf	(___fldiv@grs+2)^0,c
 14487  003BCC  0E00               	movlw	0
 14488  003BCE  6E25               	movwf	(___fldiv@grs+3)^0,c
 14489  003BD0  0E00               	movlw	0
 14490  003BD2  6E27               	movwf	___fldiv@aexp^0,c
 14491  003BD4  EF24  F01E         	goto	l1315
 14492  003BD8                     l4601:
 14493  003BD8  5027               	movf	___fldiv@aexp^0,w,c
 14494  003BDA  B4D8               	btfsc	status,2,c
 14495  003BDC  EFF2  F01D         	goto	u4881
 14496  003BE0  EFF4  F01D         	goto	u4880
 14497  003BE4                     u4881:
 14498  003BE4  EF0B  F01E         	goto	l4609
 14499  003BE8                     u4880:
 14500  003BE8  90D8               	bcf	status,0,c
 14501  003BEA  361B               	rlcf	___fldiv@rem^0,f,c
 14502  003BEC  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 14503  003BEE  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 14504  003BF0  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 14505  003BF2  90D8               	bcf	status,0,c
 14506  003BF4  360F               	rlcf	___fldiv@b^0,f,c
 14507  003BF6  3610               	rlcf	(___fldiv@b+1)^0,f,c
 14508  003BF8  3611               	rlcf	(___fldiv@b+2)^0,f,c
 14509  003BFA  3612               	rlcf	(___fldiv@b+3)^0,f,c
 14510  003BFC  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 14511  003BFE  EF03  F01E         	goto	u4891
 14512  003C02  EF05  F01E         	goto	u4890
 14513  003C06                     u4891:
 14514  003C06  EF06  F01E         	goto	l1318
 14515  003C0A                     u4890:
 14516  003C0A  800F               	bsf	___fldiv@b^0,0,c
 14517  003C0C                     l1318:
 14518  003C0C  90D8               	bcf	status,0,c
 14519  003C0E  3622               	rlcf	___fldiv@grs^0,f,c
 14520  003C10  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 14521  003C12  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 14522  003C14  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 14523  003C16                     l4609:
 14524  003C16  5013               	movf	___fldiv@a^0,w,c
 14525  003C18  5C1B               	subwf	___fldiv@rem^0,w,c
 14526  003C1A  5014               	movf	(___fldiv@a+1)^0,w,c
 14527  003C1C  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 14528  003C1E  5015               	movf	(___fldiv@a+2)^0,w,c
 14529  003C20  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 14530  003C22  5016               	movf	(___fldiv@a+3)^0,w,c
 14531  003C24  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 14532  003C26  A0D8               	btfss	status,0,c
 14533  003C28  EF18  F01E         	goto	u4901
 14534  003C2C  EF1A  F01E         	goto	u4900
 14535  003C30                     u4901:
 14536  003C30  EF23  F01E         	goto	l4615
 14537  003C34                     u4900:
 14538  003C34  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 14539  003C36  5013               	movf	___fldiv@a^0,w,c
 14540  003C38  5E1B               	subwf	___fldiv@rem^0,f,c
 14541  003C3A  5014               	movf	(___fldiv@a+1)^0,w,c
 14542  003C3C  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 14543  003C3E  5015               	movf	(___fldiv@a+2)^0,w,c
 14544  003C40  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 14545  003C42  5016               	movf	(___fldiv@a+3)^0,w,c
 14546  003C44  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 14547  003C46                     l4615:
 14548  003C46  2A27               	incf	___fldiv@aexp^0,f,c
 14549  003C48                     l1315:
 14550  003C48  0E19               	movlw	25
 14551  003C4A  6427               	cpfsgt	___fldiv@aexp^0,c
 14552  003C4C  EF2A  F01E         	goto	u4911
 14553  003C50  EF2C  F01E         	goto	u4910
 14554  003C54                     u4911:
 14555  003C54  EFEC  F01D         	goto	l4601
 14556  003C58                     u4910:
 14557  003C58  501B               	movf	___fldiv@rem^0,w,c
 14558  003C5A  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 14559  003C5C  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 14560  003C5E  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 14561  003C60  B4D8               	btfsc	status,2,c
 14562  003C62  EF35  F01E         	goto	u4921
 14563  003C66  EF37  F01E         	goto	u4920
 14564  003C6A                     u4921:
 14565  003C6A  EF4F  F01E         	goto	l4627
 14566  003C6E                     u4920:
 14567  003C6E  8022               	bsf	___fldiv@grs^0,0,c
 14568  003C70  EF4F  F01E         	goto	l4627
 14569  003C74                     l4621:
 14570  003C74  90D8               	bcf	status,0,c
 14571  003C76  360F               	rlcf	___fldiv@b^0,f,c
 14572  003C78  3610               	rlcf	(___fldiv@b+1)^0,f,c
 14573  003C7A  3611               	rlcf	(___fldiv@b+2)^0,f,c
 14574  003C7C  3612               	rlcf	(___fldiv@b+3)^0,f,c
 14575  003C7E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 14576  003C80  EF44  F01E         	goto	u4931
 14577  003C84  EF46  F01E         	goto	u4930
 14578  003C88                     u4931:
 14579  003C88  EF47  F01E         	goto	l1324
 14580  003C8C                     u4930:
 14581  003C8C  800F               	bsf	___fldiv@b^0,0,c
 14582  003C8E                     l1324:
 14583  003C8E  90D8               	bcf	status,0,c
 14584  003C90  3622               	rlcf	___fldiv@grs^0,f,c
 14585  003C92  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 14586  003C94  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 14587  003C96  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 14588  003C98  0620               	decf	___fldiv@new_exp^0,f,c
 14589  003C9A  A0D8               	btfss	status,0,c
 14590  003C9C  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 14591  003C9E                     l4627:
 14592  003C9E  AE11               	btfss	(___fldiv@b+2)^0,7,c
 14593  003CA0  EF54  F01E         	goto	u4941
 14594  003CA4  EF56  F01E         	goto	u4940
 14595  003CA8                     u4941:
 14596  003CA8  EF3A  F01E         	goto	l4621
 14597  003CAC                     u4940:
 14598  003CAC  0E00               	movlw	0
 14599  003CAE  6E27               	movwf	___fldiv@aexp^0,c
 14600  003CB0  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 14601  003CB2  EF5D  F01E         	goto	u4951
 14602  003CB6  EF5F  F01E         	goto	u4950
 14603  003CBA                     u4951:
 14604  003CBA  EF83  F01E         	goto	l1326
 14605  003CBE                     u4950:
 14606  003CBE  0EFF               	movlw	255
 14607  003CC0  1422               	andwf	___fldiv@grs^0,w,c
 14608  003CC2  6E17               	movwf	??___fldiv^0,c
 14609  003CC4  0EFF               	movlw	255
 14610  003CC6  1423               	andwf	(___fldiv@grs+1)^0,w,c
 14611  003CC8  6E18               	movwf	(??___fldiv+1)^0,c
 14612  003CCA  0EFF               	movlw	255
 14613  003CCC  1424               	andwf	(___fldiv@grs+2)^0,w,c
 14614  003CCE  6E19               	movwf	(??___fldiv+2)^0,c
 14615  003CD0  0E7F               	movlw	127
 14616  003CD2  1425               	andwf	(___fldiv@grs+3)^0,w,c
 14617  003CD4  6E1A               	movwf	(??___fldiv+3)^0,c
 14618  003CD6  5017               	movf	??___fldiv^0,w,c
 14619  003CD8  1018               	iorwf	(??___fldiv+1)^0,w,c
 14620  003CDA  1019               	iorwf	(??___fldiv+2)^0,w,c
 14621  003CDC  101A               	iorwf	(??___fldiv+3)^0,w,c
 14622  003CDE  B4D8               	btfsc	status,2,c
 14623  003CE0  EF74  F01E         	goto	u4961
 14624  003CE4  EF76  F01E         	goto	u4960
 14625  003CE8                     u4961:
 14626  003CE8  EF7A  F01E         	goto	l1327
 14627  003CEC                     u4960:
 14628  003CEC                     l4635:
 14629  003CEC  0E01               	movlw	1
 14630  003CEE  6E27               	movwf	___fldiv@aexp^0,c
 14631  003CF0  EF83  F01E         	goto	l1326
 14632  003CF4                     l1327:
 14633  003CF4  A00F               	btfss	___fldiv@b^0,0,c
 14634  003CF6  EF7F  F01E         	goto	u4971
 14635  003CFA  EF81  F01E         	goto	u4970
 14636  003CFE                     u4971:
 14637  003CFE  EF83  F01E         	goto	l1326
 14638  003D02                     u4970:
 14639  003D02  EF76  F01E         	goto	l4635
 14640  003D06                     l1326:
 14641  003D06  5027               	movf	___fldiv@aexp^0,w,c
 14642  003D08  B4D8               	btfsc	status,2,c
 14643  003D0A  EF89  F01E         	goto	u4981
 14644  003D0E  EF8B  F01E         	goto	u4980
 14645  003D12                     u4981:
 14646  003D12  EFAF  F01E         	goto	l4647
 14647  003D16                     u4980:
 14648  003D16  0E01               	movlw	1
 14649  003D18  260F               	addwf	___fldiv@b^0,f,c
 14650  003D1A  0E00               	movlw	0
 14651  003D1C  2210               	addwfc	(___fldiv@b+1)^0,f,c
 14652  003D1E  2211               	addwfc	(___fldiv@b+2)^0,f,c
 14653  003D20  2212               	addwfc	(___fldiv@b+3)^0,f,c
 14654  003D22  A012               	btfss	(___fldiv@b+3)^0,0,c
 14655  003D24  EF96  F01E         	goto	u4991
 14656  003D28  EF98  F01E         	goto	u4990
 14657  003D2C                     u4991:
 14658  003D2C  EFAF  F01E         	goto	l4647
 14659  003D30                     u4990:
 14660  003D30  C00F  F017         	movff	___fldiv@b,??___fldiv
 14661  003D34  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 14662  003D38  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 14663  003D3C  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 14664  003D40  341A               	rlcf	(??___fldiv+3)^0,w,c
 14665  003D42  321A               	rrcf	(??___fldiv+3)^0,f,c
 14666  003D44  3219               	rrcf	(??___fldiv+2)^0,f,c
 14667  003D46  3218               	rrcf	(??___fldiv+1)^0,f,c
 14668  003D48  3217               	rrcf	??___fldiv^0,f,c
 14669  003D4A  C017  F00F         	movff	??___fldiv,___fldiv@b
 14670  003D4E  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 14671  003D52  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 14672  003D56  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 14673  003D5A  4A20               	infsnz	___fldiv@new_exp^0,f,c
 14674  003D5C  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 14675  003D5E                     l4647:
 14676  003D5E  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14677  003D60  EFBA  F01E         	goto	u5001
 14678  003D64  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 14679  003D66  E108               	bnz	u5000
 14680  003D68  2820               	incf	___fldiv@new_exp^0,w,c
 14681  003D6A  A0D8               	btfss	status,0,c
 14682  003D6C  EFBA  F01E         	goto	u5001
 14683  003D70  EFBC  F01E         	goto	u5000
 14684  003D74                     u5001:
 14685  003D74  EFC7  F01E         	goto	l4651
 14686  003D78                     u5000:
 14687  003D78  0E00               	movlw	0
 14688  003D7A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 14689  003D7C  6820               	setf	___fldiv@new_exp^0,c
 14690  003D7E  0E00               	movlw	0
 14691  003D80  6E0F               	movwf	___fldiv@b^0,c
 14692  003D82  0E00               	movlw	0
 14693  003D84  6E10               	movwf	(___fldiv@b+1)^0,c
 14694  003D86  0E00               	movlw	0
 14695  003D88  6E11               	movwf	(___fldiv@b+2)^0,c
 14696  003D8A  0E00               	movlw	0
 14697  003D8C  6E12               	movwf	(___fldiv@b+3)^0,c
 14698  003D8E                     l4651:
 14699  003D8E  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14700  003D90  EFD4  F01E         	goto	u5010
 14701  003D94  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 14702  003D96  E106               	bnz	u5011
 14703  003D98  0420               	decf	___fldiv@new_exp^0,w,c
 14704  003D9A  B0D8               	btfsc	status,0,c
 14705  003D9C  EFD2  F01E         	goto	u5011
 14706  003DA0  EFD4  F01E         	goto	u5010
 14707  003DA4                     u5011:
 14708  003DA4  EFE2  F01E         	goto	l4655
 14709  003DA8                     u5010:
 14710  003DA8  0E00               	movlw	0
 14711  003DAA  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 14712  003DAC  0E00               	movlw	0
 14713  003DAE  6E20               	movwf	___fldiv@new_exp^0,c
 14714  003DB0  0E00               	movlw	0
 14715  003DB2  6E0F               	movwf	___fldiv@b^0,c
 14716  003DB4  0E00               	movlw	0
 14717  003DB6  6E10               	movwf	(___fldiv@b+1)^0,c
 14718  003DB8  0E00               	movlw	0
 14719  003DBA  6E11               	movwf	(___fldiv@b+2)^0,c
 14720  003DBC  0E00               	movlw	0
 14721  003DBE  6E12               	movwf	(___fldiv@b+3)^0,c
 14722  003DC0  0E00               	movlw	0
 14723  003DC2  6E1F               	movwf	___fldiv@sign^0,c
 14724  003DC4                     l4655:
 14725  003DC4  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 14726  003DC8  A026               	btfss	___fldiv@bexp^0,0,c
 14727  003DCA  EFE9  F01E         	goto	u5021
 14728  003DCE  EFEB  F01E         	goto	u5020
 14729  003DD2                     u5021:
 14730  003DD2  EFEE  F01E         	goto	l4661
 14731  003DD6                     u5020:
 14732  003DD6  8E11               	bsf	(___fldiv@b+2)^0,7,c
 14733  003DD8  EFEF  F01E         	goto	l4663
 14734  003DDC                     l4661:
 14735  003DDC  9E11               	bcf	(___fldiv@b+2)^0,7,c
 14736  003DDE                     l4663:
 14737  003DDE  90D8               	bcf	status,0,c
 14738  003DE0  3026               	rrcf	___fldiv@bexp^0,w,c
 14739  003DE2  6E12               	movwf	(___fldiv@b+3)^0,c
 14740  003DE4  EFA5  F01D         	goto	l4577
 14741  003DE8                     l1313:
 14742  003DE8  0012               	return		;funcret
 14743  003DEA                     __end_of___fldiv:
 14744                           	callstack 0
 14745                           
 14746 ;; *************** function _checkbatterylevel *****************
 14747 ;; Defined at:
 14748 ;;		line 73 in file "DC_motors.c"
 14749 ;; Parameters:    Size  Location     Type
 14750 ;;		None
 14751 ;; Auto vars:     Size  Location     Type
 14752 ;;  batterylevel    1    1[COMRAM] unsigned char 
 14753 ;; Return value:  Size  Location     Type
 14754 ;;                  1    wreg      void 
 14755 ;; Registers used:
 14756 ;;		wreg, status,2, status,0, cstack
 14757 ;; Tracked objects:
 14758 ;;		On entry : 0/0
 14759 ;;		On exit  : 0/0
 14760 ;;		Unchanged: 0/0
 14761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14766 ;;Total ram usage:        1 bytes
 14767 ;; Hardware stack levels used: 1
 14768 ;; Hardware stack levels required when called: 1
 14769 ;; This function calls:
 14770 ;;		_ADC_getval
 14771 ;; This function is called by:
 14772 ;;		_main
 14773 ;; This function uses a non-reentrant model
 14774 ;;
 14775                           
 14776                           	psect	text66
 14777  00643E                     __ptext66:
 14778                           	callstack 0
 14779  00643E                     _checkbatterylevel:
 14780                           	callstack 29
 14781  00643E                     
 14782                           ;DC_motors.c: 75:     unsigned char batterylevel;;DC_motors.c: 76:     batterylevel = AD
      +                          C_getval();
 14783  00643E  EC58  F032         	call	_ADC_getval	;wreg free
 14784  006442  6E02               	movwf	checkbatterylevel@batterylevel^0,c
 14785  006444                     
 14786                           ;DC_motors.c: 77:     if (batterylevel<200) {
 14787  006444  0EC8               	movlw	200
 14788  006446  6002               	cpfslt	checkbatterylevel@batterylevel^0,c
 14789  006448  EF28  F032         	goto	u7371
 14790  00644C  EF2A  F032         	goto	u7370
 14791  006450                     u7371:
 14792  006450  EF2D  F032         	goto	l576
 14793  006454                     u7370:
 14794  006454                     
 14795                           ;DC_motors.c: 78:         LATDbits.LATD7 = 1;
 14796  006454  8E7C               	bsf	124,7,c	;volatile
 14797                           
 14798                           ;DC_motors.c: 79:     } else {
 14799  006456  EF2E  F032         	goto	l578
 14800  00645A                     l576:
 14801                           
 14802                           ;DC_motors.c: 80:         LATDbits.LATD7 = 0;
 14803  00645A  9E7C               	bcf	124,7,c	;volatile
 14804  00645C                     l578:
 14805  00645C  0012               	return		;funcret
 14806  00645E                     __end_of_checkbatterylevel:
 14807                           	callstack 0
 14808                           
 14809 ;; *************** function _ADC_getval *****************
 14810 ;; Defined at:
 14811 ;;		line 26 in file "ADC.c"
 14812 ;; Parameters:    Size  Location     Type
 14813 ;;		None
 14814 ;; Auto vars:     Size  Location     Type
 14815 ;;  tmpval          1    0[COMRAM] unsigned char 
 14816 ;; Return value:  Size  Location     Type
 14817 ;;                  1    wreg      unsigned char 
 14818 ;; Registers used:
 14819 ;;		wreg, status,2
 14820 ;; Tracked objects:
 14821 ;;		On entry : 0/0
 14822 ;;		On exit  : 0/0
 14823 ;;		Unchanged: 0/0
 14824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14829 ;;Total ram usage:        1 bytes
 14830 ;; Hardware stack levels used: 1
 14831 ;; This function calls:
 14832 ;;		Nothing
 14833 ;; This function is called by:
 14834 ;;		_checkbatterylevel
 14835 ;; This function uses a non-reentrant model
 14836 ;;
 14837                           
 14838                           	psect	text67
 14839  0064B0                     __ptext67:
 14840                           	callstack 0
 14841  0064B0                     _ADC_getval:
 14842                           	callstack 29
 14843  0064B0                     
 14844                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
 14845  0064B0  8060               	bsf	96,0,c	;volatile
 14846  0064B2                     l324:
 14847  0064B2  B060               	btfsc	96,0,c	;volatile
 14848  0064B4  EF5E  F032         	goto	u7361
 14849  0064B8  EF60  F032         	goto	u7360
 14850  0064BC                     u7361:
 14851  0064BC  EF59  F032         	goto	l324
 14852  0064C0                     u7360:
 14853  0064C0                     
 14854                           ;ADC.c: 31:     tmpval = ADRESH;
 14855  0064C0  CF64 F001          	movff	3940,ADC_getval@tmpval	;volatile
 14856  0064C4                     
 14857                           ;ADC.c: 34:     return tmpval;
 14858  0064C4  5001               	movf	ADC_getval@tmpval^0,w,c
 14859  0064C6  0012               	return		;funcret
 14860  0064C8                     __end_of_ADC_getval:
 14861                           	callstack 0
 14862                           
 14863 ;; *************** function _USART4_init *****************
 14864 ;; Defined at:
 14865 ;;		line 7 in file "serial_comm.c"
 14866 ;; Parameters:    Size  Location     Type
 14867 ;;		None
 14868 ;; Auto vars:     Size  Location     Type
 14869 ;;		None
 14870 ;; Return value:  Size  Location     Type
 14871 ;;                  1    wreg      void 
 14872 ;; Registers used:
 14873 ;;		wreg, status,2
 14874 ;; Tracked objects:
 14875 ;;		On entry : 0/0
 14876 ;;		On exit  : 0/0
 14877 ;;		Unchanged: 0/0
 14878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14883 ;;Total ram usage:        0 bytes
 14884 ;; Hardware stack levels used: 1
 14885 ;; This function calls:
 14886 ;;		Nothing
 14887 ;; This function is called by:
 14888 ;;		_main
 14889 ;; This function uses a non-reentrant model
 14890 ;;
 14891                           
 14892                           	psect	text68
 14893  00645E                     __ptext68:
 14894                           	callstack 0
 14895  00645E                     _USART4_init:
 14896                           	callstack 30
 14897  00645E                     
 14898                           ;serial_comm.c: 10:     RC0PPS = 0x12;
 14899  00645E  0E12               	movlw	18
 14900  006460  010E               	movlb	14	; () banked
 14901  006462  6F62               	movwf	98,b	;volatile
 14902                           
 14903                           ;serial_comm.c: 11:     RX4PPS = 0x11;
 14904  006464  0E11               	movlw	17
 14905  006466  6F15               	movwf	21,b	;volatile
 14906  006468                     
 14907                           ; BSR set to: 14
 14908                           ;serial_comm.c: 12:     TRISCbits.TRISC1 = 1;
 14909  006468  8283               	bsf	131,1,c	;volatile
 14910  00646A                     
 14911                           ; BSR set to: 14
 14912                           ;serial_comm.c: 14:     BAUD4CONbits.BRG16 = 0;
 14913  00646A  97E9               	bcf	233,3,b	;volatile
 14914  00646C                     
 14915                           ; BSR set to: 14
 14916                           ;serial_comm.c: 15:     TX4STAbits.BRGH = 0;
 14917  00646C  95E8               	bcf	232,2,b	;volatile
 14918                           
 14919                           ;serial_comm.c: 16:     SP4BRGL = 51;
 14920  00646E  0E33               	movlw	51
 14921  006470  6FE5               	movwf	229,b	;volatile
 14922                           
 14923                           ;serial_comm.c: 17:     SP4BRGH = 0;
 14924  006472  0E00               	movlw	0
 14925  006474  6FE6               	movwf	230,b	;volatile
 14926  006476                     
 14927                           ; BSR set to: 14
 14928                           ;serial_comm.c: 19:     RC4STAbits.CREN = 1;
 14929  006476  89E7               	bsf	231,4,b	;volatile
 14930  006478                     
 14931                           ; BSR set to: 14
 14932                           ;serial_comm.c: 20:     TX4STAbits.TXEN = 1;
 14933  006478  8BE8               	bsf	232,5,b	;volatile
 14934  00647A                     
 14935                           ; BSR set to: 14
 14936                           ;serial_comm.c: 21:     RC4STAbits.SPEN = 1;
 14937  00647A  8FE7               	bsf	231,7,b	;volatile
 14938  00647C                     
 14939                           ; BSR set to: 14
 14940  00647C  0012               	return		;funcret
 14941  00647E                     __end_of_USART4_init:
 14942                           	callstack 0
 14943                           
 14944 ;; *************** function _DCmotors_init *****************
 14945 ;; Defined at:
 14946 ;;		line 10 in file "DC_motors.c"
 14947 ;; Parameters:    Size  Location     Type
 14948 ;;  PWMperiod       1    wreg     unsigned char 
 14949 ;; Auto vars:     Size  Location     Type
 14950 ;;  PWMperiod       1    0[COMRAM] unsigned char 
 14951 ;; Return value:  Size  Location     Type
 14952 ;;                  1    wreg      void 
 14953 ;; Registers used:
 14954 ;;		wreg, status,2, cstack
 14955 ;; Tracked objects:
 14956 ;;		On entry : 0/0
 14957 ;;		On exit  : 0/0
 14958 ;;		Unchanged: 0/0
 14959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14964 ;;Total ram usage:        1 bytes
 14965 ;; Hardware stack levels used: 1
 14966 ;; Hardware stack levels required when called: 1
 14967 ;; This function calls:
 14968 ;;		_buggyLEDs_init
 14969 ;;		_clicker2LEDs_init
 14970 ;;		_clicker2buttons_init
 14971 ;; This function is called by:
 14972 ;;		_main
 14973 ;; This function uses a non-reentrant model
 14974 ;;
 14975                           
 14976                           	psect	text69
 14977  0060DA                     __ptext69:
 14978                           	callstack 0
 14979  0060DA                     _DCmotors_init:
 14980                           	callstack 29
 14981                           
 14982                           ; BSR set to: 14
 14983                           ;incstack = 0
 14984                           ;DCmotors_init@PWMperiod stored from wreg
 14985  0060DA  6E01               	movwf	DCmotors_init@PWMperiod^0,c
 14986  0060DC                     
 14987                           ;DC_motors.c: 10: void DCmotors_init(unsigned char PWMperiod);DC_motors.c: 11: {;DC_moto
      +                          rs.c: 13:     T2CONbits.CKPS=0b100;
 14988  0060DC  50BD               	movf	189,w,c	;volatile
 14989  0060DE  0B8F               	andlw	-113
 14990  0060E0  0940               	iorlw	64
 14991  0060E2  6EBD               	movwf	189,c	;volatile
 14992                           
 14993                           ;DC_motors.c: 14:     T2HLTbits.MODE=0b00000;
 14994  0060E4  0EE0               	movlw	-32
 14995  0060E6  16BE               	andwf	190,f,c	;volatile
 14996                           
 14997                           ;DC_motors.c: 15:     T2CLKCONbits.CS=0b0001;
 14998  0060E8  50BF               	movf	191,w,c	;volatile
 14999  0060EA  0BF0               	andlw	-16
 15000  0060EC  0901               	iorlw	1
 15001  0060EE  6EBF               	movwf	191,c	;volatile
 15002  0060F0                     
 15003                           ;DC_motors.c: 18:     T2PR=PWMperiod;
 15004  0060F0  C001  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
 15005  0060F4                     
 15006                           ;DC_motors.c: 19:     T2CONbits.ON=1;
 15007  0060F4  8EBD               	bsf	189,7,c	;volatile
 15008  0060F6                     
 15009                           ;DC_motors.c: 22:     TRISEbits.TRISE2=0;
 15010  0060F6  9485               	bcf	133,2,c	;volatile
 15011  0060F8                     
 15012                           ;DC_motors.c: 23:     TRISEbits.TRISE4=0;
 15013  0060F8  9885               	bcf	133,4,c	;volatile
 15014  0060FA                     
 15015                           ;DC_motors.c: 24:     TRISCbits.TRISC7=0;
 15016  0060FA  9E83               	bcf	131,7,c	;volatile
 15017  0060FC                     
 15018                           ;DC_motors.c: 25:     TRISGbits.TRISG6=0;
 15019  0060FC  9C87               	bcf	135,6,c	;volatile
 15020  0060FE                     
 15021                           ;DC_motors.c: 27:     LATEbits.LATE2=0;
 15022  0060FE  947D               	bcf	125,2,c	;volatile
 15023  006100                     
 15024                           ;DC_motors.c: 28:     LATEbits.LATE4=0;
 15025  006100  987D               	bcf	125,4,c	;volatile
 15026  006102                     
 15027                           ;DC_motors.c: 29:     LATCbits.LATC7=0;
 15028  006102  9E7B               	bcf	123,7,c	;volatile
 15029  006104                     
 15030                           ;DC_motors.c: 30:     LATGbits.LATG6=0;
 15031  006104  9C7F               	bcf	127,6,c	;volatile
 15032                           
 15033                           ;DC_motors.c: 32:     PWM6DCH=0;
 15034  006106  0E00               	movlw	0
 15035  006108  6EA3               	movwf	163,c	;volatile
 15036                           
 15037                           ;DC_motors.c: 33:     PWM7DCH=0;
 15038  00610A  0E00               	movlw	0
 15039  00610C  6EA0               	movwf	160,c	;volatile
 15040  00610E                     
 15041                           ;DC_motors.c: 35:     PWM6CONbits.EN = 1;
 15042  00610E  8EA4               	bsf	164,7,c	;volatile
 15043  006110                     
 15044                           ;DC_motors.c: 36:     PWM7CONbits.EN = 1;
 15045  006110  8EA1               	bsf	161,7,c	;volatile
 15046                           
 15047                           ;DC_motors.c: 38:     RE2PPS=0x0A;
 15048  006112  0E0A               	movlw	10
 15049  006114  010E               	movlb	14	; () banked
 15050  006116  6F74               	movwf	116,b	;volatile
 15051                           
 15052                           ;DC_motors.c: 39:     RC7PPS=0x0B;
 15053  006118  0E0B               	movlw	11
 15054  00611A  6F69               	movwf	105,b	;volatile
 15055  00611C                     
 15056                           ; BSR set to: 14
 15057                           ;DC_motors.c: 42:     clicker2buttons_init();
 15058  00611C  EC7C  F032         	call	_clicker2buttons_init	;wreg free
 15059  006120                     
 15060                           ;DC_motors.c: 43:     clicker2LEDs_init();
 15061  006120  EC91  F032         	call	_clicker2LEDs_init	;wreg free
 15062  006124                     
 15063                           ;DC_motors.c: 44:     buggyLEDs_init();
 15064  006124  EC64  F032         	call	_buggyLEDs_init	;wreg free
 15065  006128  0012               	return		;funcret
 15066  00612A                     __end_of_DCmotors_init:
 15067                           	callstack 0
 15068                           
 15069 ;; *************** function _clicker2buttons_init *****************
 15070 ;; Defined at:
 15071 ;;		line 7 in file "buttons_n_LEDs.c"
 15072 ;; Parameters:    Size  Location     Type
 15073 ;;		None
 15074 ;; Auto vars:     Size  Location     Type
 15075 ;;		None
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  1    wreg      void 
 15078 ;; Registers used:
 15079 ;;		None
 15080 ;; Tracked objects:
 15081 ;;		On entry : 0/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15089 ;;Total ram usage:        0 bytes
 15090 ;; Hardware stack levels used: 1
 15091 ;; This function calls:
 15092 ;;		Nothing
 15093 ;; This function is called by:
 15094 ;;		_DCmotors_init
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           
 15098                           	psect	text70
 15099  0064F8                     __ptext70:
 15100                           	callstack 0
 15101  0064F8                     _clicker2buttons_init:
 15102                           	callstack 29
 15103  0064F8                     
 15104                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
 15105  0064F8  8486               	bsf	134,2,c	;volatile
 15106                           
 15107                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
 15108  0064FA  8686               	bsf	134,3,c	;volatile
 15109                           
 15110                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
 15111  0064FC  010E               	movlb	14	; () banked
 15112  0064FE  95B4               	bcf	180,2,b	;volatile
 15113                           
 15114                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
 15115  006500  97B4               	bcf	180,3,b	;volatile
 15116  006502                     
 15117                           ; BSR set to: 14
 15118  006502  0012               	return		;funcret
 15119  006504                     __end_of_clicker2buttons_init:
 15120                           	callstack 0
 15121                           
 15122 ;; *************** function _clicker2LEDs_init *****************
 15123 ;; Defined at:
 15124 ;;		line 19 in file "buttons_n_LEDs.c"
 15125 ;; Parameters:    Size  Location     Type
 15126 ;;		None
 15127 ;; Auto vars:     Size  Location     Type
 15128 ;;		None
 15129 ;; Return value:  Size  Location     Type
 15130 ;;                  1    wreg      void 
 15131 ;; Registers used:
 15132 ;;		None
 15133 ;; Tracked objects:
 15134 ;;		On entry : 0/0
 15135 ;;		On exit  : 0/0
 15136 ;;		Unchanged: 0/0
 15137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15142 ;;Total ram usage:        0 bytes
 15143 ;; Hardware stack levels used: 1
 15144 ;; This function calls:
 15145 ;;		Nothing
 15146 ;; This function is called by:
 15147 ;;		_DCmotors_init
 15148 ;; This function uses a non-reentrant model
 15149 ;;
 15150                           
 15151                           	psect	text71
 15152  006522                     __ptext71:
 15153                           	callstack 0
 15154  006522                     _clicker2LEDs_init:
 15155                           	callstack 29
 15156  006522                     
 15157                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
 15158  006522  9E84               	bcf	132,7,c	;volatile
 15159                           
 15160                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
 15161  006524  9688               	bcf	136,3,c	;volatile
 15162                           
 15163                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
 15164  006526  9E7C               	bcf	124,7,c	;volatile
 15165                           
 15166                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
 15167  006528  9680               	bcf	128,3,c	;volatile
 15168  00652A  0012               	return		;funcret
 15169  00652C                     __end_of_clicker2LEDs_init:
 15170                           	callstack 0
 15171                           
 15172 ;; *************** function _buggyLEDs_init *****************
 15173 ;; Defined at:
 15174 ;;		line 31 in file "buttons_n_LEDs.c"
 15175 ;; Parameters:    Size  Location     Type
 15176 ;;		None
 15177 ;; Auto vars:     Size  Location     Type
 15178 ;;		None
 15179 ;; Return value:  Size  Location     Type
 15180 ;;                  1    wreg      void 
 15181 ;; Registers used:
 15182 ;;		None
 15183 ;; Tracked objects:
 15184 ;;		On entry : 0/0
 15185 ;;		On exit  : 0/0
 15186 ;;		Unchanged: 0/0
 15187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15192 ;;Total ram usage:        0 bytes
 15193 ;; Hardware stack levels used: 1
 15194 ;; This function calls:
 15195 ;;		Nothing
 15196 ;; This function is called by:
 15197 ;;		_DCmotors_init
 15198 ;; This function uses a non-reentrant model
 15199 ;;
 15200                           
 15201                           	psect	text72
 15202  0064C8                     __ptext72:
 15203                           	callstack 0
 15204  0064C8                     _buggyLEDs_init:
 15205                           	callstack 29
 15206  0064C8                     
 15207                           ;buttons_n_LEDs.c: 33:     TRISHbits.TRISH1 = 0;
 15208  0064C8  9288               	bcf	136,1,c	;volatile
 15209                           
 15210                           ;buttons_n_LEDs.c: 34:     TRISDbits.TRISD3 = 0;
 15211  0064CA  9684               	bcf	132,3,c	;volatile
 15212                           
 15213                           ;buttons_n_LEDs.c: 35:     TRISDbits.TRISD4 = 0;
 15214  0064CC  9884               	bcf	132,4,c	;volatile
 15215                           
 15216                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF0 = 0;
 15217  0064CE  9086               	bcf	134,0,c	;volatile
 15218                           
 15219                           ;buttons_n_LEDs.c: 37:     TRISHbits.TRISH0 = 0;
 15220  0064D0  9088               	bcf	136,0,c	;volatile
 15221                           
 15222                           ;buttons_n_LEDs.c: 39:     LATHbits.LATH1 = 0;
 15223  0064D2  9280               	bcf	128,1,c	;volatile
 15224                           
 15225                           ;buttons_n_LEDs.c: 40:     LATDbits.LATD3 = 0;
 15226  0064D4  967C               	bcf	124,3,c	;volatile
 15227                           
 15228                           ;buttons_n_LEDs.c: 41:     LATDbits.LATD4 = 0;
 15229  0064D6  987C               	bcf	124,4,c	;volatile
 15230                           
 15231                           ;buttons_n_LEDs.c: 42:     LATFbits.LATF0 = 0;
 15232  0064D8  907E               	bcf	126,0,c	;volatile
 15233                           
 15234                           ;buttons_n_LEDs.c: 43:     LATHbits.LATH0 = 0;
 15235  0064DA  9080               	bcf	128,0,c	;volatile
 15236  0064DC  0012               	return		;funcret
 15237  0064DE                     __end_of_buggyLEDs_init:
 15238                           	callstack 0
 15239                           
 15240 ;; *************** function _ADC_init *****************
 15241 ;; Defined at:
 15242 ;;		line 8 in file "ADC.c"
 15243 ;; Parameters:    Size  Location     Type
 15244 ;;		None
 15245 ;; Auto vars:     Size  Location     Type
 15246 ;;		None
 15247 ;; Return value:  Size  Location     Type
 15248 ;;                  1    wreg      void 
 15249 ;; Registers used:
 15250 ;;		wreg, status,2
 15251 ;; Tracked objects:
 15252 ;;		On entry : 0/0
 15253 ;;		On exit  : 0/0
 15254 ;;		Unchanged: 0/0
 15255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15260 ;;Total ram usage:        0 bytes
 15261 ;; Hardware stack levels used: 1
 15262 ;; This function calls:
 15263 ;;		Nothing
 15264 ;; This function is called by:
 15265 ;;		_main
 15266 ;; This function uses a non-reentrant model
 15267 ;;
 15268                           
 15269                           	psect	text73
 15270  00647E                     __ptext73:
 15271                           	callstack 0
 15272  00647E                     _ADC_init:
 15273                           	callstack 30
 15274  00647E                     
 15275                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
 15276  00647E  8C86               	bsf	134,6,c	;volatile
 15277                           
 15278                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
 15279  006480  010E               	movlb	14	; () banked
 15280  006482  8DB4               	bsf	180,6,b	;volatile
 15281                           
 15282                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
 15283  006484  010F               	movlb	15	; () banked
 15284  006486  9958               	bcf	88,4,b	;volatile
 15285  006488                     
 15286                           ; BSR set to: 15
 15287                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
 15288  006488  0EFC               	movlw	-4
 15289  00648A  1758               	andwf	88,f,b	;volatile
 15290                           
 15291                           ;ADC.c: 16:     ADPCH=0b101110;
 15292  00648C  0E2E               	movlw	46
 15293  00648E  6F5F               	movwf	95,b	;volatile
 15294  006490                     
 15295                           ; BSR set to: 15
 15296                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
 15297  006490  9460               	bcf	96,2,c	;volatile
 15298  006492                     
 15299                           ; BSR set to: 15
 15300                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
 15301  006492  8860               	bsf	96,4,c	;volatile
 15302  006494                     
 15303                           ; BSR set to: 15
 15304                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
 15305  006494  8E60               	bsf	96,7,c	;volatile
 15306  006496                     
 15307                           ; BSR set to: 15
 15308  006496  0012               	return		;funcret
 15309  006498                     __end_of_ADC_init:
 15310                           	callstack 0
 15311                           
 15312                           	psect	rparam
 15313  0000                     
 15314                           	psect	idloc
 15315                           
 15316                           ;Config register IDLOC0 @ 0x200000
 15317                           ;	unspecified, using default values
 15318  200000                     	org	2097152
 15319  200000  0FFF               	dw	4095
 15320                           
 15321                           ;Config register IDLOC1 @ 0x200002
 15322                           ;	unspecified, using default values
 15323  200002                     	org	2097154
 15324  200002  0FFF               	dw	4095
 15325                           
 15326                           ;Config register IDLOC2 @ 0x200004
 15327                           ;	unspecified, using default values
 15328  200004                     	org	2097156
 15329  200004  0FFF               	dw	4095
 15330                           
 15331                           ;Config register IDLOC3 @ 0x200006
 15332                           ;	unspecified, using default values
 15333  200006                     	org	2097158
 15334  200006  0FFF               	dw	4095
 15335                           
 15336                           ;Config register IDLOC4 @ 0x200008
 15337                           ;	unspecified, using default values
 15338  200008                     	org	2097160
 15339  200008  0FFF               	dw	4095
 15340                           
 15341                           ;Config register IDLOC5 @ 0x20000A
 15342                           ;	unspecified, using default values
 15343  20000A                     	org	2097162
 15344  20000A  0FFF               	dw	4095
 15345                           
 15346                           ;Config register IDLOC6 @ 0x20000C
 15347                           ;	unspecified, using default values
 15348  20000C                     	org	2097164
 15349  20000C  0FFF               	dw	4095
 15350                           
 15351                           ;Config register IDLOC7 @ 0x20000E
 15352                           ;	unspecified, using default values
 15353  20000E                     	org	2097166
 15354  20000E  0FFF               	dw	4095
 15355                           
 15356                           	psect	config
 15357                           
 15358                           ;Config register CONFIG1L @ 0x300000
 15359                           ;	External Oscillator mode Selection bits
 15360                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15361                           ;	Power-up default value for COSC bits
 15362                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15363  300000                     	org	3145728
 15364  300000  AA                 	db	170
 15365                           
 15366                           ;Config register CONFIG1H @ 0x300001
 15367                           ;	unspecified, using default values
 15368                           ;	Clock Out Enable bit
 15369                           ;	CLKOUTEN = 0x1, unprogrammed default
 15370                           ;	Clock Switch Enable bit
 15371                           ;	CSWEN = 0x1, unprogrammed default
 15372                           ;	Fail-Safe Clock Monitor Enable bit
 15373                           ;	FCMEN = 0x1, unprogrammed default
 15374  300001                     	org	3145729
 15375  300001  FF                 	db	255
 15376                           
 15377                           ;Config register CONFIG2L @ 0x300002
 15378                           ;	unspecified, using default values
 15379                           ;	Master Clear Enable bit
 15380                           ;	MCLRE = 0x1, unprogrammed default
 15381                           ;	Power-up Timer Enable bit
 15382                           ;	PWRTE = 0x1, unprogrammed default
 15383                           ;	Low-power BOR enable bit
 15384                           ;	LPBOREN = 0x1, unprogrammed default
 15385                           ;	Brown-out Reset Enable bits
 15386                           ;	BOREN = 0x3, unprogrammed default
 15387  300002                     	org	3145730
 15388  300002  FF                 	db	255
 15389                           
 15390                           ;Config register CONFIG2H @ 0x300003
 15391                           ;	unspecified, using default values
 15392                           ;	Brown Out Reset Voltage selection bits
 15393                           ;	BORV = 0x3, unprogrammed default
 15394                           ;	ZCD Disable bit
 15395                           ;	ZCD = 0x1, unprogrammed default
 15396                           ;	PPSLOCK bit One-Way Set Enable bit
 15397                           ;	PPS1WAY = 0x1, unprogrammed default
 15398                           ;	Stack Full/Underflow Reset Enable bit
 15399                           ;	STVREN = 0x1, unprogrammed default
 15400                           ;	Debugger Enable bit
 15401                           ;	DEBUG = 0x1, unprogrammed default
 15402                           ;	Extended Instruction Set Enable bit
 15403                           ;	XINST = 0x1, unprogrammed default
 15404  300003                     	org	3145731
 15405  300003  FF                 	db	255
 15406                           
 15407                           ;Config register CONFIG3L @ 0x300004
 15408                           ;	WDT Period Select bits
 15409                           ;	WDTCPS = 0x1F, unprogrammed default
 15410                           ;	WDT operating mode
 15411                           ;	WDTE = OFF, WDT Disabled
 15412  300004                     	org	3145732
 15413  300004  9F                 	db	159
 15414                           
 15415                           ;Config register CONFIG3H @ 0x300005
 15416                           ;	unspecified, using default values
 15417                           ;	WDT Window Select bits
 15418                           ;	WDTCWS = 0x7, unprogrammed default
 15419                           ;	WDT input clock selector
 15420                           ;	WDTCCS = 0x7, unprogrammed default
 15421  300005                     	org	3145733
 15422  300005  FF                 	db	255
 15423                           
 15424                           ;Config register CONFIG4L @ 0x300006
 15425                           ;	unspecified, using default values
 15426                           ;	Write Protection Block 0
 15427                           ;	WRT0 = 0x1, unprogrammed default
 15428                           ;	Write Protection Block 1
 15429                           ;	WRT1 = 0x1, unprogrammed default
 15430                           ;	Write Protection Block 2
 15431                           ;	WRT2 = 0x1, unprogrammed default
 15432                           ;	Write Protection Block 3
 15433                           ;	WRT3 = 0x1, unprogrammed default
 15434                           ;	Write Protection Block 3
 15435                           ;	WRT4 = 0x1, unprogrammed default
 15436                           ;	Write Protection Block 3
 15437                           ;	WRT5 = 0x1, unprogrammed default
 15438                           ;	Write Protection Block 3
 15439                           ;	WRT6 = 0x1, unprogrammed default
 15440                           ;	Write Protection Block 3
 15441                           ;	WRT7 = 0x1, unprogrammed default
 15442  300006                     	org	3145734
 15443  300006  FF                 	db	255
 15444                           
 15445                           ;Config register CONFIG4H @ 0x300007
 15446                           ;	unspecified, using default values
 15447                           ;	Configuration Register Write Protection bit
 15448                           ;	WRTC = 0x1, unprogrammed default
 15449                           ;	Boot Block Write Protection bit
 15450                           ;	WRTB = 0x1, unprogrammed default
 15451                           ;	Data EEPROM Write Protection bit
 15452                           ;	WRTD = 0x1, unprogrammed default
 15453                           ;	Scanner Enable bit
 15454                           ;	SCANE = 0x1, unprogrammed default
 15455                           ;	Low Voltage Programming Enable bit
 15456                           ;	LVP = 0x1, unprogrammed default
 15457  300007                     	org	3145735
 15458  300007  FF                 	db	255
 15459                           
 15460                           ;Config register CONFIG5L @ 0x300008
 15461                           ;	unspecified, using default values
 15462                           ;	UserNVM Program Memory Code Protection bit
 15463                           ;	CP = 0x1, unprogrammed default
 15464                           ;	DataNVM Memory Code Protection bit
 15465                           ;	CPD = 0x1, unprogrammed default
 15466  300008                     	org	3145736
 15467  300008  FF                 	db	255
 15468                           
 15469                           ;Config register CONFIG5H @ 0x300009
 15470                           ;	unspecified, using default values
 15471  300009                     	org	3145737
 15472  300009  FF                 	db	255
 15473                           
 15474                           ;Config register CONFIG6L @ 0x30000A
 15475                           ;	unspecified, using default values
 15476                           ;	Table Read Protection Block 0
 15477                           ;	EBTR0 = 0x1, unprogrammed default
 15478                           ;	Table Read Protection Block 1
 15479                           ;	EBTR1 = 0x1, unprogrammed default
 15480                           ;	Table Read Protection Block 2
 15481                           ;	EBTR2 = 0x1, unprogrammed default
 15482                           ;	Table Read Protection Block 3
 15483                           ;	EBTR3 = 0x1, unprogrammed default
 15484                           ;	Table Read Protection Block 4
 15485                           ;	EBTR4 = 0x1, unprogrammed default
 15486                           ;	Table Read Protection Block 5
 15487                           ;	EBTR5 = 0x1, unprogrammed default
 15488                           ;	Table Read Protection Block 6
 15489                           ;	EBTR6 = 0x1, unprogrammed default
 15490                           ;	Table Read Protection Block 7
 15491                           ;	EBTR7 = 0x1, unprogrammed default
 15492  30000A                     	org	3145738
 15493  30000A  FF                 	db	255
 15494                           
 15495                           ;Config register CONFIG6H @ 0x30000B
 15496                           ;	unspecified, using default values
 15497                           ;	Boot Block Table Read Protection bit
 15498                           ;	EBTRB = 0x1, unprogrammed default
 15499  30000B                     	org	3145739
 15500  30000B  FF                 	db	255
 15501                           tosu	equ	0xFFF
 15502                           tosh	equ	0xFFE
 15503                           tosl	equ	0xFFD
 15504                           stkptr	equ	0xFFC
 15505                           pclatu	equ	0xFFB
 15506                           pclath	equ	0xFFA
 15507                           pcl	equ	0xFF9
 15508                           tblptru	equ	0xFF8
 15509                           tblptrh	equ	0xFF7
 15510                           tblptrl	equ	0xFF6
 15511                           tablat	equ	0xFF5
 15512                           prodh	equ	0xFF4
 15513                           prodl	equ	0xFF3
 15514                           indf0	equ	0xFEF
 15515                           postinc0	equ	0xFEE
 15516                           postdec0	equ	0xFED
 15517                           preinc0	equ	0xFEC
 15518                           plusw0	equ	0xFEB
 15519                           fsr0h	equ	0xFEA
 15520                           fsr0l	equ	0xFE9
 15521                           wreg	equ	0xFE8
 15522                           indf1	equ	0xFE7
 15523                           postinc1	equ	0xFE6
 15524                           postdec1	equ	0xFE5
 15525                           preinc1	equ	0xFE4
 15526                           plusw1	equ	0xFE3
 15527                           fsr1h	equ	0xFE2
 15528                           fsr1l	equ	0xFE1
 15529                           bsr	equ	0xFE0
 15530                           indf2	equ	0xFDF
 15531                           postinc2	equ	0xFDE
 15532                           postdec2	equ	0xFDD
 15533                           preinc2	equ	0xFDC
 15534                           plusw2	equ	0xFDB
 15535                           fsr2h	equ	0xFDA
 15536                           fsr2l	equ	0xFD9
 15537                           status	equ	0xFD8

Data Sizes:
    Strings     181
    Constant    0
    Data        7
    BSS         189
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    140     159
    BANK1           256     50     231
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), 
		 -> STR_8(CODE[6]), STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), 
		 -> STR_8(CODE[6]), STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(COMRAM[40]), colourcards_testingRGBC@buf(BANK1[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[5]), 
		 -> STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), STR_6(CODE[5]), 
		 -> STR_4(CODE[4]), STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[5]), 
		 -> STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), STR_6(CODE[5]), 
		 -> STR_4(CODE[4]), STR_2(CODE[7]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), 
		 -> STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), 
		 -> STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(COMRAM[40]), colourcards_testingRGBC@buf(BANK1[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2910_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(COMRAM[40]), colourcards_testingRGBC@buf(BANK1[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(COMRAM[40]), colourcards_testingRGBC@buf(BANK1[30]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(COMRAM[40]), colourcards_testingRGBC@buf(BANK1[30]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(BANK1[8]), main@current(BANK0[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(COMRAM[8]), colourclick_calibration@initial(COMRAM[8]), colourcards_testingRGBC@abs(BANK1[8]), main@current(BANK0[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC@rel(BANK1[12]), colourcards_readRGBC@rel(COMRAM[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(BANK1[8]), main@current(BANK0[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_readRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S24$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S24$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_colourcards_testingRGBC
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _stoa->_fputc
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _sendStringSerial4->_sendCharSerial4
    _colourcards_readRGBC->_turnleft
    _colourcards_readRGBC->_turnright
    _turnright->_left
    _turnleft->_left
    _right->_DCmotors_setPWM
    _left->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fladd->___flmul
    _stop->_DCmotors_setPWM
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    ___fldiv->___xxtofl
    _checkbatterylevel->_ADC_getval

Critical Paths under _main in BANK0

    _colourcards_testingRGBC->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_colourcards_testingRGBC

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0  137522
                                            112 BANK0     28    28      0
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
            _colourcards_testingRGBC
                  _colourclickLEDs_C
                   _colourclick_init
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     360
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colourclick_writetoaddr                              2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourcards_testingRGBC                             52    52      0   64584
                                             93 COMRAM     2     2      0
                                              0 BANK1     50    50      0
                             ___flge
          _colourcards_normaliseRGBC
                  _colourclickLEDs_C
               _colourclick_readRGBC
              _colourclick_readRGBC2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             36    10     26   47254
                                             78 BANK0     34     8     26
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45525
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    41      6   45146
                                             75 COMRAM    10     4      6
                                             56 BANK0     22    22      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   30644
                                             63 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6030
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4381
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1486
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                20    14      6   71977
                                             74 COMRAM    20    14      6
                             ___flge
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6   21998
                                             68 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6   21314
                                             68 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                               12     6      6    3130
                                             25 COMRAM    12     6      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _left                                                13     7      6   16456
                                             55 COMRAM    13     7      6
                    _DCmotors_setPWM
                            ___fladd
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    7022
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2566
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    5861
                                             25 COMRAM     4     0      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4    3017
                                             25 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                              5     1      4    3017
                                             25 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (4) _DCmotors_setPWM                                     11     9      2    2385
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     645
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     648
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC2                                5     2      3    1954
                                             13 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (3) _colourclick_readRGBC                                 2     0      2    1148
                                             11 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (4) _colourclick_readR                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _colourclick_readG                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _colourclick_readC                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _colourclick_readB                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourcards_normaliseRGBC                           12     8      4    4595
                                             39 COMRAM    12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     930
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2463
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                              1 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              0 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_readRGBC
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     _colourcards_normaliseRGBC
       ___fldiv
         ___xxtofl (ARG)
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _reverse
       _DCmotors_setPWM
     _stop
       _DCmotors_setPWM
     _turnleft
       _left
         _DCmotors_setPWM
         ___fladd
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
         ___xxtofl
       _right
         _DCmotors_setPWM
     _turnright
       _left
       _right
   _colourcards_testingRGBC
     ___flge
     _colourcards_normaliseRGBC
     _colourclickLEDs_C
     _colourclick_readRGBC
     _colourclick_readRGBC2
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _stoa
             _fputc
             _strlen
           _strncmp
           _tolower
   _colourclickLEDs_C
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     32      E7       7       90.2%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8C      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E5       8        0.0%
DATA                 0      0     1E5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 13 03:22:57 2021

      colourcards_normaliseRGBC@rel 002A         colourclick_readRGBC2@tmpval 000E  
                      ___fldiv@aexp 0027                        ___fldiv@bexp 0026  
                      ___fldiv@sign 001F                                  l63 52FC  
                                l65 531E                                  l59 52E0  
             __end_of_DCmotors_init 612A                        ___awdiv@sign 000C  
               ___wmul@multiplicand 0003                                 l204 4E52  
                               l160 2B0E                                 l321 6496  
                               l401 63AE                                 l410 6520  
                               l163 2B7C                                 l324 64B2  
                               l404 63D4                                 l413 650C  
                               l173 1B2E                                 l326 64C0  
                               l327 64C6                                 l407 6516  
                               l175 1B4E                                 l263 62AA  
                               l416 64F6                                 l272 6038  
                               l281 5E04                                 l601 5C80  
                               l169 1B12                                 l362 64DC  
                               l602 5C82                                 l266 643C  
                               l371 641C                                 l419 61F4  
                               l275 60D8                                 l356 6502  
                               l612 4810                                 l269 5FE8  
                               l613 4812                                 l621 522E  
                               l365 64EA                                 l278 6088  
                               l470 64AE                                 l359 652A  
                               l624 5256                                 l289 510C  
                               l458 647C                                 l634 5F48  
                               l731 63FA                                 l467 649A  
                               l476 6382                                 l573 44B2  
                               l629 5F98                                 l566 6128  
                               l398 63AC                                 l576 645A  
                               l578 645C                                 l586 5C10  
                               l594 5B82                                 l845 4CDC  
                               l962 599A                                 l858 4FB6  
                               l990 5AF4                                 l975 5A4A  
                               l996 5520                                 _abs 61F6  
                               _pad 5812                        ___awmod@sign 0006  
                               wreg 000FE8                        ___flmul@aexp 0020  
                      ___flmul@bexp 0021                        ___flmul@sign 001B  
                      ___flmul@temp 0026               ?_colourclick_readRGBC 000C  
                      ___flmul@prod 0022                 __size_of_ADC_getval 0018  
                      ___fltol@exp1 000A                                l1001 5566  
                              l1005 631A                                ?_abs 0013  
                              l1028 5462                                l1301 616E  
                              l1400 45FE                                l1313 3DE8  
                              l1315 3C48                                l1324 3C8E  
                              l1260 3342                                l1261 3308  
                              l1501 1B0E                                l1326 3D06  
                              l1318 3C0C                                l1327 3CF4  
                              l1352 38E0                                l1345 36EA  
                              l1409 5E56                                l1362 3A10  
                              l1354 3958                                l1259 3354  
                              l1355 3946                                l1276 346E  
                              l1268 3624                                l1452 5858  
                              l1285 353E                                l1349 3A4E  
                              l1286 352C                                l1455 589A  
                              l1463 3E8A                                l1519 12A4  
                              l1393 45A2                                l5001 6210  
                              l1457 58D6                                l1465 3E92  
                              l1713 62E2                                l1633 5CE0  
                              l1386 450A                                l1626 3028  
                              l1618 3164                                l1634 5CE8  
                              l1707 5EA8                                l4211 5776  
                              l1483 40CC                                l5011 55FA  
                              l5003 5568                                l1547 16E4  
                              l1652 6234                                l1644 5664  
                              l1389 4666                                l5101 61BA  
                              l4301 32D4                                l4221 3172  
                              l4213 5794                                l4205 5748  
                              l5021 565C                                l5005 5588  
                              l5103 61C2                                l4311 3326  
                              l4303 32F0                                l4231 31B2  
                              l4223 3180                                l4215 57CA  
                              l4207 575A                                l1751 5EF8  
                              l5007 55C6                                l5015 5606  
                              l1583 4A38                                l1680 49AE  
                              l1728 5810                                l1736 61B2  
                              l5105 61CA                                l4401 35C4  
                              l4321 3372                                l4313 3334  
                              l4305 3300                                l4241 31E4  
                              l4233 31B4                                l4225 3182  
                              l6001 636A                                l1649 622C  
                              l4209 576C                                l5121 3E62  
                              l5113 3DEA                                l5017 5618  
                              l5009 55EE                                l5041 40EE  
                              l1745 5DA6                                l5025 5D4A  
                              l5033 5D20                                l5201 0F68  
                              l1585 4A40                                l1770 5D48  
                              l1594 4B02                                l5107 61F0  
                              l4411 35FE                                l4403 35E4  
                              l4331 33B2                                l4315 3336  
                              l4307 3316                                l4251 320C  
                              l4243 31E6                                l4227 3192  
                              l4235 31BC                                l4219 3166  
                              l1683 49B6                                l1739 6534  
                              l5131 3EBA                                l5123 3E64  
                              l5115 3E0A                                l5051 41D6  
                              l5043 4144                                l5027 5D5A  
                              l5035 5D32                                l5211 0FCE  
                              l5203 0F6C                                l1595 4B4C  
                              l1755 5746                                l6011 6398  
                              l6003 6384                                l1692 4222  
                              l6021 64B0                                l6101 643E  
                              l5109 61F2                                l4413 3604  
                              l4405 35E8                                l4341 33DC  
                              l4333 33BE                                l4325 3386  
                              l4317 3340                                l4309 3322  
                              l4261 3246                                l4253 321C  
                              l4245 31EC                                l4237 31CC  
                              l4229 31A2                                l4501 4E66  
                              l4421 6170                                l5141 3F5A  
                              l5133 3EC0                                l5125 3E7E  
                              l5117 3E32                                l5061 42BE  
                              l5053 4212                                l5045 4158  
                              l1765 5D40                                l5029 5CEA  
                              l5301 1382                                l5213 0FE0  
                              l5205 0F72                                l6013 639A  
                              l6005 638E                                l6031 64C8  
                              l6023 64C4                                l6103 6444  
                              l4415 3612                                l4407 35F6  
                              l4351 344E                                l4335 33C2  
                              l4327 3396                                l4319 3362  
                              l4343 33E2                                l4271 3272  
                              l4263 3258                                l4255 322C  
                              l4247 31FA                                l4239 31D2  
                              l5071 5E58                                l4511 4ED6  
                              l4503 4E86                                l4423 617C  
                              l4431 5EB6                                l5151 4002  
                              l5143 3F60                                l5135 3EC8  
                              l5127 3E9A                                l5119 3E52  
                              l5063 42CE                                l5047 4166  
                              l5055 4246                                l5039 40CE  
                              l5311 13CA                                l5303 1390  
                              l5231 10B4                                l5215 0FFC  
                              l5207 0F98                                l5223 1046  
                              l1599 4B54                                l6111 1B30  
                              l6007 6394                                l6015 6420  
                              l6041 6494                                l6033 647E  
                              l6105 6454                                l4601 3BD8  
                              l4417 3614                                l4409 35FC  
                              l4361 34A8                                l4345 3408  
                              l4353 345E                                l4337 33D0  
                              l4329 33A4                                l4281 3286  
                              l4273 3276                                l4265 3266  
                              l4257 322E                                l4249 31FC  
                              l6201 2522                                l5073 5E5C  
                              l4521 4F4E                                l4513 4EDE  
                              l4505 4E8A                                l4425 618E  
                              l4433 5EBA                                l5161 4068  
                              l5153 401C                                l5145 3F66  
                              l5137 3ED2                                l5129 3EAC  
                              l5057 4282                                l1689 42DE  
                              l5401 18CE                                l5321 14DE  
                              l5313 13DA                                l5305 13A8  
                              l5233 10D0                                l5225 106C  
                              l5241 10EC                                l5217 1014  
                              l6121 1BBC                                l6113 1B36  
                              l6009 6396                                l6017 64DE  
                              l6035 6488                                l6027 64F8  
                              l4611 3C34                                l4603 3BE8  
                              l4443 63AE                                l5083 650E  
                              l5091 6504                                l4371 34D8  
                              l4363 34B2                                l4355 3484  
                              l4347 343C                                l4339 33D2  
                              l4291 329A                                l4283 328A  
                              l4275 327A                                l4267 326A  
                              l4259 3236                                l6211 25C4  
                              l6203 252C                                l1699 6352  
                              l5067 631C                                l5075 5E70  
                              l4523 4F60                                l4515 4EF2  
                              l4507 4E98                                l4427 6192  
                              l4435 5EEC                                l5163 406E  
                              l5171 40A4                                l5155 4036  
                              l5139 3ED8                                l5147 3FCA  
                              l5059 4296                                l5411 1926  
                              l5403 18D6                                l5331 157E  
                              l5315 13EE                                l5323 14E4  
                              l5307 13BA                                l5251 1176  
                              l5243 1106                                l5219 101E  
                              l6131 1CE8                                l6123 1BEE  
                              l6115 1B5C                                l6107 1B10  
                              l6019 64E4                                l6051 629C  
                              l6043 6274                                l6037 6490  
                              l6029 6522                                l6061 60F6  
                              l4621 3C74                                l4613 3C36  
                              l4605 3BFC                                l4541 3A7C  
                              l4533 3A50                                l4445 63BE  
                              l5085 6512                                l5093 6508  
                              l4381 3500                                l4373 34DC  
                              l4365 34C0                                l4357 3494  
                              l4349 343E                                l4293 329E  
                              l4285 328E                                l4277 327E  
                              l4269 326E                                l4701 36D4  
                              l6213 25F6                                l5077 5E9E  
                              l4461 4B8C                                l4453 4B56  
                              l4517 4F00                                l4525 4F66  
                              l4509 4EB8                                l4429 5EAA  
                              l5165 4080                                l5149 3FE4  
                              l5157 4046                                l5421 196A  
                              l5413 1934                                l5405 18DA  
                              l5341 165A                                l5333 15B0  
                              l5325 1502                                l5317 1452  
                              l5309 13C2                                l5261 124E  
                              l5253 11D0                                l5229 10A2  
                              l5181 0EE0                                l5501 4A64  
                              l6141 1E14                                l6125 1C20  
                              l6133 1D5A                                l6117 1B6A  
                              l6109 1B20                                l6053 62A6  
                              l6045 6278                                ?_pad 0011  
                              l6039 6492                                l6071 6100  
                              l6063 60F8                                l6055 60DC  
                              l4631 3CB0                                l4623 3C7E  
                              l4615 3C46                                l4607 3C0A  
                              l4551 3AB6                                l4543 3A8C  
                              l4535 3A5C                                l5095 6518  
                              l5087 64EE                                l4447 63D6  
                              l4391 355A                                l4383 350E  
                              l4375 34EC                                l4367 34C2  
                              l4295 32A2                                l4287 3292  
                              l4279 3282                                l4711 371E  
                              l4703 36DA                                l6303 2B5C  
                              l6231 274A                                l6223 26B2  
                              l6215 261A                                l6207 2560  
                              l5079 5EA2                                l4471 4BE8  
                              l4463 4B9A                                l4455 4B5A  
                              l4527 4F76                                l4519 4F2E  
                              l5167 408C                                l5159 4058  
                              l4439 62AC                                l5431 19A0  
                              l5423 1972                                l5415 1944  
                              l5407 18F8                                l5351 16BC  
                              l5343 1660                                l5335 15C0  
                              l5327 1536                                l5319 14AA  
                              l5271 1298                                l5263 1252  
                              l5255 1204                                l5247 113C  
                              l5191 0F30                                l5183 0EE8  
                              l5175 0EB8                                l5511 4ADC  
                              l5503 4A78                                l6151 1F4E  
                              l6143 1E46                                l6135 1D8C  
                              l6127 1C44                                l6119 1B8A  
                              l6047 6282                                l6081 611C  
                              l6073 6102                                l6065 60FA  
                              l6057 60F0                                l4641 3D22  
                              l4633 3CBE                                l4625 3C8C  
                              l4617 3C58                                l4609 3C16  
                              l4561 3AE2                                l4553 3ABC  
                              l4545 3A9C                                l4537 3A6A  
                              l5097 651C                                l5089 64F2  
                              l5601 60D0                                l4449 63F2  
                              l4393 3568                                l4385 3524  
                              l4369 34D0                                l4377 34EE  
                              l4289 3296                                l4297 32A6  
                              l4721 376E                                l4713 372A  
                              l4705 36FA                                l6241 2814  
                              l6225 26E4                                l6217 264C  
                              l6209 2592                                l4481 4C52  
                              l4473 4BF0                                l4465 4BBA  
                              l4457 4B68                                l4529 4F96  
                              l5169 4094                                l4801 612A  
                              l5441 19FC                                l5433 19A8  
                              l5425 1982                                l5417 1948  
                              l5409 1914                                l5361 1774  
                              l5353 16D0                                l5345 1694  
                              l5337 15D0                                l5329 1568  
                              l5281 12D4                                l5265 1264  
                              l5273 12B0                                l5257 120C  
                              l5249 1170                                l5193 0F3E  
                              l5185 0F0C                                l5177 0EC2  
                              l5521 4B2A                                l5513 4AE0  
                              l5505 4A7C                                l6161 20C8  
                              l6153 1FC0                                l6145 1E78  
                              l6137 1DBE                                l6129 1C76  
                              l6049 6292                                l6321 529A  
                              l6083 6120                                l6075 6104  
                              l6067 60FC                                l6059 60F4  
                              l6091 646A                                l4651 3D8E  
                              l4643 3D30                                l4635 3CEC  
                              l4619 3C6E                                l4627 3C9E  
                              l4571 3B1C                                l4563 3AF2  
                              l4555 3AC2                                l4547 3A9E  
                              l4539 3A6C                                l5099 61B6  
                              l4811 58EA                                l5611 42E0  
                              l4395 35A2                                l4379 34FC  
                              l4299 32AA                                l4731 37B0  
                              l4723 377A                                l4715 3734  
                              l4707 370A                                l6243 283C  
                              l6251 2888                                l6227 2716  
                              l6219 267E                                l6235 277E  
                              l6307 2B74                                l5531 4830  
                              l4491 4C9C                                l4483 4C72  
                              l4475 4C04                                l4467 4BBE  
                              l4459 4B88                                l4803 613A  
                              l5451 1A3C                                l5443 1A04  
                              l5435 19B4                                l5427 198A  
                              l5419 1958                                l5371 17C0  
                              l5363 1786                                l5355 16DC  
                              l5347 16A8                                l5339 1604  
                              l5291 133A                                l5283 12F0  
                              l5267 1276                                l5259 123E  
                              l5195 0F50                                l5187 0F16  
                              l5179 0ED2                                l5523 4B2E  
                              l5515 4AE4                                l5507 4A9A  
                              l6171 2242                                l6163 213A  
                              l6147 1EEA                                l6139 1DF0  
                              l6155 2032                                l6331 52CA  
                              l6323 52AA                                l6315 5258  
                              l6085 6124                                l6077 610E  
                              l6069 60FE                                l6093 646C  
                              l4661 3DDC                                l4653 3DA8  
                              l4645 3D5A                                l4629 3CAC  
                              l4573 3B32                                l4565 3B02  
                              l4557 3AD0                                l4549 3AA6  
                              l5605 603A                                l4821 5910  
                              l4813 58F2                                l5621 43E0  
                              l5613 42FC                                l4389 354E  
                              l4397 35A4                                l4741 3812  
                              l4733 37BC                                l4725 3786  
                              l4717 374A                                l6309 2B78  
                              l6261 295E                                l6253 28BA  
                              l6245 2854                                l6237 27B0  
                              l5541 4894                                l5533 4850  
                              l5525 4814                                l4493 4CBC  
                              l4485 4C74                                l4477 4C12  
                              l4469 4BCA                                l5461 1A78  
                              l5453 1A4E                                l5437 19BA  
                              l5445 1A0A                                l5429 1998  
                              l5381 17F4                                l5373 17CE  
                              l5365 1798                                l5357 1700  
                              l5349 16AC                                l5293 134C  
                              l5285 1326                                l5269 127E  
                              l5197 0F5C                                l5189 0F1E  
                              l5509 4AA6                                l5701 2D1C  
                              l6173 2274                                l6165 216C  
                              l6157 2064                                l6149 1F1C  
                              l6181 23B8                                l6341 52EE  
                              l6333 52CE                                l6325 52B2  
                              l6317 5286                                l6079 6110  
                              l6095 6476                                l6087 645E  
                              l4663 3DDE                                l4655 3DC4  
                              l4639 3D16                                l4647 3D5E  
                              l4591 3B86                                l4575 3B42  
                              l4583 3B62                                l4567 3B04  
                              l4559 3AD2                                l5631 451A  
                              l5607 6080                                l4831 5948  
                              l4823 5918                                l4815 58F6  
                              l4807 58D8                                l5623 444A  
                              l5615 435E                                l4399 35B4  
                              l4911 54E0                                l4903 5464  
                              l4751 38A8                                l4743 381E  
                              l4735 37CC                                l4727 3794  
                              l4719 3756                                l4671 3626  
                              l6271 29E2                                l6255 28EC  
                              l6247 2870                                l6239 27E2  
                              l6191 2438                                l5543 48AA  
                              l5535 488A                                l5527 4828  
                              l4487 4C86                                l4479 4C24  
                              l5471 1AD0                                l5463 1A7E  
                              l5455 1A5A                                l5447 1A1C  
                              l5439 19E0                                l5391 1826  
                              l5383 1804                                l5375 17DE  
                              l5367 17A6                                l5359 1764  
                              l5295 135E                                l5287 132E  
                              l5279 12C2                                l5199 0F64  
                              l5519 4B16                                l5711 2DD0  
                              l5703 2D2C                                l6183 23C4  
                              l6175 22A6                                l6167 219E  
                              l6159 2096                                l6343 52FE  
                              l6335 52D4                                l6327 52BE  
                              l6319 528E                                l6097 6478  
                              l6089 6468                                l4657 3DC8  
                              l4649 3D78                                l4593 3BA0  
                              l4585 3B72                                l4577 3B4A  
                              l4569 3B0C                                l5641 4558  
                              l5633 4530                                l5625 44B6  
                              l4841 5974                                l4833 594E  
                              l4825 592A                                l4817 5904  
                              l4809 58DC                                l5617 43A4  
                              l4921 5564                                l4913 54EE  
                              l4905 5492                                l4761 38FE  
                              l4753 38C6                                l4745 383A  
                              l4737 37E6                                l4729 37A0  
                              l4681 3662                                l4673 3632  
                              l5801 4750                                l6281 2A6A  
                              l6273 2A14                                l6257 291E  
                              l6193 246A                                l6185 23E2  
                              l5561 4992                                l5553 492C  
                              l5545 48B2                                l5537 488E  
                              l5529 482C                                l4489 4C8C  
                              l4497 4E54                                l5473 1AD8  
                              l5457 1A62                                l5449 1A36  
                              l5393 1838                                l5385 1808  
                              l5377 17E2                                l5369 17AE  
                              l5297 136C                                l5289 1332  
                              l5721 2E8A                                l5713 2DF8  
                              l5705 2D62                                l6177 22D8  
                              l6169 21D0                                l6345 5304  
                              l6337 52D8                                l6329 52C6  
                              l6099 647A                                l4659 3DD6  
                              l4595 3BB0                                l4587 3B72  
                              l4579 3B4E                                l5651 45E0  
                              l5643 458A                                l5627 44C6  
                              l4835 5964                                l4827 5932  
                              l4843 597A                                l4819 590C  
                              l5619 43C4                                l4915 5500  
                              l4907 54A2                                l4771 3968  
                              l4763 3902                                l4755 38D0  
                              l4747 3864                                l4739 37F6  
                              l4691 3694                                l4683 3672  
                              l4675 3640                                l5811 4794  
                              l5803 475C                                l6291 2AF2  
                              l6283 2A7E                                l6275 2A44  
                              l6259 2946                                l6267 297E  
                              l6195 249C                                l6187 23E6  
                              l5547 48BA                                l4499 4E58  
                              l4851 599C                                l5475 1AE8  
                              l5467 1AB2                                l5459 1A72  
                              l5395 183C                                l5387 180E  
                              l5379 17E8                                l5299 1370  
                              l5491 49EC                                l5483 49B8  
                              l5723 2EA4                                l5731 2F0E  
                              l5715 2E40                                l5707 2D72  
                              l6179 234A                                l6347 532C  
                              l6339 52DC                                l4597 3BC0  
                              l5661 4636                                l5653 45EE  
                              l5645 458C                                l5637 4544  
                              l5629 44D4                                l5901 5056  
                              l4845 598A                                l4837 596C  
                              l4829 593A                                l4917 550E  
                              l4909 54D0                                l4781 39CA  
                              l4773 3974                                l4765 3910  
                              l4757 38DE                                l4749 389A  
                              l4693 36A2                                l4685 3678  
                              l4677 3642                                l5813 47AC  
                              l5805 4768                                l5821 510E  
                              l6293 2B02                                l6285 2AA0  
                              l6277 2A4A                                l6269 29B0  
                              l6197 24C0                                l6189 2406  
                              l5557 496E                                l5549 48F2  
                              l4861 59C8                                l4853 59A0  
                              l4925 62E4                                l4941 53B2  
                              l4933 535E                                l5477 1AEE  
                              l5469 1AC4                                l5389 1814  
                              l5397 1842                                l5493 4A00  
                              l5485 49CA                                l5581 56F4  
                              l5573 569C                                l5741 2FF8  
                              l5733 2F3C                                l5725 2EB2  
                              l5709 2DA8                                l6349 533A  
                              l4599 3BD0                                l5663 4646  
                              l5655 460C                                l5647 4598  
                              l5639 454C                                l5903 506E  
                              l5911 5098                                l4847 5992  
                              l4839 596E                                l4919 555E  
                              l4791 3A32                                l4783 39DE  
                              l4775 3982                                l4767 393E  
                              l4759 38F0                                l4695 36A4  
                              l4687 3688                                l4679 3652  
                              l5815 47B8                                l5807 4774  
                              l5831 518E                                l5823 5134  
                              l6295 2B06                                l6287 2AAC  
                              l6279 2A52                                l6199 24F2  
                              l5559 4980                                l4871 5A00  
                              l4863 59D0                                l4855 59AE  
                              l4927 62FA                                l4943 53B4  
                              l4935 5374                                l5399 189A  
                              l5495 4A08                                l5487 49D2  
                              l5583 5720                                l5575 56AA  
                              l5567 5666                                l5751 309A  
                              l5727 2EE2                                l5719 2E78  
                              l5671 2B7E                                l5665 4654  
                              l5657 460E                                l5649 45D4  
                              l5593 5FEA                                l5921 50E8  
                              l5913 50AA                                l5905 507A  
                              l4793 3A34                                l4785 39F8  
                              l4777 39AC                                l4697 36B4  
                              l4689 368E                                l5817 47C8  
                              l5809 477C                                l5841 51D6  
                              l5833 519A                                l5825 5144  
                              l6297 2B10                                l6289 2AD0  
                              l4881 5A3A                                l4873 5A16  
                              l4865 59E2                                l4857 59B6  
                              l4929 630A                                l4945 53C4  
                              l5497 4A16                                l5489 49E4  
                              l5577 56C2                                l5569 5690  
                              l5761 3104                                l5737 2FB2  
                              l5681 2BF2                                l5673 2BA6  
                              l5667 4656                                l5659 4612  
                              l5595 6030                                l5587 5F9A  
                              l5915 50AC                                l5907 5092  
                              l4787 3A14                                l4795 3A3A  
                              l4779 39B0                                l4699 36C4  
                              l5819 47CC                                l5851 522A  
                              l5835 51B2                                l5827 5158  
                              l5843 51DE                                l5931 5F0C  
                              l6299 2B40                                l4883 5A42  
                              l4875 5A1E                                l4867 59EA  
                              l4859 59BA                                l4891 5A8A  
                              l4971 5442                                l4955 53EE  
                              l4947 53C8                                l4939 5388  
                              l5579 56E2                                l5755 30BA  
                              l5739 2FC4                                l5747 303C  
                              l5691 2C8A                                l5683 2BFA  
                              l5675 2BB4                                l5771 312A  
                              l5589 5FE0                                l5781 5DA8  
                              l5917 50C4                                l5925 50EE  
                              l5941 5C3C                                l4797 3A3E  
                              l4789 3A24                                l5853 5244  
                              l5845 51F6                                l5837 51BE  
                              l5829 5176                                l5933 5F2C  
                              l4981 5836                                l4877 5A24  
                              l4869 59F2                                l4893 5AB8  
                              l4973 5452                                l4965 5416  
                              l4957 53F8                                l4949 53D6  
                              l5773 3152                                l5757 30E2  
                              l5765 3110                                l5749 3064  
                              l5693 2C98                                l5685 2C08  
                              l5677 2BC6                                l5861 5C9A  
                              l5871 4D16                                l5599 608A  
                              l5927 50F4                                l5919 50D0  
                              l5943 5C48                                l5935 5C12  
                              l5791 46E2                                l5855 5254  
                              l5847 520E                                l5839 51CA  
                              l5951 5F5C                                l5783 649A  
                              l4991 587C                                l4983 5844  
                              l4879 5A2A                                l4895 5AC8  
                              l4887 5A4C                                l4967 5422  
                              l4959 5402                                l5767 311E  
                              l5759 30F0                                l5687 2C30  
                              l5679 2BCA                                l5863 5CC0  
                              l5873 4D2A                                l5865 4CDE  
                              l5881 4FBE                                l5961 5B3E  
                              l5937 5C18                                l5945 5C50  
                              l5793 46F6                                l5849 521A  
                              l5953 5F7C                                l5929 5EFA  
                              l5785 64AA                                l6593 48DC  
                              l4993 58AA                                l4985 5850  
                              l4977 5812                                l4897 5AEC  
                              l4889 5A7A                                l4969 5432  
                              l5697 2CE4                                l5689 2C6A  
                              l5857 5C84                                l5875 4D8A  
                              l5867 4CEE                                l5779 63FE  
                              l5891 500C                                l5883 4FD6  
                              l5971 5BA8                                l5963 5B4A  
                              l5955 5AF6                                l5947 5C68  
                              l5939 5C30                                l5795 4714  
                              l5787 4668                                l4995 58BE  
                              l4987 5864                                l4979 5822  
                              l4899 5AF2                                l5699 2CF6  
                              l5859 5C8C                                l5877 4DEE  
                              l5869 4D02                                l5893 5024  
                              l5885 4FE6                                l5981 5BF8  
                              l5973 5BC0                                l5957 5B1A  
                              l5965 5B52                                l5797 472C  
                              l5789 46D2                                l5949 5F4A  
                              l4989 5878                                l5895 5026  
                              l5887 4FE8                                l5879 4FB8  
                              l5975 5BCC                                l5967 5B6A  
                              l5959 5B32                                l5799 4738  
                              l4999 61F6                                l5991 5E44  
                              l5983 5E06                                l5889 5000  
                              l5897 5042                                l5977 5BD8  
                              l5969 5B84                                l5985 5E18  
                              l5899 5054                                l5979 5BE0  
                              l5995 6354                                l5987 5E20  
                              l5997 6358                                l5989 5E28  
                              l5999 6366                                STR_1 0E01  
                              STR_2 0E80                                STR_3 0E01  
                              STR_4 0EAF                                STR_5 0E01  
                              STR_6 0E73                                STR_7 0E01  
                              STR_8 0E94                                STR_9 0E01  
                      _BAUD4CONbits 000EE9                                _LATE 000F7D  
                              _LATG 000F7F                                u5000 3D78  
                              u4200 57CA                                u5001 3D74  
                              u4201 57C6                                u5010 3DA8  
                              u4210 3180                                _T2PR 000FBC  
                              u5011 3DA4                                u4211 317C  
                              u5020 3DD6                                u4300 32D4  
                              u4220 3192                                u5100 370A  
                              u5021 3DD2                                u4301 32D0  
                              u4221 318E                                u5101 3706  
                              u4310 32EC                                u4230 31A2  
                              u5110 3884                                u5030 3640  
                              u4311 32E6                                u4231 319E  
                              u5031 363C                                u4400 33D0  
                              u4320 32EE                                u4240 31E4  
                              u5200 39F8                                u5120 38DE  
                              u5040 3652                                u6000 0F3E  
                              u4401 33CC                                u4241 31E0  
                              u5201 39F4                                u5121 38DA  
                              u5041 364E                                u6001 0F3A  
                              u4410 3408                                u4330 3316  
                              u4250 31FA                                u5210 3A32  
                              u5130 38FE                                u5050 3662  
                              u4170 575A                                u6010 0F50  
                              u4411 3404                                u4331 3312  
                              u4251 31F6                                u5211 3A2E  
                              u5131 38FA                                u5115 387A  
                              u5051 365E                                u4171 5756  
                              u6011 0F4C                                u5220 58EA  
                              u4500 3524                                u4420 344E  
                              u4340 3334                                u4260 320C  
                              u5140 3910                                u5060 36A2  
                              u4180 576C                                u5300 59E2  
                              u6100 1138                                u6020 0F98  
                              u5221 58E6                                u4501 3520  
                              u4421 344A                                u4341 3330  
                              u4261 3208                                u5141 390C  
                              u5061 369E                                u4181 5768  
                              u5301 59DE                                u6101 1134  
                              u6021 0F94                                u5230 5904  
                              u4510 353A                                u4430 3484  
                              u4350 3354                                u4270 321C  
                              u5150 393E                                u5070 36B4  
                              u4190 5794                                u5310 5A00  
                              u6110 11CC                                u6030 0FC6  
                              u5231 5900                                u4511 3536  
                              u4431 3480                                u4351 3350  
                              u4271 3218                                u5151 393A  
                              u5071 36B0                                u4191 5790  
                              u5311 59FC                                u6111 11C8  
                              u6031 0FC0                                u5240 592A  
                              u4520 354E                                u4440 3494  
                              u4360 3362                                u4280 3258  
                              u5400 550E                                u5160 3954  
                              u5080 36C4                                u4600 61B2  
                              u5320 5A16                                u6200 134C  
                              u6120 123E                                u6040 0FC8  
                              u7000 2FAA                                u5241 5926  
                              u4521 354A                                u4441 3490  
                              u4361 335E                                u4281 3254  
                              u5401 550A                                u5161 3950  
                              u5081 36C0                                u4601 61AE  
                              u5321 5A12                                u6201 1348  
                              u6121 123A                                u7001 2FA4  
                              u5250 5948                                u4530 3568  
                              u4450 34C0                                u4370 3372  
                              u4290 3266                                u5410 555E  
                              u5170 3968                                u5090 36FA  
                              u4610 5EDC                                u5330 5A3A  
                              u6210 135E                                u6130 1264  
                              u6050 0FE0                                u7010 2FAC  
                              u5251 5944                                u4531 3564  
                              u4451 34BC                                u4371 336E  
                              u4291 3262                                u5411 555A  
                              u5171 3964                                u5091 36F6  
                              u5331 5A36                                u6211 135A  
                              u6131 1260                                u6051 0FDC  
                              u5260 5964                                u4540 35A2  
                              u4460 34D0                                u4380 33A4  
                              u5180 3982                                u4700 4BE8  
                              u4620 5EEC                                u5500 5822  
                              u5340 5A7A                                u5420 62FA  
                              u6300 165A                                u6220 136C  
                              u6140 1276                                u6060 106C  
                              u7020 2FC4                                u5261 5960  
                              u4541 359E                                u4461 34CC  
                              u4381 33A0                                u5181 397E  
                              u4701 4BE4                                u4621 5EE8  
                              u5501 581E                                u5341 5A76  
                              u5421 62F6                                u6301 1656  
                              u6221 1368                                u6141 1272  
                              u6061 1068                                u7021 2FC0  
                              u5270 598A                                u4550 35B4  
                              u4470 34EC                                u4390 33B2  
                              u5190 39CA                                u7110 472C  
                              u4710 4C12                                u5510 5844  
                              u5350 5AB8                                u5430 5374  
                              u4630 62DC                                u6310 16A8  
                              u6230 1382                                u6150 1298  
                              u6070 109A                                u7030 3064  
                              u5271 5986                                u4551 35B0  
                              u4471 34E8                                u4391 33AE  
                              u5191 39C6                                u7111 4728  
                              u4711 4C0E                                u5511 5840  
                              u5351 5AB4                                u5431 5370  
                              u4631 62D6                                u6311 16A4  
                              u6231 137E                                u6151 1294  
                              u6071 1094                                u7031 3060  
                              u4800 3A6A                                u4560 35C4  
                              u4480 34FC                                u7120 4750  
                              u7200 51F6                                u4720 4C52  
                              u5520 589A                                u5280 59AE  
                              u5360 5AEC                                u5440 53A8  
                              u5600 5652                                u4640 62DE  
                              u6400 18F8                                u6320 16D0  
                              u6240 1390                                u6160 12BE  
                              u6080 109C                                u7040 30E2  
                              u4801 3A66                                u4561 35C0  
                              u4481 34F8                                u7121 474C  
                              u7201 51F2                                u4721 4C4E  
                              u4617 5ED2                                u5521 5896  
                              u5281 59AA                                u5361 5AE8  
                              u5601 564C                                u6401 18F4  
                              u6321 16CC                                u6241 138C  
                              u6161 12BA                                u7041 30DE  
                              u4810 3A7C                                u4650 63BE  
                              u4570 35E4                                u4490 350E  
                              u5370 5492                                u7130 4794  
                              u7210 520E                                u4730 4C9C  
                              u5530 58AA                                u5290 59C8  
                              u5450 53D6                                u5610 5654  
                              u6410 1914                                u6330 1774  
                              u6250 13BA                                u6170 12D4  
                              u6090 10B4                                u4811 3A78  
                              u4651 63BA                                u4571 35E0  
                              u4491 350A                                u5371 548E  
                              u7131 4790                                u7211 520A  
                              u4731 4C98                                u5531 58A6  
                              u5291 59C4                                u5451 53D2  
                              u6411 1910                                u6331 1770  
                              u6251 13B6                                u6171 12D0  
                              u6091 10B0                                u4900 3C34  
                              u4820 3A8C                                u4660 63D4  
                              u4580 35F6                                u5380 54D0  
                              u7140 47AC                                u7108 470A  
                              u7220 5244                                u7300 5F5C  
                              u4740 4E66                                u5540 6210  
                              u5460 53EA                                u5620 5D94  
                              u6500 1AAE                                u6420 1926  
                              u6340 1786                                u6260 1502  
                              u6180 12F0                                u4901 3C30  
                              u4821 3A88                                u4661 63D0  
                              u4581 35F2                                u5381 54CC  
                              u7141 47A8                                u7221 5240  
                              u7301 5F58                                u4741 4E62  
                              u5541 620C                                u5461 53E6  
                              u5445 539E                                u6421 1922  
                              u6341 1782                                u6261 14FE  
                              u6181 12EC                                u4910 3C58  
                              u4830 3AD0                                u7310 5B6A  
                              u4590 3612                                u5390 54EE  
                              u7150 4810                                u4670 4B68  
                              u4750 4E98                                u5470 5412  
                              u5550 55A8                                u5710 41D2  
                              u5630 5DA6                                u6510 1AC4  
                              u6430 1934                                u6350 1798  
                              u6270 1568                                u6190 1326  
                              u7230 5CE0                                u4911 3C54  
                              u4831 3ACC                                u7055 6406  
                              u7311 5B66                                u4591 360E  
                              u5391 54EA                                u7151 480C  
                              u4671 4B64                                u4751 4E94  
                              u5471 540E                                u5711 41CE  
                              u5631 5DA2                                u6511 1AC0  
                              u6431 1930                                u6351 1794  
                              u6271 1564                                u6191 1322  
                              u7231 5CDC                                u4920 3C6E  
                              u4840 3AE2                                u7056 6408  
                              u7240 4FE6                                u7320 5B82  
                              u7160 516A                                u7080 64AA  
                              u5800 5E9E                                u4680 4B9A  
                              u4760 4ED6                                u5480 5432  
                              u5560 55C6                                u5720 41F6  
                              u5640 5D1A                                u6440 196A  
                              u6360 17A6                                u6280 15B0  
                              u6600 4B12                                u7400 1B5C  
                              u4921 3C6A                                u4841 3ADE  
                              u7065 6410                                u7241 4FE2  
                              u7321 5B7E                                u7161 5162  
                              u7081 64A6                                u5801 5E9A  
                              u4681 4B96                                u4761 4ED2  
                              u5481 542E                                u5561 55C2  
                              u5705 417A                                u5641 5D14  
                              u6441 1966                                u6361 17A2  
                              u6281 15AC                                u6601 4B0E  
                              u6521 49C2                                u7401 1B58  
                              u4930 3C8C                                u4850 3AF2  
                              u7066 6412                                u5810 61DE  
                              u7250 5054                                u7330 5BF8  
                              u7090 4708                                u4770 4F00  
                              u5490 5442                                u5570 55EE  
                              u5730 4212                                u5706 4184  
                              u5650 5D1C                                u6450 1998  
                              u6370 17C0                                u6290 15C0  
                              u6610 4B4C                                u6530 49E4  
                              u7410 1B6A                                u4931 3C88  
                              u4851 3AEE                                u7075 641A  
                              u5811 61D6                                u7251 5050  
                              u7331 5BF4                                u7091 4700  
                              u4691 4BC4                                u4771 4EFC  
                              u5491 543E                                u5571 55EA  
                              u5555 559E                                u5731 420E  
                              u5707 4194                                u5627 5D8A  
                              u6451 1994                                u6371 17BC  
                              u6291 15BC                                u6611 4B48  
                              u6531 49E0                                u7411 1B66  
                              u4940 3CAC                                u4860 3B32  
                              u7076 641C                                u7260 50AA  
                              u7340 5C10                                u7180 518E  
                              u6620 4850                                u4780 4F2E  
                              u5900 3FE4                                u5580 5618  
                              u5740 4266                                u5660 5D32  
                              u6460 1A1C                                u6380 17CE  
                              u6540 4A16                                u6700 56C2  
                              u7500 1E78                                u7420 1BBC  
                              u4941 3CA8                                u4861 3B2E  
                              u7261 50A6                                u7341 5C0C  
                              u7181 518A                                u6621 484C  
                              u4781 4F2A                                u5901 3FE0  
                              u5581 5614                                u5725 41EC  
                              u5661 5D2E                                u6461 1A18  
                              u6381 17CA                                u6541 4A12  
                              u6701 56BE                                u7501 1E74  
                              u7421 1BB8                                u4950 3CBE  
                              u4870 3B72                                u7190 51B2  
                              u7270 5F0C                                u7350 6382  
                              u6630 488A                                u4790 4F76  
                              u5910 4002                                u5830 3E1A  
                              u5750 4282                                u5670 4116  
                              u6470 1A36                                u6390 1826  
                              u6550 4A34                                u6710 56E2  
                              u7510 1F1C                                u7430 1BEE  
                              u4951 3CBA                                u4871 3B6E  
                              u7191 51AE                                u7271 5F08  
                              u7351 637E                                u6631 4886  
                              u4791 4F72                                u5911 3FFE  
                              u5831 3E14                                u5751 427E  
                              u6471 1A32                                u6391 1822  
                              u6551 4A30                                u6711 56DE  
                              u7511 1F18                                u7431 1BEA  
                              u7360 64C0                                u4960 3CEC  
                              u4880 3BE8                                u6800 4530  
                              u7280 5C68                                u6640 48A6  
                              u5920 401C                                u5840 3E1C  
                              u5760 42BE                                u5680 4144  
                              u6480 1A4E                                u6560 4A60  
                              u6720 56F4                                u7600 22A6  
                              u7520 1F4E                                u7440 1C20  
                              u7361 64BC                                u4961 3CE8  
                              u4881 3BE4                                u6801 452C  
                              u7281 5C64                                u6641 48A2  
                              u5921 4018                                u5761 42BA  
                              u5745 425C                                u5681 4140  
                              u6481 1A4A                                u6561 4A5C  
                              u6721 56F0                                u7601 22A2  
                              u7521 1F4A                                u7441 1C1C  
                              u7370 6454                                u4970 3D02  
                              u4890 3C0A                                u6810 4586  
                              u7290 5C80                                u7178 516C  
                              u5770 634C                                u6650 4968  
                              u5930 4036                                u5850 3E32  
                              u5690 4166                                u6490 1AAC  
                              u6570 4A9A                                u6730 5720  
                              u7610 22D8                                u7530 2064  
                              u7450 1C76                                u7371 6450  
                              u4971 3CFE                                u4891 3C06  
                              u6811 4582                                u7291 5C7C  
                              u5771 6346                                u6651 4962  
                              u5931 4032                                u5851 3E2E  
                              u5595 562A                                u5691 4162  
                              u5675 410C                                u6491 1AA6  
                              u6571 4A96                                u6731 571C  
                              u7611 22D4                                u7531 2060  
                              u7451 1C72                                u4980 3D16  
                              u6820 45D0                                u5828 61E0  
                              u6740 42FC                                u7700 267E  
                              u7620 2438                                u5780 634E  
                              u6660 496A                                u5940 4046  
                              u5860 3E62                                u6580 4AC8  
                              u6900 2C30                                u7540 2096  
                              u7460 1D8C                                u7380 1B20  
                              u4981 3D12                                u6821 45CC  
                              u6741 42F8                                u7701 267A  
                              u7621 2434                                u5941 4042  
                              u5861 3E5E                                u6901 2C2C  
                              u7541 2092                                u7461 1D88  
                              u7381 1B1C                                u4990 3D30  
                              u6830 45EE                                u6750 43E0  
                              u7710 26E4                                u7630 246A  
                              u5790 5E70                                u6670 4980  
                              u5950 4058                                u5870 3E7E  
                              u6590 4B02                                u6910 2CDC  
                              u7550 20C8                                u7470 1DBE  
                              u7390 1B2E                                u4991 3D2C  
                              u6831 45EA                                u6751 43DC  
                              u8407 51D8                                u7711 26E0  
                              u7631 2466                                u5791 5E6C  
                              u6671 497C                                u5951 4054  
                              u5871 3E7A                                u6591 4AFE  
                              u6911 2CD6                                u7551 20C4  
                              u7471 1DBA                                u7391 1B2A  
                              u8327 5310                                u6840 45FE  
                              u7800 29E2                                u7720 2716  
                              u7640 249C                                u6680 4992  
                              u5960 4068                                u5880 3EAC  
                              u6920 2CDE                                u7560 216C  
                              u7480 1DF0                                u6841 45FA  
                              u8417 5220                                u7801 29DE  
                              u7721 2712                                u7641 2498  
                              u6681 498E                                u5961 4064  
                              u5881 3EA8                                u7561 2168  
                              u7481 1DEC                                u8337 6288  
                              u6850 460C                                u7810 2A14  
                              u7730 27B0                                u7650 24F2  
                              u5970 4080                                u5890 3EBA  
                              u6690 5690                                u6930 2CF6  
                              u7570 219E                                u7490 1E46  
                              u6851 4608                                u8507 5016  
                              u8427 524A                                u7811 2A10  
                              u7731 27AC                                u7651 24EE  
                              u5971 407C                                u5891 3EB6  
                              u6587 4ABE                                u6691 568C  
                              u6931 2CF2                                u7571 219A  
                              u7491 1E42                                u8347 1B40  
                              u6860 4646                                u6780 44C6  
                              u6764 443A                                u7820 2AD0  
                              u7740 27E2                                u7660 2592  
                              u5980 0EE0                                u6940 2D2C  
                              u7580 21D0                                u7900 52FC  
                              u6861 4642                                u6781 44C2  
                              u8517 5030                                u6765 4436  
                              u8437 4776                                u7821 2ACC  
                              u7741 27DE                                u7661 258E  
                              u5981 0EDC                                u6941 2D28  
                              u8357 23CE                                u7581 21CC  
                              u7901 52F8                                u6870 4654  
                              u6790 44D4                                u6774 44A4  
                              u7830 2AF2                                u7750 2814  
                              u7670 25C4                                u5990 0F30  
                              u6950 2D72                                u7590 2274  
                              u7910 532C                                u6871 4650  
                              u6791 44D0                                u8527 5060  
                              u6775 44A0                                u8447 47BE  
                              u7831 2AEE                                u8367 2846  
                              u7751 2810                                u7671 25C0  
                              u5991 0F2C                                u6951 2D6E  
                              u7591 2270                                u7911 5328  
                              u7840 2B02                                u7760 28BA  
                              u7680 25F6                                u6960 2DD0  
                              u6880 2BA6                                u7920 533A  
                              u8537 5084                                u8457 5C4A  
                              u7841 2AFE                                u8377 2950  
                              u7761 28B6                                u7681 25F2  
                              u6961 2DCC                                u6881 2BA2  
                              u7921 5336                                u7850 2B54  
                              u7770 28EC                                u7690 264C  
                              u6970 2DF8                                u6890 2BF2  
                              u8547 50B6                                u8467 5B4C  
                              u7851 2B4E                                u8387 2A5C  
                              u7771 28E8                                u7691 2648  
                              u6971 2DF4                                u6891 2BEE  
                              u7860 2B56                                u7780 291E  
                              u6980 2E8A                                u8557 50DA  
                              u8477 5BDA                                u8397 2A84  
                              u7781 291A                                u6981 2E86  
                              u7790 29B0                                u6990 2F3C  
                              u8567 50FE                                u8487 4FC8  
                              u7791 29AC                                u6991 2F38  
                              u8497 4FF2                                u7890 52EE  
                              u7891 52EA                         main@current 00D2  
           __end_of_DCmotors_setPWM 44B4                                abs@a 0013  
                              _dbuf 015C                                _atoi 4814  
                              _main 5258                                _dtoa 3DEA  
                              _left 4668                                _prec 00F0  
                              _nout 00EC                                pad@i 0018  
                              pad@p 0015                                fsr0h 000FEA  
                              fsr1h 000FE2                                indf0 000FEF  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 001A  
                              fsr2l 000FD9                                _stoa 49B8  
                              _stop 5C12                       ___fpclassifyf 5568  
                              prodh 000FF4                                prodl 000FF3  
                              start 0000                    __end_of_ADC_init 6498  
                   ___fldiv@new_exp 0020                        _tolower$3222 000D  
                      ___param_bank 000000              ?_colourclick_readRGBC2 000E  
                             ??_abs 0015                               ??_pad 0017  
            ??_clicker2buttons_init 0001                       ___fltol@sign1 0009  
                   __end_of___aodiv 4CDE                               ?_atoi 0008  
                   __end_of___fladd 3626                               ?_main 0001  
                             ?_dtoa 001C                               ?_left 0038  
                   __end_of___aomod 4FB8                               _ADPCH 000F5F  
                   __end_of___fldiv 3DEA                     __end_of___awdiv 599C  
                   __end_of___flneg 631C                               STR_10 0E6D  
                             STR_11 0E01                               STR_20 0E9F  
                             STR_12 0E87                               STR_13 0E01  
                             STR_21 0EA7                               STR_30 0EB3  
                             STR_14 0E9A                               STR_15 0E01  
                             STR_24 0EA3                               STR_16 0E8E  
                             STR_17 0E01                               STR_25 0EAB  
                             STR_18 0E78                               STR_19 0E41  
                             STR_28 0EB3                     __end_of___awmod 5A4C  
                   __end_of___flmul 3A50                     __end_of___flsub 6170  
                   __end_of___fltol 5464                               ?_stoa 000A  
                             ?_stop 001A                     ___awdiv@divisor 0009  
           _colourclick_writetoaddr 641E                     ___awdiv@counter 000B  
                      vfpfcnvrt@fmt 004E             __end_of_sendCharSerial4 64B0  
        __end_of_I2C_2_Master_Start 6518          __end_of_I2C_2_Master_Write 64F8  
                             _flags 00F2                               _fputc 5748  
                   __end_of_forward 5C12                               _fputs 6170  
                   __end_of_isdigit 6354                colourclickLEDs_C@tog 0001  
                             _right 510E                               atoi@n 0015  
                             pad@fp 0011                               atoi@s 0008  
                             _width 00EE                               _putch 6534  
                             dtoa@d 001E                               dtoa@i 003E  
                 _clicker2LEDs_init 6522                               dtoa@n 0036  
                             dtoa@p 0030                               dtoa@s 0034  
                             dtoa@w 0032                               left@i 0043  
                   __end_of_isspace 5EAA                     __end_of_isupper 62E4  
                             tablat 000FF5                     __end_of_reverse 5B84  
                             plusw1 000FE3                               plusw2 000FDB  
            DCmotors_init@PWMperiod 0001                               stoa@i 0016  
                             stoa@l 001E                  ?_clicker2LEDs_init 0001  
                             stoa@p 001C                               stoa@s 000C  
                             stoa@w 0018                               status 000FD8  
                   __end_of_sprintf 5E58                      ?___fpclassifyf 0001  
                   __end_of_tolower 5D4A             _colourcards_testingRGBC 1B10  
                   __end_of_strncmp 5748               _I2C_2_Master_RepStart 6518  
                   __initialization 6236                 ??_clicker2LEDs_init 0001  
                      __end_of_atoi 49B8                        __end_of_main 535E  
                      __end_of_dtoa 40CE                        __end_of_left 4814  
                      __end_of_stoa 4B56                        __end_of_stop 5C84  
__size_of_colourcards_normaliseRGBC 0176       __size_of_colourcards_readRGBC 079C  
                            ??_atoi 000A                              ??_main 00D0  
                            ??_dtoa 0026                              ??_left 003E  
                            ??_stoa 000E                              ??_stop 001E  
                     __activetblptr 000003              ??_colourclick_readRGBC 000E  
         __end_of_clicker2LEDs_init 652C                     _colourcard_flag 00F8  
                            ?_fputc 0001                              ?_fputs 000A  
                            _ADRESH 000F64           __size_of_colourclick_init 0038  
                            ?_right 001A                    ___awdiv@dividend 0007  
                            ?_putch 0001                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                    ?_DCmotors_setPWM 000F  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                  __end_of___xxtofl 4668                        ??_ADC_getval 0001  
                      vfprintf@cfmt 005C                              ___flge 5464  
                            ___fleq 5A4C              colourcards_readRGBC@mL 004D  
            colourcards_readRGBC@mR 004F                           ??___aodiv 0011  
                         ??___fladd 0030                           ??___aomod 0011  
                            ___wmul 63D6                           ??___fldiv 0017  
                         ??___awdiv 000B                           ??___flneg 0005  
                         ??___awmod 0005                           ??___flmul 0017  
                         ??___flsub 0040                           ??___fltol 0005  
                            _efgtoa 0EB8                    ??_buggyLEDs_init 0001  
                            _floorf 40CE           ??_colourclick_writetoaddr 0004  
        colourcards_testingRGBC@abs 01CA                              clear_0 625C  
                            clear_1 6268          colourcards_testingRGBC@buf 01AC  
                  ___awdiv@quotient 000D          colourcards_testingRGBC@rel 01D2  
                   ___awmod@divisor 0003                              isa$std 000001  
                   ___awmod@counter 0005   __end_of_colourcards_normaliseRGBC 4E54  
                            pad@buf 0013                              dtoa@fp 001C  
                            left@mL 0038                              left@mR 003A  
                            _strcpy 5D4A                              _strlen 5EAA  
                            fputc@c 0001                              fputs@c 000E  
                            fputs@i 000F                              fputs@s 000A  
                         ??_forward 001E                           ??_isdigit 0003  
                   ___fpclassifyf@e 0009                     ___fpclassifyf@u 000B  
                   ___fpclassifyf@x 0001                              right@i 0024  
                      __mediumconst 0000                           ??_isspace 0003  
                            tblptrh 000FF7                           ??_isupper 0003  
                            tblptrl 000FF6                              tblptru 000FF8  
                         ?_ADC_init 0001                    ?_sendCharSerial4 0001  
                         ??_reverse 001E                              stoa@cp 001A  
                            stoa@fp 000A                              putch@c 0001  
                  __end_of_vfprintf 5CEA                              stop@mL 001A  
                            stop@mR 001C                           ??_sprintf 005E  
                         ??_tolower 0009                  __end_of_ADC_getval 64C8  
                      ?_USART4_init 0001                           ??_strncmp 0007  
         ??_colourcards_testingRGBC 005E                          ___flge@ff1 0028  
                        ___flge@ff2 002C                     ??___fpclassifyf 0005  
                      ___xxtofl@arg 000B                        ___xxtofl@exp 000A  
                      ___xxtofl@val 0001                          ___fleq@ff1 0001  
                        ___fleq@ff2 0005                    __end_of_turnleft 5F9A  
                        __accesstop 0060             __end_of__initialization 626E  
                        ___flneg@f1 0001              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                          ___fltol@f1 0001  
                    __pcstackCOMRAM 0001                        __pidataBANK1 652C  
                     __end_of_fputc 5812                       __end_of_fputs 61B4  
                     __end_of_right 5258                       __end_of_putch 6536  
     checkbatterylevel@batterylevel 0002                          ??_ADC_init 0001  
        __size_of_clicker2LEDs_init 000A                             ??_fputc 0005  
                           ??_fputs 000E                             ??_right 0020  
     __size_of_colourclickLEDs_init 000E                             ??_putch 0001  
   __end_of_colourclick_writetoaddr 643E                          __pbssBANK0 00EC  
                        __pbssBANK1 0100                   _checkbatterylevel 643E  
           ??_colourclick_readRGBC2 0011                  ?_checkbatterylevel 0001  
                      _T2CLKCONbits 000FBF                             ?___flge 0028  
                           ?___fleq 0001                             ?___wmul 0001  
                           ?_efgtoa 0040     __end_of_colourcards_testingRGBC 23E2  
               ??_checkbatterylevel 0002                             ?_floorf 0028  
                           ?_strcpy 0001                             ?_strlen 0001  
                         ?___xxtofl 0001                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                  __size_of_vfpfcnvrt 05E8  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
                  _colourclick_init 6274           __end_of_checkbatterylevel 645E  
            __size_of_DCmotors_init 0050                           _ADREFbits 000F58  
                _I2C_2_Master_Start 650E                  _I2C_2_Master_Write 64EC  
                           __Hparam 0000                  __size_of_turnright 0050  
                           __Lparam 0000             sendStringSerial4@string 0002  
                   __size_of___flge 0104                     __size_of___fleq 00AA  
                           ___aodiv 4B56                             ___fladd 3166  
                           ___aomod 4E54                             ___fldiv 3A50  
                           ___awdiv 58D8                             ___flneg 62E4  
           colourcards_readRGBC@abs 004B                             ___awmod 599C  
                           ___flmul 3626                             ___flsub 612A  
                           ___fltol 535E             colourcards_readRGBC@rel 0053  
                   __size_of___wmul 0026                 ?_I2C_2_Master_Start 0001  
               ?_I2C_2_Master_Write 0001                           ?_vfprintf 0056  
                      __psmallconst 0E00                     __size_of_efgtoa 0C58  
                   __size_of_floorf 0212                             __pcinit 6236  
                           __ramtop 0E00                             __ptext0 5258  
                           __ptext1 6274                             __ptext2 641E  
                           __ptext3 64DE                             __ptext4 6384  
                           __ptext5 1B10                             __ptext6 5E06  
                           __ptext7 5C84                             __ptext8 2B7E  
                           __ptext9 5666       __size_of_clicker2buttons_init 000C  
                         ?_turnleft 0045                     __size_of_strcpy 005E  
                   __size_of_strlen 0050                           _T2CONbits 000FBD  
                      __size_of_abs 0040                        __size_of_pad 00C6  
                           _forward 5B84                             _isdigit 631C  
                        ??___xxtofl 0005                    ___awmod@dividend 0001  
                           _isspace 5E58                           _T2HLTbits 000FBE  
                           _isupper 62AC                             efgtoa@c 0046  
                           efgtoa@d 0078                             efgtoa@e 0090  
                           efgtoa@f 0042                             efgtoa@g 008C  
                           efgtoa@h 0082                             efgtoa@i 008A  
                           efgtoa@l 0086                             efgtoa@m 0072  
                           efgtoa@n 0092                             efgtoa@p 007C  
                           efgtoa@t 006C                             efgtoa@u 0094  
                           efgtoa@w 007E                             _reverse 5AF6  
                     _RxBufWriteCnt 00FC                             atoi@neg 000E  
                           _sprintf 5E06                             _tolower 5CEA  
              ??_I2C_2_Master_Start 0002                             left@deg 003C  
              ??_I2C_2_Master_Write 0002                             _strncmp 5666  
              end_of_initialization 626E        __end_of_colourcards_readRGBC 2B7E  
                           floorf@e 0036                             floorf@m 0032  
                           floorf@u 0038                             floorf@x 0028  
                  ADC_getval@tmpval 0001                             fputc@fp 0003  
              __size_of_USART4_init 0020                             fputs@fp 000C  
                           right@mL 001A                             right@mR 001C  
                 __end_of_vfpfcnvrt 3166                          efgtoa@mode 0081  
                        efgtoa@sign 007A                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
                        ??_vfprintf 005C        colourclick_writetoaddr@value 0003  
                           strcpy@d 0009                             strlen@a 0003  
                           strcpy@s 0007                             strlen@s 0001  
                     _DCmotors_init 60DA                           _PORTFbits 000F8E  
                        ??_turnleft 004B                         ___fladd@grs 0037  
                     ___xxtofl@sign 0009                           _TRISAbits 000F81  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                   __end_of_turnright 5F4A  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 0022  
                       ___fldiv@rem 001B       __size_of_colourclick_readRGBC 005E  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 0002  
              colourclick_readB@tmp 000A                colourclick_readC@tmp 000A  
        __size_of_checkbatterylevel 0020                colourclick_readG@tmp 000A  
                       _CM1CON0bits 000ED0                         _CM1CON1bits 000ED1  
              colourclick_readR@tmp 000A                         ___flmul@grs 001C  
                      _EUSART4RXbuf 013C                        _EUSART4TXbuf 0100  
         sendCharSerial4@charToSend 0001                          main@motorL 00DA  
                        main@motorR 00E3            __size_of_DCmotors_setPWM 01D4  
                    __end_of___flge 5568          colourclick_readRGBC@tmpval 000C  
                    __end_of___fleq 5AF6                      ?_DCmotors_init 0001  
                       vfpfcnvrt@ap 0050                         vfpfcnvrt@cp 00A0  
                       vfpfcnvrt@ct 00AA                         vfpfcnvrt@fp 004C  
                       vfpfcnvrt@ll 0098                      __end_of___wmul 63FC  
                    __end_of_efgtoa 1B10                      __end_of_floorf 42E0  
                        floorf@F527 0150          ?_colourcards_normaliseRGBC 0028  
                    __end_of_strcpy 5DA8                      __end_of_strlen 5EFA  
               start_initialization 6236                         __end_of_abs 6236  
                       __end_of_pad 58D8                       _TxBufWriteCnt 00FA  
                  _unknowncard_flag 00F7                     _returnhome_flag 00F6  
          __size_of_sendCharSerial4 0018               __end_of___fpclassifyf 5666  
                      turnright@deg 0049      __size_of_colourclick_readRGBC2 0156  
     __end_of_colourclick_readRGBC2 510E                         vfprintf@fmt 0058  
          ?_colourclick_writetoaddr 0003          colourcards_normaliseRGBC@B 0030  
        colourcards_normaliseRGBC@C 0032          colourcards_normaliseRGBC@G 002E  
        colourcards_normaliseRGBC@R 002C                            ??___flge 0030  
                          ??___fleq 0009        __end_of_colourclickLEDs_init 64EC  
                          ??___wmul 0005            __end_of_colourclick_init 62AC  
                          ??_efgtoa 0047                         __pdataBANK1 01DE  
                          ??_floorf 002C                _colourcards_readRGBC 23E2  
                          ??_strcpy 0005                            ??_strlen 0003  
                         ___fladd@a 002C                           ___fladd@b 0028  
                         ___fldiv@a 0013                           ___fldiv@b 000F  
                         ___flmul@a 0013                           ___flmul@b 000F  
                         ___flsub@a 003C                           ___flsub@b 0038  
                     __pcstackBANK0 0060                       __pcstackBANK1 01AC  
          ?_colourcards_testingRGBC 0001                    ___aodiv@dividend 0001  
           __size_of_buggyLEDs_init 0016                   __size_of___xxtofl 01B4  
                         _atoi$3130 0012                           _atoi$3128 0010  
                         _atoi$3129 0014                           __pnvBANK0 00FD  
                         __pnvBANK1 01E5                         _efgtoa$3050 0060  
                       _efgtoa$3051 0062                         _efgtoa$3060 0068  
                       _efgtoa$3061 006A                         _efgtoa$3055 0064  
                       _efgtoa$3059 0066                           _dtoa$3026 002E  
                       _clear_lower 015A                         _clear_upper 0158  
                   ??_DCmotors_init 0001                            ?___aodiv 0001  
                          ?___fladd 0028                            ?___aomod 0001  
                          ?___fldiv 000F                            ?___awdiv 0007  
                  ___aodiv@quotient 0013                            ?___flneg 0001  
                          ?___awmod 0001                            ?___flmul 000F  
                          ?___flsub 0038                            ?___fltol 0001  
             ?_colourcards_readRGBC 004B                          right@delay 0022  
              I2C_2_Master_Read@ack 0003                   __size_of_vfprintf 0066  
                 ??_DCmotors_setPWM 0011                I2C_2_Master_Read@tmp 0004  
             _interrupts_lowerbound 00F4                         __smallconst 0E00  
                          ?_forward 001A                            ?_isdigit 0001  
                 _I2C_2_Master_Idle 63AE                   _I2C_2_Master_Init 6384  
                 _I2C_2_Master_Read 61B4                   _I2C_2_Master_Stop 6504  
                          ?_isspace 0001                   __size_of_turnleft 0050  
                          ?_isupper 0001                        _RxBufReadCnt 00FB  
                          _ADC_init 647E                            ?_reverse 001A  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                  ?_I2C_2_Master_Stop 0001  
                          ?_sprintf 00AE                            ?_tolower 0007  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
                          ?_strncmp 0001                      __size_of_right 014A  
                    __size_of_putch 0002        __end_of_clicker2buttons_init 6504  
                 _sendStringSerial4 6354                 ??_I2C_2_Master_Idle 0001  
               ??_I2C_2_Master_Init 0001                 ??_I2C_2_Master_Read 0002  
                    ___wmul@product 0005                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 0002                            _LATCbits 000F7B  
                 _colourclickLEDs_C 63FC                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _PIE0bits 000E29                  ?_sendStringSerial4 0002  
                          _PIE4bits 000E2D                  ?_colourclickLEDs_C 0001  
                          _PIR0bits 000E33                            _PIR4bits 000E37  
                 ??_sendCharSerial4 0001                            _SSP2CON2 000EDA  
               ??_sendStringSerial4 0004              DCmotors_setPWM@PWMduty 0018  
                          _SSP2STAT 000ED8                 ??_colourclickLEDs_C 0001  
                 _colourclick_readB 608A                   _colourclick_readC 603A  
                 _colourclick_readG 5FEA                   _colourclick_readR 5F9A  
                         _vfpfcnvrt 2B7E                          _ADCON0bits 000F60  
         __end_of_I2C_2_Master_Idle 63D6           __end_of_I2C_2_Master_Init 63AE  
         __end_of_I2C_2_Master_Read 61F6                   ___wmul@multiplier 0001  
                ?_colourclick_readB 0005                  ?_colourclick_readC 0005  
                ?_colourclick_readG 0005                  ?_colourclick_readR 0005  
         __end_of_I2C_2_Master_Stop 650E               _interrupts_upperbound 00FD  
       I2C_2_Master_Write@data_byte 0002                   _DCmotors_turntime 01E5  
                         left@delay 003F                        _TxBufReadCnt 00F9  
                      _isspace$3159 0007                          _CM1NCHbits 000ED2  
               ??_colourclick_readB 0007                 ??_colourclick_readC 0007  
               ??_colourclick_readG 0007                 ??_colourclick_readR 0007  
                        _CM1PCHbits 000ED3                          vfpfcnvrt@c 00AD  
                        vfpfcnvrt@f 00A6                       ??_USART4_init 0001  
                         copy_data0 624A           __end_of_sendStringSerial4 6384  
       __size_of_I2C_2_Master_Start 000A                _colourclickLEDs_init 64DE  
       __size_of_I2C_2_Master_Write 000C                           _turnright 5EFA  
         __end_of_colourclickLEDs_C 641E                         turnleft@deg 0049  
    __size_of_I2C_2_Master_RepStart 000A       __end_of_I2C_2_Master_RepStart 6522  
                          __Hrparam 0000                         turnright@mL 0045  
                       turnright@mR 0047                          _ADC_getval 64B0  
      __end_of_colourclick_readRGBC 5E06                          vfprintf@ap 005A  
                          __Lrparam 0000                          vfprintf@fp 0056  
         __end_of_colourclick_readB 60DA           __end_of_colourclick_readC 608A  
         __end_of_colourclick_readG 603A           __end_of_colourclick_readR 5FEA  
                         forward@mL 001A                           forward@mR 001C  
            ??_colourcards_readRGBC 0051                    __size_of___aodiv 0188  
                  __size_of___fladd 04C0                    __size_of___aomod 0164  
                  __size_of___fldiv 039A                    __size_of___awdiv 00C4  
                  __size_of___flneg 0038                    __size_of___awmod 00B0  
                  __size_of___flmul 042A                    __size_of___flsub 0046  
                  __size_of___fltol 0106                          ?_vfpfcnvrt 004C  
                   ___aodiv@divisor 0009                     ___aodiv@counter 0011  
                        _ANSELDbits 000EA7                  ___fpclassifyf@F465 0154  
                        _ANSELFbits 000EB4         ??_colourcards_normaliseRGBC 002C  
                        sprintf@fmt 00B0                            ___xxtofl 44B4  
                    _buggyLEDs_init 64C8                    __size_of_forward 008E  
                  __size_of_isdigit 0038                    __size_of_isspace 0052  
                          __ptext10 49B8                            __ptext11 0EB8  
                          __ptext20 5A4C                            __ptext12 5CEA  
                          __ptext21 599C                            __ptext13 62AC  
                          __ptext30 4B56                            __ptext22 3DEA  
                          __ptext14 5D4A                            __ptext31 4814  
                          __ptext23 5812                            __ptext15 40CE  
                          __ptext40 4668                            __ptext32 5E58  
                          __ptext24 5EAA                            __ptext16 5568  
                          __ptext41 3626                            __ptext33 631C  
                          __ptext25 6170                            __ptext17 535E  
                          __ptext50 4FB8                            __ptext42 5464  
                          __ptext34 6354                            __ptext26 5748  
                          __ptext18 612A                            __ptext51 5DA8  
                          __ptext43 3166                            __ptext35 6498  
                          __ptext27 6534                            __ptext19 62E4  
                          __ptext60 61B4                            __ptext52 5F9A  
                          __ptext44 5C12                            __ptext36 23E2  
                          __ptext28 61F6                            __ptext61 63AE  
                          __ptext53 5FEA                            __ptext45 5AF6  
                          __ptext37 5EFA                            __ptext29 4E54  
                          __ptext70 64F8                            __ptext62 63FC  
                          __ptext54 603A                            __ptext46 5B84  
                          __ptext38 5F4A                            __ptext71 6522  
                          __ptext63 4CDE                            __ptext55 608A  
                          __ptext47 42E0                            __ptext39 510E  
                          __ptext72 64C8                            __ptext64 44B4  
                          __ptext56 64EC                            __ptext48 63D6  
                          __ptext73 647E                            __ptext65 3A50  
                          __ptext57 6504                            __ptext49 58D8  
                          __ptext66 643E                            __ptext58 650E  
                          __ptext67 64B0                            __ptext59 6518  
                          __ptext68 645E                            __ptext69 60DA  
                  __size_of_isupper 0038                    __size_of_reverse 008E  
             ?_colourclickLEDs_init 0001                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                    __size_of_sprintf 0052  
                  __size_of_tolower 0060                          ?_turnright 0045  
                        strcpy@dest 0001                    __size_of_strncmp 00E2  
                     __size_of_atoi 01A4                       __size_of_main 0106  
                     __size_of_dtoa 02E4                       __size_of_left 01AC  
                     __size_of_stoa 019E                       __size_of_stop 0072  
               __end_of_USART4_init 647E                           reverse@mL 001A  
                         reverse@mR 001C                            efgtoa@fp 0040  
                          efgtoa@ne 0070                            efgtoa@pp 006E  
                          efgtoa@ou 0074                           stoa@F1163 01DE  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          _vfprintf 5C84                   ?_colourclick_init 0001  
                ??_colourclick_init 0005          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
                  ___aomod@dividend 0001                    DCmotors_setPWM@m 000F  
              _clicker2buttons_init 64F8          __size_of_I2C_2_Master_Stop 000A  
                          _turnleft 5F4A                          turnleft@mL 0045  
                        turnleft@mR 0047              __end_of_buggyLEDs_init 64DE  
                    _vfpfcnvrt$3091 00A4                      _vfpfcnvrt$3086 00A2  
                        _INTCONbits 000FF2    __size_of_colourclick_writetoaddr 0020  
    colourclick_writetoaddr@address 0004                            isdigit@c 0001  
                       _PWM6CONbits 000FA4          __size_of_sendStringSerial4 0030  
                       _PWM7CONbits 000FA1          __size_of_colourclickLEDs_C 0022  
                         sprintf@ap 00C8                        _DAC1CON0bits 000EC6  
                      _DAC1CON1bits 000EC7                            isspace@c 0001  
                          right@deg 001E           _colourcards_normaliseRGBC 4CDE  
                         strcpy@src 0003                            isupper@c 0001  
  __size_of_colourcards_testingRGBC 08D2                           strncmp@_l 0001  
                         strncmp@_r 0003                     _DCmotors_setPWM 42E0  
                       ?_ADC_getval 0001                         efgtoa@nmode 0080  
        __size_of_colourclick_readB 0050          __size_of_colourclick_readC 0050  
        __size_of_colourclick_readG 0050          __size_of_colourclick_readR 0050  
             _colourclick_readRGBC2 4FB8                     ___aomod@divisor 0009  
                       ??_vfpfcnvrt 0052                            stoa@nuls 000F  
                   ___aomod@counter 0011               ?_clicker2buttons_init 0001  
         colourclick_readRGBC2@mode 0010                            sprintf@f 00CA  
                          tolower@c 0007                            sprintf@s 00AE  
                   ?_buggyLEDs_init 0001              __size_of___fpclassifyf 00FE  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                          strncmp@l 0008                            strncmp@n 0005  
                          strncmp@r 000A              ??_colourclickLEDs_init 0002  
              _colourclick_readRGBC 5DA8                       ___fladd@signs 0034  
                       _USART4_init 645E                          _TX4STAbits 000EE8  
                       ??_turnright 004B                        ___aodiv@sign 0012  
                   _sendCharSerial4 6498                        ___fladd@aexp 0035  
                      ___fladd@bexp 0036                        ___aomod@sign 0012  
      colourcards_normaliseRGBC@abs 0028  
