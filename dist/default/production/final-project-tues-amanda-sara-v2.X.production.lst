

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 13 02:58:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 05/05/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94 ;; Function _abs is unused but had its address taken
    95  0000                     
    96                           	psect	nvCOMRAM
    97  000057                     __pnvCOMRAM:
    98                           	callstack 0
    99  000057                     _interrupts_upperbound:
   100                           	callstack 0
   101  000057                     	ds	2
   102                           
   103                           	psect	nvBANK0
   104  0000CA                     __pnvBANK0:
   105                           	callstack 0
   106  0000CA                     _DCmotors_turntime:
   107                           	callstack 0
   108  0000CA                     	ds	2
   109  0000                     _CM1CON1bits	set	3793
   110  0000                     _CM1CON0bits	set	3792
   111  0000                     _CM1PCHbits	set	3795
   112  0000                     _CM1NCHbits	set	3794
   113  0000                     _DAC1CON1bits	set	3783
   114  0000                     _DAC1CON0bits	set	3782
   115  0000                     _RC7PPS	set	3689
   116  0000                     _RE2PPS	set	3700
   117  0000                     _PIE4bits	set	3629
   118  0000                     _TX4REG	set	3812
   119  0000                     _RC4REG	set	3811
   120  0000                     _PIR4bits	set	3639
   121  0000                     _RC4STAbits	set	3815
   122  0000                     _SP4BRGH	set	3814
   123  0000                     _SP4BRGL	set	3813
   124  0000                     _TX4STAbits	set	3816
   125  0000                     _BAUD4CONbits	set	3817
   126  0000                     _RX4PPS	set	3605
   127  0000                     _RC0PPS	set	3682
   128  0000                     _SSP2BUF	set	3797
   129  0000                     _SSP2CON2bits	set	3802
   130  0000                     _SSP2CON2	set	3802
   131  0000                     _SSP2STAT	set	3800
   132  0000                     _RD6PPS	set	3696
   133  0000                     _RD5PPS	set	3695
   134  0000                     _SSP2CLKPPS	set	3612
   135  0000                     _SSP2DATPPS	set	3613
   136  0000                     _ANSELDbits	set	3751
   137  0000                     _SSP2ADD	set	3798
   138  0000                     _SSP2CON1bits	set	3801
   139  0000                     _ANSELFbits	set	3764
   140  0000                     _PIR0bits	set	3635
   141  0000                     _PIE0bits	set	3625
   142  0000                     _ADPCH	set	3935
   143  0000                     _ADREFbits	set	3928
   144  0000                     _PWM7CONbits	set	4001
   145  0000                     _PWM6CONbits	set	4004
   146  0000                     _LATCbits	set	3963
   147  0000                     _LATEbits	set	3965
   148  0000                     _TRISEbits	set	3973
   149  0000                     _T2PR	set	4028
   150  0000                     _T2CLKCONbits	set	4031
   151  0000                     _T2HLTbits	set	4030
   152  0000                     _T2CONbits	set	4029
   153  0000                     _TRISCbits	set	3971
   154  0000                     _TRISAbits	set	3969
   155  0000                     _TRISGbits	set	3975
   156  0000                     _TRISHbits	set	3976
   157  0000                     _TRISDbits	set	3972
   158  0000                     _ADRESH	set	3940
   159  0000                     _ADCON0bits	set	3936
   160  0000                     _TRISFbits	set	3974
   161  0000                     _LATFbits	set	3966
   162  0000                     _LATAbits	set	3961
   163  0000                     _LATGbits	set	3967
   164  0000                     _INTCONbits	set	4082
   165  0000                     _LATHbits	set	3968
   166  0000                     _LATDbits	set	3964
   167  0000                     _PORTFbits	set	3982
   168  0000                     _LATG	set	3967
   169  0000                     _PWM7DCH	set	4000
   170  0000                     _LATE	set	3965
   171  0000                     _PWM6DCH	set	4003
   172                           
   173                           	psect	smallconst
   174  000E00                     __psmallconst:
   175                           	callstack 0
   176  000E00  00                 	db	0
   177  000E01                     STR_1:
   178                           
   179                           ; BSR set to: 15
   180  000E01  52                 	db	82	;'R'
   181  000E02  47                 	db	71	;'G'
   182  000E03  42                 	db	66	;'B'
   183  000E04  43                 	db	67	;'C'
   184  000E05  3A                 	db	58	;':'
   185  000E06  20                 	db	32
   186  000E07  25                 	db	37
   187  000E08  69                 	db	105	;'i'
   188  000E09  20                 	db	32
   189  000E0A  25                 	db	37
   190  000E0B  69                 	db	105	;'i'
   191  000E0C  20                 	db	32
   192  000E0D  25                 	db	37
   193  000E0E  69                 	db	105	;'i'
   194  000E0F  20                 	db	32
   195  000E10  25                 	db	37
   196  000E11  69                 	db	105	;'i'
   197  000E12  20                 	db	32
   198  000E13  20                 	db	32
   199  000E14  20                 	db	32
   200  000E15  20                 	db	32
   201  000E16  20                 	db	32
   202  000E17  52                 	db	82	;'R'
   203  000E18  47                 	db	71	;'G'
   204  000E19  42                 	db	66	;'B'
   205  000E1A  43                 	db	67	;'C'
   206  000E1B  5F                 	db	95	;'_'
   207  000E1C  72                 	db	114	;'r'
   208  000E1D  65                 	db	101	;'e'
   209  000E1E  6C                 	db	108	;'l'
   210  000E1F  3A                 	db	58	;':'
   211  000E20  20                 	db	32
   212  000E21  25                 	db	37
   213  000E22  2E                 	db	46
   214  000E23  33                 	db	51	;'3'
   215  000E24  66                 	db	102	;'f'
   216  000E25  20                 	db	32
   217  000E26  25                 	db	37
   218  000E27  2E                 	db	46
   219  000E28  33                 	db	51	;'3'
   220  000E29  66                 	db	102	;'f'
   221  000E2A  20                 	db	32
   222  000E2B  25                 	db	37
   223  000E2C  2E                 	db	46
   224  000E2D  33                 	db	51	;'3'
   225  000E2E  66                 	db	102	;'f'
   226  000E2F  20                 	db	32
   227  000E30  20                 	db	32
   228  000E31  20                 	db	32
   229  000E32  20                 	db	32
   230  000E33  20                 	db	32
   231  000E34  43                 	db	67	;'C'
   232  000E35  6F                 	db	111	;'o'
   233  000E36  6C                 	db	108	;'l'
   234  000E37  6F                 	db	111	;'o'
   235  000E38  75                 	db	117	;'u'
   236  000E39  72                 	db	114	;'r'
   237  000E3A  3A                 	db	58	;':'
   238  000E3B  20                 	db	32
   239  000E3C  25                 	db	37
   240  000E3D  73                 	db	115	;'s'
   241  000E3E  0A                 	db	10
   242  000E3F  0D                 	db	13
   243  000E40  00                 	db	0
   244  000E41                     
   245                           ; BSR set to: 15
   246  000E41  52                 	db	82	;'R'
   247  000E42  47                 	db	71	;'G'
   248  000E43  42                 	db	66	;'B'
   249  000E44  43                 	db	67	;'C'
   250  000E45  3A                 	db	58	;':'
   251  000E46  20                 	db	32
   252  000E47  25                 	db	37
   253  000E48  69                 	db	105	;'i'
   254  000E49  20                 	db	32
   255  000E4A  25                 	db	37
   256  000E4B  69                 	db	105	;'i'
   257  000E4C  20                 	db	32
   258  000E4D  25                 	db	37
   259  000E4E  69                 	db	105	;'i'
   260  000E4F  20                 	db	32
   261  000E50  25                 	db	37
   262  000E51  69                 	db	105	;'i'
   263  000E52  20                 	db	32
   264  000E53  20                 	db	32
   265  000E54  20                 	db	32
   266  000E55  20                 	db	32
   267  000E56  20                 	db	32
   268  000E57  54                 	db	84	;'T'
   269  000E58  68                 	db	104	;'h'
   270  000E59  72                 	db	114	;'r'
   271  000E5A  65                 	db	101	;'e'
   272  000E5B  73                 	db	115	;'s'
   273  000E5C  68                 	db	104	;'h'
   274  000E5D  6F                 	db	111	;'o'
   275  000E5E  6C                 	db	108	;'l'
   276  000E5F  64                 	db	100	;'d'
   277  000E60  3A                 	db	58	;':'
   278  000E61  20                 	db	32
   279  000E62  25                 	db	37
   280  000E63  69                 	db	105	;'i'
   281  000E64  20                 	db	32
   282  000E65  25                 	db	37
   283  000E66  69                 	db	105	;'i'
   284  000E67  20                 	db	32
   285  000E68  25                 	db	37
   286  000E69  69                 	db	105	;'i'
   287  000E6A  0A                 	db	10
   288  000E6B  0D                 	db	13
   289  000E6C  00                 	db	0
   290  000E6D                     STR_10:
   291                           
   292                           ; BSR set to: 15
   293  000E6D  6C                 	db	108	;'l'
   294  000E6E  69                 	db	105	;'i'
   295  000E6F  67                 	db	103	;'g'
   296  000E70  68                 	db	104	;'h'
   297  000E71  74                 	db	116	;'t'
   298  000E72  20                 	db	32
   299  000E73  62                 	db	98	;'b'
   300  000E74  6C                 	db	108	;'l'
   301  000E75  75                 	db	117	;'u'
   302  000E76  65                 	db	101	;'e'
   303  000E77  00                 	db	0
   304  000E78                     
   305                           ; BSR set to: 15
   306  000E78  75                 	db	117	;'u'
   307  000E79  6E                 	db	110	;'n'
   308  000E7A  6B                 	db	107	;'k'
   309  000E7B  6E                 	db	110	;'n'
   310  000E7C  6F                 	db	111	;'o'
   311  000E7D  77                 	db	119	;'w'
   312  000E7E  6E                 	db	110	;'n'
   313  000E7F  00                 	db	0
   314  000E80                     
   315                           ; BSR set to: 15
   316  000E80  6F                 	db	111	;'o'
   317  000E81  72                 	db	114	;'r'
   318  000E82  61                 	db	97	;'a'
   319  000E83  6E                 	db	110	;'n'
   320  000E84  67                 	db	103	;'g'
   321  000E85  65                 	db	101	;'e'
   322  000E86  00                 	db	0
   323  000E87                     
   324                           ; BSR set to: 15
   325  000E87  79                 	db	121	;'y'
   326  000E88  65                 	db	101	;'e'
   327  000E89  6C                 	db	108	;'l'
   328  000E8A  6C                 	db	108	;'l'
   329  000E8B  6F                 	db	111	;'o'
   330  000E8C  77                 	db	119	;'w'
   331  000E8D  00                 	db	0
   332  000E8E                     
   333                           ; BSR set to: 15
   334  000E8E  77                 	db	119	;'w'
   335  000E8F  68                 	db	104	;'h'
   336  000E90  69                 	db	105	;'i'
   337  000E91  74                 	db	116	;'t'
   338  000E92  65                 	db	101	;'e'
   339  000E93  00                 	db	0
   340  000E94                     
   341                           ; BSR set to: 15
   342  000E94  67                 	db	103	;'g'
   343  000E95  72                 	db	114	;'r'
   344  000E96  65                 	db	101	;'e'
   345  000E97  65                 	db	101	;'e'
   346  000E98  6E                 	db	110	;'n'
   347  000E99  00                 	db	0
   348  000E9A                     
   349                           ; BSR set to: 15
   350  000E9A  70                 	db	112	;'p'
   351  000E9B  69                 	db	105	;'i'
   352  000E9C  6E                 	db	110	;'n'
   353  000E9D  6B                 	db	107	;'k'
   354  000E9E  00                 	db	0
   355  000E9F                     
   356                           ; BSR set to: 15
   357  000E9F  72                 	db	114	;'r'
   358  000EA0  65                 	db	101	;'e'
   359  000EA1  64                 	db	100	;'d'
   360  000EA2  00                 	db	0
   361  000EA3  00                 	db	0	; dummy byte at the end
   362  0000                     
   363                           ; #config settings
   364                           
   365                           	psect	cinit
   366  0029CA                     __pcinit:
   367                           	callstack 0
   368  0029CA                     start_initialization:
   369                           	callstack 0
   370  0029CA                     __initialization:
   371                           	callstack 0
   372                           
   373                           ; Clear objects allocated to BANK0 (80 bytes)
   374  0029CA  EE00  F060         	lfsr	0,__pbssBANK0
   375  0029CE  0E50               	movlw	80
   376  0029D0                     clear_0:
   377  0029D0  6AEE               	clrf	postinc0,c
   378  0029D2  06E8               	decf	wreg,f,c
   379  0029D4  E1FD               	bnz	clear_0
   380                           
   381                           ; Clear objects allocated to COMRAM (13 bytes)
   382  0029D6  EE00  F04A         	lfsr	0,__pbssCOMRAM
   383  0029DA  0E0D               	movlw	13
   384  0029DC                     clear_1:
   385  0029DC  6AEE               	clrf	postinc0,c
   386  0029DE  06E8               	decf	wreg,f,c
   387  0029E0  E1FD               	bnz	clear_1
   388  0029E2                     end_of_initialization:
   389                           	callstack 0
   390  0029E2                     __end_of__initialization:
   391                           	callstack 0
   392  0029E2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   393  0029E4  6EF8               	movwf	tblptru,c
   394  0029E6  0E0E               	movlw	high __Lsmallconst
   395  0029E8  6EF7               	movwf	tblptrh,c
   396  0029EA  0100               	movlb	0
   397  0029EC  EF94  F010         	goto	_main	;jump to C main() function
   398                           
   399                           	psect	bssCOMRAM
   400  00004A                     __pbssCOMRAM:
   401                           	callstack 0
   402  00004A                     _clear_upper:
   403                           	callstack 0
   404  00004A                     	ds	2
   405  00004C                     _clear_lower:
   406                           	callstack 0
   407  00004C                     	ds	2
   408  00004E                     _interrupts_lowerbound:
   409                           	callstack 0
   410  00004E                     	ds	2
   411  000050                     _returnhome_flag:
   412                           	callstack 0
   413  000050                     	ds	1
   414  000051                     _unknowncard_flag:
   415                           	callstack 0
   416  000051                     	ds	1
   417  000052                     _colourcard_flag:
   418                           	callstack 0
   419  000052                     	ds	1
   420  000053                     _TxBufReadCnt:
   421                           	callstack 0
   422  000053                     	ds	1
   423  000054                     _TxBufWriteCnt:
   424                           	callstack 0
   425  000054                     	ds	1
   426  000055                     _RxBufReadCnt:
   427                           	callstack 0
   428  000055                     	ds	1
   429  000056                     _RxBufWriteCnt:
   430                           	callstack 0
   431  000056                     	ds	1
   432                           
   433                           	psect	bssBANK0
   434  000060                     __pbssBANK0:
   435                           	callstack 0
   436  000060                     _EUSART4TXbuf:
   437                           	callstack 0
   438  000060                     	ds	60
   439  00009C                     _EUSART4RXbuf:
   440                           	callstack 0
   441  00009C                     	ds	20
   442                           
   443                           	psect	cstackBANK0
   444  0000B0                     __pcstackBANK0:
   445                           	callstack 0
   446  0000B0                     main@current:
   447                           	callstack 0
   448                           
   449                           ; 8 bytes @ 0x0
   450  0000B0                     	ds	8
   451  0000B8                     main@motorL:
   452                           	callstack 0
   453                           
   454                           ; 9 bytes @ 0x8
   455  0000B8                     	ds	9
   456  0000C1                     main@motorR:
   457                           	callstack 0
   458                           
   459                           ; 9 bytes @ 0x11
   460  0000C1                     	ds	9
   461                           
   462                           	psect	cstackCOMRAM
   463  000001                     __pcstackCOMRAM:
   464                           	callstack 0
   465  000001                     ??_I2C_2_Master_Idle:
   466  000001                     ?___wmul:
   467                           	callstack 0
   468  000001                     ?___xxtofl:
   469                           	callstack 0
   470  000001                     ADC_getval@tmpval:
   471                           	callstack 0
   472  000001                     colourclickLEDs_C@tog:
   473                           	callstack 0
   474  000001                     DCmotors_init@PWMperiod:
   475                           	callstack 0
   476  000001                     ___wmul@multiplier:
   477                           	callstack 0
   478  000001                     ___flge@ff1:
   479                           	callstack 0
   480  000001                     ___xxtofl@val:
   481                           	callstack 0
   482                           
   483                           ; 4 bytes @ 0x0
   484  000001                     	ds	1
   485  000002                     ??_I2C_2_Master_Read:
   486  000002                     I2C_2_Master_Write@data_byte:
   487                           	callstack 0
   488  000002                     checkbatterylevel@batterylevel:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x1
   492  000002                     	ds	1
   493  000003                     colourclick_writetoaddr@value:
   494                           	callstack 0
   495  000003                     I2C_2_Master_Read@ack:
   496                           	callstack 0
   497  000003                     ___wmul@multiplicand:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x2
   501  000003                     	ds	1
   502  000004                     colourclick_writetoaddr@address:
   503                           	callstack 0
   504  000004                     I2C_2_Master_Read@tmp:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x3
   508  000004                     	ds	1
   509  000005                     ??_colourclick_init:
   510  000005                     ??___xxtofl:
   511  000005                     ?_colourclick_readR:
   512                           	callstack 0
   513  000005                     ?_colourclick_readG:
   514                           	callstack 0
   515  000005                     ?_colourclick_readB:
   516                           	callstack 0
   517  000005                     ?_colourclick_readC:
   518                           	callstack 0
   519  000005                     ___wmul@product:
   520                           	callstack 0
   521  000005                     ___flge@ff2:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0x4
   525  000005                     	ds	2
   526  000007                     ??_colourclick_readR:
   527  000007                     ??_colourclick_readG:
   528  000007                     ??_colourclick_readB:
   529  000007                     ??_colourclick_readC:
   530  000007                     ?___awdiv:
   531                           	callstack 0
   532  000007                     ___awdiv@dividend:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x6
   536  000007                     	ds	2
   537  000009                     ??___flge:
   538  000009                     ___xxtofl@sign:
   539                           	callstack 0
   540  000009                     ___awdiv@divisor:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x8
   544  000009                     	ds	1
   545  00000A                     ___xxtofl@exp:
   546                           	callstack 0
   547  00000A                     colourclick_readR@tmp:
   548                           	callstack 0
   549  00000A                     colourclick_readG@tmp:
   550                           	callstack 0
   551  00000A                     colourclick_readB@tmp:
   552                           	callstack 0
   553  00000A                     colourclick_readC@tmp:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x9
   557  00000A                     	ds	1
   558  00000B                     ___awdiv@counter:
   559                           	callstack 0
   560  00000B                     ___xxtofl@arg:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0xA
   564  00000B                     	ds	1
   565  00000C                     ___awdiv@sign:
   566                           	callstack 0
   567  00000C                     colourclick_readRGBC@tmpval:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0xB
   571  00000C                     	ds	1
   572  00000D                     ___awdiv@quotient:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0xC
   576  00000D                     	ds	1
   577  00000E                     colourclick_readRGBC2@tmpval:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0xD
   581  00000E                     	ds	1
   582  00000F                     ?___fldiv:
   583                           	callstack 0
   584  00000F                     DCmotors_setPWM@m:
   585                           	callstack 0
   586  00000F                     ___fldiv@b:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0xE
   590  00000F                     	ds	1
   591  000010                     colourclick_readRGBC2@mode:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0xF
   595  000010                     	ds	1
   596  000011                     ??_colourclick_readRGBC2:
   597  000011                     ??_DCmotors_setPWM:
   598                           
   599                           ; 1 bytes @ 0x10
   600  000011                     	ds	2
   601  000013                     ___fldiv@a:
   602                           	callstack 0
   603                           
   604                           ; 4 bytes @ 0x12
   605  000013                     	ds	4
   606  000017                     ??___fldiv:
   607                           
   608                           ; 1 bytes @ 0x16
   609  000017                     	ds	1
   610  000018                     DCmotors_setPWM@PWMduty:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x17
   614  000018                     	ds	2
   615  00001A                     forward@mL:
   616                           	callstack 0
   617  00001A                     reverse@mL:
   618                           	callstack 0
   619  00001A                     stop@mL:
   620                           	callstack 0
   621  00001A                     left@mL:
   622                           	callstack 0
   623  00001A                     right@mL:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x19
   627  00001A                     	ds	1
   628  00001B                     ___fldiv@rem:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x1A
   632  00001B                     	ds	1
   633  00001C                     forward@mR:
   634                           	callstack 0
   635  00001C                     reverse@mR:
   636                           	callstack 0
   637  00001C                     stop@mR:
   638                           	callstack 0
   639  00001C                     left@mR:
   640                           	callstack 0
   641  00001C                     right@mR:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x1B
   645  00001C                     	ds	2
   646  00001E                     ??_stop:
   647  00001E                     ??_reverse:
   648  00001E                     ??_forward:
   649  00001E                     left@deg:
   650                           	callstack 0
   651  00001E                     right@deg:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1D
   655  00001E                     	ds	1
   656  00001F                     ___fldiv@sign:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x1E
   660  00001F                     	ds	1
   661  000020                     ??_left:
   662  000020                     ??_right:
   663  000020                     ___fldiv@new_exp:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x1F
   667  000020                     	ds	2
   668  000022                     turnleft@mL:
   669                           	callstack 0
   670  000022                     turnright@mL:
   671                           	callstack 0
   672  000022                     ___fldiv@grs:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0x21
   676  000022                     	ds	2
   677  000024                     turnleft@mR:
   678                           	callstack 0
   679  000024                     turnright@mR:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x23
   683  000024                     	ds	2
   684  000026                     ___fldiv@bexp:
   685                           	callstack 0
   686  000026                     turnleft@deg:
   687                           	callstack 0
   688  000026                     turnright@deg:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x25
   692  000026                     	ds	1
   693  000027                     ___fldiv@aexp:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x26
   697  000027                     	ds	1
   698  000028                     colourcards_normaliseRGBC@abs:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x27
   702  000028                     	ds	2
   703  00002A                     colourcards_normaliseRGBC@rel:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x29
   707  00002A                     	ds	2
   708  00002C                     colourcards_normaliseRGBC@R:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x2B
   712  00002C                     	ds	2
   713  00002E                     colourcards_normaliseRGBC@G:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x2D
   717  00002E                     	ds	2
   718  000030                     colourcards_normaliseRGBC@B:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x2F
   722  000030                     	ds	2
   723  000032                     colourcards_normaliseRGBC@C:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x31
   727  000032                     	ds	2
   728  000034                     colourcards_readRGBC@tmpval:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x33
   732  000034                     	ds	2
   733  000036                     colourcards_readRGBC@mL:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x35
   737  000036                     	ds	2
   738  000038                     colourcards_readRGBC@mR:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x37
   742  000038                     	ds	2
   743  00003A                     ??_colourcards_readRGBC:
   744                           
   745                           ; 1 bytes @ 0x39
   746  00003A                     	ds	2
   747  00003C                     colourcards_readRGBC@rel:
   748                           	callstack 0
   749                           
   750                           ; 12 bytes @ 0x3B
   751  00003C                     	ds	12
   752  000048                     ??_main:
   753                           
   754                           ; 1 bytes @ 0x47
   755  000048                     	ds	2
   756                           
   757 ;;
   758 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   759 ;;
   760 ;; *************** function _main *****************
   761 ;; Defined at:
   762 ;;		line 7 in file "main.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  motorR          9   17[BANK0 ] struct .
   767 ;;  motorL          9    8[BANK0 ] struct .
   768 ;;  current         8    0[BANK0 ] struct .
   769 ;;  PWMperiod       1    0        unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   780 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   781 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   782 ;;      Totals:         2      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   783 ;;Total ram usage:       28 bytes
   784 ;; Hardware stack levels required when called: 6
   785 ;; This function calls:
   786 ;;		_ADC_init
   787 ;;		_DCmotors_init
   788 ;;		_USART4_init
   789 ;;		_checkbatterylevel
   790 ;;		_colourcards_readRGBC
   791 ;;		_colourclickLEDs_C
   792 ;;		_colourclick_init
   793 ;; This function is called by:
   794 ;;		Startup code after reset
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text0
   799  002128                     __ptext0:
   800                           	callstack 0
   801  002128                     _main:
   802                           	callstack 25
   803  002128                     
   804                           ;main.c: 12:     DCmotors_turntime = 100;
   805  002128  0E00               	movlw	0
   806  00212A  0100               	movlb	0	; () banked
   807  00212C  6FCB               	movwf	(_DCmotors_turntime+1)& (0+255),b	;volatile
   808  00212E  0E64               	movlw	100
   809  002130  6FCA               	movwf	_DCmotors_turntime& (0+255),b	;volatile
   810                           
   811                           ;main.c: 13:     interrupts_lowerbound = 0;
   812  002132  0E00               	movlw	0
   813  002134  6E4F               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
   814  002136  0E00               	movlw	0
   815  002138  6E4E               	movwf	_interrupts_lowerbound^0,c	;volatile
   816                           
   817                           ;main.c: 14:     interrupts_upperbound = 32767;
   818  00213A  0E7F               	movlw	127
   819  00213C  6E58               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
   820  00213E  6857               	setf	_interrupts_upperbound^0,c	;volatile
   821                           
   822                           ;main.c: 15:     colourcard_flag = 0;
   823  002140  0E00               	movlw	0
   824  002142  6E52               	movwf	_colourcard_flag^0,c	;volatile
   825                           
   826                           ;main.c: 16:     unknowncard_flag = 0;
   827  002144  0E00               	movlw	0
   828  002146  6E51               	movwf	_unknowncard_flag^0,c	;volatile
   829                           
   830                           ;main.c: 17:     returnhome_flag = 0;
   831  002148  0E00               	movlw	0
   832  00214A  6E50               	movwf	_returnhome_flag^0,c	;volatile
   833                           
   834                           ;main.c: 19:     DC_motor motorL;;main.c: 20:     motorL.power=0;
   835  00214C  0E00               	movlw	0
   836  00214E  6FB8               	movwf	main@motorL& (0+255),b
   837                           
   838                           ;main.c: 21:     motorL.direction=1;
   839  002150  0E01               	movlw	1
   840  002152  6FB9               	movwf	(main@motorL+1)& (0+255),b
   841  002154                     
   842                           ; BSR set to: 0
   843                           ;main.c: 22:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   844  002154  0EA3               	movlw	163
   845  002156  6FBA               	movwf	(main@motorL+2)& (0+255),b
   846  002158  0E0F               	movlw	15
   847  00215A  6FBB               	movwf	(main@motorL+3)& (0+255),b
   848  00215C                     
   849                           ; BSR set to: 0
   850                           ;main.c: 23:     motorL.dir_LAT=(unsigned char *)(&LATE);
   851  00215C  0E7D               	movlw	125
   852  00215E  6FBC               	movwf	(main@motorL+4)& (0+255),b
   853  002160  0E0F               	movlw	15
   854  002162  6FBD               	movwf	(main@motorL+5)& (0+255),b
   855                           
   856                           ;main.c: 24:     motorL.dir_pin=4;
   857  002164  0E04               	movlw	4
   858  002166  6FBE               	movwf	(main@motorL+6)& (0+255),b
   859  002168                     
   860                           ; BSR set to: 0
   861                           ;main.c: 25:     motorL.PWMperiod=PWMperiod;
   862  002168  0E00               	movlw	0
   863  00216A  6FC0               	movwf	(main@motorL+8)& (0+255),b
   864  00216C  0E63               	movlw	99
   865  00216E  6FBF               	movwf	(main@motorL+7)& (0+255),b
   866                           
   867                           ;main.c: 27:     DC_motor motorR;;main.c: 28:     motorR.power=0;
   868  002170  0E00               	movlw	0
   869  002172  6FC1               	movwf	main@motorR& (0+255),b
   870                           
   871                           ;main.c: 29:     motorR.direction=1;
   872  002174  0E01               	movlw	1
   873  002176  6FC2               	movwf	(main@motorR+1)& (0+255),b
   874  002178                     
   875                           ; BSR set to: 0
   876                           ;main.c: 30:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   877  002178  0EA0               	movlw	160
   878  00217A  6FC3               	movwf	(main@motorR+2)& (0+255),b
   879  00217C  0E0F               	movlw	15
   880  00217E  6FC4               	movwf	(main@motorR+3)& (0+255),b
   881  002180                     
   882                           ; BSR set to: 0
   883                           ;main.c: 31:     motorR.dir_LAT=(unsigned char *)(&LATG);
   884  002180  0E7F               	movlw	127
   885  002182  6FC5               	movwf	(main@motorR+4)& (0+255),b
   886  002184  0E0F               	movlw	15
   887  002186  6FC6               	movwf	(main@motorR+5)& (0+255),b
   888                           
   889                           ;main.c: 32:     motorR.dir_pin=6;
   890  002188  0E06               	movlw	6
   891  00218A  6FC7               	movwf	(main@motorR+6)& (0+255),b
   892  00218C                     
   893                           ; BSR set to: 0
   894                           ;main.c: 33:     motorR.PWMperiod=PWMperiod;
   895  00218C  0E00               	movlw	0
   896  00218E  6FC9               	movwf	(main@motorR+8)& (0+255),b
   897  002190  0E63               	movlw	99
   898  002192  6FC8               	movwf	(main@motorR+7)& (0+255),b
   899  002194                     
   900                           ; BSR set to: 0
   901                           ;main.c: 35:     ADC_init();
   902  002194  EC4C  F015         	call	_ADC_init	;wreg free
   903  002198                     
   904                           ;main.c: 36:     colourclick_init();
   905  002198  ECA0  F014         	call	_colourclick_init	;wreg free
   906  00219C                     
   907                           ;main.c: 37:     DCmotors_init(PWMperiod);
   908  00219C  0E63               	movlw	99
   909  00219E  EC09  F014         	call	_DCmotors_init
   910  0021A2                     
   911                           ;main.c: 38:     USART4_init();
   912  0021A2  EC3C  F015         	call	_USART4_init	;wreg free
   913  0021A6                     
   914                           ;main.c: 43:     checkbatterylevel();
   915  0021A6  EC2C  F015         	call	_checkbatterylevel	;wreg free
   916  0021AA                     
   917                           ;main.c: 50:     checkbatterylevel();
   918  0021AA  EC2C  F015         	call	_checkbatterylevel	;wreg free
   919  0021AE                     l57:
   920  0021AE  A48E               	btfss	142,2,c	;volatile
   921  0021B0  EFDC  F010         	goto	u2831
   922  0021B4  EFDE  F010         	goto	u2830
   923  0021B8                     u2831:
   924  0021B8  EFE5  F010         	goto	l61
   925  0021BC                     u2830:
   926  0021BC  B68E               	btfsc	142,3,c	;volatile
   927  0021BE  EFE3  F010         	goto	u2841
   928  0021C2  EFE5  F010         	goto	u2840
   929  0021C6                     u2841:
   930  0021C6  EFD7  F010         	goto	l57
   931  0021CA                     u2840:
   932  0021CA                     l61:
   933                           
   934                           ;main.c: 58:     LATDbits.LATD3 = 1;
   935  0021CA  867C               	bsf	124,3,c	;volatile
   936  0021CC                     
   937                           ;main.c: 59:     colourclickLEDs_C(1);
   938  0021CC  0E01               	movlw	1
   939  0021CE  EC0B  F015         	call	_colourclickLEDs_C
   940  0021D2                     
   941                           ;main.c: 60:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   942  0021D2  0E52               	movlw	82
   943  0021D4  6E49               	movwf	(??_main+1)^0,c
   944  0021D6  0E2B               	movlw	43
   945  0021D8  6E48               	movwf	??_main^0,c
   946  0021DA  0E00               	movlw	0
   947  0021DC                     u3497:
   948  0021DC  2EE8               	decfsz	wreg,f,c
   949  0021DE  D7FE               	bra	u3497
   950  0021E0  2E48               	decfsz	??_main^0,f,c
   951  0021E2  D7FC               	bra	u3497
   952  0021E4  2E49               	decfsz	(??_main+1)^0,f,c
   953  0021E6  D7FA               	bra	u3497
   954  0021E8  D000               	nop2	
   955  0021EA                     l63:
   956  0021EA  A48E               	btfss	142,2,c	;volatile
   957  0021EC  EFFA  F010         	goto	u2851
   958  0021F0  EFFC  F010         	goto	u2850
   959  0021F4                     u2851:
   960  0021F4  EF03  F011         	goto	l3258
   961  0021F8                     u2850:
   962  0021F8  B68E               	btfsc	142,3,c	;volatile
   963  0021FA  EF01  F011         	goto	u2861
   964  0021FE  EF03  F011         	goto	u2860
   965  002202                     u2861:
   966  002202  EFF5  F010         	goto	l63
   967  002206                     u2860:
   968  002206                     l3258:
   969                           
   970                           ;main.c: 70:         colourcards_readRGBC(&current, &motorL, &motorR);
   971  002206  0EB0               	movlw	low main@current
   972  002208  6E34               	movwf	colourcards_readRGBC@tmpval^0,c
   973  00220A  0E00               	movlw	high main@current
   974  00220C  6E35               	movwf	(colourcards_readRGBC@tmpval+1)^0,c
   975  00220E  0EB8               	movlw	low main@motorL
   976  002210  6E36               	movwf	colourcards_readRGBC@mL^0,c
   977  002212  0E00               	movlw	high main@motorL
   978  002214  6E37               	movwf	(colourcards_readRGBC@mL+1)^0,c
   979  002216  0EC1               	movlw	low main@motorR
   980  002218  6E38               	movwf	colourcards_readRGBC@mR^0,c
   981  00221A  0E00               	movlw	high main@motorR
   982  00221C  6E39               	movwf	(colourcards_readRGBC@mR+1)^0,c
   983  00221E  EC52  F007         	call	_colourcards_readRGBC	;wreg free
   984  002222  EFF5  F010         	goto	l63
   985  002226  EF00  F000         	goto	start
   986  00222A                     __end_of_main:
   987                           	callstack 0
   988                           
   989 ;; *************** function _colourclick_init *****************
   990 ;; Defined at:
   991 ;;		line 15 in file "colour_click.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;Total ram usage:        1 bytes
  1010 ;; Hardware stack levels used: 1
  1011 ;; Hardware stack levels required when called: 3
  1012 ;; This function calls:
  1013 ;;		_I2C_2_Master_Init
  1014 ;;		_colourclickLEDs_init
  1015 ;;		_colourclick_writetoaddr
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text1
  1022  002940                     __ptext1:
  1023                           	callstack 0
  1024  002940                     _colourclick_init:
  1025                           	callstack 27
  1026  002940                     
  1027                           ;colour_click.c: 18:     I2C_2_Master_Init();
  1028  002940  ECBC  F014         	call	_I2C_2_Master_Init	;wreg free
  1029  002944                     
  1030                           ;colour_click.c: 21:   colourclick_writetoaddr(0x00, 0x01);
  1031  002944  0E01               	movlw	1
  1032  002946  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1033  002948  0E00               	movlw	0
  1034  00294A  EC1C  F015         	call	_colourclick_writetoaddr
  1035  00294E                     
  1036                           ;colour_click.c: 22:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1037  00294E  0E3F               	movlw	63
  1038  002950  6E05               	movwf	??_colourclick_init^0,c
  1039  002952  0E55               	movlw	85
  1040  002954                     u3507:
  1041  002954  2EE8               	decfsz	wreg,f,c
  1042  002956  D7FE               	bra	u3507
  1043  002958  2E05               	decfsz	??_colourclick_init^0,f,c
  1044  00295A  D7FC               	bra	u3507
  1045  00295C  F000               	nop	
  1046  00295E                     
  1047                           ;colour_click.c: 25:  colourclick_writetoaddr(0x00, 0x03);
  1048  00295E  0E03               	movlw	3
  1049  002960  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1050  002962  0E00               	movlw	0
  1051  002964  EC1C  F015         	call	_colourclick_writetoaddr
  1052  002968                     
  1053                           ;colour_click.c: 28:  colourclick_writetoaddr(0x01, 0xD5);
  1054  002968  0ED5               	movlw	213
  1055  00296A  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1056  00296C  0E01               	movlw	1
  1057  00296E  EC1C  F015         	call	_colourclick_writetoaddr
  1058  002972                     
  1059                           ;colour_click.c: 30:     colourclickLEDs_init();
  1060  002972  EC70  F015         	call	_colourclickLEDs_init	;wreg free
  1061  002976  0012               	return		;funcret
  1062  002978                     __end_of_colourclick_init:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _colourclick_writetoaddr *****************
  1066 ;; Defined at:
  1067 ;;		line 39 in file "colour_click.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  address         1    wreg     unsigned char 
  1070 ;;  value           1    2[COMRAM] unsigned char 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  address         1    3[COMRAM] unsigned char 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2, status,0, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1082 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1086 ;;Total ram usage:        2 bytes
  1087 ;; Hardware stack levels used: 1
  1088 ;; Hardware stack levels required when called: 2
  1089 ;; This function calls:
  1090 ;;		_I2C_2_Master_Start
  1091 ;;		_I2C_2_Master_Stop
  1092 ;;		_I2C_2_Master_Write
  1093 ;; This function is called by:
  1094 ;;		_colourclick_init
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text2
  1099  002A38                     __ptext2:
  1100                           	callstack 0
  1101  002A38                     _colourclick_writetoaddr:
  1102                           	callstack 27
  1103                           
  1104                           ;incstack = 0
  1105                           ;colourclick_writetoaddr@address stored from wreg
  1106  002A38  6E04               	movwf	colourclick_writetoaddr@address^0,c
  1107  002A3A                     
  1108                           ;colour_click.c: 39: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 40: {;colour_click.c: 41:     I2C_2_Master_Start();
  1109  002A3A  EC88  F015         	call	_I2C_2_Master_Start	;wreg free
  1110                           
  1111                           ;colour_click.c: 42:     I2C_2_Master_Write(0x52 | 0x00);
  1112  002A3E  0E52               	movlw	82
  1113  002A40  EC77  F015         	call	_I2C_2_Master_Write
  1114                           
  1115                           ;colour_click.c: 43:     I2C_2_Master_Write(0x80 | address);
  1116  002A44  5004               	movf	colourclick_writetoaddr@address^0,w,c
  1117  002A46  0980               	iorlw	128
  1118  002A48  EC77  F015         	call	_I2C_2_Master_Write
  1119                           
  1120                           ;colour_click.c: 44:     I2C_2_Master_Write(value);
  1121  002A4C  5003               	movf	colourclick_writetoaddr@value^0,w,c
  1122  002A4E  EC77  F015         	call	_I2C_2_Master_Write
  1123                           
  1124                           ;colour_click.c: 45:     I2C_2_Master_Stop();
  1125  002A52  EC83  F015         	call	_I2C_2_Master_Stop	;wreg free
  1126  002A56  0012               	return		;funcret
  1127  002A58                     __end_of_colourclick_writetoaddr:
  1128                           	callstack 0
  1129                           
  1130 ;; *************** function _colourclickLEDs_init *****************
  1131 ;; Defined at:
  1132 ;;		line 49 in file "buttons_n_LEDs.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 1
  1153 ;; This function calls:
  1154 ;;		_colourclickLEDs_C
  1155 ;; This function is called by:
  1156 ;;		_colourclick_init
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text3
  1161  002AE0                     __ptext3:
  1162                           	callstack 0
  1163  002AE0                     _colourclickLEDs_init:
  1164                           	callstack 28
  1165  002AE0                     
  1166                           ;buttons_n_LEDs.c: 52:     TRISGbits.TRISG1 = 0;
  1167  002AE0  9287               	bcf	135,1,c	;volatile
  1168                           
  1169                           ;buttons_n_LEDs.c: 53:     TRISAbits.TRISA4 = 0;
  1170  002AE2  9881               	bcf	129,4,c	;volatile
  1171                           
  1172                           ;buttons_n_LEDs.c: 54:     TRISFbits.TRISF7 = 0;
  1173  002AE4  9E86               	bcf	134,7,c	;volatile
  1174  002AE6                     
  1175                           ;buttons_n_LEDs.c: 57:     colourclickLEDs_C(0);
  1176  002AE6  0E00               	movlw	0
  1177  002AE8  EC0B  F015         	call	_colourclickLEDs_C
  1178  002AEC  0012               	return		;funcret
  1179  002AEE                     __end_of_colourclickLEDs_init:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _I2C_2_Master_Init *****************
  1183 ;; Defined at:
  1184 ;;		line 8 in file "I2C.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1202 ;;Total ram usage:        0 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_colourclick_init
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text4
  1212  002978                     __ptext4:
  1213                           	callstack 0
  1214  002978                     _I2C_2_Master_Init:
  1215                           	callstack 29
  1216  002978                     
  1217                           ;I2C.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  1218  002978  010E               	movlb	14	; () banked
  1219  00297A  51D9               	movf	217,w,b	;volatile
  1220  00297C  0BF0               	andlw	-16
  1221  00297E  0908               	iorlw	8
  1222  002980  6FD9               	movwf	217,b	;volatile
  1223  002982                     
  1224                           ; BSR set to: 14
  1225                           ;I2C.c: 12:   SSP2CON1bits.SSPEN = 1;
  1226  002982  8BD9               	bsf	217,5,b	;volatile
  1227                           
  1228                           ;I2C.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  1229  002984  0E9F               	movlw	159
  1230  002986  6FD6               	movwf	214,b	;volatile
  1231  002988                     
  1232                           ; BSR set to: 14
  1233                           ;I2C.c: 16:   TRISDbits.TRISD5 = 1;
  1234  002988  8A84               	bsf	132,5,c	;volatile
  1235  00298A                     
  1236                           ; BSR set to: 14
  1237                           ;I2C.c: 17:   TRISDbits.TRISD6 = 1;
  1238  00298A  8C84               	bsf	132,6,c	;volatile
  1239  00298C                     
  1240                           ; BSR set to: 14
  1241                           ;I2C.c: 18:   ANSELDbits.ANSELD5=0;
  1242  00298C  9BA7               	bcf	167,5,b	;volatile
  1243  00298E                     
  1244                           ; BSR set to: 14
  1245                           ;I2C.c: 19:   ANSELDbits.ANSELD6=0;
  1246  00298E  9DA7               	bcf	167,6,b	;volatile
  1247                           
  1248                           ;I2C.c: 20:   SSP2DATPPS=0x1D;
  1249  002990  0E1D               	movlw	29
  1250  002992  6F1D               	movwf	29,b	;volatile
  1251                           
  1252                           ;I2C.c: 21:   SSP2CLKPPS=0x1E;
  1253  002994  0E1E               	movlw	30
  1254  002996  6F1C               	movwf	28,b	;volatile
  1255                           
  1256                           ;I2C.c: 22:   RD5PPS=0x1C;
  1257  002998  0E1C               	movlw	28
  1258  00299A  6F6F               	movwf	111,b	;volatile
  1259                           
  1260                           ;I2C.c: 23:   RD6PPS=0x1B;
  1261  00299C  0E1B               	movlw	27
  1262  00299E  6F70               	movwf	112,b	;volatile
  1263  0029A0                     
  1264                           ; BSR set to: 14
  1265  0029A0  0012               	return		;funcret
  1266  0029A2                     __end_of_I2C_2_Master_Init:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function _colourcards_readRGBC *****************
  1270 ;; Defined at:
  1271 ;;		line 12 in file "colour_cards.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  tmpval          2   51[COMRAM] PTR struct .
  1274 ;;		 -> main@current(8), 
  1275 ;;  mL              2   53[COMRAM] PTR struct .
  1276 ;;		 -> main@motorL(9), 
  1277 ;;  mR              2   55[COMRAM] PTR struct .
  1278 ;;		 -> main@motorR(9), 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  rel            12   59[COMRAM] struct .
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1290 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;Total ram usage:       20 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 5
  1297 ;; This function calls:
  1298 ;;		___flge
  1299 ;;		_colourcards_normaliseRGBC
  1300 ;;		_colourclick_readRGBC
  1301 ;;		_colourclick_readRGBC2
  1302 ;;		_forward
  1303 ;;		_reverse
  1304 ;;		_stop
  1305 ;;		_turnleft
  1306 ;;		_turnright
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text5
  1313  000EA4                     __ptext5:
  1314                           	callstack 0
  1315  000EA4                     _colourcards_readRGBC:
  1316                           	callstack 25
  1317  000EA4                     
  1318                           ;colour_cards.c: 12: void colourcards_readRGBC(RGBC_val *tmpval, DC_motor *mL, DC_motor 
      +                          *mR);colour_cards.c: 13: {;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
  1319  000EA4  010E               	movlb	14	; () banked
  1320  000EA6  9329               	bcf	41,1,b	;volatile
  1321  000EA8                     
  1322                           ; BSR set to: 14
  1323                           ;colour_cards.c: 18:     RGB_rel rel;;colour_cards.c: 19:     colourclick_readRGBC(tmpva
      +                          l);
  1324  000EA8  C034  F00C         	movff	colourcards_readRGBC@tmpval,colourclick_readRGBC@tmpval
  1325  000EAC  C035  F00D         	movff	colourcards_readRGBC@tmpval+1,colourclick_readRGBC@tmpval+1
  1326  000EB0  EC3A  F013         	call	_colourclick_readRGBC	;wreg free
  1327                           
  1328                           ;colour_cards.c: 20:     colourcards_normaliseRGBC(&abs, &rel);
  1329  000EB4  0E00               	movlw	0
  1330  000EB6  6E28               	movwf	colourcards_normaliseRGBC@abs^0,c
  1331  000EB8  0E00               	movlw	0
  1332  000EBA  6E29               	movwf	(colourcards_normaliseRGBC@abs+1)^0,c
  1333  000EBC  0E3C               	movlw	low colourcards_readRGBC@rel
  1334  000EBE  6E2A               	movwf	colourcards_normaliseRGBC@rel^0,c
  1335  000EC0  0E00               	movlw	high colourcards_readRGBC@rel
  1336  000EC2  6E2B               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  1337  000EC4  ECAC  F00E         	call	_colourcards_normaliseRGBC	;wreg free
  1338  000EC8                     
  1339                           ;colour_cards.c: 24:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  1340  000EC8  0E71               	movlw	113
  1341  000ECA  6E01               	movwf	___flge@ff1^0,c
  1342  000ECC  0E3D               	movlw	61
  1343  000ECE  6E02               	movwf	(___flge@ff1+1)^0,c
  1344  000ED0  0E0A               	movlw	10
  1345  000ED2  6E03               	movwf	(___flge@ff1+2)^0,c
  1346  000ED4  0E3F               	movlw	63
  1347  000ED6  6E04               	movwf	(___flge@ff1+3)^0,c
  1348  000ED8  C03C  F005         	movff	colourcards_readRGBC@rel,___flge@ff2
  1349  000EDC  C03D  F006         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  1350  000EE0  C03E  F007         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  1351  000EE4  C03F  F008         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  1352  000EE8  EC12  F010         	call	___flge	;wreg free
  1353  000EEC  B0D8               	btfsc	status,0,c
  1354  000EEE  EF7B  F007         	goto	u2581
  1355  000EF2  EF7D  F007         	goto	u2580
  1356  000EF6                     u2581:
  1357  000EF6  EF10  F008         	goto	l3120
  1358  000EFA                     u2580:
  1359  000EFA  C040  F001         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  1360  000EFE  C041  F002         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  1361  000F02  C042  F003         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  1362  000F06  C043  F004         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  1363  000F0A  0E48               	movlw	72
  1364  000F0C  6E05               	movwf	___flge@ff2^0,c
  1365  000F0E  0EE1               	movlw	225
  1366  000F10  6E06               	movwf	(___flge@ff2+1)^0,c
  1367  000F12  0E7A               	movlw	122
  1368  000F14  6E07               	movwf	(___flge@ff2+2)^0,c
  1369  000F16  0E3E               	movlw	62
  1370  000F18  6E08               	movwf	(___flge@ff2+3)^0,c
  1371  000F1A  EC12  F010         	call	___flge	;wreg free
  1372  000F1E  B0D8               	btfsc	status,0,c
  1373  000F20  EF94  F007         	goto	u2591
  1374  000F24  EF96  F007         	goto	u2590
  1375  000F28                     u2591:
  1376  000F28  EF10  F008         	goto	l3120
  1377  000F2C                     u2590:
  1378  000F2C  C044  F001         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  1379  000F30  C045  F002         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  1380  000F34  C046  F003         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  1381  000F38  C047  F004         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  1382  000F3C  0EEC               	movlw	236
  1383  000F3E  6E05               	movwf	___flge@ff2^0,c
  1384  000F40  0E51               	movlw	81
  1385  000F42  6E06               	movwf	(___flge@ff2+1)^0,c
  1386  000F44  0E38               	movlw	56
  1387  000F46  6E07               	movwf	(___flge@ff2+2)^0,c
  1388  000F48  0E3E               	movlw	62
  1389  000F4A  6E08               	movwf	(___flge@ff2+3)^0,c
  1390  000F4C  EC12  F010         	call	___flge	;wreg free
  1391  000F50  B0D8               	btfsc	status,0,c
  1392  000F52  EFAD  F007         	goto	u2601
  1393  000F56  EFAF  F007         	goto	u2600
  1394  000F5A                     u2601:
  1395  000F5A  EF10  F008         	goto	l3120
  1396  000F5E                     u2600:
  1397  000F5E                     
  1398                           ;colour_cards.c: 25:         colourclick_readRGBC2(&abs, 3);
  1399  000F5E  0E00               	movlw	0
  1400  000F60  6E0E               	movwf	colourclick_readRGBC2@tmpval^0,c
  1401  000F62  0E00               	movlw	0
  1402  000F64  6E0F               	movwf	(colourclick_readRGBC2@tmpval+1)^0,c
  1403  000F66  0E03               	movlw	3
  1404  000F68  6E10               	movwf	colourclick_readRGBC2@mode^0,c
  1405  000F6A  EC67  F00F         	call	_colourclick_readRGBC2	;wreg free
  1406                           
  1407                           ;colour_cards.c: 26:         colourcards_normaliseRGBC(&abs, &rel);
  1408  000F6E  0E00               	movlw	0
  1409  000F70  6E28               	movwf	colourcards_normaliseRGBC@abs^0,c
  1410  000F72  0E00               	movlw	0
  1411  000F74  6E29               	movwf	(colourcards_normaliseRGBC@abs+1)^0,c
  1412  000F76  0E3C               	movlw	low colourcards_readRGBC@rel
  1413  000F78  6E2A               	movwf	colourcards_normaliseRGBC@rel^0,c
  1414  000F7A  0E00               	movlw	high colourcards_readRGBC@rel
  1415  000F7C  6E2B               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  1416  000F7E  ECAC  F00E         	call	_colourcards_normaliseRGBC	;wreg free
  1417  000F82                     
  1418                           ;colour_cards.c: 27:         if (rel.B<0.56) {
  1419  000F82  C044  F001         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  1420  000F86  C045  F002         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  1421  000F8A  C046  F003         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  1422  000F8E  C047  F004         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  1423  000F92  0E29               	movlw	41
  1424  000F94  6E05               	movwf	___flge@ff2^0,c
  1425  000F96  0E5C               	movlw	92
  1426  000F98  6E06               	movwf	(___flge@ff2+1)^0,c
  1427  000F9A  0E0F               	movlw	15
  1428  000F9C  6E07               	movwf	(___flge@ff2+2)^0,c
  1429  000F9E  0E3F               	movlw	63
  1430  000FA0  6E08               	movwf	(___flge@ff2+3)^0,c
  1431  000FA2  EC12  F010         	call	___flge	;wreg free
  1432  000FA6  B0D8               	btfsc	status,0,c
  1433  000FA8  EFD8  F007         	goto	u2611
  1434  000FAC  EFDA  F007         	goto	u2610
  1435  000FB0                     u2611:
  1436  000FB0  EFF6  F007         	goto	l3116
  1437  000FB4                     u2610:
  1438  000FB4                     
  1439                           ;colour_cards.c: 29:             turnright(mL, mR, 135);
  1440  000FB4  C036  F022         	movff	colourcards_readRGBC@mL,turnright@mL
  1441  000FB8  C037  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  1442  000FBC  C038  F024         	movff	colourcards_readRGBC@mR,turnright@mR
  1443  000FC0  C039  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  1444  000FC4  0E00               	movlw	0
  1445  000FC6  6E27               	movwf	(turnright@deg+1)^0,c
  1446  000FC8  0E87               	movlw	135
  1447  000FCA  6E26               	movwf	turnright@deg^0,c
  1448  000FCC  EC31  F014         	call	_turnright	;wreg free
  1449                           
  1450                           ;colour_cards.c: 30:             stop(mL, mR);
  1451  000FD0  C036  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1452  000FD4  C037  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1453  000FD8  C038  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1454  000FDC  C039  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1455  000FE0  ECFB  F012         	call	_stop	;wreg free
  1456  000FE4                     l3114:
  1457                           
  1458                           ;colour_cards.c: 31:             unknowncard_flag = 0;
  1459  000FE4  0E00               	movlw	0
  1460  000FE6  6E51               	movwf	_unknowncard_flag^0,c	;volatile
  1461                           
  1462                           ;colour_cards.c: 32:         } else {
  1463  000FE8  EF16  F00B         	goto	l3220
  1464  000FEC                     l3116:
  1465                           
  1466                           ;colour_cards.c: 34:             turnright(mL, mR, 90);
  1467  000FEC  C036  F022         	movff	colourcards_readRGBC@mL,turnright@mL
  1468  000FF0  C037  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  1469  000FF4  C038  F024         	movff	colourcards_readRGBC@mR,turnright@mR
  1470  000FF8  C039  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  1471  000FFC  0E00               	movlw	0
  1472  000FFE  6E27               	movwf	(turnright@deg+1)^0,c
  1473  001000  0E5A               	movlw	90
  1474  001002  6E26               	movwf	turnright@deg^0,c
  1475  001004  EC31  F014         	call	_turnright	;wreg free
  1476                           
  1477                           ;colour_cards.c: 35:             stop(mL, mR);
  1478  001008  C036  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1479  00100C  C037  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1480  001010  C038  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1481  001014  C039  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1482  001018  ECFB  F012         	call	_stop	;wreg free
  1483  00101C  EFF2  F007         	goto	l3114
  1484  001020                     l3120:
  1485  001020  C03C  F001         	movff	colourcards_readRGBC@rel,___flge@ff1
  1486  001024  C03D  F002         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  1487  001028  C03E  F003         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  1488  00102C  C03F  F004         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  1489  001030  0EAE               	movlw	174
  1490  001032  6E05               	movwf	___flge@ff2^0,c
  1491  001034  0E47               	movlw	71
  1492  001036  6E06               	movwf	(___flge@ff2+1)^0,c
  1493  001038  0EE1               	movlw	225
  1494  00103A  6E07               	movwf	(___flge@ff2+2)^0,c
  1495  00103C  0E3E               	movlw	62
  1496  00103E  6E08               	movwf	(___flge@ff2+3)^0,c
  1497  001040  EC12  F010         	call	___flge	;wreg free
  1498  001044  B0D8               	btfsc	status,0,c
  1499  001046  EF27  F008         	goto	u2621
  1500  00104A  EF29  F008         	goto	u2620
  1501  00104E                     u2621:
  1502  00104E  EF1F  F009         	goto	l3148
  1503  001052                     u2620:
  1504  001052  0E9A               	movlw	154
  1505  001054  6E01               	movwf	___flge@ff1^0,c
  1506  001056  0E99               	movlw	153
  1507  001058  6E02               	movwf	(___flge@ff1+1)^0,c
  1508  00105A  0E99               	movlw	153
  1509  00105C  6E03               	movwf	(___flge@ff1+2)^0,c
  1510  00105E  0E3E               	movlw	62
  1511  001060  6E04               	movwf	(___flge@ff1+3)^0,c
  1512  001062  C040  F005         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  1513  001066  C041  F006         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  1514  00106A  C042  F007         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  1515  00106E  C043  F008         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  1516  001072  EC12  F010         	call	___flge	;wreg free
  1517  001076  B0D8               	btfsc	status,0,c
  1518  001078  EF40  F008         	goto	u2631
  1519  00107C  EF42  F008         	goto	u2630
  1520  001080                     u2631:
  1521  001080  EF1F  F009         	goto	l3148
  1522  001084                     u2630:
  1523  001084  0E14               	movlw	20
  1524  001086  6E01               	movwf	___flge@ff1^0,c
  1525  001088  0EAE               	movlw	174
  1526  00108A  6E02               	movwf	(___flge@ff1+1)^0,c
  1527  00108C  0E47               	movlw	71
  1528  00108E  6E03               	movwf	(___flge@ff1+2)^0,c
  1529  001090  0E3E               	movlw	62
  1530  001092  6E04               	movwf	(___flge@ff1+3)^0,c
  1531  001094  C044  F005         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  1532  001098  C045  F006         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  1533  00109C  C046  F007         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  1534  0010A0  C047  F008         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  1535  0010A4  EC12  F010         	call	___flge	;wreg free
  1536  0010A8  B0D8               	btfsc	status,0,c
  1537  0010AA  EF59  F008         	goto	u2641
  1538  0010AE  EF5B  F008         	goto	u2640
  1539  0010B2                     u2641:
  1540  0010B2  EF1F  F009         	goto	l3148
  1541  0010B6                     u2640:
  1542  0010B6                     
  1543                           ;colour_cards.c: 41:         colourclick_readRGBC2(&abs, 3);
  1544  0010B6  0E00               	movlw	0
  1545  0010B8  6E0E               	movwf	colourclick_readRGBC2@tmpval^0,c
  1546  0010BA  0E00               	movlw	0
  1547  0010BC  6E0F               	movwf	(colourclick_readRGBC2@tmpval+1)^0,c
  1548  0010BE  0E03               	movlw	3
  1549  0010C0  6E10               	movwf	colourclick_readRGBC2@mode^0,c
  1550  0010C2  EC67  F00F         	call	_colourclick_readRGBC2	;wreg free
  1551                           
  1552                           ;colour_cards.c: 42:         colourcards_normaliseRGBC(&abs, &rel);
  1553  0010C6  0E00               	movlw	0
  1554  0010C8  6E28               	movwf	colourcards_normaliseRGBC@abs^0,c
  1555  0010CA  0E00               	movlw	0
  1556  0010CC  6E29               	movwf	(colourcards_normaliseRGBC@abs+1)^0,c
  1557  0010CE  0E3C               	movlw	low colourcards_readRGBC@rel
  1558  0010D0  6E2A               	movwf	colourcards_normaliseRGBC@rel^0,c
  1559  0010D2  0E00               	movlw	high colourcards_readRGBC@rel
  1560  0010D4  6E2B               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  1561  0010D6  ECAC  F00E         	call	_colourcards_normaliseRGBC	;wreg free
  1562  0010DA                     
  1563                           ;colour_cards.c: 43:         if ((rel.R<0.65) && (rel.B>0.67)) {
  1564  0010DA  C03C  F001         	movff	colourcards_readRGBC@rel,___flge@ff1
  1565  0010DE  C03D  F002         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  1566  0010E2  C03E  F003         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  1567  0010E6  C03F  F004         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  1568  0010EA  0E66               	movlw	102
  1569  0010EC  6E05               	movwf	___flge@ff2^0,c
  1570  0010EE  0E66               	movlw	102
  1571  0010F0  6E06               	movwf	(___flge@ff2+1)^0,c
  1572  0010F2  0E26               	movlw	38
  1573  0010F4  6E07               	movwf	(___flge@ff2+2)^0,c
  1574  0010F6  0E3F               	movlw	63
  1575  0010F8  6E08               	movwf	(___flge@ff2+3)^0,c
  1576  0010FA  EC12  F010         	call	___flge	;wreg free
  1577  0010FE  B0D8               	btfsc	status,0,c
  1578  001100  EF84  F008         	goto	u2651
  1579  001104  EF86  F008         	goto	u2650
  1580  001108                     u2651:
  1581  001108  EFB9  F008         	goto	l3136
  1582  00110C                     u2650:
  1583  00110C  0E1F               	movlw	31
  1584  00110E  6E01               	movwf	___flge@ff1^0,c
  1585  001110  0E85               	movlw	133
  1586  001112  6E02               	movwf	(___flge@ff1+1)^0,c
  1587  001114  0E2B               	movlw	43
  1588  001116  6E03               	movwf	(___flge@ff1+2)^0,c
  1589  001118  0E3F               	movlw	63
  1590  00111A  6E04               	movwf	(___flge@ff1+3)^0,c
  1591  00111C  C044  F005         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  1592  001120  C045  F006         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  1593  001124  C046  F007         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  1594  001128  C047  F008         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  1595  00112C  EC12  F010         	call	___flge	;wreg free
  1596  001130  B0D8               	btfsc	status,0,c
  1597  001132  EF9D  F008         	goto	u2661
  1598  001136  EF9F  F008         	goto	u2660
  1599  00113A                     u2661:
  1600  00113A  EFB9  F008         	goto	l3136
  1601  00113E                     u2660:
  1602  00113E                     
  1603                           ;colour_cards.c: 45:             turnright(mL, mR, 180);
  1604  00113E  C036  F022         	movff	colourcards_readRGBC@mL,turnright@mL
  1605  001142  C037  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  1606  001146  C038  F024         	movff	colourcards_readRGBC@mR,turnright@mR
  1607  00114A  C039  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  1608  00114E  0E00               	movlw	0
  1609  001150  6E27               	movwf	(turnright@deg+1)^0,c
  1610  001152  0EB4               	movlw	180
  1611  001154  6E26               	movwf	turnright@deg^0,c
  1612  001156  EC31  F014         	call	_turnright	;wreg free
  1613                           
  1614                           ;colour_cards.c: 46:             stop(mL, mR);
  1615  00115A  C036  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1616  00115E  C037  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1617  001162  C038  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1618  001166  C039  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1619  00116A  ECFB  F012         	call	_stop	;wreg free
  1620  00116E  EFF2  F007         	goto	l3114
  1621  001172                     l3136:
  1622  001172  C03C  F001         	movff	colourcards_readRGBC@rel,___flge@ff1
  1623  001176  C03D  F002         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  1624  00117A  C03E  F003         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  1625  00117E  C03F  F004         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  1626  001182  0EEC               	movlw	236
  1627  001184  6E05               	movwf	___flge@ff2^0,c
  1628  001186  0E51               	movlw	81
  1629  001188  6E06               	movwf	(___flge@ff2+1)^0,c
  1630  00118A  0EB8               	movlw	184
  1631  00118C  6E07               	movwf	(___flge@ff2+2)^0,c
  1632  00118E  0E3D               	movlw	61
  1633  001190  6E08               	movwf	(___flge@ff2+3)^0,c
  1634  001192  EC12  F010         	call	___flge	;wreg free
  1635  001196  B0D8               	btfsc	status,0,c
  1636  001198  EFD0  F008         	goto	u2671
  1637  00119C  EFD2  F008         	goto	u2670
  1638  0011A0                     u2671:
  1639  0011A0  EF05  F009         	goto	l3144
  1640  0011A4                     u2670:
  1641  0011A4  0E52               	movlw	82
  1642  0011A6  6E01               	movwf	___flge@ff1^0,c
  1643  0011A8  0EB8               	movlw	184
  1644  0011AA  6E02               	movwf	(___flge@ff1+1)^0,c
  1645  0011AC  0E1E               	movlw	30
  1646  0011AE  6E03               	movwf	(___flge@ff1+2)^0,c
  1647  0011B0  0E3F               	movlw	63
  1648  0011B2  6E04               	movwf	(___flge@ff1+3)^0,c
  1649  0011B4  C044  F005         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  1650  0011B8  C045  F006         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  1651  0011BC  C046  F007         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  1652  0011C0  C047  F008         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  1653  0011C4  EC12  F010         	call	___flge	;wreg free
  1654  0011C8  B0D8               	btfsc	status,0,c
  1655  0011CA  EFE9  F008         	goto	u2681
  1656  0011CE  EFEB  F008         	goto	u2680
  1657  0011D2                     u2681:
  1658  0011D2  EF05  F009         	goto	l3144
  1659  0011D6                     u2680:
  1660  0011D6                     
  1661                           ;colour_cards.c: 50:             turnleft(mL, mR, 90);
  1662  0011D6  C036  F022         	movff	colourcards_readRGBC@mL,turnleft@mL
  1663  0011DA  C037  F023         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  1664  0011DE  C038  F024         	movff	colourcards_readRGBC@mR,turnleft@mR
  1665  0011E2  C039  F025         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  1666  0011E6  0E00               	movlw	0
  1667  0011E8  6E27               	movwf	(turnleft@deg+1)^0,c
  1668  0011EA  0E5A               	movlw	90
  1669  0011EC  6E26               	movwf	turnleft@deg^0,c
  1670  0011EE  EC58  F014         	call	_turnleft	;wreg free
  1671                           
  1672                           ;colour_cards.c: 51:             stop(mL, mR);
  1673  0011F2  C036  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1674  0011F6  C037  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1675  0011FA  C038  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1676  0011FE  C039  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1677  001202  ECFB  F012         	call	_stop	;wreg free
  1678  001206  EFF2  F007         	goto	l3114
  1679  00120A                     l3144:
  1680                           
  1681                           ;colour_cards.c: 55:             turnleft(mL, mR, 135);
  1682  00120A  C036  F022         	movff	colourcards_readRGBC@mL,turnleft@mL
  1683  00120E  C037  F023         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  1684  001212  C038  F024         	movff	colourcards_readRGBC@mR,turnleft@mR
  1685  001216  C039  F025         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  1686  00121A  0E00               	movlw	0
  1687  00121C  6E27               	movwf	(turnleft@deg+1)^0,c
  1688  00121E  0E87               	movlw	135
  1689  001220  6E26               	movwf	turnleft@deg^0,c
  1690  001222  EC58  F014         	call	_turnleft	;wreg free
  1691                           
  1692                           ;colour_cards.c: 56:             stop(mL, mR);
  1693  001226  C036  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1694  00122A  C037  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1695  00122E  C038  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1696  001232  C039  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1697  001236  ECFB  F012         	call	_stop	;wreg free
  1698  00123A  EFF2  F007         	goto	l3114
  1699  00123E                     l3148:
  1700  00123E  0E48               	movlw	72
  1701  001240  6E01               	movwf	___flge@ff1^0,c
  1702  001242  0EE1               	movlw	225
  1703  001244  6E02               	movwf	(___flge@ff1+1)^0,c
  1704  001246  0EFA               	movlw	250
  1705  001248  6E03               	movwf	(___flge@ff1+2)^0,c
  1706  00124A  0E3E               	movlw	62
  1707  00124C  6E04               	movwf	(___flge@ff1+3)^0,c
  1708  00124E  C03C  F005         	movff	colourcards_readRGBC@rel,___flge@ff2
  1709  001252  C03D  F006         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  1710  001256  C03E  F007         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  1711  00125A  C03F  F008         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  1712  00125E  EC12  F010         	call	___flge	;wreg free
  1713  001262  B0D8               	btfsc	status,0,c
  1714  001264  EF36  F009         	goto	u2691
  1715  001268  EF38  F009         	goto	u2690
  1716  00126C                     u2691:
  1717  00126C  EFA4  F009         	goto	l3164
  1718  001270                     u2690:
  1719  001270  0E85               	movlw	133
  1720  001272  6E01               	movwf	___flge@ff1^0,c
  1721  001274  0EEB               	movlw	235
  1722  001276  6E02               	movwf	(___flge@ff1+1)^0,c
  1723  001278  0E91               	movlw	145
  1724  00127A  6E03               	movwf	(___flge@ff1+2)^0,c
  1725  00127C  0E3E               	movlw	62
  1726  00127E  6E04               	movwf	(___flge@ff1+3)^0,c
  1727  001280  C040  F005         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  1728  001284  C041  F006         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  1729  001288  C042  F007         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  1730  00128C  C043  F008         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  1731  001290  EC12  F010         	call	___flge	;wreg free
  1732  001294  B0D8               	btfsc	status,0,c
  1733  001296  EF4F  F009         	goto	u2701
  1734  00129A  EF51  F009         	goto	u2700
  1735  00129E                     u2701:
  1736  00129E  EFA4  F009         	goto	l3164
  1737  0012A2                     u2700:
  1738  0012A2  0EEC               	movlw	236
  1739  0012A4  6E01               	movwf	___flge@ff1^0,c
  1740  0012A6  0E51               	movlw	81
  1741  0012A8  6E02               	movwf	(___flge@ff1+1)^0,c
  1742  0012AA  0E38               	movlw	56
  1743  0012AC  6E03               	movwf	(___flge@ff1+2)^0,c
  1744  0012AE  0E3E               	movlw	62
  1745  0012B0  6E04               	movwf	(___flge@ff1+3)^0,c
  1746  0012B2  C044  F005         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  1747  0012B6  C045  F006         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  1748  0012BA  C046  F007         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  1749  0012BE  C047  F008         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  1750  0012C2  EC12  F010         	call	___flge	;wreg free
  1751  0012C6  B0D8               	btfsc	status,0,c
  1752  0012C8  EF68  F009         	goto	u2711
  1753  0012CC  EF6A  F009         	goto	u2710
  1754  0012D0                     u2711:
  1755  0012D0  EFA4  F009         	goto	l3164
  1756  0012D4                     u2710:
  1757  0012D4                     
  1758                           ;colour_cards.c: 63:         reverse(mL, mR);
  1759  0012D4  C036  F01A         	movff	colourcards_readRGBC@mL,reverse@mL
  1760  0012D8  C037  F01B         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  1761  0012DC  C038  F01C         	movff	colourcards_readRGBC@mR,reverse@mR
  1762  0012E0  C039  F01D         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  1763  0012E4  EC61  F012         	call	_reverse	;wreg free
  1764                           
  1765                           ;colour_cards.c: 64:         stop(mL, mR);
  1766  0012E8  C036  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1767  0012EC  C037  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1768  0012F0  C038  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1769  0012F4  C039  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1770  0012F8  ECFB  F012         	call	_stop	;wreg free
  1771  0012FC                     
  1772                           ;colour_cards.c: 65:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1773  0012FC  0E09               	movlw	9
  1774  0012FE  6E3B               	movwf	(??_colourcards_readRGBC+1)^0,c
  1775  001300  0E1E               	movlw	30
  1776  001302  6E3A               	movwf	??_colourcards_readRGBC^0,c
  1777  001304  0EE4               	movlw	228
  1778  001306                     u3517:
  1779  001306  2EE8               	decfsz	wreg,f,c
  1780  001308  D7FE               	bra	u3517
  1781  00130A  2E3A               	decfsz	??_colourcards_readRGBC^0,f,c
  1782  00130C  D7FC               	bra	u3517
  1783  00130E  2E3B               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  1784  001310  D7FA               	bra	u3517
  1785  001312  D000               	nop2	
  1786  001314                     
  1787                           ;colour_cards.c: 66:         turnright(mL, mR, 90);
  1788  001314  C036  F022         	movff	colourcards_readRGBC@mL,turnright@mL
  1789  001318  C037  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  1790  00131C  C038  F024         	movff	colourcards_readRGBC@mR,turnright@mR
  1791  001320  C039  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  1792  001324  0E00               	movlw	0
  1793  001326  6E27               	movwf	(turnright@deg+1)^0,c
  1794  001328  0E5A               	movlw	90
  1795  00132A  6E26               	movwf	turnright@deg^0,c
  1796  00132C  EC31  F014         	call	_turnright	;wreg free
  1797  001330                     l3160:
  1798                           
  1799                           ;colour_cards.c: 67:         stop(mL, mR);
  1800  001330  C036  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1801  001334  C037  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1802  001338  C038  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1803  00133C  C039  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1804  001340  ECFB  F012         	call	_stop	;wreg free
  1805  001344  EFF2  F007         	goto	l3114
  1806  001348                     l3164:
  1807  001348  0E48               	movlw	72
  1808  00134A  6E01               	movwf	___flge@ff1^0,c
  1809  00134C  0EE1               	movlw	225
  1810  00134E  6E02               	movwf	(___flge@ff1+1)^0,c
  1811  001350  0EFA               	movlw	250
  1812  001352  6E03               	movwf	(___flge@ff1+2)^0,c
  1813  001354  0E3E               	movlw	62
  1814  001356  6E04               	movwf	(___flge@ff1+3)^0,c
  1815  001358  C03C  F005         	movff	colourcards_readRGBC@rel,___flge@ff2
  1816  00135C  C03D  F006         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  1817  001360  C03E  F007         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  1818  001364  C03F  F008         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  1819  001368  EC12  F010         	call	___flge	;wreg free
  1820  00136C  B0D8               	btfsc	status,0,c
  1821  00136E  EFBB  F009         	goto	u2721
  1822  001372  EFBD  F009         	goto	u2720
  1823  001376                     u2721:
  1824  001376  EF1F  F00A         	goto	l3180
  1825  00137A                     u2720:
  1826  00137A  C040  F001         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  1827  00137E  C041  F002         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  1828  001382  C042  F003         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  1829  001386  C043  F004         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  1830  00138A  0ECD               	movlw	205
  1831  00138C  6E05               	movwf	___flge@ff2^0,c
  1832  00138E  0ECC               	movlw	204
  1833  001390  6E06               	movwf	(___flge@ff2+1)^0,c
  1834  001392  0E8C               	movlw	140
  1835  001394  6E07               	movwf	(___flge@ff2+2)^0,c
  1836  001396  0E3E               	movlw	62
  1837  001398  6E08               	movwf	(___flge@ff2+3)^0,c
  1838  00139A  EC12  F010         	call	___flge	;wreg free
  1839  00139E  B0D8               	btfsc	status,0,c
  1840  0013A0  EFD4  F009         	goto	u2731
  1841  0013A4  EFD6  F009         	goto	u2730
  1842  0013A8                     u2731:
  1843  0013A8  EF1F  F00A         	goto	l3180
  1844  0013AC                     u2730:
  1845  0013AC  0E14               	movlw	20
  1846  0013AE  6E01               	movwf	___flge@ff1^0,c
  1847  0013B0  0EAE               	movlw	174
  1848  0013B2  6E02               	movwf	(___flge@ff1+1)^0,c
  1849  0013B4  0E47               	movlw	71
  1850  0013B6  6E03               	movwf	(___flge@ff1+2)^0,c
  1851  0013B8  0E3E               	movlw	62
  1852  0013BA  6E04               	movwf	(___flge@ff1+3)^0,c
  1853  0013BC  C044  F005         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  1854  0013C0  C045  F006         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  1855  0013C4  C046  F007         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  1856  0013C8  C047  F008         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  1857  0013CC  EC12  F010         	call	___flge	;wreg free
  1858  0013D0  B0D8               	btfsc	status,0,c
  1859  0013D2  EFED  F009         	goto	u2741
  1860  0013D6  EFEF  F009         	goto	u2740
  1861  0013DA                     u2741:
  1862  0013DA  EF1F  F00A         	goto	l3180
  1863  0013DE                     u2740:
  1864  0013DE                     
  1865                           ;colour_cards.c: 72:         reverse(mL, mR);
  1866  0013DE  C036  F01A         	movff	colourcards_readRGBC@mL,reverse@mL
  1867  0013E2  C037  F01B         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  1868  0013E6  C038  F01C         	movff	colourcards_readRGBC@mR,reverse@mR
  1869  0013EA  C039  F01D         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  1870  0013EE  EC61  F012         	call	_reverse	;wreg free
  1871                           
  1872                           ;colour_cards.c: 73:         stop(mL, mR);
  1873  0013F2  C036  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1874  0013F6  C037  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1875  0013FA  C038  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1876  0013FE  C039  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1877  001402  ECFB  F012         	call	_stop	;wreg free
  1878  001406                     
  1879                           ;colour_cards.c: 74:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1880  001406  0E09               	movlw	9
  1881  001408  6E3B               	movwf	(??_colourcards_readRGBC+1)^0,c
  1882  00140A  0E1E               	movlw	30
  1883  00140C  6E3A               	movwf	??_colourcards_readRGBC^0,c
  1884  00140E  0EE4               	movlw	228
  1885  001410                     u3527:
  1886  001410  2EE8               	decfsz	wreg,f,c
  1887  001412  D7FE               	bra	u3527
  1888  001414  2E3A               	decfsz	??_colourcards_readRGBC^0,f,c
  1889  001416  D7FC               	bra	u3527
  1890  001418  2E3B               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  1891  00141A  D7FA               	bra	u3527
  1892  00141C  D000               	nop2	
  1893  00141E                     
  1894                           ;colour_cards.c: 75:         turnleft(mL, mR, 90);
  1895  00141E  C036  F022         	movff	colourcards_readRGBC@mL,turnleft@mL
  1896  001422  C037  F023         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  1897  001426  C038  F024         	movff	colourcards_readRGBC@mR,turnleft@mR
  1898  00142A  C039  F025         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  1899  00142E  0E00               	movlw	0
  1900  001430  6E27               	movwf	(turnleft@deg+1)^0,c
  1901  001432  0E5A               	movlw	90
  1902  001434  6E26               	movwf	turnleft@deg^0,c
  1903  001436  EC58  F014         	call	_turnleft	;wreg free
  1904  00143A  EF98  F009         	goto	l3160
  1905  00143E                     l3180:
  1906  00143E  C03C  F001         	movff	colourcards_readRGBC@rel,___flge@ff1
  1907  001442  C03D  F002         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  1908  001446  C03E  F003         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  1909  00144A  C03F  F004         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  1910  00144E  0E1F               	movlw	31
  1911  001450  6E05               	movwf	___flge@ff2^0,c
  1912  001452  0E85               	movlw	133
  1913  001454  6E06               	movwf	(___flge@ff2+1)^0,c
  1914  001456  0EEB               	movlw	235
  1915  001458  6E07               	movwf	(___flge@ff2+2)^0,c
  1916  00145A  0E3E               	movlw	62
  1917  00145C  6E08               	movwf	(___flge@ff2+3)^0,c
  1918  00145E  EC12  F010         	call	___flge	;wreg free
  1919  001462  B0D8               	btfsc	status,0,c
  1920  001464  EF36  F00A         	goto	u2751
  1921  001468  EF38  F00A         	goto	u2750
  1922  00146C                     u2751:
  1923  00146C  EF88  F00A         	goto	l3192
  1924  001470                     u2750:
  1925  001470  0E3D               	movlw	61
  1926  001472  6E01               	movwf	___flge@ff1^0,c
  1927  001474  0E0A               	movlw	10
  1928  001476  6E02               	movwf	(___flge@ff1+1)^0,c
  1929  001478  0E97               	movlw	151
  1930  00147A  6E03               	movwf	(___flge@ff1+2)^0,c
  1931  00147C  0E3E               	movlw	62
  1932  00147E  6E04               	movwf	(___flge@ff1+3)^0,c
  1933  001480  C040  F005         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  1934  001484  C041  F006         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  1935  001488  C042  F007         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  1936  00148C  C043  F008         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  1937  001490  EC12  F010         	call	___flge	;wreg free
  1938  001494  B0D8               	btfsc	status,0,c
  1939  001496  EF4F  F00A         	goto	u2761
  1940  00149A  EF51  F00A         	goto	u2760
  1941  00149E                     u2761:
  1942  00149E  EF88  F00A         	goto	l3192
  1943  0014A2                     u2760:
  1944  0014A2  0E3D               	movlw	61
  1945  0014A4  6E01               	movwf	___flge@ff1^0,c
  1946  0014A6  0E0A               	movlw	10
  1947  0014A8  6E02               	movwf	(___flge@ff1+1)^0,c
  1948  0014AA  0E57               	movlw	87
  1949  0014AC  6E03               	movwf	(___flge@ff1+2)^0,c
  1950  0014AE  0E3E               	movlw	62
  1951  0014B0  6E04               	movwf	(___flge@ff1+3)^0,c
  1952  0014B2  C044  F005         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  1953  0014B6  C045  F006         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  1954  0014BA  C046  F007         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  1955  0014BE  C047  F008         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  1956  0014C2  EC12  F010         	call	___flge	;wreg free
  1957  0014C6  B0D8               	btfsc	status,0,c
  1958  0014C8  EF68  F00A         	goto	u2771
  1959  0014CC  EF6A  F00A         	goto	u2770
  1960  0014D0                     u2771:
  1961  0014D0  EF88  F00A         	goto	l3192
  1962  0014D4                     u2770:
  1963  0014D4                     
  1964                           ;colour_cards.c: 81:         turnright(mL, mR, 180);
  1965  0014D4  C036  F022         	movff	colourcards_readRGBC@mL,turnright@mL
  1966  0014D8  C037  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  1967  0014DC  C038  F024         	movff	colourcards_readRGBC@mR,turnright@mR
  1968  0014E0  C039  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  1969  0014E4  0E00               	movlw	0
  1970  0014E6  6E27               	movwf	(turnright@deg+1)^0,c
  1971  0014E8  0EB4               	movlw	180
  1972  0014EA  6E26               	movwf	turnright@deg^0,c
  1973  0014EC  EC31  F014         	call	_turnright	;wreg free
  1974                           
  1975                           ;colour_cards.c: 82:         stop(mL, mR);
  1976  0014F0  C036  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  1977  0014F4  C037  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  1978  0014F8  C038  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  1979  0014FC  C039  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  1980  001500  ECFB  F012         	call	_stop	;wreg free
  1981  001504                     
  1982                           ;colour_cards.c: 83:         unknowncard_flag = 0;
  1983  001504  0E00               	movlw	0
  1984  001506  6E51               	movwf	_unknowncard_flag^0,c	;volatile
  1985  001508                     
  1986                           ;colour_cards.c: 84:         returnhome_flag = 1;
  1987  001508  0E01               	movlw	1
  1988  00150A  6E50               	movwf	_returnhome_flag^0,c	;volatile
  1989                           
  1990                           ;colour_cards.c: 86:     } else {
  1991  00150C  EF16  F00B         	goto	l3220
  1992  001510                     l3192:
  1993                           
  1994                           ;colour_cards.c: 88:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1995  001510  0E52               	movlw	82
  1996  001512  6E3B               	movwf	(??_colourcards_readRGBC+1)^0,c
  1997  001514  0E2B               	movlw	43
  1998  001516  6E3A               	movwf	??_colourcards_readRGBC^0,c
  1999  001518  0E00               	movlw	0
  2000  00151A                     u3537:
  2001  00151A  2EE8               	decfsz	wreg,f,c
  2002  00151C  D7FE               	bra	u3537
  2003  00151E  2E3A               	decfsz	??_colourcards_readRGBC^0,f,c
  2004  001520  D7FC               	bra	u3537
  2005  001522  2E3B               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  2006  001524  D7FA               	bra	u3537
  2007  001526  D000               	nop2	
  2008  001528                     
  2009                           ;colour_cards.c: 89:         forward(mL, mR);
  2010  001528  C036  F01A         	movff	colourcards_readRGBC@mL,forward@mL
  2011  00152C  C037  F01B         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  2012  001530  C038  F01C         	movff	colourcards_readRGBC@mR,forward@mR
  2013  001534  C039  F01D         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  2014  001538  ECAE  F012         	call	_forward	;wreg free
  2015  00153C                     
  2016                           ;colour_cards.c: 90:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2017  00153C  0ED0               	movlw	208
  2018  00153E  6E3A               	movwf	??_colourcards_readRGBC^0,c
  2019  001540  0ECA               	movlw	202
  2020  001542                     u3547:
  2021  001542  2EE8               	decfsz	wreg,f,c
  2022  001544  D7FE               	bra	u3547
  2023  001546  2E3A               	decfsz	??_colourcards_readRGBC^0,f,c
  2024  001548  D7FC               	bra	u3547
  2025                           
  2026                           ;colour_cards.c: 91:         stop(mL, mR);
  2027  00154A  C036  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  2028  00154E  C037  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2029  001552  C038  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  2030  001556  C039  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2031  00155A  ECFB  F012         	call	_stop	;wreg free
  2032  00155E                     
  2033                           ;colour_cards.c: 92:         colourclick_readRGBC(tmpval);
  2034  00155E  C034  F00C         	movff	colourcards_readRGBC@tmpval,colourclick_readRGBC@tmpval
  2035  001562  C035  F00D         	movff	colourcards_readRGBC@tmpval+1,colourclick_readRGBC@tmpval+1
  2036  001566  EC3A  F013         	call	_colourclick_readRGBC	;wreg free
  2037  00156A                     
  2038                           ;colour_cards.c: 93:         if ((tmpval->C < interrupts_lowerbound) || (tmpval->C > int
      +                          errupts_upperbound)) {
  2039  00156A  EE20 F006          	lfsr	2,6
  2040  00156E  5034               	movf	colourcards_readRGBC@tmpval^0,w,c
  2041  001570  26D9               	addwf	fsr2l,f,c
  2042  001572  5035               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  2043  001574  22DA               	addwfc	fsr2h,f,c
  2044  001576  504E               	movf	_interrupts_lowerbound^0,w,c	;volatile
  2045  001578  5CDE               	subwf	postinc2,w,c
  2046  00157A  504F               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2047  00157C  58DE               	subwfb	postinc2,w,c
  2048  00157E  A0D8               	btfss	status,0,c
  2049  001580  EFC4  F00A         	goto	u2781
  2050  001584  EFC6  F00A         	goto	u2780
  2051  001588                     u2781:
  2052  001588  EFD7  F00A         	goto	l3204
  2053  00158C                     u2780:
  2054  00158C  EE20 F006          	lfsr	2,6
  2055  001590  5034               	movf	colourcards_readRGBC@tmpval^0,w,c
  2056  001592  26D9               	addwf	fsr2l,f,c
  2057  001594  5035               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  2058  001596  22DA               	addwfc	fsr2h,f,c
  2059  001598  50DE               	movf	postinc2,w,c
  2060  00159A  5C57               	subwf	_interrupts_upperbound^0,w,c	;volatile
  2061  00159C  50DE               	movf	postinc2,w,c
  2062  00159E  5858               	subwfb	(_interrupts_upperbound+1)^0,w,c	;volatile
  2063  0015A0  B0D8               	btfsc	status,0,c
  2064  0015A2  EFD5  F00A         	goto	u2791
  2065  0015A6  EFD7  F00A         	goto	u2790
  2066  0015AA                     u2791:
  2067  0015AA  EF0A  F00B         	goto	l3216
  2068  0015AE                     u2790:
  2069  0015AE                     l3204:
  2070                           
  2071                           ;colour_cards.c: 94:             if (unknowncard_flag<3) {
  2072  0015AE  0E03               	movlw	3
  2073  0015B0  6051               	cpfslt	_unknowncard_flag^0,c	;volatile
  2074  0015B2  EFDD  F00A         	goto	u2801
  2075  0015B6  EFDF  F00A         	goto	u2800
  2076  0015BA                     u2801:
  2077  0015BA  EFE4  F00A         	goto	l160
  2078  0015BE                     u2800:
  2079  0015BE                     
  2080                           ;colour_cards.c: 95:                 PIR0bits.INT1IF = 1;
  2081  0015BE  010E               	movlb	14	; () banked
  2082  0015C0  8333               	bsf	51,1,b	;volatile
  2083  0015C2                     
  2084                           ; BSR set to: 14
  2085                           ;colour_cards.c: 96:                 unknowncard_flag++;
  2086  0015C2  2A51               	incf	_unknowncard_flag^0,f,c	;volatile
  2087                           
  2088                           ;colour_cards.c: 97:             } else {
  2089  0015C4  EF16  F00B         	goto	l3220
  2090  0015C8                     l160:
  2091                           
  2092                           ;colour_cards.c: 98:                 LATHbits.LATH3 = 1;
  2093  0015C8  8680               	bsf	128,3,c	;volatile
  2094  0015CA                     
  2095                           ;colour_cards.c: 99:                 turnright(mL, mR, 180);
  2096  0015CA  C036  F022         	movff	colourcards_readRGBC@mL,turnright@mL
  2097  0015CE  C037  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  2098  0015D2  C038  F024         	movff	colourcards_readRGBC@mR,turnright@mR
  2099  0015D6  C039  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  2100  0015DA  0E00               	movlw	0
  2101  0015DC  6E27               	movwf	(turnright@deg+1)^0,c
  2102  0015DE  0EB4               	movlw	180
  2103  0015E0  6E26               	movwf	turnright@deg^0,c
  2104  0015E2  EC31  F014         	call	_turnright	;wreg free
  2105                           
  2106                           ;colour_cards.c: 100:                 stop(mL, mR);
  2107  0015E6  C036  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  2108  0015EA  C037  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  2109  0015EE  C038  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  2110  0015F2  C039  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  2111  0015F6  ECFB  F012         	call	_stop	;wreg free
  2112  0015FA                     
  2113                           ;colour_cards.c: 101:                 returnhome_flag = !returnhome_flag;
  2114  0015FA  5050               	movf	_returnhome_flag^0,w,c	;volatile
  2115  0015FC  B4D8               	btfsc	status,2,c
  2116  0015FE  EF03  F00B         	goto	u2811
  2117  001602  EF06  F00B         	goto	u2810
  2118  001606                     u2811:
  2119  001606  0E01               	movlw	1
  2120  001608  EF07  F00B         	goto	u2820
  2121  00160C                     u2810:
  2122  00160C  0E00               	movlw	0
  2123  00160E                     u2820:
  2124  00160E  6E50               	movwf	_returnhome_flag^0,c	;volatile
  2125  001610  EFF2  F007         	goto	l3114
  2126  001614                     l3216:
  2127                           
  2128                           ;colour_cards.c: 105:             forward(mL, mR);
  2129  001614  C036  F01A         	movff	colourcards_readRGBC@mL,forward@mL
  2130  001618  C037  F01B         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  2131  00161C  C038  F01C         	movff	colourcards_readRGBC@mR,forward@mR
  2132  001620  C039  F01D         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  2133  001624  ECAE  F012         	call	_forward	;wreg free
  2134  001628  EFF2  F007         	goto	l3114
  2135  00162C                     l3220:
  2136                           
  2137                           ;colour_cards.c: 110:     colourcard_flag = 0;
  2138  00162C  0E00               	movlw	0
  2139  00162E  6E52               	movwf	_colourcard_flag^0,c	;volatile
  2140  001630                     
  2141                           ;colour_cards.c: 111:     PIE0bits.INT1IE = 1;
  2142  001630  010E               	movlb	14	; () banked
  2143  001632  8329               	bsf	41,1,b	;volatile
  2144  001634                     
  2145                           ; BSR set to: 14
  2146  001634  0012               	return		;funcret
  2147  001636                     __end_of_colourcards_readRGBC:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _turnright *****************
  2151 ;; Defined at:
  2152 ;;		line 218 in file "DC_motors.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  mL              2   33[COMRAM] PTR struct .
  2155 ;;		 -> main@motorL(9), 
  2156 ;;  mR              2   35[COMRAM] PTR struct .
  2157 ;;		 -> main@motorR(9), 
  2158 ;;  deg             2   37[COMRAM] unsigned int 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2170 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2174 ;;Total ram usage:        6 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 3
  2177 ;; This function calls:
  2178 ;;		_left
  2179 ;;		_right
  2180 ;; This function is called by:
  2181 ;;		_colourcards_readRGBC
  2182 ;;		_DCmotors_calibration
  2183 ;;		_DCmotors_testing
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text6
  2188  002862                     __ptext6:
  2189                           	callstack 0
  2190  002862                     _turnright:
  2191                           	callstack 26
  2192  002862                     
  2193                           ;DC_motors.c: 218: void turnright(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motor
      +                          s.c: 219: {;DC_motors.c: 220:     if (returnhome_flag==0) {
  2194  002862  5050               	movf	_returnhome_flag^0,w,c	;volatile
  2195  002864  A4D8               	btfss	status,2,c
  2196  002866  EF37  F014         	goto	u2431
  2197  00286A  EF39  F014         	goto	u2430
  2198  00286E                     u2431:
  2199  00286E  EF49  F014         	goto	l2926
  2200  002872                     u2430:
  2201  002872                     
  2202                           ;DC_motors.c: 221:         right(mL, mR, deg);
  2203  002872  C022  F01A         	movff	turnright@mL,right@mL
  2204  002876  C023  F01B         	movff	turnright@mL+1,right@mL+1
  2205  00287A  C024  F01C         	movff	turnright@mR,right@mR
  2206  00287E  C025  F01D         	movff	turnright@mR+1,right@mR+1
  2207  002882  C026  F01E         	movff	turnright@deg,right@deg
  2208  002886  C027  F01F         	movff	turnright@deg+1,right@deg+1
  2209  00288A  EC15  F011         	call	_right	;wreg free
  2210                           
  2211                           ;DC_motors.c: 222:     } else {
  2212  00288E  EF57  F014         	goto	l628
  2213  002892                     l2926:
  2214                           
  2215                           ;DC_motors.c: 223:         left(mL, mR, deg);
  2216  002892  C022  F01A         	movff	turnright@mL,left@mL
  2217  002896  C023  F01B         	movff	turnright@mL+1,left@mL+1
  2218  00289A  C024  F01C         	movff	turnright@mR,left@mR
  2219  00289E  C025  F01D         	movff	turnright@mR+1,left@mR+1
  2220  0028A2  C026  F01E         	movff	turnright@deg,left@deg
  2221  0028A6  C027  F01F         	movff	turnright@deg+1,left@deg+1
  2222  0028AA  EC8A  F011         	call	_left	;wreg free
  2223  0028AE                     l628:
  2224  0028AE  0012               	return		;funcret
  2225  0028B0                     __end_of_turnright:
  2226                           	callstack 0
  2227                           
  2228 ;; *************** function _turnleft *****************
  2229 ;; Defined at:
  2230 ;;		line 205 in file "DC_motors.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;  mL              2   33[COMRAM] PTR struct .
  2233 ;;		 -> main@motorL(9), 
  2234 ;;  mR              2   35[COMRAM] PTR struct .
  2235 ;;		 -> main@motorR(9), 
  2236 ;;  deg             2   37[COMRAM] unsigned int 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2248 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;Total ram usage:        6 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 3
  2255 ;; This function calls:
  2256 ;;		_left
  2257 ;;		_right
  2258 ;; This function is called by:
  2259 ;;		_colourcards_readRGBC
  2260 ;;		_DCmotors_calibration
  2261 ;;		_DCmotors_testing
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text7
  2266  0028B0                     __ptext7:
  2267                           	callstack 0
  2268  0028B0                     _turnleft:
  2269                           	callstack 26
  2270  0028B0                     
  2271                           ;DC_motors.c: 205: void turnleft(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors
      +                          .c: 206: {;DC_motors.c: 207:     if (returnhome_flag==0) {
  2272  0028B0  5050               	movf	_returnhome_flag^0,w,c	;volatile
  2273  0028B2  A4D8               	btfss	status,2,c
  2274  0028B4  EF5E  F014         	goto	u2461
  2275  0028B8  EF60  F014         	goto	u2460
  2276  0028BC                     u2461:
  2277  0028BC  EF70  F014         	goto	l2946
  2278  0028C0                     u2460:
  2279  0028C0                     
  2280                           ;DC_motors.c: 208:         left(mL, mR, deg);
  2281  0028C0  C022  F01A         	movff	turnleft@mL,left@mL
  2282  0028C4  C023  F01B         	movff	turnleft@mL+1,left@mL+1
  2283  0028C8  C024  F01C         	movff	turnleft@mR,left@mR
  2284  0028CC  C025  F01D         	movff	turnleft@mR+1,left@mR+1
  2285  0028D0  C026  F01E         	movff	turnleft@deg,left@deg
  2286  0028D4  C027  F01F         	movff	turnleft@deg+1,left@deg+1
  2287  0028D8  EC8A  F011         	call	_left	;wreg free
  2288                           
  2289                           ;DC_motors.c: 209:     } else {
  2290  0028DC  EF7E  F014         	goto	l623
  2291  0028E0                     l2946:
  2292                           
  2293                           ;DC_motors.c: 210:         right(mL, mR, deg);
  2294  0028E0  C022  F01A         	movff	turnleft@mL,right@mL
  2295  0028E4  C023  F01B         	movff	turnleft@mL+1,right@mL+1
  2296  0028E8  C024  F01C         	movff	turnleft@mR,right@mR
  2297  0028EC  C025  F01D         	movff	turnleft@mR+1,right@mR+1
  2298  0028F0  C026  F01E         	movff	turnleft@deg,right@deg
  2299  0028F4  C027  F01F         	movff	turnleft@deg+1,right@deg+1
  2300  0028F8  EC15  F011         	call	_right	;wreg free
  2301  0028FC                     l623:
  2302  0028FC  0012               	return		;funcret
  2303  0028FE                     __end_of_turnleft:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function _right *****************
  2307 ;; Defined at:
  2308 ;;		line 177 in file "DC_motors.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  mL              2   25[COMRAM] PTR struct .
  2311 ;;		 -> main@motorL(9), 
  2312 ;;  mR              2   27[COMRAM] PTR struct .
  2313 ;;		 -> main@motorR(9), 
  2314 ;;  deg             2   29[COMRAM] unsigned int 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2326 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2329 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2330 ;;Total ram usage:        8 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 2
  2333 ;; This function calls:
  2334 ;;		_DCmotors_setPWM
  2335 ;; This function is called by:
  2336 ;;		_turnleft
  2337 ;;		_turnright
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text8
  2342  00222A                     __ptext8:
  2343                           	callstack 0
  2344  00222A                     _right:
  2345                           	callstack 26
  2346  00222A                     
  2347                           ;DC_motors.c: 177: void right(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c:
      +                           178: {;DC_motors.c: 180:     mL->direction = 1;
  2348  00222A  EE20 F001          	lfsr	2,1
  2349  00222E  501A               	movf	right@mL^0,w,c
  2350  002230  26D9               	addwf	fsr2l,f,c
  2351  002232  501B               	movf	(right@mL+1)^0,w,c
  2352  002234  22DA               	addwfc	fsr2h,f,c
  2353  002236  0E01               	movlw	1
  2354  002238  6EDF               	movwf	indf2,c
  2355                           
  2356                           ;DC_motors.c: 181:     mR->direction = 0;
  2357  00223A  EE20 F001          	lfsr	2,1
  2358  00223E  501C               	movf	right@mR^0,w,c
  2359  002240  26D9               	addwf	fsr2l,f,c
  2360  002242  501D               	movf	(right@mR+1)^0,w,c
  2361  002244  22DA               	addwfc	fsr2h,f,c
  2362  002246  0E00               	movlw	0
  2363  002248  6EDF               	movwf	indf2,c
  2364                           
  2365                           ;DC_motors.c: 184:     while((mL->power < 50) || (mR->power < 50)){
  2366  00224A  EF70  F011         	goto	l613
  2367  00224E                     l2656:
  2368                           
  2369                           ;DC_motors.c: 186:         LATHbits.LATH0 = !LATHbits.LATH0;
  2370  00224E  A080               	btfss	128,0,c	;volatile
  2371  002250  EF2C  F011         	goto	u2011
  2372  002254  EF30  F011         	goto	u2010
  2373  002258                     u2011:
  2374  002258  6A20               	clrf	??_right^0,c
  2375  00225A  2A20               	incf	??_right^0,f,c
  2376  00225C  EF31  F011         	goto	u2028
  2377  002260                     u2010:
  2378  002260  6A20               	clrf	??_right^0,c
  2379  002262                     u2028:
  2380  002262  5080               	movf	128,w,c	;volatile
  2381  002264  1820               	xorwf	??_right^0,w,c
  2382  002266  0BFE               	andlw	-2
  2383  002268  1820               	xorwf	??_right^0,w,c
  2384  00226A  6E80               	movwf	128,c	;volatile
  2385  00226C                     
  2386                           ;DC_motors.c: 189:         if (mL->power < 50) {mL->power += 1;}
  2387  00226C  C01A  FFD9         	movff	right@mL,fsr2l
  2388  002270  C01B  FFDA         	movff	right@mL+1,fsr2h
  2389  002274  0E32               	movlw	50
  2390  002276  60DF               	cpfslt	indf2,c
  2391  002278  EF40  F011         	goto	u2031
  2392  00227C  EF42  F011         	goto	u2030
  2393  002280                     u2031:
  2394  002280  EF47  F011         	goto	l2662
  2395  002284                     u2030:
  2396  002284  C01A  FFD9         	movff	right@mL,fsr2l
  2397  002288  C01B  FFDA         	movff	right@mL+1,fsr2h
  2398  00228C  2ADF               	incf	indf2,f,c
  2399  00228E                     l2662:
  2400                           
  2401                           ;DC_motors.c: 190:         if (mR->power < 50) {mR->power += 1;}
  2402  00228E  C01C  FFD9         	movff	right@mR,fsr2l
  2403  002292  C01D  FFDA         	movff	right@mR+1,fsr2h
  2404  002296  0E32               	movlw	50
  2405  002298  60DF               	cpfslt	indf2,c
  2406  00229A  EF51  F011         	goto	u2041
  2407  00229E  EF53  F011         	goto	u2040
  2408  0022A2                     u2041:
  2409  0022A2  EF58  F011         	goto	l2666
  2410  0022A6                     u2040:
  2411  0022A6  C01C  FFD9         	movff	right@mR,fsr2l
  2412  0022AA  C01D  FFDA         	movff	right@mR+1,fsr2h
  2413  0022AE  2ADF               	incf	indf2,f,c
  2414  0022B0                     l2666:
  2415                           
  2416                           ;DC_motors.c: 193:         DCmotors_setPWM(mL);
  2417  0022B0  C01A  F00F         	movff	right@mL,DCmotors_setPWM@m
  2418  0022B4  C01B  F010         	movff	right@mL+1,DCmotors_setPWM@m+1
  2419  0022B8  ECE8  F00C         	call	_DCmotors_setPWM	;wreg free
  2420  0022BC                     
  2421                           ;DC_motors.c: 194:         DCmotors_setPWM(mR);
  2422  0022BC  C01C  F00F         	movff	right@mR,DCmotors_setPWM@m
  2423  0022C0  C01D  F010         	movff	right@mR+1,DCmotors_setPWM@m+1
  2424  0022C4  ECE8  F00C         	call	_DCmotors_setPWM	;wreg free
  2425  0022C8                     
  2426                           ;DC_motors.c: 195:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2427  0022C8  0E09               	movlw	9
  2428  0022CA  6E21               	movwf	(??_right+1)^0,c
  2429  0022CC  0E1E               	movlw	30
  2430  0022CE  6E20               	movwf	??_right^0,c
  2431  0022D0  0EE4               	movlw	228
  2432  0022D2                     u3557:
  2433  0022D2  2EE8               	decfsz	wreg,f,c
  2434  0022D4  D7FE               	bra	u3557
  2435  0022D6  2E20               	decfsz	??_right^0,f,c
  2436  0022D8  D7FC               	bra	u3557
  2437  0022DA  2E21               	decfsz	(??_right+1)^0,f,c
  2438  0022DC  D7FA               	bra	u3557
  2439  0022DE  D000               	nop2	
  2440  0022E0                     l613:
  2441                           
  2442                           ;DC_motors.c: 184:     while((mL->power < 50) || (mR->power < 50)){
  2443  0022E0  C01A  FFD9         	movff	right@mL,fsr2l
  2444  0022E4  C01B  FFDA         	movff	right@mL+1,fsr2h
  2445  0022E8  0E31               	movlw	49
  2446  0022EA  64DF               	cpfsgt	indf2,c
  2447  0022EC  EF7A  F011         	goto	u2051
  2448  0022F0  EF7C  F011         	goto	u2050
  2449  0022F4                     u2051:
  2450  0022F4  EF27  F011         	goto	l2656
  2451  0022F8                     u2050:
  2452  0022F8  C01C  FFD9         	movff	right@mR,fsr2l
  2453  0022FC  C01D  FFDA         	movff	right@mR+1,fsr2h
  2454  002300  0E31               	movlw	49
  2455  002302  64DF               	cpfsgt	indf2,c
  2456  002304  EF86  F011         	goto	u2061
  2457  002308  EF88  F011         	goto	u2060
  2458  00230C                     u2061:
  2459  00230C  EF27  F011         	goto	l2656
  2460  002310                     u2060:
  2461  002310                     
  2462                           ;DC_motors.c: 198:     LATHbits.LATH0 = 0;
  2463  002310  9080               	bcf	128,0,c	;volatile
  2464  002312  0012               	return		;funcret
  2465  002314                     __end_of_right:
  2466                           	callstack 0
  2467                           
  2468 ;; *************** function _left *****************
  2469 ;; Defined at:
  2470 ;;		line 150 in file "DC_motors.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  mL              2   25[COMRAM] PTR struct .
  2473 ;;		 -> main@motorL(9), 
  2474 ;;  mR              2   27[COMRAM] PTR struct .
  2475 ;;		 -> main@motorR(9), 
  2476 ;;  deg             2   29[COMRAM] unsigned int 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2488 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2491 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2492 ;;Total ram usage:        8 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 2
  2495 ;; This function calls:
  2496 ;;		_DCmotors_setPWM
  2497 ;; This function is called by:
  2498 ;;		_turnleft
  2499 ;;		_turnright
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text9
  2504  002314                     __ptext9:
  2505                           	callstack 0
  2506  002314                     _left:
  2507                           	callstack 26
  2508  002314                     
  2509                           ;DC_motors.c: 150: void left(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c: 
      +                          151: {;DC_motors.c: 153:     mL->direction = 0;
  2510  002314  EE20 F001          	lfsr	2,1
  2511  002318  501A               	movf	left@mL^0,w,c
  2512  00231A  26D9               	addwf	fsr2l,f,c
  2513  00231C  501B               	movf	(left@mL+1)^0,w,c
  2514  00231E  22DA               	addwfc	fsr2h,f,c
  2515  002320  0E00               	movlw	0
  2516  002322  6EDF               	movwf	indf2,c
  2517                           
  2518                           ;DC_motors.c: 154:     mR->direction = 1;
  2519  002324  EE20 F001          	lfsr	2,1
  2520  002328  501C               	movf	left@mR^0,w,c
  2521  00232A  26D9               	addwf	fsr2l,f,c
  2522  00232C  501D               	movf	(left@mR+1)^0,w,c
  2523  00232E  22DA               	addwfc	fsr2h,f,c
  2524  002330  0E01               	movlw	1
  2525  002332  6EDF               	movwf	indf2,c
  2526                           
  2527                           ;DC_motors.c: 157:     while((mL->power < 50) || (mR->power < 50)){
  2528  002334  EFE5  F011         	goto	l605
  2529  002338                     l2636:
  2530                           
  2531                           ;DC_motors.c: 159:         LATFbits.LATF0 = !LATFbits.LATF0;
  2532  002338  A07E               	btfss	126,0,c	;volatile
  2533  00233A  EFA1  F011         	goto	u1951
  2534  00233E  EFA5  F011         	goto	u1950
  2535  002342                     u1951:
  2536  002342  6A20               	clrf	??_left^0,c
  2537  002344  2A20               	incf	??_left^0,f,c
  2538  002346  EFA6  F011         	goto	u1968
  2539  00234A                     u1950:
  2540  00234A  6A20               	clrf	??_left^0,c
  2541  00234C                     u1968:
  2542  00234C  507E               	movf	126,w,c	;volatile
  2543  00234E  1820               	xorwf	??_left^0,w,c
  2544  002350  0BFE               	andlw	-2
  2545  002352  1820               	xorwf	??_left^0,w,c
  2546  002354  6E7E               	movwf	126,c	;volatile
  2547  002356                     
  2548                           ;DC_motors.c: 162:         if (mL->power < 50) {mL->power += 1;}
  2549  002356  C01A  FFD9         	movff	left@mL,fsr2l
  2550  00235A  C01B  FFDA         	movff	left@mL+1,fsr2h
  2551  00235E  0E32               	movlw	50
  2552  002360  60DF               	cpfslt	indf2,c
  2553  002362  EFB5  F011         	goto	u1971
  2554  002366  EFB7  F011         	goto	u1970
  2555  00236A                     u1971:
  2556  00236A  EFBC  F011         	goto	l2642
  2557  00236E                     u1970:
  2558  00236E  C01A  FFD9         	movff	left@mL,fsr2l
  2559  002372  C01B  FFDA         	movff	left@mL+1,fsr2h
  2560  002376  2ADF               	incf	indf2,f,c
  2561  002378                     l2642:
  2562                           
  2563                           ;DC_motors.c: 163:         if (mR->power < 50) {mR->power += 1;}
  2564  002378  C01C  FFD9         	movff	left@mR,fsr2l
  2565  00237C  C01D  FFDA         	movff	left@mR+1,fsr2h
  2566  002380  0E32               	movlw	50
  2567  002382  60DF               	cpfslt	indf2,c
  2568  002384  EFC6  F011         	goto	u1981
  2569  002388  EFC8  F011         	goto	u1980
  2570  00238C                     u1981:
  2571  00238C  EFCD  F011         	goto	l2646
  2572  002390                     u1980:
  2573  002390  C01C  FFD9         	movff	left@mR,fsr2l
  2574  002394  C01D  FFDA         	movff	left@mR+1,fsr2h
  2575  002398  2ADF               	incf	indf2,f,c
  2576  00239A                     l2646:
  2577                           
  2578                           ;DC_motors.c: 166:         DCmotors_setPWM(mL);
  2579  00239A  C01A  F00F         	movff	left@mL,DCmotors_setPWM@m
  2580  00239E  C01B  F010         	movff	left@mL+1,DCmotors_setPWM@m+1
  2581  0023A2  ECE8  F00C         	call	_DCmotors_setPWM	;wreg free
  2582  0023A6                     
  2583                           ;DC_motors.c: 167:         DCmotors_setPWM(mR);
  2584  0023A6  C01C  F00F         	movff	left@mR,DCmotors_setPWM@m
  2585  0023AA  C01D  F010         	movff	left@mR+1,DCmotors_setPWM@m+1
  2586  0023AE  ECE8  F00C         	call	_DCmotors_setPWM	;wreg free
  2587  0023B2                     
  2588                           ;DC_motors.c: 168:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2589  0023B2  0E09               	movlw	9
  2590  0023B4  6E21               	movwf	(??_left+1)^0,c
  2591  0023B6  0E1E               	movlw	30
  2592  0023B8  6E20               	movwf	??_left^0,c
  2593  0023BA  0EE4               	movlw	228
  2594  0023BC                     u3567:
  2595  0023BC  2EE8               	decfsz	wreg,f,c
  2596  0023BE  D7FE               	bra	u3567
  2597  0023C0  2E20               	decfsz	??_left^0,f,c
  2598  0023C2  D7FC               	bra	u3567
  2599  0023C4  2E21               	decfsz	(??_left+1)^0,f,c
  2600  0023C6  D7FA               	bra	u3567
  2601  0023C8  D000               	nop2	
  2602  0023CA                     l605:
  2603                           
  2604                           ;DC_motors.c: 157:     while((mL->power < 50) || (mR->power < 50)){
  2605  0023CA  C01A  FFD9         	movff	left@mL,fsr2l
  2606  0023CE  C01B  FFDA         	movff	left@mL+1,fsr2h
  2607  0023D2  0E31               	movlw	49
  2608  0023D4  64DF               	cpfsgt	indf2,c
  2609  0023D6  EFEF  F011         	goto	u1991
  2610  0023DA  EFF1  F011         	goto	u1990
  2611  0023DE                     u1991:
  2612  0023DE  EF9C  F011         	goto	l2636
  2613  0023E2                     u1990:
  2614  0023E2  C01C  FFD9         	movff	left@mR,fsr2l
  2615  0023E6  C01D  FFDA         	movff	left@mR+1,fsr2h
  2616  0023EA  0E31               	movlw	49
  2617  0023EC  64DF               	cpfsgt	indf2,c
  2618  0023EE  EFFB  F011         	goto	u2001
  2619  0023F2  EFFD  F011         	goto	u2000
  2620  0023F6                     u2001:
  2621  0023F6  EF9C  F011         	goto	l2636
  2622  0023FA                     u2000:
  2623  0023FA                     
  2624                           ;DC_motors.c: 171:     LATFbits.LATF0 = 0;
  2625  0023FA  907E               	bcf	126,0,c	;volatile
  2626  0023FC  0012               	return		;funcret
  2627  0023FE                     __end_of_left:
  2628                           	callstack 0
  2629                           
  2630 ;; *************** function _stop *****************
  2631 ;; Defined at:
  2632 ;;		line 129 in file "DC_motors.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  mL              2   25[COMRAM] PTR struct .
  2635 ;;		 -> main@motorL(9), 
  2636 ;;  mR              2   27[COMRAM] PTR struct .
  2637 ;;		 -> main@motorR(9), 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2653 ;;Total ram usage:        6 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 2
  2656 ;; This function calls:
  2657 ;;		_DCmotors_setPWM
  2658 ;; This function is called by:
  2659 ;;		_colourcards_readRGBC
  2660 ;;		_DCmotors_calibration
  2661 ;;		_DCmotors_testing
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text10
  2666  0025F6                     __ptext10:
  2667                           	callstack 0
  2668  0025F6                     _stop:
  2669                           	callstack 27
  2670  0025F6                     
  2671                           ;DC_motors.c: 129: void stop(DC_motor *mL, DC_motor *mR);DC_motors.c: 130: {;DC_motors.c
      +                          : 131:     LATDbits.LATD4 = 1;
  2672  0025F6  887C               	bsf	124,4,c	;volatile
  2673                           
  2674                           ;DC_motors.c: 134:     while((mL->power > 0) && (mR->power > 0)){
  2675  0025F8  EF20  F013         	goto	l2938
  2676  0025FC                     l2930:
  2677                           
  2678                           ;DC_motors.c: 135:         mL->power -= 1;
  2679  0025FC  C01A  FFD9         	movff	stop@mL,fsr2l
  2680  002600  C01B  FFDA         	movff	stop@mL+1,fsr2h
  2681  002604  06DF               	decf	indf2,f,c
  2682                           
  2683                           ;DC_motors.c: 136:         mR->power -= 1;
  2684  002606  C01C  FFD9         	movff	stop@mR,fsr2l
  2685  00260A  C01D  FFDA         	movff	stop@mR+1,fsr2h
  2686  00260E  06DF               	decf	indf2,f,c
  2687  002610                     
  2688                           ;DC_motors.c: 139:         DCmotors_setPWM(mL);
  2689  002610  C01A  F00F         	movff	stop@mL,DCmotors_setPWM@m
  2690  002614  C01B  F010         	movff	stop@mL+1,DCmotors_setPWM@m+1
  2691  002618  ECE8  F00C         	call	_DCmotors_setPWM	;wreg free
  2692  00261C                     
  2693                           ;DC_motors.c: 140:         DCmotors_setPWM(mR);
  2694  00261C  C01C  F00F         	movff	stop@mR,DCmotors_setPWM@m
  2695  002620  C01D  F010         	movff	stop@mR+1,DCmotors_setPWM@m+1
  2696  002624  ECE8  F00C         	call	_DCmotors_setPWM	;wreg free
  2697  002628                     
  2698                           ;DC_motors.c: 141:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2699  002628  0E09               	movlw	9
  2700  00262A  6E1F               	movwf	(??_stop+1)^0,c
  2701  00262C  0E1E               	movlw	30
  2702  00262E  6E1E               	movwf	??_stop^0,c
  2703  002630  0EE4               	movlw	228
  2704  002632                     u3577:
  2705  002632  2EE8               	decfsz	wreg,f,c
  2706  002634  D7FE               	bra	u3577
  2707  002636  2E1E               	decfsz	??_stop^0,f,c
  2708  002638  D7FC               	bra	u3577
  2709  00263A  2E1F               	decfsz	(??_stop+1)^0,f,c
  2710  00263C  D7FA               	bra	u3577
  2711  00263E  D000               	nop2	
  2712  002640                     l2938:
  2713                           
  2714                           ;DC_motors.c: 134:     while((mL->power > 0) && (mR->power > 0)){
  2715  002640  C01A  FFD9         	movff	stop@mL,fsr2l
  2716  002644  C01B  FFDA         	movff	stop@mL+1,fsr2h
  2717  002648  50DF               	movf	indf2,w,c
  2718  00264A  B4D8               	btfsc	status,2,c
  2719  00264C  EF2A  F013         	goto	u2441
  2720  002650  EF2C  F013         	goto	u2440
  2721  002654                     u2441:
  2722  002654  EF38  F013         	goto	l601
  2723  002658                     u2440:
  2724  002658  C01C  FFD9         	movff	stop@mR,fsr2l
  2725  00265C  C01D  FFDA         	movff	stop@mR+1,fsr2h
  2726  002660  50DF               	movf	indf2,w,c
  2727  002662  A4D8               	btfss	status,2,c
  2728  002664  EF36  F013         	goto	u2451
  2729  002668  EF38  F013         	goto	u2450
  2730  00266C                     u2451:
  2731  00266C  EFFE  F012         	goto	l2930
  2732  002670                     u2450:
  2733  002670                     l601:
  2734                           
  2735                           ;DC_motors.c: 144:     LATDbits.LATD4 = 0;
  2736  002670  987C               	bcf	124,4,c	;volatile
  2737  002672  0012               	return		;funcret
  2738  002674                     __end_of_stop:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _reverse *****************
  2742 ;; Defined at:
  2743 ;;		line 108 in file "DC_motors.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  mL              2   25[COMRAM] PTR struct .
  2746 ;;		 -> main@motorL(9), 
  2747 ;;  mR              2   27[COMRAM] PTR struct .
  2748 ;;		 -> main@motorR(9), 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2763 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;Total ram usage:        6 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 2
  2767 ;; This function calls:
  2768 ;;		_DCmotors_setPWM
  2769 ;; This function is called by:
  2770 ;;		_colourcards_readRGBC
  2771 ;;		_DCmotors_testing
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text11
  2776  0024C2                     __ptext11:
  2777                           	callstack 0
  2778  0024C2                     _reverse:
  2779                           	callstack 27
  2780  0024C2                     
  2781                           ;DC_motors.c: 108: void reverse(DC_motor *mL, DC_motor *mR);DC_motors.c: 109: {;DC_motor
      +                          s.c: 111:     mL->direction = 0;
  2782  0024C2  EE20 F001          	lfsr	2,1
  2783  0024C6  501A               	movf	reverse@mL^0,w,c
  2784  0024C8  26D9               	addwf	fsr2l,f,c
  2785  0024CA  501B               	movf	(reverse@mL+1)^0,w,c
  2786  0024CC  22DA               	addwfc	fsr2h,f,c
  2787  0024CE  0E00               	movlw	0
  2788  0024D0  6EDF               	movwf	indf2,c
  2789                           
  2790                           ;DC_motors.c: 112:     mR->direction = 0;
  2791  0024D2  EE20 F001          	lfsr	2,1
  2792  0024D6  501C               	movf	reverse@mR^0,w,c
  2793  0024D8  26D9               	addwf	fsr2l,f,c
  2794  0024DA  501D               	movf	(reverse@mR+1)^0,w,c
  2795  0024DC  22DA               	addwfc	fsr2h,f,c
  2796  0024DE  0E00               	movlw	0
  2797  0024E0  6EDF               	movwf	indf2,c
  2798                           
  2799                           ;DC_motors.c: 115:     while((mL->power < 100) && (mR->power < 100)){
  2800  0024E2  EF95  F012         	goto	l589
  2801  0024E6                     l2950:
  2802                           
  2803                           ;DC_motors.c: 116:         mL->power += 1;
  2804  0024E6  C01A  FFD9         	movff	reverse@mL,fsr2l
  2805  0024EA  C01B  FFDA         	movff	reverse@mL+1,fsr2h
  2806  0024EE  2ADF               	incf	indf2,f,c
  2807                           
  2808                           ;DC_motors.c: 117:         mR->power += 1;
  2809  0024F0  C01C  FFD9         	movff	reverse@mR,fsr2l
  2810  0024F4  C01D  FFDA         	movff	reverse@mR+1,fsr2h
  2811  0024F8  2ADF               	incf	indf2,f,c
  2812  0024FA                     
  2813                           ;DC_motors.c: 119:         DCmotors_setPWM(mL);
  2814  0024FA  C01A  F00F         	movff	reverse@mL,DCmotors_setPWM@m
  2815  0024FE  C01B  F010         	movff	reverse@mL+1,DCmotors_setPWM@m+1
  2816  002502  ECE8  F00C         	call	_DCmotors_setPWM	;wreg free
  2817  002506                     
  2818                           ;DC_motors.c: 120:         DCmotors_setPWM(mR);
  2819  002506  C01C  F00F         	movff	reverse@mR,DCmotors_setPWM@m
  2820  00250A  C01D  F010         	movff	reverse@mR+1,DCmotors_setPWM@m+1
  2821  00250E  ECE8  F00C         	call	_DCmotors_setPWM	;wreg free
  2822  002512                     
  2823                           ;DC_motors.c: 121:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2824  002512  0E09               	movlw	9
  2825  002514  6E1F               	movwf	(??_reverse+1)^0,c
  2826  002516  0E1E               	movlw	30
  2827  002518  6E1E               	movwf	??_reverse^0,c
  2828  00251A  0EE4               	movlw	228
  2829  00251C                     u3587:
  2830  00251C  2EE8               	decfsz	wreg,f,c
  2831  00251E  D7FE               	bra	u3587
  2832  002520  2E1E               	decfsz	??_reverse^0,f,c
  2833  002522  D7FC               	bra	u3587
  2834  002524  2E1F               	decfsz	(??_reverse+1)^0,f,c
  2835  002526  D7FA               	bra	u3587
  2836  002528  D000               	nop2	
  2837  00252A                     l589:
  2838                           
  2839                           ;DC_motors.c: 115:     while((mL->power < 100) && (mR->power < 100)){
  2840  00252A  C01A  FFD9         	movff	reverse@mL,fsr2l
  2841  00252E  C01B  FFDA         	movff	reverse@mL+1,fsr2h
  2842  002532  0E64               	movlw	100
  2843  002534  60DF               	cpfslt	indf2,c
  2844  002536  EF9F  F012         	goto	u2471
  2845  00253A  EFA1  F012         	goto	u2470
  2846  00253E                     u2471:
  2847  00253E  EFAD  F012         	goto	l594
  2848  002542                     u2470:
  2849  002542  C01C  FFD9         	movff	reverse@mR,fsr2l
  2850  002546  C01D  FFDA         	movff	reverse@mR+1,fsr2h
  2851  00254A  0E63               	movlw	99
  2852  00254C  64DF               	cpfsgt	indf2,c
  2853  00254E  EFAB  F012         	goto	u2481
  2854  002552  EFAD  F012         	goto	u2480
  2855  002556                     u2481:
  2856  002556  EF73  F012         	goto	l2950
  2857  00255A                     u2480:
  2858  00255A                     l594:
  2859  00255A  0012               	return		;funcret
  2860  00255C                     __end_of_reverse:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _forward *****************
  2864 ;; Defined at:
  2865 ;;		line 88 in file "DC_motors.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  mL              2   25[COMRAM] PTR struct .
  2868 ;;		 -> main@motorL(9), 
  2869 ;;  mR              2   27[COMRAM] PTR struct .
  2870 ;;		 -> main@motorR(9), 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;Total ram usage:        6 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 2
  2889 ;; This function calls:
  2890 ;;		_DCmotors_setPWM
  2891 ;; This function is called by:
  2892 ;;		_colourcards_readRGBC
  2893 ;;		_DCmotors_testing
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text12
  2898  00255C                     __ptext12:
  2899                           	callstack 0
  2900  00255C                     _forward:
  2901                           	callstack 27
  2902  00255C                     
  2903                           ;DC_motors.c: 88: void forward(DC_motor *mL, DC_motor *mR);DC_motors.c: 89: {;DC_motors.
      +                          c: 90:     mL->direction = 1;
  2904  00255C  EE20 F001          	lfsr	2,1
  2905  002560  501A               	movf	forward@mL^0,w,c
  2906  002562  26D9               	addwf	fsr2l,f,c
  2907  002564  501B               	movf	(forward@mL+1)^0,w,c
  2908  002566  22DA               	addwfc	fsr2h,f,c
  2909  002568  0E01               	movlw	1
  2910  00256A  6EDF               	movwf	indf2,c
  2911                           
  2912                           ;DC_motors.c: 91:     mR->direction = 1;
  2913  00256C  EE20 F001          	lfsr	2,1
  2914  002570  501C               	movf	forward@mR^0,w,c
  2915  002572  26D9               	addwf	fsr2l,f,c
  2916  002574  501D               	movf	(forward@mR+1)^0,w,c
  2917  002576  22DA               	addwfc	fsr2h,f,c
  2918  002578  0E01               	movlw	1
  2919  00257A  6EDF               	movwf	indf2,c
  2920                           
  2921                           ;DC_motors.c: 94:     while((mL->power < 100) && (mR->power < 100)){
  2922  00257C  EFE2  F012         	goto	l581
  2923  002580                     l2962:
  2924                           
  2925                           ;DC_motors.c: 95:         mL->power += 1;
  2926  002580  C01A  FFD9         	movff	forward@mL,fsr2l
  2927  002584  C01B  FFDA         	movff	forward@mL+1,fsr2h
  2928  002588  2ADF               	incf	indf2,f,c
  2929                           
  2930                           ;DC_motors.c: 96:         mR->power += 1;
  2931  00258A  C01C  FFD9         	movff	forward@mR,fsr2l
  2932  00258E  C01D  FFDA         	movff	forward@mR+1,fsr2h
  2933  002592  2ADF               	incf	indf2,f,c
  2934  002594                     
  2935                           ;DC_motors.c: 98:         DCmotors_setPWM(mL);
  2936  002594  C01A  F00F         	movff	forward@mL,DCmotors_setPWM@m
  2937  002598  C01B  F010         	movff	forward@mL+1,DCmotors_setPWM@m+1
  2938  00259C  ECE8  F00C         	call	_DCmotors_setPWM	;wreg free
  2939  0025A0                     
  2940                           ;DC_motors.c: 99:         DCmotors_setPWM(mR);
  2941  0025A0  C01C  F00F         	movff	forward@mR,DCmotors_setPWM@m
  2942  0025A4  C01D  F010         	movff	forward@mR+1,DCmotors_setPWM@m+1
  2943  0025A8  ECE8  F00C         	call	_DCmotors_setPWM	;wreg free
  2944  0025AC                     
  2945                           ;DC_motors.c: 100:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2946  0025AC  0E09               	movlw	9
  2947  0025AE  6E1F               	movwf	(??_forward+1)^0,c
  2948  0025B0  0E1E               	movlw	30
  2949  0025B2  6E1E               	movwf	??_forward^0,c
  2950  0025B4  0EE4               	movlw	228
  2951  0025B6                     u3597:
  2952  0025B6  2EE8               	decfsz	wreg,f,c
  2953  0025B8  D7FE               	bra	u3597
  2954  0025BA  2E1E               	decfsz	??_forward^0,f,c
  2955  0025BC  D7FC               	bra	u3597
  2956  0025BE  2E1F               	decfsz	(??_forward+1)^0,f,c
  2957  0025C0  D7FA               	bra	u3597
  2958  0025C2  D000               	nop2	
  2959  0025C4                     l581:
  2960                           
  2961                           ;DC_motors.c: 94:     while((mL->power < 100) && (mR->power < 100)){
  2962  0025C4  C01A  FFD9         	movff	forward@mL,fsr2l
  2963  0025C8  C01B  FFDA         	movff	forward@mL+1,fsr2h
  2964  0025CC  0E64               	movlw	100
  2965  0025CE  60DF               	cpfslt	indf2,c
  2966  0025D0  EFEC  F012         	goto	u2491
  2967  0025D4  EFEE  F012         	goto	u2490
  2968  0025D8                     u2491:
  2969  0025D8  EFFA  F012         	goto	l586
  2970  0025DC                     u2490:
  2971  0025DC  C01C  FFD9         	movff	forward@mR,fsr2l
  2972  0025E0  C01D  FFDA         	movff	forward@mR+1,fsr2h
  2973  0025E4  0E63               	movlw	99
  2974  0025E6  64DF               	cpfsgt	indf2,c
  2975  0025E8  EFF8  F012         	goto	u2501
  2976  0025EC  EFFA  F012         	goto	u2500
  2977  0025F0                     u2501:
  2978  0025F0  EFC0  F012         	goto	l2962
  2979  0025F4                     u2500:
  2980  0025F4                     l586:
  2981  0025F4  0012               	return		;funcret
  2982  0025F6                     __end_of_forward:
  2983                           	callstack 0
  2984                           
  2985 ;; *************** function _DCmotors_setPWM *****************
  2986 ;; Defined at:
  2987 ;;		line 51 in file "DC_motors.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  m               2   14[COMRAM] PTR struct .
  2990 ;;		 -> main@motorR(9), main@motorL(9), 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  PWMduty         2   23[COMRAM] int 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3005 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3006 ;;Total ram usage:       11 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 1
  3009 ;; This function calls:
  3010 ;;		___awdiv
  3011 ;;		___wmul
  3012 ;; This function is called by:
  3013 ;;		_forward
  3014 ;;		_reverse
  3015 ;;		_stop
  3016 ;;		_left
  3017 ;;		_right
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text13
  3022  0019D0                     __ptext13:
  3023                           	callstack 0
  3024  0019D0                     _DCmotors_setPWM:
  3025                           	callstack 26
  3026  0019D0                     
  3027                           ;DC_motors.c: 51: void DCmotors_setPWM(DC_motor *m);DC_motors.c: 52: {;DC_motors.c: 53: 
      +                           int PWMduty;;DC_motors.c: 55:  if (m->direction){
  3028  0019D0  EE20 F001          	lfsr	2,1
  3029  0019D4  500F               	movf	DCmotors_setPWM@m^0,w,c
  3030  0019D6  26D9               	addwf	fsr2l,f,c
  3031  0019D8  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3032  0019DA  22DA               	addwfc	fsr2h,f,c
  3033  0019DC  50DF               	movf	indf2,w,c
  3034  0019DE  B4D8               	btfsc	status,2,c
  3035  0019E0  EFF4  F00C         	goto	u1881
  3036  0019E4  EFF6  F00C         	goto	u1880
  3037  0019E8                     u1881:
  3038  0019E8  EF27  F00D         	goto	l2620
  3039  0019EC                     u1880:
  3040  0019EC                     
  3041                           ;DC_motors.c: 56:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
  3042  0019EC  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  3043  0019F0  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  3044  0019F4  50DF               	movf	indf2,w,c
  3045  0019F6  6E11               	movwf	??_DCmotors_setPWM^0,c
  3046  0019F8  5011               	movf	??_DCmotors_setPWM^0,w,c
  3047  0019FA  6E01               	movwf	___wmul@multiplier^0,c
  3048  0019FC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3049  0019FE  EE20 F007          	lfsr	2,7
  3050  001A02  500F               	movf	DCmotors_setPWM@m^0,w,c
  3051  001A04  26D9               	addwf	fsr2l,f,c
  3052  001A06  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3053  001A08  22DA               	addwfc	fsr2h,f,c
  3054  001A0A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3055  001A0E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3056  001A12  ECF8  F014         	call	___wmul	;wreg free
  3057  001A16  C001  F007         	movff	?___wmul,___awdiv@dividend
  3058  001A1A  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  3059  001A1E  0E00               	movlw	0
  3060  001A20  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3061  001A22  0E64               	movlw	100
  3062  001A24  6E09               	movwf	___awdiv@divisor^0,c
  3063  001A26  ECFF  F011         	call	___awdiv	;wreg free
  3064  001A2A  EE20 F007          	lfsr	2,7
  3065  001A2E  500F               	movf	DCmotors_setPWM@m^0,w,c
  3066  001A30  26D9               	addwf	fsr2l,f,c
  3067  001A32  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3068  001A34  22DA               	addwfc	fsr2h,f,c
  3069  001A36  CFDE F012          	movff	postinc2,??_DCmotors_setPWM+1
  3070  001A3A  CFDD F013          	movff	postdec2,??_DCmotors_setPWM+2
  3071  001A3E  5007               	movf	?___awdiv^0,w,c
  3072  001A40  5C12               	subwf	(??_DCmotors_setPWM+1)^0,w,c
  3073  001A42  6E18               	movwf	DCmotors_setPWM@PWMduty^0,c
  3074  001A44  5008               	movf	(?___awdiv+1)^0,w,c
  3075  001A46  5813               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
  3076  001A48  6E19               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
  3077                           
  3078                           ;DC_motors.c: 57:  } else {
  3079  001A4A  EF4A  F00D         	goto	l2622
  3080  001A4E                     l2620:
  3081                           
  3082                           ;DC_motors.c: 58:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  3083  001A4E  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
  3084  001A52  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
  3085  001A56  50DF               	movf	indf2,w,c
  3086  001A58  6E11               	movwf	??_DCmotors_setPWM^0,c
  3087  001A5A  5011               	movf	??_DCmotors_setPWM^0,w,c
  3088  001A5C  6E01               	movwf	___wmul@multiplier^0,c
  3089  001A5E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3090  001A60  EE20 F007          	lfsr	2,7
  3091  001A64  500F               	movf	DCmotors_setPWM@m^0,w,c
  3092  001A66  26D9               	addwf	fsr2l,f,c
  3093  001A68  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3094  001A6A  22DA               	addwfc	fsr2h,f,c
  3095  001A6C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3096  001A70  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3097  001A74  ECF8  F014         	call	___wmul	;wreg free
  3098  001A78  C001  F007         	movff	?___wmul,___awdiv@dividend
  3099  001A7C  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  3100  001A80  0E00               	movlw	0
  3101  001A82  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3102  001A84  0E64               	movlw	100
  3103  001A86  6E09               	movwf	___awdiv@divisor^0,c
  3104  001A88  ECFF  F011         	call	___awdiv	;wreg free
  3105  001A8C  C007  F018         	movff	?___awdiv,DCmotors_setPWM@PWMduty
  3106  001A90  C008  F019         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
  3107  001A94                     l2622:
  3108                           
  3109                           ;DC_motors.c: 61:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  3110  001A94  EE20 F002          	lfsr	2,2
  3111  001A98  500F               	movf	DCmotors_setPWM@m^0,w,c
  3112  001A9A  26D9               	addwf	fsr2l,f,c
  3113  001A9C  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3114  001A9E  22DA               	addwfc	fsr2h,f,c
  3115  001AA0  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
  3116  001AA4  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
  3117  001AA8  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  3118  001AAC  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  3119  001AB0  C018  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
  3120  001AB4                     
  3121                           ;DC_motors.c: 63:  if (m->direction){
  3122  001AB4  EE20 F001          	lfsr	2,1
  3123  001AB8  500F               	movf	DCmotors_setPWM@m^0,w,c
  3124  001ABA  26D9               	addwf	fsr2l,f,c
  3125  001ABC  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3126  001ABE  22DA               	addwfc	fsr2h,f,c
  3127  001AC0  50DF               	movf	indf2,w,c
  3128  001AC2  B4D8               	btfsc	status,2,c
  3129  001AC4  EF66  F00D         	goto	u1891
  3130  001AC8  EF68  F00D         	goto	u1890
  3131  001ACC                     u1891:
  3132  001ACC  EF9D  F00D         	goto	l2628
  3133  001AD0                     u1890:
  3134  001AD0                     
  3135                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
  3136  001AD0  EE20 F004          	lfsr	2,4
  3137  001AD4  500F               	movf	DCmotors_setPWM@m^0,w,c
  3138  001AD6  26D9               	addwf	fsr2l,f,c
  3139  001AD8  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3140  001ADA  22DA               	addwfc	fsr2h,f,c
  3141  001ADC  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
  3142  001AE0  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
  3143  001AE4  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  3144  001AE8  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  3145  001AEC  EE10 F004          	lfsr	1,4
  3146  001AF0  500F               	movf	DCmotors_setPWM@m^0,w,c
  3147  001AF2  26E1               	addwf	fsr1l,f,c
  3148  001AF4  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3149  001AF6  22E2               	addwfc	fsr1h,f,c
  3150  001AF8  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
  3151  001AFC  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
  3152  001B00  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  3153  001B04  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  3154  001B08  50E7               	movf	indf1,w,c
  3155  001B0A  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
  3156  001B0C  EE10 F006          	lfsr	1,6
  3157  001B10  500F               	movf	DCmotors_setPWM@m^0,w,c
  3158  001B12  26E1               	addwf	fsr1l,f,c
  3159  001B14  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3160  001B16  22E2               	addwfc	fsr1h,f,c
  3161  001B18  50E7               	movf	indf1,w,c
  3162  001B1A  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
  3163  001B1C  0E01               	movlw	1
  3164  001B1E  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
  3165  001B20  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
  3166  001B22  EF95  F00D         	goto	u1904
  3167  001B26                     u1905:
  3168  001B26  90D8               	bcf	status,0,c
  3169  001B28  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  3170  001B2A                     u1904:
  3171  001B2A  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  3172  001B2C  EF93  F00D         	goto	u1905
  3173  001B30  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
  3174  001B32  1015               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
  3175  001B34  6EDF               	movwf	indf2,c
  3176                           
  3177                           ;DC_motors.c: 65:  } else {
  3178  001B36  EFD1  F00D         	goto	l573
  3179  001B3A                     l2628:
  3180                           
  3181                           ;DC_motors.c: 66:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
  3182  001B3A  EE20 F004          	lfsr	2,4
  3183  001B3E  500F               	movf	DCmotors_setPWM@m^0,w,c
  3184  001B40  26D9               	addwf	fsr2l,f,c
  3185  001B42  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3186  001B44  22DA               	addwfc	fsr2h,f,c
  3187  001B46  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
  3188  001B4A  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
  3189  001B4E  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
  3190  001B52  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
  3191  001B56  EE10 F004          	lfsr	1,4
  3192  001B5A  500F               	movf	DCmotors_setPWM@m^0,w,c
  3193  001B5C  26E1               	addwf	fsr1l,f,c
  3194  001B5E  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3195  001B60  22E2               	addwfc	fsr1h,f,c
  3196  001B62  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
  3197  001B66  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
  3198  001B6A  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
  3199  001B6E  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
  3200  001B72  50E7               	movf	indf1,w,c
  3201  001B74  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
  3202  001B76  EE10 F006          	lfsr	1,6
  3203  001B7A  500F               	movf	DCmotors_setPWM@m^0,w,c
  3204  001B7C  26E1               	addwf	fsr1l,f,c
  3205  001B7E  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
  3206  001B80  22E2               	addwfc	fsr1h,f,c
  3207  001B82  50E7               	movf	indf1,w,c
  3208  001B84  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
  3209  001B86  0E01               	movlw	1
  3210  001B88  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
  3211  001B8A  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
  3212  001B8C  EFCA  F00D         	goto	u1914
  3213  001B90                     u1915:
  3214  001B90  90D8               	bcf	status,0,c
  3215  001B92  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
  3216  001B94                     u1914:
  3217  001B94  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
  3218  001B96  EFC8  F00D         	goto	u1915
  3219  001B9A  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
  3220  001B9C  0AFF               	xorlw	255
  3221  001B9E  1415               	andwf	(??_DCmotors_setPWM+4)^0,w,c
  3222  001BA0  6EDF               	movwf	indf2,c
  3223  001BA2                     l573:
  3224  001BA2  0012               	return		;funcret
  3225  001BA4                     __end_of_DCmotors_setPWM:
  3226                           	callstack 0
  3227                           
  3228 ;; *************** function ___wmul *****************
  3229 ;; Defined at:
  3230 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  multiplier      2    0[COMRAM] unsigned int 
  3233 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  product         2    4[COMRAM] unsigned int 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  2    0[COMRAM] unsigned int 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, prodl, prodh
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;Total ram usage:        6 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_DCmotors_setPWM
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text14
  3259  0029F0                     __ptext14:
  3260                           	callstack 0
  3261  0029F0                     ___wmul:
  3262                           	callstack 26
  3263  0029F0  5001               	movf	___wmul@multiplier^0,w,c
  3264  0029F2  0203               	mulwf	___wmul@multiplicand^0,c
  3265  0029F4  CFF3 F005          	movff	prodl,___wmul@product
  3266  0029F8  CFF4 F006          	movff	prodh,___wmul@product+1
  3267  0029FC  5001               	movf	___wmul@multiplier^0,w,c
  3268  0029FE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3269  002A00  50F3               	movf	243,w,c
  3270  002A02  2606               	addwf	(___wmul@product+1)^0,f,c
  3271  002A04  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3272  002A06  0203               	mulwf	___wmul@multiplicand^0,c
  3273  002A08  50F3               	movf	243,w,c
  3274  002A0A  2606               	addwf	(___wmul@product+1)^0,f,c
  3275  002A0C  C005  F001         	movff	___wmul@product,?___wmul
  3276  002A10  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3277  002A14  0012               	return		;funcret
  3278  002A16                     __end_of___wmul:
  3279                           	callstack 0
  3280                           
  3281 ;; *************** function ___awdiv *****************
  3282 ;; Defined at:
  3283 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  dividend        2    6[COMRAM] int 
  3286 ;;  divisor         2    8[COMRAM] int 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  quotient        2   12[COMRAM] int 
  3289 ;;  sign            1   11[COMRAM] unsigned char 
  3290 ;;  counter         1   10[COMRAM] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  2    6[COMRAM] int 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3301 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;Total ram usage:        8 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_DCmotors_setPWM
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text15
  3314  0023FE                     __ptext15:
  3315                           	callstack 0
  3316  0023FE                     ___awdiv:
  3317                           	callstack 26
  3318  0023FE  0E00               	movlw	0
  3319  002400  6E0C               	movwf	___awdiv@sign^0,c
  3320  002402  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  3321  002404  EF08  F012         	goto	u1820
  3322  002408  EF06  F012         	goto	u1821
  3323  00240C                     u1821:
  3324  00240C  EF0E  F012         	goto	l2556
  3325  002410                     u1820:
  3326  002410  6C09               	negf	___awdiv@divisor^0,c
  3327  002412  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  3328  002414  B0D8               	btfsc	status,0,c
  3329  002416  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  3330  002418  0E01               	movlw	1
  3331  00241A  6E0C               	movwf	___awdiv@sign^0,c
  3332  00241C                     l2556:
  3333  00241C  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  3334  00241E  EF15  F012         	goto	u1830
  3335  002422  EF13  F012         	goto	u1831
  3336  002426                     u1831:
  3337  002426  EF1B  F012         	goto	l2562
  3338  00242A                     u1830:
  3339  00242A  6C07               	negf	___awdiv@dividend^0,c
  3340  00242C  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  3341  00242E  B0D8               	btfsc	status,0,c
  3342  002430  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  3343  002432  0E01               	movlw	1
  3344  002434  1A0C               	xorwf	___awdiv@sign^0,f,c
  3345  002436                     l2562:
  3346  002436  0E00               	movlw	0
  3347  002438  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  3348  00243A  0E00               	movlw	0
  3349  00243C  6E0D               	movwf	___awdiv@quotient^0,c
  3350  00243E  5009               	movf	___awdiv@divisor^0,w,c
  3351  002440  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  3352  002442  B4D8               	btfsc	status,2,c
  3353  002444  EF26  F012         	goto	u1841
  3354  002448  EF28  F012         	goto	u1840
  3355  00244C                     u1841:
  3356  00244C  EF50  F012         	goto	l2584
  3357  002450                     u1840:
  3358  002450  0E01               	movlw	1
  3359  002452  6E0B               	movwf	___awdiv@counter^0,c
  3360  002454  EF30  F012         	goto	l2570
  3361  002458                     l2568:
  3362  002458  90D8               	bcf	status,0,c
  3363  00245A  3609               	rlcf	___awdiv@divisor^0,f,c
  3364  00245C  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  3365  00245E  2A0B               	incf	___awdiv@counter^0,f,c
  3366  002460                     l2570:
  3367  002460  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  3368  002462  EF35  F012         	goto	u1851
  3369  002466  EF37  F012         	goto	u1850
  3370  00246A                     u1851:
  3371  00246A  EF2C  F012         	goto	l2568
  3372  00246E                     u1850:
  3373  00246E                     l2572:
  3374  00246E  90D8               	bcf	status,0,c
  3375  002470  360D               	rlcf	___awdiv@quotient^0,f,c
  3376  002472  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  3377  002474  5009               	movf	___awdiv@divisor^0,w,c
  3378  002476  5C07               	subwf	___awdiv@dividend^0,w,c
  3379  002478  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3380  00247A  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  3381  00247C  A0D8               	btfss	status,0,c
  3382  00247E  EF43  F012         	goto	u1861
  3383  002482  EF45  F012         	goto	u1860
  3384  002486                     u1861:
  3385  002486  EF4A  F012         	goto	l2580
  3386  00248A                     u1860:
  3387  00248A  5009               	movf	___awdiv@divisor^0,w,c
  3388  00248C  5E07               	subwf	___awdiv@dividend^0,f,c
  3389  00248E  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3390  002490  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  3391  002492  800D               	bsf	___awdiv@quotient^0,0,c
  3392  002494                     l2580:
  3393  002494  90D8               	bcf	status,0,c
  3394  002496  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  3395  002498  3209               	rrcf	___awdiv@divisor^0,f,c
  3396  00249A  2E0B               	decfsz	___awdiv@counter^0,f,c
  3397  00249C  EF37  F012         	goto	l2572
  3398  0024A0                     l2584:
  3399  0024A0  500C               	movf	___awdiv@sign^0,w,c
  3400  0024A2  B4D8               	btfsc	status,2,c
  3401  0024A4  EF56  F012         	goto	u1871
  3402  0024A8  EF58  F012         	goto	u1870
  3403  0024AC                     u1871:
  3404  0024AC  EF5C  F012         	goto	l2588
  3405  0024B0                     u1870:
  3406  0024B0  6C0D               	negf	___awdiv@quotient^0,c
  3407  0024B2  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  3408  0024B4  B0D8               	btfsc	status,0,c
  3409  0024B6  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  3410  0024B8                     l2588:
  3411  0024B8  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3412  0024BC  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3413  0024C0  0012               	return		;funcret
  3414  0024C2                     __end_of___awdiv:
  3415                           	callstack 0
  3416                           
  3417 ;; *************** function _colourclick_readRGBC2 *****************
  3418 ;; Defined at:
  3419 ;;		line 140 in file "colour_click.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  tmpval          2   13[COMRAM] PTR struct .
  3422 ;;		 -> colourcards_testingRGBC@abs(8), 
  3423 ;;  mode            1   15[COMRAM] unsigned char 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3435 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3438 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3439 ;;Total ram usage:        5 bytes
  3440 ;; Hardware stack levels used: 1
  3441 ;; Hardware stack levels required when called: 4
  3442 ;; This function calls:
  3443 ;;		_colourclickLEDs_C
  3444 ;;		_colourclick_readRGBC
  3445 ;; This function is called by:
  3446 ;;		_colourcards_readRGBC
  3447 ;;		_colourcards_testingRGBC
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text16
  3452  001ECE                     __ptext16:
  3453                           	callstack 0
  3454  001ECE                     _colourclick_readRGBC2:
  3455                           	callstack 25
  3456  001ECE                     
  3457                           ;colour_click.c: 140: void colourclick_readRGBC2(RGBC_val *tmpval, unsigned char mode);c
      +                          olour_click.c: 141: {;colour_click.c: 142:     colourclickLEDs_C(0);
  3458  001ECE  0E00               	movlw	0
  3459  001ED0  EC0B  F015         	call	_colourclickLEDs_C
  3460  001ED4                     
  3461                           ;colour_click.c: 143:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3462  001ED4  0E09               	movlw	9
  3463  001ED6  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3464  001ED8  0E1E               	movlw	30
  3465  001EDA  6E11               	movwf	??_colourclick_readRGBC2^0,c
  3466  001EDC  0EE4               	movlw	228
  3467  001EDE                     u3607:
  3468  001EDE  2EE8               	decfsz	wreg,f,c
  3469  001EE0  D7FE               	bra	u3607
  3470  001EE2  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
  3471  001EE4  D7FC               	bra	u3607
  3472  001EE6  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3473  001EE8  D7FA               	bra	u3607
  3474  001EEA  D000               	nop2	
  3475  001EEC                     
  3476                           ;colour_click.c: 145:     if (mode==1) {
  3477  001EEC  0410               	decf	colourclick_readRGBC2@mode^0,w,c
  3478  001EEE  A4D8               	btfss	status,2,c
  3479  001EF0  EF7C  F00F         	goto	u2401
  3480  001EF4  EF7E  F00F         	goto	u2400
  3481  001EF8                     u2401:
  3482  001EF8  EFAC  F00F         	goto	l2890
  3483  001EFC                     u2400:
  3484  001EFC                     
  3485                           ;colour_click.c: 146:         LATGbits.LATG1 = 1;
  3486  001EFC  827F               	bsf	127,1,c	;volatile
  3487  001EFE                     
  3488                           ;colour_click.c: 147:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3489  001EFE  0E52               	movlw	82
  3490  001F00  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3491  001F02  0E2B               	movlw	43
  3492  001F04  6E11               	movwf	??_colourclick_readRGBC2^0,c
  3493  001F06  0E00               	movlw	0
  3494  001F08                     u3617:
  3495  001F08  2EE8               	decfsz	wreg,f,c
  3496  001F0A  D7FE               	bra	u3617
  3497  001F0C  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
  3498  001F0E  D7FC               	bra	u3617
  3499  001F10  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3500  001F12  D7FA               	bra	u3617
  3501  001F14  D000               	nop2	
  3502  001F16                     
  3503                           ;colour_click.c: 148:         colourclick_readRGBC(tmpval);
  3504  001F16  C00E  F00C         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  3505  001F1A  C00F  F00D         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  3506  001F1E  EC3A  F013         	call	_colourclick_readRGBC	;wreg free
  3507  001F22                     
  3508                           ;colour_click.c: 149:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3509  001F22  0E52               	movlw	82
  3510  001F24  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3511  001F26  0E2B               	movlw	43
  3512  001F28  6E11               	movwf	??_colourclick_readRGBC2^0,c
  3513  001F2A  0E00               	movlw	0
  3514  001F2C                     u3627:
  3515  001F2C  2EE8               	decfsz	wreg,f,c
  3516  001F2E  D7FE               	bra	u3627
  3517  001F30  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
  3518  001F32  D7FC               	bra	u3627
  3519  001F34  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3520  001F36  D7FA               	bra	u3627
  3521  001F38  D000               	nop2	
  3522  001F3A                     
  3523                           ;colour_click.c: 150:         LATGbits.LATG1 = 0;
  3524  001F3A  927F               	bcf	127,1,c	;volatile
  3525  001F3C                     l2888:
  3526                           
  3527                           ;colour_click.c: 151:         _delay((unsigned long)((20)*(64000000/4000.0)));
  3528  001F3C  0E02               	movlw	2
  3529  001F3E  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3530  001F40  0EA0               	movlw	160
  3531  001F42  6E11               	movwf	??_colourclick_readRGBC2^0,c
  3532  001F44  0E92               	movlw	146
  3533  001F46                     u3637:
  3534  001F46  2EE8               	decfsz	wreg,f,c
  3535  001F48  D7FE               	bra	u3637
  3536  001F4A  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
  3537  001F4C  D7FC               	bra	u3637
  3538  001F4E  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3539  001F50  D7FA               	bra	u3637
  3540  001F52  D000               	nop2	
  3541                           
  3542                           ;colour_click.c: 152:     } else if (mode==2) {
  3543  001F54  EF02  F010         	goto	l2918
  3544  001F58                     l2890:
  3545  001F58  0E02               	movlw	2
  3546  001F5A  1810               	xorwf	colourclick_readRGBC2@mode^0,w,c
  3547  001F5C  A4D8               	btfss	status,2,c
  3548  001F5E  EFB3  F00F         	goto	u2411
  3549  001F62  EFB5  F00F         	goto	u2410
  3550  001F66                     u2411:
  3551  001F66  EFD7  F00F         	goto	l2904
  3552  001F6A                     u2410:
  3553  001F6A                     
  3554                           ;colour_click.c: 153:         LATAbits.LATA4 = 1;
  3555  001F6A  8879               	bsf	121,4,c	;volatile
  3556  001F6C                     
  3557                           ;colour_click.c: 154:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3558  001F6C  0E52               	movlw	82
  3559  001F6E  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3560  001F70  0E2B               	movlw	43
  3561  001F72  6E11               	movwf	??_colourclick_readRGBC2^0,c
  3562  001F74  0E00               	movlw	0
  3563  001F76                     u3647:
  3564  001F76  2EE8               	decfsz	wreg,f,c
  3565  001F78  D7FE               	bra	u3647
  3566  001F7A  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
  3567  001F7C  D7FC               	bra	u3647
  3568  001F7E  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3569  001F80  D7FA               	bra	u3647
  3570  001F82  D000               	nop2	
  3571  001F84                     
  3572                           ;colour_click.c: 155:         colourclick_readRGBC(tmpval);
  3573  001F84  C00E  F00C         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  3574  001F88  C00F  F00D         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  3575  001F8C  EC3A  F013         	call	_colourclick_readRGBC	;wreg free
  3576  001F90                     
  3577                           ;colour_click.c: 156:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3578  001F90  0E52               	movlw	82
  3579  001F92  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3580  001F94  0E2B               	movlw	43
  3581  001F96  6E11               	movwf	??_colourclick_readRGBC2^0,c
  3582  001F98  0E00               	movlw	0
  3583  001F9A                     u3657:
  3584  001F9A  2EE8               	decfsz	wreg,f,c
  3585  001F9C  D7FE               	bra	u3657
  3586  001F9E  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
  3587  001FA0  D7FC               	bra	u3657
  3588  001FA2  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3589  001FA4  D7FA               	bra	u3657
  3590  001FA6  D000               	nop2	
  3591  001FA8                     
  3592                           ;colour_click.c: 157:         LATAbits.LATA4 = 0;
  3593  001FA8  9879               	bcf	121,4,c	;volatile
  3594  001FAA  EF9E  F00F         	goto	l2888
  3595  001FAE                     l2904:
  3596  001FAE  0E03               	movlw	3
  3597  001FB0  1810               	xorwf	colourclick_readRGBC2@mode^0,w,c
  3598  001FB2  A4D8               	btfss	status,2,c
  3599  001FB4  EFDE  F00F         	goto	u2421
  3600  001FB8  EFE0  F00F         	goto	u2420
  3601  001FBC                     u2421:
  3602  001FBC  EF02  F010         	goto	l2918
  3603  001FC0                     u2420:
  3604  001FC0                     
  3605                           ;colour_click.c: 160:         LATFbits.LATF7 = 1;
  3606  001FC0  8E7E               	bsf	126,7,c	;volatile
  3607  001FC2                     
  3608                           ;colour_click.c: 161:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3609  001FC2  0E52               	movlw	82
  3610  001FC4  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3611  001FC6  0E2B               	movlw	43
  3612  001FC8  6E11               	movwf	??_colourclick_readRGBC2^0,c
  3613  001FCA  0E00               	movlw	0
  3614  001FCC                     u3667:
  3615  001FCC  2EE8               	decfsz	wreg,f,c
  3616  001FCE  D7FE               	bra	u3667
  3617  001FD0  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
  3618  001FD2  D7FC               	bra	u3667
  3619  001FD4  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3620  001FD6  D7FA               	bra	u3667
  3621  001FD8  D000               	nop2	
  3622  001FDA                     
  3623                           ;colour_click.c: 162:         colourclick_readRGBC(tmpval);
  3624  001FDA  C00E  F00C         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
  3625  001FDE  C00F  F00D         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
  3626  001FE2  EC3A  F013         	call	_colourclick_readRGBC	;wreg free
  3627  001FE6                     
  3628                           ;colour_click.c: 163:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  3629  001FE6  0E52               	movlw	82
  3630  001FE8  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3631  001FEA  0E2B               	movlw	43
  3632  001FEC  6E11               	movwf	??_colourclick_readRGBC2^0,c
  3633  001FEE  0E00               	movlw	0
  3634  001FF0                     u3677:
  3635  001FF0  2EE8               	decfsz	wreg,f,c
  3636  001FF2  D7FE               	bra	u3677
  3637  001FF4  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
  3638  001FF6  D7FC               	bra	u3677
  3639  001FF8  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3640  001FFA  D7FA               	bra	u3677
  3641  001FFC  D000               	nop2	
  3642  001FFE                     
  3643                           ;colour_click.c: 164:         LATFbits.LATF7 = 0;
  3644  001FFE  9E7E               	bcf	126,7,c	;volatile
  3645  002000  EF9E  F00F         	goto	l2888
  3646  002004                     l2918:
  3647                           
  3648                           ;colour_click.c: 168:     colourclickLEDs_C(1);
  3649  002004  0E01               	movlw	1
  3650  002006  EC0B  F015         	call	_colourclickLEDs_C
  3651  00200A                     
  3652                           ;colour_click.c: 169:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3653  00200A  0E09               	movlw	9
  3654  00200C  6E12               	movwf	(??_colourclick_readRGBC2+1)^0,c
  3655  00200E  0E1E               	movlw	30
  3656  002010  6E11               	movwf	??_colourclick_readRGBC2^0,c
  3657  002012  0EE4               	movlw	228
  3658  002014                     u3687:
  3659  002014  2EE8               	decfsz	wreg,f,c
  3660  002016  D7FE               	bra	u3687
  3661  002018  2E11               	decfsz	??_colourclick_readRGBC2^0,f,c
  3662  00201A  D7FC               	bra	u3687
  3663  00201C  2E12               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
  3664  00201E  D7FA               	bra	u3687
  3665  002020  D000               	nop2	
  3666  002022  0012               	return		;funcret
  3667  002024                     __end_of_colourclick_readRGBC2:
  3668                           	callstack 0
  3669                           
  3670 ;; *************** function _colourclick_readRGBC *****************
  3671 ;; Defined at:
  3672 ;;		line 128 in file "colour_click.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  tmpval          2   11[COMRAM] PTR struct .
  3675 ;;		 -> colourclick_calibration@current(8), colourclick_calibration@initial(8), colourcards_testingRGBC@abs(8), main@cur
      +rent(8), 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;Total ram usage:        2 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 3
  3694 ;; This function calls:
  3695 ;;		_colourclick_readB
  3696 ;;		_colourclick_readC
  3697 ;;		_colourclick_readG
  3698 ;;		_colourclick_readR
  3699 ;; This function is called by:
  3700 ;;		_colourcards_readRGBC
  3701 ;;		_colourclick_readRGBC2
  3702 ;;		_colourcards_testingRGBC
  3703 ;;		_colourclick_calibration
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text17
  3708  002674                     __ptext17:
  3709                           	callstack 0
  3710  002674                     _colourclick_readRGBC:
  3711                           	callstack 25
  3712  002674                     
  3713                           ;colour_click.c: 128: void colourclick_readRGBC(RGBC_val *tmpval);colour_click.c: 129: {
      +                          ;colour_click.c: 130:     tmpval->R = colourclick_readR();
  3714  002674  EC69  F013         	call	_colourclick_readR	;wreg free
  3715  002678  C00C  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
  3716  00267C  C00D  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
  3717  002680  C005  FFDE         	movff	?_colourclick_readR,postinc2
  3718  002684  C006  FFDD         	movff	?_colourclick_readR+1,postdec2
  3719                           
  3720                           ;colour_click.c: 131:     tmpval->G = colourclick_readG();
  3721  002688  EC91  F013         	call	_colourclick_readG	;wreg free
  3722  00268C  EE20 F002          	lfsr	2,2
  3723  002690  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
  3724  002692  26D9               	addwf	fsr2l,f,c
  3725  002694  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  3726  002696  22DA               	addwfc	fsr2h,f,c
  3727  002698  C005  FFDE         	movff	?_colourclick_readG,postinc2
  3728  00269C  C006  FFDD         	movff	?_colourclick_readG+1,postdec2
  3729                           
  3730                           ;colour_click.c: 132:     tmpval->B = colourclick_readB();
  3731  0026A0  ECE1  F013         	call	_colourclick_readB	;wreg free
  3732  0026A4  EE20 F004          	lfsr	2,4
  3733  0026A8  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
  3734  0026AA  26D9               	addwf	fsr2l,f,c
  3735  0026AC  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  3736  0026AE  22DA               	addwfc	fsr2h,f,c
  3737  0026B0  C005  FFDE         	movff	?_colourclick_readB,postinc2
  3738  0026B4  C006  FFDD         	movff	?_colourclick_readB+1,postdec2
  3739                           
  3740                           ;colour_click.c: 133:     tmpval->C = colourclick_readC();
  3741  0026B8  ECB9  F013         	call	_colourclick_readC	;wreg free
  3742  0026BC  EE20 F006          	lfsr	2,6
  3743  0026C0  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
  3744  0026C2  26D9               	addwf	fsr2l,f,c
  3745  0026C4  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
  3746  0026C6  22DA               	addwfc	fsr2h,f,c
  3747  0026C8  C005  FFDE         	movff	?_colourclick_readC,postinc2
  3748  0026CC  C006  FFDD         	movff	?_colourclick_readC+1,postdec2
  3749  0026D0  0012               	return		;funcret
  3750  0026D2                     __end_of_colourclick_readRGBC:
  3751                           	callstack 0
  3752                           
  3753 ;; *************** function _colourclick_readR *****************
  3754 ;; Defined at:
  3755 ;;		line 53 in file "colour_click.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;		None
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  tmp             2    9[COMRAM] unsigned int 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  2    4[COMRAM] unsigned int 
  3762 ;; Registers used:
  3763 ;;		wreg, status,2, status,0, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3770 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3771 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3772 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3773 ;;Total ram usage:        7 bytes
  3774 ;; Hardware stack levels used: 1
  3775 ;; Hardware stack levels required when called: 2
  3776 ;; This function calls:
  3777 ;;		_I2C_2_Master_Read
  3778 ;;		_I2C_2_Master_RepStart
  3779 ;;		_I2C_2_Master_Start
  3780 ;;		_I2C_2_Master_Stop
  3781 ;;		_I2C_2_Master_Write
  3782 ;; This function is called by:
  3783 ;;		_colourclick_readRGBC
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text18
  3788  0026D2                     __ptext18:
  3789                           	callstack 0
  3790  0026D2                     _colourclick_readR:
  3791                           	callstack 25
  3792  0026D2                     
  3793                           ;colour_click.c: 55:  unsigned int tmp;;colour_click.c: 56:  I2C_2_Master_Start();
  3794  0026D2  EC88  F015         	call	_I2C_2_Master_Start	;wreg free
  3795                           
  3796                           ;colour_click.c: 57:  I2C_2_Master_Write(0x52 | 0x00);
  3797  0026D6  0E52               	movlw	82
  3798  0026D8  EC77  F015         	call	_I2C_2_Master_Write
  3799                           
  3800                           ;colour_click.c: 58:  I2C_2_Master_Write(0xA0 | 0x16);
  3801  0026DC  0EB6               	movlw	182
  3802  0026DE  EC77  F015         	call	_I2C_2_Master_Write
  3803                           
  3804                           ;colour_click.c: 59:  I2C_2_Master_RepStart();
  3805  0026E2  EC8D  F015         	call	_I2C_2_Master_RepStart	;wreg free
  3806                           
  3807                           ;colour_click.c: 60:  I2C_2_Master_Write(0x52 | 0x01);
  3808  0026E6  0E53               	movlw	83
  3809  0026E8  EC77  F015         	call	_I2C_2_Master_Write
  3810                           
  3811                           ;colour_click.c: 61:  tmp=I2C_2_Master_Read(1);
  3812  0026EC  0E01               	movlw	1
  3813  0026EE  EC7F  F014         	call	_I2C_2_Master_Read
  3814  0026F2  6E07               	movwf	??_colourclick_readR^0,c
  3815  0026F4  5007               	movf	??_colourclick_readR^0,w,c
  3816  0026F6  6E0A               	movwf	colourclick_readR@tmp^0,c
  3817  0026F8  6A0B               	clrf	(colourclick_readR@tmp+1)^0,c
  3818                           
  3819                           ;colour_click.c: 62:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3820  0026FA  0E00               	movlw	0
  3821  0026FC  EC7F  F014         	call	_I2C_2_Master_Read
  3822  002700  6E07               	movwf	??_colourclick_readR^0,c
  3823  002702  5007               	movf	??_colourclick_readR^0,w,c
  3824  002704  6E09               	movwf	(??_colourclick_readR+2)^0,c
  3825  002706  6A08               	clrf	(??_colourclick_readR+1)^0,c
  3826  002708  500A               	movf	colourclick_readR@tmp^0,w,c
  3827  00270A  1008               	iorwf	(??_colourclick_readR+1)^0,w,c
  3828  00270C  6E0A               	movwf	colourclick_readR@tmp^0,c
  3829  00270E  500B               	movf	(colourclick_readR@tmp+1)^0,w,c
  3830  002710  1009               	iorwf	(??_colourclick_readR+2)^0,w,c
  3831  002712  6E0B               	movwf	(colourclick_readR@tmp+1)^0,c
  3832                           
  3833                           ;colour_click.c: 63:  I2C_2_Master_Stop();
  3834  002714  EC83  F015         	call	_I2C_2_Master_Stop	;wreg free
  3835  002718                     
  3836                           ;colour_click.c: 64:  return tmp;
  3837  002718  C00A  F005         	movff	colourclick_readR@tmp,?_colourclick_readR
  3838  00271C  C00B  F006         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
  3839  002720  0012               	return		;funcret
  3840  002722                     __end_of_colourclick_readR:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function _colourclick_readG *****************
  3844 ;; Defined at:
  3845 ;;		line 72 in file "colour_click.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;  tmp             2    9[COMRAM] unsigned int 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  2    4[COMRAM] unsigned int 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;Total ram usage:        7 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 2
  3866 ;; This function calls:
  3867 ;;		_I2C_2_Master_Read
  3868 ;;		_I2C_2_Master_RepStart
  3869 ;;		_I2C_2_Master_Start
  3870 ;;		_I2C_2_Master_Stop
  3871 ;;		_I2C_2_Master_Write
  3872 ;; This function is called by:
  3873 ;;		_colourclick_readRGBC
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text19
  3878  002722                     __ptext19:
  3879                           	callstack 0
  3880  002722                     _colourclick_readG:
  3881                           	callstack 25
  3882  002722                     
  3883                           ;colour_click.c: 74:  unsigned int tmp;;colour_click.c: 75:  I2C_2_Master_Start();
  3884  002722  EC88  F015         	call	_I2C_2_Master_Start	;wreg free
  3885                           
  3886                           ;colour_click.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  3887  002726  0E52               	movlw	82
  3888  002728  EC77  F015         	call	_I2C_2_Master_Write
  3889                           
  3890                           ;colour_click.c: 77:  I2C_2_Master_Write(0xA0 | 0x18);
  3891  00272C  0EB8               	movlw	184
  3892  00272E  EC77  F015         	call	_I2C_2_Master_Write
  3893                           
  3894                           ;colour_click.c: 78:  I2C_2_Master_RepStart();
  3895  002732  EC8D  F015         	call	_I2C_2_Master_RepStart	;wreg free
  3896                           
  3897                           ;colour_click.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  3898  002736  0E53               	movlw	83
  3899  002738  EC77  F015         	call	_I2C_2_Master_Write
  3900                           
  3901                           ;colour_click.c: 80:  tmp=I2C_2_Master_Read(1);
  3902  00273C  0E01               	movlw	1
  3903  00273E  EC7F  F014         	call	_I2C_2_Master_Read
  3904  002742  6E07               	movwf	??_colourclick_readG^0,c
  3905  002744  5007               	movf	??_colourclick_readG^0,w,c
  3906  002746  6E0A               	movwf	colourclick_readG@tmp^0,c
  3907  002748  6A0B               	clrf	(colourclick_readG@tmp+1)^0,c
  3908                           
  3909                           ;colour_click.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3910  00274A  0E00               	movlw	0
  3911  00274C  EC7F  F014         	call	_I2C_2_Master_Read
  3912  002750  6E07               	movwf	??_colourclick_readG^0,c
  3913  002752  5007               	movf	??_colourclick_readG^0,w,c
  3914  002754  6E09               	movwf	(??_colourclick_readG+2)^0,c
  3915  002756  6A08               	clrf	(??_colourclick_readG+1)^0,c
  3916  002758  500A               	movf	colourclick_readG@tmp^0,w,c
  3917  00275A  1008               	iorwf	(??_colourclick_readG+1)^0,w,c
  3918  00275C  6E0A               	movwf	colourclick_readG@tmp^0,c
  3919  00275E  500B               	movf	(colourclick_readG@tmp+1)^0,w,c
  3920  002760  1009               	iorwf	(??_colourclick_readG+2)^0,w,c
  3921  002762  6E0B               	movwf	(colourclick_readG@tmp+1)^0,c
  3922                           
  3923                           ;colour_click.c: 82:  I2C_2_Master_Stop();
  3924  002764  EC83  F015         	call	_I2C_2_Master_Stop	;wreg free
  3925  002768                     
  3926                           ;colour_click.c: 83:  return tmp;
  3927  002768  C00A  F005         	movff	colourclick_readG@tmp,?_colourclick_readG
  3928  00276C  C00B  F006         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
  3929  002770  0012               	return		;funcret
  3930  002772                     __end_of_colourclick_readG:
  3931                           	callstack 0
  3932                           
  3933 ;; *************** function _colourclick_readC *****************
  3934 ;; Defined at:
  3935 ;;		line 110 in file "colour_click.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  tmp             2    9[COMRAM] unsigned int 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  2    4[COMRAM] unsigned int 
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0, cstack
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3952 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3953 ;;Total ram usage:        7 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; Hardware stack levels required when called: 2
  3956 ;; This function calls:
  3957 ;;		_I2C_2_Master_Read
  3958 ;;		_I2C_2_Master_RepStart
  3959 ;;		_I2C_2_Master_Start
  3960 ;;		_I2C_2_Master_Stop
  3961 ;;		_I2C_2_Master_Write
  3962 ;; This function is called by:
  3963 ;;		_colourclick_readRGBC
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text20
  3968  002772                     __ptext20:
  3969                           	callstack 0
  3970  002772                     _colourclick_readC:
  3971                           	callstack 25
  3972  002772                     
  3973                           ;colour_click.c: 112:  unsigned int tmp;;colour_click.c: 113:  I2C_2_Master_Start();
  3974  002772  EC88  F015         	call	_I2C_2_Master_Start	;wreg free
  3975                           
  3976                           ;colour_click.c: 114:  I2C_2_Master_Write(0x52 | 0x00);
  3977  002776  0E52               	movlw	82
  3978  002778  EC77  F015         	call	_I2C_2_Master_Write
  3979                           
  3980                           ;colour_click.c: 115:  I2C_2_Master_Write(0xA0 | 0x14);
  3981  00277C  0EB4               	movlw	180
  3982  00277E  EC77  F015         	call	_I2C_2_Master_Write
  3983                           
  3984                           ;colour_click.c: 116:  I2C_2_Master_RepStart();
  3985  002782  EC8D  F015         	call	_I2C_2_Master_RepStart	;wreg free
  3986                           
  3987                           ;colour_click.c: 117:  I2C_2_Master_Write(0x52 | 0x01);
  3988  002786  0E53               	movlw	83
  3989  002788  EC77  F015         	call	_I2C_2_Master_Write
  3990                           
  3991                           ;colour_click.c: 118:  tmp=I2C_2_Master_Read(1);
  3992  00278C  0E01               	movlw	1
  3993  00278E  EC7F  F014         	call	_I2C_2_Master_Read
  3994  002792  6E07               	movwf	??_colourclick_readC^0,c
  3995  002794  5007               	movf	??_colourclick_readC^0,w,c
  3996  002796  6E0A               	movwf	colourclick_readC@tmp^0,c
  3997  002798  6A0B               	clrf	(colourclick_readC@tmp+1)^0,c
  3998                           
  3999                           ;colour_click.c: 119:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4000  00279A  0E00               	movlw	0
  4001  00279C  EC7F  F014         	call	_I2C_2_Master_Read
  4002  0027A0  6E07               	movwf	??_colourclick_readC^0,c
  4003  0027A2  5007               	movf	??_colourclick_readC^0,w,c
  4004  0027A4  6E09               	movwf	(??_colourclick_readC+2)^0,c
  4005  0027A6  6A08               	clrf	(??_colourclick_readC+1)^0,c
  4006  0027A8  500A               	movf	colourclick_readC@tmp^0,w,c
  4007  0027AA  1008               	iorwf	(??_colourclick_readC+1)^0,w,c
  4008  0027AC  6E0A               	movwf	colourclick_readC@tmp^0,c
  4009  0027AE  500B               	movf	(colourclick_readC@tmp+1)^0,w,c
  4010  0027B0  1009               	iorwf	(??_colourclick_readC+2)^0,w,c
  4011  0027B2  6E0B               	movwf	(colourclick_readC@tmp+1)^0,c
  4012                           
  4013                           ;colour_click.c: 120:  I2C_2_Master_Stop();
  4014  0027B4  EC83  F015         	call	_I2C_2_Master_Stop	;wreg free
  4015  0027B8                     
  4016                           ;colour_click.c: 121:  return tmp;
  4017  0027B8  C00A  F005         	movff	colourclick_readC@tmp,?_colourclick_readC
  4018  0027BC  C00B  F006         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
  4019  0027C0  0012               	return		;funcret
  4020  0027C2                     __end_of_colourclick_readC:
  4021                           	callstack 0
  4022                           
  4023 ;; *************** function _colourclick_readB *****************
  4024 ;; Defined at:
  4025 ;;		line 91 in file "colour_click.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;		None
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  tmp             2    9[COMRAM] unsigned int 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  2    4[COMRAM] unsigned int 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4040 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4041 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4042 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4043 ;;Total ram usage:        7 bytes
  4044 ;; Hardware stack levels used: 1
  4045 ;; Hardware stack levels required when called: 2
  4046 ;; This function calls:
  4047 ;;		_I2C_2_Master_Read
  4048 ;;		_I2C_2_Master_RepStart
  4049 ;;		_I2C_2_Master_Start
  4050 ;;		_I2C_2_Master_Stop
  4051 ;;		_I2C_2_Master_Write
  4052 ;; This function is called by:
  4053 ;;		_colourclick_readRGBC
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text21
  4058  0027C2                     __ptext21:
  4059                           	callstack 0
  4060  0027C2                     _colourclick_readB:
  4061                           	callstack 25
  4062  0027C2                     
  4063                           ;colour_click.c: 93:  unsigned int tmp;;colour_click.c: 94:  I2C_2_Master_Start();
  4064  0027C2  EC88  F015         	call	_I2C_2_Master_Start	;wreg free
  4065                           
  4066                           ;colour_click.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4067  0027C6  0E52               	movlw	82
  4068  0027C8  EC77  F015         	call	_I2C_2_Master_Write
  4069                           
  4070                           ;colour_click.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  4071  0027CC  0EBA               	movlw	186
  4072  0027CE  EC77  F015         	call	_I2C_2_Master_Write
  4073                           
  4074                           ;colour_click.c: 97:  I2C_2_Master_RepStart();
  4075  0027D2  EC8D  F015         	call	_I2C_2_Master_RepStart	;wreg free
  4076                           
  4077                           ;colour_click.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4078  0027D6  0E53               	movlw	83
  4079  0027D8  EC77  F015         	call	_I2C_2_Master_Write
  4080                           
  4081                           ;colour_click.c: 99:  tmp=I2C_2_Master_Read(1);
  4082  0027DC  0E01               	movlw	1
  4083  0027DE  EC7F  F014         	call	_I2C_2_Master_Read
  4084  0027E2  6E07               	movwf	??_colourclick_readB^0,c
  4085  0027E4  5007               	movf	??_colourclick_readB^0,w,c
  4086  0027E6  6E0A               	movwf	colourclick_readB@tmp^0,c
  4087  0027E8  6A0B               	clrf	(colourclick_readB@tmp+1)^0,c
  4088                           
  4089                           ;colour_click.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4090  0027EA  0E00               	movlw	0
  4091  0027EC  EC7F  F014         	call	_I2C_2_Master_Read
  4092  0027F0  6E07               	movwf	??_colourclick_readB^0,c
  4093  0027F2  5007               	movf	??_colourclick_readB^0,w,c
  4094  0027F4  6E09               	movwf	(??_colourclick_readB+2)^0,c
  4095  0027F6  6A08               	clrf	(??_colourclick_readB+1)^0,c
  4096  0027F8  500A               	movf	colourclick_readB@tmp^0,w,c
  4097  0027FA  1008               	iorwf	(??_colourclick_readB+1)^0,w,c
  4098  0027FC  6E0A               	movwf	colourclick_readB@tmp^0,c
  4099  0027FE  500B               	movf	(colourclick_readB@tmp+1)^0,w,c
  4100  002800  1009               	iorwf	(??_colourclick_readB+2)^0,w,c
  4101  002802  6E0B               	movwf	(colourclick_readB@tmp+1)^0,c
  4102                           
  4103                           ;colour_click.c: 101:  I2C_2_Master_Stop();
  4104  002804  EC83  F015         	call	_I2C_2_Master_Stop	;wreg free
  4105  002808                     
  4106                           ;colour_click.c: 102:  return tmp;
  4107  002808  C00A  F005         	movff	colourclick_readB@tmp,?_colourclick_readB
  4108  00280C  C00B  F006         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
  4109  002810  0012               	return		;funcret
  4110  002812                     __end_of_colourclick_readB:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function _I2C_2_Master_Write *****************
  4114 ;; Defined at:
  4115 ;;		line 69 in file "I2C.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  data_byte       1    wreg     unsigned char 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  data_byte       1    1[COMRAM] unsigned char 
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		wreg, status,2, status,0, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4133 ;;Total ram usage:        1 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 1
  4136 ;; This function calls:
  4137 ;;		_I2C_2_Master_Idle
  4138 ;; This function is called by:
  4139 ;;		_colourclick_writetoaddr
  4140 ;;		_colourclick_readR
  4141 ;;		_colourclick_readG
  4142 ;;		_colourclick_readB
  4143 ;;		_colourclick_readC
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text22
  4148  002AEE                     __ptext22:
  4149                           	callstack 0
  4150  002AEE                     _I2C_2_Master_Write:
  4151                           	callstack 27
  4152                           
  4153                           ;incstack = 0
  4154                           ;I2C_2_Master_Write@data_byte stored from wreg
  4155  002AEE  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4156  002AF0                     
  4157                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
  4158  002AF0  ECD1  F014         	call	_I2C_2_Master_Idle	;wreg free
  4159  002AF4                     
  4160                           ;I2C.c: 72:   SSP2BUF = data_byte;
  4161  002AF4  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4162  002AF8  0012               	return		;funcret
  4163  002AFA                     __end_of_I2C_2_Master_Write:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function _I2C_2_Master_Stop *****************
  4167 ;; Defined at:
  4168 ;;		line 59 in file "I2C.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 1
  4189 ;; This function calls:
  4190 ;;		_I2C_2_Master_Idle
  4191 ;; This function is called by:
  4192 ;;		_colourclick_writetoaddr
  4193 ;;		_colourclick_readR
  4194 ;;		_colourclick_readG
  4195 ;;		_colourclick_readB
  4196 ;;		_colourclick_readC
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text23
  4201  002B06                     __ptext23:
  4202                           	callstack 0
  4203  002B06                     _I2C_2_Master_Stop:
  4204                           	callstack 27
  4205  002B06                     
  4206                           ;I2C.c: 61:   I2C_2_Master_Idle();
  4207  002B06  ECD1  F014         	call	_I2C_2_Master_Idle	;wreg free
  4208  002B0A                     
  4209                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
  4210  002B0A  010E               	movlb	14	; () banked
  4211  002B0C  85DA               	bsf	218,2,b	;volatile
  4212  002B0E                     
  4213                           ; BSR set to: 14
  4214  002B0E  0012               	return		;funcret
  4215  002B10                     __end_of_I2C_2_Master_Stop:
  4216                           	callstack 0
  4217                           
  4218 ;; *************** function _I2C_2_Master_Start *****************
  4219 ;; Defined at:
  4220 ;;		line 39 in file "I2C.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, status,2, status,0, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4238 ;;Total ram usage:        0 bytes
  4239 ;; Hardware stack levels used: 1
  4240 ;; Hardware stack levels required when called: 1
  4241 ;; This function calls:
  4242 ;;		_I2C_2_Master_Idle
  4243 ;; This function is called by:
  4244 ;;		_colourclick_writetoaddr
  4245 ;;		_colourclick_readR
  4246 ;;		_colourclick_readG
  4247 ;;		_colourclick_readB
  4248 ;;		_colourclick_readC
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text24
  4253  002B10                     __ptext24:
  4254                           	callstack 0
  4255  002B10                     _I2C_2_Master_Start:
  4256                           	callstack 27
  4257  002B10                     
  4258                           ;I2C.c: 41:   I2C_2_Master_Idle();
  4259  002B10  ECD1  F014         	call	_I2C_2_Master_Idle	;wreg free
  4260  002B14                     
  4261                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
  4262  002B14  010E               	movlb	14	; () banked
  4263  002B16  81DA               	bsf	218,0,b	;volatile
  4264  002B18                     
  4265                           ; BSR set to: 14
  4266  002B18  0012               	return		;funcret
  4267  002B1A                     __end_of_I2C_2_Master_Start:
  4268                           	callstack 0
  4269                           
  4270 ;; *************** function _I2C_2_Master_RepStart *****************
  4271 ;; Defined at:
  4272 ;;		line 49 in file "I2C.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4290 ;;Total ram usage:        0 bytes
  4291 ;; Hardware stack levels used: 1
  4292 ;; Hardware stack levels required when called: 1
  4293 ;; This function calls:
  4294 ;;		_I2C_2_Master_Idle
  4295 ;; This function is called by:
  4296 ;;		_colourclick_readR
  4297 ;;		_colourclick_readG
  4298 ;;		_colourclick_readB
  4299 ;;		_colourclick_readC
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text25
  4304  002B1A                     __ptext25:
  4305                           	callstack 0
  4306  002B1A                     _I2C_2_Master_RepStart:
  4307                           	callstack 25
  4308  002B1A                     
  4309                           ;I2C.c: 51:   I2C_2_Master_Idle();
  4310  002B1A  ECD1  F014         	call	_I2C_2_Master_Idle	;wreg free
  4311  002B1E                     
  4312                           ;I2C.c: 52:   SSP2CON2bits.RSEN = 1;
  4313  002B1E  010E               	movlb	14	; () banked
  4314  002B20  83DA               	bsf	218,1,b	;volatile
  4315  002B22                     
  4316                           ; BSR set to: 14
  4317  002B22  0012               	return		;funcret
  4318  002B24                     __end_of_I2C_2_Master_RepStart:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _I2C_2_Master_Read *****************
  4322 ;; Defined at:
  4323 ;;		line 79 in file "I2C.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  ack             1    wreg     unsigned char 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  ack             1    2[COMRAM] unsigned char 
  4328 ;;  tmp             1    3[COMRAM] unsigned char 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      unsigned char 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4341 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4342 ;;Total ram usage:        3 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 1
  4345 ;; This function calls:
  4346 ;;		_I2C_2_Master_Idle
  4347 ;; This function is called by:
  4348 ;;		_colourclick_readR
  4349 ;;		_colourclick_readG
  4350 ;;		_colourclick_readB
  4351 ;;		_colourclick_readC
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text26
  4356  0028FE                     __ptext26:
  4357                           	callstack 0
  4358  0028FE                     _I2C_2_Master_Read:
  4359                           	callstack 25
  4360                           
  4361                           ; BSR set to: 14
  4362                           ;incstack = 0
  4363                           ;I2C_2_Master_Read@ack stored from wreg
  4364  0028FE  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4365  002900                     
  4366                           ;I2C.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);I2C.c: 80: {;I2C.c: 81:  
      +                           unsigned char tmp;;I2C.c: 82:   I2C_2_Master_Idle();
  4367  002900  ECD1  F014         	call	_I2C_2_Master_Idle	;wreg free
  4368  002904                     
  4369                           ;I2C.c: 83:   SSP2CON2bits.RCEN = 1;
  4370  002904  010E               	movlb	14	; () banked
  4371  002906  87DA               	bsf	218,3,b	;volatile
  4372                           
  4373                           ;I2C.c: 84:   I2C_2_Master_Idle();
  4374  002908  ECD1  F014         	call	_I2C_2_Master_Idle	;wreg free
  4375  00290C                     
  4376                           ;I2C.c: 85:   tmp = SSP2BUF;
  4377  00290C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4378                           
  4379                           ;I2C.c: 86:   I2C_2_Master_Idle();
  4380  002910  ECD1  F014         	call	_I2C_2_Master_Idle	;wreg free
  4381  002914                     
  4382                           ;I2C.c: 87:   SSP2CON2bits.ACKDT = !ack;
  4383  002914  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4384  002916  B4D8               	btfsc	status,2,c
  4385  002918  EF90  F014         	goto	u1801
  4386  00291C  EF94  F014         	goto	u1800
  4387  002920                     u1801:
  4388  002920  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4389  002922  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4390  002924  EF95  F014         	goto	u1818
  4391  002928                     u1800:
  4392  002928  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4393  00292A                     u1818:
  4394  00292A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4395  00292C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4396  00292E  010E               	movlb	14	; () banked
  4397  002930  51DA               	movf	218,w,b	;volatile
  4398  002932  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4399  002934  0BDF               	andlw	-33
  4400  002936  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4401  002938  6FDA               	movwf	218,b	;volatile
  4402  00293A                     
  4403                           ; BSR set to: 14
  4404                           ;I2C.c: 88:   SSP2CON2bits.ACKEN = 1;
  4405  00293A  89DA               	bsf	218,4,b	;volatile
  4406  00293C                     
  4407                           ; BSR set to: 14
  4408                           ;I2C.c: 89:   return tmp;
  4409  00293C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4410  00293E                     
  4411                           ; BSR set to: 14
  4412  00293E  0012               	return		;funcret
  4413  002940                     __end_of_I2C_2_Master_Read:
  4414                           	callstack 0
  4415                           
  4416 ;; *************** function _I2C_2_Master_Idle *****************
  4417 ;; Defined at:
  4418 ;;		line 30 in file "I2C.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;		None
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;		None
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      void 
  4425 ;; Registers used:
  4426 ;;		wreg, status,2, status,0
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4435 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4436 ;;Total ram usage:        1 bytes
  4437 ;; Hardware stack levels used: 1
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_I2C_2_Master_Start
  4442 ;;		_I2C_2_Master_RepStart
  4443 ;;		_I2C_2_Master_Stop
  4444 ;;		_I2C_2_Master_Write
  4445 ;;		_I2C_2_Master_Read
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text27
  4450  0029A2                     __ptext27:
  4451                           	callstack 0
  4452  0029A2                     _I2C_2_Master_Idle:
  4453                           	callstack 27
  4454  0029A2                     l401:
  4455  0029A2  010E               	movlb	14	; () banked
  4456  0029A4  B5D8               	btfsc	216,2,b	;volatile
  4457  0029A6  EFD7  F014         	goto	u1781
  4458  0029AA  EFD9  F014         	goto	u1780
  4459  0029AE                     u1781:
  4460  0029AE  EFD1  F014         	goto	l401
  4461  0029B2                     u1780:
  4462  0029B2                     
  4463                           ; BSR set to: 14
  4464  0029B2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4465  0029B6  0E1F               	movlw	31
  4466  0029B8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4467  0029BA  A4D8               	btfss	status,2,c
  4468  0029BC  EFE2  F014         	goto	u1791
  4469  0029C0  EFE4  F014         	goto	u1790
  4470  0029C4                     u1791:
  4471  0029C4  EFD1  F014         	goto	l401
  4472  0029C8                     u1790:
  4473  0029C8                     
  4474                           ; BSR set to: 14
  4475  0029C8  0012               	return		;funcret
  4476  0029CA                     __end_of_I2C_2_Master_Idle:
  4477                           	callstack 0
  4478                           
  4479 ;; *************** function _colourclickLEDs_C *****************
  4480 ;; Defined at:
  4481 ;;		line 84 in file "buttons_n_LEDs.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  tog             1    wreg     unsigned char 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  tog             1    0[COMRAM] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4499 ;;Total ram usage:        1 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_main
  4505 ;;		_colourclick_readRGBC2
  4506 ;;		_colourclickLEDs_init
  4507 ;;		_colourcards_testingRGBC
  4508 ;;		_colourclick_calibration
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text28
  4513  002A16                     __ptext28:
  4514                           	callstack 0
  4515  002A16                     _colourclickLEDs_C:
  4516                           	callstack 28
  4517                           
  4518                           ; BSR set to: 14
  4519                           ;incstack = 0
  4520                           ;colourclickLEDs_C@tog stored from wreg
  4521  002A16  6E01               	movwf	colourclickLEDs_C@tog^0,c
  4522  002A18                     
  4523                           ;buttons_n_LEDs.c: 84: void colourclickLEDs_C(unsigned char tog);buttons_n_LEDs.c: 85: {
      +                          ;buttons_n_LEDs.c: 86:     LATGbits.LATG1 = tog;
  4524  002A18  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  4525  002A1A  D002               	bra	u1925
  4526  002A1C  927F               	bcf	127,1,c	;volatile
  4527  002A1E  D001               	bra	u1926
  4528  002A20                     u1925:
  4529  002A20  827F               	bsf	127,1,c	;volatile
  4530  002A22                     u1926:
  4531                           
  4532                           ;buttons_n_LEDs.c: 87:     LATAbits.LATA4 = tog;
  4533  002A22  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  4534  002A24  D002               	bra	u1935
  4535  002A26  9879               	bcf	121,4,c	;volatile
  4536  002A28  D001               	bra	u1936
  4537  002A2A                     u1935:
  4538  002A2A  8879               	bsf	121,4,c	;volatile
  4539  002A2C                     u1936:
  4540                           
  4541                           ;buttons_n_LEDs.c: 88:     LATFbits.LATF7 = tog;
  4542  002A2C  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  4543  002A2E  D002               	bra	u1945
  4544  002A30  9E7E               	bcf	126,7,c	;volatile
  4545  002A32  D001               	bra	u1946
  4546  002A34                     u1945:
  4547  002A34  8E7E               	bsf	126,7,c	;volatile
  4548  002A36                     u1946:
  4549  002A36  0012               	return		;funcret
  4550  002A38                     __end_of_colourclickLEDs_C:
  4551                           	callstack 0
  4552                           
  4553 ;; *************** function _colourcards_normaliseRGBC *****************
  4554 ;; Defined at:
  4555 ;;		line 211 in file "colour_cards.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  abs             2   39[COMRAM] PTR struct .
  4558 ;;		 -> colourcards_testingRGBC@abs(8), 
  4559 ;;  rel             2   41[COMRAM] PTR struct .
  4560 ;;		 -> colourcards_testingRGBC@rel(12), colourcards_readRGBC@rel(12), 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  C               2   49[COMRAM] unsigned int 
  4563 ;;  B               2   47[COMRAM] unsigned int 
  4564 ;;  G               2   45[COMRAM] unsigned int 
  4565 ;;  R               2   43[COMRAM] unsigned int 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4576 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;Total ram usage:       12 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 1
  4582 ;; This function calls:
  4583 ;;		___fldiv
  4584 ;;		___xxtofl
  4585 ;; This function is called by:
  4586 ;;		_colourcards_readRGBC
  4587 ;;		_colourcards_testingRGBC
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text29
  4592  001D58                     __ptext29:
  4593                           	callstack 0
  4594  001D58                     _colourcards_normaliseRGBC:
  4595                           	callstack 28
  4596  001D58                     
  4597                           ;colour_cards.c: 211: void colourcards_normaliseRGBC(RGBC_val *abs, RGB_rel *rel);colour
      +                          _cards.c: 212: {;colour_cards.c: 213:     unsigned int R = abs->R;
  4598  001D58  C028  FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
  4599  001D5C  C029  FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
  4600  001D60  CFDE F02C          	movff	postinc2,colourcards_normaliseRGBC@R
  4601  001D64  CFDD F02D          	movff	postdec2,colourcards_normaliseRGBC@R+1
  4602  001D68                     
  4603                           ;colour_cards.c: 214:     unsigned int G = abs->G;
  4604  001D68  EE20 F002          	lfsr	2,2
  4605  001D6C  5028               	movf	colourcards_normaliseRGBC@abs^0,w,c
  4606  001D6E  26D9               	addwf	fsr2l,f,c
  4607  001D70  5029               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
  4608  001D72  22DA               	addwfc	fsr2h,f,c
  4609  001D74  CFDE F02E          	movff	postinc2,colourcards_normaliseRGBC@G
  4610  001D78  CFDD F02F          	movff	postdec2,colourcards_normaliseRGBC@G+1
  4611  001D7C                     
  4612                           ;colour_cards.c: 215:     unsigned int B = abs->B;
  4613  001D7C  EE20 F004          	lfsr	2,4
  4614  001D80  5028               	movf	colourcards_normaliseRGBC@abs^0,w,c
  4615  001D82  26D9               	addwf	fsr2l,f,c
  4616  001D84  5029               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
  4617  001D86  22DA               	addwfc	fsr2h,f,c
  4618  001D88  CFDE F030          	movff	postinc2,colourcards_normaliseRGBC@B
  4619  001D8C  CFDD F031          	movff	postdec2,colourcards_normaliseRGBC@B+1
  4620  001D90                     
  4621                           ;colour_cards.c: 216:     unsigned int C = abs->C;
  4622  001D90  EE20 F006          	lfsr	2,6
  4623  001D94  5028               	movf	colourcards_normaliseRGBC@abs^0,w,c
  4624  001D96  26D9               	addwf	fsr2l,f,c
  4625  001D98  5029               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
  4626  001D9A  22DA               	addwfc	fsr2h,f,c
  4627  001D9C  CFDE F032          	movff	postinc2,colourcards_normaliseRGBC@C
  4628  001DA0  CFDD F033          	movff	postdec2,colourcards_normaliseRGBC@C+1
  4629  001DA4                     
  4630                           ;colour_cards.c: 218:     rel->R = (float)R/(float)C;
  4631  001DA4  C02C  F001         	movff	colourcards_normaliseRGBC@R,___xxtofl@val
  4632  001DA8  C02D  F002         	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
  4633  001DAC  6A03               	clrf	(___xxtofl@val+2)^0,c
  4634  001DAE  6A04               	clrf	(___xxtofl@val+3)^0,c
  4635  001DB0  0E00               	movlw	0
  4636  001DB2  ECD2  F00D         	call	___xxtofl
  4637  001DB6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4638  001DBA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4639  001DBE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4640  001DC2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4641  001DC6  C032  F001         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  4642  001DCA  C033  F002         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  4643  001DCE  6A03               	clrf	(___xxtofl@val+2)^0,c
  4644  001DD0  6A04               	clrf	(___xxtofl@val+3)^0,c
  4645  001DD2  0E00               	movlw	0
  4646  001DD4  ECD2  F00D         	call	___xxtofl
  4647  001DD8  C001  F013         	movff	?___xxtofl,___fldiv@a
  4648  001DDC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4649  001DE0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4650  001DE4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4651  001DE8  EC1B  F00B         	call	___fldiv	;wreg free
  4652  001DEC  C02A  FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
  4653  001DF0  C02B  FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
  4654  001DF4  C00F  FFDE         	movff	?___fldiv,postinc2
  4655  001DF8  C010  FFDE         	movff	?___fldiv+1,postinc2
  4656  001DFC  C011  FFDE         	movff	?___fldiv+2,postinc2
  4657  001E00  C012  FFDE         	movff	?___fldiv+3,postinc2
  4658  001E04                     
  4659                           ;colour_cards.c: 219:     rel->G = (float)G/(float)C;
  4660  001E04  C02E  F001         	movff	colourcards_normaliseRGBC@G,___xxtofl@val
  4661  001E08  C02F  F002         	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
  4662  001E0C  6A03               	clrf	(___xxtofl@val+2)^0,c
  4663  001E0E  6A04               	clrf	(___xxtofl@val+3)^0,c
  4664  001E10  0E00               	movlw	0
  4665  001E12  ECD2  F00D         	call	___xxtofl
  4666  001E16  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4667  001E1A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4668  001E1E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4669  001E22  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4670  001E26  C032  F001         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  4671  001E2A  C033  F002         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  4672  001E2E  6A03               	clrf	(___xxtofl@val+2)^0,c
  4673  001E30  6A04               	clrf	(___xxtofl@val+3)^0,c
  4674  001E32  0E00               	movlw	0
  4675  001E34  ECD2  F00D         	call	___xxtofl
  4676  001E38  C001  F013         	movff	?___xxtofl,___fldiv@a
  4677  001E3C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4678  001E40  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4679  001E44  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4680  001E48  EC1B  F00B         	call	___fldiv	;wreg free
  4681  001E4C  EE20 F004          	lfsr	2,4
  4682  001E50  502A               	movf	colourcards_normaliseRGBC@rel^0,w,c
  4683  001E52  26D9               	addwf	fsr2l,f,c
  4684  001E54  502B               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
  4685  001E56  22DA               	addwfc	fsr2h,f,c
  4686  001E58  C00F  FFDE         	movff	?___fldiv,postinc2
  4687  001E5C  C010  FFDE         	movff	?___fldiv+1,postinc2
  4688  001E60  C011  FFDE         	movff	?___fldiv+2,postinc2
  4689  001E64  C012  FFDE         	movff	?___fldiv+3,postinc2
  4690  001E68                     
  4691                           ;colour_cards.c: 220:     rel->B = (float)B/(float)C;
  4692  001E68  C030  F001         	movff	colourcards_normaliseRGBC@B,___xxtofl@val
  4693  001E6C  C031  F002         	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
  4694  001E70  6A03               	clrf	(___xxtofl@val+2)^0,c
  4695  001E72  6A04               	clrf	(___xxtofl@val+3)^0,c
  4696  001E74  0E00               	movlw	0
  4697  001E76  ECD2  F00D         	call	___xxtofl
  4698  001E7A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4699  001E7E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4700  001E82  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4701  001E86  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4702  001E8A  C032  F001         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
  4703  001E8E  C033  F002         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
  4704  001E92  6A03               	clrf	(___xxtofl@val+2)^0,c
  4705  001E94  6A04               	clrf	(___xxtofl@val+3)^0,c
  4706  001E96  0E00               	movlw	0
  4707  001E98  ECD2  F00D         	call	___xxtofl
  4708  001E9C  C001  F013         	movff	?___xxtofl,___fldiv@a
  4709  001EA0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4710  001EA4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4711  001EA8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4712  001EAC  EC1B  F00B         	call	___fldiv	;wreg free
  4713  001EB0  EE20 F008          	lfsr	2,8
  4714  001EB4  502A               	movf	colourcards_normaliseRGBC@rel^0,w,c
  4715  001EB6  26D9               	addwf	fsr2l,f,c
  4716  001EB8  502B               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
  4717  001EBA  22DA               	addwfc	fsr2h,f,c
  4718  001EBC  C00F  FFDE         	movff	?___fldiv,postinc2
  4719  001EC0  C010  FFDE         	movff	?___fldiv+1,postinc2
  4720  001EC4  C011  FFDE         	movff	?___fldiv+2,postinc2
  4721  001EC8  C012  FFDE         	movff	?___fldiv+3,postinc2
  4722  001ECC  0012               	return		;funcret
  4723  001ECE                     __end_of_colourcards_normaliseRGBC:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function ___xxtofl *****************
  4727 ;; Defined at:
  4728 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  sign            1    wreg     unsigned char 
  4731 ;;  val             4    0[COMRAM] long 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  sign            1    8[COMRAM] unsigned char 
  4734 ;;  arg             4   10[COMRAM] unsigned long 
  4735 ;;  exp             1    9[COMRAM] unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  4    0[COMRAM] unsigned char 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4745 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4746 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4747 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;Total ram usage:       14 bytes
  4750 ;; Hardware stack levels used: 1
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_colourcards_normaliseRGBC
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text30
  4759  001BA4                     __ptext30:
  4760                           	callstack 0
  4761  001BA4                     ___xxtofl:
  4762                           	callstack 28
  4763                           
  4764                           ;incstack = 0
  4765                           ;___xxtofl@sign stored from wreg
  4766  001BA4  6E09               	movwf	___xxtofl@sign^0,c
  4767  001BA6  5009               	movf	___xxtofl@sign^0,w,c
  4768  001BA8  B4D8               	btfsc	status,2,c
  4769  001BAA  EFD9  F00D         	goto	u2301
  4770  001BAE  EFDB  F00D         	goto	u2300
  4771  001BB2                     u2301:
  4772  001BB2  EFFD  F00D         	goto	l1380
  4773  001BB6                     u2300:
  4774  001BB6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4775  001BB8  EFE2  F00D         	goto	u2310
  4776  001BBC  EFE0  F00D         	goto	u2311
  4777  001BC0                     u2311:
  4778  001BC0  EFFD  F00D         	goto	l1380
  4779  001BC4                     u2310:
  4780  001BC4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4781  001BC8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4782  001BCC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4783  001BD0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4784  001BD4  1E05               	comf	??___xxtofl^0,f,c
  4785  001BD6  1E06               	comf	(??___xxtofl+1)^0,f,c
  4786  001BD8  1E07               	comf	(??___xxtofl+2)^0,f,c
  4787  001BDA  1E08               	comf	(??___xxtofl+3)^0,f,c
  4788  001BDC  2A05               	incf	??___xxtofl^0,f,c
  4789  001BDE  0E00               	movlw	0
  4790  001BE0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4791  001BE2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4792  001BE4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4793  001BE6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4794  001BEA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4795  001BEE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4796  001BF2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4797  001BF6  EF05  F00E         	goto	l2818
  4798  001BFA                     l1380:
  4799  001BFA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4800  001BFE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4801  001C02  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4802  001C06  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4803  001C0A                     l2818:
  4804  001C0A  5001               	movf	___xxtofl@val^0,w,c
  4805  001C0C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4806  001C0E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4807  001C10  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4808  001C12  A4D8               	btfss	status,2,c
  4809  001C14  EF0E  F00E         	goto	u2321
  4810  001C18  EF10  F00E         	goto	u2320
  4811  001C1C                     u2321:
  4812  001C1C  EF1A  F00E         	goto	l2824
  4813  001C20                     u2320:
  4814  001C20  0E00               	movlw	0
  4815  001C22  6E01               	movwf	?___xxtofl^0,c
  4816  001C24  0E00               	movlw	0
  4817  001C26  6E02               	movwf	(?___xxtofl+1)^0,c
  4818  001C28  0E00               	movlw	0
  4819  001C2A  6E03               	movwf	(?___xxtofl+2)^0,c
  4820  001C2C  0E00               	movlw	0
  4821  001C2E  6E04               	movwf	(?___xxtofl+3)^0,c
  4822  001C30  EFAB  F00E         	goto	l1383
  4823  001C34                     l2824:
  4824  001C34  0E96               	movlw	150
  4825  001C36  6E0A               	movwf	___xxtofl@exp^0,c
  4826  001C38  EF24  F00E         	goto	l2828
  4827  001C3C                     l2826:
  4828  001C3C  2A0A               	incf	___xxtofl@exp^0,f,c
  4829  001C3E  90D8               	bcf	status,0,c
  4830  001C40  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4831  001C42  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4832  001C44  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4833  001C46  320B               	rrcf	___xxtofl@arg^0,f,c
  4834  001C48                     l2828:
  4835  001C48  0E00               	movlw	0
  4836  001C4A  140B               	andwf	___xxtofl@arg^0,w,c
  4837  001C4C  6E05               	movwf	??___xxtofl^0,c
  4838  001C4E  0E00               	movlw	0
  4839  001C50  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4840  001C52  6E06               	movwf	(??___xxtofl+1)^0,c
  4841  001C54  0E00               	movlw	0
  4842  001C56  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4843  001C58  6E07               	movwf	(??___xxtofl+2)^0,c
  4844  001C5A  0EFE               	movlw	254
  4845  001C5C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4846  001C5E  6E08               	movwf	(??___xxtofl+3)^0,c
  4847  001C60  5005               	movf	??___xxtofl^0,w,c
  4848  001C62  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4849  001C64  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4850  001C66  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4851  001C68  A4D8               	btfss	status,2,c
  4852  001C6A  EF39  F00E         	goto	u2331
  4853  001C6E  EF3B  F00E         	goto	u2330
  4854  001C72                     u2331:
  4855  001C72  EF1E  F00E         	goto	l2826
  4856  001C76                     u2330:
  4857  001C76  EF49  F00E         	goto	l1387
  4858  001C7A                     l2830:
  4859  001C7A  2A0A               	incf	___xxtofl@exp^0,f,c
  4860  001C7C  0E01               	movlw	1
  4861  001C7E  260B               	addwf	___xxtofl@arg^0,f,c
  4862  001C80  0E00               	movlw	0
  4863  001C82  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4864  001C84  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4865  001C86  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4866  001C88  90D8               	bcf	status,0,c
  4867  001C8A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4868  001C8C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4869  001C8E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4870  001C90  320B               	rrcf	___xxtofl@arg^0,f,c
  4871  001C92                     l1387:
  4872  001C92  0E00               	movlw	0
  4873  001C94  140B               	andwf	___xxtofl@arg^0,w,c
  4874  001C96  6E05               	movwf	??___xxtofl^0,c
  4875  001C98  0E00               	movlw	0
  4876  001C9A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4877  001C9C  6E06               	movwf	(??___xxtofl+1)^0,c
  4878  001C9E  0E00               	movlw	0
  4879  001CA0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4880  001CA2  6E07               	movwf	(??___xxtofl+2)^0,c
  4881  001CA4  0EFF               	movlw	255
  4882  001CA6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4883  001CA8  6E08               	movwf	(??___xxtofl+3)^0,c
  4884  001CAA  5005               	movf	??___xxtofl^0,w,c
  4885  001CAC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4886  001CAE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4887  001CB0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4888  001CB2  A4D8               	btfss	status,2,c
  4889  001CB4  EF5E  F00E         	goto	u2341
  4890  001CB8  EF60  F00E         	goto	u2340
  4891  001CBC                     u2341:
  4892  001CBC  EF3D  F00E         	goto	l2830
  4893  001CC0                     u2340:
  4894  001CC0  EF68  F00E         	goto	l2838
  4895  001CC4                     l2836:
  4896  001CC4  060A               	decf	___xxtofl@exp^0,f,c
  4897  001CC6  90D8               	bcf	status,0,c
  4898  001CC8  360B               	rlcf	___xxtofl@arg^0,f,c
  4899  001CCA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4900  001CCC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4901  001CCE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4902  001CD0                     l2838:
  4903  001CD0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4904  001CD2  EF6D  F00E         	goto	u2351
  4905  001CD6  EF6F  F00E         	goto	u2350
  4906  001CDA                     u2351:
  4907  001CDA  EF77  F00E         	goto	l1394
  4908  001CDE                     u2350:
  4909  001CDE  0E02               	movlw	2
  4910  001CE0  600A               	cpfslt	___xxtofl@exp^0,c
  4911  001CE2  EF75  F00E         	goto	u2361
  4912  001CE6  EF77  F00E         	goto	u2360
  4913  001CEA                     u2361:
  4914  001CEA  EF62  F00E         	goto	l2836
  4915  001CEE                     u2360:
  4916  001CEE                     l1394:
  4917  001CEE  B00A               	btfsc	___xxtofl@exp^0,0,c
  4918  001CF0  EF7C  F00E         	goto	u2371
  4919  001CF4  EF7E  F00E         	goto	u2370
  4920  001CF8                     u2371:
  4921  001CF8  EF7F  F00E         	goto	l2844
  4922  001CFC                     u2370:
  4923  001CFC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4924  001CFE                     l2844:
  4925  001CFE  90D8               	bcf	status,0,c
  4926  001D00  320A               	rrcf	___xxtofl@exp^0,f,c
  4927  001D02  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4928  001D06  6A06               	clrf	(??___xxtofl+1)^0,c
  4929  001D08  6A07               	clrf	(??___xxtofl+2)^0,c
  4930  001D0A  6A08               	clrf	(??___xxtofl+3)^0,c
  4931  001D0C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4932  001D10  6A07               	clrf	(??___xxtofl+2)^0,c
  4933  001D12  6A06               	clrf	(??___xxtofl+1)^0,c
  4934  001D14  6A05               	clrf	??___xxtofl^0,c
  4935  001D16  5005               	movf	??___xxtofl^0,w,c
  4936  001D18  120B               	iorwf	___xxtofl@arg^0,f,c
  4937  001D1A  5006               	movf	(??___xxtofl+1)^0,w,c
  4938  001D1C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4939  001D1E  5007               	movf	(??___xxtofl+2)^0,w,c
  4940  001D20  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4941  001D22  5008               	movf	(??___xxtofl+3)^0,w,c
  4942  001D24  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4943  001D26  5009               	movf	___xxtofl@sign^0,w,c
  4944  001D28  B4D8               	btfsc	status,2,c
  4945  001D2A  EF99  F00E         	goto	u2381
  4946  001D2E  EF9B  F00E         	goto	u2380
  4947  001D32                     u2381:
  4948  001D32  EFA3  F00E         	goto	l2854
  4949  001D36                     u2380:
  4950  001D36  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4951  001D38  EFA2  F00E         	goto	u2390
  4952  001D3C  EFA0  F00E         	goto	u2391
  4953  001D40                     u2391:
  4954  001D40  EFA3  F00E         	goto	l2854
  4955  001D44                     u2390:
  4956  001D44  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4957  001D46                     l2854:
  4958  001D46  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4959  001D4A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4960  001D4E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4961  001D52  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4962  001D56                     l1383:
  4963  001D56  0012               	return		;funcret
  4964  001D58                     __end_of___xxtofl:
  4965                           	callstack 0
  4966                           
  4967 ;; *************** function ___fldiv *****************
  4968 ;; Defined at:
  4969 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  b               4   14[COMRAM] unsigned char 
  4972 ;;  a               4   18[COMRAM] unsigned char 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  grs             4   33[COMRAM] unsigned long 
  4975 ;;  rem             4   26[COMRAM] unsigned long 
  4976 ;;  new_exp         2   31[COMRAM] short 
  4977 ;;  aexp            1   38[COMRAM] unsigned char 
  4978 ;;  bexp            1   37[COMRAM] unsigned char 
  4979 ;;  sign            1   30[COMRAM] unsigned char 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  4   14[COMRAM] unsigned char 
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4989 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4990 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4991 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4992 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4993 ;;Total ram usage:       25 bytes
  4994 ;; Hardware stack levels used: 1
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_colourcards_normaliseRGBC
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           	psect	text31
  5003  001636                     __ptext31:
  5004                           	callstack 0
  5005  001636                     ___fldiv:
  5006                           	callstack 28
  5007  001636  5012               	movf	(___fldiv@b+3)^0,w,c
  5008  001638  0B80               	andlw	128
  5009  00163A  6E1F               	movwf	___fldiv@sign^0,c
  5010  00163C  5012               	movf	(___fldiv@b+3)^0,w,c
  5011  00163E  2412               	addwf	(___fldiv@b+3)^0,w,c
  5012  001640  6E26               	movwf	___fldiv@bexp^0,c
  5013  001642  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5014  001644  EF26  F00B         	goto	u2071
  5015  001648  EF28  F00B         	goto	u2070
  5016  00164C                     u2071:
  5017  00164C  EF29  F00B         	goto	l2680
  5018  001650                     u2070:
  5019  001650  8026               	bsf	___fldiv@bexp^0,0,c
  5020  001652                     l2680:
  5021  001652  5026               	movf	___fldiv@bexp^0,w,c
  5022  001654  B4D8               	btfsc	status,2,c
  5023  001656  EF2F  F00B         	goto	u2081
  5024  00165A  EF31  F00B         	goto	u2080
  5025  00165E                     u2081:
  5026  00165E  EF46  F00B         	goto	l2690
  5027  001662                     u2080:
  5028  001662  2826               	incf	___fldiv@bexp^0,w,c
  5029  001664  A4D8               	btfss	status,2,c
  5030  001666  EF37  F00B         	goto	u2091
  5031  00166A  EF39  F00B         	goto	u2090
  5032  00166E                     u2091:
  5033  00166E  EF41  F00B         	goto	l2686
  5034  001672                     u2090:
  5035  001672  0E00               	movlw	0
  5036  001674  6E0F               	movwf	___fldiv@b^0,c
  5037  001676  0E00               	movlw	0
  5038  001678  6E10               	movwf	(___fldiv@b+1)^0,c
  5039  00167A  0E00               	movlw	0
  5040  00167C  6E11               	movwf	(___fldiv@b+2)^0,c
  5041  00167E  0E00               	movlw	0
  5042  001680  6E12               	movwf	(___fldiv@b+3)^0,c
  5043  001682                     l2686:
  5044  001682  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5045  001684  0E00               	movlw	0
  5046  001686  6E12               	movwf	(___fldiv@b+3)^0,c
  5047  001688  EF4E  F00B         	goto	l2692
  5048  00168C                     l2690:
  5049  00168C  0E00               	movlw	0
  5050  00168E  6E0F               	movwf	___fldiv@b^0,c
  5051  001690  0E00               	movlw	0
  5052  001692  6E10               	movwf	(___fldiv@b+1)^0,c
  5053  001694  0E00               	movlw	0
  5054  001696  6E11               	movwf	(___fldiv@b+2)^0,c
  5055  001698  0E00               	movlw	0
  5056  00169A  6E12               	movwf	(___fldiv@b+3)^0,c
  5057  00169C                     l2692:
  5058  00169C  5016               	movf	(___fldiv@a+3)^0,w,c
  5059  00169E  0B80               	andlw	128
  5060  0016A0  1A1F               	xorwf	___fldiv@sign^0,f,c
  5061  0016A2  5016               	movf	(___fldiv@a+3)^0,w,c
  5062  0016A4  2416               	addwf	(___fldiv@a+3)^0,w,c
  5063  0016A6  6E27               	movwf	___fldiv@aexp^0,c
  5064  0016A8  AE15               	btfss	(___fldiv@a+2)^0,7,c
  5065  0016AA  EF59  F00B         	goto	u2101
  5066  0016AE  EF5B  F00B         	goto	u2100
  5067  0016B2                     u2101:
  5068  0016B2  EF5C  F00B         	goto	l2700
  5069  0016B6                     u2100:
  5070  0016B6  8027               	bsf	___fldiv@aexp^0,0,c
  5071  0016B8                     l2700:
  5072  0016B8  5027               	movf	___fldiv@aexp^0,w,c
  5073  0016BA  B4D8               	btfsc	status,2,c
  5074  0016BC  EF62  F00B         	goto	u2111
  5075  0016C0  EF64  F00B         	goto	u2110
  5076  0016C4                     u2111:
  5077  0016C4  EF79  F00B         	goto	l2710
  5078  0016C8                     u2110:
  5079  0016C8  2827               	incf	___fldiv@aexp^0,w,c
  5080  0016CA  A4D8               	btfss	status,2,c
  5081  0016CC  EF6A  F00B         	goto	u2121
  5082  0016D0  EF6C  F00B         	goto	u2120
  5083  0016D4                     u2121:
  5084  0016D4  EF74  F00B         	goto	l2706
  5085  0016D8                     u2120:
  5086  0016D8  0E00               	movlw	0
  5087  0016DA  6E13               	movwf	___fldiv@a^0,c
  5088  0016DC  0E00               	movlw	0
  5089  0016DE  6E14               	movwf	(___fldiv@a+1)^0,c
  5090  0016E0  0E00               	movlw	0
  5091  0016E2  6E15               	movwf	(___fldiv@a+2)^0,c
  5092  0016E4  0E00               	movlw	0
  5093  0016E6  6E16               	movwf	(___fldiv@a+3)^0,c
  5094  0016E8                     l2706:
  5095  0016E8  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5096  0016EA  0E00               	movlw	0
  5097  0016EC  6E16               	movwf	(___fldiv@a+3)^0,c
  5098  0016EE  EF81  F00B         	goto	l2712
  5099  0016F2                     l2710:
  5100  0016F2  0E00               	movlw	0
  5101  0016F4  6E13               	movwf	___fldiv@a^0,c
  5102  0016F6  0E00               	movlw	0
  5103  0016F8  6E14               	movwf	(___fldiv@a+1)^0,c
  5104  0016FA  0E00               	movlw	0
  5105  0016FC  6E15               	movwf	(___fldiv@a+2)^0,c
  5106  0016FE  0E00               	movlw	0
  5107  001700  6E16               	movwf	(___fldiv@a+3)^0,c
  5108  001702                     l2712:
  5109  001702  5013               	movf	___fldiv@a^0,w,c
  5110  001704  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5111  001706  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5112  001708  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5113  00170A  A4D8               	btfss	status,2,c
  5114  00170C  EF8A  F00B         	goto	u2131
  5115  001710  EF8C  F00B         	goto	u2130
  5116  001714                     u2131:
  5117  001714  EFA4  F00B         	goto	l2724
  5118  001718                     u2130:
  5119  001718  0E00               	movlw	0
  5120  00171A  6E0F               	movwf	___fldiv@b^0,c
  5121  00171C  0E00               	movlw	0
  5122  00171E  6E10               	movwf	(___fldiv@b+1)^0,c
  5123  001720  0E00               	movlw	0
  5124  001722  6E11               	movwf	(___fldiv@b+2)^0,c
  5125  001724  0E00               	movlw	0
  5126  001726  6E12               	movwf	(___fldiv@b+3)^0,c
  5127  001728  0E80               	movlw	128
  5128  00172A  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5129  00172C  0E7F               	movlw	127
  5130  00172E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5131  001730                     l2718:
  5132  001730  501F               	movf	___fldiv@sign^0,w,c
  5133  001732  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5134  001734  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5135  001738  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5136  00173C  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5137  001740  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5138  001744  EFE7  F00C         	goto	l1307
  5139  001748                     l2724:
  5140  001748  5026               	movf	___fldiv@bexp^0,w,c
  5141  00174A  A4D8               	btfss	status,2,c
  5142  00174C  EFAA  F00B         	goto	u2141
  5143  001750  EFAC  F00B         	goto	u2140
  5144  001754                     u2141:
  5145  001754  EFB6  F00B         	goto	l2732
  5146  001758                     u2140:
  5147  001758  0E00               	movlw	0
  5148  00175A  6E0F               	movwf	?___fldiv^0,c
  5149  00175C  0E00               	movlw	0
  5150  00175E  6E10               	movwf	(?___fldiv+1)^0,c
  5151  001760  0E00               	movlw	0
  5152  001762  6E11               	movwf	(?___fldiv+2)^0,c
  5153  001764  0E00               	movlw	0
  5154  001766  6E12               	movwf	(?___fldiv+3)^0,c
  5155  001768  EFE7  F00C         	goto	l1307
  5156  00176C                     l2732:
  5157  00176C  5027               	movf	___fldiv@aexp^0,w,c
  5158  00176E  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5159  001772  6A18               	clrf	(??___fldiv+1)^0,c
  5160  001774  5E17               	subwf	??___fldiv^0,f,c
  5161  001776  0E00               	movlw	0
  5162  001778  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5163  00177A  0E7F               	movlw	127
  5164  00177C  2417               	addwf	??___fldiv^0,w,c
  5165  00177E  6E20               	movwf	___fldiv@new_exp^0,c
  5166  001780  0E00               	movlw	0
  5167  001782  2018               	addwfc	(??___fldiv+1)^0,w,c
  5168  001784  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5169  001786  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5170  00178A  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5171  00178E  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5172  001792  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5173  001796  0E00               	movlw	0
  5174  001798  6E0F               	movwf	___fldiv@b^0,c
  5175  00179A  0E00               	movlw	0
  5176  00179C  6E10               	movwf	(___fldiv@b+1)^0,c
  5177  00179E  0E00               	movlw	0
  5178  0017A0  6E11               	movwf	(___fldiv@b+2)^0,c
  5179  0017A2  0E00               	movlw	0
  5180  0017A4  6E12               	movwf	(___fldiv@b+3)^0,c
  5181  0017A6  0E00               	movlw	0
  5182  0017A8  6E22               	movwf	___fldiv@grs^0,c
  5183  0017AA  0E00               	movlw	0
  5184  0017AC  6E23               	movwf	(___fldiv@grs+1)^0,c
  5185  0017AE  0E00               	movlw	0
  5186  0017B0  6E24               	movwf	(___fldiv@grs+2)^0,c
  5187  0017B2  0E00               	movlw	0
  5188  0017B4  6E25               	movwf	(___fldiv@grs+3)^0,c
  5189  0017B6  0E00               	movlw	0
  5190  0017B8  6E27               	movwf	___fldiv@aexp^0,c
  5191  0017BA  EF17  F00C         	goto	l1309
  5192  0017BE                     l2742:
  5193  0017BE  5027               	movf	___fldiv@aexp^0,w,c
  5194  0017C0  B4D8               	btfsc	status,2,c
  5195  0017C2  EFE5  F00B         	goto	u2151
  5196  0017C6  EFE7  F00B         	goto	u2150
  5197  0017CA                     u2151:
  5198  0017CA  EFFE  F00B         	goto	l2750
  5199  0017CE                     u2150:
  5200  0017CE  90D8               	bcf	status,0,c
  5201  0017D0  361B               	rlcf	___fldiv@rem^0,f,c
  5202  0017D2  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5203  0017D4  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5204  0017D6  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5205  0017D8  90D8               	bcf	status,0,c
  5206  0017DA  360F               	rlcf	___fldiv@b^0,f,c
  5207  0017DC  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5208  0017DE  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5209  0017E0  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5210  0017E2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5211  0017E4  EFF6  F00B         	goto	u2161
  5212  0017E8  EFF8  F00B         	goto	u2160
  5213  0017EC                     u2161:
  5214  0017EC  EFF9  F00B         	goto	l1312
  5215  0017F0                     u2160:
  5216  0017F0  800F               	bsf	___fldiv@b^0,0,c
  5217  0017F2                     l1312:
  5218  0017F2  90D8               	bcf	status,0,c
  5219  0017F4  3622               	rlcf	___fldiv@grs^0,f,c
  5220  0017F6  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5221  0017F8  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5222  0017FA  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5223  0017FC                     l2750:
  5224  0017FC  5013               	movf	___fldiv@a^0,w,c
  5225  0017FE  5C1B               	subwf	___fldiv@rem^0,w,c
  5226  001800  5014               	movf	(___fldiv@a+1)^0,w,c
  5227  001802  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5228  001804  5015               	movf	(___fldiv@a+2)^0,w,c
  5229  001806  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5230  001808  5016               	movf	(___fldiv@a+3)^0,w,c
  5231  00180A  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5232  00180C  A0D8               	btfss	status,0,c
  5233  00180E  EF0B  F00C         	goto	u2171
  5234  001812  EF0D  F00C         	goto	u2170
  5235  001816                     u2171:
  5236  001816  EF16  F00C         	goto	l2756
  5237  00181A                     u2170:
  5238  00181A  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5239  00181C  5013               	movf	___fldiv@a^0,w,c
  5240  00181E  5E1B               	subwf	___fldiv@rem^0,f,c
  5241  001820  5014               	movf	(___fldiv@a+1)^0,w,c
  5242  001822  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5243  001824  5015               	movf	(___fldiv@a+2)^0,w,c
  5244  001826  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5245  001828  5016               	movf	(___fldiv@a+3)^0,w,c
  5246  00182A  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5247  00182C                     l2756:
  5248  00182C  2A27               	incf	___fldiv@aexp^0,f,c
  5249  00182E                     l1309:
  5250  00182E  0E19               	movlw	25
  5251  001830  6427               	cpfsgt	___fldiv@aexp^0,c
  5252  001832  EF1D  F00C         	goto	u2181
  5253  001836  EF1F  F00C         	goto	u2180
  5254  00183A                     u2181:
  5255  00183A  EFDF  F00B         	goto	l2742
  5256  00183E                     u2180:
  5257  00183E  501B               	movf	___fldiv@rem^0,w,c
  5258  001840  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5259  001842  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5260  001844  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5261  001846  B4D8               	btfsc	status,2,c
  5262  001848  EF28  F00C         	goto	u2191
  5263  00184C  EF2A  F00C         	goto	u2190
  5264  001850                     u2191:
  5265  001850  EF42  F00C         	goto	l2768
  5266  001854                     u2190:
  5267  001854  8022               	bsf	___fldiv@grs^0,0,c
  5268  001856  EF42  F00C         	goto	l2768
  5269  00185A                     l2762:
  5270  00185A  90D8               	bcf	status,0,c
  5271  00185C  360F               	rlcf	___fldiv@b^0,f,c
  5272  00185E  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5273  001860  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5274  001862  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5275  001864  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5276  001866  EF37  F00C         	goto	u2201
  5277  00186A  EF39  F00C         	goto	u2200
  5278  00186E                     u2201:
  5279  00186E  EF3A  F00C         	goto	l1318
  5280  001872                     u2200:
  5281  001872  800F               	bsf	___fldiv@b^0,0,c
  5282  001874                     l1318:
  5283  001874  90D8               	bcf	status,0,c
  5284  001876  3622               	rlcf	___fldiv@grs^0,f,c
  5285  001878  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5286  00187A  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5287  00187C  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5288  00187E  0620               	decf	___fldiv@new_exp^0,f,c
  5289  001880  A0D8               	btfss	status,0,c
  5290  001882  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5291  001884                     l2768:
  5292  001884  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5293  001886  EF47  F00C         	goto	u2211
  5294  00188A  EF49  F00C         	goto	u2210
  5295  00188E                     u2211:
  5296  00188E  EF2D  F00C         	goto	l2762
  5297  001892                     u2210:
  5298  001892  0E00               	movlw	0
  5299  001894  6E27               	movwf	___fldiv@aexp^0,c
  5300  001896  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5301  001898  EF50  F00C         	goto	u2221
  5302  00189C  EF52  F00C         	goto	u2220
  5303  0018A0                     u2221:
  5304  0018A0  EF76  F00C         	goto	l1320
  5305  0018A4                     u2220:
  5306  0018A4  0EFF               	movlw	255
  5307  0018A6  1422               	andwf	___fldiv@grs^0,w,c
  5308  0018A8  6E17               	movwf	??___fldiv^0,c
  5309  0018AA  0EFF               	movlw	255
  5310  0018AC  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5311  0018AE  6E18               	movwf	(??___fldiv+1)^0,c
  5312  0018B0  0EFF               	movlw	255
  5313  0018B2  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5314  0018B4  6E19               	movwf	(??___fldiv+2)^0,c
  5315  0018B6  0E7F               	movlw	127
  5316  0018B8  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5317  0018BA  6E1A               	movwf	(??___fldiv+3)^0,c
  5318  0018BC  5017               	movf	??___fldiv^0,w,c
  5319  0018BE  1018               	iorwf	(??___fldiv+1)^0,w,c
  5320  0018C0  1019               	iorwf	(??___fldiv+2)^0,w,c
  5321  0018C2  101A               	iorwf	(??___fldiv+3)^0,w,c
  5322  0018C4  B4D8               	btfsc	status,2,c
  5323  0018C6  EF67  F00C         	goto	u2231
  5324  0018CA  EF69  F00C         	goto	u2230
  5325  0018CE                     u2231:
  5326  0018CE  EF6D  F00C         	goto	l1321
  5327  0018D2                     u2230:
  5328  0018D2                     l2776:
  5329  0018D2  0E01               	movlw	1
  5330  0018D4  6E27               	movwf	___fldiv@aexp^0,c
  5331  0018D6  EF76  F00C         	goto	l1320
  5332  0018DA                     l1321:
  5333  0018DA  A00F               	btfss	___fldiv@b^0,0,c
  5334  0018DC  EF72  F00C         	goto	u2241
  5335  0018E0  EF74  F00C         	goto	u2240
  5336  0018E4                     u2241:
  5337  0018E4  EF76  F00C         	goto	l1320
  5338  0018E8                     u2240:
  5339  0018E8  EF69  F00C         	goto	l2776
  5340  0018EC                     l1320:
  5341  0018EC  5027               	movf	___fldiv@aexp^0,w,c
  5342  0018EE  B4D8               	btfsc	status,2,c
  5343  0018F0  EF7C  F00C         	goto	u2251
  5344  0018F4  EF7E  F00C         	goto	u2250
  5345  0018F8                     u2251:
  5346  0018F8  EFA2  F00C         	goto	l2788
  5347  0018FC                     u2250:
  5348  0018FC  0E01               	movlw	1
  5349  0018FE  260F               	addwf	___fldiv@b^0,f,c
  5350  001900  0E00               	movlw	0
  5351  001902  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5352  001904  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5353  001906  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5354  001908  A012               	btfss	(___fldiv@b+3)^0,0,c
  5355  00190A  EF89  F00C         	goto	u2261
  5356  00190E  EF8B  F00C         	goto	u2260
  5357  001912                     u2261:
  5358  001912  EFA2  F00C         	goto	l2788
  5359  001916                     u2260:
  5360  001916  C00F  F017         	movff	___fldiv@b,??___fldiv
  5361  00191A  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5362  00191E  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5363  001922  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5364  001926  341A               	rlcf	(??___fldiv+3)^0,w,c
  5365  001928  321A               	rrcf	(??___fldiv+3)^0,f,c
  5366  00192A  3219               	rrcf	(??___fldiv+2)^0,f,c
  5367  00192C  3218               	rrcf	(??___fldiv+1)^0,f,c
  5368  00192E  3217               	rrcf	??___fldiv^0,f,c
  5369  001930  C017  F00F         	movff	??___fldiv,___fldiv@b
  5370  001934  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5371  001938  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5372  00193C  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5373  001940  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5374  001942  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5375  001944                     l2788:
  5376  001944  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5377  001946  EFAD  F00C         	goto	u2271
  5378  00194A  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5379  00194C  E108               	bnz	u2270
  5380  00194E  2820               	incf	___fldiv@new_exp^0,w,c
  5381  001950  A0D8               	btfss	status,0,c
  5382  001952  EFAD  F00C         	goto	u2271
  5383  001956  EFAF  F00C         	goto	u2270
  5384  00195A                     u2271:
  5385  00195A  EFBA  F00C         	goto	l2792
  5386  00195E                     u2270:
  5387  00195E  0E00               	movlw	0
  5388  001960  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5389  001962  6820               	setf	___fldiv@new_exp^0,c
  5390  001964  0E00               	movlw	0
  5391  001966  6E0F               	movwf	___fldiv@b^0,c
  5392  001968  0E00               	movlw	0
  5393  00196A  6E10               	movwf	(___fldiv@b+1)^0,c
  5394  00196C  0E00               	movlw	0
  5395  00196E  6E11               	movwf	(___fldiv@b+2)^0,c
  5396  001970  0E00               	movlw	0
  5397  001972  6E12               	movwf	(___fldiv@b+3)^0,c
  5398  001974                     l2792:
  5399  001974  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5400  001976  EFC7  F00C         	goto	u2280
  5401  00197A  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5402  00197C  E106               	bnz	u2281
  5403  00197E  0420               	decf	___fldiv@new_exp^0,w,c
  5404  001980  B0D8               	btfsc	status,0,c
  5405  001982  EFC5  F00C         	goto	u2281
  5406  001986  EFC7  F00C         	goto	u2280
  5407  00198A                     u2281:
  5408  00198A  EFD5  F00C         	goto	l2796
  5409  00198E                     u2280:
  5410  00198E  0E00               	movlw	0
  5411  001990  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5412  001992  0E00               	movlw	0
  5413  001994  6E20               	movwf	___fldiv@new_exp^0,c
  5414  001996  0E00               	movlw	0
  5415  001998  6E0F               	movwf	___fldiv@b^0,c
  5416  00199A  0E00               	movlw	0
  5417  00199C  6E10               	movwf	(___fldiv@b+1)^0,c
  5418  00199E  0E00               	movlw	0
  5419  0019A0  6E11               	movwf	(___fldiv@b+2)^0,c
  5420  0019A2  0E00               	movlw	0
  5421  0019A4  6E12               	movwf	(___fldiv@b+3)^0,c
  5422  0019A6  0E00               	movlw	0
  5423  0019A8  6E1F               	movwf	___fldiv@sign^0,c
  5424  0019AA                     l2796:
  5425  0019AA  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5426  0019AE  A026               	btfss	___fldiv@bexp^0,0,c
  5427  0019B0  EFDC  F00C         	goto	u2291
  5428  0019B4  EFDE  F00C         	goto	u2290
  5429  0019B8                     u2291:
  5430  0019B8  EFE1  F00C         	goto	l2802
  5431  0019BC                     u2290:
  5432  0019BC  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5433  0019BE  EFE2  F00C         	goto	l2804
  5434  0019C2                     l2802:
  5435  0019C2  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5436  0019C4                     l2804:
  5437  0019C4  90D8               	bcf	status,0,c
  5438  0019C6  3026               	rrcf	___fldiv@bexp^0,w,c
  5439  0019C8  6E12               	movwf	(___fldiv@b+3)^0,c
  5440  0019CA  EF98  F00B         	goto	l2718
  5441  0019CE                     l1307:
  5442  0019CE  0012               	return		;funcret
  5443  0019D0                     __end_of___fldiv:
  5444                           	callstack 0
  5445                           
  5446 ;; *************** function ___flge *****************
  5447 ;; Defined at:
  5448 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  ff1             4    0[COMRAM] unsigned char 
  5451 ;;  ff2             4    4[COMRAM] unsigned char 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;		None
  5454 ;; Return value:  Size  Location     Type
  5455 ;;		None               void
  5456 ;; Registers used:
  5457 ;;		wreg, status,2, status,0
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5463 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5465 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5466 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5467 ;;Total ram usage:       12 bytes
  5468 ;; Hardware stack levels used: 1
  5469 ;; This function calls:
  5470 ;;		Nothing
  5471 ;; This function is called by:
  5472 ;;		_colourcards_readRGBC
  5473 ;;		_colourcards_testingRGBC
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text32
  5478  002024                     __ptext32:
  5479                           	callstack 0
  5480  002024                     ___flge:
  5481                           	callstack 29
  5482  002024  0E00               	movlw	0
  5483  002026  1401               	andwf	___flge@ff1^0,w,c
  5484  002028  6E09               	movwf	??___flge^0,c
  5485  00202A  0E00               	movlw	0
  5486  00202C  1402               	andwf	(___flge@ff1+1)^0,w,c
  5487  00202E  6E0A               	movwf	(??___flge+1)^0,c
  5488  002030  0E80               	movlw	128
  5489  002032  1403               	andwf	(___flge@ff1+2)^0,w,c
  5490  002034  6E0B               	movwf	(??___flge+2)^0,c
  5491  002036  0E7F               	movlw	127
  5492  002038  1404               	andwf	(___flge@ff1+3)^0,w,c
  5493  00203A  6E0C               	movwf	(??___flge+3)^0,c
  5494  00203C  5009               	movf	??___flge^0,w,c
  5495  00203E  100A               	iorwf	(??___flge+1)^0,w,c
  5496  002040  100B               	iorwf	(??___flge+2)^0,w,c
  5497  002042  100C               	iorwf	(??___flge+3)^0,w,c
  5498  002044  A4D8               	btfss	status,2,c
  5499  002046  EF27  F010         	goto	u2521
  5500  00204A  EF29  F010         	goto	u2520
  5501  00204E                     u2521:
  5502  00204E  EF31  F010         	goto	l3006
  5503  002052                     u2520:
  5504  002052  0E00               	movlw	0
  5505  002054  6E01               	movwf	___flge@ff1^0,c
  5506  002056  0E00               	movlw	0
  5507  002058  6E02               	movwf	(___flge@ff1+1)^0,c
  5508  00205A  0E00               	movlw	0
  5509  00205C  6E03               	movwf	(___flge@ff1+2)^0,c
  5510  00205E  0E00               	movlw	0
  5511  002060  6E04               	movwf	(___flge@ff1+3)^0,c
  5512  002062                     l3006:
  5513  002062  0E00               	movlw	0
  5514  002064  1405               	andwf	___flge@ff2^0,w,c
  5515  002066  6E09               	movwf	??___flge^0,c
  5516  002068  0E00               	movlw	0
  5517  00206A  1406               	andwf	(___flge@ff2+1)^0,w,c
  5518  00206C  6E0A               	movwf	(??___flge+1)^0,c
  5519  00206E  0E80               	movlw	128
  5520  002070  1407               	andwf	(___flge@ff2+2)^0,w,c
  5521  002072  6E0B               	movwf	(??___flge+2)^0,c
  5522  002074  0E7F               	movlw	127
  5523  002076  1408               	andwf	(___flge@ff2+3)^0,w,c
  5524  002078  6E0C               	movwf	(??___flge+3)^0,c
  5525  00207A  5009               	movf	??___flge^0,w,c
  5526  00207C  100A               	iorwf	(??___flge+1)^0,w,c
  5527  00207E  100B               	iorwf	(??___flge+2)^0,w,c
  5528  002080  100C               	iorwf	(??___flge+3)^0,w,c
  5529  002082  A4D8               	btfss	status,2,c
  5530  002084  EF46  F010         	goto	u2531
  5531  002088  EF48  F010         	goto	u2530
  5532  00208C                     u2531:
  5533  00208C  EF50  F010         	goto	l3010
  5534  002090                     u2530:
  5535  002090  0E00               	movlw	0
  5536  002092  6E05               	movwf	___flge@ff2^0,c
  5537  002094  0E00               	movlw	0
  5538  002096  6E06               	movwf	(___flge@ff2+1)^0,c
  5539  002098  0E00               	movlw	0
  5540  00209A  6E07               	movwf	(___flge@ff2+2)^0,c
  5541  00209C  0E00               	movlw	0
  5542  00209E  6E08               	movwf	(___flge@ff2+3)^0,c
  5543  0020A0                     l3010:
  5544  0020A0  AE04               	btfss	(___flge@ff1+3)^0,7,c
  5545  0020A2  EF55  F010         	goto	u2541
  5546  0020A6  EF57  F010         	goto	u2540
  5547  0020AA                     u2541:
  5548  0020AA  EF60  F010         	goto	l3014
  5549  0020AE                     u2540:
  5550  0020AE  6C01               	negf	___flge@ff1^0,c
  5551  0020B0  1E02               	comf	(___flge@ff1+1)^0,f,c
  5552  0020B2  B0D8               	btfsc	status,0,c
  5553  0020B4  2A02               	incf	(___flge@ff1+1)^0,f,c
  5554  0020B6  1E03               	comf	(___flge@ff1+2)^0,f,c
  5555  0020B8  B0D8               	btfsc	status,0,c
  5556  0020BA  2A03               	incf	(___flge@ff1+2)^0,f,c
  5557  0020BC  0E80               	movlw	128
  5558  0020BE  5604               	subfwb	(___flge@ff1+3)^0,f,c
  5559  0020C0                     l3014:
  5560  0020C0  AE08               	btfss	(___flge@ff2+3)^0,7,c
  5561  0020C2  EF65  F010         	goto	u2551
  5562  0020C6  EF67  F010         	goto	u2550
  5563  0020CA                     u2551:
  5564  0020CA  EF70  F010         	goto	l990
  5565  0020CE                     u2550:
  5566  0020CE  6C05               	negf	___flge@ff2^0,c
  5567  0020D0  1E06               	comf	(___flge@ff2+1)^0,f,c
  5568  0020D2  B0D8               	btfsc	status,0,c
  5569  0020D4  2A06               	incf	(___flge@ff2+1)^0,f,c
  5570  0020D6  1E07               	comf	(___flge@ff2+2)^0,f,c
  5571  0020D8  B0D8               	btfsc	status,0,c
  5572  0020DA  2A07               	incf	(___flge@ff2+2)^0,f,c
  5573  0020DC  0E80               	movlw	128
  5574  0020DE  5608               	subfwb	(___flge@ff2+3)^0,f,c
  5575  0020E0                     l990:
  5576  0020E0  0E00               	movlw	0
  5577  0020E2  1A01               	xorwf	___flge@ff1^0,f,c
  5578  0020E4  0E00               	movlw	0
  5579  0020E6  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  5580  0020E8  0E00               	movlw	0
  5581  0020EA  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  5582  0020EC  0E80               	movlw	128
  5583  0020EE  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  5584  0020F0  0E00               	movlw	0
  5585  0020F2  1A05               	xorwf	___flge@ff2^0,f,c
  5586  0020F4  0E00               	movlw	0
  5587  0020F6  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  5588  0020F8  0E00               	movlw	0
  5589  0020FA  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  5590  0020FC  0E80               	movlw	128
  5591  0020FE  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  5592  002100  5005               	movf	___flge@ff2^0,w,c
  5593  002102  5C01               	subwf	___flge@ff1^0,w,c
  5594  002104  5006               	movf	(___flge@ff2+1)^0,w,c
  5595  002106  5802               	subwfb	(___flge@ff1+1)^0,w,c
  5596  002108  5007               	movf	(___flge@ff2+2)^0,w,c
  5597  00210A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  5598  00210C  5008               	movf	(___flge@ff2+3)^0,w,c
  5599  00210E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  5600  002110  B0D8               	btfsc	status,0,c
  5601  002112  EF8D  F010         	goto	u2561
  5602  002116  EF8F  F010         	goto	u2560
  5603  00211A                     u2561:
  5604  00211A  EF92  F010         	goto	l3020
  5605  00211E                     u2560:
  5606  00211E  90D8               	bcf	status,0,c
  5607  002120  EF93  F010         	goto	l995
  5608  002124                     l3020:
  5609  002124  80D8               	bsf	status,0,c
  5610  002126                     l995:
  5611  002126  0012               	return		;funcret
  5612  002128                     __end_of___flge:
  5613                           	callstack 0
  5614                           
  5615 ;; *************** function _checkbatterylevel *****************
  5616 ;; Defined at:
  5617 ;;		line 73 in file "DC_motors.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  batterylevel    1    1[COMRAM] unsigned char 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, status,2, status,0, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5635 ;;Total ram usage:        1 bytes
  5636 ;; Hardware stack levels used: 1
  5637 ;; Hardware stack levels required when called: 1
  5638 ;; This function calls:
  5639 ;;		_ADC_getval
  5640 ;; This function is called by:
  5641 ;;		_main
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text33
  5646  002A58                     __ptext33:
  5647                           	callstack 0
  5648  002A58                     _checkbatterylevel:
  5649                           	callstack 29
  5650  002A58                     
  5651                           ;DC_motors.c: 75:     unsigned char batterylevel;;DC_motors.c: 76:     batterylevel = AD
      +                          C_getval();
  5652  002A58  EC59  F015         	call	_ADC_getval	;wreg free
  5653  002A5C  6E02               	movwf	checkbatterylevel@batterylevel^0,c
  5654  002A5E                     
  5655                           ;DC_motors.c: 77:     if (batterylevel<150) {
  5656  002A5E  0E96               	movlw	150
  5657  002A60  6002               	cpfslt	checkbatterylevel@batterylevel^0,c
  5658  002A62  EF35  F015         	goto	u2571
  5659  002A66  EF37  F015         	goto	u2570
  5660  002A6A                     u2571:
  5661  002A6A  EF3A  F015         	goto	l576
  5662  002A6E                     u2570:
  5663  002A6E                     
  5664                           ;DC_motors.c: 78:         LATDbits.LATD7 = 1;
  5665  002A6E  8E7C               	bsf	124,7,c	;volatile
  5666                           
  5667                           ;DC_motors.c: 79:     } else {
  5668  002A70  EF3B  F015         	goto	l578
  5669  002A74                     l576:
  5670                           
  5671                           ;DC_motors.c: 80:         LATDbits.LATD7 = 0;
  5672  002A74  9E7C               	bcf	124,7,c	;volatile
  5673  002A76                     l578:
  5674  002A76  0012               	return		;funcret
  5675  002A78                     __end_of_checkbatterylevel:
  5676                           	callstack 0
  5677                           
  5678 ;; *************** function _ADC_getval *****************
  5679 ;; Defined at:
  5680 ;;		line 26 in file "ADC.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;		None
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  tmpval          1    0[COMRAM] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      unsigned char 
  5687 ;; Registers used:
  5688 ;;		wreg, status,2
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5697 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5698 ;;Total ram usage:        1 bytes
  5699 ;; Hardware stack levels used: 1
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_checkbatterylevel
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text34
  5708  002AB2                     __ptext34:
  5709                           	callstack 0
  5710  002AB2                     _ADC_getval:
  5711                           	callstack 29
  5712  002AB2                     
  5713                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  5714  002AB2  8060               	bsf	96,0,c	;volatile
  5715  002AB4                     l324:
  5716  002AB4  B060               	btfsc	96,0,c	;volatile
  5717  002AB6  EF5F  F015         	goto	u2511
  5718  002ABA  EF61  F015         	goto	u2510
  5719  002ABE                     u2511:
  5720  002ABE  EF5A  F015         	goto	l324
  5721  002AC2                     u2510:
  5722  002AC2                     
  5723                           ;ADC.c: 31:     tmpval = ADRESH;
  5724  002AC2  CF64 F001          	movff	3940,ADC_getval@tmpval	;volatile
  5725  002AC6                     
  5726                           ;ADC.c: 34:     return tmpval;
  5727  002AC6  5001               	movf	ADC_getval@tmpval^0,w,c
  5728  002AC8  0012               	return		;funcret
  5729  002ACA                     __end_of_ADC_getval:
  5730                           	callstack 0
  5731                           
  5732 ;; *************** function _USART4_init *****************
  5733 ;; Defined at:
  5734 ;;		line 7 in file "serial_comm.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;		None
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;		None
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;Total ram usage:        0 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_main
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text35
  5762  002A78                     __ptext35:
  5763                           	callstack 0
  5764  002A78                     _USART4_init:
  5765                           	callstack 30
  5766  002A78                     
  5767                           ;serial_comm.c: 10:     RC0PPS = 0x12;
  5768  002A78  0E12               	movlw	18
  5769  002A7A  010E               	movlb	14	; () banked
  5770  002A7C  6F62               	movwf	98,b	;volatile
  5771                           
  5772                           ;serial_comm.c: 11:     RX4PPS = 0x11;
  5773  002A7E  0E11               	movlw	17
  5774  002A80  6F15               	movwf	21,b	;volatile
  5775  002A82                     
  5776                           ; BSR set to: 14
  5777                           ;serial_comm.c: 12:     TRISCbits.TRISC1 = 1;
  5778  002A82  8283               	bsf	131,1,c	;volatile
  5779  002A84                     
  5780                           ; BSR set to: 14
  5781                           ;serial_comm.c: 14:     BAUD4CONbits.BRG16 = 0;
  5782  002A84  97E9               	bcf	233,3,b	;volatile
  5783  002A86                     
  5784                           ; BSR set to: 14
  5785                           ;serial_comm.c: 15:     TX4STAbits.BRGH = 0;
  5786  002A86  95E8               	bcf	232,2,b	;volatile
  5787                           
  5788                           ;serial_comm.c: 16:     SP4BRGL = 51;
  5789  002A88  0E33               	movlw	51
  5790  002A8A  6FE5               	movwf	229,b	;volatile
  5791                           
  5792                           ;serial_comm.c: 17:     SP4BRGH = 0;
  5793  002A8C  0E00               	movlw	0
  5794  002A8E  6FE6               	movwf	230,b	;volatile
  5795  002A90                     
  5796                           ; BSR set to: 14
  5797                           ;serial_comm.c: 19:     RC4STAbits.CREN = 1;
  5798  002A90  89E7               	bsf	231,4,b	;volatile
  5799  002A92                     
  5800                           ; BSR set to: 14
  5801                           ;serial_comm.c: 20:     TX4STAbits.TXEN = 1;
  5802  002A92  8BE8               	bsf	232,5,b	;volatile
  5803  002A94                     
  5804                           ; BSR set to: 14
  5805                           ;serial_comm.c: 21:     RC4STAbits.SPEN = 1;
  5806  002A94  8FE7               	bsf	231,7,b	;volatile
  5807  002A96                     
  5808                           ; BSR set to: 14
  5809  002A96  0012               	return		;funcret
  5810  002A98                     __end_of_USART4_init:
  5811                           	callstack 0
  5812                           
  5813 ;; *************** function _DCmotors_init *****************
  5814 ;; Defined at:
  5815 ;;		line 10 in file "DC_motors.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  PWMperiod       1    wreg     unsigned char 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  PWMperiod       1    0[COMRAM] unsigned char 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  1    wreg      void 
  5822 ;; Registers used:
  5823 ;;		wreg, status,2, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5833 ;;Total ram usage:        1 bytes
  5834 ;; Hardware stack levels used: 1
  5835 ;; Hardware stack levels required when called: 1
  5836 ;; This function calls:
  5837 ;;		_buggyLEDs_init
  5838 ;;		_clicker2LEDs_init
  5839 ;;		_clicker2buttons_init
  5840 ;; This function is called by:
  5841 ;;		_main
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text36
  5846  002812                     __ptext36:
  5847                           	callstack 0
  5848  002812                     _DCmotors_init:
  5849                           	callstack 29
  5850                           
  5851                           ; BSR set to: 14
  5852                           ;incstack = 0
  5853                           ;DCmotors_init@PWMperiod stored from wreg
  5854  002812  6E01               	movwf	DCmotors_init@PWMperiod^0,c
  5855  002814                     
  5856                           ;DC_motors.c: 10: void DCmotors_init(unsigned char PWMperiod);DC_motors.c: 11: {;DC_moto
      +                          rs.c: 13:     T2CONbits.CKPS=0b100;
  5857  002814  50BD               	movf	189,w,c	;volatile
  5858  002816  0B8F               	andlw	-113
  5859  002818  0940               	iorlw	64
  5860  00281A  6EBD               	movwf	189,c	;volatile
  5861                           
  5862                           ;DC_motors.c: 14:     T2HLTbits.MODE=0b00000;
  5863  00281C  0EE0               	movlw	-32
  5864  00281E  16BE               	andwf	190,f,c	;volatile
  5865                           
  5866                           ;DC_motors.c: 15:     T2CLKCONbits.CS=0b0001;
  5867  002820  50BF               	movf	191,w,c	;volatile
  5868  002822  0BF0               	andlw	-16
  5869  002824  0901               	iorlw	1
  5870  002826  6EBF               	movwf	191,c	;volatile
  5871  002828                     
  5872                           ;DC_motors.c: 18:     T2PR=PWMperiod;
  5873  002828  C001  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  5874  00282C                     
  5875                           ;DC_motors.c: 19:     T2CONbits.ON=1;
  5876  00282C  8EBD               	bsf	189,7,c	;volatile
  5877  00282E                     
  5878                           ;DC_motors.c: 22:     TRISEbits.TRISE2=0;
  5879  00282E  9485               	bcf	133,2,c	;volatile
  5880  002830                     
  5881                           ;DC_motors.c: 23:     TRISEbits.TRISE4=0;
  5882  002830  9885               	bcf	133,4,c	;volatile
  5883  002832                     
  5884                           ;DC_motors.c: 24:     TRISCbits.TRISC7=0;
  5885  002832  9E83               	bcf	131,7,c	;volatile
  5886  002834                     
  5887                           ;DC_motors.c: 25:     TRISGbits.TRISG6=0;
  5888  002834  9C87               	bcf	135,6,c	;volatile
  5889  002836                     
  5890                           ;DC_motors.c: 27:     LATEbits.LATE2=0;
  5891  002836  947D               	bcf	125,2,c	;volatile
  5892  002838                     
  5893                           ;DC_motors.c: 28:     LATEbits.LATE4=0;
  5894  002838  987D               	bcf	125,4,c	;volatile
  5895  00283A                     
  5896                           ;DC_motors.c: 29:     LATCbits.LATC7=0;
  5897  00283A  9E7B               	bcf	123,7,c	;volatile
  5898  00283C                     
  5899                           ;DC_motors.c: 30:     LATGbits.LATG6=0;
  5900  00283C  9C7F               	bcf	127,6,c	;volatile
  5901                           
  5902                           ;DC_motors.c: 32:     PWM6DCH=0;
  5903  00283E  0E00               	movlw	0
  5904  002840  6EA3               	movwf	163,c	;volatile
  5905                           
  5906                           ;DC_motors.c: 33:     PWM7DCH=0;
  5907  002842  0E00               	movlw	0
  5908  002844  6EA0               	movwf	160,c	;volatile
  5909  002846                     
  5910                           ;DC_motors.c: 35:     PWM6CONbits.EN = 1;
  5911  002846  8EA4               	bsf	164,7,c	;volatile
  5912  002848                     
  5913                           ;DC_motors.c: 36:     PWM7CONbits.EN = 1;
  5914  002848  8EA1               	bsf	161,7,c	;volatile
  5915                           
  5916                           ;DC_motors.c: 38:     RE2PPS=0x0A;
  5917  00284A  0E0A               	movlw	10
  5918  00284C  010E               	movlb	14	; () banked
  5919  00284E  6F74               	movwf	116,b	;volatile
  5920                           
  5921                           ;DC_motors.c: 39:     RC7PPS=0x0B;
  5922  002850  0E0B               	movlw	11
  5923  002852  6F69               	movwf	105,b	;volatile
  5924  002854                     
  5925                           ; BSR set to: 14
  5926                           ;DC_motors.c: 42:     clicker2buttons_init();
  5927  002854  EC7D  F015         	call	_clicker2buttons_init	;wreg free
  5928  002858                     
  5929                           ;DC_motors.c: 43:     clicker2LEDs_init();
  5930  002858  EC92  F015         	call	_clicker2LEDs_init	;wreg free
  5931  00285C                     
  5932                           ;DC_motors.c: 44:     buggyLEDs_init();
  5933  00285C  EC65  F015         	call	_buggyLEDs_init	;wreg free
  5934  002860  0012               	return		;funcret
  5935  002862                     __end_of_DCmotors_init:
  5936                           	callstack 0
  5937                           
  5938 ;; *************** function _clicker2buttons_init *****************
  5939 ;; Defined at:
  5940 ;;		line 7 in file "buttons_n_LEDs.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;		None
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;		None
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      void 
  5947 ;; Registers used:
  5948 ;;		None
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5958 ;;Total ram usage:        0 bytes
  5959 ;; Hardware stack levels used: 1
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_DCmotors_init
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text37
  5968  002AFA                     __ptext37:
  5969                           	callstack 0
  5970  002AFA                     _clicker2buttons_init:
  5971                           	callstack 29
  5972  002AFA                     
  5973                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
  5974  002AFA  8486               	bsf	134,2,c	;volatile
  5975                           
  5976                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
  5977  002AFC  8686               	bsf	134,3,c	;volatile
  5978                           
  5979                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
  5980  002AFE  010E               	movlb	14	; () banked
  5981  002B00  95B4               	bcf	180,2,b	;volatile
  5982                           
  5983                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
  5984  002B02  97B4               	bcf	180,3,b	;volatile
  5985  002B04                     
  5986                           ; BSR set to: 14
  5987  002B04  0012               	return		;funcret
  5988  002B06                     __end_of_clicker2buttons_init:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _clicker2LEDs_init *****************
  5992 ;; Defined at:
  5993 ;;		line 19 in file "buttons_n_LEDs.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;		None
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;		None
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      void 
  6000 ;; Registers used:
  6001 ;;		None
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6011 ;;Total ram usage:        0 bytes
  6012 ;; Hardware stack levels used: 1
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_DCmotors_init
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text38
  6021  002B24                     __ptext38:
  6022                           	callstack 0
  6023  002B24                     _clicker2LEDs_init:
  6024                           	callstack 29
  6025  002B24                     
  6026                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
  6027  002B24  9E84               	bcf	132,7,c	;volatile
  6028                           
  6029                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
  6030  002B26  9688               	bcf	136,3,c	;volatile
  6031                           
  6032                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
  6033  002B28  9E7C               	bcf	124,7,c	;volatile
  6034                           
  6035                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
  6036  002B2A  9680               	bcf	128,3,c	;volatile
  6037  002B2C  0012               	return		;funcret
  6038  002B2E                     __end_of_clicker2LEDs_init:
  6039                           	callstack 0
  6040                           
  6041 ;; *************** function _buggyLEDs_init *****************
  6042 ;; Defined at:
  6043 ;;		line 31 in file "buttons_n_LEDs.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;		None
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;		None
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		None
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;Total ram usage:        0 bytes
  6062 ;; Hardware stack levels used: 1
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_DCmotors_init
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text39
  6071  002ACA                     __ptext39:
  6072                           	callstack 0
  6073  002ACA                     _buggyLEDs_init:
  6074                           	callstack 29
  6075  002ACA                     
  6076                           ;buttons_n_LEDs.c: 33:     TRISHbits.TRISH1 = 0;
  6077  002ACA  9288               	bcf	136,1,c	;volatile
  6078                           
  6079                           ;buttons_n_LEDs.c: 34:     TRISDbits.TRISD3 = 0;
  6080  002ACC  9684               	bcf	132,3,c	;volatile
  6081                           
  6082                           ;buttons_n_LEDs.c: 35:     TRISDbits.TRISD4 = 0;
  6083  002ACE  9884               	bcf	132,4,c	;volatile
  6084                           
  6085                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF0 = 0;
  6086  002AD0  9086               	bcf	134,0,c	;volatile
  6087                           
  6088                           ;buttons_n_LEDs.c: 37:     TRISHbits.TRISH0 = 0;
  6089  002AD2  9088               	bcf	136,0,c	;volatile
  6090                           
  6091                           ;buttons_n_LEDs.c: 39:     LATHbits.LATH1 = 0;
  6092  002AD4  9280               	bcf	128,1,c	;volatile
  6093                           
  6094                           ;buttons_n_LEDs.c: 40:     LATDbits.LATD3 = 0;
  6095  002AD6  967C               	bcf	124,3,c	;volatile
  6096                           
  6097                           ;buttons_n_LEDs.c: 41:     LATDbits.LATD4 = 0;
  6098  002AD8  987C               	bcf	124,4,c	;volatile
  6099                           
  6100                           ;buttons_n_LEDs.c: 42:     LATFbits.LATF0 = 0;
  6101  002ADA  907E               	bcf	126,0,c	;volatile
  6102                           
  6103                           ;buttons_n_LEDs.c: 43:     LATHbits.LATH0 = 0;
  6104  002ADC  9080               	bcf	128,0,c	;volatile
  6105  002ADE  0012               	return		;funcret
  6106  002AE0                     __end_of_buggyLEDs_init:
  6107                           	callstack 0
  6108                           
  6109 ;; *************** function _ADC_init *****************
  6110 ;; Defined at:
  6111 ;;		line 8 in file "ADC.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;		None
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		wreg, status,2
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6129 ;;Total ram usage:        0 bytes
  6130 ;; Hardware stack levels used: 1
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text40
  6139  002A98                     __ptext40:
  6140                           	callstack 0
  6141  002A98                     _ADC_init:
  6142                           	callstack 30
  6143  002A98                     
  6144                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  6145  002A98  8C86               	bsf	134,6,c	;volatile
  6146                           
  6147                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  6148  002A9A  010E               	movlb	14	; () banked
  6149  002A9C  8DB4               	bsf	180,6,b	;volatile
  6150                           
  6151                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  6152  002A9E  010F               	movlb	15	; () banked
  6153  002AA0  9958               	bcf	88,4,b	;volatile
  6154  002AA2                     
  6155                           ; BSR set to: 15
  6156                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  6157  002AA2  0EFC               	movlw	-4
  6158  002AA4  1758               	andwf	88,f,b	;volatile
  6159                           
  6160                           ;ADC.c: 16:     ADPCH=0b101110;
  6161  002AA6  0E2E               	movlw	46
  6162  002AA8  6F5F               	movwf	95,b	;volatile
  6163  002AAA                     
  6164                           ; BSR set to: 15
  6165                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  6166  002AAA  9460               	bcf	96,2,c	;volatile
  6167  002AAC                     
  6168                           ; BSR set to: 15
  6169                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  6170  002AAC  8860               	bsf	96,4,c	;volatile
  6171  002AAE                     
  6172                           ; BSR set to: 15
  6173                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  6174  002AAE  8E60               	bsf	96,7,c	;volatile
  6175  002AB0                     
  6176                           ; BSR set to: 15
  6177  002AB0  0012               	return		;funcret
  6178  002AB2                     __end_of_ADC_init:
  6179                           	callstack 0
  6180                           
  6181                           	psect	rparam
  6182  0000                     
  6183                           	psect	idloc
  6184                           
  6185                           ;Config register IDLOC0 @ 0x200000
  6186                           ;	unspecified, using default values
  6187  200000                     	org	2097152
  6188  200000  0FFF               	dw	4095
  6189                           
  6190                           ;Config register IDLOC1 @ 0x200002
  6191                           ;	unspecified, using default values
  6192  200002                     	org	2097154
  6193  200002  0FFF               	dw	4095
  6194                           
  6195                           ;Config register IDLOC2 @ 0x200004
  6196                           ;	unspecified, using default values
  6197  200004                     	org	2097156
  6198  200004  0FFF               	dw	4095
  6199                           
  6200                           ;Config register IDLOC3 @ 0x200006
  6201                           ;	unspecified, using default values
  6202  200006                     	org	2097158
  6203  200006  0FFF               	dw	4095
  6204                           
  6205                           ;Config register IDLOC4 @ 0x200008
  6206                           ;	unspecified, using default values
  6207  200008                     	org	2097160
  6208  200008  0FFF               	dw	4095
  6209                           
  6210                           ;Config register IDLOC5 @ 0x20000A
  6211                           ;	unspecified, using default values
  6212  20000A                     	org	2097162
  6213  20000A  0FFF               	dw	4095
  6214                           
  6215                           ;Config register IDLOC6 @ 0x20000C
  6216                           ;	unspecified, using default values
  6217  20000C                     	org	2097164
  6218  20000C  0FFF               	dw	4095
  6219                           
  6220                           ;Config register IDLOC7 @ 0x20000E
  6221                           ;	unspecified, using default values
  6222  20000E                     	org	2097166
  6223  20000E  0FFF               	dw	4095
  6224                           
  6225                           	psect	config
  6226                           
  6227                           ;Config register CONFIG1L @ 0x300000
  6228                           ;	External Oscillator mode Selection bits
  6229                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6230                           ;	Power-up default value for COSC bits
  6231                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6232  300000                     	org	3145728
  6233  300000  AA                 	db	170
  6234                           
  6235                           ;Config register CONFIG1H @ 0x300001
  6236                           ;	unspecified, using default values
  6237                           ;	Clock Out Enable bit
  6238                           ;	CLKOUTEN = 0x1, unprogrammed default
  6239                           ;	Clock Switch Enable bit
  6240                           ;	CSWEN = 0x1, unprogrammed default
  6241                           ;	Fail-Safe Clock Monitor Enable bit
  6242                           ;	FCMEN = 0x1, unprogrammed default
  6243  300001                     	org	3145729
  6244  300001  FF                 	db	255
  6245                           
  6246                           ;Config register CONFIG2L @ 0x300002
  6247                           ;	unspecified, using default values
  6248                           ;	Master Clear Enable bit
  6249                           ;	MCLRE = 0x1, unprogrammed default
  6250                           ;	Power-up Timer Enable bit
  6251                           ;	PWRTE = 0x1, unprogrammed default
  6252                           ;	Low-power BOR enable bit
  6253                           ;	LPBOREN = 0x1, unprogrammed default
  6254                           ;	Brown-out Reset Enable bits
  6255                           ;	BOREN = 0x3, unprogrammed default
  6256  300002                     	org	3145730
  6257  300002  FF                 	db	255
  6258                           
  6259                           ;Config register CONFIG2H @ 0x300003
  6260                           ;	unspecified, using default values
  6261                           ;	Brown Out Reset Voltage selection bits
  6262                           ;	BORV = 0x3, unprogrammed default
  6263                           ;	ZCD Disable bit
  6264                           ;	ZCD = 0x1, unprogrammed default
  6265                           ;	PPSLOCK bit One-Way Set Enable bit
  6266                           ;	PPS1WAY = 0x1, unprogrammed default
  6267                           ;	Stack Full/Underflow Reset Enable bit
  6268                           ;	STVREN = 0x1, unprogrammed default
  6269                           ;	Debugger Enable bit
  6270                           ;	DEBUG = 0x1, unprogrammed default
  6271                           ;	Extended Instruction Set Enable bit
  6272                           ;	XINST = 0x1, unprogrammed default
  6273  300003                     	org	3145731
  6274  300003  FF                 	db	255
  6275                           
  6276                           ;Config register CONFIG3L @ 0x300004
  6277                           ;	WDT Period Select bits
  6278                           ;	WDTCPS = 0x1F, unprogrammed default
  6279                           ;	WDT operating mode
  6280                           ;	WDTE = OFF, WDT Disabled
  6281  300004                     	org	3145732
  6282  300004  9F                 	db	159
  6283                           
  6284                           ;Config register CONFIG3H @ 0x300005
  6285                           ;	unspecified, using default values
  6286                           ;	WDT Window Select bits
  6287                           ;	WDTCWS = 0x7, unprogrammed default
  6288                           ;	WDT input clock selector
  6289                           ;	WDTCCS = 0x7, unprogrammed default
  6290  300005                     	org	3145733
  6291  300005  FF                 	db	255
  6292                           
  6293                           ;Config register CONFIG4L @ 0x300006
  6294                           ;	unspecified, using default values
  6295                           ;	Write Protection Block 0
  6296                           ;	WRT0 = 0x1, unprogrammed default
  6297                           ;	Write Protection Block 1
  6298                           ;	WRT1 = 0x1, unprogrammed default
  6299                           ;	Write Protection Block 2
  6300                           ;	WRT2 = 0x1, unprogrammed default
  6301                           ;	Write Protection Block 3
  6302                           ;	WRT3 = 0x1, unprogrammed default
  6303                           ;	Write Protection Block 3
  6304                           ;	WRT4 = 0x1, unprogrammed default
  6305                           ;	Write Protection Block 3
  6306                           ;	WRT5 = 0x1, unprogrammed default
  6307                           ;	Write Protection Block 3
  6308                           ;	WRT6 = 0x1, unprogrammed default
  6309                           ;	Write Protection Block 3
  6310                           ;	WRT7 = 0x1, unprogrammed default
  6311  300006                     	org	3145734
  6312  300006  FF                 	db	255
  6313                           
  6314                           ;Config register CONFIG4H @ 0x300007
  6315                           ;	unspecified, using default values
  6316                           ;	Configuration Register Write Protection bit
  6317                           ;	WRTC = 0x1, unprogrammed default
  6318                           ;	Boot Block Write Protection bit
  6319                           ;	WRTB = 0x1, unprogrammed default
  6320                           ;	Data EEPROM Write Protection bit
  6321                           ;	WRTD = 0x1, unprogrammed default
  6322                           ;	Scanner Enable bit
  6323                           ;	SCANE = 0x1, unprogrammed default
  6324                           ;	Low Voltage Programming Enable bit
  6325                           ;	LVP = 0x1, unprogrammed default
  6326  300007                     	org	3145735
  6327  300007  FF                 	db	255
  6328                           
  6329                           ;Config register CONFIG5L @ 0x300008
  6330                           ;	unspecified, using default values
  6331                           ;	UserNVM Program Memory Code Protection bit
  6332                           ;	CP = 0x1, unprogrammed default
  6333                           ;	DataNVM Memory Code Protection bit
  6334                           ;	CPD = 0x1, unprogrammed default
  6335  300008                     	org	3145736
  6336  300008  FF                 	db	255
  6337                           
  6338                           ;Config register CONFIG5H @ 0x300009
  6339                           ;	unspecified, using default values
  6340  300009                     	org	3145737
  6341  300009  FF                 	db	255
  6342                           
  6343                           ;Config register CONFIG6L @ 0x30000A
  6344                           ;	unspecified, using default values
  6345                           ;	Table Read Protection Block 0
  6346                           ;	EBTR0 = 0x1, unprogrammed default
  6347                           ;	Table Read Protection Block 1
  6348                           ;	EBTR1 = 0x1, unprogrammed default
  6349                           ;	Table Read Protection Block 2
  6350                           ;	EBTR2 = 0x1, unprogrammed default
  6351                           ;	Table Read Protection Block 3
  6352                           ;	EBTR3 = 0x1, unprogrammed default
  6353                           ;	Table Read Protection Block 4
  6354                           ;	EBTR4 = 0x1, unprogrammed default
  6355                           ;	Table Read Protection Block 5
  6356                           ;	EBTR5 = 0x1, unprogrammed default
  6357                           ;	Table Read Protection Block 6
  6358                           ;	EBTR6 = 0x1, unprogrammed default
  6359                           ;	Table Read Protection Block 7
  6360                           ;	EBTR7 = 0x1, unprogrammed default
  6361  30000A                     	org	3145738
  6362  30000A  FF                 	db	255
  6363                           
  6364                           ;Config register CONFIG6H @ 0x30000B
  6365                           ;	unspecified, using default values
  6366                           ;	Boot Block Table Read Protection bit
  6367                           ;	EBTRB = 0x1, unprogrammed default
  6368  30000B                     	org	3145739
  6369  30000B  FF                 	db	255
  6370                           tosu	equ	0xFFF
  6371                           tosh	equ	0xFFE
  6372                           tosl	equ	0xFFD
  6373                           stkptr	equ	0xFFC
  6374                           pclatu	equ	0xFFB
  6375                           pclath	equ	0xFFA
  6376                           pcl	equ	0xFF9
  6377                           tblptru	equ	0xFF8
  6378                           tblptrh	equ	0xFF7
  6379                           tblptrl	equ	0xFF6
  6380                           tablat	equ	0xFF5
  6381                           prodh	equ	0xFF4
  6382                           prodl	equ	0xFF3
  6383                           indf0	equ	0xFEF
  6384                           postinc0	equ	0xFEE
  6385                           postdec0	equ	0xFED
  6386                           preinc0	equ	0xFEC
  6387                           plusw0	equ	0xFEB
  6388                           fsr0h	equ	0xFEA
  6389                           fsr0l	equ	0xFE9
  6390                           wreg	equ	0xFE8
  6391                           indf1	equ	0xFE7
  6392                           postinc1	equ	0xFE6
  6393                           postdec1	equ	0xFE5
  6394                           preinc1	equ	0xFE4
  6395                           plusw1	equ	0xFE3
  6396                           fsr1h	equ	0xFE2
  6397                           fsr1l	equ	0xFE1
  6398                           bsr	equ	0xFE0
  6399                           indf2	equ	0xFDF
  6400                           postinc2	equ	0xFDE
  6401                           postdec2	equ	0xFDD
  6402                           preinc2	equ	0xFDC
  6403                           plusw2	equ	0xFDB
  6404                           fsr2h	equ	0xFDA
  6405                           fsr2l	equ	0xFD9
  6406                           status	equ	0xFD8

Data Sizes:
    Strings     162
    Constant    0
    Data        0
    BSS         93
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      88
    BANK0           160     26     108
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S2909_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(COMRAM[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> colourclick_testing@buf(COMRAM[40]), colourcards_testingRGBC@buf(COMRAM[30]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(COMRAM[8]), colourclick_calibration@initial(COMRAM[8]), colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK0[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC@rel(COMRAM[12]), colourcards_readRGBC@rel(COMRAM[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S24$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S24$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_colourcards_readRGBC
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _colourcards_readRGBC->_colourcards_normaliseRGBC
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right
    _right->_DCmotors_setPWM
    _left->_DCmotors_setPWM
    _stop->_DCmotors_setPWM
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    ___fldiv->___xxtofl
    _checkbatterylevel->_ADC_getval

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   41130
                                             71 COMRAM     2     2      0
                                              0 BANK0     26    26      0
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                  _colourclickLEDs_C
                   _colourclick_init
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     360
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colourclick_writetoaddr                              2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                20    14      6   40173
                                             51 COMRAM    20    14      6
                             ___flge
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6    7650
                                             33 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6    6966
                                             33 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                                8     2      6    2619
                                             25 COMRAM     8     2      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _left                                                 8     2      6    2619
                                             25 COMRAM     8     2      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    5419
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              6     2      4    2575
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                              6     2      4    2575
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (4) _DCmotors_setPWM                                     11     9      2    1943
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC2                                5     2      3    1954
                                             13 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (3) _colourclick_readRGBC                                 2     0      2    1148
                                             11 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (4) _colourclick_readR                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _colourclick_readG                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _colourclick_readC                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _colourclick_readB                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourcards_normaliseRGBC                           12     8      4    3683
                                             39 COMRAM    12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     778
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1703
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    6262
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                              1 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              0 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_readRGBC
     ___flge
     _colourcards_normaliseRGBC
       ___fldiv
         ___xxtofl (ARG)
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _reverse
       _DCmotors_setPWM
     _stop
       _DCmotors_setPWM
     _turnleft
       _left
         _DCmotors_setPWM
       _right
         _DCmotors_setPWM
     _turnright
       _left
       _right
   _colourclickLEDs_C
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      6C       5       67.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     49      58       1       92.6%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C4       8        0.0%
DATA                 0      0      C4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 13 02:58:23 2021

      colourcards_normaliseRGBC@rel 002A         colourclick_readRGBC2@tmpval 000E  
                      ___fldiv@aexp 0027                        ___fldiv@bexp 0026  
                      ___fldiv@sign 001F                                  l61 21CA  
                                l63 21EA                                  l57 21AE  
             __end_of_DCmotors_init 2862                        ___awdiv@sign 000C  
               ___wmul@multiplicand 0003                                 l204 1ECC  
                               l160 15C8                                 l321 2AB0  
                               l401 29A2                                 l410 2B22  
                               l163 1634                                 l324 2AB4  
                               l404 29C8                                 l413 2B0E  
                               l326 2AC2                                 l327 2AC8  
                               l407 2B18                                 l263 2976  
                               l416 2AF8                                 l272 2770  
                               l281 26D0                                 l601 2670  
                               l362 2ADE                                 l602 2672  
                               l610 23FC                                 l266 2A56  
                               l371 2A36                                 l419 293E  
                               l275 2810                                 l356 2B04  
                               l269 2720                                 l605 23CA  
                               l613 22E0                                 l365 2AEC  
                               l278 27C0                                 l359 2B2C  
                               l623 28FC                                 l289 2022  
                               l609 23FA                                 l617 2310  
                               l458 2A96                                 l618 2312  
                               l628 28AE                                 l725 2A14  
                               l573 1BA2                                 l581 25C4  
                               l566 2860                                 l398 29A0  
                               l576 2A74                                 l578 2A76  
                               l586 25F4                                 l594 255A  
                               l589 252A                                 l956 24C0  
                               l990 20E0                                 l995 2126  
                               _abs 000000                                 wreg 000FE8  
             ?_colourclick_readRGBC 000C                 __size_of_ADC_getval 0018  
        colourcards_readRGBC@tmpval 0034                                l3000 2ACA  
                              l1320 18EC                                l1312 17F2  
                              l1321 18DA                                l3010 20A0  
                              l3002 2024                                l1307 19CE  
                              l3020 2124                                l3012 20AE  
                              l3004 2052                                l3100 0EA8  
                              l1309 182E                                l3030 2AAC  
                              l3014 20C0                                l3006 2062  
                              l1318 1874                                l3110 0F82  
                              l3102 0EC8                                l3032 2AAE  
                              l3024 2A98                                l3016 20CE  
                              l3008 2090                                l3200 156A  
                              l3112 0FB4                                l3104 0EFA  
                              l3120 1020                                l3040 295E  
                              l3026 2AA2                                l3050 282C  
                              l3018 211E                                l3210 15CA  
                              l3202 158C                                l3130 110C  
                              l3122 1052                                l3114 0FE4  
                              l3106 0F2C                                l3042 2968  
                              l3034 2940                                l3028 2AAA  
                              l3060 2836                                l3052 282E  
                              l1380 1BFA                                l3212 15FA  
                              l3204 15AE                                l3140 11D6  
                              l3132 113E                                l3124 1084  
                              l3220 162C                                l3116 0FEC  
                              l3108 0F5E                                l3044 2972  
                              l3036 2944                                l3070 2848  
                              l3062 2838                                l3054 2830  
                              l3046 2814                                l2510 29B2  
                              l3222 1630                                l3206 15BE  
                              l3150 1270                                l3126 10B6  
                              l3038 294E                                l3230 2168  
                              l1383 1D56                                l3072 2854  
                              l3064 283A                                l3056 2832  
                              l3048 2828                                l3080 2A82  
                              l2512 2B10                                l2520 2B06  
                              l2600 2768                                l3208 15C2  
                              l3216 1614                                l3160 1330  
                              l3152 12A2                                l3144 120A  
                              l3136 1172                                l3128 10DA  
                              l3240 2198                                l3232 2178  
                              l3224 2128                                l3074 2858  
                              l3066 283C                                l3058 2834  
                              l3090 2A94                                l3082 2A84  
                              l1394 1CEE                                l2530 2904  
                              l2514 2B14                                l2522 2B0A  
                              l2610 2772                                l3170 13DE  
                              l3154 12D4                                l3138 11A4  
                              l3250 21BC                                l3242 219C  
                              l3234 2180                                l3226 2154  
                              l1387 1C92                                l3076 285C  
                              l3068 2846                                l3084 2A86  
                              l3092 2A58                                l2700 16B8  
                              l2508 29A2                                l2532 290C  
                              l2524 2B1A                                l2516 2AF0  
                              l2604 27C2                                l2612 27B8  
                              l2620 1A4E                                l3172 1406  
                              l3180 143E                                l3156 12FC  
                              l3164 1348                                l3148 123E  
                              l3252 21CC                                l3244 21A2  
                              l3236 218C                                l3228 215C  
                              l3086 2A90                                l3078 2A78  
                              l3094 2A5E                                l2702 16C8  
                              l2710 16F2                                l2630 2A18  
                              l2534 2914                                l2526 2B1E  
                              l2518 2AF4                                l2606 2808  
                              l2550 2402                                l2542 29F0  
                              l2622 1A94                                l3190 1508  
                              l3182 1470                                l3174 141E  
                              l3166 137A                                l3158 1314  
                              l3254 21D2                                l3246 21A6  
                              l3238 2194                                l3088 2A92  
                              l3096 2A6E                                l2800 19BC  
                              l2720 1734                                l2712 1702  
                              l2704 16D8                                l2536 293A  
                              l2528 2900                                l2632 2674  
                              l2560 2432                                l2552 2410  
                              l2544 2A0C                                l2624 1AB4  
                              l2616 19D0                                l2640 236E  
                              l3184 14A2                                l3192 1510  
                              l3168 13AC                                l3256 21F8  
                              l3248 21AA                                l2802 19C2  
                              l2714 1718                                l2706 16E8  
                              l2538 293C                                l2570 2460  
                              l2562 2436                                l2554 2418  
                              l2626 1AD0                                l2618 19EC  
                              l2650 23B2                                l2642 2378  
                              l2634 2314                                l3194 1528  
                              l3186 14D4                                l3098 0EA4  
                              l3258 2206                                l2804 19C4  
                              l2740 17B6                                l2732 176C  
                              l2716 1728                                l2724 1748  
                              l2708 16EA                                l2820 1C20  
                              l2812 1BA6                                l2900 1FA8  
                              l2580 2494                                l2572 246E  
                              l2564 243E                                l2556 241C  
                              l2548 23FE                                l2628 1B3A  
                              l2652 23E2                                l2644 2390  
                              l2636 2338                                l2660 2284  
                              l3196 153C                                l3188 1504  
                              l2750 17FC                                l2742 17BE  
                              l2734 1786                                l2726 1758  
                              l2718 1730                                l2830 1C7A  
                              l2814 1BB6                                l2910 1FDA  
                              l2582 249A                                l2574 2474  
                              l2566 2450                                l2558 242A  
                              l2646 239A                                l2638 2356  
                              l2670 22C8                                l2662 228E  
                              l2654 222A                                l3198 155E  
                              l2760 1854                                l2752 181A  
                              l2744 17CE                                l2736 1796  
                              l2728 1758                                l2680 1652  
                              l2840 1CDE                                l2832 1C7C  
                              l2824 1C34                                l2816 1BC4  
                              l2592 26D2                                l2920 200A  
                              l2912 1FE6                                l2904 1FAE  
                              l2576 248A                                l2568 2458  
                              l2584 24A0                                l2648 23A6  
                              l2672 22F8                                l2664 22A6  
                              l2656 224E                                l2770 1892  
                              l2762 185A                                l2754 181C  
                              l2746 17E2                                l2738 17A6  
                              l2682 1662                                l2690 168C  
                              l2674 1636                                l2850 1D36  
                              l2842 1CFC                                l2834 1C88  
                              l2826 1C3C                                l2818 1C0A  
                              l2594 2718                                l2914 1FFE  
                              l2906 1FC0                                l2586 24B0  
                              l2578 2492                                l2930 25FC  
                              l2666 22B0                                l2658 226C  
                              l2922 2862                                l2780 18FC  
                              l2772 1896                                l2764 1864  
                              l2756 182C                                l2748 17F0  
                              l2692 169C                                l2684 1672  
                              l2676 1642                                l2852 1D44  
                              l2844 1CFE                                l2836 1CC4  
                              l2828 1C48                                l2860 1D68  
                              l2908 1FC2                                l2588 24B8  
                              l2940 2658                                l2932 2610  
                              l2668 22BC                                l2924 2872  
                              l2790 195E                                l2782 1908  
                              l2774 18A4                                l2766 1872  
                              l2758 183E                                l2694 16A2  
                              l2686 1682                                l2678 1650  
                              l2854 1D46                                l2846 1D02  
                              l2838 1CD0                                l2870 1E68  
                              l2862 1D7C                                l2598 2722  
                              l2918 2004                                l2950 24E6  
                              l2934 261C                                l2942 28B0  
                              l2926 2892                                l2792 1974  
                              l2784 1916                                l2776 18D2  
                              l2768 1884                                l2696 16A8  
                              l2688 1684                                l2848 1D26  
                              l2864 1D90                                l2880 1EFE  
                              l2872 1ECE                                l2960 255C  
                              l2952 24FA                                l2936 2628  
                              l2928 25F6                                l2944 28C0  
                              l2794 198E                                l2786 1940  
                              l2698 16B6                                l2866 1DA4  
                              l2858 1D58                                l2882 1F16  
                              l2890 1F58                                l2874 1ED4  
                              l2970 25DC                                l2962 2580  
                              l2954 2506                                l2938 2640  
                              l2946 28E0                                l2796 19AA  
                              l2788 1944                                l2868 1E04  
                              l2892 1F6A                                l2884 1F22  
                              l2876 1EEC                                l2964 2594  
                              l2956 2512                                l2948 24C2  
                              l2980 298C                                l2972 2978  
                              l2990 2AB2                                l2798 19AE  
                              l2894 1F6C                                l2886 1F3A  
                              l2878 1EFC                                l2966 25A0  
                              l2958 2542                                l2982 298E  
                              l2974 2982                                l2992 2AC6  
                              l2896 1F84                                l2888 1F3C  
                              l2968 25AC                                l2976 2988  
                              l2984 2A3A                                l2898 1F90  
                              l2978 298A                                l2986 2AE0  
                              l2996 2AFA                                l2988 2AE6  
                              l2998 2B24                                STR_1 0E01  
                              STR_2 0E80                                STR_4 0E9F  
                              STR_8 0E94                                u2000 23FA  
                              u2001 23F6                                u2010 2260  
                              u2011 2258                                u2100 16B6  
                              u2101 16B2                                u2110 16C8  
                              u2030 2284                                u2111 16C4  
                              u2031 2280                                u2200 1872  
                              u2120 16D8                                u2040 22A6  
                              u2201 186E                                u2121 16D4  
                              u2041 22A2                                u2210 1892  
                              u2130 1718                                u2050 22F8  
                              u2211 188E                                u2131 1714  
                              u2051 22F4                                u2220 18A4  
                              u2140 1758                                u2300 1BB6  
                              u2060 2310                                u2028 2262  
                              u2221 18A0                                u2141 1754  
                              u2301 1BB2                                u2061 230C  
                              u2230 18D2                                u2150 17CE  
                              u2070 1650                                u2310 1BC4  
                              u2231 18CE                                u2151 17CA  
                              u2071 164C                                u2311 1BC0  
                              u2240 18E8                                u2160 17F0  
                              u2080 1662                                u2320 1C20  
                              u2400 1EFC                        _BAUD4CONbits 000EE9  
                              u2241 18E4                                u2161 17EC  
                              u2081 165E                                u2321 1C1C  
                              u2401 1EF8                                _LATE 000F7D  
                              u2250 18FC                                u2170 181A  
                              u2090 1672                                u2330 1C76  
                              u2410 1F6A                                u2251 18F8  
                              u2171 1816                                u2091 166E  
                              u2331 1C72                                u2411 1F66  
                              _LATG 000F7F                                u2260 1916  
                              u2180 183E                                u2340 1CC0  
                              u2420 1FC0                                u2500 25F4  
                              u2261 1912                                u2181 183A  
                              u2341 1CBC                                u2421 1FBC  
                              u2501 25F0                                u2510 2AC2  
                              u2270 195E                                u2190 1854  
                              u2350 1CDE                                u2430 2872  
                              u2511 2ABE                                u2271 195A  
                              u2191 1850                                u2351 1CDA  
                              u2431 286E                                u2520 2052  
                              u2280 198E                                u2360 1CEE  
                              u1800 2928                                u2440 2658  
                              u2600 0F5E                                u2521 204E  
                              u2281 198A                                u2361 1CEA  
                              u1801 2920                                u2441 2654  
                              u2601 0F5A                                u2530 2090  
                              u2290 19BC                                u2370 1CFC  
                              u2450 2670                                u2610 0FB4  
                              _T2PR 000FBC                                u2531 208C  
                              u2291 19B8                                u2371 1CF8  
                              u2451 266C                                u2611 0FB0  
                              u2540 20AE                                u2380 1D36  
                              u1820 2410                                u2460 28C0  
                              u2700 12A2                                u2620 1052  
                              u2541 20AA                                u2381 1D32  
                              u1821 240C                                u2461 28BC  
                              u2701 129E                                u2621 104E  
                              u2550 20CE                                u2390 1D44  
                              u1830 242A                                u2470 2542  
                              u2710 12D4                                u2630 1084  
                              u2551 20CA                                u2391 1D40  
                              u1831 2426                                u2471 253E  
                              u2711 12D0                                u2631 1080  
                              u2560 211E                                u1840 2450  
                              u1904 1B2A                                u2480 255A  
                              u2800 15BE                                u2720 137A  
                              u2640 10B6                                u2561 211A  
                              u1841 244C                                u1905 1B26  
                              u2481 2556                                u2801 15BA  
                              u2721 1376                                u2641 10B2  
                              u2570 2A6E                                u1818 292A  
                              u1850 246E                                u1914 1B94  
                              u2490 25DC                                u2810 160C  
                              u2730 13AC                                u2650 110C  
                              u2571 2A6A                                u1851 246A  
                              u1915 1B90                                u2491 25D8  
                              u2811 1606                                u2731 13A8  
                              u2651 1108                                u3507 2954  
                              u1780 29B2                                u1860 248A  
                              u2820 160E                                u2740 13DE  
                              u2660 113E                                u2580 0EFA  
                              u1925 2A20                                u1781 29AE  
                              u1861 2486                                u2741 13DA  
                              u3517 1306                                u2661 113A  
                              u2581 0EF6                                u1926 2A22  
                              u1790 29C8                                u1870 24B0  
                              u1950 234A                                u2750 1470  
                              u2670 11A4                                u2590 0F2C  
                              u2830 21BC                                u1935 2A2A  
                              u1791 29C4                                u3607 1EDE  
                              u1871 24AC                                u1951 2342  
                              u2751 146C                                u3527 1410  
                              u2671 11A0                                u2591 0F28  
                              u2831 21B8                                u1936 2A2C  
                              u1880 19EC                                u2760 14A2  
                              u2680 11D6                                u2840 21CA  
                              u1945 2A34                                u3617 1F08  
                              u1881 19E8                                u3537 151A  
                              u2761 149E                                u2681 11D2  
                              u2841 21C6                                u1946 2A36  
                              u1890 1AD0                                u1970 236E  
                              u2770 14D4                                u2690 1270  
                              u2850 21F8                                u3627 1F2C  
                              u1891 1ACC                                u1971 236A  
                              u3547 1542                                u2771 14D0  
                              u2691 126C                                u2851 21F4  
                              u1980 2390                                u2780 158C  
                              u2860 2206                                u3637 1F46  
                              u1981 238C                                u3557 22D2  
                              u2781 1588                                u2861 2202  
                              u1990 23E2                                u2790 15AE  
                              u3647 1F76                                u1991 23DE  
                              u3567 23BC                                u2791 15AA  
                              u1968 234C                                u3657 1F9A  
                              u3577 2632                                u3497 21DC  
                              u3667 1FCC                                u3587 251C  
                              u3677 1FF0                                u3597 25B6  
                              u3687 2014                         main@current 00B0  
           __end_of_DCmotors_setPWM 1BA4                                _main 2128  
                              _left 2314                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                _stop 25F6  
                              prodh 000FF4                                prodl 000FF3  
                              start 0000                    __end_of_ADC_init 2AB2  
                   ___fldiv@new_exp 0020                        ___param_bank 000000  
            ?_colourclick_readRGBC2 000E              ??_clicker2buttons_init 0001  
                             ?_main 0001                               ?_left 001A  
                             _ADPCH 000F5F                     __end_of___fldiv 19D0  
                   __end_of___awdiv 24C2                               STR_10 0E6D  
                             STR_12 0E87                               STR_14 0E9A  
                             STR_16 0E8E                               STR_18 0E78  
                             STR_19 0E41                               ?_stop 001A  
                   ___awdiv@divisor 0009             _colourclick_writetoaddr 2A38  
                   ___awdiv@counter 000B          __end_of_I2C_2_Master_Start 2B1A  
        __end_of_I2C_2_Master_Write 2AFA                     __end_of_forward 25F6  
              colourclickLEDs_C@tog 0001                               _right 222A  
                 _clicker2LEDs_init 2B24                     __end_of_reverse 255C  
            DCmotors_init@PWMperiod 0001                  ?_clicker2LEDs_init 0001  
                             status 000FD8               _I2C_2_Master_RepStart 2B1A  
                   __initialization 29CA                 ??_clicker2LEDs_init 0001  
                      __end_of_main 222A                        __end_of_left 23FE  
                      __end_of_stop 2674  __size_of_colourcards_normaliseRGBC 0176  
     __size_of_colourcards_readRGBC 0792                              ??_main 0048  
                            ??_left 0020                              ??_stop 001E  
                     __activetblptr 000001              ??_colourclick_readRGBC 000E  
         __end_of_clicker2LEDs_init 2B2E                     _colourcard_flag 0052  
                            _ADRESH 000F64           __size_of_colourclick_init 0038  
                            ?_right 001A                    ___awdiv@dividend 0007  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                  ?_DCmotors_setPWM 000F                              _RX4PPS 000E15  
                            _TX4REG 000EE4                    __end_of___xxtofl 1D58  
                      ??_ADC_getval 0001                              ___flge 2024  
            colourcards_readRGBC@mL 0036              colourcards_readRGBC@mR 0038  
                            ___wmul 29F0                           ??___fldiv 0017  
                         ??___awdiv 000B                    ??_buggyLEDs_init 0001  
         ??_colourclick_writetoaddr 0004                              clear_0 29D0  
                            clear_1 29DC                    ___awdiv@quotient 000D  
                            isa$std 000001   __end_of_colourcards_normaliseRGBC 1ECE  
                            left@mL 001A                              left@mR 001C  
                         ??_forward 001E                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptru 000FF8  
                         ?_ADC_init 0001                           ??_reverse 001E  
                            stop@mL 001A                              stop@mR 001C  
                __end_of_ADC_getval 2ACA                        ?_USART4_init 0001  
                        ___flge@ff1 0001                          ___flge@ff2 0005  
                      ___xxtofl@arg 000B                        ___xxtofl@exp 000A  
                      ___xxtofl@val 0001                    __end_of_turnleft 28FE  
                        __accesstop 0060             __end_of__initialization 29E2  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
                    __pcstackCOMRAM 0001                       __end_of_right 2314  
     checkbatterylevel@batterylevel 0002                          ??_ADC_init 0001  
        __size_of_clicker2LEDs_init 000A                             ??_right 0020  
     __size_of_colourclickLEDs_init 000E     __end_of_colourclick_writetoaddr 2A58  
                        __pbssBANK0 0060                          __pnvCOMRAM 0057  
                 _checkbatterylevel 2A58             ??_colourclick_readRGBC2 0011  
                ?_checkbatterylevel 0001                        _T2CLKCONbits 000FBF  
                           ?___flge 0001                             ?___wmul 0001  
               ??_checkbatterylevel 0002                           ?___xxtofl 0001  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
                  _colourclick_init 2940           __end_of_checkbatterylevel 2A78  
            __size_of_DCmotors_init 0050                           _ADREFbits 000F58  
                _I2C_2_Master_Start 2B10                  _I2C_2_Master_Write 2AEE  
                           __Hparam 0000                  __size_of_turnright 004E  
                           __Lparam 0000                     __size_of___flge 0104  
                           ___fldiv 1636                             ___awdiv 23FE  
           colourcards_readRGBC@rel 003C                     __size_of___wmul 0026  
               ?_I2C_2_Master_Start 0001                 ?_I2C_2_Master_Write 0001  
                      __psmallconst 0E00                             __pcinit 29CA  
                           __ramtop 0E00                             __ptext0 2128  
                           __ptext1 2940                             __ptext2 2A38  
                           __ptext3 2AE0                             __ptext4 2978  
                           __ptext5 0EA4                             __ptext6 2862  
                           __ptext7 28B0                             __ptext8 222A  
                           __ptext9 2314       __size_of_clicker2buttons_init 000C  
                         ?_turnleft 0022                           _T2CONbits 000FBD  
                           _forward 255C                          ??___xxtofl 0005  
                         _T2HLTbits 000FBE                             _reverse 24C2  
                     _RxBufWriteCnt 0056                ??_I2C_2_Master_Start 0002  
                           left@deg 001E                ??_I2C_2_Master_Write 0002  
              end_of_initialization 29E2        __end_of_colourcards_readRGBC 1636  
                  ADC_getval@tmpval 0001                __size_of_USART4_init 0020  
                           right@mL 001A                             right@mR 001C  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE        colourclick_writetoaddr@value 0003  
                     _DCmotors_init 2812                           _PORTFbits 000F8E  
                        ??_turnleft 0028                       ___xxtofl@sign 0009  
                         _TRISAbits 000F81                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                 __end_of_turnright 28B0                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                       ___fldiv@grs 0022                         ___fldiv@rem 001B  
     __size_of_colourclick_readRGBC 005E                   __size_of_ADC_init 001A  
           ??_I2C_2_Master_RepStart 0002                colourclick_readB@tmp 000A  
              colourclick_readC@tmp 000A          __size_of_checkbatterylevel 0020  
              colourclick_readG@tmp 000A                         _CM1CON0bits 000ED0  
                       _CM1CON1bits 000ED1                colourclick_readR@tmp 000A  
                      _EUSART4RXbuf 009C                        _EUSART4TXbuf 0060  
                        main@motorL 00B8                          main@motorR 00C1  
          __size_of_DCmotors_setPWM 01D4                      __end_of___flge 2128  
        colourclick_readRGBC@tmpval 000C                      ?_DCmotors_init 0001  
                    __end_of___wmul 2A16          ?_colourcards_normaliseRGBC 0028  
               start_initialization 29CA                       _TxBufWriteCnt 0054  
                  _unknowncard_flag 0051                     _returnhome_flag 0050  
                      turnright@deg 0026      __size_of_colourclick_readRGBC2 0156  
     __end_of_colourclick_readRGBC2 2024            ?_colourclick_writetoaddr 0003  
        colourcards_normaliseRGBC@B 0030          colourcards_normaliseRGBC@C 0032  
        colourcards_normaliseRGBC@G 002E          colourcards_normaliseRGBC@R 002C  
                          ??___flge 0009        __end_of_colourclickLEDs_init 2AEE  
                          ??___wmul 0005            __end_of_colourclick_init 2978  
              _colourcards_readRGBC 0EA4                           ___fldiv@a 0013  
                         ___fldiv@b 000F                         __pbssCOMRAM 004A  
                     __pcstackBANK0 00B0             __size_of_buggyLEDs_init 0016  
                 __size_of___xxtofl 01B4                           __pnvBANK0 00CA  
                       _clear_lower 004C                         _clear_upper 004A  
                   ??_DCmotors_init 0001                            ?___fldiv 000F  
                          ?___awdiv 0007               ?_colourcards_readRGBC 0034  
              I2C_2_Master_Read@ack 0003                   ??_DCmotors_setPWM 0011  
              I2C_2_Master_Read@tmp 0004               _interrupts_lowerbound 004E  
                       __smallconst 0E00                            ?_forward 001A  
                 _I2C_2_Master_Idle 29A2                   _I2C_2_Master_Init 2978  
                 _I2C_2_Master_Read 28FE                   _I2C_2_Master_Stop 2B06  
                 __size_of_turnleft 004E                        _RxBufReadCnt 0055  
                          _ADC_init 2A98                            ?_reverse 001A  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                  ?_I2C_2_Master_Stop 0001  
                    __size_of_right 00EA        __end_of_clicker2buttons_init 2B06  
               ??_I2C_2_Master_Idle 0001                 ??_I2C_2_Master_Init 0001  
               ??_I2C_2_Master_Read 0002                      ___wmul@product 0005  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0002  
                          _LATCbits 000F7B                   _colourclickLEDs_C 2A16  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _PIE0bits 000E29  
                          _PIE4bits 000E2D                  ?_colourclickLEDs_C 0001  
                          _PIR0bits 000E33                            _PIR4bits 000E37  
                          _SSP2CON2 000EDA              DCmotors_setPWM@PWMduty 0018  
                          _SSP2STAT 000ED8                 ??_colourclickLEDs_C 0001  
                 _colourclick_readB 27C2                   _colourclick_readC 2772  
                 _colourclick_readG 2722                   _colourclick_readR 26D2  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 29CA  
         __end_of_I2C_2_Master_Init 29A2           __end_of_I2C_2_Master_Read 2940  
                 ___wmul@multiplier 0001                  ?_colourclick_readB 0005  
                ?_colourclick_readC 0005                  ?_colourclick_readG 0005  
                ?_colourclick_readR 0005           __end_of_I2C_2_Master_Stop 2B10  
             _interrupts_upperbound 0057         I2C_2_Master_Write@data_byte 0002  
                 _DCmotors_turntime 00CA                        _TxBufReadCnt 0053  
                        _CM1NCHbits 000ED2                 ??_colourclick_readB 0007  
               ??_colourclick_readC 0007                 ??_colourclick_readG 0007  
               ??_colourclick_readR 0007                          _CM1PCHbits 000ED3  
                     ??_USART4_init 0001         __size_of_I2C_2_Master_Start 000A  
              _colourclickLEDs_init 2AE0         __size_of_I2C_2_Master_Write 000C  
                         _turnright 2862           __end_of_colourclickLEDs_C 2A38  
                       turnleft@deg 0026      __size_of_I2C_2_Master_RepStart 000A  
     __end_of_I2C_2_Master_RepStart 2B24                            __Hrparam 0000  
                       turnright@mL 0022                         turnright@mR 0024  
                        _ADC_getval 2AB2        __end_of_colourclick_readRGBC 26D2  
                          __Lrparam 0000                        __Lsmallconst 0E00  
         __end_of_colourclick_readB 2812           __end_of_colourclick_readC 27C2  
         __end_of_colourclick_readG 2772           __end_of_colourclick_readR 2722  
                         forward@mL 001A                           forward@mR 001C  
            ??_colourcards_readRGBC 003A                    __size_of___fldiv 039A  
                  __size_of___awdiv 00C4                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4         ??_colourcards_normaliseRGBC 002C  
                          ___xxtofl 1BA4                      _buggyLEDs_init 2ACA  
                  __size_of_forward 009A                            __ptext10 25F6  
                          __ptext11 24C2                            __ptext20 2772  
                          __ptext12 255C                            __ptext21 27C2  
                          __ptext13 19D0                            __ptext30 1BA4  
                          __ptext22 2AEE                            __ptext14 29F0  
                          __ptext31 1636                            __ptext23 2B06  
                          __ptext15 23FE                            __ptext40 2A98  
                          __ptext32 2024                            __ptext24 2B10  
                          __ptext16 1ECE                            __ptext33 2A58  
                          __ptext25 2B1A                            __ptext17 2674  
                          __ptext34 2AB2                            __ptext26 28FE  
                          __ptext18 26D2                            __ptext35 2A78  
                          __ptext27 29A2                            __ptext19 2722  
                          __ptext36 2812                            __ptext28 2A16  
                          __ptext37 2AFA                            __ptext29 1D58  
                          __ptext38 2B24                            __ptext39 2ACA  
                  __size_of_reverse 009A               ?_colourclickLEDs_init 0001  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
                        ?_turnright 0022                       __size_of_main 0102  
                     __size_of_left 00EA                       __size_of_stop 007E  
               __end_of_USART4_init 2A98                           reverse@mL 001A  
                         reverse@mR 001C                            isa$xinst 000000  
                        _RC4STAbits 000EE7                   ?_colourclick_init 0001  
                ??_colourclick_init 0005          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
                  DCmotors_setPWM@m 000F                _clicker2buttons_init 2AFA  
        __size_of_I2C_2_Master_Stop 000A                            _turnleft 28B0  
                        turnleft@mL 0022                          turnleft@mR 0024  
            __end_of_buggyLEDs_init 2AE0                          _INTCONbits 000FF2  
  __size_of_colourclick_writetoaddr 0020      colourclick_writetoaddr@address 0004  
                       _PWM6CONbits 000FA4                         _PWM7CONbits 000FA1  
        __size_of_colourclickLEDs_C 0022                        _DAC1CON0bits 000EC6  
                      _DAC1CON1bits 000EC7                            right@deg 001E  
         _colourcards_normaliseRGBC 1D58                     _DCmotors_setPWM 19D0  
                       ?_ADC_getval 0001          __size_of_colourclick_readB 0050  
        __size_of_colourclick_readC 0050          __size_of_colourclick_readG 0050  
        __size_of_colourclick_readR 0050               _colourclick_readRGBC2 1ECE  
             ?_clicker2buttons_init 0001           colourclick_readRGBC2@mode 0010  
                   ?_buggyLEDs_init 0001                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C              ??_colourclickLEDs_init 0002  
              _colourclick_readRGBC 2674                         _USART4_init 2A78  
                        _TX4STAbits 000EE8                         ??_turnright 0028  
      colourcards_normaliseRGBC@abs 0028  
