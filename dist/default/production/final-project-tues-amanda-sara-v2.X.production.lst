

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 13 13:11:38 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    99                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   110                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   111                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   112                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   113  0000                     
   114                           ; Version 2.20
   115                           ; Generated 05/05/2020 GMT
   116                           ; 
   117                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution.
   131                           ; 
   132                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   133                           ;        software without specific prior written permission.
   134                           ; 
   135                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   136                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   137                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   138                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   139                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   140                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   141                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   142                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   143                           ; 
   144                           ; 
   145                           ; Code-generator required, PIC18F67K40 Definitions
   146                           ; 
   147                           ; SFR Addresses
   148  0000                     
   149                           	psect	idataBANK1
   150  00633A                     __pidataBANK1:
   151                           	callstack 0
   152                           
   153                           ;initializer for stoa@F1163
   154  00633A  28                 	db	40
   155  00633B  6E                 	db	110
   156  00633C  75                 	db	117
   157  00633D  6C                 	db	108
   158  00633E  6C                 	db	108
   159  00633F  29                 	db	41
   160  006340  00                 	db	0
   161                           
   162                           	psect	nvCOMRAM
   163  000054                     __pnvCOMRAM:
   164                           	callstack 0
   165  000054                     _interrupts_upperbound:
   166                           	callstack 0
   167  000054                     	ds	2
   168  0000                     _INT1PPS	set	3569
   169  0000                     _RC7PPS	set	3689
   170  0000                     _RE2PPS	set	3700
   171  0000                     _PIE4bits	set	3629
   172  0000                     _TX4REG	set	3812
   173  0000                     _RC4REG	set	3811
   174  0000                     _PIR4bits	set	3639
   175  0000                     _RC4STAbits	set	3815
   176  0000                     _SP4BRGH	set	3814
   177  0000                     _SP4BRGL	set	3813
   178  0000                     _TX4STAbits	set	3816
   179  0000                     _BAUD4CONbits	set	3817
   180  0000                     _RX4PPS	set	3605
   181  0000                     _RC0PPS	set	3682
   182  0000                     _SSP2BUF	set	3797
   183  0000                     _SSP2CON2bits	set	3802
   184  0000                     _SSP2CON2	set	3802
   185  0000                     _SSP2STAT	set	3800
   186  0000                     _RD6PPS	set	3696
   187  0000                     _RD5PPS	set	3695
   188  0000                     _SSP2CLKPPS	set	3612
   189  0000                     _SSP2DATPPS	set	3613
   190  0000                     _ANSELDbits	set	3751
   191  0000                     _SSP2ADD	set	3798
   192  0000                     _SSP2CON1bits	set	3801
   193  0000                     _ANSELFbits	set	3764
   194  0000                     _PIR0bits	set	3635
   195  0000                     _IPR0bits	set	3615
   196  0000                     _PIE0bits	set	3625
   197  0000                     _ANSELBbits	set	3738
   198  0000                     _ADPCH	set	3935
   199  0000                     _ADREFbits	set	3928
   200  0000                     _T0CON0bits	set	4053
   201  0000                     _T0CON1bits	set	4054
   202  0000                     _PWM7CONbits	set	4001
   203  0000                     _PWM6CONbits	set	4004
   204  0000                     _LATCbits	set	3963
   205  0000                     _LATEbits	set	3965
   206  0000                     _TRISEbits	set	3973
   207  0000                     _T2PR	set	4028
   208  0000                     _T2CLKCONbits	set	4031
   209  0000                     _T2HLTbits	set	4030
   210  0000                     _T2CONbits	set	4029
   211  0000                     _TRISCbits	set	3971
   212  0000                     _TRISAbits	set	3969
   213  0000                     _TRISGbits	set	3975
   214  0000                     _TRISHbits	set	3976
   215  0000                     _TRISDbits	set	3972
   216  0000                     _ADRESH	set	3940
   217  0000                     _ADCON0bits	set	3936
   218  0000                     _TRISFbits	set	3974
   219  0000                     _LATFbits	set	3966
   220  0000                     _LATAbits	set	3961
   221  0000                     _LATGbits	set	3967
   222  0000                     _LATHbits	set	3968
   223  0000                     _TMR0L	set	4051
   224  0000                     _TMR0H	set	4052
   225  0000                     _INTCONbits	set	4082
   226  0000                     _TRISBbits	set	3970
   227  0000                     _LATDbits	set	3964
   228  0000                     _PORTFbits	set	3982
   229  0000                     _LATG	set	3967
   230  0000                     _PWM7DCH	set	4000
   231  0000                     _LATE	set	3965
   232  0000                     _PWM6DCH	set	4003
   233                           
   234                           	psect	smallconst
   235  000E00                     __psmallconst:
   236                           	callstack 0
   237  000E00  00                 	db	0
   238  000E01                     STR_1:
   239                           
   240                           ; BSR set to: 14
   241  000E01  52                 	db	82	;'R'
   242  000E02  47                 	db	71	;'G'
   243  000E03  42                 	db	66	;'B'
   244  000E04  43                 	db	67	;'C'
   245  000E05  3A                 	db	58	;':'
   246  000E06  20                 	db	32
   247  000E07  25                 	db	37
   248  000E08  69                 	db	105	;'i'
   249  000E09  20                 	db	32
   250  000E0A  25                 	db	37
   251  000E0B  69                 	db	105	;'i'
   252  000E0C  20                 	db	32
   253  000E0D  25                 	db	37
   254  000E0E  69                 	db	105	;'i'
   255  000E0F  20                 	db	32
   256  000E10  25                 	db	37
   257  000E11  69                 	db	105	;'i'
   258  000E12  20                 	db	32
   259  000E13  20                 	db	32
   260  000E14  20                 	db	32
   261  000E15  20                 	db	32
   262  000E16  20                 	db	32
   263  000E17  52                 	db	82	;'R'
   264  000E18  47                 	db	71	;'G'
   265  000E19  42                 	db	66	;'B'
   266  000E1A  43                 	db	67	;'C'
   267  000E1B  5F                 	db	95	;'_'
   268  000E1C  72                 	db	114	;'r'
   269  000E1D  65                 	db	101	;'e'
   270  000E1E  6C                 	db	108	;'l'
   271  000E1F  3A                 	db	58	;':'
   272  000E20  20                 	db	32
   273  000E21  25                 	db	37
   274  000E22  2E                 	db	46
   275  000E23  33                 	db	51	;'3'
   276  000E24  66                 	db	102	;'f'
   277  000E25  20                 	db	32
   278  000E26  25                 	db	37
   279  000E27  2E                 	db	46
   280  000E28  33                 	db	51	;'3'
   281  000E29  66                 	db	102	;'f'
   282  000E2A  20                 	db	32
   283  000E2B  25                 	db	37
   284  000E2C  2E                 	db	46
   285  000E2D  33                 	db	51	;'3'
   286  000E2E  66                 	db	102	;'f'
   287  000E2F  20                 	db	32
   288  000E30  20                 	db	32
   289  000E31  20                 	db	32
   290  000E32  20                 	db	32
   291  000E33  20                 	db	32
   292  000E34  43                 	db	67	;'C'
   293  000E35  6F                 	db	111	;'o'
   294  000E36  6C                 	db	108	;'l'
   295  000E37  6F                 	db	111	;'o'
   296  000E38  75                 	db	117	;'u'
   297  000E39  72                 	db	114	;'r'
   298  000E3A  3A                 	db	58	;':'
   299  000E3B  20                 	db	32
   300  000E3C  25                 	db	37
   301  000E3D  73                 	db	115	;'s'
   302  000E3E  0A                 	db	10
   303  000E3F  0D                 	db	13
   304  000E40  00                 	db	0
   305  000E41                     STR_19:
   306                           
   307                           ; BSR set to: 14
   308  000E41  52                 	db	82	;'R'
   309  000E42  47                 	db	71	;'G'
   310  000E43  42                 	db	66	;'B'
   311  000E44  43                 	db	67	;'C'
   312  000E45  3A                 	db	58	;':'
   313  000E46  20                 	db	32
   314  000E47  25                 	db	37
   315  000E48  69                 	db	105	;'i'
   316  000E49  20                 	db	32
   317  000E4A  25                 	db	37
   318  000E4B  69                 	db	105	;'i'
   319  000E4C  20                 	db	32
   320  000E4D  25                 	db	37
   321  000E4E  69                 	db	105	;'i'
   322  000E4F  20                 	db	32
   323  000E50  25                 	db	37
   324  000E51  69                 	db	105	;'i'
   325  000E52  20                 	db	32
   326  000E53  20                 	db	32
   327  000E54  20                 	db	32
   328  000E55  20                 	db	32
   329  000E56  20                 	db	32
   330  000E57  54                 	db	84	;'T'
   331  000E58  68                 	db	104	;'h'
   332  000E59  72                 	db	114	;'r'
   333  000E5A  65                 	db	101	;'e'
   334  000E5B  73                 	db	115	;'s'
   335  000E5C  68                 	db	104	;'h'
   336  000E5D  6F                 	db	111	;'o'
   337  000E5E  6C                 	db	108	;'l'
   338  000E5F  64                 	db	100	;'d'
   339  000E60  3A                 	db	58	;':'
   340  000E61  20                 	db	32
   341  000E62  25                 	db	37
   342  000E63  69                 	db	105	;'i'
   343  000E64  20                 	db	32
   344  000E65  25                 	db	37
   345  000E66  69                 	db	105	;'i'
   346  000E67  20                 	db	32
   347  000E68  25                 	db	37
   348  000E69  69                 	db	105	;'i'
   349  000E6A  0A                 	db	10
   350  000E6B  0D                 	db	13
   351  000E6C  00                 	db	0
   352  000E6D                     STR_10:
   353                           
   354                           ; BSR set to: 14
   355  000E6D  6C                 	db	108	;'l'
   356  000E6E  69                 	db	105	;'i'
   357  000E6F  67                 	db	103	;'g'
   358  000E70  68                 	db	104	;'h'
   359  000E71  74                 	db	116	;'t'
   360  000E72  20                 	db	32
   361  000E73  62                 	db	98	;'b'
   362  000E74  6C                 	db	108	;'l'
   363  000E75  75                 	db	117	;'u'
   364  000E76  65                 	db	101	;'e'
   365  000E77  00                 	db	0
   366  000E78                     
   367                           ; BSR set to: 14
   368  000E78  75                 	db	117	;'u'
   369  000E79  6E                 	db	110	;'n'
   370  000E7A  6B                 	db	107	;'k'
   371  000E7B  6E                 	db	110	;'n'
   372  000E7C  6F                 	db	111	;'o'
   373  000E7D  77                 	db	119	;'w'
   374  000E7E  6E                 	db	110	;'n'
   375  000E7F  00                 	db	0
   376  000E80                     
   377                           ; BSR set to: 14
   378  000E80  6F                 	db	111	;'o'
   379  000E81  72                 	db	114	;'r'
   380  000E82  61                 	db	97	;'a'
   381  000E83  6E                 	db	110	;'n'
   382  000E84  67                 	db	103	;'g'
   383  000E85  65                 	db	101	;'e'
   384  000E86  00                 	db	0
   385  000E87                     
   386                           ; BSR set to: 14
   387  000E87  79                 	db	121	;'y'
   388  000E88  65                 	db	101	;'e'
   389  000E89  6C                 	db	108	;'l'
   390  000E8A  6C                 	db	108	;'l'
   391  000E8B  6F                 	db	111	;'o'
   392  000E8C  77                 	db	119	;'w'
   393  000E8D  00                 	db	0
   394  000E8E                     
   395                           ; BSR set to: 14
   396  000E8E  77                 	db	119	;'w'
   397  000E8F  68                 	db	104	;'h'
   398  000E90  69                 	db	105	;'i'
   399  000E91  74                 	db	116	;'t'
   400  000E92  65                 	db	101	;'e'
   401  000E93  00                 	db	0
   402  000E94                     
   403                           ; BSR set to: 14
   404  000E94  67                 	db	103	;'g'
   405  000E95  72                 	db	114	;'r'
   406  000E96  65                 	db	101	;'e'
   407  000E97  65                 	db	101	;'e'
   408  000E98  6E                 	db	110	;'n'
   409  000E99  00                 	db	0
   410  000E9A                     
   411                           ; BSR set to: 14
   412  000E9A  70                 	db	112	;'p'
   413  000E9B  69                 	db	105	;'i'
   414  000E9C  6E                 	db	110	;'n'
   415  000E9D  6B                 	db	107	;'k'
   416  000E9E  00                 	db	0
   417  000E9F                     STR_20:
   418                           
   419                           ; BSR set to: 14
   420  000E9F  49                 	db	73	;'I'
   421  000EA0  4E                 	db	78	;'N'
   422  000EA1  46                 	db	70	;'F'
   423  000EA2  00                 	db	0
   424  000EA3                     STR_24:
   425                           
   426                           ; BSR set to: 14
   427  000EA3  4E                 	db	78	;'N'
   428  000EA4  41                 	db	65	;'A'
   429  000EA5  4E                 	db	78	;'N'
   430  000EA6  00                 	db	0
   431  000EA7                     STR_21:
   432                           
   433                           ; BSR set to: 14
   434  000EA7  69                 	db	105	;'i'
   435  000EA8  6E                 	db	110	;'n'
   436  000EA9  66                 	db	102	;'f'
   437  000EAA  00                 	db	0
   438  000EAB                     STR_25:
   439                           
   440                           ; BSR set to: 14
   441  000EAB  6E                 	db	110	;'n'
   442  000EAC  61                 	db	97	;'a'
   443  000EAD  6E                 	db	110	;'n'
   444  000EAE  00                 	db	0
   445  000EAF                     
   446                           ; BSR set to: 14
   447  000EAF  72                 	db	114	;'r'
   448  000EB0  65                 	db	101	;'e'
   449  000EB1  64                 	db	100	;'d'
   450  000EB2  00                 	db	0
   451  000EB3                     STR_28:
   452                           
   453                           ; BSR set to: 14
   454  000EB3  6C                 	db	108	;'l'
   455  000EB4  66                 	db	102	;'f'
   456  000EB5  00                 	db	0
   457  000EB6  00                 	db	0	; dummy byte at the end
   458  0000                     
   459                           ; #config settings
   460                           
   461                           	psect	cinit
   462  005A5C                     __pcinit:
   463                           	callstack 0
   464  005A5C                     start_initialization:
   465                           	callstack 0
   466  005A5C                     __initialization:
   467                           	callstack 0
   468                           
   469                           ; Initialize objects allocated to BANK1 (7 bytes)
   470                           ; load TBLPTR registers with __pidataBANK1
   471  005A5C  0E3A               	movlw	low __pidataBANK1
   472  005A5E  6EF6               	movwf	tblptrl,c
   473  005A60  0E63               	movlw	high __pidataBANK1
   474  005A62  6EF7               	movwf	tblptrh,c
   475  005A64  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   476  005A66  6EF8               	movwf	tblptru,c
   477  005A68  EE01  F0E7         	lfsr	0,__pdataBANK1
   478  005A6C  EE10 F007          	lfsr	1,7
   479  005A70                     copy_data0:
   480  005A70  0009               	tblrd		*+
   481  005A72  CFF5 FFEE          	movff	tablat,postinc0
   482  005A76  50E5               	movf	postdec1,w,c
   483  005A78  50E1               	movf	fsr1l,w,c
   484  005A7A  E1FA               	bnz	copy_data0
   485                           
   486                           ; Clear objects allocated to BANK2 (80 bytes)
   487  005A7C  EE02  F000         	lfsr	0,__pbssBANK2
   488  005A80  0E50               	movlw	80
   489  005A82                     clear_0:
   490  005A82  6AEE               	clrf	postinc0,c
   491  005A84  06E8               	decf	wreg,f,c
   492  005A86  E1FD               	bnz	clear_0
   493                           
   494                           ; Clear objects allocated to BANK1 (104 bytes)
   495  005A88  EE01  F07F         	lfsr	0,__pbssBANK1
   496  005A8C  0E68               	movlw	104
   497  005A8E                     clear_1:
   498  005A8E  6AEE               	clrf	postinc0,c
   499  005A90  06E8               	decf	wreg,f,c
   500  005A92  E1FD               	bnz	clear_1
   501                           
   502                           ; Clear objects allocated to BANK0 (3 bytes)
   503  005A94  0100               	movlb	0
   504  005A96  6BF6               	clrf	(__pbssBANK0+2)& (0+255),b
   505  005A98  6BF5               	clrf	(__pbssBANK0+1)& (0+255),b
   506  005A9A  6BF4               	clrf	__pbssBANK0& (0+255),b
   507                           
   508                           ; Clear objects allocated to COMRAM (7 bytes)
   509  005A9C  EE00  F04D         	lfsr	0,__pbssCOMRAM
   510  005AA0  0E07               	movlw	7
   511  005AA2                     clear_2:
   512  005AA2  6AEE               	clrf	postinc0,c
   513  005AA4  06E8               	decf	wreg,f,c
   514  005AA6  E1FD               	bnz	clear_2
   515  005AA8                     end_of_initialization:
   516                           	callstack 0
   517  005AA8                     __end_of__initialization:
   518                           	callstack 0
   519  005AA8  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   520  005AAA  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   521  005AAC  0100               	movlb	0
   522  005AAE  EF18  F022         	goto	_main	;jump to C main() function
   523                           
   524                           	psect	bssCOMRAM
   525  00004D                     __pbssCOMRAM:
   526                           	callstack 0
   527  00004D                     _prec:
   528                           	callstack 0
   529  00004D                     	ds	2
   530  00004F                     _flags:
   531                           	callstack 0
   532  00004F                     	ds	2
   533  000051                     _interrupts_lowerbound:
   534                           	callstack 0
   535  000051                     	ds	2
   536  000053                     _TxBufWriteCnt:
   537                           	callstack 0
   538  000053                     	ds	1
   539                           
   540                           	psect	bssBANK0
   541  0000F4                     __pbssBANK0:
   542                           	callstack 0
   543  0000F4                     _returnhome_flag:
   544                           	callstack 0
   545  0000F4                     	ds	1
   546  0000F5                     _TxBufReadCnt:
   547                           	callstack 0
   548  0000F5                     	ds	1
   549  0000F6                     _RxBufWriteCnt:
   550                           	callstack 0
   551  0000F6                     	ds	1
   552                           
   553                           	psect	bssBANK1
   554  00017F                     __pbssBANK1:
   555                           	callstack 0
   556  00017F                     _EUSART4TXbuf:
   557                           	callstack 0
   558  00017F                     	ds	60
   559  0001BB                     _EUSART4RXbuf:
   560                           	callstack 0
   561  0001BB                     	ds	20
   562  0001CF                     floorf@F527:
   563                           	callstack 0
   564  0001CF                     	ds	4
   565  0001D3                     ___fpclassifyf@F465:
   566                           	callstack 0
   567  0001D3                     	ds	4
   568  0001D7                     _nout:
   569                           	callstack 0
   570  0001D7                     	ds	2
   571  0001D9                     _width:
   572                           	callstack 0
   573  0001D9                     	ds	2
   574  0001DB                     _clear_upper:
   575                           	callstack 0
   576  0001DB                     	ds	2
   577  0001DD                     _clear_lower:
   578                           	callstack 0
   579  0001DD                     	ds	2
   580  0001DF                     _turnright_delay:
   581                           	callstack 0
   582  0001DF                     	ds	2
   583  0001E1                     _turnleft_delay:
   584                           	callstack 0
   585  0001E1                     	ds	2
   586  0001E3                     _unknowncard_flag:
   587                           	callstack 0
   588  0001E3                     	ds	1
   589  0001E4                     _colourcard_flag:
   590                           	callstack 0
   591  0001E4                     	ds	1
   592  0001E5                     _overtime_flag:
   593                           	callstack 0
   594  0001E5                     	ds	1
   595  0001E6                     _RxBufReadCnt:
   596                           	callstack 0
   597  0001E6                     	ds	1
   598                           
   599                           	psect	dataBANK1
   600  0001E7                     __pdataBANK1:
   601                           	callstack 0
   602  0001E7                     stoa@F1163:
   603                           	callstack 0
   604  0001E7                     	ds	7
   605                           
   606                           	psect	bssBANK2
   607  000200                     __pbssBANK2:
   608                           	callstack 0
   609  000200                     _dbuf:
   610                           	callstack 0
   611  000200                     	ds	80
   612                           
   613                           	psect	cstackBANK2
   614  000250                     __pcstackBANK2:
   615                           	callstack 0
   616  000250                     main@current:
   617                           	callstack 0
   618                           
   619                           ; 8 bytes @ 0x0
   620  000250                     	ds	8
   621  000258                     main@motorL:
   622                           	callstack 0
   623                           
   624                           ; 9 bytes @ 0x8
   625  000258                     	ds	9
   626  000261                     main@motorR:
   627                           	callstack 0
   628                           
   629                           ; 9 bytes @ 0x11
   630  000261                     	ds	9
   631                           
   632                           	psect	cstackBANK1
   633  000100                     __pcstackBANK1:
   634                           	callstack 0
   635  000100                     colourclick_testing@buf:
   636                           	callstack 0
   637                           
   638                           ; 100 bytes @ 0x0
   639  000100                     	ds	100
   640  000164                     colourclick_testing@ambient:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x64
   644  000164                     	ds	2
   645  000166                     colourclick_testing@R:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x66
   649  000166                     	ds	2
   650  000168                     colourclick_testing@G:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x68
   654  000168                     	ds	2
   655  00016A                     colourclick_testing@B:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x6A
   659  00016A                     	ds	2
   660  00016C                     colourclick_testing@C:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x6C
   664  00016C                     	ds	2
   665  00016E                     colourclick_calibration@i:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0x6E
   669  00016E                     	ds	1
   670  00016F                     colourclick_calibration@initial:
   671                           	callstack 0
   672                           
   673                           ; 8 bytes @ 0x6F
   674  00016F                     	ds	8
   675  000177                     colourclick_calibration@current:
   676                           	callstack 0
   677                           
   678                           ; 8 bytes @ 0x77
   679  000177                     	ds	8
   680                           
   681                           	psect	cstackBANK0
   682  000060                     __pcstackBANK0:
   683                           	callstack 0
   684  000060                     ?_efgtoa:
   685                           	callstack 0
   686  000060                     efgtoa@fp:
   687                           	callstack 0
   688  000060                     left@delay:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x0
   692  000060                     	ds	2
   693  000062                     efgtoa@f:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x2
   697  000062                     	ds	2
   698  000064                     _left$3571:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x4
   702  000064                     	ds	2
   703  000066                     efgtoa@c:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x6
   707  000066                     	ds	1
   708  000067                     ??_efgtoa:
   709                           
   710                           ; 1 bytes @ 0x7
   711  000067                     	ds	1
   712  000068                     left@i:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x8
   716  000068                     	ds	2
   717  00006A                     turnleft@mL:
   718                           	callstack 0
   719  00006A                     turnright@mL:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0xA
   723  00006A                     	ds	2
   724  00006C                     turnleft@mR:
   725                           	callstack 0
   726  00006C                     turnright@mR:
   727                           	callstack 0
   728  00006C                     _efgtoa$3128:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0xC
   732  00006C                     	ds	2
   733  00006E                     turnleft@deg:
   734                           	callstack 0
   735  00006E                     turnright@deg:
   736                           	callstack 0
   737  00006E                     _efgtoa$3129:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0xE
   741  00006E                     	ds	2
   742  000070                     ??_DCmotors_calibration:
   743  000070                     colourcards_readRGBC@abs:
   744                           	callstack 0
   745  000070                     _efgtoa$3133:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x10
   749  000070                     	ds	2
   750  000072                     colourcards_readRGBC@mL:
   751                           	callstack 0
   752  000072                     _efgtoa$3137:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x12
   756  000072                     	ds	2
   757  000074                     colourcards_readRGBC@mR:
   758                           	callstack 0
   759  000074                     _efgtoa$3138:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x14
   763  000074                     	ds	2
   764  000076                     _efgtoa$3139:
   765                           	callstack 0
   766  000076                     colourcards_readRGBC@rel:
   767                           	callstack 0
   768                           
   769                           ; 12 bytes @ 0x16
   770  000076                     	ds	2
   771  000078                     efgtoa@t:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x18
   775  000078                     	ds	2
   776  00007A                     efgtoa@pp:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x1A
   780  00007A                     	ds	2
   781  00007C                     efgtoa@ne:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x1C
   785  00007C                     	ds	2
   786  00007E                     efgtoa@m:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x1E
   790  00007E                     	ds	2
   791  000080                     efgtoa@ou:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x20
   795  000080                     	ds	4
   796  000084                     efgtoa@d:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x24
   800  000084                     	ds	2
   801  000086                     efgtoa@sign:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x26
   805  000086                     	ds	2
   806  000088                     efgtoa@p:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x28
   810  000088                     	ds	2
   811  00008A                     efgtoa@w:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x2A
   815  00008A                     	ds	2
   816  00008C                     efgtoa@nmode:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0x2C
   820  00008C                     	ds	1
   821  00008D                     efgtoa@mode:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x2D
   825  00008D                     	ds	1
   826  00008E                     efgtoa@h:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x2E
   830  00008E                     	ds	4
   831  000092                     efgtoa@l:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x32
   835  000092                     	ds	4
   836  000096                     efgtoa@i:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x36
   840  000096                     	ds	2
   841  000098                     efgtoa@g:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x38
   845  000098                     	ds	4
   846  00009C                     efgtoa@e:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x3C
   850  00009C                     	ds	2
   851  00009E                     efgtoa@n:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x3E
   855  00009E                     	ds	2
   856  0000A0                     efgtoa@u:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x40
   860  0000A0                     	ds	4
   861  0000A4                     ?_vfpfcnvrt:
   862                           	callstack 0
   863  0000A4                     vfpfcnvrt@fp:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x44
   867  0000A4                     	ds	2
   868  0000A6                     vfpfcnvrt@fmt:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x46
   872  0000A6                     	ds	2
   873  0000A8                     vfpfcnvrt@ap:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x48
   877  0000A8                     	ds	2
   878  0000AA                     vfpfcnvrt@ll:
   879                           	callstack 0
   880                           
   881                           ; 8 bytes @ 0x4A
   882  0000AA                     	ds	8
   883  0000B2                     vfpfcnvrt@cp:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x52
   887  0000B2                     	ds	2
   888  0000B4                     _vfpfcnvrt$3164:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x54
   892  0000B4                     	ds	2
   893  0000B6                     _vfpfcnvrt$3169:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x56
   897  0000B6                     	ds	2
   898  0000B8                     vfpfcnvrt@f:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x58
   902  0000B8                     	ds	4
   903  0000BC                     vfpfcnvrt@ct:
   904                           	callstack 0
   905                           
   906                           ; 3 bytes @ 0x5C
   907  0000BC                     	ds	3
   908  0000BF                     vfpfcnvrt@c:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x5F
   912  0000BF                     	ds	1
   913  0000C0                     ?_vfprintf:
   914                           	callstack 0
   915  0000C0                     vfprintf@fp:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x60
   919  0000C0                     	ds	2
   920  0000C2                     vfprintf@fmt:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x62
   924  0000C2                     	ds	2
   925  0000C4                     vfprintf@ap:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x64
   929  0000C4                     	ds	2
   930  0000C6                     vfprintf@cfmt:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x66
   934  0000C6                     	ds	2
   935  0000C8                     ?_sprintf:
   936                           	callstack 0
   937  0000C8                     sprintf@s:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x68
   941  0000C8                     	ds	2
   942  0000CA                     sprintf@fmt:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x6A
   946  0000CA                     	ds	24
   947  0000E2                     sprintf@ap:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x82
   951  0000E2                     	ds	2
   952  0000E4                     sprintf@f:
   953                           	callstack 0
   954                           
   955                           ; 6 bytes @ 0x84
   956  0000E4                     	ds	6
   957  0000EA                     colourclick_testing@initial:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x8A
   961  0000EA                     	ds	2
   962  0000EC                     colourclick_testing@current:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x8C
   966  0000EC                     	ds	2
   967  0000EE                     ??_colourclick_testing:
   968                           
   969                           ; 1 bytes @ 0x8E
   970  0000EE                     	ds	2
   971  0000F0                     ??_colourclick_calibration:
   972                           
   973                           ; 1 bytes @ 0x90
   974  0000F0                     	ds	2
   975  0000F2                     ??_main:
   976                           
   977                           ; 1 bytes @ 0x92
   978  0000F2                     	ds	2
   979                           
   980                           	psect	cstackCOMRAM
   981  000001                     __pcstackCOMRAM:
   982                           	callstack 0
   983  000001                     ??i2_I2C_2_Master_Idle:
   984  000001                     
   985                           ; 1 bytes @ 0x0
   986  000001                     	ds	1
   987  000002                     i2I2C_2_Master_Write@data_byte:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x1
   991  000002                     	ds	1
   992  000003                     i2colourclick_writetoaddr@value:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x2
   996  000003                     	ds	1
   997  000004                     i2colourclick_writetoaddr@address:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x3
  1001  000004                     	ds	1
  1002  000005                     ??i2_interrupts_colour:
  1003                           
  1004                           ; 1 bytes @ 0x4
  1005  000005                     	ds	1
  1006  000006                     ??_HighISR:
  1007  000006                     
  1008                           ; 1 bytes @ 0x5
  1009  000006                     	ds	1
  1010  000007                     ??_LowISR:
  1011                           
  1012                           ; 1 bytes @ 0x6
  1013  000007                     	ds	3
  1014  00000A                     ??_adjdelay:
  1015  00000A                     ??_I2C_2_Master_Idle:
  1016  00000A                     ?_strlen:
  1017                           	callstack 0
  1018  00000A                     ?___fpclassifyf:
  1019                           	callstack 0
  1020  00000A                     ?_isupper:
  1021                           	callstack 0
  1022  00000A                     ?_isdigit:
  1023                           	callstack 0
  1024  00000A                     ?_strncmp:
  1025                           	callstack 0
  1026  00000A                     ?_isspace:
  1027                           	callstack 0
  1028  00000A                     ?___wmul:
  1029                           	callstack 0
  1030  00000A                     ?___awmod:
  1031                           	callstack 0
  1032  00000A                     ?___flneg:
  1033                           	callstack 0
  1034  00000A                     ?___fltol:
  1035                           	callstack 0
  1036  00000A                     ?___xxtofl:
  1037                           	callstack 0
  1038  00000A                     ?___aodiv:
  1039                           	callstack 0
  1040  00000A                     ?___aomod:
  1041                           	callstack 0
  1042  00000A                     ADC_getval@tmpval:
  1043                           	callstack 0
  1044  00000A                     colourclickLEDs_C@tog:
  1045                           	callstack 0
  1046  00000A                     sendCharSerial4@charToSend:
  1047                           	callstack 0
  1048  00000A                     DCmotors_init@PWMperiod:
  1049                           	callstack 0
  1050  00000A                     ___wmul@multiplier:
  1051                           	callstack 0
  1052  00000A                     ___awmod@dividend:
  1053                           	callstack 0
  1054  00000A                     isdigit@c:
  1055                           	callstack 0
  1056  00000A                     isspace@c:
  1057                           	callstack 0
  1058  00000A                     isupper@c:
  1059                           	callstack 0
  1060  00000A                     fputc@c:
  1061                           	callstack 0
  1062  00000A                     strcpy@dest:
  1063                           	callstack 0
  1064  00000A                     strlen@s:
  1065                           	callstack 0
  1066  00000A                     strncmp@_l:
  1067                           	callstack 0
  1068  00000A                     ___fleq@ff1:
  1069                           	callstack 0
  1070  00000A                     ___flneg@f1:
  1071                           	callstack 0
  1072  00000A                     ___fltol@f1:
  1073                           	callstack 0
  1074  00000A                     ___xxtofl@val:
  1075                           	callstack 0
  1076  00000A                     ___fpclassifyf@x:
  1077                           	callstack 0
  1078  00000A                     ___aodiv@dividend:
  1079                           	callstack 0
  1080  00000A                     ___aomod@dividend:
  1081                           	callstack 0
  1082                           
  1083                           ; 8 bytes @ 0x9
  1084  00000A                     	ds	1
  1085  00000B                     ??_I2C_2_Master_Read:
  1086  00000B                     I2C_2_Master_Write@data_byte:
  1087                           	callstack 0
  1088  00000B                     checkbatterylevel@batterylevel:
  1089                           	callstack 0
  1090  00000B                     sendStringSerial4@string:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0xA
  1094  00000B                     	ds	1
  1095  00000C                     ??_isupper:
  1096  00000C                     ??_isdigit:
  1097  00000C                     ??_isspace:
  1098  00000C                     colourclick_writetoaddr@value:
  1099                           	callstack 0
  1100  00000C                     I2C_2_Master_Read@ack:
  1101                           	callstack 0
  1102  00000C                     adjdelay@i:
  1103                           	callstack 0
  1104  00000C                     ___wmul@multiplicand:
  1105                           	callstack 0
  1106  00000C                     ___awmod@divisor:
  1107                           	callstack 0
  1108  00000C                     fputc@fp:
  1109                           	callstack 0
  1110  00000C                     strcpy@src:
  1111                           	callstack 0
  1112  00000C                     strlen@a:
  1113                           	callstack 0
  1114  00000C                     strncmp@_r:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0xB
  1118  00000C                     	ds	1
  1119  00000D                     colourclick_writetoaddr@address:
  1120                           	callstack 0
  1121  00000D                     I2C_2_Master_Read@tmp:
  1122                           	callstack 0
  1123  00000D                     adjdelay@mode:
  1124                           	callstack 0
  1125                           
  1126                           ; 1 bytes @ 0xC
  1127  00000D                     	ds	1
  1128  00000E                     ??_colourclick_init:
  1129  00000E                     ??_interrupts_colour:
  1130  00000E                     ??_fputc:
  1131  00000E                     ??___fpclassifyf:
  1132  00000E                     ??_strcpy:
  1133  00000E                     ??___fltol:
  1134  00000E                     ??___xxtofl:
  1135  00000E                     ?_colourclick_readR:
  1136                           	callstack 0
  1137  00000E                     ?_colourclick_readG:
  1138                           	callstack 0
  1139  00000E                     ?_colourclick_readB:
  1140                           	callstack 0
  1141  00000E                     ?_colourclick_readC:
  1142                           	callstack 0
  1143  00000E                     ___awmod@counter:
  1144                           	callstack 0
  1145  00000E                     ___wmul@product:
  1146                           	callstack 0
  1147  00000E                     strncmp@n:
  1148                           	callstack 0
  1149  00000E                     ___fleq@ff2:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0xD
  1153  00000E                     	ds	1
  1154  00000F                     ___awmod@sign:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0xE
  1158  00000F                     	ds	1
  1159  000010                     ??_strncmp:
  1160  000010                     ??_colourclick_readR:
  1161  000010                     ??_colourclick_readG:
  1162  000010                     ??_colourclick_readB:
  1163  000010                     ??_colourclick_readC:
  1164  000010                     ?_tolower:
  1165                           	callstack 0
  1166  000010                     ?___awdiv:
  1167                           	callstack 0
  1168  000010                     _isspace$3237:
  1169                           	callstack 0
  1170  000010                     ___awdiv@dividend:
  1171                           	callstack 0
  1172  000010                     strcpy@s:
  1173                           	callstack 0
  1174  000010                     tolower@c:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0xF
  1178  000010                     	ds	1
  1179  000011                     ?_atoi:
  1180                           	callstack 0
  1181  000011                     atoi@s:
  1182                           	callstack 0
  1183  000011                     strncmp@l:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x10
  1187  000011                     	ds	1
  1188  000012                     ??_tolower:
  1189  000012                     ??___fleq:
  1190  000012                     ___fltol@sign1:
  1191                           	callstack 0
  1192  000012                     ___xxtofl@sign:
  1193                           	callstack 0
  1194  000012                     ___awdiv@divisor:
  1195                           	callstack 0
  1196  000012                     ___fpclassifyf@e:
  1197                           	callstack 0
  1198  000012                     strcpy@d:
  1199                           	callstack 0
  1200  000012                     ___aodiv@divisor:
  1201                           	callstack 0
  1202  000012                     ___aomod@divisor:
  1203                           	callstack 0
  1204                           
  1205                           ; 8 bytes @ 0x11
  1206  000012                     	ds	1
  1207  000013                     ??_atoi:
  1208  000013                     ?_stoa:
  1209                           	callstack 0
  1210  000013                     ___fltol@exp1:
  1211                           	callstack 0
  1212  000013                     ___xxtofl@exp:
  1213                           	callstack 0
  1214  000013                     colourclick_readR@tmp:
  1215                           	callstack 0
  1216  000013                     colourclick_readG@tmp:
  1217                           	callstack 0
  1218  000013                     colourclick_readB@tmp:
  1219                           	callstack 0
  1220  000013                     colourclick_readC@tmp:
  1221                           	callstack 0
  1222  000013                     stoa@fp:
  1223                           	callstack 0
  1224  000013                     fputs@s:
  1225                           	callstack 0
  1226  000013                     strncmp@r:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x12
  1230  000013                     	ds	1
  1231  000014                     ___awdiv@counter:
  1232                           	callstack 0
  1233  000014                     ___xxtofl@arg:
  1234                           	callstack 0
  1235  000014                     ___fpclassifyf@u:
  1236                           	callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x13
  1239  000014                     	ds	1
  1240  000015                     ___awdiv@sign:
  1241                           	callstack 0
  1242  000015                     colourclick_readRGBC@tmpval:
  1243                           	callstack 0
  1244  000015                     stoa@s:
  1245                           	callstack 0
  1246  000015                     fputs@fp:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x14
  1250  000015                     	ds	1
  1251  000016                     ___awdiv@quotient:
  1252                           	callstack 0
  1253  000016                     _tolower$3300:
  1254                           	callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x15
  1257  000016                     	ds	1
  1258  000017                     ??_stoa:
  1259  000017                     fputs@c:
  1260                           	callstack 0
  1261  000017                     colourclick_readRGBC2@tmpval:
  1262                           	callstack 0
  1263  000017                     atoi@neg:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x16
  1267  000017                     	ds	1
  1268  000018                     ?___fldiv:
  1269                           	callstack 0
  1270  000018                     ?___flmul:
  1271                           	callstack 0
  1272  000018                     DCmotors_setPWM@m:
  1273                           	callstack 0
  1274  000018                     fputs@i:
  1275                           	callstack 0
  1276  000018                     ___fldiv@b:
  1277                           	callstack 0
  1278  000018                     ___flmul@b:
  1279                           	callstack 0
  1280  000018                     stoa@nuls:
  1281                           	callstack 0
  1282                           
  1283                           ; 7 bytes @ 0x17
  1284  000018                     	ds	1
  1285  000019                     colourclick_readRGBC2@mode:
  1286                           	callstack 0
  1287  000019                     _atoi$3206:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x18
  1291  000019                     	ds	1
  1292  00001A                     ??_colourclick_readRGBC2:
  1293  00001A                     ??_DCmotors_setPWM:
  1294  00001A                     ?_pad:
  1295                           	callstack 0
  1296  00001A                     ___aodiv@counter:
  1297                           	callstack 0
  1298  00001A                     ___aomod@counter:
  1299                           	callstack 0
  1300  00001A                     pad@fp:
  1301                           	callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x19
  1304  00001A                     	ds	1
  1305  00001B                     ___aodiv@sign:
  1306                           	callstack 0
  1307  00001B                     ___aomod@sign:
  1308                           	callstack 0
  1309  00001B                     _atoi$3208:
  1310                           	callstack 0
  1311                           
  1312                           ; 2 bytes @ 0x1A
  1313  00001B                     	ds	1
  1314  00001C                     ?_abs:
  1315                           	callstack 0
  1316  00001C                     pad@buf:
  1317                           	callstack 0
  1318  00001C                     abs@a:
  1319                           	callstack 0
  1320  00001C                     ___fldiv@a:
  1321                           	callstack 0
  1322  00001C                     ___flmul@a:
  1323                           	callstack 0
  1324  00001C                     ___aodiv@quotient:
  1325                           	callstack 0
  1326                           
  1327                           ; 8 bytes @ 0x1B
  1328  00001C                     	ds	1
  1329  00001D                     _atoi$3207:
  1330                           	callstack 0
  1331                           
  1332                           ; 1 bytes @ 0x1C
  1333  00001D                     	ds	1
  1334  00001E                     ??_abs:
  1335  00001E                     pad@p:
  1336                           	callstack 0
  1337  00001E                     atoi@n:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x1D
  1341  00001E                     	ds	1
  1342  00001F                     stoa@i:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x1E
  1346  00001F                     	ds	1
  1347  000020                     ??___fldiv:
  1348  000020                     ??___flmul:
  1349  000020                     ??_pad:
  1350                           
  1351                           ; 1 bytes @ 0x1F
  1352  000020                     	ds	1
  1353  000021                     DCmotors_setPWM@PWMduty:
  1354                           	callstack 0
  1355  000021                     pad@i:
  1356                           	callstack 0
  1357  000021                     stoa@w:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x20
  1361  000021                     	ds	2
  1362  000023                     forward@mL:
  1363                           	callstack 0
  1364  000023                     reverse@mL:
  1365                           	callstack 0
  1366  000023                     stop@mL:
  1367                           	callstack 0
  1368  000023                     right@mL:
  1369                           	callstack 0
  1370  000023                     pad@w:
  1371                           	callstack 0
  1372  000023                     stoa@cp:
  1373                           	callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x22
  1376  000023                     	ds	1
  1377  000024                     ___flmul@sign:
  1378                           	callstack 0
  1379  000024                     ___fldiv@rem:
  1380                           	callstack 0
  1381                           
  1382                           ; 4 bytes @ 0x23
  1383  000024                     	ds	1
  1384  000025                     ?_dtoa:
  1385                           	callstack 0
  1386  000025                     ___flmul@aexp:
  1387                           	callstack 0
  1388  000025                     forward@mR:
  1389                           	callstack 0
  1390  000025                     reverse@mR:
  1391                           	callstack 0
  1392  000025                     stop@mR:
  1393                           	callstack 0
  1394  000025                     right@mR:
  1395                           	callstack 0
  1396  000025                     dtoa@fp:
  1397                           	callstack 0
  1398  000025                     stoa@p:
  1399                           	callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x24
  1402  000025                     	ds	1
  1403  000026                     ___flmul@grs:
  1404                           	callstack 0
  1405                           
  1406                           ; 4 bytes @ 0x25
  1407  000026                     	ds	1
  1408  000027                     ??_stop:
  1409  000027                     right@deg:
  1410                           	callstack 0
  1411  000027                     stoa@l:
  1412                           	callstack 0
  1413  000027                     dtoa@d:
  1414                           	callstack 0
  1415                           
  1416                           ; 8 bytes @ 0x26
  1417  000027                     	ds	1
  1418  000028                     ___fldiv@sign:
  1419                           	callstack 0
  1420                           
  1421                           ; 1 bytes @ 0x27
  1422  000028                     	ds	1
  1423  000029                     ??_right:
  1424  000029                     ___fldiv@new_exp:
  1425                           	callstack 0
  1426                           
  1427                           ; 2 bytes @ 0x28
  1428  000029                     	ds	1
  1429  00002A                     ___flmul@bexp:
  1430                           	callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x29
  1433  00002A                     	ds	1
  1434  00002B                     right@delay:
  1435                           	callstack 0
  1436  00002B                     ___fldiv@grs:
  1437                           	callstack 0
  1438  00002B                     ___flmul@prod:
  1439                           	callstack 0
  1440                           
  1441                           ; 4 bytes @ 0x2A
  1442  00002B                     	ds	2
  1443  00002D                     right@i:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x2C
  1447  00002D                     	ds	2
  1448  00002F                     ??_dtoa:
  1449  00002F                     ___fldiv@bexp:
  1450                           	callstack 0
  1451  00002F                     ___flmul@temp:
  1452                           	callstack 0
  1453                           
  1454                           ; 2 bytes @ 0x2E
  1455  00002F                     	ds	1
  1456  000030                     ___fldiv@aexp:
  1457                           	callstack 0
  1458                           
  1459                           ; 1 bytes @ 0x2F
  1460  000030                     	ds	1
  1461  000031                     ?___fladd:
  1462                           	callstack 0
  1463  000031                     ?_floorf:
  1464                           	callstack 0
  1465  000031                     colourcards_normaliseRGBC@abs:
  1466                           	callstack 0
  1467  000031                     ___flge@ff1:
  1468                           	callstack 0
  1469  000031                     ___fladd@b:
  1470                           	callstack 0
  1471  000031                     floorf@x:
  1472                           	callstack 0
  1473                           
  1474                           ; 4 bytes @ 0x30
  1475  000031                     	ds	2
  1476  000033                     colourcards_normaliseRGBC@rel:
  1477                           	callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x32
  1480  000033                     	ds	2
  1481  000035                     ??_floorf:
  1482  000035                     colourcards_normaliseRGBC@R:
  1483                           	callstack 0
  1484  000035                     ___flge@ff2:
  1485                           	callstack 0
  1486  000035                     ___fladd@a:
  1487                           	callstack 0
  1488                           
  1489                           ; 4 bytes @ 0x34
  1490  000035                     	ds	2
  1491  000037                     colourcards_normaliseRGBC@G:
  1492                           	callstack 0
  1493  000037                     _dtoa$3104:
  1494                           	callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x36
  1497  000037                     	ds	2
  1498  000039                     ??___fladd:
  1499  000039                     ??___flge:
  1500  000039                     colourcards_normaliseRGBC@B:
  1501                           	callstack 0
  1502  000039                     dtoa@p:
  1503                           	callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x38
  1506  000039                     	ds	2
  1507  00003B                     colourcards_normaliseRGBC@C:
  1508                           	callstack 0
  1509  00003B                     dtoa@w:
  1510                           	callstack 0
  1511  00003B                     floorf@m:
  1512                           	callstack 0
  1513                           
  1514                           ; 4 bytes @ 0x3A
  1515  00003B                     	ds	2
  1516  00003D                     ___fladd@signs:
  1517                           	callstack 0
  1518  00003D                     dtoa@s:
  1519                           	callstack 0
  1520                           
  1521                           ; 2 bytes @ 0x3C
  1522  00003D                     	ds	1
  1523  00003E                     ___fladd@aexp:
  1524                           	callstack 0
  1525                           
  1526                           ; 1 bytes @ 0x3D
  1527  00003E                     	ds	1
  1528  00003F                     ___fladd@bexp:
  1529                           	callstack 0
  1530  00003F                     floorf@e:
  1531                           	callstack 0
  1532  00003F                     dtoa@n:
  1533                           	callstack 0
  1534                           
  1535                           ; 8 bytes @ 0x3E
  1536  00003F                     	ds	1
  1537  000040                     ___fladd@grs:
  1538                           	callstack 0
  1539                           
  1540                           ; 1 bytes @ 0x3F
  1541  000040                     	ds	1
  1542  000041                     ?___flsub:
  1543                           	callstack 0
  1544  000041                     left@mL:
  1545                           	callstack 0
  1546  000041                     ___flsub@b:
  1547                           	callstack 0
  1548  000041                     floorf@u:
  1549                           	callstack 0
  1550                           
  1551                           ; 4 bytes @ 0x40
  1552  000041                     	ds	2
  1553  000043                     left@mR:
  1554                           	callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x42
  1557  000043                     	ds	2
  1558  000045                     left@deg:
  1559                           	callstack 0
  1560  000045                     ___flsub@a:
  1561                           	callstack 0
  1562                           
  1563                           ; 4 bytes @ 0x44
  1564  000045                     	ds	2
  1565  000047                     ??_left:
  1566  000047                     dtoa@i:
  1567                           	callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x46
  1570  000047                     	ds	1
  1571  000048                     ??_colourcards_readRGBC:
  1572  000048                     DCmotors_calibration@mL:
  1573                           	callstack 0
  1574                           
  1575                           ; 2 bytes @ 0x47
  1576  000048                     	ds	1
  1577  000049                     ??_vfpfcnvrt:
  1578                           
  1579                           ; 1 bytes @ 0x48
  1580  000049                     	ds	1
  1581  00004A                     DCmotors_calibration@mR:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x49
  1585  00004A                     	ds	3
  1586  00004D                     
  1587                           ; 1 bytes @ 0x4C
  1588 ;;
  1589 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1590 ;;
  1591 ;; *************** function _main *****************
  1592 ;; Defined at:
  1593 ;;		line 7 in file "main.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  motorR          9   17[BANK2 ] struct .
  1598 ;;  motorL          9    8[BANK2 ] struct .
  1599 ;;  current         8    0[BANK2 ] struct .
  1600 ;;  PWMperiod       1    0        unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;      Locals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0       0
  1612 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1613 ;;      Totals:         0       2       0      26       0       0       0       0       0       0       0       0       
      +0       0       0
  1614 ;;Total ram usage:       28 bytes
  1615 ;; Hardware stack levels required when called: 17
  1616 ;; This function calls:
  1617 ;;		_ADC_init
  1618 ;;		_DCmotors_calibration
  1619 ;;		_DCmotors_init
  1620 ;;		_USART4_init
  1621 ;;		_checkbatterylevel
  1622 ;;		_colourcards_readRGBC
  1623 ;;		_colourclickLEDs_C
  1624 ;;		_colourclick_calibration
  1625 ;;		_colourclick_init
  1626 ;;		_forward
  1627 ;;		_interrupts_init
  1628 ;;		_stop
  1629 ;; This function is called by:
  1630 ;;		Startup code after reset
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text0
  1635  004430                     __ptext0:
  1636                           	callstack 0
  1637  004430                     _main:
  1638                           	callstack 14
  1639  004430                     
  1640                           ;main.c: 12:     interrupts_lowerbound = 0;
  1641  004430  0E00               	movlw	0
  1642  004432  6E52               	movwf	(_interrupts_lowerbound+1)^0,c	;volatile
  1643  004434  0E00               	movlw	0
  1644  004436  6E51               	movwf	_interrupts_lowerbound^0,c	;volatile
  1645                           
  1646                           ;main.c: 13:     interrupts_upperbound = 32767;
  1647  004438  0E7F               	movlw	127
  1648  00443A  6E55               	movwf	(_interrupts_upperbound+1)^0,c	;volatile
  1649  00443C  6854               	setf	_interrupts_upperbound^0,c	;volatile
  1650                           
  1651                           ;main.c: 14:     turnleft_delay = 0;
  1652  00443E  0E00               	movlw	0
  1653  004440  0101               	movlb	1	; () banked
  1654  004442  6FE2               	movwf	(_turnleft_delay+1)& (0+255),b	;volatile
  1655  004444  0E00               	movlw	0
  1656  004446  6FE1               	movwf	_turnleft_delay& (0+255),b	;volatile
  1657                           
  1658                           ;main.c: 15:     turnright_delay = 0;
  1659  004448  0E00               	movlw	0
  1660  00444A  6FE0               	movwf	(_turnright_delay+1)& (0+255),b	;volatile
  1661  00444C  0E00               	movlw	0
  1662  00444E  6FDF               	movwf	_turnright_delay& (0+255),b	;volatile
  1663                           
  1664                           ;main.c: 16:     overtime_flag = 0;
  1665  004450  0E00               	movlw	0
  1666  004452  6FE5               	movwf	_overtime_flag& (0+255),b	;volatile
  1667                           
  1668                           ;main.c: 17:     colourcard_flag = 0;
  1669  004454  0E00               	movlw	0
  1670  004456  6FE4               	movwf	_colourcard_flag& (0+255),b	;volatile
  1671                           
  1672                           ;main.c: 18:     unknowncard_flag = 0;
  1673  004458  0E00               	movlw	0
  1674  00445A  6FE3               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1675                           
  1676                           ;main.c: 19:     returnhome_flag = 0;
  1677  00445C  0E00               	movlw	0
  1678  00445E  0100               	movlb	0	; () banked
  1679  004460  6FF4               	movwf	_returnhome_flag& (0+255),b	;volatile
  1680                           
  1681                           ;main.c: 21:     DC_motor motorL;;main.c: 22:     motorL.power=0;
  1682  004462  0E00               	movlw	0
  1683  004464  0102               	movlb	2	; () banked
  1684  004466  6F58               	movwf	main@motorL& (0+255),b
  1685                           
  1686                           ;main.c: 23:     motorL.direction=1;
  1687  004468  0E01               	movlw	1
  1688  00446A  6F59               	movwf	(main@motorL+1)& (0+255),b
  1689  00446C                     
  1690                           ; BSR set to: 2
  1691                           ;main.c: 24:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1692  00446C  0EA3               	movlw	163
  1693  00446E  6F5A               	movwf	(main@motorL+2)& (0+255),b
  1694  004470  0E0F               	movlw	15
  1695  004472  6F5B               	movwf	(main@motorL+3)& (0+255),b
  1696  004474                     
  1697                           ; BSR set to: 2
  1698                           ;main.c: 25:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1699  004474  0E7D               	movlw	125
  1700  004476  6F5C               	movwf	(main@motorL+4)& (0+255),b
  1701  004478  0E0F               	movlw	15
  1702  00447A  6F5D               	movwf	(main@motorL+5)& (0+255),b
  1703                           
  1704                           ;main.c: 26:     motorL.dir_pin=4;
  1705  00447C  0E04               	movlw	4
  1706  00447E  6F5E               	movwf	(main@motorL+6)& (0+255),b
  1707  004480                     
  1708                           ; BSR set to: 2
  1709                           ;main.c: 27:     motorL.PWMperiod=PWMperiod;
  1710  004480  0E00               	movlw	0
  1711  004482  6F60               	movwf	(main@motorL+8)& (0+255),b
  1712  004484  0E63               	movlw	99
  1713  004486  6F5F               	movwf	(main@motorL+7)& (0+255),b
  1714                           
  1715                           ;main.c: 29:     DC_motor motorR;;main.c: 30:     motorR.power=0;
  1716  004488  0E00               	movlw	0
  1717  00448A  6F61               	movwf	main@motorR& (0+255),b
  1718                           
  1719                           ;main.c: 31:     motorR.direction=1;
  1720  00448C  0E01               	movlw	1
  1721  00448E  6F62               	movwf	(main@motorR+1)& (0+255),b
  1722  004490                     
  1723                           ; BSR set to: 2
  1724                           ;main.c: 32:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1725  004490  0EA0               	movlw	160
  1726  004492  6F63               	movwf	(main@motorR+2)& (0+255),b
  1727  004494  0E0F               	movlw	15
  1728  004496  6F64               	movwf	(main@motorR+3)& (0+255),b
  1729  004498                     
  1730                           ; BSR set to: 2
  1731                           ;main.c: 33:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1732  004498  0E7F               	movlw	127
  1733  00449A  6F65               	movwf	(main@motorR+4)& (0+255),b
  1734  00449C  0E0F               	movlw	15
  1735  00449E  6F66               	movwf	(main@motorR+5)& (0+255),b
  1736                           
  1737                           ;main.c: 34:     motorR.dir_pin=6;
  1738  0044A0  0E06               	movlw	6
  1739  0044A2  6F67               	movwf	(main@motorR+6)& (0+255),b
  1740  0044A4                     
  1741                           ; BSR set to: 2
  1742                           ;main.c: 35:     motorR.PWMperiod=PWMperiod;
  1743  0044A4  0E00               	movlw	0
  1744  0044A6  6F69               	movwf	(main@motorR+8)& (0+255),b
  1745  0044A8  0E63               	movlw	99
  1746  0044AA  6F68               	movwf	(main@motorR+7)& (0+255),b
  1747  0044AC                     
  1748                           ; BSR set to: 2
  1749                           ;main.c: 37:     ADC_init();
  1750  0044AC  EC29  F031         	call	_ADC_init	;wreg free
  1751  0044B0                     
  1752                           ;main.c: 38:     colourclick_init();
  1753  0044B0  ECE1  F02F         	call	_colourclick_init	;wreg free
  1754  0044B4                     
  1755                           ;main.c: 39:     DCmotors_init(PWMperiod);
  1756  0044B4  0E63               	movlw	99
  1757  0044B6  EC73  F02E         	call	_DCmotors_init
  1758  0044BA                     
  1759                           ;main.c: 40:     USART4_init();
  1760  0044BA  ECFC  F030         	call	_USART4_init	;wreg free
  1761  0044BE                     
  1762                           ;main.c: 41:     checkbatterylevel();
  1763  0044BE  ECEC  F030         	call	_checkbatterylevel	;wreg free
  1764  0044C2                     
  1765                           ;main.c: 46:     colourclick_calibration();
  1766  0044C2  EC99  F025         	call	_colourclick_calibration	;wreg free
  1767  0044C6                     
  1768                           ;main.c: 52:     DCmotors_calibration(&motorL, &motorR);
  1769  0044C6  0E58               	movlw	low main@motorL
  1770  0044C8  6E48               	movwf	DCmotors_calibration@mL^0,c
  1771  0044CA  0E02               	movlw	high main@motorL
  1772  0044CC  6E49               	movwf	(DCmotors_calibration@mL+1)^0,c
  1773  0044CE  0E61               	movlw	low main@motorR
  1774  0044D0  6E4A               	movwf	DCmotors_calibration@mR^0,c
  1775  0044D2  0E02               	movlw	high main@motorR
  1776  0044D4  6E4B               	movwf	(DCmotors_calibration@mR+1)^0,c
  1777  0044D6  ECF3  F024         	call	_DCmotors_calibration	;wreg free
  1778  0044DA                     l71:
  1779  0044DA  A48E               	btfss	142,2,c	;volatile
  1780  0044DC  EF72  F022         	goto	u12061
  1781  0044E0  EF74  F022         	goto	u12060
  1782  0044E4                     u12061:
  1783  0044E4  EF7B  F022         	goto	l75
  1784  0044E8                     u12060:
  1785  0044E8  B68E               	btfsc	142,3,c	;volatile
  1786  0044EA  EF79  F022         	goto	u12071
  1787  0044EE  EF7B  F022         	goto	u12070
  1788  0044F2                     u12071:
  1789  0044F2  EF6D  F022         	goto	l71
  1790  0044F6                     u12070:
  1791  0044F6                     l75:
  1792                           
  1793                           ;main.c: 59:     LATDbits.LATD3 = 1;
  1794  0044F6  867C               	bsf	124,3,c	;volatile
  1795  0044F8                     
  1796                           ;main.c: 60:     colourclickLEDs_C(1);
  1797  0044F8  0E01               	movlw	1
  1798  0044FA  ECCB  F030         	call	_colourclickLEDs_C
  1799  0044FE                     
  1800                           ;main.c: 61:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1801  0044FE  0E52               	movlw	82
  1802  004500  0100               	movlb	0	; () banked
  1803  004502  6FF3               	movwf	(??_main+1)& (0+255),b
  1804  004504  0E2B               	movlw	43
  1805  004506  6FF2               	movwf	??_main& (0+255),b
  1806  004508  0E00               	movlw	0
  1807  00450A                     u12497:
  1808  00450A  2EE8               	decfsz	wreg,f,c
  1809  00450C  D7FE               	bra	u12497
  1810  00450E  2FF2               	decfsz	??_main& (0+255),f,b
  1811  004510  D7FC               	bra	u12497
  1812  004512  2FF3               	decfsz	(??_main+1)& (0+255),f,b
  1813  004514  D7FA               	bra	u12497
  1814  004516  F000               	nop	
  1815  004518                     
  1816                           ;main.c: 62:     interrupts_init();
  1817  004518  ECB9  F030         	call	_interrupts_init	;wreg free
  1818  00451C                     l9124:
  1819                           
  1820                           ;main.c: 69:         forward(&motorL, &motorR);
  1821  00451C  0E58               	movlw	low main@motorL
  1822  00451E  6E23               	movwf	forward@mL^0,c
  1823  004520  0E02               	movlw	high main@motorL
  1824  004522  6E24               	movwf	(forward@mL+1)^0,c
  1825  004524  0E61               	movlw	low main@motorR
  1826  004526  6E25               	movwf	forward@mR^0,c
  1827  004528  0E02               	movlw	high main@motorR
  1828  00452A  6E26               	movwf	(forward@mR+1)^0,c
  1829  00452C  ECDD  F02B         	call	_forward	;wreg free
  1830  004530                     
  1831                           ;main.c: 70:         if (colourcard_flag==1) {
  1832  004530  0101               	movlb	1	; () banked
  1833  004532  05E4               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1834  004534  A4D8               	btfss	status,2,c
  1835  004536  EF9F  F022         	goto	u12081
  1836  00453A  EFA1  F022         	goto	u12080
  1837  00453E                     u12081:
  1838  00453E  EF8E  F022         	goto	l9124
  1839  004542                     u12080:
  1840  004542                     
  1841                           ; BSR set to: 1
  1842                           ;main.c: 71:             stop(&motorL, &motorR);
  1843  004542  0E58               	movlw	low main@motorL
  1844  004544  6E23               	movwf	stop@mL^0,c
  1845  004546  0E02               	movlw	high main@motorL
  1846  004548  6E24               	movwf	(stop@mL+1)^0,c
  1847  00454A  0E61               	movlw	low main@motorR
  1848  00454C  6E25               	movwf	stop@mR^0,c
  1849  00454E  0E02               	movlw	high main@motorR
  1850  004550  6E26               	movwf	(stop@mR+1)^0,c
  1851  004552  EC24  F02C         	call	_stop	;wreg free
  1852  004556                     
  1853                           ;main.c: 72:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1854  004556  0E52               	movlw	82
  1855  004558  0100               	movlb	0	; () banked
  1856  00455A  6FF3               	movwf	(??_main+1)& (0+255),b
  1857  00455C  0E2B               	movlw	43
  1858  00455E  6FF2               	movwf	??_main& (0+255),b
  1859  004560  0E00               	movlw	0
  1860  004562                     u12507:
  1861  004562  2EE8               	decfsz	wreg,f,c
  1862  004564  D7FE               	bra	u12507
  1863  004566  2FF2               	decfsz	??_main& (0+255),f,b
  1864  004568  D7FC               	bra	u12507
  1865  00456A  2FF3               	decfsz	(??_main+1)& (0+255),f,b
  1866  00456C  D7FA               	bra	u12507
  1867  00456E  F000               	nop	
  1868  004570                     
  1869                           ;main.c: 73:             colourcards_readRGBC(&current, &motorL, &motorR);
  1870  004570  0E50               	movlw	low main@current
  1871  004572  0100               	movlb	0	; () banked
  1872  004574  6F70               	movwf	colourcards_readRGBC@abs& (0+255),b
  1873  004576  0E02               	movlw	high main@current
  1874  004578  6F71               	movwf	(colourcards_readRGBC@abs+1)& (0+255),b
  1875  00457A  0E58               	movlw	low main@motorL
  1876  00457C  6F72               	movwf	colourcards_readRGBC@mL& (0+255),b
  1877  00457E  0E02               	movlw	high main@motorL
  1878  004580  6F73               	movwf	(colourcards_readRGBC@mL+1)& (0+255),b
  1879  004582  0E61               	movlw	low main@motorR
  1880  004584  6F74               	movwf	colourcards_readRGBC@mR& (0+255),b
  1881  004586  0E02               	movlw	high main@motorR
  1882  004588  6F75               	movwf	(colourcards_readRGBC@mR+1)& (0+255),b
  1883  00458A  EC89  F00D         	call	_colourcards_readRGBC	;wreg free
  1884                           
  1885                           ;main.c: 74:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1886  00458E  0E52               	movlw	82
  1887  004590  0100               	movlb	0	; () banked
  1888  004592  6FF3               	movwf	(??_main+1)& (0+255),b
  1889  004594  0E2B               	movlw	43
  1890  004596  6FF2               	movwf	??_main& (0+255),b
  1891  004598  0E00               	movlw	0
  1892  00459A                     u12517:
  1893  00459A  2EE8               	decfsz	wreg,f,c
  1894  00459C  D7FE               	bra	u12517
  1895  00459E  2FF2               	decfsz	??_main& (0+255),f,b
  1896  0045A0  D7FC               	bra	u12517
  1897  0045A2  2FF3               	decfsz	(??_main+1)& (0+255),f,b
  1898  0045A4  D7FA               	bra	u12517
  1899  0045A6  F000               	nop	
  1900  0045A8                     
  1901                           ;main.c: 76:             colourcard_flag = 0;
  1902  0045A8  0E00               	movlw	0
  1903  0045AA  0101               	movlb	1	; () banked
  1904  0045AC  6FE4               	movwf	_colourcard_flag& (0+255),b	;volatile
  1905  0045AE  EF8E  F022         	goto	l9124
  1906  0045B2  EF30  F000         	goto	start
  1907  0045B6                     __end_of_main:
  1908                           	callstack 0
  1909                           
  1910 ;; *************** function _interrupts_init *****************
  1911 ;; Defined at:
  1912 ;;		line 15 in file "interrupts.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;		None
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;Total ram usage:        0 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; Hardware stack levels required when called: 12
  1933 ;; This function calls:
  1934 ;;		_interrupts_clear
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text1
  1941  006172                     __ptext1:
  1942                           	callstack 0
  1943  006172                     _interrupts_init:
  1944                           	callstack 18
  1945  006172                     
  1946                           ;interrupts.c: 16:     TRISBbits.TRISB1 = 1;
  1947  006172  8282               	bsf	130,1,c	;volatile
  1948                           
  1949                           ;interrupts.c: 17:     ANSELBbits.ANSELB1 = 0;
  1950  006174  010E               	movlb	14	; () banked
  1951  006176  939A               	bcf	154,1,b	;volatile
  1952  006178                     
  1953                           ; BSR set to: 14
  1954                           ;interrupts.c: 18:     INT1PPS=0x09;
  1955  006178  0E09               	movlw	9
  1956  00617A  010D               	movlb	13	; () banked
  1957  00617C  6FF1               	movwf	241,b	;volatile
  1958  00617E                     
  1959                           ; BSR set to: 13
  1960                           ;interrupts.c: 20:     PIE0bits.INT1IE = 1;
  1961  00617E  010E               	movlb	14	; () banked
  1962  006180  8329               	bsf	41,1,b	;volatile
  1963  006182                     
  1964                           ; BSR set to: 14
  1965                           ;interrupts.c: 21:     PIE0bits.TMR0IE = 1;
  1966  006182  8B29               	bsf	41,5,b	;volatile
  1967  006184                     
  1968                           ; BSR set to: 14
  1969                           ;interrupts.c: 23:     IPR0bits.INT1IP = 1;
  1970  006184  831F               	bsf	31,1,b	;volatile
  1971  006186                     
  1972                           ; BSR set to: 14
  1973                           ;interrupts.c: 24:     IPR0bits.TMR0IP = 0;
  1974  006186  9B1F               	bcf	31,5,b	;volatile
  1975  006188                     
  1976                           ; BSR set to: 14
  1977                           ;interrupts.c: 26:     interrupts_clear();
  1978  006188  EC1C  F031         	call	_interrupts_clear	;wreg free
  1979  00618C                     
  1980                           ;interrupts.c: 28:     INTCONbits.INT1EDG = 0;
  1981  00618C  92F2               	bcf	242,1,c	;volatile
  1982  00618E                     
  1983                           ;interrupts.c: 29:     INTCONbits.IPEN = 1;
  1984  00618E  8AF2               	bsf	242,5,c	;volatile
  1985  006190                     
  1986                           ;interrupts.c: 30:     INTCONbits.PEIE = 1;
  1987  006190  8CF2               	bsf	242,6,c	;volatile
  1988  006192                     
  1989                           ;interrupts.c: 31:     INTCONbits.GIE = 1;
  1990  006192  8EF2               	bsf	242,7,c	;volatile
  1991  006194  0012               	return		;funcret
  1992  006196                     __end_of_interrupts_init:
  1993                           	callstack 0
  1994                           
  1995 ;; *************** function _interrupts_clear *****************
  1996 ;; Defined at:
  1997 ;;		line 37 in file "interrupts.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 11
  2018 ;; This function calls:
  2019 ;;		_I2C_2_Master_Start
  2020 ;;		_I2C_2_Master_Stop
  2021 ;;		_I2C_2_Master_Write
  2022 ;;		_interrupts_colour
  2023 ;; This function is called by:
  2024 ;;		_interrupts_init
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text2
  2029  006238                     __ptext2:
  2030                           	callstack 0
  2031  006238                     _interrupts_clear:
  2032                           	callstack 18
  2033  006238                     
  2034                           ;interrupts.c: 38:     I2C_2_Master_Start();
  2035  006238  EC84  F031         	call	_I2C_2_Master_Start	;wreg free
  2036                           
  2037                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  2038  00623C  0E52               	movlw	82
  2039  00623E  EC6D  F031         	call	_I2C_2_Master_Write
  2040                           
  2041                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
  2042  006242  0EE6               	movlw	230
  2043  006244  EC6D  F031         	call	_I2C_2_Master_Write
  2044                           
  2045                           ;interrupts.c: 41:     I2C_2_Master_Stop();
  2046  006248  EC7F  F031         	call	_I2C_2_Master_Stop	;wreg free
  2047                           
  2048                           ;interrupts.c: 43:     interrupts_colour();
  2049  00624C  ECEB  F02E         	call	_interrupts_colour	;wreg free
  2050  006250  0012               	return		;funcret
  2051  006252                     __end_of_interrupts_clear:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function _interrupts_colour *****************
  2055 ;; Defined at:
  2056 ;;		line 49 in file "interrupts.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2072 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2074 ;;Total ram usage:        1 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 10
  2077 ;; This function calls:
  2078 ;;		_colourclick_writetoaddr
  2079 ;; This function is called by:
  2080 ;;		_interrupts_clear
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text3
  2085  005DD6                     __ptext3:
  2086                           	callstack 0
  2087  005DD6                     _interrupts_colour:
  2088                           	callstack 18
  2089  005DD6                     
  2090                           ;interrupts.c: 50:     colourclick_writetoaddr(0x00, 0b10011);
  2091  005DD6  0E13               	movlw	19
  2092  005DD8  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2093  005DDA  0E00               	movlw	0
  2094  005DDC  ECDC  F030         	call	_colourclick_writetoaddr
  2095  005DE0                     
  2096                           ;interrupts.c: 51:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2097  005DE0  0E3F               	movlw	63
  2098  005DE2  6E0E               	movwf	??_interrupts_colour^0,c
  2099  005DE4  0E55               	movlw	85
  2100  005DE6                     u12527:
  2101  005DE6  2EE8               	decfsz	wreg,f,c
  2102  005DE8  D7FE               	bra	u12527
  2103  005DEA  2E0E               	decfsz	??_interrupts_colour^0,f,c
  2104  005DEC  D7FC               	bra	u12527
  2105  005DEE  F000               	nop	
  2106  005DF0                     
  2107                           ;interrupts.c: 52:     colourclick_writetoaddr(0x0C, 0b0100);
  2108  005DF0  0E04               	movlw	4
  2109  005DF2  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2110  005DF4  0E0C               	movlw	12
  2111  005DF6  ECDC  F030         	call	_colourclick_writetoaddr
  2112  005DFA                     
  2113                           ;interrupts.c: 53:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
  2114  005DFA  C051  F00C         	movff	_interrupts_lowerbound,colourclick_writetoaddr@value	;volatile
  2115  005DFE  0E04               	movlw	4
  2116  005E00  ECDC  F030         	call	_colourclick_writetoaddr
  2117  005E04                     
  2118                           ;interrupts.c: 54:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
  2119  005E04  5052               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2120  005E06  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2121  005E08  0E05               	movlw	5
  2122  005E0A  ECDC  F030         	call	_colourclick_writetoaddr
  2123  005E0E                     
  2124                           ;interrupts.c: 55:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
  2125  005E0E  C054  F00C         	movff	_interrupts_upperbound,colourclick_writetoaddr@value	;volatile
  2126  005E12  0E06               	movlw	6
  2127  005E14  ECDC  F030         	call	_colourclick_writetoaddr
  2128  005E18                     
  2129                           ;interrupts.c: 56:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
  2130  005E18  5055               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  2131  005E1A  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2132  005E1C  0E07               	movlw	7
  2133  005E1E  ECDC  F030         	call	_colourclick_writetoaddr
  2134  005E22  0012               	return		;funcret
  2135  005E24                     __end_of_interrupts_colour:
  2136                           	callstack 0
  2137                           
  2138 ;; *************** function _colourclick_init *****************
  2139 ;; Defined at:
  2140 ;;		line 15 in file "colour_click.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;		None
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;		None
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2158 ;;Total ram usage:        1 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; Hardware stack levels required when called: 10
  2161 ;; This function calls:
  2162 ;;		_I2C_2_Master_Init
  2163 ;;		_colourclickLEDs_init
  2164 ;;		_colourclick_writetoaddr
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text4
  2171  005FC2                     __ptext4:
  2172                           	callstack 0
  2173  005FC2                     _colourclick_init:
  2174                           	callstack 20
  2175  005FC2                     
  2176                           ;colour_click.c: 18:     I2C_2_Master_Init();
  2177  005FC2  EC69  F030         	call	_I2C_2_Master_Init	;wreg free
  2178  005FC6                     
  2179                           ;colour_click.c: 21:   colourclick_writetoaddr(0x00, 0x01);
  2180  005FC6  0E01               	movlw	1
  2181  005FC8  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2182  005FCA  0E00               	movlw	0
  2183  005FCC  ECDC  F030         	call	_colourclick_writetoaddr
  2184  005FD0                     
  2185                           ;colour_click.c: 22:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2186  005FD0  0E3F               	movlw	63
  2187  005FD2  6E0E               	movwf	??_colourclick_init^0,c
  2188  005FD4  0E55               	movlw	85
  2189  005FD6                     u12537:
  2190  005FD6  2EE8               	decfsz	wreg,f,c
  2191  005FD8  D7FE               	bra	u12537
  2192  005FDA  2E0E               	decfsz	??_colourclick_init^0,f,c
  2193  005FDC  D7FC               	bra	u12537
  2194  005FDE  F000               	nop	
  2195  005FE0                     
  2196                           ;colour_click.c: 25:  colourclick_writetoaddr(0x00, 0x03);
  2197  005FE0  0E03               	movlw	3
  2198  005FE2  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2199  005FE4  0E00               	movlw	0
  2200  005FE6  ECDC  F030         	call	_colourclick_writetoaddr
  2201  005FEA                     
  2202                           ;colour_click.c: 28:  colourclick_writetoaddr(0x01, 0xD5);
  2203  005FEA  0ED5               	movlw	213
  2204  005FEC  6E0C               	movwf	colourclick_writetoaddr@value^0,c
  2205  005FEE  0E01               	movlw	1
  2206  005FF0  ECDC  F030         	call	_colourclick_writetoaddr
  2207  005FF4                     
  2208                           ;colour_click.c: 30:     colourclickLEDs_init();
  2209  005FF4  EC66  F031         	call	_colourclickLEDs_init	;wreg free
  2210  005FF8  0012               	return		;funcret
  2211  005FFA                     __end_of_colourclick_init:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _colourclick_writetoaddr *****************
  2215 ;; Defined at:
  2216 ;;		line 39 in file "colour_click.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  address         1    wreg     unsigned char 
  2219 ;;  value           1   11[COMRAM] unsigned char 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  address         1   12[COMRAM] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2231 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2235 ;;Total ram usage:        2 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 9
  2238 ;; This function calls:
  2239 ;;		_I2C_2_Master_Start
  2240 ;;		_I2C_2_Master_Stop
  2241 ;;		_I2C_2_Master_Write
  2242 ;; This function is called by:
  2243 ;;		_interrupts_colour
  2244 ;;		_colourclick_init
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text5
  2249  0061B8                     __ptext5:
  2250                           	callstack 0
  2251  0061B8                     _colourclick_writetoaddr:
  2252                           	callstack 18
  2253                           
  2254                           ;incstack = 0
  2255                           ;colourclick_writetoaddr@address stored from wreg
  2256  0061B8  6E0D               	movwf	colourclick_writetoaddr@address^0,c
  2257  0061BA                     
  2258                           ;colour_click.c: 39: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 40: {;colour_click.c: 41:     I2C_2_Master_Start();
  2259  0061BA  EC84  F031         	call	_I2C_2_Master_Start	;wreg free
  2260                           
  2261                           ;colour_click.c: 42:     I2C_2_Master_Write(0x52 | 0x00);
  2262  0061BE  0E52               	movlw	82
  2263  0061C0  EC6D  F031         	call	_I2C_2_Master_Write
  2264                           
  2265                           ;colour_click.c: 43:     I2C_2_Master_Write(0x80 | address);
  2266  0061C4  500D               	movf	colourclick_writetoaddr@address^0,w,c
  2267  0061C6  0980               	iorlw	128
  2268  0061C8  EC6D  F031         	call	_I2C_2_Master_Write
  2269                           
  2270                           ;colour_click.c: 44:     I2C_2_Master_Write(value);
  2271  0061CC  500C               	movf	colourclick_writetoaddr@value^0,w,c
  2272  0061CE  EC6D  F031         	call	_I2C_2_Master_Write
  2273                           
  2274                           ;colour_click.c: 45:     I2C_2_Master_Stop();
  2275  0061D2  EC7F  F031         	call	_I2C_2_Master_Stop	;wreg free
  2276  0061D6  0012               	return		;funcret
  2277  0061D8                     __end_of_colourclick_writetoaddr:
  2278                           	callstack 0
  2279                           
  2280 ;; *************** function _colourclickLEDs_init *****************
  2281 ;; Defined at:
  2282 ;;		line 49 in file "buttons_n_LEDs.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 8
  2303 ;; This function calls:
  2304 ;;		_colourclickLEDs_C
  2305 ;; This function is called by:
  2306 ;;		_colourclick_init
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text6
  2311  0062CC                     __ptext6:
  2312                           	callstack 0
  2313  0062CC                     _colourclickLEDs_init:
  2314                           	callstack 21
  2315  0062CC                     
  2316                           ;buttons_n_LEDs.c: 52:     TRISGbits.TRISG1 = 0;
  2317  0062CC  9287               	bcf	135,1,c	;volatile
  2318                           
  2319                           ;buttons_n_LEDs.c: 53:     TRISAbits.TRISA4 = 0;
  2320  0062CE  9881               	bcf	129,4,c	;volatile
  2321                           
  2322                           ;buttons_n_LEDs.c: 54:     TRISFbits.TRISF7 = 0;
  2323  0062D0  9E86               	bcf	134,7,c	;volatile
  2324  0062D2                     
  2325                           ;buttons_n_LEDs.c: 57:     colourclickLEDs_C(0);
  2326  0062D2  0E00               	movlw	0
  2327  0062D4  ECCB  F030         	call	_colourclickLEDs_C
  2328  0062D8  0012               	return		;funcret
  2329  0062DA                     __end_of_colourclickLEDs_init:
  2330                           	callstack 0
  2331                           
  2332 ;; *************** function _I2C_2_Master_Init *****************
  2333 ;; Defined at:
  2334 ;;		line 8 in file "I2C.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels used: 1
  2354 ;; Hardware stack levels required when called: 7
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_colourclick_init
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text7
  2363  0060D2                     __ptext7:
  2364                           	callstack 0
  2365  0060D2                     _I2C_2_Master_Init:
  2366                           	callstack 22
  2367  0060D2                     
  2368                           ;I2C.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  2369  0060D2  010E               	movlb	14	; () banked
  2370  0060D4  51D9               	movf	217,w,b	;volatile
  2371  0060D6  0BF0               	andlw	-16
  2372  0060D8  0908               	iorlw	8
  2373  0060DA  6FD9               	movwf	217,b	;volatile
  2374  0060DC                     
  2375                           ; BSR set to: 14
  2376                           ;I2C.c: 12:   SSP2CON1bits.SSPEN = 1;
  2377  0060DC  8BD9               	bsf	217,5,b	;volatile
  2378                           
  2379                           ;I2C.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  2380  0060DE  0E9F               	movlw	159
  2381  0060E0  6FD6               	movwf	214,b	;volatile
  2382  0060E2                     
  2383                           ; BSR set to: 14
  2384                           ;I2C.c: 16:   TRISDbits.TRISD5 = 1;
  2385  0060E2  8A84               	bsf	132,5,c	;volatile
  2386  0060E4                     
  2387                           ; BSR set to: 14
  2388                           ;I2C.c: 17:   TRISDbits.TRISD6 = 1;
  2389  0060E4  8C84               	bsf	132,6,c	;volatile
  2390  0060E6                     
  2391                           ; BSR set to: 14
  2392                           ;I2C.c: 18:   ANSELDbits.ANSELD5=0;
  2393  0060E6  9BA7               	bcf	167,5,b	;volatile
  2394  0060E8                     
  2395                           ; BSR set to: 14
  2396                           ;I2C.c: 19:   ANSELDbits.ANSELD6=0;
  2397  0060E8  9DA7               	bcf	167,6,b	;volatile
  2398                           
  2399                           ;I2C.c: 20:   SSP2DATPPS=0x1D;
  2400  0060EA  0E1D               	movlw	29
  2401  0060EC  6F1D               	movwf	29,b	;volatile
  2402                           
  2403                           ;I2C.c: 21:   SSP2CLKPPS=0x1E;
  2404  0060EE  0E1E               	movlw	30
  2405  0060F0  6F1C               	movwf	28,b	;volatile
  2406                           
  2407                           ;I2C.c: 22:   RD5PPS=0x1C;
  2408  0060F2  0E1C               	movlw	28
  2409  0060F4  6F6F               	movwf	111,b	;volatile
  2410                           
  2411                           ;I2C.c: 23:   RD6PPS=0x1B;
  2412  0060F6  0E1B               	movlw	27
  2413  0060F8  6F70               	movwf	112,b	;volatile
  2414  0060FA                     
  2415                           ; BSR set to: 14
  2416  0060FA  0012               	return		;funcret
  2417  0060FC                     __end_of_I2C_2_Master_Init:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _colourclick_calibration *****************
  2421 ;; Defined at:
  2422 ;;		line 176 in file "colour_click.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  current         8  119[BANK1 ] struct .
  2427 ;;  initial         8  111[BANK1 ] struct .
  2428 ;;  i               1  110[BANK1 ] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2439 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2440 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;Total ram usage:       19 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 16
  2445 ;; This function calls:
  2446 ;;		_colourclickLEDs_C
  2447 ;;		_colourclick_readRGBC
  2448 ;;		_colourclick_testing
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text8
  2455  004B32                     __ptext8:
  2456                           	callstack 0
  2457  004B32                     _colourclick_calibration:
  2458                           	callstack 14
  2459  004B32                     l367:
  2460  004B32  B48E               	btfsc	142,2,c	;volatile
  2461  004B34  EF9E  F025         	goto	u11681
  2462  004B38  EFA0  F025         	goto	u11680
  2463  004B3C                     u11681:
  2464  004B3C  EF99  F025         	goto	l367
  2465  004B40                     u11680:
  2466  004B40                     
  2467                           ;colour_click.c: 179:     LATDbits.LATD3 = 1;
  2468  004B40  867C               	bsf	124,3,c	;volatile
  2469  004B42                     
  2470                           ;colour_click.c: 180:     colourclickLEDs_C(1);
  2471  004B42  0E01               	movlw	1
  2472  004B44  ECCB  F030         	call	_colourclickLEDs_C
  2473  004B48                     
  2474                           ;colour_click.c: 181:     LATDbits.LATD7 = 1;
  2475  004B48  8E7C               	bsf	124,7,c	;volatile
  2476  004B4A                     
  2477                           ;colour_click.c: 182:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2478  004B4A  0E52               	movlw	82
  2479  004B4C  0100               	movlb	0	; () banked
  2480  004B4E  6FF1               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2481  004B50  0E2B               	movlw	43
  2482  004B52  6FF0               	movwf	??_colourclick_calibration& (0+255),b
  2483  004B54  0E00               	movlw	0
  2484  004B56                     u12547:
  2485  004B56  2EE8               	decfsz	wreg,f,c
  2486  004B58  D7FE               	bra	u12547
  2487  004B5A  2FF0               	decfsz	??_colourclick_calibration& (0+255),f,b
  2488  004B5C  D7FC               	bra	u12547
  2489  004B5E  2FF1               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2490  004B60  D7FA               	bra	u12547
  2491  004B62  F000               	nop	
  2492  004B64                     
  2493                           ;colour_click.c: 183:     colourclick_readRGBC(&initial);
  2494  004B64  0E6F               	movlw	low colourclick_calibration@initial
  2495  004B66  6E15               	movwf	colourclick_readRGBC@tmpval^0,c
  2496  004B68  0E01               	movlw	high colourclick_calibration@initial
  2497  004B6A  6E16               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2498  004B6C  ECFF  F02C         	call	_colourclick_readRGBC	;wreg free
  2499  004B70                     
  2500                           ;colour_click.c: 184:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2501  004B70  0E52               	movlw	82
  2502  004B72  0100               	movlb	0	; () banked
  2503  004B74  6FF1               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2504  004B76  0E2B               	movlw	43
  2505  004B78  6FF0               	movwf	??_colourclick_calibration& (0+255),b
  2506  004B7A  0E00               	movlw	0
  2507  004B7C                     u12557:
  2508  004B7C  2EE8               	decfsz	wreg,f,c
  2509  004B7E  D7FE               	bra	u12557
  2510  004B80  2FF0               	decfsz	??_colourclick_calibration& (0+255),f,b
  2511  004B82  D7FC               	bra	u12557
  2512  004B84  2FF1               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2513  004B86  D7FA               	bra	u12557
  2514  004B88  F000               	nop	
  2515  004B8A                     
  2516                           ;colour_click.c: 185:     LATDbits.LATD7 = 0;
  2517  004B8A  9E7C               	bcf	124,7,c	;volatile
  2518  004B8C                     
  2519                           ;colour_click.c: 187:     unsigned char i;;colour_click.c: 188:     RGBC_val current;;co
      +                          lour_click.c: 189:     for (i=0; i<8; i++) {
  2520  004B8C  0E00               	movlw	0
  2521  004B8E  0101               	movlb	1	; () banked
  2522  004B90  6F6E               	movwf	colourclick_calibration@i& (0+255),b
  2523  004B92                     l372:
  2524  004B92  B48E               	btfsc	142,2,c	;volatile
  2525  004B94  EFCE  F025         	goto	u11691
  2526  004B98  EFD0  F025         	goto	u11690
  2527  004B9C                     u11691:
  2528  004B9C  EFC9  F025         	goto	l372
  2529  004BA0                     u11690:
  2530  004BA0                     
  2531                           ;colour_click.c: 191:         LATDbits.LATD7 = 1;
  2532  004BA0  8E7C               	bsf	124,7,c	;volatile
  2533  004BA2                     
  2534                           ;colour_click.c: 192:         colourclick_readRGBC(&current);
  2535  004BA2  0E77               	movlw	low colourclick_calibration@current
  2536  004BA4  6E15               	movwf	colourclick_readRGBC@tmpval^0,c
  2537  004BA6  0E01               	movlw	high colourclick_calibration@current
  2538  004BA8  6E16               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2539  004BAA  ECFF  F02C         	call	_colourclick_readRGBC	;wreg free
  2540  004BAE                     
  2541                           ;colour_click.c: 193:         if ((current.C<initial.C) && (current.C>interrupts_lowerbo
      +                          und)) {
  2542  004BAE  0101               	movlb	1	; () banked
  2543  004BB0  5175               	movf	(colourclick_calibration@initial+6)& (0+255),w,b
  2544  004BB2  5D7D               	subwf	(colourclick_calibration@current+6)& (0+255),w,b
  2545  004BB4  5176               	movf	(colourclick_calibration@initial+7)& (0+255),w,b
  2546  004BB6  597E               	subwfb	(colourclick_calibration@current+7)& (0+255),w,b
  2547  004BB8  B0D8               	btfsc	status,0,c
  2548  004BBA  EFE1  F025         	goto	u11701
  2549  004BBE  EFE3  F025         	goto	u11700
  2550  004BC2                     u11701:
  2551  004BC2  EFF4  F025         	goto	l8892
  2552  004BC6                     u11700:
  2553  004BC6                     
  2554                           ; BSR set to: 1
  2555  004BC6  517D               	movf	(colourclick_calibration@current+6)& (0+255),w,b
  2556  004BC8  5C51               	subwf	_interrupts_lowerbound^0,w,c	;volatile
  2557  004BCA  517E               	movf	(colourclick_calibration@current+7)& (0+255),w,b
  2558  004BCC  5852               	subwfb	(_interrupts_lowerbound+1)^0,w,c	;volatile
  2559  004BCE  B0D8               	btfsc	status,0,c
  2560  004BD0  EFEC  F025         	goto	u11711
  2561  004BD4  EFEE  F025         	goto	u11710
  2562  004BD8                     u11711:
  2563  004BD8  EFF4  F025         	goto	l8892
  2564  004BDC                     u11710:
  2565  004BDC                     
  2566                           ; BSR set to: 1
  2567                           ;colour_click.c: 194:             interrupts_lowerbound = current.C;
  2568  004BDC  C17D  F051         	movff	colourclick_calibration@current+6,_interrupts_lowerbound	;volatile
  2569  004BE0  C17E  F052         	movff	colourclick_calibration@current+7,_interrupts_lowerbound+1	;volatile
  2570                           
  2571                           ;colour_click.c: 195:         } else if ((current.C>initial.C) && (current.C<interrupts_
      +                          upperbound)) {
  2572  004BE4  EF0E  F026         	goto	l8898
  2573  004BE8                     l8892:
  2574                           
  2575                           ; BSR set to: 1
  2576  004BE8  517D               	movf	(colourclick_calibration@current+6)& (0+255),w,b
  2577  004BEA  5D75               	subwf	(colourclick_calibration@initial+6)& (0+255),w,b
  2578  004BEC  517E               	movf	(colourclick_calibration@current+7)& (0+255),w,b
  2579  004BEE  5976               	subwfb	(colourclick_calibration@initial+7)& (0+255),w,b
  2580  004BF0  B0D8               	btfsc	status,0,c
  2581  004BF2  EFFD  F025         	goto	u11721
  2582  004BF6  EFFF  F025         	goto	u11720
  2583  004BFA                     u11721:
  2584  004BFA  EF0E  F026         	goto	l8898
  2585  004BFE                     u11720:
  2586  004BFE                     
  2587                           ; BSR set to: 1
  2588  004BFE  5054               	movf	_interrupts_upperbound^0,w,c	;volatile
  2589  004C00  5D7D               	subwf	(colourclick_calibration@current+6)& (0+255),w,b
  2590  004C02  5055               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
  2591  004C04  597E               	subwfb	(colourclick_calibration@current+7)& (0+255),w,b
  2592  004C06  B0D8               	btfsc	status,0,c
  2593  004C08  EF08  F026         	goto	u11731
  2594  004C0C  EF0A  F026         	goto	u11730
  2595  004C10                     u11731:
  2596  004C10  EF0E  F026         	goto	l8898
  2597  004C14                     u11730:
  2598  004C14                     
  2599                           ; BSR set to: 1
  2600                           ;colour_click.c: 196:             interrupts_upperbound = current.C;
  2601  004C14  C17D  F054         	movff	colourclick_calibration@current+6,_interrupts_upperbound	;volatile
  2602  004C18  C17E  F055         	movff	colourclick_calibration@current+7,_interrupts_upperbound+1	;volatile
  2603  004C1C                     l8898:
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;colour_click.c: 198:         _delay((unsigned long)((200)*(64000000/4000.0)));
  2607  004C1C  0E11               	movlw	17
  2608  004C1E  0100               	movlb	0	; () banked
  2609  004C20  6FF1               	movwf	(??_colourclick_calibration+1)& (0+255),b
  2610  004C22  0E3C               	movlw	60
  2611  004C24  6FF0               	movwf	??_colourclick_calibration& (0+255),b
  2612  004C26  0ECB               	movlw	203
  2613  004C28                     u12567:
  2614  004C28  2EE8               	decfsz	wreg,f,c
  2615  004C2A  D7FE               	bra	u12567
  2616  004C2C  2FF0               	decfsz	??_colourclick_calibration& (0+255),f,b
  2617  004C2E  D7FC               	bra	u12567
  2618  004C30  2FF1               	decfsz	(??_colourclick_calibration+1)& (0+255),f,b
  2619  004C32  D7FA               	bra	u12567
  2620  004C34                     
  2621                           ;colour_click.c: 199:         colourclick_testing(&initial, &current);
  2622  004C34  0E6F               	movlw	low colourclick_calibration@initial
  2623  004C36  0100               	movlb	0	; () banked
  2624  004C38  6FEA               	movwf	colourclick_testing@initial& (0+255),b
  2625  004C3A  0E01               	movlw	high colourclick_calibration@initial
  2626  004C3C  6FEB               	movwf	(colourclick_testing@initial+1)& (0+255),b
  2627  004C3E  0E77               	movlw	low colourclick_calibration@current
  2628  004C40  6FEC               	movwf	colourclick_testing@current& (0+255),b
  2629  004C42  0E01               	movlw	high colourclick_calibration@current
  2630  004C44  6FED               	movwf	(colourclick_testing@current+1)& (0+255),b
  2631  004C46  EC57  F029         	call	_colourclick_testing	;wreg free
  2632  004C4A                     
  2633                           ;colour_click.c: 200:         LATDbits.LATD7 = 0;
  2634  004C4A  9E7C               	bcf	124,7,c	;volatile
  2635  004C4C                     
  2636                           ;colour_click.c: 201:     }
  2637  004C4C  0101               	movlb	1	; () banked
  2638  004C4E  2B6E               	incf	colourclick_calibration@i& (0+255),f,b
  2639  004C50                     
  2640                           ; BSR set to: 1
  2641  004C50  0E07               	movlw	7
  2642  004C52  656E               	cpfsgt	colourclick_calibration@i& (0+255),b
  2643  004C54  EF2E  F026         	goto	u11741
  2644  004C58  EF30  F026         	goto	u11740
  2645  004C5C                     u11741:
  2646  004C5C  EFC9  F025         	goto	l372
  2647  004C60                     u11740:
  2648  004C60                     
  2649                           ; BSR set to: 1
  2650                           ;colour_click.c: 202:     LATDbits.LATD3 = 0;
  2651  004C60  967C               	bcf	124,3,c	;volatile
  2652  004C62                     
  2653                           ; BSR set to: 1
  2654                           ;colour_click.c: 203:     colourclickLEDs_C(0);
  2655  004C62  0E00               	movlw	0
  2656  004C64  ECCB  F030         	call	_colourclickLEDs_C
  2657  004C68  0012               	return		;funcret
  2658  004C6A                     __end_of_colourclick_calibration:
  2659                           	callstack 0
  2660                           
  2661 ;; *************** function _colourclick_testing *****************
  2662 ;; Defined at:
  2663 ;;		line 206 in file "colour_click.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  initial         2  138[BANK0 ] PTR struct .
  2666 ;;		 -> colourclick_calibration@initial(8), 
  2667 ;;  current         2  140[BANK0 ] PTR struct .
  2668 ;;		 -> colourclick_calibration@current(8), 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  buf           100    0[BANK1 ] unsigned char [100]
  2671 ;;  C               2  108[BANK1 ] unsigned int 
  2672 ;;  B               2  106[BANK1 ] unsigned int 
  2673 ;;  G               2  104[BANK1 ] unsigned int 
  2674 ;;  R               2  102[BANK1 ] unsigned int 
  2675 ;;  ambient         2  100[BANK1 ] unsigned int 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2685 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;      Locals:         0       0     110       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;      Totals:         0       6     110       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;Total ram usage:      116 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 15
  2692 ;; This function calls:
  2693 ;;		_sendStringSerial4
  2694 ;;		_sprintf
  2695 ;; This function is called by:
  2696 ;;		_colourclick_calibration
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text9
  2701  0052AE                     __ptext9:
  2702                           	callstack 0
  2703  0052AE                     _colourclick_testing:
  2704                           	callstack 14
  2705  0052AE                     
  2706                           ;colour_click.c: 206: void colourclick_testing(RGBC_val *initial, RGBC_val *current);col
      +                          our_click.c: 207: {;colour_click.c: 208:     unsigned int ambient = initial->C;
  2707  0052AE  0100               	movlb	0	; () banked
  2708  0052B0  EE20 F006          	lfsr	2,6
  2709  0052B4  51EA               	movf	colourclick_testing@initial& (0+255),w,b
  2710  0052B6  26D9               	addwf	fsr2l,f,c
  2711  0052B8  51EB               	movf	(colourclick_testing@initial+1)& (0+255),w,b
  2712  0052BA  22DA               	addwfc	fsr2h,f,c
  2713  0052BC  CFDE F164          	movff	postinc2,colourclick_testing@ambient
  2714  0052C0  CFDD F165          	movff	postdec2,colourclick_testing@ambient+1
  2715  0052C4                     
  2716                           ; BSR set to: 0
  2717                           ;colour_click.c: 209:     unsigned int R = current->R;
  2718  0052C4  C0EC  FFD9         	movff	colourclick_testing@current,fsr2l
  2719  0052C8  C0ED  FFDA         	movff	colourclick_testing@current+1,fsr2h
  2720  0052CC  CFDE F166          	movff	postinc2,colourclick_testing@R
  2721  0052D0  CFDD F167          	movff	postdec2,colourclick_testing@R+1
  2722  0052D4                     
  2723                           ; BSR set to: 0
  2724                           ;colour_click.c: 210:     unsigned int G = current->G;
  2725  0052D4  EE20 F002          	lfsr	2,2
  2726  0052D8  51EC               	movf	colourclick_testing@current& (0+255),w,b
  2727  0052DA  26D9               	addwf	fsr2l,f,c
  2728  0052DC  51ED               	movf	(colourclick_testing@current+1)& (0+255),w,b
  2729  0052DE  22DA               	addwfc	fsr2h,f,c
  2730  0052E0  CFDE F168          	movff	postinc2,colourclick_testing@G
  2731  0052E4  CFDD F169          	movff	postdec2,colourclick_testing@G+1
  2732  0052E8                     
  2733                           ; BSR set to: 0
  2734                           ;colour_click.c: 211:     unsigned int B = current->B;
  2735  0052E8  EE20 F004          	lfsr	2,4
  2736  0052EC  51EC               	movf	colourclick_testing@current& (0+255),w,b
  2737  0052EE  26D9               	addwf	fsr2l,f,c
  2738  0052F0  51ED               	movf	(colourclick_testing@current+1)& (0+255),w,b
  2739  0052F2  22DA               	addwfc	fsr2h,f,c
  2740  0052F4  CFDE F16A          	movff	postinc2,colourclick_testing@B
  2741  0052F8  CFDD F16B          	movff	postdec2,colourclick_testing@B+1
  2742  0052FC                     
  2743                           ; BSR set to: 0
  2744                           ;colour_click.c: 212:     unsigned int C = current->C;
  2745  0052FC  EE20 F006          	lfsr	2,6
  2746  005300  51EC               	movf	colourclick_testing@current& (0+255),w,b
  2747  005302  26D9               	addwf	fsr2l,f,c
  2748  005304  51ED               	movf	(colourclick_testing@current+1)& (0+255),w,b
  2749  005306  22DA               	addwfc	fsr2h,f,c
  2750  005308  CFDE F16C          	movff	postinc2,colourclick_testing@C
  2751  00530C  CFDD F16D          	movff	postdec2,colourclick_testing@C+1
  2752  005310                     
  2753                           ; BSR set to: 0
  2754                           ;colour_click.c: 214:     char buf[100];;colour_click.c: 215:     sprintf(buf,"RGBC: %i 
      +                          %i %i %i     Threshold: %i %i %i\n\r", R, G, B, C, interrupts_lowerbound, ambient, inter
      +                          rupts_upperbound);
  2755  005310  0E00               	movlw	low colourclick_testing@buf
  2756  005312  6FC8               	movwf	sprintf@s& (0+255),b
  2757  005314  0E01               	movlw	high colourclick_testing@buf
  2758  005316  6FC9               	movwf	(sprintf@s+1)& (0+255),b
  2759  005318  0E41               	movlw	low STR_19
  2760  00531A  6FCA               	movwf	sprintf@fmt& (0+255),b
  2761  00531C  0E0E               	movlw	high STR_19
  2762  00531E  6FCB               	movwf	(sprintf@fmt+1)& (0+255),b
  2763  005320  C166  F0CC         	movff	colourclick_testing@R,?_sprintf+4
  2764  005324  C167  F0CD         	movff	colourclick_testing@R+1,?_sprintf+5
  2765  005328  C168  F0CE         	movff	colourclick_testing@G,?_sprintf+6
  2766  00532C  C169  F0CF         	movff	colourclick_testing@G+1,?_sprintf+7
  2767  005330  C16A  F0D0         	movff	colourclick_testing@B,?_sprintf+8
  2768  005334  C16B  F0D1         	movff	colourclick_testing@B+1,?_sprintf+9
  2769  005338  C16C  F0D2         	movff	colourclick_testing@C,?_sprintf+10
  2770  00533C  C16D  F0D3         	movff	colourclick_testing@C+1,?_sprintf+11
  2771  005340  C051  F0D4         	movff	_interrupts_lowerbound,?_sprintf+12	;volatile
  2772  005344  C052  F0D5         	movff	_interrupts_lowerbound+1,?_sprintf+13	;volatile
  2773  005348  C164  F0D6         	movff	colourclick_testing@ambient,?_sprintf+14
  2774  00534C  C165  F0D7         	movff	colourclick_testing@ambient+1,?_sprintf+15
  2775  005350  C054  F0D8         	movff	_interrupts_upperbound,?_sprintf+16	;volatile
  2776  005354  C055  F0D9         	movff	_interrupts_upperbound+1,?_sprintf+17	;volatile
  2777  005358  EC59  F02D         	call	_sprintf	;wreg free
  2778  00535C                     
  2779                           ;colour_click.c: 217:     sendStringSerial4(buf);
  2780  00535C  0E00               	movlw	low colourclick_testing@buf
  2781  00535E  6E0B               	movwf	sendStringSerial4@string^0,c
  2782  005360  0E01               	movlw	high colourclick_testing@buf
  2783  005362  6E0C               	movwf	(sendStringSerial4@string+1)^0,c
  2784  005364  EC51  F030         	call	_sendStringSerial4	;wreg free
  2785  005368                     
  2786                           ;colour_click.c: 218:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2787  005368  0E29               	movlw	41
  2788  00536A  0100               	movlb	0	; () banked
  2789  00536C  6FEF               	movwf	(??_colourclick_testing+1)& (0+255),b
  2790  00536E  0E96               	movlw	150
  2791  005370  6FEE               	movwf	??_colourclick_testing& (0+255),b
  2792  005372  0E7F               	movlw	127
  2793  005374                     u12577:
  2794  005374  2EE8               	decfsz	wreg,f,c
  2795  005376  D7FE               	bra	u12577
  2796  005378  2FEE               	decfsz	??_colourclick_testing& (0+255),f,b
  2797  00537A  D7FC               	bra	u12577
  2798  00537C  2FEF               	decfsz	(??_colourclick_testing+1)& (0+255),f,b
  2799  00537E  D7FA               	bra	u12577
  2800  005380  0012               	return		;funcret
  2801  005382                     __end_of_colourclick_testing:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _sprintf *****************
  2805 ;; Defined at:
  2806 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  s               2  104[BANK0 ] PTR unsigned char 
  2809 ;;		 -> colourclick_testing@buf(100), colourcards_testingRGBC@buf(30), 
  2810 ;;  fmt             2  106[BANK0 ] PTR const unsigned char 
  2811 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  2812 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  2813 ;;		 -> STR_3(64), STR_1(64), 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  f               6  132[BANK0 ] struct _IO_FILE
  2816 ;;  ap              2  130[BANK0 ] PTR void [1]
  2817 ;;		 -> ?_sprintf(2), 
  2818 ;;  ret             2    0        int 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  2  104[BANK0 ] int 
  2821 ;; Registers used:
  2822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2828 ;;      Params:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2829 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2831 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2832 ;;Total ram usage:       34 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 14
  2835 ;; This function calls:
  2836 ;;		_vfprintf
  2837 ;; This function is called by:
  2838 ;;		_colourclick_testing
  2839 ;;		_colourcards_testingRGBC
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text10
  2844  005AB2                     __ptext10:
  2845                           	callstack 0
  2846  005AB2                     _sprintf:
  2847                           	callstack 14
  2848  005AB2  0ECC               	movlw	low (?_sprintf+4)
  2849  005AB4  0100               	movlb	0	; () banked
  2850  005AB6  6FE2               	movwf	sprintf@ap& (0+255),b
  2851  005AB8  0E00               	movlw	high (?_sprintf+4)
  2852  005ABA  6FE3               	movwf	(sprintf@ap+1)& (0+255),b
  2853  005ABC  C0C8  F0E4         	movff	sprintf@s,sprintf@f
  2854  005AC0  C0C9  F0E5         	movff	sprintf@s+1,sprintf@f+1
  2855  005AC4                     
  2856                           ; BSR set to: 0
  2857  005AC4  0E00               	movlw	0
  2858  005AC6  6FE7               	movwf	(sprintf@f+3)& (0+255),b
  2859  005AC8  0E00               	movlw	0
  2860  005ACA  6FE6               	movwf	(sprintf@f+2)& (0+255),b
  2861  005ACC                     
  2862                           ; BSR set to: 0
  2863  005ACC  0E00               	movlw	0
  2864  005ACE  6FE9               	movwf	(sprintf@f+5)& (0+255),b
  2865  005AD0  0E00               	movlw	0
  2866  005AD2  6FE8               	movwf	(sprintf@f+4)& (0+255),b
  2867  005AD4                     
  2868                           ; BSR set to: 0
  2869  005AD4  0EE4               	movlw	low sprintf@f
  2870  005AD6  6FC0               	movwf	vfprintf@fp& (0+255),b
  2871  005AD8  0E00               	movlw	high sprintf@f
  2872  005ADA  6FC1               	movwf	(vfprintf@fp+1)& (0+255),b
  2873  005ADC  C0CA  F0C2         	movff	sprintf@fmt,vfprintf@fmt
  2874  005AE0  C0CB  F0C3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2875  005AE4  0EE2               	movlw	low sprintf@ap
  2876  005AE6  6FC4               	movwf	vfprintf@ap& (0+255),b
  2877  005AE8  0E00               	movlw	high sprintf@ap
  2878  005AEA  6FC5               	movwf	(vfprintf@ap+1)& (0+255),b
  2879  005AEC  EC69  F02C         	call	_vfprintf	;wreg free
  2880  005AF0  0100               	movlb	0	; () banked
  2881  005AF2  51E6               	movf	(sprintf@f+2)& (0+255),w,b
  2882  005AF4  25C8               	addwf	sprintf@s& (0+255),w,b
  2883  005AF6  6ED9               	movwf	fsr2l,c
  2884  005AF8  51E7               	movf	(sprintf@f+3)& (0+255),w,b
  2885  005AFA  21C9               	addwfc	(sprintf@s+1)& (0+255),w,b
  2886  005AFC  6EDA               	movwf	fsr2h,c
  2887  005AFE  0E00               	movlw	0
  2888  005B00  6EDF               	movwf	indf2,c
  2889  005B02                     
  2890                           ; BSR set to: 0
  2891  005B02  0012               	return		;funcret
  2892  005B04                     __end_of_sprintf:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _vfprintf *****************
  2896 ;; Defined at:
  2897 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  fp              2   96[BANK0 ] PTR struct _IO_FILE
  2900 ;;		 -> sprintf@f(6), 
  2901 ;;  fmt             2   98[BANK0 ] PTR const unsigned char 
  2902 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  2903 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  2904 ;;		 -> STR_3(64), STR_1(64), 
  2905 ;;  ap              2  100[BANK0 ] PTR PTR void 
  2906 ;;		 -> sprintf@ap(2), 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  cfmt            2  102[BANK0 ] PTR unsigned char 
  2909 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  2910 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  2911 ;;		 -> STR_3(64), STR_1(64), 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2   96[BANK0 ] int 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2921 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2922 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;Total ram usage:        8 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 13
  2928 ;; This function calls:
  2929 ;;		_vfpfcnvrt
  2930 ;; This function is called by:
  2931 ;;		_sprintf
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text11
  2936  0058D2                     __ptext11:
  2937                           	callstack 0
  2938  0058D2                     _vfprintf:
  2939                           	callstack 14
  2940  0058D2                     
  2941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2942  0058D2  C0C2  F0C6         	movff	vfprintf@fmt,vfprintf@cfmt
  2943  0058D6  C0C3  F0C7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2944  0058DA                     
  2945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2946  0058DA  0E00               	movlw	0
  2947  0058DC  0101               	movlb	1	; () banked
  2948  0058DE  6FD8               	movwf	(_nout+1)& (0+255),b
  2949  0058E0  0E00               	movlw	0
  2950  0058E2  6FD7               	movwf	_nout& (0+255),b
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2953  0058E4  EF8B  F02C         	goto	l8468
  2954  0058E8                     l8466:
  2955                           
  2956                           ; BSR set to: 1
  2957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2958  0058E8  C0C0  F0A4         	movff	vfprintf@fp,vfpfcnvrt@fp
  2959  0058EC  C0C1  F0A5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2960  0058F0  0EC6               	movlw	low vfprintf@cfmt
  2961  0058F2  0100               	movlb	0	; () banked
  2962  0058F4  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  2963  0058F6  0E00               	movlw	high vfprintf@cfmt
  2964  0058F8  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2965  0058FA  C0C4  F0A8         	movff	vfprintf@ap,vfpfcnvrt@ap
  2966  0058FE  C0C5  F0A9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2967  005902  EC54  F011         	call	_vfpfcnvrt	;wreg free
  2968  005906  0100               	movlb	0	; () banked
  2969  005908  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  2970  00590A  0101               	movlb	1	; () banked
  2971  00590C  27D7               	addwf	_nout& (0+255),f,b
  2972  00590E  0100               	movlb	0	; () banked
  2973  005910  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2974  005912  0101               	movlb	1	; () banked
  2975  005914  23D8               	addwfc	(_nout+1)& (0+255),f,b
  2976  005916                     l8468:
  2977                           
  2978                           ; BSR set to: 1
  2979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2980  005916  C0C6  FFF6         	movff	vfprintf@cfmt,tblptrl
  2981  00591A  C0C7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2982  00591E                     	if	0	;tblptru may be non-zero
  2983  00591E                     	endif
  2984  00591E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2985  00591E  0E00               	movlw	low (__mediumconst shr (0+16))
  2986  005920  6EF8               	movwf	tblptru,c
  2987  005922                     	endif
  2988  005922  0008               	tblrd		*
  2989  005924  50F5               	movf	tablat,w,c
  2990  005926  0900               	iorlw	0
  2991  005928  A4D8               	btfss	status,2,c
  2992  00592A  EF99  F02C         	goto	u11311
  2993  00592E  EF9B  F02C         	goto	u11310
  2994  005932                     u11311:
  2995  005932  EF74  F02C         	goto	l8466
  2996  005936                     u11310:
  2997  005936                     
  2998                           ; BSR set to: 1
  2999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3000  005936  C1D7  F0C0         	movff	_nout,?_vfprintf
  3001  00593A  C1D8  F0C1         	movff	_nout+1,?_vfprintf+1
  3002  00593E                     
  3003                           ; BSR set to: 1
  3004  00593E  0012               	return		;funcret
  3005  005940                     __end_of_vfprintf:
  3006                           	callstack 0
  3007                           
  3008 ;; *************** function _vfpfcnvrt *****************
  3009 ;; Defined at:
  3010 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  3013 ;;		 -> sprintf@f(6), 
  3014 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  3015 ;;		 -> vfprintf@cfmt(2), 
  3016 ;;  ap              2   72[BANK0 ] PTR PTR void 
  3017 ;;		 -> sprintf@ap(2), 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  ll              8   74[BANK0 ] long long 
  3020 ;;  llu             8    0        unsigned long long 
  3021 ;;  f               4   88[BANK0 ] unsigned long long 
  3022 ;;  ct              3   92[BANK0 ] unsigned char [3]
  3023 ;;  vp              3    0        PTR void 
  3024 ;;  cp              2   82[BANK0 ] PTR unsigned char 
  3025 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(5), 
  3026 ;;		 -> STR_12(7), STR_10(11), STR_8(6), STR_6(5), 
  3027 ;;		 -> STR_4(4), STR_2(7), 
  3028 ;;  i               2    0        int 
  3029 ;;  done            2    0        int 
  3030 ;;  c               1   95[BANK0 ] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  2   68[BANK0 ] int 
  3033 ;; Registers used:
  3034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3040 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Totals:         4      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;Total ram usage:       32 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 12
  3047 ;; This function calls:
  3048 ;;		_atoi
  3049 ;;		_dtoa
  3050 ;;		_efgtoa
  3051 ;;		_fputc
  3052 ;;		_isdigit
  3053 ;;		_isupper
  3054 ;;		_stoa
  3055 ;;		_strncmp
  3056 ;;		_tolower
  3057 ;; This function is called by:
  3058 ;;		_vfprintf
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text12
  3063  0022A8                     __ptext12:
  3064                           	callstack 0
  3065  0022A8                     _vfpfcnvrt:
  3066                           	callstack 14
  3067  0022A8                     
  3068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3069  0022A8  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3070  0022AC  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3071  0022B0  CFDE FFF6          	movff	postinc2,tblptrl
  3072  0022B4  CFDD FFF7          	movff	postdec2,tblptrh
  3073  0022B8                     	if	0	;tblptru may be non-zero
  3074  0022B8                     	endif
  3075  0022B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3076  0022B8  0E00               	movlw	low (__mediumconst shr (0+16))
  3077  0022BA  6EF8               	movwf	tblptru,c
  3078  0022BC                     	endif
  3079  0022BC  0008               	tblrd		*
  3080  0022BE  50F5               	movf	tablat,w,c
  3081  0022C0  0A25               	xorlw	37
  3082  0022C2  A4D8               	btfss	status,2,c
  3083  0022C4  EF66  F011         	goto	u10991
  3084  0022C8  EF68  F011         	goto	u10990
  3085  0022CC                     u10991:
  3086  0022CC  EF2C  F014         	goto	l8364
  3087  0022D0                     u10990:
  3088  0022D0                     
  3089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3090  0022D0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3091  0022D4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3092  0022D8  2ADE               	incf	postinc2,f,c
  3093  0022DA  0E00               	movlw	0
  3094  0022DC  22DD               	addwfc	postdec2,f,c
  3095  0022DE                     
  3096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3097  0022DE  0E00               	movlw	0
  3098  0022E0  0101               	movlb	1	; () banked
  3099  0022E2  6FDA               	movwf	(_width+1)& (0+255),b
  3100  0022E4  0E00               	movlw	0
  3101  0022E6  6FD9               	movwf	_width& (0+255),b
  3102  0022E8  C1D9  F04F         	movff	_width,_flags
  3103  0022EC  C1DA  F050         	movff	_width+1,_flags+1
  3104  0022F0                     
  3105                           ; BSR set to: 1
  3106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3107  0022F0  684D               	setf	_prec^0,c
  3108  0022F2  684E               	setf	(_prec+1)^0,c
  3109  0022F4                     
  3110                           ; BSR set to: 1
  3111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3112  0022F4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3113  0022F8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3114  0022FC  CFDE FFF6          	movff	postinc2,tblptrl
  3115  002300  CFDD FFF7          	movff	postdec2,tblptrh
  3116  002304                     	if	0	;tblptru may be non-zero
  3117  002304                     	endif
  3118  002304                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3119  002304  0E00               	movlw	low (__mediumconst shr (0+16))
  3120  002306  6EF8               	movwf	tblptru,c
  3121  002308                     	endif
  3122  002308  0008               	tblrd		*
  3123  00230A  50F5               	movf	tablat,w,c
  3124  00230C  0A2E               	xorlw	46
  3125  00230E  A4D8               	btfss	status,2,c
  3126  002310  EF8C  F011         	goto	u11001
  3127  002314  EF8E  F011         	goto	u11000
  3128  002318                     u11001:
  3129  002318  EF10  F012         	goto	l8292
  3130  00231C                     u11000:
  3131  00231C                     
  3132                           ; BSR set to: 1
  3133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3134  00231C  0E00               	movlw	0
  3135  00231E  6E4E               	movwf	(_prec+1)^0,c
  3136  002320  0E00               	movlw	0
  3137  002322  6E4D               	movwf	_prec^0,c
  3138  002324                     
  3139                           ; BSR set to: 1
  3140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3141  002324  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3142  002328  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3143  00232C  2ADE               	incf	postinc2,f,c
  3144  00232E  0E00               	movlw	0
  3145  002330  22DD               	addwfc	postdec2,f,c
  3146  002332                     
  3147                           ; BSR set to: 1
  3148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3149  002332  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3150  002336  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3151  00233A  CFDE FFF6          	movff	postinc2,tblptrl
  3152  00233E  CFDD FFF7          	movff	postdec2,tblptrh
  3153  002342                     	if	0	;tblptru may be non-zero
  3154  002342                     	endif
  3155  002342                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3156  002342  0E00               	movlw	low (__mediumconst shr (0+16))
  3157  002344  6EF8               	movwf	tblptru,c
  3158  002346                     	endif
  3159  002346  0008               	tblrd		*
  3160  002348  50F5               	movf	tablat,w,c
  3161  00234A  0A2A               	xorlw	42
  3162  00234C  A4D8               	btfss	status,2,c
  3163  00234E  EFAB  F011         	goto	u11011
  3164  002352  EFAD  F011         	goto	u11010
  3165  002356                     u11011:
  3166  002356  EFCA  F011         	goto	l8282
  3167  00235A                     u11010:
  3168  00235A                     
  3169                           ; BSR set to: 1
  3170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3171  00235A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3172  00235E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3173  002362  2ADE               	incf	postinc2,f,c
  3174  002364  0E00               	movlw	0
  3175  002366  22DD               	addwfc	postdec2,f,c
  3176                           
  3177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3178  002368  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3179  00236C  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3180  002370  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3181  002374  0E02               	movlw	2
  3182  002376  26DE               	addwf	postinc2,f,c
  3183  002378  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3184  00237C  0E00               	movlw	0
  3185  00237E  22DD               	addwfc	postdec2,f,c
  3186  002380  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3187  002384  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3188  002388  CFDE F04D          	movff	postinc2,_prec
  3189  00238C  CFDD F04E          	movff	postdec2,_prec+1
  3190                           
  3191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3192  002390  EF10  F012         	goto	l8292
  3193  002394                     l8282:
  3194                           
  3195                           ; BSR set to: 1
  3196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3197  002394  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3198  002398  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3199  00239C  CFDE F011          	movff	postinc2,atoi@s
  3200  0023A0  CFDD F012          	movff	postdec2,atoi@s+1
  3201  0023A4  ECB5  F01F         	call	_atoi	;wreg free
  3202  0023A8  C011  F04D         	movff	?_atoi,_prec
  3203  0023AC  C012  F04E         	movff	?_atoi+1,_prec+1
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3206  0023B0  EFE1  F011         	goto	l8286
  3207  0023B4                     l8284:
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3211  0023B4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3212  0023B8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3213  0023BC  2ADE               	incf	postinc2,f,c
  3214  0023BE  0E00               	movlw	0
  3215  0023C0  22DD               	addwfc	postdec2,f,c
  3216  0023C2                     l8286:
  3217  0023C2  0ED0               	movlw	208
  3218  0023C4  6E49               	movwf	??_vfpfcnvrt^0,c
  3219  0023C6  0EFF               	movlw	255
  3220  0023C8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3221  0023CA  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3222  0023CE  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3223  0023D2  CFDE FFF6          	movff	postinc2,tblptrl
  3224  0023D6  CFDD FFF7          	movff	postdec2,tblptrh
  3225  0023DA                     	if	0	;tblptru may be non-zero
  3226  0023DA                     	endif
  3227  0023DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3228  0023DA  0E00               	movlw	low (__mediumconst shr (0+16))
  3229  0023DC  6EF8               	movwf	tblptru,c
  3230  0023DE                     	endif
  3231  0023DE  0008               	tblrd		*
  3232  0023E0  50F5               	movf	tablat,w,c
  3233  0023E2  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3234  0023E4  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3235  0023E6  5049               	movf	??_vfpfcnvrt^0,w,c
  3236  0023E8  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3237  0023EA  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3238  0023EC  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3239  0023EE  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3240  0023F0  E10A               	bnz	u11020
  3241  0023F2  0E0A               	movlw	10
  3242  0023F4  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3243  0023F6  A0D8               	btfss	status,0,c
  3244  0023F8  EF00  F012         	goto	u11021
  3245  0023FC  EF03  F012         	goto	u11020
  3246  002400                     u11021:
  3247  002400  0E01               	movlw	1
  3248  002402  EF04  F012         	goto	u11030
  3249  002406                     u11020:
  3250  002406  0E00               	movlw	0
  3251  002408                     u11030:
  3252  002408  0100               	movlb	0	; () banked
  3253  00240A  6FB4               	movwf	_vfpfcnvrt$3164& (0+255),b
  3254  00240C  6BB5               	clrf	(_vfpfcnvrt$3164+1)& (0+255),b
  3255  00240E                     
  3256                           ; BSR set to: 0
  3257  00240E  51B4               	movf	_vfpfcnvrt$3164& (0+255),w,b
  3258  002410  11B5               	iorwf	(_vfpfcnvrt$3164+1)& (0+255),w,b
  3259  002412  A4D8               	btfss	status,2,c
  3260  002414  EF0E  F012         	goto	u11041
  3261  002418  EF10  F012         	goto	u11040
  3262  00241C                     u11041:
  3263  00241C  EFDA  F011         	goto	l8284
  3264  002420                     u11040:
  3265  002420                     l8292:
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3268  002420  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3269  002424  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3270  002428  CFDE FFF6          	movff	postinc2,tblptrl
  3271  00242C  CFDD FFF7          	movff	postdec2,tblptrh
  3272  002430                     	if	0	;tblptru may be non-zero
  3273  002430                     	endif
  3274  002430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3275  002430  0E00               	movlw	low (__mediumconst shr (0+16))
  3276  002432  6EF8               	movwf	tblptru,c
  3277  002434                     	endif
  3278  002434  0008               	tblrd		*
  3279  002436  50F5               	movf	tablat,w,c
  3280  002438  6E10               	movwf	tolower@c^0,c
  3281  00243A  6A11               	clrf	(tolower@c+1)^0,c
  3282  00243C  ECA0  F02C         	call	_tolower	;wreg free
  3283  002440  5010               	movf	?_tolower^0,w,c
  3284  002442  0100               	movlb	0	; () banked
  3285  002444  6FBC               	movwf	vfpfcnvrt@ct& (0+255),b
  3286  002446                     
  3287                           ; BSR set to: 0
  3288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3289  002446  51BC               	movf	vfpfcnvrt@ct& (0+255),w,b
  3290  002448  B4D8               	btfsc	status,2,c
  3291  00244A  EF29  F012         	goto	u11051
  3292  00244E  EF2B  F012         	goto	u11050
  3293  002452                     u11051:
  3294  002452  EF69  F012         	goto	l8302
  3295  002456                     u11050:
  3296  002456                     
  3297                           ; BSR set to: 0
  3298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3299  002456  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3300  00245A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3301  00245E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3302  002462  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3303  002466  0E01               	movlw	1
  3304  002468  2649               	addwf	??_vfpfcnvrt^0,f,c
  3305  00246A  0E00               	movlw	0
  3306  00246C  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3307  00246E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3308  002472  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3309  002476                     	if	0	;tblptru may be non-zero
  3310  002476                     	endif
  3311  002476                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3312  002476  0E00               	movlw	low (__mediumconst shr (0+16))
  3313  002478  6EF8               	movwf	tblptru,c
  3314  00247A                     	endif
  3315  00247A  0008               	tblrd		*
  3316  00247C  50F5               	movf	tablat,w,c
  3317  00247E  6E10               	movwf	tolower@c^0,c
  3318  002480  6A11               	clrf	(tolower@c+1)^0,c
  3319  002482  ECA0  F02C         	call	_tolower	;wreg free
  3320  002486  5010               	movf	?_tolower^0,w,c
  3321  002488  0100               	movlb	0	; () banked
  3322  00248A  6FBD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3323  00248C                     
  3324                           ; BSR set to: 0
  3325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3326  00248C  51BD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3327  00248E  B4D8               	btfsc	status,2,c
  3328  002490  EF4C  F012         	goto	u11061
  3329  002494  EF4E  F012         	goto	u11060
  3330  002498                     u11061:
  3331  002498  EF69  F012         	goto	l8302
  3332  00249C                     u11060:
  3333  00249C                     
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3336  00249C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3337  0024A0  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3338  0024A4  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3339  0024A8  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3340  0024AC  0E02               	movlw	2
  3341  0024AE  2649               	addwf	??_vfpfcnvrt^0,f,c
  3342  0024B0  0E00               	movlw	0
  3343  0024B2  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3344  0024B4  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3345  0024B8  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3346  0024BC                     	if	0	;tblptru may be non-zero
  3347  0024BC                     	endif
  3348  0024BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3349  0024BC  0E00               	movlw	low (__mediumconst shr (0+16))
  3350  0024BE  6EF8               	movwf	tblptru,c
  3351  0024C0                     	endif
  3352  0024C0  0008               	tblrd		*
  3353  0024C2  50F5               	movf	tablat,w,c
  3354  0024C4  6E10               	movwf	tolower@c^0,c
  3355  0024C6  6A11               	clrf	(tolower@c+1)^0,c
  3356  0024C8  ECA0  F02C         	call	_tolower	;wreg free
  3357  0024CC  5010               	movf	?_tolower^0,w,c
  3358  0024CE  0100               	movlb	0	; () banked
  3359  0024D0  6FBE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3360  0024D2                     l8302:
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3364  0024D2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3365  0024D6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3366  0024DA  CFDE FFF6          	movff	postinc2,tblptrl
  3367  0024DE  CFDD FFF7          	movff	postdec2,tblptrh
  3368  0024E2                     	if	0	;tblptru may be non-zero
  3369  0024E2                     	endif
  3370  0024E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3371  0024E2  0E00               	movlw	low (__mediumconst shr (0+16))
  3372  0024E4  6EF8               	movwf	tblptru,c
  3373  0024E6                     	endif
  3374  0024E6  0008               	tblrd		*
  3375  0024E8  50F5               	movf	tablat,w,c
  3376  0024EA  0A64               	xorlw	100
  3377  0024EC  B4D8               	btfsc	status,2,c
  3378  0024EE  EF7B  F012         	goto	u11071
  3379  0024F2  EF7D  F012         	goto	u11070
  3380  0024F6                     u11071:
  3381  0024F6  EF91  F012         	goto	l8306
  3382  0024FA                     u11070:
  3383  0024FA                     
  3384                           ; BSR set to: 0
  3385  0024FA  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3386  0024FE  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3387  002502  CFDE FFF6          	movff	postinc2,tblptrl
  3388  002506  CFDD FFF7          	movff	postdec2,tblptrh
  3389  00250A                     	if	0	;tblptru may be non-zero
  3390  00250A                     	endif
  3391  00250A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3392  00250A  0E00               	movlw	low (__mediumconst shr (0+16))
  3393  00250C  6EF8               	movwf	tblptru,c
  3394  00250E                     	endif
  3395  00250E  0008               	tblrd		*
  3396  002510  50F5               	movf	tablat,w,c
  3397  002512  0A69               	xorlw	105
  3398  002514  A4D8               	btfss	status,2,c
  3399  002516  EF8F  F012         	goto	u11081
  3400  00251A  EF91  F012         	goto	u11080
  3401  00251E                     u11081:
  3402  00251E  EFD1  F012         	goto	l8312
  3403  002522                     u11080:
  3404  002522                     l8306:
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3408  002522  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3409  002526  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3410  00252A  2ADE               	incf	postinc2,f,c
  3411  00252C  0E00               	movlw	0
  3412  00252E  22DD               	addwfc	postdec2,f,c
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3415  002530  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3416  002534  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3417  002538  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3418  00253C  0E02               	movlw	2
  3419  00253E  26DE               	addwf	postinc2,f,c
  3420  002540  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3421  002544  0E00               	movlw	0
  3422  002546  22DD               	addwfc	postdec2,f,c
  3423  002548  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3424  00254C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3425  002550  CFDE F0AA          	movff	postinc2,vfpfcnvrt@ll
  3426  002554  CFDD F0AB          	movff	postdec2,vfpfcnvrt@ll+1
  3427  002558  0E00               	movlw	0
  3428  00255A  BFAB               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3429  00255C  0EFF               	movlw	-1
  3430  00255E  6FAC               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3431  002560  6FAD               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3432  002562  6FAE               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3433  002564  6FAF               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3434  002566  6FB0               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3435  002568  6FB1               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3436  00256A                     
  3437                           ; BSR set to: 0
  3438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3439  00256A  C0A4  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  3440  00256E  C0A5  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3441  002572  C0AA  F027         	movff	vfpfcnvrt@ll,dtoa@d
  3442  002576  C0AB  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3443  00257A  C0AC  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3444  00257E  C0AD  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3445  002582  C0AE  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3446  002586  C0AF  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3447  00258A  C0B0  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3448  00258E  C0B1  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3449  002592  EC8C  F01A         	call	_dtoa	;wreg free
  3450  002596  C025  F0A4         	movff	?_dtoa,?_vfpfcnvrt
  3451  00259A  C026  F0A5         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3452  00259E  EF49  F014         	goto	l1687
  3453  0025A2                     l8312:
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3457  0025A2  0E66               	movlw	102
  3458  0025A4  19BC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3459  0025A6  A4D8               	btfss	status,2,c
  3460  0025A8  EFD8  F012         	goto	u11091
  3461  0025AC  EFDA  F012         	goto	u11090
  3462  0025B0                     u11091:
  3463  0025B0  EF1C  F013         	goto	l8324
  3464  0025B4                     u11090:
  3465  0025B4                     
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3468  0025B4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3469  0025B8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3470  0025BC  CFDE FFF6          	movff	postinc2,tblptrl
  3471  0025C0  CFDD FFF7          	movff	postdec2,tblptrh
  3472  0025C4                     	if	0	;tblptru may be non-zero
  3473  0025C4                     	endif
  3474  0025C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3475  0025C4  0E00               	movlw	low (__mediumconst shr (0+16))
  3476  0025C6  6EF8               	movwf	tblptru,c
  3477  0025C8                     	endif
  3478  0025C8  0008               	tblrd		*
  3479  0025CA  CFF5 F0BF          	movff	tablat,vfpfcnvrt@c
  3480  0025CE                     
  3481                           ; BSR set to: 0
  3482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3483  0025CE  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3484  0025D2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3485  0025D6  2ADE               	incf	postinc2,f,c
  3486  0025D8  0E00               	movlw	0
  3487  0025DA  22DD               	addwfc	postdec2,f,c
  3488  0025DC                     
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3491  0025DC  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3492  0025E0  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3493  0025E4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3494  0025E8  0E04               	movlw	4
  3495  0025EA  26DE               	addwf	postinc2,f,c
  3496  0025EC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3497  0025F0  0E00               	movlw	0
  3498  0025F2  22DD               	addwfc	postdec2,f,c
  3499  0025F4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3500  0025F8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3501  0025FC  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  3502  002600  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  3503  002604  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  3504  002608  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  3505  00260C                     l8320:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3509  00260C  C0A4  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3510  002610  C0A5  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3511  002614  C0B8  F062         	movff	vfpfcnvrt@f,efgtoa@f
  3512  002618  C0B9  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3513  00261C  C0BA  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3514  002620  C0BB  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3515  002624  C0BF  F066         	movff	vfpfcnvrt@c,efgtoa@c
  3516  002628  EC5C  F007         	call	_efgtoa	;wreg free
  3517  00262C  C060  F0A4         	movff	?_efgtoa,?_vfpfcnvrt
  3518  002630  C061  F0A5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3519  002634  EF49  F014         	goto	l1687
  3520  002638                     l8324:
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3524  002638  0EBC               	movlw	low vfpfcnvrt@ct
  3525  00263A  6E0A               	movwf	strncmp@_l^0,c
  3526  00263C  0E00               	movlw	high vfpfcnvrt@ct
  3527  00263E  6E0B               	movwf	(strncmp@_l+1)^0,c
  3528  002640  0EB3               	movlw	low STR_28
  3529  002642  6E0C               	movwf	strncmp@_r^0,c
  3530  002644  0E0E               	movlw	high STR_28
  3531  002646  6E0D               	movwf	(strncmp@_r+1)^0,c
  3532  002648  0E00               	movlw	0
  3533  00264A  6E0F               	movwf	(strncmp@n+1)^0,c
  3534  00264C  0E02               	movlw	2
  3535  00264E  6E0E               	movwf	strncmp@n^0,c
  3536  002650  ECE6  F028         	call	_strncmp	;wreg free
  3537  002654  500A               	movf	?_strncmp^0,w,c
  3538  002656  100B               	iorwf	(?_strncmp+1)^0,w,c
  3539  002658  A4D8               	btfss	status,2,c
  3540  00265A  EF31  F013         	goto	u11101
  3541  00265E  EF33  F013         	goto	u11100
  3542  002662                     u11101:
  3543  002662  EFB3  F013         	goto	l8340
  3544  002666                     u11100:
  3545  002666                     
  3546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3547  002666  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3548  00266A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3549  00266E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3550  002672  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3551  002676  0E01               	movlw	1
  3552  002678  2649               	addwf	??_vfpfcnvrt^0,f,c
  3553  00267A  0E00               	movlw	0
  3554  00267C  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3555  00267E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3556  002682  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3557  002686                     	if	0	;tblptru may be non-zero
  3558  002686                     	endif
  3559  002686                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3560  002686  0E00               	movlw	low (__mediumconst shr (0+16))
  3561  002688  6EF8               	movwf	tblptru,c
  3562  00268A                     	endif
  3563  00268A  0008               	tblrd		*
  3564  00268C  CFF5 F0BF          	movff	tablat,vfpfcnvrt@c
  3565  002690  0EBF               	movlw	191
  3566  002692  6E49               	movwf	??_vfpfcnvrt^0,c
  3567  002694  0EFF               	movlw	255
  3568  002696  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3569  002698  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3570  00269C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3571  0026A0  CFDE FFF6          	movff	postinc2,tblptrl
  3572  0026A4  CFDD FFF7          	movff	postdec2,tblptrh
  3573  0026A8                     	if	0	;tblptru may be non-zero
  3574  0026A8                     	endif
  3575  0026A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3576  0026A8  0E00               	movlw	low (__mediumconst shr (0+16))
  3577  0026AA  6EF8               	movwf	tblptru,c
  3578  0026AC                     	endif
  3579  0026AC  0008               	tblrd		*
  3580  0026AE  50F5               	movf	tablat,w,c
  3581  0026B0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3582  0026B2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3583  0026B4  5049               	movf	??_vfpfcnvrt^0,w,c
  3584  0026B6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3585  0026B8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3586  0026BA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3587  0026BC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3588  0026BE  E10A               	bnz	u11110
  3589  0026C0  0E1A               	movlw	26
  3590  0026C2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3591  0026C4  A0D8               	btfss	status,0,c
  3592  0026C6  EF67  F013         	goto	u11111
  3593  0026CA  EF6A  F013         	goto	u11110
  3594  0026CE                     u11111:
  3595  0026CE  0E01               	movlw	1
  3596  0026D0  EF6B  F013         	goto	u11120
  3597  0026D4                     u11110:
  3598  0026D4  0E00               	movlw	0
  3599  0026D6                     u11120:
  3600  0026D6  0100               	movlb	0	; () banked
  3601  0026D8  6FB6               	movwf	_vfpfcnvrt$3169& (0+255),b
  3602  0026DA  6BB7               	clrf	(_vfpfcnvrt$3169+1)& (0+255),b
  3603  0026DC                     
  3604                           ; BSR set to: 0
  3605  0026DC  51B6               	movf	_vfpfcnvrt$3169& (0+255),w,b
  3606  0026DE  11B7               	iorwf	(_vfpfcnvrt$3169+1)& (0+255),w,b
  3607  0026E0  B4D8               	btfsc	status,2,c
  3608  0026E2  EF75  F013         	goto	u11131
  3609  0026E6  EF77  F013         	goto	u11130
  3610  0026EA                     u11131:
  3611  0026EA  EF91  F013         	goto	l8334
  3612  0026EE                     u11130:
  3613  0026EE                     
  3614                           ; BSR set to: 0
  3615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3616  0026EE  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3617  0026F2  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3618  0026F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3619  0026FA  0E04               	movlw	4
  3620  0026FC  26DE               	addwf	postinc2,f,c
  3621  0026FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3622  002702  0E00               	movlw	0
  3623  002704  22DD               	addwfc	postdec2,f,c
  3624  002706  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3625  00270A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3626  00270E  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  3627  002712  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  3628  002716  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  3629  00271A  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3632  00271E  EFA9  F013         	goto	l1695
  3633  002722                     l8334:
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3637  002722  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3638  002726  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3639  00272A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3640  00272E  0E04               	movlw	4
  3641  002730  26DE               	addwf	postinc2,f,c
  3642  002732  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3643  002736  0E00               	movlw	0
  3644  002738  22DD               	addwfc	postdec2,f,c
  3645  00273A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3646  00273E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3647  002742  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  3648  002746  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  3649  00274A  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  3650  00274E  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  3651  002752                     l1695:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3655  002752  0E02               	movlw	2
  3656  002754  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3657  002758  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3658  00275C  26DE               	addwf	postinc2,f,c
  3659  00275E  0E00               	movlw	0
  3660  002760  22DD               	addwfc	postdec2,f,c
  3661  002762  EF06  F013         	goto	l8320
  3662  002766                     l8340:
  3663                           
  3664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  3665  002766  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3666  00276A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3667  00276E  CFDE FFF6          	movff	postinc2,tblptrl
  3668  002772  CFDD FFF7          	movff	postdec2,tblptrh
  3669  002776                     	if	0	;tblptru may be non-zero
  3670  002776                     	endif
  3671  002776                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3672  002776  0E00               	movlw	low (__mediumconst shr (0+16))
  3673  002778  6EF8               	movwf	tblptru,c
  3674  00277A                     	endif
  3675  00277A  0008               	tblrd		*
  3676  00277C  50F5               	movf	tablat,w,c
  3677  00277E  0A73               	xorlw	115
  3678  002780  A4D8               	btfss	status,2,c
  3679  002782  EFC5  F013         	goto	u11141
  3680  002786  EFC7  F013         	goto	u11140
  3681  00278A                     u11141:
  3682  00278A  EFF2  F013         	goto	l8348
  3683  00278E                     u11140:
  3684  00278E                     
  3685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  3686  00278E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3687  002792  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3688  002796  2ADE               	incf	postinc2,f,c
  3689  002798  0E00               	movlw	0
  3690  00279A  22DD               	addwfc	postdec2,f,c
  3691                           
  3692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3693  00279C  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3694  0027A0  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3695  0027A4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3696  0027A8  0E02               	movlw	2
  3697  0027AA  26DE               	addwf	postinc2,f,c
  3698  0027AC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3699  0027B0  0E00               	movlw	0
  3700  0027B2  22DD               	addwfc	postdec2,f,c
  3701  0027B4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3702  0027B8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3703  0027BC  CFDE F0B2          	movff	postinc2,vfpfcnvrt@cp
  3704  0027C0  CFDD F0B3          	movff	postdec2,vfpfcnvrt@cp+1
  3705  0027C4                     
  3706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  3707  0027C4  C0A4  F013         	movff	vfpfcnvrt@fp,stoa@fp
  3708  0027C8  C0A5  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3709  0027CC  C0B2  F015         	movff	vfpfcnvrt@cp,stoa@s
  3710  0027D0  C0B3  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3711  0027D4  EC87  F020         	call	_stoa	;wreg free
  3712  0027D8  C013  F0A4         	movff	?_stoa,?_vfpfcnvrt
  3713  0027DC  C014  F0A5         	movff	?_stoa+1,?_vfpfcnvrt+1
  3714  0027E0  EF49  F014         	goto	l1687
  3715  0027E4                     l8348:
  3716                           
  3717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3718  0027E4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3719  0027E8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3720  0027EC  CFDE FFF6          	movff	postinc2,tblptrl
  3721  0027F0  CFDD FFF7          	movff	postdec2,tblptrh
  3722  0027F4                     	if	0	;tblptru may be non-zero
  3723  0027F4                     	endif
  3724  0027F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3725  0027F4  0E00               	movlw	low (__mediumconst shr (0+16))
  3726  0027F6  6EF8               	movwf	tblptru,c
  3727  0027F8                     	endif
  3728  0027F8  0008               	tblrd		*
  3729  0027FA  50F5               	movf	tablat,w,c
  3730  0027FC  0A25               	xorlw	37
  3731  0027FE  A4D8               	btfss	status,2,c
  3732  002800  EF04  F014         	goto	u11151
  3733  002804  EF06  F014         	goto	u11150
  3734  002808                     u11151:
  3735  002808  EF1E  F014         	goto	l8358
  3736  00280C                     u11150:
  3737  00280C                     
  3738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3739  00280C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3740  002810  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3741  002814  2ADE               	incf	postinc2,f,c
  3742  002816  0E00               	movlw	0
  3743  002818  22DD               	addwfc	postdec2,f,c
  3744  00281A                     
  3745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3746  00281A  0E00               	movlw	0
  3747  00281C  6E0B               	movwf	(fputc@c+1)^0,c
  3748  00281E  0E25               	movlw	37
  3749  002820  6E0A               	movwf	fputc@c^0,c
  3750  002822  C0A4  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  3751  002826  C0A5  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3752  00282A  ECC1  F029         	call	_fputc	;wreg free
  3753  00282E                     l8354:
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3756  00282E  0E00               	movlw	0
  3757  002830  0100               	movlb	0	; () banked
  3758  002832  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3759  002834  0E01               	movlw	1
  3760  002836  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  3761  002838  EF49  F014         	goto	l1687
  3762  00283C                     l8358:
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3765  00283C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3766  002840  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3767  002844  2ADE               	incf	postinc2,f,c
  3768  002846  0E00               	movlw	0
  3769  002848  22DD               	addwfc	postdec2,f,c
  3770  00284A                     
  3771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3772  00284A  0E00               	movlw	0
  3773  00284C  0100               	movlb	0	; () banked
  3774  00284E  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3775  002850  0E00               	movlw	0
  3776  002852  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  3777  002854  EF49  F014         	goto	l1687
  3778  002858                     l8364:
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3781  002858  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3782  00285C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3783  002860  CFDE FFF6          	movff	postinc2,tblptrl
  3784  002864  CFDD FFF7          	movff	postdec2,tblptrh
  3785  002868                     	if	0	;tblptru may be non-zero
  3786  002868                     	endif
  3787  002868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3788  002868  0E00               	movlw	low (__mediumconst shr (0+16))
  3789  00286A  6EF8               	movwf	tblptru,c
  3790  00286C                     	endif
  3791  00286C  0008               	tblrd		*
  3792  00286E  50F5               	movf	tablat,w,c
  3793  002870  6E0A               	movwf	fputc@c^0,c
  3794  002872  6A0B               	clrf	(fputc@c+1)^0,c
  3795  002874  C0A4  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  3796  002878  C0A5  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3797  00287C  ECC1  F029         	call	_fputc	;wreg free
  3798  002880                     
  3799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3800  002880  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3801  002884  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3802  002888  2ADE               	incf	postinc2,f,c
  3803  00288A  0E00               	movlw	0
  3804  00288C  22DD               	addwfc	postdec2,f,c
  3805  00288E  EF17  F014         	goto	l8354
  3806  002892                     l1687:
  3807  002892  0012               	return		;funcret
  3808  002894                     __end_of_vfpfcnvrt:
  3809                           	callstack 0
  3810                           
  3811 ;; *************** function _strncmp *****************
  3812 ;; Defined at:
  3813 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  _l              2    9[COMRAM] PTR const unsigned char 
  3816 ;;		 -> vfpfcnvrt@ct(3), 
  3817 ;;  _r              2   11[COMRAM] PTR const unsigned char 
  3818 ;;		 -> STR_30(3), 
  3819 ;;  n               2   13[COMRAM] unsigned int 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  r               2   18[COMRAM] PTR const unsigned char 
  3822 ;;		 -> STR_30(3), 
  3823 ;;  l               2   16[COMRAM] PTR const unsigned char 
  3824 ;;		 -> vfpfcnvrt@ct(3), 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  2    9[COMRAM] int 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3834 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3835 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;Total ram usage:       11 bytes
  3839 ;; Hardware stack levels used: 1
  3840 ;; Hardware stack levels required when called: 7
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_vfpfcnvrt
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text13
  3849  0051CC                     __ptext13:
  3850                           	callstack 0
  3851  0051CC                     _strncmp:
  3852                           	callstack 18
  3853  0051CC  C00A  F011         	movff	strncmp@_l,strncmp@l
  3854  0051D0  C00B  F012         	movff	strncmp@_l+1,strncmp@l+1
  3855  0051D4  C00C  F013         	movff	strncmp@_r,strncmp@r
  3856  0051D8  C00D  F014         	movff	strncmp@_r+1,strncmp@r+1
  3857  0051DC  060E               	decf	strncmp@n^0,f,c
  3858  0051DE  A0D8               	btfss	status,0,c
  3859  0051E0  060F               	decf	(strncmp@n+1)^0,f,c
  3860  0051E2  280E               	incf	strncmp@n^0,w,c
  3861  0051E4  E106               	bnz	u10921
  3862  0051E6  280F               	incf	(strncmp@n+1)^0,w,c
  3863  0051E8  A4D8               	btfss	status,2,c
  3864  0051EA  EFF9  F028         	goto	u10921
  3865  0051EE  EFFB  F028         	goto	u10920
  3866  0051F2                     u10921:
  3867  0051F2  EF08  F029         	goto	l8222
  3868  0051F6                     u10920:
  3869  0051F6  0E00               	movlw	0
  3870  0051F8  6E0B               	movwf	(?_strncmp+1)^0,c
  3871  0051FA  0E00               	movlw	0
  3872  0051FC  6E0A               	movwf	?_strncmp^0,c
  3873  0051FE  EF56  F029         	goto	l1824
  3874  005202                     l8220:
  3875  005202  4A11               	infsnz	strncmp@l^0,f,c
  3876  005204  2A12               	incf	(strncmp@l+1)^0,f,c
  3877  005206  4A13               	infsnz	strncmp@r^0,f,c
  3878  005208  2A14               	incf	(strncmp@r+1)^0,f,c
  3879  00520A  060E               	decf	strncmp@n^0,f,c
  3880  00520C  A0D8               	btfss	status,0,c
  3881  00520E  060F               	decf	(strncmp@n+1)^0,f,c
  3882  005210                     l8222:
  3883  005210  C011  FFD9         	movff	strncmp@l,fsr2l
  3884  005214  C012  FFDA         	movff	strncmp@l+1,fsr2h
  3885  005218  50DF               	movf	indf2,w,c
  3886  00521A  B4D8               	btfsc	status,2,c
  3887  00521C  EF12  F029         	goto	u10931
  3888  005220  EF14  F029         	goto	u10930
  3889  005224                     u10931:
  3890  005224  EF43  F029         	goto	l8230
  3891  005228                     u10930:
  3892  005228  C013  FFF6         	movff	strncmp@r,tblptrl
  3893  00522C  C014  FFF7         	movff	strncmp@r+1,tblptrh
  3894  005230                     	if	0	;tblptru may be non-zero
  3895  005230                     	endif
  3896  005230                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3897  005230  0E00               	movlw	low (__mediumconst shr (0+16))
  3898  005232  6EF8               	movwf	tblptru,c
  3899  005234                     	endif
  3900  005234  0008               	tblrd		*
  3901  005236  50F5               	movf	tablat,w,c
  3902  005238  0900               	iorlw	0
  3903  00523A  B4D8               	btfsc	status,2,c
  3904  00523C  EF22  F029         	goto	u10941
  3905  005240  EF24  F029         	goto	u10940
  3906  005244                     u10941:
  3907  005244  EF43  F029         	goto	l8230
  3908  005248                     u10940:
  3909  005248  500E               	movf	strncmp@n^0,w,c
  3910  00524A  100F               	iorwf	(strncmp@n+1)^0,w,c
  3911  00524C  B4D8               	btfsc	status,2,c
  3912  00524E  EF2B  F029         	goto	u10951
  3913  005252  EF2D  F029         	goto	u10950
  3914  005256                     u10951:
  3915  005256  EF43  F029         	goto	l8230
  3916  00525A                     u10950:
  3917  00525A  C011  FFD9         	movff	strncmp@l,fsr2l
  3918  00525E  C012  FFDA         	movff	strncmp@l+1,fsr2h
  3919  005262  50DF               	movf	indf2,w,c
  3920  005264  6E10               	movwf	??_strncmp^0,c
  3921  005266  C013  FFF6         	movff	strncmp@r,tblptrl
  3922  00526A  C014  FFF7         	movff	strncmp@r+1,tblptrh
  3923  00526E                     	if	0	;tblptru may be non-zero
  3924  00526E                     	endif
  3925  00526E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3926  00526E  0E00               	movlw	low (__mediumconst shr (0+16))
  3927  005270  6EF8               	movwf	tblptru,c
  3928  005272                     	endif
  3929  005272  0008               	tblrd		*
  3930  005274  50F5               	movf	tablat,w,c
  3931  005276  1810               	xorwf	??_strncmp^0,w,c
  3932  005278  B4D8               	btfsc	status,2,c
  3933  00527A  EF41  F029         	goto	u10961
  3934  00527E  EF43  F029         	goto	u10960
  3935  005282                     u10961:
  3936  005282  EF01  F029         	goto	l8220
  3937  005286                     u10960:
  3938  005286                     l8230:
  3939  005286  C011  FFD9         	movff	strncmp@l,fsr2l
  3940  00528A  C012  FFDA         	movff	strncmp@l+1,fsr2h
  3941  00528E  50DF               	movf	indf2,w,c
  3942  005290  6E10               	movwf	??_strncmp^0,c
  3943  005292  C013  FFF6         	movff	strncmp@r,tblptrl
  3944  005296  C014  FFF7         	movff	strncmp@r+1,tblptrh
  3945  00529A                     	if	0	;tblptru may be non-zero
  3946  00529A                     	endif
  3947  00529A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3948  00529A  0E00               	movlw	low (__mediumconst shr (0+16))
  3949  00529C  6EF8               	movwf	tblptru,c
  3950  00529E                     	endif
  3951  00529E  0008               	tblrd		*
  3952  0052A0  50F5               	movf	tablat,w,c
  3953  0052A2  5C10               	subwf	??_strncmp^0,w,c
  3954  0052A4  6E0A               	movwf	?_strncmp^0,c
  3955  0052A6  6A0B               	clrf	(?_strncmp+1)^0,c
  3956  0052A8  A0D8               	btfss	status,0,c
  3957  0052AA  060B               	decf	(?_strncmp+1)^0,f,c
  3958  0052AC                     l1824:
  3959  0052AC  0012               	return		;funcret
  3960  0052AE                     __end_of_strncmp:
  3961                           	callstack 0
  3962                           
  3963 ;; *************** function _stoa *****************
  3964 ;; Defined at:
  3965 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  3968 ;;		 -> sprintf@f(6), 
  3969 ;;  s               2   20[COMRAM] PTR unsigned char 
  3970 ;;		 -> ?_sprintf(2), STR_18(8), STR_16(6), STR_14(5), 
  3971 ;;		 -> STR_12(7), STR_10(11), STR_8(6), STR_6(5), 
  3972 ;;		 -> STR_4(4), STR_2(7), 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  nuls            7   23[COMRAM] unsigned char [7]
  3975 ;;  l               2   38[COMRAM] int 
  3976 ;;  p               2   36[COMRAM] int 
  3977 ;;  cp              2   34[COMRAM] PTR unsigned char 
  3978 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_18(8), STR_16(6), 
  3979 ;;		 -> STR_14(5), STR_12(7), STR_10(11), STR_8(6), 
  3980 ;;		 -> STR_6(5), STR_4(4), STR_2(7), 
  3981 ;;  w               2   32[COMRAM] int 
  3982 ;;  i               2   30[COMRAM] int 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  2   18[COMRAM] int 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3992 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3994 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3995 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;Total ram usage:       22 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 9
  3999 ;; This function calls:
  4000 ;;		_fputc
  4001 ;;		_strlen
  4002 ;; This function is called by:
  4003 ;;		_vfpfcnvrt
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text14
  4008  00410E                     __ptext14:
  4009                           	callstack 0
  4010  00410E                     _stoa:
  4011                           	callstack 16
  4012  00410E                     
  4013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  4014  00410E  EE21  F0E7         	lfsr	2,stoa@F1163
  4015  004112  EE10  F018         	lfsr	1,stoa@nuls
  4016  004116  0E06               	movlw	6
  4017  004118                     u10751:
  4018  004118  CFDB FFE3          	movff	plusw2,plusw1
  4019  00411C  06E8               	decf	wreg,f,c
  4020  00411E  E2FC               	bc	u10751
  4021  004120                     
  4022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  4023  004120  C015  F023         	movff	stoa@s,stoa@cp
  4024  004124  C016  F024         	movff	stoa@s+1,stoa@cp+1
  4025  004128                     
  4026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  4027  004128  5023               	movf	stoa@cp^0,w,c
  4028  00412A  1024               	iorwf	(stoa@cp+1)^0,w,c
  4029  00412C  A4D8               	btfss	status,2,c
  4030  00412E  EF9B  F020         	goto	u10761
  4031  004132  EF9D  F020         	goto	u10760
  4032  004136                     u10761:
  4033  004136  EFA1  F020         	goto	l8138
  4034  00413A                     u10760:
  4035  00413A                     
  4036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  4037  00413A  0E18               	movlw	low stoa@nuls
  4038  00413C  6E23               	movwf	stoa@cp^0,c
  4039  00413E  0E00               	movlw	high stoa@nuls
  4040  004140  6E24               	movwf	(stoa@cp+1)^0,c
  4041  004142                     l8138:
  4042                           
  4043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  4044  004142  C023  F00A         	movff	stoa@cp,strlen@s
  4045  004146  C024  F00B         	movff	stoa@cp+1,strlen@s+1
  4046  00414A  ECAB  F02D         	call	_strlen	;wreg free
  4047  00414E  C00A  F027         	movff	?_strlen,stoa@l
  4048  004152  C00B  F028         	movff	?_strlen+1,stoa@l+1
  4049  004156                     
  4050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  4051  004156  C04D  F025         	movff	_prec,stoa@p
  4052  00415A  C04E  F026         	movff	_prec+1,stoa@p+1
  4053  00415E                     
  4054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  4055  00415E  BE26               	btfsc	(stoa@p+1)^0,7,c
  4056  004160  EFB4  F020         	goto	u10771
  4057  004164  EFB6  F020         	goto	u10770
  4058  004168                     u10771:
  4059  004168  EFCB  F020         	goto	l1654
  4060  00416C                     u10770:
  4061  00416C  5027               	movf	stoa@l^0,w,c
  4062  00416E  5C25               	subwf	stoa@p^0,w,c
  4063  004170  5026               	movf	(stoa@p+1)^0,w,c
  4064  004172  0A80               	xorlw	128
  4065  004174  6E17               	movwf	??_stoa^0,c
  4066  004176  5028               	movf	(stoa@l+1)^0,w,c
  4067  004178  0A80               	xorlw	128
  4068  00417A  5817               	subwfb	??_stoa^0,w,c
  4069  00417C  A0D8               	btfss	status,0,c
  4070  00417E  EFC3  F020         	goto	u10781
  4071  004182  EFC5  F020         	goto	u10780
  4072  004186                     u10781:
  4073  004186  EFC7  F020         	goto	l1652
  4074  00418A                     u10780:
  4075  00418A  EFCB  F020         	goto	l1654
  4076  00418E                     l1652:
  4077  00418E  C025  F027         	movff	stoa@p,stoa@l
  4078  004192  C026  F028         	movff	stoa@p+1,stoa@l+1
  4079  004196                     l1654:
  4080                           
  4081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  4082  004196  C027  F025         	movff	stoa@l,stoa@p
  4083  00419A  C028  F026         	movff	stoa@l+1,stoa@p+1
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  4086  00419E  C1D9  F021         	movff	_width,stoa@w
  4087  0041A2  C1DA  F022         	movff	_width+1,stoa@w+1
  4088                           
  4089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  4090  0041A6  B04F               	btfsc	_flags^0,0,c
  4091  0041A8  EFD8  F020         	goto	u10791
  4092  0041AC  EFDA  F020         	goto	u10790
  4093  0041B0                     u10791:
  4094  0041B0  EFF7  F020         	goto	l8154
  4095  0041B4                     u10790:
  4096  0041B4  EFE8  F020         	goto	l8152
  4097  0041B8                     l8148:
  4098                           
  4099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  4100  0041B8  0E00               	movlw	0
  4101  0041BA  6E0B               	movwf	(fputc@c+1)^0,c
  4102  0041BC  0E20               	movlw	32
  4103  0041BE  6E0A               	movwf	fputc@c^0,c
  4104  0041C0  C013  F00C         	movff	stoa@fp,fputc@fp
  4105  0041C4  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  4106  0041C8  ECC1  F029         	call	_fputc	;wreg free
  4107  0041CC                     
  4108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  4109  0041CC  4A27               	infsnz	stoa@l^0,f,c
  4110  0041CE  2A28               	incf	(stoa@l+1)^0,f,c
  4111  0041D0                     l8152:
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  4114  0041D0  5021               	movf	stoa@w^0,w,c
  4115  0041D2  5C27               	subwf	stoa@l^0,w,c
  4116  0041D4  5028               	movf	(stoa@l+1)^0,w,c
  4117  0041D6  0A80               	xorlw	128
  4118  0041D8  6E17               	movwf	??_stoa^0,c
  4119  0041DA  5022               	movf	(stoa@w+1)^0,w,c
  4120  0041DC  0A80               	xorlw	128
  4121  0041DE  5817               	subwfb	??_stoa^0,w,c
  4122  0041E0  A0D8               	btfss	status,0,c
  4123  0041E2  EFF5  F020         	goto	u10801
  4124  0041E6  EFF7  F020         	goto	u10800
  4125  0041EA                     u10801:
  4126  0041EA  EFDC  F020         	goto	l8148
  4127  0041EE                     u10800:
  4128  0041EE                     l8154:
  4129                           
  4130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  4131  0041EE  0E00               	movlw	0
  4132  0041F0  6E20               	movwf	(stoa@i+1)^0,c
  4133  0041F2  0E00               	movlw	0
  4134  0041F4  6E1F               	movwf	stoa@i^0,c
  4135                           
  4136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4137  0041F6  EF1C  F021         	goto	l8162
  4138  0041FA                     l8156:
  4139                           
  4140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  4141  0041FA  C023  FFF6         	movff	stoa@cp,tblptrl
  4142  0041FE  C024  FFF7         	movff	stoa@cp+1,tblptrh
  4143  004202  0E00               	movlw	low (__smallconst shr (0+16))
  4144  004204  6EF8               	movwf	tblptru,c
  4145  004206  0E0D               	movlw	(high __ramtop+-1)
  4146  004208  64F7               	cpfsgt	tblptrh,c
  4147  00420A  D003               	bra	u10817
  4148  00420C  0008               	tblrd		*
  4149  00420E  50F5               	movf	tablat,w,c
  4150  004210  D005               	bra	u10810
  4151  004212                     u10817:
  4152  004212  CFF6 FFE1          	movff	tblptrl,fsr1l
  4153  004216  CFF7 FFE2          	movff	tblptrh,fsr1h
  4154  00421A  50E7               	movf	indf1,w,c
  4155  00421C                     u10810:
  4156  00421C  6E17               	movwf	??_stoa^0,c
  4157  00421E  5017               	movf	??_stoa^0,w,c
  4158  004220  6E0A               	movwf	fputc@c^0,c
  4159  004222  6A0B               	clrf	(fputc@c+1)^0,c
  4160  004224  C013  F00C         	movff	stoa@fp,fputc@fp
  4161  004228  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  4162  00422C  ECC1  F029         	call	_fputc	;wreg free
  4163  004230                     
  4164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  4165  004230  4A23               	infsnz	stoa@cp^0,f,c
  4166  004232  2A24               	incf	(stoa@cp+1)^0,f,c
  4167  004234                     
  4168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  4169  004234  4A1F               	infsnz	stoa@i^0,f,c
  4170  004236  2A20               	incf	(stoa@i+1)^0,f,c
  4171  004238                     l8162:
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  4174  004238  5025               	movf	stoa@p^0,w,c
  4175  00423A  5C1F               	subwf	stoa@i^0,w,c
  4176  00423C  5020               	movf	(stoa@i+1)^0,w,c
  4177  00423E  0A80               	xorlw	128
  4178  004240  6E17               	movwf	??_stoa^0,c
  4179  004242  5026               	movf	(stoa@p+1)^0,w,c
  4180  004244  0A80               	xorlw	128
  4181  004246  5817               	subwfb	??_stoa^0,w,c
  4182  004248  A0D8               	btfss	status,0,c
  4183  00424A  EF29  F021         	goto	u10821
  4184  00424E  EF2B  F021         	goto	u10820
  4185  004252                     u10821:
  4186  004252  EFFD  F020         	goto	l8156
  4187  004256                     u10820:
  4188  004256                     
  4189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  4190  004256  A04F               	btfss	_flags^0,0,c
  4191  004258  EF30  F021         	goto	u10831
  4192  00425C  EF32  F021         	goto	u10830
  4193  004260                     u10831:
  4194  004260  EF4F  F021         	goto	l1664
  4195  004264                     u10830:
  4196  004264  EF40  F021         	goto	l8170
  4197  004268                     l8166:
  4198                           
  4199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  4200  004268  0E00               	movlw	0
  4201  00426A  6E0B               	movwf	(fputc@c+1)^0,c
  4202  00426C  0E20               	movlw	32
  4203  00426E  6E0A               	movwf	fputc@c^0,c
  4204  004270  C013  F00C         	movff	stoa@fp,fputc@fp
  4205  004274  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  4206  004278  ECC1  F029         	call	_fputc	;wreg free
  4207  00427C                     
  4208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  4209  00427C  4A27               	infsnz	stoa@l^0,f,c
  4210  00427E  2A28               	incf	(stoa@l+1)^0,f,c
  4211  004280                     l8170:
  4212                           
  4213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  4214  004280  5021               	movf	stoa@w^0,w,c
  4215  004282  5C27               	subwf	stoa@l^0,w,c
  4216  004284  5028               	movf	(stoa@l+1)^0,w,c
  4217  004286  0A80               	xorlw	128
  4218  004288  6E17               	movwf	??_stoa^0,c
  4219  00428A  5022               	movf	(stoa@w+1)^0,w,c
  4220  00428C  0A80               	xorlw	128
  4221  00428E  5817               	subwfb	??_stoa^0,w,c
  4222  004290  A0D8               	btfss	status,0,c
  4223  004292  EF4D  F021         	goto	u10841
  4224  004296  EF4F  F021         	goto	u10840
  4225  00429A                     u10841:
  4226  00429A  EF34  F021         	goto	l8166
  4227  00429E                     u10840:
  4228  00429E                     l1664:
  4229                           
  4230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  4231  00429E  C027  F013         	movff	stoa@l,?_stoa
  4232  0042A2  C028  F014         	movff	stoa@l+1,?_stoa+1
  4233  0042A6  0012               	return		;funcret
  4234  0042A8                     __end_of_stoa:
  4235                           	callstack 0
  4236                           
  4237 ;; *************** function _efgtoa *****************
  4238 ;; Defined at:
  4239 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4242 ;;		 -> sprintf@f(6), 
  4243 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  4244 ;;  c               1    6[BANK0 ] unsigned char 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  u               4   64[BANK0 ] unsigned char 
  4247 ;;  g               4   56[BANK0 ] unsigned char 
  4248 ;;  l               4   50[BANK0 ] unsigned char 
  4249 ;;  h               4   46[BANK0 ] unsigned char 
  4250 ;;  ou              4   32[BANK0 ] unsigned char 
  4251 ;;  n               2   62[BANK0 ] int 
  4252 ;;  e               2   60[BANK0 ] int 
  4253 ;;  i               2   54[BANK0 ] int 
  4254 ;;  w               2   42[BANK0 ] int 
  4255 ;;  p               2   40[BANK0 ] int 
  4256 ;;  sign            2   38[BANK0 ] int 
  4257 ;;  d               2   36[BANK0 ] int 
  4258 ;;  m               2   30[BANK0 ] int 
  4259 ;;  ne              2   28[BANK0 ] int 
  4260 ;;  pp              2   26[BANK0 ] int 
  4261 ;;  t               2   24[BANK0 ] int 
  4262 ;;  mode            1   45[BANK0 ] unsigned char 
  4263 ;;  nmode           1   44[BANK0 ] unsigned char 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  2    0[BANK0 ] int 
  4266 ;; Registers used:
  4267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4273 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4274 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4275 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4276 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4277 ;;Total ram usage:       68 bytes
  4278 ;; Hardware stack levels used: 1
  4279 ;; Hardware stack levels required when called: 11
  4280 ;; This function calls:
  4281 ;;		___awdiv
  4282 ;;		___awmod
  4283 ;;		___fladd
  4284 ;;		___fldiv
  4285 ;;		___fleq
  4286 ;;		___flge
  4287 ;;		___flmul
  4288 ;;		___flneg
  4289 ;;		___flsub
  4290 ;;		___fltol
  4291 ;;		___fpclassifyf
  4292 ;;		_floorf
  4293 ;;		_isupper
  4294 ;;		_pad
  4295 ;;		_strcpy
  4296 ;;		_tolower
  4297 ;; This function is called by:
  4298 ;;		_vfpfcnvrt
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text15
  4303  000EB8                     __ptext15:
  4304                           	callstack 0
  4305  000EB8                     _efgtoa:
  4306                           	callstack 14
  4307  000EB8                     
  4308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4309  000EB8  0E00               	movlw	0
  4310  000EBA  0100               	movlb	0	; () banked
  4311  000EBC  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  4312  000EBE  0E00               	movlw	0
  4313  000EC0  6F86               	movwf	efgtoa@sign& (0+255),b
  4314  000EC2                     
  4315                           ; BSR set to: 0
  4316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4317  000EC2  C062  F098         	movff	efgtoa@f,efgtoa@g
  4318  000EC6  C063  F099         	movff	efgtoa@f+1,efgtoa@g+1
  4319  000ECA  C064  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  4320  000ECE  C065  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  4321  000ED2                     
  4322                           ; BSR set to: 0
  4323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4324  000ED2  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4325  000ED4  EF70  F007         	goto	u10210
  4326  000ED8  EF6E  F007         	goto	u10211
  4327  000EDC                     u10211:
  4328  000EDC  EF86  F007         	goto	l7832
  4329  000EE0                     u10210:
  4330  000EE0                     
  4331                           ; BSR set to: 0
  4332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4333  000EE0  0E00               	movlw	0
  4334  000EE2  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  4335  000EE4  0E01               	movlw	1
  4336  000EE6  6F86               	movwf	efgtoa@sign& (0+255),b
  4337  000EE8                     
  4338                           ; BSR set to: 0
  4339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4340  000EE8  C098  F00A         	movff	efgtoa@g,___flneg@f1
  4341  000EEC  C099  F00B         	movff	efgtoa@g+1,___flneg@f1+1
  4342  000EF0  C09A  F00C         	movff	efgtoa@g+2,___flneg@f1+2
  4343  000EF4  C09B  F00D         	movff	efgtoa@g+3,___flneg@f1+3
  4344  000EF8  EC19  F030         	call	___flneg	;wreg free
  4345  000EFC  C00A  F098         	movff	?___flneg,efgtoa@g
  4346  000F00  C00B  F099         	movff	?___flneg+1,efgtoa@g+1
  4347  000F04  C00C  F09A         	movff	?___flneg+2,efgtoa@g+2
  4348  000F08  C00D  F09B         	movff	?___flneg+3,efgtoa@g+3
  4349  000F0C                     l7832:
  4350                           
  4351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4352  000F0C  0E00               	movlw	0
  4353  000F0E  0100               	movlb	0	; () banked
  4354  000F10  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  4355  000F12  0E00               	movlw	0
  4356  000F14  6F9E               	movwf	efgtoa@n& (0+255),b
  4357  000F16                     
  4358                           ; BSR set to: 0
  4359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4360  000F16  C1D9  F08A         	movff	_width,efgtoa@w
  4361  000F1A  C1DA  F08B         	movff	_width+1,efgtoa@w+1
  4362  000F1E                     
  4363                           ; BSR set to: 0
  4364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4365  000F1E  5186               	movf	efgtoa@sign& (0+255),w,b
  4366  000F20  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4367  000F22  A4D8               	btfss	status,2,c
  4368  000F24  EF96  F007         	goto	u10221
  4369  000F28  EF98  F007         	goto	u10220
  4370  000F2C                     u10221:
  4371  000F2C  EF9F  F007         	goto	l7840
  4372  000F30                     u10220:
  4373  000F30                     
  4374                           ; BSR set to: 0
  4375  000F30  A44F               	btfss	_flags^0,2,c
  4376  000F32  EF9D  F007         	goto	u10231
  4377  000F36  EF9F  F007         	goto	u10230
  4378  000F3A                     u10231:
  4379  000F3A  EFB9  F007         	goto	l7852
  4380  000F3E                     u10230:
  4381  000F3E                     l7840:
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4385  000F3E  5186               	movf	efgtoa@sign& (0+255),w,b
  4386  000F40  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4387  000F42  A4D8               	btfss	status,2,c
  4388  000F44  EFA6  F007         	goto	u10241
  4389  000F48  EFA8  F007         	goto	u10240
  4390  000F4C                     u10241:
  4391  000F4C  EFAE  F007         	goto	l7844
  4392  000F50                     u10240:
  4393  000F50                     
  4394                           ; BSR set to: 0
  4395  000F50  0E00               	movlw	0
  4396  000F52  6F6D               	movwf	(_efgtoa$3128+1)& (0+255),b
  4397  000F54  0E2B               	movlw	43
  4398  000F56  6F6C               	movwf	_efgtoa$3128& (0+255),b
  4399  000F58  EFB2  F007         	goto	l7846
  4400  000F5C                     l7844:
  4401                           
  4402                           ; BSR set to: 0
  4403  000F5C  0E00               	movlw	0
  4404  000F5E  6F6D               	movwf	(_efgtoa$3128+1)& (0+255),b
  4405  000F60  0E2D               	movlw	45
  4406  000F62  6F6C               	movwf	_efgtoa$3128& (0+255),b
  4407  000F64                     l7846:
  4408                           
  4409                           ; BSR set to: 0
  4410  000F64  C06C  F200         	movff	_efgtoa$3128,_dbuf
  4411  000F68                     
  4412                           ; BSR set to: 0
  4413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4414  000F68  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  4415  000F6A  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  4416  000F6C                     
  4417                           ; BSR set to: 0
  4418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4419  000F6C  078A               	decf	efgtoa@w& (0+255),f,b
  4420  000F6E  A0D8               	btfss	status,0,c
  4421  000F70  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  4422  000F72                     l7852:
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4426  000F72  C098  F00A         	movff	efgtoa@g,___fpclassifyf@x
  4427  000F76  C099  F00B         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4428  000F7A  C09A  F00C         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4429  000F7E  C09B  F00D         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4430  000F82  EC67  F028         	call	___fpclassifyf	;wreg free
  4431  000F86  040A               	decf	?___fpclassifyf^0,w,c
  4432  000F88  100B               	iorwf	(?___fpclassifyf+1)^0,w,c
  4433  000F8A  A4D8               	btfss	status,2,c
  4434  000F8C  EFCA  F007         	goto	u10251
  4435  000F90  EFCC  F007         	goto	u10250
  4436  000F94                     u10251:
  4437  000F94  EF23  F008         	goto	l7870
  4438  000F98                     u10250:
  4439  000F98  0EBF               	movlw	191
  4440  000F9A  0100               	movlb	0	; () banked
  4441  000F9C  6F67               	movwf	??_efgtoa& (0+255),b
  4442  000F9E  0EFF               	movlw	255
  4443  000FA0  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4444  000FA2  5166               	movf	efgtoa@c& (0+255),w,b
  4445  000FA4  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  4446  000FA6  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  4447  000FA8  5167               	movf	??_efgtoa& (0+255),w,b
  4448  000FAA  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4449  000FAC  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4450  000FAE  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4451  000FB0  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4452  000FB2  E10A               	bnz	u10260
  4453  000FB4  0E1A               	movlw	26
  4454  000FB6  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4455  000FB8  A0D8               	btfss	status,0,c
  4456  000FBA  EFE1  F007         	goto	u10261
  4457  000FBE  EFE4  F007         	goto	u10260
  4458  000FC2                     u10261:
  4459  000FC2  0E01               	movlw	1
  4460  000FC4  EFE5  F007         	goto	u10270
  4461  000FC8                     u10260:
  4462  000FC8  0E00               	movlw	0
  4463  000FCA                     u10270:
  4464  000FCA  6F6E               	movwf	_efgtoa$3129& (0+255),b
  4465  000FCC  6B6F               	clrf	(_efgtoa$3129+1)& (0+255),b
  4466  000FCE                     
  4467                           ; BSR set to: 0
  4468  000FCE  516E               	movf	_efgtoa$3129& (0+255),w,b
  4469  000FD0  116F               	iorwf	(_efgtoa$3129+1)& (0+255),w,b
  4470  000FD2  B4D8               	btfsc	status,2,c
  4471  000FD4  EFEE  F007         	goto	u10281
  4472  000FD8  EFF0  F007         	goto	u10280
  4473  000FDC                     u10281:
  4474  000FDC  EFFE  F007         	goto	l7862
  4475  000FE0                     u10280:
  4476  000FE0                     
  4477                           ; BSR set to: 0
  4478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4479  000FE0  0E00               	movlw	low _dbuf
  4480  000FE2  259E               	addwf	efgtoa@n& (0+255),w,b
  4481  000FE4  6E0A               	movwf	strcpy@dest^0,c
  4482  000FE6  0E02               	movlw	high _dbuf
  4483  000FE8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4484  000FEA  6E0B               	movwf	(strcpy@dest+1)^0,c
  4485  000FEC  0E9F               	movlw	low STR_20
  4486  000FEE  6E0C               	movwf	strcpy@src^0,c
  4487  000FF0  0E0E               	movlw	high STR_20
  4488  000FF2  6E0D               	movwf	(strcpy@src+1)^0,c
  4489  000FF4  ECD0  F02C         	call	_strcpy	;wreg free
  4490                           
  4491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4492  000FF8  EF0A  F008         	goto	l7864
  4493  000FFC                     l7862:
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4497  000FFC  0E00               	movlw	low _dbuf
  4498  000FFE  259E               	addwf	efgtoa@n& (0+255),w,b
  4499  001000  6E0A               	movwf	strcpy@dest^0,c
  4500  001002  0E02               	movlw	high _dbuf
  4501  001004  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4502  001006  6E0B               	movwf	(strcpy@dest+1)^0,c
  4503  001008  0EA7               	movlw	low STR_21
  4504  00100A  6E0C               	movwf	strcpy@src^0,c
  4505  00100C  0E0E               	movlw	high STR_21
  4506  00100E  6E0D               	movwf	(strcpy@src+1)^0,c
  4507  001010  ECD0  F02C         	call	_strcpy	;wreg free
  4508  001014                     l7864:
  4509                           
  4510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4511  001014  0100               	movlb	0	; () banked
  4512  001016  0EFD               	movlw	253
  4513  001018  278A               	addwf	efgtoa@w& (0+255),f,b
  4514  00101A  0EFF               	movlw	255
  4515  00101C  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4516  00101E                     l7866:
  4517                           
  4518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4519  00101E  C060  F01A         	movff	efgtoa@fp,pad@fp
  4520  001022  C061  F01B         	movff	efgtoa@fp+1,pad@fp+1
  4521  001026  0E00               	movlw	low _dbuf
  4522  001028  6E1C               	movwf	pad@buf^0,c
  4523  00102A  0E02               	movlw	high _dbuf
  4524  00102C  6E1D               	movwf	(pad@buf+1)^0,c
  4525  00102E  C08A  F01E         	movff	efgtoa@w,pad@p
  4526  001032  C08B  F01F         	movff	efgtoa@w+1,pad@p+1
  4527  001036  EC88  F02A         	call	_pad	;wreg free
  4528  00103A  C01A  F060         	movff	?_pad,?_efgtoa
  4529  00103E  C01B  F061         	movff	?_pad+1,?_efgtoa+1
  4530  001042  EF88  F00D         	goto	l1570
  4531  001046                     l7870:
  4532                           
  4533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4534  001046  C098  F00A         	movff	efgtoa@g,___fpclassifyf@x
  4535  00104A  C099  F00B         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4536  00104E  C09A  F00C         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4537  001052  C09B  F00D         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4538  001056  EC67  F028         	call	___fpclassifyf	;wreg free
  4539  00105A  500A               	movf	?___fpclassifyf^0,w,c
  4540  00105C  100B               	iorwf	(?___fpclassifyf+1)^0,w,c
  4541  00105E  A4D8               	btfss	status,2,c
  4542  001060  EF34  F008         	goto	u10291
  4543  001064  EF36  F008         	goto	u10290
  4544  001068                     u10291:
  4545  001068  EF76  F008         	goto	l7888
  4546  00106C                     u10290:
  4547  00106C  0EBF               	movlw	191
  4548  00106E  0100               	movlb	0	; () banked
  4549  001070  6F67               	movwf	??_efgtoa& (0+255),b
  4550  001072  0EFF               	movlw	255
  4551  001074  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4552  001076  5166               	movf	efgtoa@c& (0+255),w,b
  4553  001078  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  4554  00107A  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  4555  00107C  5167               	movf	??_efgtoa& (0+255),w,b
  4556  00107E  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4557  001080  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4558  001082  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4559  001084  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4560  001086  E10A               	bnz	u10300
  4561  001088  0E1A               	movlw	26
  4562  00108A  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4563  00108C  A0D8               	btfss	status,0,c
  4564  00108E  EF4B  F008         	goto	u10301
  4565  001092  EF4E  F008         	goto	u10300
  4566  001096                     u10301:
  4567  001096  0E01               	movlw	1
  4568  001098  EF4F  F008         	goto	u10310
  4569  00109C                     u10300:
  4570  00109C  0E00               	movlw	0
  4571  00109E                     u10310:
  4572  00109E  6F70               	movwf	_efgtoa$3133& (0+255),b
  4573  0010A0  6B71               	clrf	(_efgtoa$3133+1)& (0+255),b
  4574  0010A2                     
  4575                           ; BSR set to: 0
  4576  0010A2  5170               	movf	_efgtoa$3133& (0+255),w,b
  4577  0010A4  1171               	iorwf	(_efgtoa$3133+1)& (0+255),w,b
  4578  0010A6  B4D8               	btfsc	status,2,c
  4579  0010A8  EF58  F008         	goto	u10321
  4580  0010AC  EF5A  F008         	goto	u10320
  4581  0010B0                     u10321:
  4582  0010B0  EF68  F008         	goto	l7880
  4583  0010B4                     u10320:
  4584  0010B4                     
  4585                           ; BSR set to: 0
  4586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4587  0010B4  0E00               	movlw	low _dbuf
  4588  0010B6  259E               	addwf	efgtoa@n& (0+255),w,b
  4589  0010B8  6E0A               	movwf	strcpy@dest^0,c
  4590  0010BA  0E02               	movlw	high _dbuf
  4591  0010BC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4592  0010BE  6E0B               	movwf	(strcpy@dest+1)^0,c
  4593  0010C0  0EA3               	movlw	low STR_24
  4594  0010C2  6E0C               	movwf	strcpy@src^0,c
  4595  0010C4  0E0E               	movlw	high STR_24
  4596  0010C6  6E0D               	movwf	(strcpy@src+1)^0,c
  4597  0010C8  ECD0  F02C         	call	_strcpy	;wreg free
  4598                           
  4599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4600  0010CC  EF0A  F008         	goto	l7864
  4601  0010D0                     l7880:
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4605  0010D0  0E00               	movlw	low _dbuf
  4606  0010D2  259E               	addwf	efgtoa@n& (0+255),w,b
  4607  0010D4  6E0A               	movwf	strcpy@dest^0,c
  4608  0010D6  0E02               	movlw	high _dbuf
  4609  0010D8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4610  0010DA  6E0B               	movwf	(strcpy@dest+1)^0,c
  4611  0010DC  0EAB               	movlw	low STR_25
  4612  0010DE  6E0C               	movwf	strcpy@src^0,c
  4613  0010E0  0E0E               	movlw	high STR_25
  4614  0010E2  6E0D               	movwf	(strcpy@src+1)^0,c
  4615  0010E4  ECD0  F02C         	call	_strcpy	;wreg free
  4616  0010E8  EF0A  F008         	goto	l7864
  4617  0010EC                     l7888:
  4618                           
  4619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4620  0010EC  0E00               	movlw	0
  4621  0010EE  0100               	movlb	0	; () banked
  4622  0010F0  6FA0               	movwf	efgtoa@u& (0+255),b
  4623  0010F2  0E00               	movlw	0
  4624  0010F4  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  4625  0010F6  0E80               	movlw	128
  4626  0010F8  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  4627  0010FA  0E3F               	movlw	63
  4628  0010FC  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  4629                           
  4630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4631  0010FE  0E00               	movlw	0
  4632  001100  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  4633  001102  0E00               	movlw	0
  4634  001104  6F9C               	movwf	efgtoa@e& (0+255),b
  4635  001106                     
  4636                           ; BSR set to: 0
  4637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4638  001106  C098  F00A         	movff	efgtoa@g,___fleq@ff1
  4639  00110A  C099  F00B         	movff	efgtoa@g+1,___fleq@ff1+1
  4640  00110E  C09A  F00C         	movff	efgtoa@g+2,___fleq@ff1+2
  4641  001112  C09B  F00D         	movff	efgtoa@g+3,___fleq@ff1+3
  4642  001116  0E00               	movlw	0
  4643  001118  6E0E               	movwf	___fleq@ff2^0,c
  4644  00111A  0E00               	movlw	0
  4645  00111C  6E0F               	movwf	(___fleq@ff2+1)^0,c
  4646  00111E  0E00               	movlw	0
  4647  001120  6E10               	movwf	(___fleq@ff2+2)^0,c
  4648  001122  0E00               	movlw	0
  4649  001124  6E11               	movwf	(___fleq@ff2+3)^0,c
  4650  001126  EC41  F02B         	call	___fleq	;wreg free
  4651  00112A  B0D8               	btfsc	status,0,c
  4652  00112C  EF9A  F008         	goto	u10331
  4653  001130  EF9C  F008         	goto	u10330
  4654  001134                     u10331:
  4655  001134  EF1F  F009         	goto	l7906
  4656  001138                     u10330:
  4657  001138  EFBB  F008         	goto	l7898
  4658  00113C                     l7894:
  4659                           
  4660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4661  00113C  C0A0  F018         	movff	efgtoa@u,___flmul@b
  4662  001140  C0A1  F019         	movff	efgtoa@u+1,___flmul@b+1
  4663  001144  C0A2  F01A         	movff	efgtoa@u+2,___flmul@b+2
  4664  001148  C0A3  F01B         	movff	efgtoa@u+3,___flmul@b+3
  4665  00114C  0E00               	movlw	0
  4666  00114E  6E1C               	movwf	___flmul@a^0,c
  4667  001150  0E00               	movlw	0
  4668  001152  6E1D               	movwf	(___flmul@a+1)^0,c
  4669  001154  0E20               	movlw	32
  4670  001156  6E1E               	movwf	(___flmul@a+2)^0,c
  4671  001158  0E41               	movlw	65
  4672  00115A  6E1F               	movwf	(___flmul@a+3)^0,c
  4673  00115C  ECAA  F016         	call	___flmul	;wreg free
  4674  001160  C018  F0A0         	movff	?___flmul,efgtoa@u
  4675  001164  C019  F0A1         	movff	?___flmul+1,efgtoa@u+1
  4676  001168  C01A  F0A2         	movff	?___flmul+2,efgtoa@u+2
  4677  00116C  C01B  F0A3         	movff	?___flmul+3,efgtoa@u+3
  4678  001170                     
  4679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4680  001170  0100               	movlb	0	; () banked
  4681  001172  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  4682  001174  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  4683  001176                     l7898:
  4684                           
  4685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4686  001176  C098  F031         	movff	efgtoa@g,___flge@ff1
  4687  00117A  C099  F032         	movff	efgtoa@g+1,___flge@ff1+1
  4688  00117E  C09A  F033         	movff	efgtoa@g+2,___flge@ff1+2
  4689  001182  C09B  F034         	movff	efgtoa@g+3,___flge@ff1+3
  4690  001186  0E00               	movlw	0
  4691  001188  6E1C               	movwf	___flmul@a^0,c
  4692  00118A  0E00               	movlw	0
  4693  00118C  6E1D               	movwf	(___flmul@a+1)^0,c
  4694  00118E  0E20               	movlw	32
  4695  001190  6E1E               	movwf	(___flmul@a+2)^0,c
  4696  001192  0E41               	movlw	65
  4697  001194  6E1F               	movwf	(___flmul@a+3)^0,c
  4698  001196  C0A0  F018         	movff	efgtoa@u,___flmul@b
  4699  00119A  C0A1  F019         	movff	efgtoa@u+1,___flmul@b+1
  4700  00119E  C0A2  F01A         	movff	efgtoa@u+2,___flmul@b+2
  4701  0011A2  C0A3  F01B         	movff	efgtoa@u+3,___flmul@b+3
  4702  0011A6  ECAA  F016         	call	___flmul	;wreg free
  4703  0011AA  C018  F035         	movff	?___flmul,___flge@ff2
  4704  0011AE  C019  F036         	movff	?___flmul+1,___flge@ff2+1
  4705  0011B2  C01A  F037         	movff	?___flmul+2,___flge@ff2+2
  4706  0011B6  C01B  F038         	movff	?___flmul+3,___flge@ff2+3
  4707  0011BA  ECE5  F027         	call	___flge	;wreg free
  4708  0011BE  B0D8               	btfsc	status,0,c
  4709  0011C0  EFE4  F008         	goto	u10341
  4710  0011C4  EFE6  F008         	goto	u10340
  4711  0011C8                     u10341:
  4712  0011C8  EF9E  F008         	goto	l7894
  4713  0011CC                     u10340:
  4714  0011CC  EF06  F009         	goto	l7904
  4715  0011D0                     l7900:
  4716                           
  4717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4718  0011D0  C0A0  F018         	movff	efgtoa@u,___fldiv@b
  4719  0011D4  C0A1  F019         	movff	efgtoa@u+1,___fldiv@b+1
  4720  0011D8  C0A2  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  4721  0011DC  C0A3  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  4722  0011E0  0E00               	movlw	0
  4723  0011E2  6E1C               	movwf	___fldiv@a^0,c
  4724  0011E4  0E00               	movlw	0
  4725  0011E6  6E1D               	movwf	(___fldiv@a+1)^0,c
  4726  0011E8  0E20               	movlw	32
  4727  0011EA  6E1E               	movwf	(___fldiv@a+2)^0,c
  4728  0011EC  0E41               	movlw	65
  4729  0011EE  6E1F               	movwf	(___fldiv@a+3)^0,c
  4730  0011F0  ECBF  F018         	call	___fldiv	;wreg free
  4731  0011F4  C018  F0A0         	movff	?___fldiv,efgtoa@u
  4732  0011F8  C019  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  4733  0011FC  C01A  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  4734  001200  C01B  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  4735  001204                     
  4736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4737  001204  0100               	movlb	0	; () banked
  4738  001206  079C               	decf	efgtoa@e& (0+255),f,b
  4739  001208  A0D8               	btfss	status,0,c
  4740  00120A  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  4741  00120C                     l7904:
  4742                           
  4743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4744  00120C  C098  F031         	movff	efgtoa@g,___flge@ff1
  4745  001210  C099  F032         	movff	efgtoa@g+1,___flge@ff1+1
  4746  001214  C09A  F033         	movff	efgtoa@g+2,___flge@ff1+2
  4747  001218  C09B  F034         	movff	efgtoa@g+3,___flge@ff1+3
  4748  00121C  C0A0  F035         	movff	efgtoa@u,___flge@ff2
  4749  001220  C0A1  F036         	movff	efgtoa@u+1,___flge@ff2+1
  4750  001224  C0A2  F037         	movff	efgtoa@u+2,___flge@ff2+2
  4751  001228  C0A3  F038         	movff	efgtoa@u+3,___flge@ff2+3
  4752  00122C  ECE5  F027         	call	___flge	;wreg free
  4753  001230  A0D8               	btfss	status,0,c
  4754  001232  EF1D  F009         	goto	u10351
  4755  001236  EF1F  F009         	goto	u10350
  4756  00123A                     u10351:
  4757  00123A  EFE8  F008         	goto	l7900
  4758  00123E                     u10350:
  4759  00123E                     l7906:
  4760                           
  4761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4762  00123E  C066  F010         	movff	efgtoa@c,tolower@c
  4763  001242  6A11               	clrf	(tolower@c+1)^0,c
  4764  001244  ECA0  F02C         	call	_tolower	;wreg free
  4765  001248  5010               	movf	?_tolower^0,w,c
  4766  00124A  0100               	movlb	0	; () banked
  4767  00124C  6F8D               	movwf	efgtoa@mode& (0+255),b
  4768  00124E                     
  4769                           ; BSR set to: 0
  4770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4771  00124E  C08D  F08C         	movff	efgtoa@mode,efgtoa@nmode
  4772  001252                     
  4773                           ; BSR set to: 0
  4774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4775  001252  0E67               	movlw	103
  4776  001254  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4777  001256  A4D8               	btfss	status,2,c
  4778  001258  EF30  F009         	goto	u10361
  4779  00125C  EF32  F009         	goto	u10360
  4780  001260                     u10361:
  4781  001260  EF58  F009         	goto	l7920
  4782  001264                     u10360:
  4783  001264                     
  4784                           ; BSR set to: 0
  4785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4786  001264  504D               	movf	_prec^0,w,c
  4787  001266  104E               	iorwf	(_prec+1)^0,w,c
  4788  001268  A4D8               	btfss	status,2,c
  4789  00126A  EF39  F009         	goto	u10371
  4790  00126E  EF3B  F009         	goto	u10370
  4791  001272                     u10371:
  4792  001272  EF3F  F009         	goto	l7916
  4793  001276                     u10370:
  4794  001276                     
  4795                           ; BSR set to: 0
  4796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4797  001276  0E00               	movlw	0
  4798  001278  6E4E               	movwf	(_prec+1)^0,c
  4799  00127A  0E01               	movlw	1
  4800  00127C  6E4D               	movwf	_prec^0,c
  4801  00127E                     l7916:
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4805  00127E  BE4E               	btfsc	(_prec+1)^0,7,c
  4806  001280  EF4C  F009         	goto	u10380
  4807  001284  504E               	movf	(_prec+1)^0,w,c
  4808  001286  E106               	bnz	u10381
  4809  001288  044D               	decf	_prec^0,w,c
  4810  00128A  B0D8               	btfsc	status,0,c
  4811  00128C  EF4A  F009         	goto	u10381
  4812  001290  EF4C  F009         	goto	u10380
  4813  001294                     u10381:
  4814  001294  EF52  F009         	goto	l1588
  4815  001298                     u10380:
  4816  001298                     l7918:
  4817                           
  4818                           ; BSR set to: 0
  4819  001298  0E00               	movlw	0
  4820  00129A  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  4821  00129C  0E06               	movlw	6
  4822  00129E  6F88               	movwf	efgtoa@p& (0+255),b
  4823  0012A0  EF61  F009         	goto	l7926
  4824  0012A4                     l1588:
  4825                           
  4826                           ; BSR set to: 0
  4827  0012A4  C04D  F088         	movff	_prec,efgtoa@p
  4828  0012A8  C04E  F089         	movff	_prec+1,efgtoa@p+1
  4829  0012AC  EF61  F009         	goto	l7926
  4830  0012B0                     l7920:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4834  0012B0  BE4E               	btfsc	(_prec+1)^0,7,c
  4835  0012B2  EF5D  F009         	goto	u10391
  4836  0012B6  EF5F  F009         	goto	u10390
  4837  0012BA                     u10391:
  4838  0012BA  EF4C  F009         	goto	l7918
  4839  0012BE                     u10390:
  4840  0012BE  EF52  F009         	goto	l1588
  4841  0012C2                     l7926:
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4845  0012C2  0E67               	movlw	103
  4846  0012C4  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4847  0012C6  A4D8               	btfss	status,2,c
  4848  0012C8  EF68  F009         	goto	u10401
  4849  0012CC  EF6A  F009         	goto	u10400
  4850  0012D0                     u10401:
  4851  0012D0  EF99  F009         	goto	l7936
  4852  0012D4                     u10400:
  4853  0012D4                     
  4854                           ; BSR set to: 0
  4855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4856  0012D4  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  4857  0012D6  EF78  F009         	goto	u10410
  4858  0012DA  0EFC               	movlw	252
  4859  0012DC  5D9C               	subwf	efgtoa@e& (0+255),w,b
  4860  0012DE  0EFF               	movlw	255
  4861  0012E0  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4862  0012E2  A0D8               	btfss	status,0,c
  4863  0012E4  EF76  F009         	goto	u10411
  4864  0012E8  EF78  F009         	goto	u10410
  4865  0012EC                     u10411:
  4866  0012EC  EF97  F009         	goto	l7934
  4867  0012F0                     u10410:
  4868  0012F0                     
  4869                           ; BSR set to: 0
  4870  0012F0  0EFF               	movlw	255
  4871  0012F2  6F67               	movwf	??_efgtoa& (0+255),b
  4872  0012F4  0EFF               	movlw	255
  4873  0012F6  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4874  0012F8  C088  F069         	movff	efgtoa@p,??_efgtoa+2
  4875  0012FC  C089  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  4876  001300  5167               	movf	??_efgtoa& (0+255),w,b
  4877  001302  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4878  001304  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4879  001306  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4880  001308  519C               	movf	efgtoa@e& (0+255),w,b
  4881  00130A  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4882  00130C  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4883  00130E  0A80               	xorlw	128
  4884  001310  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  4885  001312  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  4886  001314  0A80               	xorlw	128
  4887  001316  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4888  001318  A0D8               	btfss	status,0,c
  4889  00131A  EF91  F009         	goto	u10421
  4890  00131E  EF93  F009         	goto	u10420
  4891  001322                     u10421:
  4892  001322  EF97  F009         	goto	l7934
  4893  001326                     u10420:
  4894  001326                     
  4895                           ; BSR set to: 0
  4896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4897  001326  0E66               	movlw	102
  4898  001328  6F8C               	movwf	efgtoa@nmode& (0+255),b
  4899                           
  4900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4901  00132A  EF99  F009         	goto	l7936
  4902  00132E                     l7934:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4906  00132E  0E65               	movlw	101
  4907  001330  6F8C               	movwf	efgtoa@nmode& (0+255),b
  4908  001332                     l7936:
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4912  001332  C088  F07E         	movff	efgtoa@p,efgtoa@m
  4913  001336  C089  F07F         	movff	efgtoa@p+1,efgtoa@m+1
  4914  00133A                     
  4915                           ; BSR set to: 0
  4916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4917  00133A  0E67               	movlw	103
  4918  00133C  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4919  00133E  A4D8               	btfss	status,2,c
  4920  001340  EFA4  F009         	goto	u10431
  4921  001344  EFA6  F009         	goto	u10430
  4922  001348                     u10431:
  4923  001348  EFB6  F009         	goto	l7944
  4924  00134C                     u10430:
  4925  00134C                     
  4926                           ; BSR set to: 0
  4927  00134C  0E66               	movlw	102
  4928  00134E  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  4929  001350  A4D8               	btfss	status,2,c
  4930  001352  EFAD  F009         	goto	u10441
  4931  001356  EFAF  F009         	goto	u10440
  4932  00135A                     u10441:
  4933  00135A  EFB8  F009         	goto	l7946
  4934  00135E                     u10440:
  4935  00135E                     
  4936                           ; BSR set to: 0
  4937  00135E  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4938  001360  EFB6  F009         	goto	u10450
  4939  001364  EFB4  F009         	goto	u10451
  4940  001368                     u10451:
  4941  001368  EFB8  F009         	goto	l7946
  4942  00136C                     u10450:
  4943  00136C                     l7944:
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4947  00136C  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  4948  00136E  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  4949  001370                     l7946:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4953  001370  0E66               	movlw	102
  4954  001372  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  4955  001374  A4D8               	btfss	status,2,c
  4956  001376  EFBF  F009         	goto	u10461
  4957  00137A  EFC1  F009         	goto	u10460
  4958  00137E                     u10461:
  4959  00137E  EFE1  F009         	goto	l7956
  4960  001382                     u10460:
  4961  001382                     
  4962                           ; BSR set to: 0
  4963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4964  001382  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4965  001384  EFC8  F009         	goto	u10470
  4966  001388  EFC6  F009         	goto	u10471
  4967  00138C                     u10471:
  4968  00138C  EFD4  F009         	goto	l7952
  4969  001390                     u10470:
  4970  001390                     
  4971                           ; BSR set to: 0
  4972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4973  001390  0E00               	movlw	0
  4974  001392  6FA0               	movwf	efgtoa@u& (0+255),b
  4975  001394  0E00               	movlw	0
  4976  001396  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  4977  001398  0E80               	movlw	128
  4978  00139A  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  4979  00139C  0E3F               	movlw	63
  4980  00139E  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  4981                           
  4982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4983  0013A0  0E00               	movlw	0
  4984  0013A2  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  4985  0013A4  0E00               	movlw	0
  4986  0013A6  6F9C               	movwf	efgtoa@e& (0+255),b
  4987  0013A8                     l7952:
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4991  0013A8  0E67               	movlw	103
  4992  0013AA  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4993  0013AC  B4D8               	btfsc	status,2,c
  4994  0013AE  EFDB  F009         	goto	u10481
  4995  0013B2  EFDD  F009         	goto	u10480
  4996  0013B6                     u10481:
  4997  0013B6  EFE1  F009         	goto	l7956
  4998  0013BA                     u10480:
  4999  0013BA                     
  5000                           ; BSR set to: 0
  5001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5002  0013BA  519C               	movf	efgtoa@e& (0+255),w,b
  5003  0013BC  277E               	addwf	efgtoa@m& (0+255),f,b
  5004  0013BE  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  5005  0013C0  237F               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5006  0013C2                     l7956:
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5010  0013C2  0E00               	movlw	0
  5011  0013C4  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  5012  0013C6  0E00               	movlw	0
  5013  0013C8  6F96               	movwf	efgtoa@i& (0+255),b
  5014  0013CA                     
  5015                           ; BSR set to: 0
  5016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5017  0013CA  C098  F08E         	movff	efgtoa@g,efgtoa@h
  5018  0013CE  C099  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  5019  0013D2  C09A  F090         	movff	efgtoa@g+2,efgtoa@h+2
  5020  0013D6  C09B  F091         	movff	efgtoa@g+3,efgtoa@h+3
  5021  0013DA                     
  5022                           ; BSR set to: 0
  5023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5024  0013DA  C0A0  F080         	movff	efgtoa@u,efgtoa@ou
  5025  0013DE  C0A1  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  5026  0013E2  C0A2  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  5027  0013E6  C0A3  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  5028                           
  5029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5030  0013EA  EF72  F00A         	goto	l7970
  5031  0013EE                     l7962:
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5035  0013EE  C08E  F018         	movff	efgtoa@h,___fldiv@b
  5036  0013F2  C08F  F019         	movff	efgtoa@h+1,___fldiv@b+1
  5037  0013F6  C090  F01A         	movff	efgtoa@h+2,___fldiv@b+2
  5038  0013FA  C091  F01B         	movff	efgtoa@h+3,___fldiv@b+3
  5039  0013FE  C0A0  F01C         	movff	efgtoa@u,___fldiv@a
  5040  001402  C0A1  F01D         	movff	efgtoa@u+1,___fldiv@a+1
  5041  001406  C0A2  F01E         	movff	efgtoa@u+2,___fldiv@a+2
  5042  00140A  C0A3  F01F         	movff	efgtoa@u+3,___fldiv@a+3
  5043  00140E  ECBF  F018         	call	___fldiv	;wreg free
  5044  001412  C018  F031         	movff	?___fldiv,floorf@x
  5045  001416  C019  F032         	movff	?___fldiv+1,floorf@x+1
  5046  00141A  C01A  F033         	movff	?___fldiv+2,floorf@x+2
  5047  00141E  C01B  F034         	movff	?___fldiv+3,floorf@x+3
  5048  001422  ECFB  F01B         	call	_floorf	;wreg free
  5049  001426  C031  F092         	movff	?_floorf,efgtoa@l
  5050  00142A  C032  F093         	movff	?_floorf+1,efgtoa@l+1
  5051  00142E  C033  F094         	movff	?_floorf+2,efgtoa@l+2
  5052  001432  C034  F095         	movff	?_floorf+3,efgtoa@l+3
  5053                           
  5054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5055  001436  C092  F00A         	movff	efgtoa@l,___fltol@f1
  5056  00143A  C093  F00B         	movff	efgtoa@l+1,___fltol@f1+1
  5057  00143E  C094  F00C         	movff	efgtoa@l+2,___fltol@f1+2
  5058  001442  C095  F00D         	movff	efgtoa@l+3,___fltol@f1+3
  5059  001446  EC62  F027         	call	___fltol	;wreg free
  5060  00144A  C00A  F084         	movff	?___fltol,efgtoa@d
  5061  00144E  C00B  F085         	movff	?___fltol+1,efgtoa@d+1
  5062  001452                     
  5063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5064  001452  C08E  F041         	movff	efgtoa@h,___flsub@b
  5065  001456  C08F  F042         	movff	efgtoa@h+1,___flsub@b+1
  5066  00145A  C090  F043         	movff	efgtoa@h+2,___flsub@b+2
  5067  00145E  C091  F044         	movff	efgtoa@h+3,___flsub@b+3
  5068  001462  C0A0  F01C         	movff	efgtoa@u,___flmul@a
  5069  001466  C0A1  F01D         	movff	efgtoa@u+1,___flmul@a+1
  5070  00146A  C0A2  F01E         	movff	efgtoa@u+2,___flmul@a+2
  5071  00146E  C0A3  F01F         	movff	efgtoa@u+3,___flmul@a+3
  5072  001472  C092  F018         	movff	efgtoa@l,___flmul@b
  5073  001476  C093  F019         	movff	efgtoa@l+1,___flmul@b+1
  5074  00147A  C094  F01A         	movff	efgtoa@l+2,___flmul@b+2
  5075  00147E  C095  F01B         	movff	efgtoa@l+3,___flmul@b+3
  5076  001482  ECAA  F016         	call	___flmul	;wreg free
  5077  001486  C018  F045         	movff	?___flmul,___flsub@a
  5078  00148A  C019  F046         	movff	?___flmul+1,___flsub@a+1
  5079  00148E  C01A  F047         	movff	?___flmul+2,___flsub@a+2
  5080  001492  C01B  F048         	movff	?___flmul+3,___flsub@a+3
  5081  001496  EC39  F02F         	call	___flsub	;wreg free
  5082  00149A  C041  F08E         	movff	?___flsub,efgtoa@h
  5083  00149E  C042  F08F         	movff	?___flsub+1,efgtoa@h+1
  5084  0014A2  C043  F090         	movff	?___flsub+2,efgtoa@h+2
  5085  0014A6  C044  F091         	movff	?___flsub+3,efgtoa@h+3
  5086  0014AA                     
  5087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5088  0014AA  C0A0  F018         	movff	efgtoa@u,___fldiv@b
  5089  0014AE  C0A1  F019         	movff	efgtoa@u+1,___fldiv@b+1
  5090  0014B2  C0A2  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  5091  0014B6  C0A3  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  5092  0014BA  0E00               	movlw	0
  5093  0014BC  6E1C               	movwf	___fldiv@a^0,c
  5094  0014BE  0E00               	movlw	0
  5095  0014C0  6E1D               	movwf	(___fldiv@a+1)^0,c
  5096  0014C2  0E20               	movlw	32
  5097  0014C4  6E1E               	movwf	(___fldiv@a+2)^0,c
  5098  0014C6  0E41               	movlw	65
  5099  0014C8  6E1F               	movwf	(___fldiv@a+3)^0,c
  5100  0014CA  ECBF  F018         	call	___fldiv	;wreg free
  5101  0014CE  C018  F0A0         	movff	?___fldiv,efgtoa@u
  5102  0014D2  C019  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  5103  0014D6  C01A  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  5104  0014DA  C01B  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  5105  0014DE                     
  5106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5107  0014DE  0100               	movlb	0	; () banked
  5108  0014E0  4B96               	infsnz	efgtoa@i& (0+255),f,b
  5109  0014E2  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  5110  0014E4                     l7970:
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5114  0014E4  517E               	movf	efgtoa@m& (0+255),w,b
  5115  0014E6  5D96               	subwf	efgtoa@i& (0+255),w,b
  5116  0014E8  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  5117  0014EA  0A80               	xorlw	128
  5118  0014EC  6F67               	movwf	??_efgtoa& (0+255),b
  5119  0014EE  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  5120  0014F0  0A80               	xorlw	128
  5121  0014F2  5967               	subwfb	??_efgtoa& (0+255),w,b
  5122  0014F4  A0D8               	btfss	status,0,c
  5123  0014F6  EF7F  F00A         	goto	u10491
  5124  0014FA  EF81  F00A         	goto	u10490
  5125  0014FE                     u10491:
  5126  0014FE  EFF7  F009         	goto	l7962
  5127  001502                     u10490:
  5128  001502                     
  5129                           ; BSR set to: 0
  5130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5131  001502  C0A0  F018         	movff	efgtoa@u,___flmul@b
  5132  001506  C0A1  F019         	movff	efgtoa@u+1,___flmul@b+1
  5133  00150A  C0A2  F01A         	movff	efgtoa@u+2,___flmul@b+2
  5134  00150E  C0A3  F01B         	movff	efgtoa@u+3,___flmul@b+3
  5135  001512  0E00               	movlw	0
  5136  001514  6E1C               	movwf	___flmul@a^0,c
  5137  001516  0E00               	movlw	0
  5138  001518  6E1D               	movwf	(___flmul@a+1)^0,c
  5139  00151A  0EA0               	movlw	160
  5140  00151C  6E1E               	movwf	(___flmul@a+2)^0,c
  5141  00151E  0E40               	movlw	64
  5142  001520  6E1F               	movwf	(___flmul@a+3)^0,c
  5143  001522  ECAA  F016         	call	___flmul	;wreg free
  5144  001526  C018  F092         	movff	?___flmul,efgtoa@l
  5145  00152A  C019  F093         	movff	?___flmul+1,efgtoa@l+1
  5146  00152E  C01A  F094         	movff	?___flmul+2,efgtoa@l+2
  5147  001532  C01B  F095         	movff	?___flmul+3,efgtoa@l+3
  5148  001536                     
  5149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5150  001536  C08E  F031         	movff	efgtoa@h,___flge@ff1
  5151  00153A  C08F  F032         	movff	efgtoa@h+1,___flge@ff1+1
  5152  00153E  C090  F033         	movff	efgtoa@h+2,___flge@ff1+2
  5153  001542  C091  F034         	movff	efgtoa@h+3,___flge@ff1+3
  5154  001546  C092  F035         	movff	efgtoa@l,___flge@ff2
  5155  00154A  C093  F036         	movff	efgtoa@l+1,___flge@ff2+1
  5156  00154E  C094  F037         	movff	efgtoa@l+2,___flge@ff2+2
  5157  001552  C095  F038         	movff	efgtoa@l+3,___flge@ff2+3
  5158  001556  ECE5  F027         	call	___flge	;wreg free
  5159  00155A  B0D8               	btfsc	status,0,c
  5160  00155C  EFB2  F00A         	goto	u10501
  5161  001560  EFB4  F00A         	goto	u10500
  5162  001564                     u10501:
  5163  001564  EFBF  F00A         	goto	l7978
  5164  001568                     u10500:
  5165  001568                     
  5166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5167  001568  0E00               	movlw	0
  5168  00156A  0100               	movlb	0	; () banked
  5169  00156C  6F92               	movwf	efgtoa@l& (0+255),b
  5170  00156E  0E00               	movlw	0
  5171  001570  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  5172  001572  0E00               	movlw	0
  5173  001574  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  5174  001576  0E00               	movlw	0
  5175  001578  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  5176                           
  5177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5178  00157A  EFE8  F00A         	goto	l7984
  5179  00157E                     l7978:
  5180                           
  5181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5182  00157E  C08E  F00A         	movff	efgtoa@h,___fleq@ff1
  5183  001582  C08F  F00B         	movff	efgtoa@h+1,___fleq@ff1+1
  5184  001586  C090  F00C         	movff	efgtoa@h+2,___fleq@ff1+2
  5185  00158A  C091  F00D         	movff	efgtoa@h+3,___fleq@ff1+3
  5186  00158E  C092  F00E         	movff	efgtoa@l,___fleq@ff2
  5187  001592  C093  F00F         	movff	efgtoa@l+1,___fleq@ff2+1
  5188  001596  C094  F010         	movff	efgtoa@l+2,___fleq@ff2+2
  5189  00159A  C095  F011         	movff	efgtoa@l+3,___fleq@ff2+3
  5190  00159E  EC41  F02B         	call	___fleq	;wreg free
  5191  0015A2  A0D8               	btfss	status,0,c
  5192  0015A4  EFD6  F00A         	goto	u10511
  5193  0015A8  EFD8  F00A         	goto	u10510
  5194  0015AC                     u10511:
  5195  0015AC  EFE8  F00A         	goto	l7984
  5196  0015B0                     u10510:
  5197  0015B0  0100               	movlb	0	; () banked
  5198  0015B2  B184               	btfsc	efgtoa@d& (0+255),0,b
  5199  0015B4  EFDE  F00A         	goto	u10521
  5200  0015B8  EFE0  F00A         	goto	u10520
  5201  0015BC                     u10521:
  5202  0015BC  EFE8  F00A         	goto	l7984
  5203  0015C0                     u10520:
  5204  0015C0                     
  5205                           ; BSR set to: 0
  5206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5207  0015C0  0E00               	movlw	0
  5208  0015C2  6F92               	movwf	efgtoa@l& (0+255),b
  5209  0015C4  0E00               	movlw	0
  5210  0015C6  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  5211  0015C8  0E00               	movlw	0
  5212  0015CA  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  5213  0015CC  0E00               	movlw	0
  5214  0015CE  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  5215  0015D0                     l7984:
  5216                           
  5217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5218  0015D0  C098  F031         	movff	efgtoa@g,___fladd@b
  5219  0015D4  C099  F032         	movff	efgtoa@g+1,___fladd@b+1
  5220  0015D8  C09A  F033         	movff	efgtoa@g+2,___fladd@b+2
  5221  0015DC  C09B  F034         	movff	efgtoa@g+3,___fladd@b+3
  5222  0015E0  C092  F035         	movff	efgtoa@l,___fladd@a
  5223  0015E4  C093  F036         	movff	efgtoa@l+1,___fladd@a+1
  5224  0015E8  C094  F037         	movff	efgtoa@l+2,___fladd@a+2
  5225  0015EC  C095  F038         	movff	efgtoa@l+3,___fladd@a+3
  5226  0015F0  EC4A  F014         	call	___fladd	;wreg free
  5227  0015F4  C031  F08E         	movff	?___fladd,efgtoa@h
  5228  0015F8  C032  F08F         	movff	?___fladd+1,efgtoa@h+1
  5229  0015FC  C033  F090         	movff	?___fladd+2,efgtoa@h+2
  5230  001600  C034  F091         	movff	?___fladd+3,efgtoa@h+3
  5231  001604                     
  5232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5233  001604  C08E  F031         	movff	efgtoa@h,___flge@ff1
  5234  001608  C08F  F032         	movff	efgtoa@h+1,___flge@ff1+1
  5235  00160C  C090  F033         	movff	efgtoa@h+2,___flge@ff1+2
  5236  001610  C091  F034         	movff	efgtoa@h+3,___flge@ff1+3
  5237  001614  0E00               	movlw	0
  5238  001616  6E1C               	movwf	___flmul@a^0,c
  5239  001618  0E00               	movlw	0
  5240  00161A  6E1D               	movwf	(___flmul@a+1)^0,c
  5241  00161C  0E20               	movlw	32
  5242  00161E  6E1E               	movwf	(___flmul@a+2)^0,c
  5243  001620  0E41               	movlw	65
  5244  001622  6E1F               	movwf	(___flmul@a+3)^0,c
  5245  001624  C080  F018         	movff	efgtoa@ou,___flmul@b
  5246  001628  C081  F019         	movff	efgtoa@ou+1,___flmul@b+1
  5247  00162C  C082  F01A         	movff	efgtoa@ou+2,___flmul@b+2
  5248  001630  C083  F01B         	movff	efgtoa@ou+3,___flmul@b+3
  5249  001634  ECAA  F016         	call	___flmul	;wreg free
  5250  001638  C018  F035         	movff	?___flmul,___flge@ff2
  5251  00163C  C019  F036         	movff	?___flmul+1,___flge@ff2+1
  5252  001640  C01A  F037         	movff	?___flmul+2,___flge@ff2+2
  5253  001644  C01B  F038         	movff	?___flmul+3,___flge@ff2+3
  5254  001648  ECE5  F027         	call	___flge	;wreg free
  5255  00164C  A0D8               	btfss	status,0,c
  5256  00164E  EF2B  F00B         	goto	u10531
  5257  001652  EF2D  F00B         	goto	u10530
  5258  001656                     u10531:
  5259  001656  EF56  F00B         	goto	l7996
  5260  00165A                     u10530:
  5261  00165A                     
  5262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5263  00165A  0100               	movlb	0	; () banked
  5264  00165C  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  5265  00165E  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  5266  001660                     
  5267                           ; BSR set to: 0
  5268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5269  001660  C080  F018         	movff	efgtoa@ou,___flmul@b
  5270  001664  C081  F019         	movff	efgtoa@ou+1,___flmul@b+1
  5271  001668  C082  F01A         	movff	efgtoa@ou+2,___flmul@b+2
  5272  00166C  C083  F01B         	movff	efgtoa@ou+3,___flmul@b+3
  5273  001670  0E00               	movlw	0
  5274  001672  6E1C               	movwf	___flmul@a^0,c
  5275  001674  0E00               	movlw	0
  5276  001676  6E1D               	movwf	(___flmul@a+1)^0,c
  5277  001678  0E20               	movlw	32
  5278  00167A  6E1E               	movwf	(___flmul@a+2)^0,c
  5279  00167C  0E41               	movlw	65
  5280  00167E  6E1F               	movwf	(___flmul@a+3)^0,c
  5281  001680  ECAA  F016         	call	___flmul	;wreg free
  5282  001684  C018  F080         	movff	?___flmul,efgtoa@ou
  5283  001688  C019  F081         	movff	?___flmul+1,efgtoa@ou+1
  5284  00168C  C01A  F082         	movff	?___flmul+2,efgtoa@ou+2
  5285  001690  C01B  F083         	movff	?___flmul+3,efgtoa@ou+3
  5286  001694                     
  5287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5288  001694  0E66               	movlw	102
  5289  001696  0100               	movlb	0	; () banked
  5290  001698  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  5291  00169A  A4D8               	btfss	status,2,c
  5292  00169C  EF52  F00B         	goto	u10541
  5293  0016A0  EF54  F00B         	goto	u10540
  5294  0016A4                     u10541:
  5295  0016A4  EF56  F00B         	goto	l7996
  5296  0016A8                     u10540:
  5297  0016A8                     
  5298                           ; BSR set to: 0
  5299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5300  0016A8  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  5301  0016AA  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  5302  0016AC                     l7996:
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5305  0016AC  C080  F0A0         	movff	efgtoa@ou,efgtoa@u
  5306  0016B0  C081  F0A1         	movff	efgtoa@ou+1,efgtoa@u+1
  5307  0016B4  C082  F0A2         	movff	efgtoa@ou+2,efgtoa@u+2
  5308  0016B8  C083  F0A3         	movff	efgtoa@ou+3,efgtoa@u+3
  5309  0016BC                     
  5310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5311  0016BC  0E65               	movlw	101
  5312  0016BE  0100               	movlb	0	; () banked
  5313  0016C0  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  5314  0016C2  B4D8               	btfsc	status,2,c
  5315  0016C4  EF66  F00B         	goto	u10551
  5316  0016C8  EF68  F00B         	goto	u10550
  5317  0016CC                     u10551:
  5318  0016CC  EF6E  F00B         	goto	l8002
  5319  0016D0                     u10550:
  5320  0016D0                     
  5321                           ; BSR set to: 0
  5322  0016D0  C09C  F07C         	movff	efgtoa@e,efgtoa@ne
  5323  0016D4  C09D  F07D         	movff	efgtoa@e+1,efgtoa@ne+1
  5324  0016D8  EF72  F00B         	goto	l1616
  5325  0016DC                     l8002:
  5326                           
  5327                           ; BSR set to: 0
  5328  0016DC  0E00               	movlw	0
  5329  0016DE  6F7D               	movwf	(efgtoa@ne+1)& (0+255),b
  5330  0016E0  0E00               	movlw	0
  5331  0016E2  6F7C               	movwf	efgtoa@ne& (0+255),b
  5332  0016E4                     l1616:
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5336  0016E4  0E00               	movlw	0
  5337  0016E6  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  5338  0016E8  0E00               	movlw	0
  5339  0016EA  6F7A               	movwf	efgtoa@pp& (0+255),b
  5340                           
  5341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5342  0016EC  0E00               	movlw	0
  5343  0016EE  6F79               	movwf	(efgtoa@t+1)& (0+255),b
  5344  0016F0  0E00               	movlw	0
  5345  0016F2  6F78               	movwf	efgtoa@t& (0+255),b
  5346                           
  5347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5348  0016F4  0E00               	movlw	0
  5349  0016F6  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  5350  0016F8  0E00               	movlw	0
  5351  0016FA  6F96               	movwf	efgtoa@i& (0+255),b
  5352                           
  5353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5354  0016FC  EF6E  F00C         	goto	l8052
  5355  001700                     l8004:
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5359  001700  C08E  F018         	movff	efgtoa@h,___fldiv@b
  5360  001704  C08F  F019         	movff	efgtoa@h+1,___fldiv@b+1
  5361  001708  C090  F01A         	movff	efgtoa@h+2,___fldiv@b+2
  5362  00170C  C091  F01B         	movff	efgtoa@h+3,___fldiv@b+3
  5363  001710  C0A0  F01C         	movff	efgtoa@u,___fldiv@a
  5364  001714  C0A1  F01D         	movff	efgtoa@u+1,___fldiv@a+1
  5365  001718  C0A2  F01E         	movff	efgtoa@u+2,___fldiv@a+2
  5366  00171C  C0A3  F01F         	movff	efgtoa@u+3,___fldiv@a+3
  5367  001720  ECBF  F018         	call	___fldiv	;wreg free
  5368  001724  C018  F031         	movff	?___fldiv,floorf@x
  5369  001728  C019  F032         	movff	?___fldiv+1,floorf@x+1
  5370  00172C  C01A  F033         	movff	?___fldiv+2,floorf@x+2
  5371  001730  C01B  F034         	movff	?___fldiv+3,floorf@x+3
  5372  001734  ECFB  F01B         	call	_floorf	;wreg free
  5373  001738  C031  F092         	movff	?_floorf,efgtoa@l
  5374  00173C  C032  F093         	movff	?_floorf+1,efgtoa@l+1
  5375  001740  C033  F094         	movff	?_floorf+2,efgtoa@l+2
  5376  001744  C034  F095         	movff	?_floorf+3,efgtoa@l+3
  5377                           
  5378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5379  001748  C092  F00A         	movff	efgtoa@l,___fltol@f1
  5380  00174C  C093  F00B         	movff	efgtoa@l+1,___fltol@f1+1
  5381  001750  C094  F00C         	movff	efgtoa@l+2,___fltol@f1+2
  5382  001754  C095  F00D         	movff	efgtoa@l+3,___fltol@f1+3
  5383  001758  EC62  F027         	call	___fltol	;wreg free
  5384  00175C  C00A  F084         	movff	?___fltol,efgtoa@d
  5385  001760  C00B  F085         	movff	?___fltol+1,efgtoa@d+1
  5386  001764                     
  5387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5388  001764  B84F               	btfsc	_flags^0,4,c
  5389  001766  EFB7  F00B         	goto	u10561
  5390  00176A  EFB9  F00B         	goto	u10560
  5391  00176E                     u10561:
  5392  00176E  EFD7  F00B         	goto	l8016
  5393  001772                     u10560:
  5394  001772  0100               	movlb	0	; () banked
  5395  001774  5184               	movf	efgtoa@d& (0+255),w,b
  5396  001776  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5397  001778  A4D8               	btfss	status,2,c
  5398  00177A  EFC1  F00B         	goto	u10571
  5399  00177E  EFC3  F00B         	goto	u10570
  5400  001782                     u10571:
  5401  001782  EFD7  F00B         	goto	l8016
  5402  001786                     u10570:
  5403  001786                     
  5404                           ; BSR set to: 0
  5405  001786  0E67               	movlw	103
  5406  001788  198D               	xorwf	efgtoa@mode& (0+255),w,b
  5407  00178A  A4D8               	btfss	status,2,c
  5408  00178C  EFCA  F00B         	goto	u10581
  5409  001790  EFCC  F00B         	goto	u10580
  5410  001794                     u10581:
  5411  001794  EFD7  F00B         	goto	l8016
  5412  001798                     u10580:
  5413  001798                     
  5414                           ; BSR set to: 0
  5415  001798  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5416  00179A  EFD3  F00B         	goto	u10590
  5417  00179E  EFD1  F00B         	goto	u10591
  5418  0017A2                     u10591:
  5419  0017A2  EFD7  F00B         	goto	l8016
  5420  0017A6                     u10590:
  5421  0017A6                     
  5422                           ; BSR set to: 0
  5423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5424  0017A6  4B78               	infsnz	efgtoa@t& (0+255),f,b
  5425  0017A8  2B79               	incf	(efgtoa@t+1)& (0+255),f,b
  5426                           
  5427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5428  0017AA  EF22  F00C         	goto	l8044
  5429  0017AE                     l8016:
  5430                           
  5431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5432  0017AE  0100               	movlb	0	; () banked
  5433  0017B0  517A               	movf	efgtoa@pp& (0+255),w,b
  5434  0017B2  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5435  0017B4  A4D8               	btfss	status,2,c
  5436  0017B6  EFDF  F00B         	goto	u10601
  5437  0017BA  EFE1  F00B         	goto	u10600
  5438  0017BE                     u10601:
  5439  0017BE  EF0B  F00C         	goto	l8036
  5440  0017C2                     u10600:
  5441  0017C2                     
  5442                           ; BSR set to: 0
  5443  0017C2  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5444  0017C4  EFE8  F00B         	goto	u10610
  5445  0017C8  EFE6  F00B         	goto	u10611
  5446  0017CC                     u10611:
  5447  0017CC  EF0B  F00C         	goto	l8036
  5448  0017D0                     u10610:
  5449  0017D0                     
  5450                           ; BSR set to: 0
  5451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5452  0017D0  0E00               	movlw	low _dbuf
  5453  0017D2  259E               	addwf	efgtoa@n& (0+255),w,b
  5454  0017D4  6ED9               	movwf	fsr2l,c
  5455  0017D6  0E02               	movlw	high _dbuf
  5456  0017D8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5457  0017DA  6EDA               	movwf	fsr2h,c
  5458  0017DC  0E2E               	movlw	46
  5459  0017DE  6EDF               	movwf	indf2,c
  5460  0017E0                     
  5461                           ; BSR set to: 0
  5462  0017E0  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5463  0017E2  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5464  0017E4                     
  5465                           ; BSR set to: 0
  5466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5467  0017E4  078A               	decf	efgtoa@w& (0+255),f,b
  5468  0017E6  A0D8               	btfss	status,0,c
  5469  0017E8  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5470  0017EA                     
  5471                           ; BSR set to: 0
  5472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5473  0017EA  0E00               	movlw	0
  5474  0017EC  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  5475  0017EE  0E01               	movlw	1
  5476  0017F0  6F7A               	movwf	efgtoa@pp& (0+255),b
  5477  0017F2  EF0B  F00C         	goto	l8036
  5478  0017F6                     l8028:
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5482  0017F6  0E00               	movlw	low _dbuf
  5483  0017F8  259E               	addwf	efgtoa@n& (0+255),w,b
  5484  0017FA  6ED9               	movwf	fsr2l,c
  5485  0017FC  0E02               	movlw	high _dbuf
  5486  0017FE  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5487  001800  6EDA               	movwf	fsr2h,c
  5488  001802  0E30               	movlw	48
  5489  001804  6EDF               	movwf	indf2,c
  5490  001806                     
  5491                           ; BSR set to: 0
  5492  001806  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5493  001808  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5494  00180A                     
  5495                           ; BSR set to: 0
  5496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5497  00180A  078A               	decf	efgtoa@w& (0+255),f,b
  5498  00180C  A0D8               	btfss	status,0,c
  5499  00180E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5500  001810                     
  5501                           ; BSR set to: 0
  5502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5503  001810  0778               	decf	efgtoa@t& (0+255),f,b
  5504  001812  A0D8               	btfss	status,0,c
  5505  001814  0779               	decf	(efgtoa@t+1)& (0+255),f,b
  5506  001816                     l8036:
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5510  001816  5178               	movf	efgtoa@t& (0+255),w,b
  5511  001818  1179               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5512  00181A  A4D8               	btfss	status,2,c
  5513  00181C  EF12  F00C         	goto	u10621
  5514  001820  EF14  F00C         	goto	u10620
  5515  001824                     u10621:
  5516  001824  EFFB  F00B         	goto	l8028
  5517  001828                     u10620:
  5518  001828                     
  5519                           ; BSR set to: 0
  5520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5521  001828  0E00               	movlw	low _dbuf
  5522  00182A  259E               	addwf	efgtoa@n& (0+255),w,b
  5523  00182C  6ED9               	movwf	fsr2l,c
  5524  00182E  0E02               	movlw	high _dbuf
  5525  001830  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5526  001832  6EDA               	movwf	fsr2h,c
  5527  001834  5184               	movf	efgtoa@d& (0+255),w,b
  5528  001836  0F30               	addlw	48
  5529  001838  6EDF               	movwf	indf2,c
  5530  00183A                     
  5531                           ; BSR set to: 0
  5532  00183A  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5533  00183C  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5534  00183E                     
  5535                           ; BSR set to: 0
  5536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5537  00183E  078A               	decf	efgtoa@w& (0+255),f,b
  5538  001840  A0D8               	btfss	status,0,c
  5539  001842  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5540  001844                     l8044:
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5544  001844  C08E  F041         	movff	efgtoa@h,___flsub@b
  5545  001848  C08F  F042         	movff	efgtoa@h+1,___flsub@b+1
  5546  00184C  C090  F043         	movff	efgtoa@h+2,___flsub@b+2
  5547  001850  C091  F044         	movff	efgtoa@h+3,___flsub@b+3
  5548  001854  C0A0  F01C         	movff	efgtoa@u,___flmul@a
  5549  001858  C0A1  F01D         	movff	efgtoa@u+1,___flmul@a+1
  5550  00185C  C0A2  F01E         	movff	efgtoa@u+2,___flmul@a+2
  5551  001860  C0A3  F01F         	movff	efgtoa@u+3,___flmul@a+3
  5552  001864  C092  F018         	movff	efgtoa@l,___flmul@b
  5553  001868  C093  F019         	movff	efgtoa@l+1,___flmul@b+1
  5554  00186C  C094  F01A         	movff	efgtoa@l+2,___flmul@b+2
  5555  001870  C095  F01B         	movff	efgtoa@l+3,___flmul@b+3
  5556  001874  ECAA  F016         	call	___flmul	;wreg free
  5557  001878  C018  F045         	movff	?___flmul,___flsub@a
  5558  00187C  C019  F046         	movff	?___flmul+1,___flsub@a+1
  5559  001880  C01A  F047         	movff	?___flmul+2,___flsub@a+2
  5560  001884  C01B  F048         	movff	?___flmul+3,___flsub@a+3
  5561  001888  EC39  F02F         	call	___flsub	;wreg free
  5562  00188C  C041  F08E         	movff	?___flsub,efgtoa@h
  5563  001890  C042  F08F         	movff	?___flsub+1,efgtoa@h+1
  5564  001894  C043  F090         	movff	?___flsub+2,efgtoa@h+2
  5565  001898  C044  F091         	movff	?___flsub+3,efgtoa@h+3
  5566  00189C                     
  5567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5568  00189C  C0A0  F018         	movff	efgtoa@u,___fldiv@b
  5569  0018A0  C0A1  F019         	movff	efgtoa@u+1,___fldiv@b+1
  5570  0018A4  C0A2  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  5571  0018A8  C0A3  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  5572  0018AC  0E00               	movlw	0
  5573  0018AE  6E1C               	movwf	___fldiv@a^0,c
  5574  0018B0  0E00               	movlw	0
  5575  0018B2  6E1D               	movwf	(___fldiv@a+1)^0,c
  5576  0018B4  0E20               	movlw	32
  5577  0018B6  6E1E               	movwf	(___fldiv@a+2)^0,c
  5578  0018B8  0E41               	movlw	65
  5579  0018BA  6E1F               	movwf	(___fldiv@a+3)^0,c
  5580  0018BC  ECBF  F018         	call	___fldiv	;wreg free
  5581  0018C0  C018  F0A0         	movff	?___fldiv,efgtoa@u
  5582  0018C4  C019  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  5583  0018C8  C01A  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  5584  0018CC  C01B  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  5585  0018D0                     
  5586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5587  0018D0  0100               	movlb	0	; () banked
  5588  0018D2  077C               	decf	efgtoa@ne& (0+255),f,b
  5589  0018D4  A0D8               	btfss	status,0,c
  5590  0018D6  077D               	decf	(efgtoa@ne+1)& (0+255),f,b
  5591  0018D8                     
  5592                           ; BSR set to: 0
  5593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5594  0018D8  4B96               	infsnz	efgtoa@i& (0+255),f,b
  5595  0018DA  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  5596  0018DC                     l8052:
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5600  0018DC  517E               	movf	efgtoa@m& (0+255),w,b
  5601  0018DE  5D96               	subwf	efgtoa@i& (0+255),w,b
  5602  0018E0  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  5603  0018E2  0A80               	xorlw	128
  5604  0018E4  6F67               	movwf	??_efgtoa& (0+255),b
  5605  0018E6  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  5606  0018E8  0A80               	xorlw	128
  5607  0018EA  5967               	subwfb	??_efgtoa& (0+255),w,b
  5608  0018EC  B0D8               	btfsc	status,0,c
  5609  0018EE  EF7B  F00C         	goto	u10631
  5610  0018F2  EF7D  F00C         	goto	u10630
  5611  0018F6                     u10631:
  5612  0018F6  EF8B  F00C         	goto	l8056
  5613  0018FA                     u10630:
  5614  0018FA                     
  5615                           ; BSR set to: 0
  5616  0018FA  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5617  0018FC  EF89  F00C         	goto	u10641
  5618  001900  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  5619  001902  E109               	bnz	u10640
  5620  001904  0E4B               	movlw	75
  5621  001906  5D9E               	subwf	efgtoa@n& (0+255),w,b
  5622  001908  A0D8               	btfss	status,0,c
  5623  00190A  EF89  F00C         	goto	u10641
  5624  00190E  EF8B  F00C         	goto	u10640
  5625  001912                     u10641:
  5626  001912  EF80  F00B         	goto	l8004
  5627  001916                     u10640:
  5628  001916                     l8056:
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5632  001916  517A               	movf	efgtoa@pp& (0+255),w,b
  5633  001918  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5634  00191A  A4D8               	btfss	status,2,c
  5635  00191C  EF92  F00C         	goto	u10651
  5636  001920  EF94  F00C         	goto	u10650
  5637  001924                     u10651:
  5638  001924  EFA5  F00C         	goto	l8064
  5639  001928                     u10650:
  5640  001928                     
  5641                           ; BSR set to: 0
  5642  001928  A84F               	btfss	_flags^0,4,c
  5643  00192A  EF99  F00C         	goto	u10661
  5644  00192E  EF9B  F00C         	goto	u10660
  5645  001932                     u10661:
  5646  001932  EFA5  F00C         	goto	l8064
  5647  001936                     u10660:
  5648  001936                     
  5649                           ; BSR set to: 0
  5650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5651  001936  0E00               	movlw	low _dbuf
  5652  001938  259E               	addwf	efgtoa@n& (0+255),w,b
  5653  00193A  6ED9               	movwf	fsr2l,c
  5654  00193C  0E02               	movlw	high _dbuf
  5655  00193E  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5656  001940  6EDA               	movwf	fsr2h,c
  5657  001942  0E2E               	movlw	46
  5658  001944  6EDF               	movwf	indf2,c
  5659  001946                     
  5660                           ; BSR set to: 0
  5661  001946  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5662  001948  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5663  00194A                     l8064:
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5667  00194A  0E00               	movlw	low _dbuf
  5668  00194C  259E               	addwf	efgtoa@n& (0+255),w,b
  5669  00194E  6ED9               	movwf	fsr2l,c
  5670  001950  0E02               	movlw	high _dbuf
  5671  001952  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5672  001954  6EDA               	movwf	fsr2h,c
  5673  001956  0E00               	movlw	0
  5674  001958  6EDF               	movwf	indf2,c
  5675  00195A                     
  5676                           ; BSR set to: 0
  5677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5678  00195A  0E65               	movlw	101
  5679  00195C  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  5680  00195E  A4D8               	btfss	status,2,c
  5681  001960  EFB4  F00C         	goto	u10671
  5682  001964  EFB6  F00C         	goto	u10670
  5683  001968                     u10671:
  5684  001968  EF0F  F008         	goto	l7866
  5685  00196C                     u10670:
  5686  00196C                     
  5687                           ; BSR set to: 0
  5688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5689  00196C  0E00               	movlw	0
  5690  00196E  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  5691  001970  0E4F               	movlw	79
  5692  001972  6F96               	movwf	efgtoa@i& (0+255),b
  5693  001974                     
  5694                           ; BSR set to: 0
  5695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5696  001974  0E00               	movlw	low _dbuf
  5697  001976  2596               	addwf	efgtoa@i& (0+255),w,b
  5698  001978  6ED9               	movwf	fsr2l,c
  5699  00197A  0E02               	movlw	high _dbuf
  5700  00197C  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5701  00197E  6EDA               	movwf	fsr2h,c
  5702  001980  0E00               	movlw	0
  5703  001982  6EDF               	movwf	indf2,c
  5704  001984                     
  5705                           ; BSR set to: 0
  5706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5707  001984  0E00               	movlw	0
  5708  001986  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  5709  001988  0E00               	movlw	0
  5710  00198A  6F86               	movwf	efgtoa@sign& (0+255),b
  5711  00198C                     
  5712                           ; BSR set to: 0
  5713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5714  00198C  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5715  00198E  EFCD  F00C         	goto	u10680
  5716  001992  EFCB  F00C         	goto	u10681
  5717  001996                     u10681:
  5718  001996  EFD5  F00C         	goto	l8080
  5719  00199A                     u10680:
  5720  00199A                     
  5721                           ; BSR set to: 0
  5722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5723  00199A  0E00               	movlw	0
  5724  00199C  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  5725  00199E  0E01               	movlw	1
  5726  0019A0  6F86               	movwf	efgtoa@sign& (0+255),b
  5727  0019A2                     
  5728                           ; BSR set to: 0
  5729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5730  0019A2  6D9C               	negf	efgtoa@e& (0+255),b
  5731  0019A4  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  5732  0019A6  B0D8               	btfsc	status,0,c
  5733  0019A8  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  5734  0019AA                     l8080:
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5738  0019AA  0E00               	movlw	0
  5739  0019AC  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  5740  0019AE  0E02               	movlw	2
  5741  0019B0  6F88               	movwf	efgtoa@p& (0+255),b
  5742                           
  5743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5744  0019B2  EF06  F00D         	goto	l8092
  5745  0019B6                     l8082:
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5749  0019B6  0796               	decf	efgtoa@i& (0+255),f,b
  5750  0019B8  A0D8               	btfss	status,0,c
  5751  0019BA  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5752  0019BC                     
  5753                           ; BSR set to: 0
  5754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5755  0019BC  0E00               	movlw	low _dbuf
  5756  0019BE  2596               	addwf	efgtoa@i& (0+255),w,b
  5757  0019C0  6ED9               	movwf	fsr2l,c
  5758  0019C2  0E02               	movlw	high _dbuf
  5759  0019C4  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5760  0019C6  6EDA               	movwf	fsr2h,c
  5761  0019C8  C09C  F00A         	movff	efgtoa@e,___awmod@dividend
  5762  0019CC  C09D  F00B         	movff	efgtoa@e+1,___awmod@dividend+1
  5763  0019D0  0E00               	movlw	0
  5764  0019D2  6E0D               	movwf	(___awmod@divisor+1)^0,c
  5765  0019D4  0E0A               	movlw	10
  5766  0019D6  6E0C               	movwf	___awmod@divisor^0,c
  5767  0019D8  ECE9  F02A         	call	___awmod	;wreg free
  5768  0019DC  500A               	movf	?___awmod^0,w,c
  5769  0019DE  0F30               	addlw	48
  5770  0019E0  6EDF               	movwf	indf2,c
  5771  0019E2                     
  5772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5773  0019E2  C09C  F010         	movff	efgtoa@e,___awdiv@dividend
  5774  0019E6  C09D  F011         	movff	efgtoa@e+1,___awdiv@dividend+1
  5775  0019EA  0E00               	movlw	0
  5776  0019EC  6E13               	movwf	(___awdiv@divisor+1)^0,c
  5777  0019EE  0E0A               	movlw	10
  5778  0019F0  6E12               	movwf	___awdiv@divisor^0,c
  5779  0019F2  EC26  F02A         	call	___awdiv	;wreg free
  5780  0019F6  C010  F09C         	movff	?___awdiv,efgtoa@e
  5781  0019FA  C011  F09D         	movff	?___awdiv+1,efgtoa@e+1
  5782  0019FE                     
  5783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5784  0019FE  0100               	movlb	0	; () banked
  5785  001A00  0788               	decf	efgtoa@p& (0+255),f,b
  5786  001A02  A0D8               	btfss	status,0,c
  5787  001A04  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  5788  001A06                     
  5789                           ; BSR set to: 0
  5790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5791  001A06  078A               	decf	efgtoa@w& (0+255),f,b
  5792  001A08  A0D8               	btfss	status,0,c
  5793  001A0A  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5794  001A0C                     l8092:
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5798  001A0C  519C               	movf	efgtoa@e& (0+255),w,b
  5799  001A0E  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5800  001A10  A4D8               	btfss	status,2,c
  5801  001A12  EF0D  F00D         	goto	u10691
  5802  001A16  EF0F  F00D         	goto	u10690
  5803  001A1A                     u10691:
  5804  001A1A  EFDB  F00C         	goto	l8082
  5805  001A1E                     u10690:
  5806  001A1E                     
  5807                           ; BSR set to: 0
  5808  001A1E  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5809  001A20  EF1C  F00D         	goto	u10700
  5810  001A24  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  5811  001A26  E106               	bnz	u10701
  5812  001A28  0588               	decf	efgtoa@p& (0+255),w,b
  5813  001A2A  B0D8               	btfsc	status,0,c
  5814  001A2C  EF1A  F00D         	goto	u10701
  5815  001A30  EF1C  F00D         	goto	u10700
  5816  001A34                     u10701:
  5817  001A34  EFDB  F00C         	goto	l8082
  5818  001A38                     u10700:
  5819  001A38                     
  5820                           ; BSR set to: 0
  5821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5822  001A38  0796               	decf	efgtoa@i& (0+255),f,b
  5823  001A3A  A0D8               	btfss	status,0,c
  5824  001A3C  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5825  001A3E                     
  5826                           ; BSR set to: 0
  5827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5828  001A3E  5186               	movf	efgtoa@sign& (0+255),w,b
  5829  001A40  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5830  001A42  A4D8               	btfss	status,2,c
  5831  001A44  EF26  F00D         	goto	u10711
  5832  001A48  EF28  F00D         	goto	u10710
  5833  001A4C                     u10711:
  5834  001A4C  EF2E  F00D         	goto	l8102
  5835  001A50                     u10710:
  5836  001A50                     
  5837                           ; BSR set to: 0
  5838  001A50  0E00               	movlw	0
  5839  001A52  6F73               	movwf	(_efgtoa$3137+1)& (0+255),b
  5840  001A54  0E2B               	movlw	43
  5841  001A56  6F72               	movwf	_efgtoa$3137& (0+255),b
  5842  001A58  EF32  F00D         	goto	l8104
  5843  001A5C                     l8102:
  5844                           
  5845                           ; BSR set to: 0
  5846  001A5C  0E00               	movlw	0
  5847  001A5E  6F73               	movwf	(_efgtoa$3137+1)& (0+255),b
  5848  001A60  0E2D               	movlw	45
  5849  001A62  6F72               	movwf	_efgtoa$3137& (0+255),b
  5850  001A64                     l8104:
  5851                           
  5852                           ; BSR set to: 0
  5853  001A64  0E00               	movlw	low _dbuf
  5854  001A66  2596               	addwf	efgtoa@i& (0+255),w,b
  5855  001A68  6ED9               	movwf	fsr2l,c
  5856  001A6A  0E02               	movlw	high _dbuf
  5857  001A6C  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5858  001A6E  6EDA               	movwf	fsr2h,c
  5859  001A70  C072  FFDF         	movff	_efgtoa$3137,indf2
  5860  001A74                     
  5861                           ; BSR set to: 0
  5862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5863  001A74  078A               	decf	efgtoa@w& (0+255),f,b
  5864  001A76  A0D8               	btfss	status,0,c
  5865  001A78  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5866  001A7A                     
  5867                           ; BSR set to: 0
  5868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5869  001A7A  0796               	decf	efgtoa@i& (0+255),f,b
  5870  001A7C  A0D8               	btfss	status,0,c
  5871  001A7E  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5872  001A80                     
  5873                           ; BSR set to: 0
  5874  001A80  0EBF               	movlw	191
  5875  001A82  6F67               	movwf	??_efgtoa& (0+255),b
  5876  001A84  0EFF               	movlw	255
  5877  001A86  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  5878  001A88  5166               	movf	efgtoa@c& (0+255),w,b
  5879  001A8A  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  5880  001A8C  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  5881  001A8E  5167               	movf	??_efgtoa& (0+255),w,b
  5882  001A90  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  5883  001A92  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  5884  001A94  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5885  001A96  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  5886  001A98  E10A               	bnz	u10720
  5887  001A9A  0E1A               	movlw	26
  5888  001A9C  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  5889  001A9E  A0D8               	btfss	status,0,c
  5890  001AA0  EF54  F00D         	goto	u10721
  5891  001AA4  EF57  F00D         	goto	u10720
  5892  001AA8                     u10721:
  5893  001AA8  0E01               	movlw	1
  5894  001AAA  EF58  F00D         	goto	u10730
  5895  001AAE                     u10720:
  5896  001AAE  0E00               	movlw	0
  5897  001AB0                     u10730:
  5898  001AB0  6F76               	movwf	_efgtoa$3139& (0+255),b
  5899  001AB2  6B77               	clrf	(_efgtoa$3139+1)& (0+255),b
  5900  001AB4                     
  5901                           ; BSR set to: 0
  5902  001AB4  5176               	movf	_efgtoa$3139& (0+255),w,b
  5903  001AB6  1177               	iorwf	(_efgtoa$3139+1)& (0+255),w,b
  5904  001AB8  A4D8               	btfss	status,2,c
  5905  001ABA  EF61  F00D         	goto	u10741
  5906  001ABE  EF63  F00D         	goto	u10740
  5907  001AC2                     u10741:
  5908  001AC2  EF69  F00D         	goto	l8118
  5909  001AC6                     u10740:
  5910  001AC6                     
  5911                           ; BSR set to: 0
  5912  001AC6  0E00               	movlw	0
  5913  001AC8  6F75               	movwf	(_efgtoa$3138+1)& (0+255),b
  5914  001ACA  0E65               	movlw	101
  5915  001ACC  6F74               	movwf	_efgtoa$3138& (0+255),b
  5916  001ACE  EF6D  F00D         	goto	l8120
  5917  001AD2                     l8118:
  5918                           
  5919                           ; BSR set to: 0
  5920  001AD2  0E00               	movlw	0
  5921  001AD4  6F75               	movwf	(_efgtoa$3138+1)& (0+255),b
  5922  001AD6  0E45               	movlw	69
  5923  001AD8  6F74               	movwf	_efgtoa$3138& (0+255),b
  5924  001ADA                     l8120:
  5925                           
  5926                           ; BSR set to: 0
  5927  001ADA  0E00               	movlw	low _dbuf
  5928  001ADC  2596               	addwf	efgtoa@i& (0+255),w,b
  5929  001ADE  6ED9               	movwf	fsr2l,c
  5930  001AE0  0E02               	movlw	high _dbuf
  5931  001AE2  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5932  001AE4  6EDA               	movwf	fsr2h,c
  5933  001AE6  C074  FFDF         	movff	_efgtoa$3138,indf2
  5934  001AEA                     
  5935                           ; BSR set to: 0
  5936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5937  001AEA  078A               	decf	efgtoa@w& (0+255),f,b
  5938  001AEC  A0D8               	btfss	status,0,c
  5939  001AEE  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5940  001AF0                     
  5941                           ; BSR set to: 0
  5942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5943  001AF0  0E00               	movlw	low _dbuf
  5944  001AF2  259E               	addwf	efgtoa@n& (0+255),w,b
  5945  001AF4  6E0A               	movwf	strcpy@dest^0,c
  5946  001AF6  0E02               	movlw	high _dbuf
  5947  001AF8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5948  001AFA  6E0B               	movwf	(strcpy@dest+1)^0,c
  5949  001AFC  0E00               	movlw	low _dbuf
  5950  001AFE  2596               	addwf	efgtoa@i& (0+255),w,b
  5951  001B00  6E0C               	movwf	strcpy@src^0,c
  5952  001B02  0E02               	movlw	high _dbuf
  5953  001B04  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5954  001B06  6E0D               	movwf	(strcpy@src+1)^0,c
  5955  001B08  ECD0  F02C         	call	_strcpy	;wreg free
  5956  001B0C  EF0F  F008         	goto	l7866
  5957  001B10                     l1570:
  5958  001B10  0012               	return		;funcret
  5959  001B12                     __end_of_efgtoa:
  5960                           	callstack 0
  5961                           
  5962 ;; *************** function _tolower *****************
  5963 ;; Defined at:
  5964 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  c               2   15[COMRAM] int 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  2   15[COMRAM] int 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5980 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5981 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5982 ;;Total ram usage:        8 bytes
  5983 ;; Hardware stack levels used: 1
  5984 ;; Hardware stack levels required when called: 8
  5985 ;; This function calls:
  5986 ;;		_isupper
  5987 ;; This function is called by:
  5988 ;;		_efgtoa
  5989 ;;		_vfpfcnvrt
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           	psect	text16
  5994  005940                     __ptext16:
  5995                           	callstack 0
  5996  005940                     _tolower:
  5997                           	callstack 17
  5998  005940  0EBF               	movlw	191
  5999  005942  6E12               	movwf	??_tolower^0,c
  6000  005944  0EFF               	movlw	255
  6001  005946  6E13               	movwf	(??_tolower+1)^0,c
  6002  005948  C010  F014         	movff	tolower@c,??_tolower+2
  6003  00594C  C011  F015         	movff	tolower@c+1,??_tolower+3
  6004  005950  5012               	movf	??_tolower^0,w,c
  6005  005952  2614               	addwf	(??_tolower+2)^0,f,c
  6006  005954  5013               	movf	(??_tolower+1)^0,w,c
  6007  005956  2215               	addwfc	(??_tolower+3)^0,f,c
  6008  005958  5015               	movf	(??_tolower+3)^0,w,c
  6009  00595A  E10A               	bnz	u9870
  6010  00595C  0E1A               	movlw	26
  6011  00595E  5C14               	subwf	(??_tolower+2)^0,w,c
  6012  005960  A0D8               	btfss	status,0,c
  6013  005962  EFB5  F02C         	goto	u9871
  6014  005966  EFB8  F02C         	goto	u9870
  6015  00596A                     u9871:
  6016  00596A  0E01               	movlw	1
  6017  00596C  EFB9  F02C         	goto	u9880
  6018  005970                     u9870:
  6019  005970  0E00               	movlw	0
  6020  005972                     u9880:
  6021  005972  6E16               	movwf	_tolower$3300^0,c
  6022  005974  6A17               	clrf	(_tolower$3300+1)^0,c
  6023  005976  5016               	movf	_tolower$3300^0,w,c
  6024  005978  1017               	iorwf	(_tolower$3300+1)^0,w,c
  6025  00597A  B4D8               	btfsc	status,2,c
  6026  00597C  EFC2  F02C         	goto	u9891
  6027  005980  EFC4  F02C         	goto	u9890
  6028  005984                     u9891:
  6029  005984  EFCB  F02C         	goto	l1834
  6030  005988                     u9890:
  6031  005988  0E20               	movlw	32
  6032  00598A  1010               	iorwf	tolower@c^0,w,c
  6033  00598C  6E10               	movwf	?_tolower^0,c
  6034  00598E  5011               	movf	(tolower@c+1)^0,w,c
  6035  005990  6E11               	movwf	(?_tolower+1)^0,c
  6036  005992  EFCF  F02C         	goto	l1839
  6037  005996                     l1834:
  6038  005996  C010  F010         	movff	tolower@c,?_tolower
  6039  00599A  C011  F011         	movff	tolower@c+1,?_tolower+1
  6040  00599E                     l1839:
  6041  00599E  0012               	return		;funcret
  6042  0059A0                     __end_of_tolower:
  6043                           	callstack 0
  6044                           
  6045 ;; *************** function _isupper *****************
  6046 ;; Defined at:
  6047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  c               2    9[COMRAM] int 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;		None
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  2    9[COMRAM] int 
  6054 ;; Registers used:
  6055 ;;		wreg, status,2, status,0
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6063 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6064 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6065 ;;Total ram usage:        6 bytes
  6066 ;; Hardware stack levels used: 1
  6067 ;; Hardware stack levels required when called: 7
  6068 ;; This function calls:
  6069 ;;		Nothing
  6070 ;; This function is called by:
  6071 ;;		_efgtoa
  6072 ;;		_vfpfcnvrt
  6073 ;;		_tolower
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text17
  6078  005FFA                     __ptext17:
  6079                           	callstack 0
  6080  005FFA                     _isupper:
  6081                           	callstack 17
  6082  005FFA  0EBF               	movlw	191
  6083  005FFC  6E0C               	movwf	??_isupper^0,c
  6084  005FFE  0EFF               	movlw	255
  6085  006000  6E0D               	movwf	(??_isupper+1)^0,c
  6086  006002  C00A  F00E         	movff	isupper@c,??_isupper+2
  6087  006006  C00B  F00F         	movff	isupper@c+1,??_isupper+3
  6088  00600A  500C               	movf	??_isupper^0,w,c
  6089  00600C  260E               	addwf	(??_isupper+2)^0,f,c
  6090  00600E  500D               	movf	(??_isupper+1)^0,w,c
  6091  006010  220F               	addwfc	(??_isupper+3)^0,f,c
  6092  006012  500F               	movf	(??_isupper+3)^0,w,c
  6093  006014  E10A               	bnz	u8880
  6094  006016  0E1A               	movlw	26
  6095  006018  5C0E               	subwf	(??_isupper+2)^0,w,c
  6096  00601A  A0D8               	btfss	status,0,c
  6097  00601C  EF12  F030         	goto	u8881
  6098  006020  EF15  F030         	goto	u8880
  6099  006024                     u8881:
  6100  006024  0E01               	movlw	1
  6101  006026  EF16  F030         	goto	u8890
  6102  00602A                     u8880:
  6103  00602A  0E00               	movlw	0
  6104  00602C                     u8890:
  6105  00602C  6E0A               	movwf	?_isupper^0,c
  6106  00602E  6A0B               	clrf	(?_isupper+1)^0,c
  6107  006030  0012               	return		;funcret
  6108  006032                     __end_of_isupper:
  6109                           	callstack 0
  6110                           
  6111 ;; *************** function _strcpy *****************
  6112 ;; Defined at:
  6113 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  dest            2    9[COMRAM] PTR unsigned char 
  6116 ;;		 -> dbuf(80), 
  6117 ;;  src             2   11[COMRAM] PTR const unsigned char 
  6118 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  6119 ;;		 -> dbuf(80), 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  d               2   17[COMRAM] PTR unsigned char 
  6122 ;;		 -> dbuf(80), 
  6123 ;;  s               2   15[COMRAM] PTR const unsigned char 
  6124 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
  6125 ;;		 -> dbuf(80), 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  2    9[COMRAM] PTR unsigned char 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6135 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6136 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6138 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6139 ;;Total ram usage:       10 bytes
  6140 ;; Hardware stack levels used: 1
  6141 ;; Hardware stack levels required when called: 7
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_efgtoa
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text18
  6150  0059A0                     __ptext18:
  6151                           	callstack 0
  6152  0059A0                     _strcpy:
  6153                           	callstack 17
  6154  0059A0  C00C  F010         	movff	strcpy@src,strcpy@s
  6155  0059A4  C00D  F011         	movff	strcpy@src+1,strcpy@s+1
  6156  0059A8  C00A  F012         	movff	strcpy@dest,strcpy@d
  6157  0059AC  C00B  F013         	movff	strcpy@dest+1,strcpy@d+1
  6158  0059B0                     l7700:
  6159  0059B0  5010               	movf	strcpy@s^0,w,c
  6160  0059B2  6E0E               	movwf	??_strcpy^0,c
  6161  0059B4  5011               	movf	(strcpy@s+1)^0,w,c
  6162  0059B6  6E0F               	movwf	(??_strcpy+1)^0,c
  6163  0059B8  4A10               	infsnz	strcpy@s^0,f,c
  6164  0059BA  2A11               	incf	(strcpy@s+1)^0,f,c
  6165  0059BC  C00E  FFF6         	movff	??_strcpy,tblptrl
  6166  0059C0  C00F  FFF7         	movff	??_strcpy+1,tblptrh
  6167  0059C4  0E00               	movlw	low (__smallconst shr (0+16))
  6168  0059C6  6EF8               	movwf	tblptru,c
  6169  0059C8  C012  FFD9         	movff	strcpy@d,fsr2l
  6170  0059CC  C013  FFDA         	movff	strcpy@d+1,fsr2h
  6171  0059D0  4A12               	infsnz	strcpy@d^0,f,c
  6172  0059D2  2A13               	incf	(strcpy@d+1)^0,f,c
  6173  0059D4  0E0D               	movlw	(high __ramtop+-1)
  6174  0059D6  64F7               	cpfsgt	tblptrh,c
  6175  0059D8  D003               	bra	u9857
  6176  0059DA  0008               	tblrd		*
  6177  0059DC  50F5               	movf	tablat,w,c
  6178  0059DE  D005               	bra	u9850
  6179  0059E0                     u9857:
  6180  0059E0  CFF6 FFE1          	movff	tblptrl,fsr1l
  6181  0059E4  CFF7 FFE2          	movff	tblptrh,fsr1h
  6182  0059E8  50E7               	movf	indf1,w,c
  6183  0059EA                     u9850:
  6184  0059EA  6EDF               	movwf	indf2,c
  6185  0059EC  50DF               	movf	indf2,w,c
  6186  0059EE  A4D8               	btfss	status,2,c
  6187  0059F0  EFFC  F02C         	goto	u9861
  6188  0059F4  EFFE  F02C         	goto	u9860
  6189  0059F8                     u9861:
  6190  0059F8  EFD8  F02C         	goto	l7700
  6191  0059FC                     u9860:
  6192  0059FC  0012               	return		;funcret
  6193  0059FE                     __end_of_strcpy:
  6194                           	callstack 0
  6195                           
  6196 ;; *************** function _floorf *****************
  6197 ;; Defined at:
  6198 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  x               4   48[COMRAM] float 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  u               4   64[COMRAM] struct .
  6203 ;;  m               4   58[COMRAM] unsigned long 
  6204 ;;  e               2   62[COMRAM] int 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  4   48[COMRAM] float 
  6207 ;; Registers used:
  6208 ;;		wreg, status,2, status,0
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6215 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6216 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6217 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6218 ;;Total ram usage:       20 bytes
  6219 ;; Hardware stack levels used: 1
  6220 ;; Hardware stack levels required when called: 7
  6221 ;; This function calls:
  6222 ;;		Nothing
  6223 ;; This function is called by:
  6224 ;;		_efgtoa
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text19
  6229  0037F6                     __ptext19:
  6230                           	callstack 0
  6231  0037F6                     _floorf:
  6232                           	callstack 17
  6233  0037F6  C1CF  F041         	movff	floorf@F527,floorf@u
  6234  0037FA  C1D0  F042         	movff	floorf@F527+1,floorf@u+1
  6235  0037FE  C1D1  F043         	movff	floorf@F527+2,floorf@u+2
  6236  003802  C1D2  F044         	movff	floorf@F527+3,floorf@u+3
  6237  003806  C031  F041         	movff	floorf@x,floorf@u
  6238  00380A  C032  F042         	movff	floorf@x+1,floorf@u+1
  6239  00380E  C033  F043         	movff	floorf@x+2,floorf@u+2
  6240  003812  C034  F044         	movff	floorf@x+3,floorf@u+3
  6241  003816  0E81               	movlw	129
  6242  003818  6E35               	movwf	??_floorf^0,c
  6243  00381A  0EFF               	movlw	255
  6244  00381C  6E36               	movwf	(??_floorf+1)^0,c
  6245  00381E  C041  F037         	movff	floorf@u,??_floorf+2
  6246  003822  C042  F038         	movff	floorf@u+1,??_floorf+3
  6247  003826  C043  F039         	movff	floorf@u+2,??_floorf+4
  6248  00382A  C044  F03A         	movff	floorf@u+3,??_floorf+5
  6249  00382E  0E18               	movlw	24
  6250  003830  EF1F  F01C         	goto	u9900
  6251  003834                     u9905:
  6252  003834  90D8               	bcf	status,0,c
  6253  003836  323A               	rrcf	(??_floorf+5)^0,f,c
  6254  003838  3239               	rrcf	(??_floorf+4)^0,f,c
  6255  00383A  3238               	rrcf	(??_floorf+3)^0,f,c
  6256  00383C  3237               	rrcf	(??_floorf+2)^0,f,c
  6257  00383E                     u9900:
  6258  00383E  2EE8               	decfsz	wreg,f,c
  6259  003840  EF1A  F01C         	goto	u9905
  6260  003844  5037               	movf	(??_floorf+2)^0,w,c
  6261  003846  2435               	addwf	??_floorf^0,w,c
  6262  003848  6E3F               	movwf	floorf@e^0,c
  6263  00384A  0E00               	movlw	0
  6264  00384C  2036               	addwfc	(??_floorf+1)^0,w,c
  6265  00384E  6E40               	movwf	(floorf@e+1)^0,c
  6266  003850  BE40               	btfsc	(floorf@e+1)^0,7,c
  6267  003852  EF34  F01C         	goto	u9911
  6268  003856  5040               	movf	(floorf@e+1)^0,w,c
  6269  003858  E109               	bnz	u9910
  6270  00385A  0E17               	movlw	23
  6271  00385C  5C3F               	subwf	floorf@e^0,w,c
  6272  00385E  A0D8               	btfss	status,0,c
  6273  003860  EF34  F01C         	goto	u9911
  6274  003864  EF36  F01C         	goto	u9910
  6275  003868                     u9911:
  6276  003868  EF40  F01C         	goto	l7718
  6277  00386C                     u9910:
  6278  00386C                     l7716:
  6279  00386C  C031  F031         	movff	floorf@x,?_floorf
  6280  003870  C032  F032         	movff	floorf@x+1,?_floorf+1
  6281  003874  C033  F033         	movff	floorf@x+2,?_floorf+2
  6282  003878  C034  F034         	movff	floorf@x+3,?_floorf+3
  6283  00387C  EF03  F01D         	goto	l1758
  6284  003880                     l7718:
  6285  003880  BE40               	btfsc	(floorf@e+1)^0,7,c
  6286  003882  EF45  F01C         	goto	u9921
  6287  003886  EF47  F01C         	goto	u9920
  6288  00388A                     u9921:
  6289  00388A  EFB7  F01C         	goto	l7728
  6290  00388E                     u9920:
  6291  00388E  C03F  F035         	movff	floorf@e,??_floorf
  6292  003892  0EFF               	movlw	255
  6293  003894  6E36               	movwf	(??_floorf+1)^0,c
  6294  003896  0EFF               	movlw	255
  6295  003898  6E37               	movwf	(??_floorf+2)^0,c
  6296  00389A  0E7F               	movlw	127
  6297  00389C  6E38               	movwf	(??_floorf+3)^0,c
  6298  00389E  0E00               	movlw	0
  6299  0038A0  6E39               	movwf	(??_floorf+4)^0,c
  6300  0038A2                     u9935:
  6301  0038A2  6635               	tstfsz	??_floorf^0,c
  6302  0038A4  EF56  F01C         	goto	u9936
  6303  0038A8  EF5E  F01C         	goto	u9937
  6304  0038AC                     u9936:
  6305  0038AC  3439               	rlcf	(??_floorf+4)^0,w,c
  6306  0038AE  3239               	rrcf	(??_floorf+4)^0,f,c
  6307  0038B0  3238               	rrcf	(??_floorf+3)^0,f,c
  6308  0038B2  3237               	rrcf	(??_floorf+2)^0,f,c
  6309  0038B4  3236               	rrcf	(??_floorf+1)^0,f,c
  6310  0038B6  2E35               	decfsz	??_floorf^0,f,c
  6311  0038B8  EF51  F01C         	goto	u9935
  6312  0038BC                     u9937:
  6313  0038BC  C036  F03B         	movff	??_floorf+1,floorf@m
  6314  0038C0  C037  F03C         	movff	??_floorf+2,floorf@m+1
  6315  0038C4  C038  F03D         	movff	??_floorf+3,floorf@m+2
  6316  0038C8  C039  F03E         	movff	??_floorf+4,floorf@m+3
  6317  0038CC  503B               	movf	floorf@m^0,w,c
  6318  0038CE  1441               	andwf	floorf@u^0,w,c
  6319  0038D0  6E35               	movwf	??_floorf^0,c
  6320  0038D2  503C               	movf	(floorf@m+1)^0,w,c
  6321  0038D4  1442               	andwf	(floorf@u+1)^0,w,c
  6322  0038D6  6E36               	movwf	(??_floorf+1)^0,c
  6323  0038D8  503D               	movf	(floorf@m+2)^0,w,c
  6324  0038DA  1443               	andwf	(floorf@u+2)^0,w,c
  6325  0038DC  6E37               	movwf	(??_floorf+2)^0,c
  6326  0038DE  503E               	movf	(floorf@m+3)^0,w,c
  6327  0038E0  1444               	andwf	(floorf@u+3)^0,w,c
  6328  0038E2  6E38               	movwf	(??_floorf+3)^0,c
  6329  0038E4  5035               	movf	??_floorf^0,w,c
  6330  0038E6  1036               	iorwf	(??_floorf+1)^0,w,c
  6331  0038E8  1037               	iorwf	(??_floorf+2)^0,w,c
  6332  0038EA  1038               	iorwf	(??_floorf+3)^0,w,c
  6333  0038EC  A4D8               	btfss	status,2,c
  6334  0038EE  EF7B  F01C         	goto	u9941
  6335  0038F2  EF7D  F01C         	goto	u9940
  6336  0038F6                     u9941:
  6337  0038F6  EF7F  F01C         	goto	l7724
  6338  0038FA                     u9940:
  6339  0038FA  EF36  F01C         	goto	l7716
  6340  0038FE                     l7724:
  6341  0038FE  C041  F035         	movff	floorf@u,??_floorf
  6342  003902  C042  F036         	movff	floorf@u+1,??_floorf+1
  6343  003906  C043  F037         	movff	floorf@u+2,??_floorf+2
  6344  00390A  C044  F038         	movff	floorf@u+3,??_floorf+3
  6345  00390E  0E20               	movlw	32
  6346  003910  EF8F  F01C         	goto	u9950
  6347  003914                     u9955:
  6348  003914  90D8               	bcf	status,0,c
  6349  003916  3238               	rrcf	(??_floorf+3)^0,f,c
  6350  003918  3237               	rrcf	(??_floorf+2)^0,f,c
  6351  00391A  3236               	rrcf	(??_floorf+1)^0,f,c
  6352  00391C  3235               	rrcf	??_floorf^0,f,c
  6353  00391E                     u9950:
  6354  00391E  2EE8               	decfsz	wreg,f,c
  6355  003920  EF8A  F01C         	goto	u9955
  6356  003924  5035               	movf	??_floorf^0,w,c
  6357  003926  1036               	iorwf	(??_floorf+1)^0,w,c
  6358  003928  1037               	iorwf	(??_floorf+2)^0,w,c
  6359  00392A  1038               	iorwf	(??_floorf+3)^0,w,c
  6360  00392C  B4D8               	btfsc	status,2,c
  6361  00392E  EF9B  F01C         	goto	u9961
  6362  003932  EF9D  F01C         	goto	u9960
  6363  003936                     u9961:
  6364  003936  EFA5  F01C         	goto	l1761
  6365  00393A                     u9960:
  6366  00393A  503B               	movf	floorf@m^0,w,c
  6367  00393C  2641               	addwf	floorf@u^0,f,c
  6368  00393E  503C               	movf	(floorf@m+1)^0,w,c
  6369  003940  2242               	addwfc	(floorf@u+1)^0,f,c
  6370  003942  503D               	movf	(floorf@m+2)^0,w,c
  6371  003944  2243               	addwfc	(floorf@u+2)^0,f,c
  6372  003946  503E               	movf	(floorf@m+3)^0,w,c
  6373  003948  2244               	addwfc	(floorf@u+3)^0,f,c
  6374  00394A                     l1761:
  6375  00394A  1C3B               	comf	floorf@m^0,w,c
  6376  00394C  6E35               	movwf	??_floorf^0,c
  6377  00394E  1C3C               	comf	(floorf@m+1)^0,w,c
  6378  003950  6E36               	movwf	(??_floorf+1)^0,c
  6379  003952  1C3D               	comf	(floorf@m+2)^0,w,c
  6380  003954  6E37               	movwf	(??_floorf+2)^0,c
  6381  003956  1C3E               	comf	(floorf@m+3)^0,w,c
  6382  003958  6E38               	movwf	(??_floorf+3)^0,c
  6383  00395A  5035               	movf	??_floorf^0,w,c
  6384  00395C  1641               	andwf	floorf@u^0,f,c
  6385  00395E  5036               	movf	(??_floorf+1)^0,w,c
  6386  003960  1642               	andwf	(floorf@u+1)^0,f,c
  6387  003962  5037               	movf	(??_floorf+2)^0,w,c
  6388  003964  1643               	andwf	(floorf@u+2)^0,f,c
  6389  003966  5038               	movf	(??_floorf+3)^0,w,c
  6390  003968  1644               	andwf	(floorf@u+3)^0,f,c
  6391  00396A  EFFB  F01C         	goto	l7736
  6392  00396E                     l7728:
  6393  00396E  C041  F035         	movff	floorf@u,??_floorf
  6394  003972  C042  F036         	movff	floorf@u+1,??_floorf+1
  6395  003976  C043  F037         	movff	floorf@u+2,??_floorf+2
  6396  00397A  C044  F038         	movff	floorf@u+3,??_floorf+3
  6397  00397E  0E20               	movlw	32
  6398  003980  EFC7  F01C         	goto	u9970
  6399  003984                     u9975:
  6400  003984  90D8               	bcf	status,0,c
  6401  003986  3238               	rrcf	(??_floorf+3)^0,f,c
  6402  003988  3237               	rrcf	(??_floorf+2)^0,f,c
  6403  00398A  3236               	rrcf	(??_floorf+1)^0,f,c
  6404  00398C  3235               	rrcf	??_floorf^0,f,c
  6405  00398E                     u9970:
  6406  00398E  2EE8               	decfsz	wreg,f,c
  6407  003990  EFC2  F01C         	goto	u9975
  6408  003994  5035               	movf	??_floorf^0,w,c
  6409  003996  1036               	iorwf	(??_floorf+1)^0,w,c
  6410  003998  1037               	iorwf	(??_floorf+2)^0,w,c
  6411  00399A  1038               	iorwf	(??_floorf+3)^0,w,c
  6412  00399C  A4D8               	btfss	status,2,c
  6413  00399E  EFD3  F01C         	goto	u9981
  6414  0039A2  EFD5  F01C         	goto	u9980
  6415  0039A6                     u9981:
  6416  0039A6  EFDF  F01C         	goto	l7732
  6417  0039AA                     u9980:
  6418  0039AA  0E00               	movlw	0
  6419  0039AC  6E41               	movwf	floorf@u^0,c
  6420  0039AE  0E00               	movlw	0
  6421  0039B0  6E42               	movwf	(floorf@u+1)^0,c
  6422  0039B2  0E00               	movlw	0
  6423  0039B4  6E43               	movwf	(floorf@u+2)^0,c
  6424  0039B6  0E00               	movlw	0
  6425  0039B8  6E44               	movwf	(floorf@u+3)^0,c
  6426  0039BA  EFFB  F01C         	goto	l7736
  6427  0039BE                     l7732:
  6428  0039BE  90D8               	bcf	status,0,c
  6429  0039C0  3441               	rlcf	floorf@u^0,w,c
  6430  0039C2  6E35               	movwf	??_floorf^0,c
  6431  0039C4  3442               	rlcf	(floorf@u+1)^0,w,c
  6432  0039C6  6E36               	movwf	(??_floorf+1)^0,c
  6433  0039C8  3443               	rlcf	(floorf@u+2)^0,w,c
  6434  0039CA  6E37               	movwf	(??_floorf+2)^0,c
  6435  0039CC  3444               	rlcf	(floorf@u+3)^0,w,c
  6436  0039CE  6E38               	movwf	(??_floorf+3)^0,c
  6437  0039D0  5035               	movf	??_floorf^0,w,c
  6438  0039D2  1036               	iorwf	(??_floorf+1)^0,w,c
  6439  0039D4  1037               	iorwf	(??_floorf+2)^0,w,c
  6440  0039D6  1038               	iorwf	(??_floorf+3)^0,w,c
  6441  0039D8  B4D8               	btfsc	status,2,c
  6442  0039DA  EFF1  F01C         	goto	u9991
  6443  0039DE  EFF3  F01C         	goto	u9990
  6444  0039E2                     u9991:
  6445  0039E2  EFFB  F01C         	goto	l7736
  6446  0039E6                     u9990:
  6447  0039E6  0E00               	movlw	0
  6448  0039E8  6E41               	movwf	floorf@u^0,c
  6449  0039EA  0E00               	movlw	0
  6450  0039EC  6E42               	movwf	(floorf@u+1)^0,c
  6451  0039EE  0E80               	movlw	128
  6452  0039F0  6E43               	movwf	(floorf@u+2)^0,c
  6453  0039F2  0EBF               	movlw	191
  6454  0039F4  6E44               	movwf	(floorf@u+3)^0,c
  6455  0039F6                     l7736:
  6456  0039F6  C041  F031         	movff	floorf@u,?_floorf
  6457  0039FA  C042  F032         	movff	floorf@u+1,?_floorf+1
  6458  0039FE  C043  F033         	movff	floorf@u+2,?_floorf+2
  6459  003A02  C044  F034         	movff	floorf@u+3,?_floorf+3
  6460  003A06                     l1758:
  6461  003A06  0012               	return		;funcret
  6462  003A08                     __end_of_floorf:
  6463                           	callstack 0
  6464                           
  6465 ;; *************** function ___fpclassifyf *****************
  6466 ;; Defined at:
  6467 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  x               4    9[COMRAM] float 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;  u               4   19[COMRAM] struct .
  6472 ;;  e               2   17[COMRAM] int 
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  2    9[COMRAM] int 
  6475 ;; Registers used:
  6476 ;;		wreg, status,2, status,0
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6483 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6484 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6485 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6486 ;;Total ram usage:       14 bytes
  6487 ;; Hardware stack levels used: 1
  6488 ;; Hardware stack levels required when called: 7
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_efgtoa
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text20
  6497  0050CE                     __ptext20:
  6498                           	callstack 0
  6499  0050CE                     ___fpclassifyf:
  6500                           	callstack 17
  6501  0050CE  C1D3  F014         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6502  0050D2  C1D4  F015         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6503  0050D6  C1D5  F016         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6504  0050DA  C1D6  F017         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6505  0050DE  C00A  F014         	movff	___fpclassifyf@x,___fpclassifyf@u
  6506  0050E2  C00B  F015         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6507  0050E6  C00C  F016         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6508  0050EA  C00D  F017         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6509  0050EE  C014  F00E         	movff	___fpclassifyf@u,??___fpclassifyf
  6510  0050F2  C015  F00F         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6511  0050F6  C016  F010         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6512  0050FA  C017  F011         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6513  0050FE  0E18               	movlw	24
  6514  005100  EF87  F028         	goto	u9780
  6515  005104                     u9785:
  6516  005104  90D8               	bcf	status,0,c
  6517  005106  3211               	rrcf	(??___fpclassifyf+3)^0,f,c
  6518  005108  3210               	rrcf	(??___fpclassifyf+2)^0,f,c
  6519  00510A  320F               	rrcf	(??___fpclassifyf+1)^0,f,c
  6520  00510C  320E               	rrcf	??___fpclassifyf^0,f,c
  6521  00510E                     u9780:
  6522  00510E  2EE8               	decfsz	wreg,f,c
  6523  005110  EF82  F028         	goto	u9785
  6524  005114  500E               	movf	??___fpclassifyf^0,w,c
  6525  005116  6E12               	movwf	___fpclassifyf@e^0,c
  6526  005118  6A13               	clrf	(___fpclassifyf@e+1)^0,c
  6527  00511A  5012               	movf	___fpclassifyf@e^0,w,c
  6528  00511C  1013               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6529  00511E  A4D8               	btfss	status,2,c
  6530  005120  EF94  F028         	goto	u9791
  6531  005124  EF96  F028         	goto	u9790
  6532  005128                     u9791:
  6533  005128  EFB6  F028         	goto	l7688
  6534  00512C                     u9790:
  6535  00512C  90D8               	bcf	status,0,c
  6536  00512E  3414               	rlcf	___fpclassifyf@u^0,w,c
  6537  005130  6E0E               	movwf	??___fpclassifyf^0,c
  6538  005132  3415               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6539  005134  6E0F               	movwf	(??___fpclassifyf+1)^0,c
  6540  005136  3416               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6541  005138  6E10               	movwf	(??___fpclassifyf+2)^0,c
  6542  00513A  3417               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6543  00513C  6E11               	movwf	(??___fpclassifyf+3)^0,c
  6544  00513E  500E               	movf	??___fpclassifyf^0,w,c
  6545  005140  100F               	iorwf	(??___fpclassifyf+1)^0,w,c
  6546  005142  1010               	iorwf	(??___fpclassifyf+2)^0,w,c
  6547  005144  1011               	iorwf	(??___fpclassifyf+3)^0,w,c
  6548  005146  A4D8               	btfss	status,2,c
  6549  005148  EFA8  F028         	goto	u9801
  6550  00514C  EFAA  F028         	goto	u9800
  6551  005150                     u9801:
  6552  005150  EFB0  F028         	goto	l7684
  6553  005154                     u9800:
  6554  005154  0E00               	movlw	0
  6555  005156  6E0B               	movwf	(?___fpclassifyf+1)^0,c
  6556  005158  0E02               	movlw	2
  6557  00515A  6E0A               	movwf	?___fpclassifyf^0,c
  6558  00515C  EFE5  F028         	goto	l1713
  6559  005160                     l7684:
  6560  005160  0E00               	movlw	0
  6561  005162  6E0B               	movwf	(?___fpclassifyf+1)^0,c
  6562  005164  0E03               	movlw	3
  6563  005166  6E0A               	movwf	?___fpclassifyf^0,c
  6564  005168  EFE5  F028         	goto	l1713
  6565  00516C                     l7688:
  6566  00516C  2812               	incf	___fpclassifyf@e^0,w,c
  6567  00516E  1013               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6568  005170  A4D8               	btfss	status,2,c
  6569  005172  EFBD  F028         	goto	u9811
  6570  005176  EFBF  F028         	goto	u9810
  6571  00517A                     u9811:
  6572  00517A  EFE1  F028         	goto	l7694
  6573  00517E                     u9810:
  6574  00517E  C014  F00E         	movff	___fpclassifyf@u,??___fpclassifyf
  6575  005182  C015  F00F         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6576  005186  C016  F010         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6577  00518A  C017  F011         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6578  00518E  0E09               	movlw	9
  6579  005190                     u9825:
  6580  005190  90D8               	bcf	status,0,c
  6581  005192  360E               	rlcf	??___fpclassifyf^0,f,c
  6582  005194  360F               	rlcf	(??___fpclassifyf+1)^0,f,c
  6583  005196  3610               	rlcf	(??___fpclassifyf+2)^0,f,c
  6584  005198  3611               	rlcf	(??___fpclassifyf+3)^0,f,c
  6585  00519A  2EE8               	decfsz	wreg,f,c
  6586  00519C  EFC8  F028         	goto	u9825
  6587  0051A0  500E               	movf	??___fpclassifyf^0,w,c
  6588  0051A2  100F               	iorwf	(??___fpclassifyf+1)^0,w,c
  6589  0051A4  1010               	iorwf	(??___fpclassifyf+2)^0,w,c
  6590  0051A6  1011               	iorwf	(??___fpclassifyf+3)^0,w,c
  6591  0051A8  B4D8               	btfsc	status,2,c
  6592  0051AA  EFD9  F028         	goto	u9831
  6593  0051AE  EFDC  F028         	goto	u9830
  6594  0051B2                     u9831:
  6595  0051B2  0E01               	movlw	1
  6596  0051B4  EFDD  F028         	goto	u9840
  6597  0051B8                     u9830:
  6598  0051B8  0E00               	movlw	0
  6599  0051BA                     u9840:
  6600  0051BA  6E0A               	movwf	?___fpclassifyf^0,c
  6601  0051BC  6A0B               	clrf	(?___fpclassifyf+1)^0,c
  6602  0051BE  EFE5  F028         	goto	l1713
  6603  0051C2                     l7694:
  6604  0051C2  0E00               	movlw	0
  6605  0051C4  6E0B               	movwf	(?___fpclassifyf+1)^0,c
  6606  0051C6  0E04               	movlw	4
  6607  0051C8  6E0A               	movwf	?___fpclassifyf^0,c
  6608  0051CA                     l1713:
  6609  0051CA  0012               	return		;funcret
  6610  0051CC                     __end_of___fpclassifyf:
  6611                           	callstack 0
  6612                           
  6613 ;; *************** function ___fltol *****************
  6614 ;; Defined at:
  6615 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  f1              4    9[COMRAM] int 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  exp1            1   18[COMRAM] unsigned char 
  6620 ;;  sign1           1   17[COMRAM] unsigned char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  4    9[COMRAM] long 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6631 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6632 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6633 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6634 ;;Total ram usage:       10 bytes
  6635 ;; Hardware stack levels used: 1
  6636 ;; Hardware stack levels required when called: 7
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		_efgtoa
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text21
  6645  004EC4                     __ptext21:
  6646                           	callstack 0
  6647  004EC4                     ___fltol:
  6648                           	callstack 17
  6649  004EC4  340C               	rlcf	(___fltol@f1+2)^0,w,c
  6650  004EC6  340D               	rlcf	(___fltol@f1+3)^0,w,c
  6651  004EC8  6E13               	movwf	___fltol@exp1^0,c
  6652  004ECA  5013               	movf	___fltol@exp1^0,w,c
  6653  004ECC  A4D8               	btfss	status,2,c
  6654  004ECE  EF6B  F027         	goto	u9661
  6655  004ED2  EF6D  F027         	goto	u9660
  6656  004ED6                     u9661:
  6657  004ED6  EF77  F027         	goto	l7612
  6658  004EDA                     u9660:
  6659  004EDA                     l7608:
  6660  004EDA  0E00               	movlw	0
  6661  004EDC  6E0A               	movwf	?___fltol^0,c
  6662  004EDE  0E00               	movlw	0
  6663  004EE0  6E0B               	movwf	(?___fltol+1)^0,c
  6664  004EE2  0E00               	movlw	0
  6665  004EE4  6E0C               	movwf	(?___fltol+2)^0,c
  6666  004EE6  0E00               	movlw	0
  6667  004EE8  6E0D               	movwf	(?___fltol+3)^0,c
  6668  004EEA  EFE4  F027         	goto	l1097
  6669  004EEE                     l7612:
  6670  004EEE  C00A  F00E         	movff	___fltol@f1,??___fltol
  6671  004EF2  C00B  F00F         	movff	___fltol@f1+1,??___fltol+1
  6672  004EF6  C00C  F010         	movff	___fltol@f1+2,??___fltol+2
  6673  004EFA  C00D  F011         	movff	___fltol@f1+3,??___fltol+3
  6674  004EFE  0E20               	movlw	32
  6675  004F00  EF87  F027         	goto	u9670
  6676  004F04                     u9675:
  6677  004F04  90D8               	bcf	status,0,c
  6678  004F06  3211               	rrcf	(??___fltol+3)^0,f,c
  6679  004F08  3210               	rrcf	(??___fltol+2)^0,f,c
  6680  004F0A  320F               	rrcf	(??___fltol+1)^0,f,c
  6681  004F0C  320E               	rrcf	??___fltol^0,f,c
  6682  004F0E                     u9670:
  6683  004F0E  2EE8               	decfsz	wreg,f,c
  6684  004F10  EF82  F027         	goto	u9675
  6685  004F14  500E               	movf	??___fltol^0,w,c
  6686  004F16  6E12               	movwf	___fltol@sign1^0,c
  6687  004F18  8E0C               	bsf	(___fltol@f1+2)^0,7,c
  6688  004F1A  0EFF               	movlw	255
  6689  004F1C  160A               	andwf	___fltol@f1^0,f,c
  6690  004F1E  0EFF               	movlw	255
  6691  004F20  160B               	andwf	(___fltol@f1+1)^0,f,c
  6692  004F22  0EFF               	movlw	255
  6693  004F24  160C               	andwf	(___fltol@f1+2)^0,f,c
  6694  004F26  0E00               	movlw	0
  6695  004F28  160D               	andwf	(___fltol@f1+3)^0,f,c
  6696  004F2A  0E96               	movlw	150
  6697  004F2C  5E13               	subwf	___fltol@exp1^0,f,c
  6698  004F2E  BE13               	btfsc	___fltol@exp1^0,7,c
  6699  004F30  EF9E  F027         	goto	u9680
  6700  004F34  EF9C  F027         	goto	u9681
  6701  004F38                     u9681:
  6702  004F38  EFB4  F027         	goto	l7632
  6703  004F3C                     u9680:
  6704  004F3C  5013               	movf	___fltol@exp1^0,w,c
  6705  004F3E  0A80               	xorlw	128
  6706  004F40  0F97               	addlw	151
  6707  004F42  B0D8               	btfsc	status,0,c
  6708  004F44  EFA6  F027         	goto	u9691
  6709  004F48  EFA8  F027         	goto	u9690
  6710  004F4C                     u9691:
  6711  004F4C  EFAA  F027         	goto	l7628
  6712  004F50                     u9690:
  6713  004F50  EF6D  F027         	goto	l7608
  6714  004F54                     l7628:
  6715  004F54  90D8               	bcf	status,0,c
  6716  004F56  320D               	rrcf	(___fltol@f1+3)^0,f,c
  6717  004F58  320C               	rrcf	(___fltol@f1+2)^0,f,c
  6718  004F5A  320B               	rrcf	(___fltol@f1+1)^0,f,c
  6719  004F5C  320A               	rrcf	___fltol@f1^0,f,c
  6720  004F5E  3E13               	incfsz	___fltol@exp1^0,f,c
  6721  004F60  EFAA  F027         	goto	l7628
  6722  004F64  EFCC  F027         	goto	l7642
  6723  004F68                     l7632:
  6724  004F68  0E1F               	movlw	31
  6725  004F6A  6413               	cpfsgt	___fltol@exp1^0,c
  6726  004F6C  EFBA  F027         	goto	u9701
  6727  004F70  EFBC  F027         	goto	u9700
  6728  004F74                     u9701:
  6729  004F74  EFC4  F027         	goto	l7640
  6730  004F78                     u9700:
  6731  004F78  EF6D  F027         	goto	l7608
  6732  004F7C                     l7638:
  6733  004F7C  90D8               	bcf	status,0,c
  6734  004F7E  360A               	rlcf	___fltol@f1^0,f,c
  6735  004F80  360B               	rlcf	(___fltol@f1+1)^0,f,c
  6736  004F82  360C               	rlcf	(___fltol@f1+2)^0,f,c
  6737  004F84  360D               	rlcf	(___fltol@f1+3)^0,f,c
  6738  004F86  0613               	decf	___fltol@exp1^0,f,c
  6739  004F88                     l7640:
  6740  004F88  5013               	movf	___fltol@exp1^0,w,c
  6741  004F8A  A4D8               	btfss	status,2,c
  6742  004F8C  EFCA  F027         	goto	u9711
  6743  004F90  EFCC  F027         	goto	u9710
  6744  004F94                     u9711:
  6745  004F94  EFBE  F027         	goto	l7638
  6746  004F98                     u9710:
  6747  004F98                     l7642:
  6748  004F98  5012               	movf	___fltol@sign1^0,w,c
  6749  004F9A  B4D8               	btfsc	status,2,c
  6750  004F9C  EFD2  F027         	goto	u9721
  6751  004FA0  EFD4  F027         	goto	u9720
  6752  004FA4                     u9721:
  6753  004FA4  EFDC  F027         	goto	l7646
  6754  004FA8                     u9720:
  6755  004FA8  1E0D               	comf	(___fltol@f1+3)^0,f,c
  6756  004FAA  1E0C               	comf	(___fltol@f1+2)^0,f,c
  6757  004FAC  1E0B               	comf	(___fltol@f1+1)^0,f,c
  6758  004FAE  6C0A               	negf	___fltol@f1^0,c
  6759  004FB0  0E00               	movlw	0
  6760  004FB2  220B               	addwfc	(___fltol@f1+1)^0,f,c
  6761  004FB4  220C               	addwfc	(___fltol@f1+2)^0,f,c
  6762  004FB6  220D               	addwfc	(___fltol@f1+3)^0,f,c
  6763  004FB8                     l7646:
  6764  004FB8  C00A  F00A         	movff	___fltol@f1,?___fltol
  6765  004FBC  C00B  F00B         	movff	___fltol@f1+1,?___fltol+1
  6766  004FC0  C00C  F00C         	movff	___fltol@f1+2,?___fltol+2
  6767  004FC4  C00D  F00D         	movff	___fltol@f1+3,?___fltol+3
  6768  004FC8                     l1097:
  6769  004FC8  0012               	return		;funcret
  6770  004FCA                     __end_of___fltol:
  6771                           	callstack 0
  6772                           
  6773 ;; *************** function ___flsub *****************
  6774 ;; Defined at:
  6775 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  b               4   64[COMRAM] long 
  6778 ;;  a               4   68[COMRAM] long 
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  4   64[COMRAM] long 
  6783 ;; Registers used:
  6784 ;;		wreg, status,2, status,0, cstack
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6790 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6793 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6794 ;;Total ram usage:        8 bytes
  6795 ;; Hardware stack levels used: 1
  6796 ;; Hardware stack levels required when called: 8
  6797 ;; This function calls:
  6798 ;;		___fladd
  6799 ;; This function is called by:
  6800 ;;		_efgtoa
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text22
  6805  005E72                     __ptext22:
  6806                           	callstack 0
  6807  005E72                     ___flsub:
  6808                           	callstack 16
  6809  005E72  0E00               	movlw	0
  6810  005E74  1A45               	xorwf	___flsub@a^0,f,c
  6811  005E76  0E00               	movlw	0
  6812  005E78  1A46               	xorwf	(___flsub@a+1)^0,f,c
  6813  005E7A  0E00               	movlw	0
  6814  005E7C  1A47               	xorwf	(___flsub@a+2)^0,f,c
  6815  005E7E  0E80               	movlw	128
  6816  005E80  1A48               	xorwf	(___flsub@a+3)^0,f,c
  6817  005E82  C041  F031         	movff	___flsub@b,___fladd@b
  6818  005E86  C042  F032         	movff	___flsub@b+1,___fladd@b+1
  6819  005E8A  C043  F033         	movff	___flsub@b+2,___fladd@b+2
  6820  005E8E  C044  F034         	movff	___flsub@b+3,___fladd@b+3
  6821  005E92  C045  F035         	movff	___flsub@a,___fladd@a
  6822  005E96  C046  F036         	movff	___flsub@a+1,___fladd@a+1
  6823  005E9A  C047  F037         	movff	___flsub@a+2,___fladd@a+2
  6824  005E9E  C048  F038         	movff	___flsub@a+3,___fladd@a+3
  6825  005EA2  EC4A  F014         	call	___fladd	;wreg free
  6826  005EA6  C031  F041         	movff	?___fladd,?___flsub
  6827  005EAA  C032  F042         	movff	?___fladd+1,?___flsub+1
  6828  005EAE  C033  F043         	movff	?___fladd+2,?___flsub+2
  6829  005EB2  C034  F044         	movff	?___fladd+3,?___flsub+3
  6830  005EB6  0012               	return		;funcret
  6831  005EB8                     __end_of___flsub:
  6832                           	callstack 0
  6833                           
  6834 ;; *************** function ___flneg *****************
  6835 ;; Defined at:
  6836 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  f1              4    9[COMRAM] long 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  4    9[COMRAM] long 
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6853 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6854 ;;Total ram usage:        4 bytes
  6855 ;; Hardware stack levels used: 1
  6856 ;; Hardware stack levels required when called: 7
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_efgtoa
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text23
  6865  006032                     __ptext23:
  6866                           	callstack 0
  6867  006032                     ___flneg:
  6868                           	callstack 17
  6869  006032  500A               	movf	___flneg@f1^0,w,c
  6870  006034  100B               	iorwf	(___flneg@f1+1)^0,w,c
  6871  006036  100C               	iorwf	(___flneg@f1+2)^0,w,c
  6872  006038  100D               	iorwf	(___flneg@f1+3)^0,w,c
  6873  00603A  B4D8               	btfsc	status,2,c
  6874  00603C  EF22  F030         	goto	u9651
  6875  006040  EF24  F030         	goto	u9650
  6876  006044                     u9651:
  6877  006044  EF2C  F030         	goto	l7602
  6878  006048                     u9650:
  6879  006048  0E00               	movlw	0
  6880  00604A  1A0A               	xorwf	___flneg@f1^0,f,c
  6881  00604C  0E00               	movlw	0
  6882  00604E  1A0B               	xorwf	(___flneg@f1+1)^0,f,c
  6883  006050  0E00               	movlw	0
  6884  006052  1A0C               	xorwf	(___flneg@f1+2)^0,f,c
  6885  006054  0E80               	movlw	128
  6886  006056  1A0D               	xorwf	(___flneg@f1+3)^0,f,c
  6887  006058                     l7602:
  6888  006058  C00A  F00A         	movff	___flneg@f1,?___flneg
  6889  00605C  C00B  F00B         	movff	___flneg@f1+1,?___flneg+1
  6890  006060  C00C  F00C         	movff	___flneg@f1+2,?___flneg+2
  6891  006064  C00D  F00D         	movff	___flneg@f1+3,?___flneg+3
  6892  006068  0012               	return		;funcret
  6893  00606A                     __end_of___flneg:
  6894                           	callstack 0
  6895                           
  6896 ;; *************** function ___fleq *****************
  6897 ;; Defined at:
  6898 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  ff1             4    9[COMRAM] long 
  6901 ;;  ff2             4   13[COMRAM] long 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;		None
  6904 ;; Return value:  Size  Location     Type
  6905 ;;		None               void
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6913 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6915 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6916 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6917 ;;Total ram usage:       12 bytes
  6918 ;; Hardware stack levels used: 1
  6919 ;; Hardware stack levels required when called: 7
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_efgtoa
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text24
  6928  005682                     __ptext24:
  6929                           	callstack 0
  6930  005682                     ___fleq:
  6931                           	callstack 17
  6932  005682  0E00               	movlw	0
  6933  005684  140A               	andwf	___fleq@ff1^0,w,c
  6934  005686  6E12               	movwf	??___fleq^0,c
  6935  005688  0E00               	movlw	0
  6936  00568A  140B               	andwf	(___fleq@ff1+1)^0,w,c
  6937  00568C  6E13               	movwf	(??___fleq+1)^0,c
  6938  00568E  0E80               	movlw	128
  6939  005690  140C               	andwf	(___fleq@ff1+2)^0,w,c
  6940  005692  6E14               	movwf	(??___fleq+2)^0,c
  6941  005694  0E7F               	movlw	127
  6942  005696  140D               	andwf	(___fleq@ff1+3)^0,w,c
  6943  005698  6E15               	movwf	(??___fleq+3)^0,c
  6944  00569A  5012               	movf	??___fleq^0,w,c
  6945  00569C  1013               	iorwf	(??___fleq+1)^0,w,c
  6946  00569E  1014               	iorwf	(??___fleq+2)^0,w,c
  6947  0056A0  1015               	iorwf	(??___fleq+3)^0,w,c
  6948  0056A2  A4D8               	btfss	status,2,c
  6949  0056A4  EF56  F02B         	goto	u9571
  6950  0056A8  EF58  F02B         	goto	u9570
  6951  0056AC                     u9571:
  6952  0056AC  EF60  F02B         	goto	l7564
  6953  0056B0                     u9570:
  6954  0056B0  0E00               	movlw	0
  6955  0056B2  6E0A               	movwf	___fleq@ff1^0,c
  6956  0056B4  0E00               	movlw	0
  6957  0056B6  6E0B               	movwf	(___fleq@ff1+1)^0,c
  6958  0056B8  0E00               	movlw	0
  6959  0056BA  6E0C               	movwf	(___fleq@ff1+2)^0,c
  6960  0056BC  0E00               	movlw	0
  6961  0056BE  6E0D               	movwf	(___fleq@ff1+3)^0,c
  6962  0056C0                     l7564:
  6963  0056C0  0E00               	movlw	0
  6964  0056C2  140E               	andwf	___fleq@ff2^0,w,c
  6965  0056C4  6E12               	movwf	??___fleq^0,c
  6966  0056C6  0E00               	movlw	0
  6967  0056C8  140F               	andwf	(___fleq@ff2+1)^0,w,c
  6968  0056CA  6E13               	movwf	(??___fleq+1)^0,c
  6969  0056CC  0E80               	movlw	128
  6970  0056CE  1410               	andwf	(___fleq@ff2+2)^0,w,c
  6971  0056D0  6E14               	movwf	(??___fleq+2)^0,c
  6972  0056D2  0E7F               	movlw	127
  6973  0056D4  1411               	andwf	(___fleq@ff2+3)^0,w,c
  6974  0056D6  6E15               	movwf	(??___fleq+3)^0,c
  6975  0056D8  5012               	movf	??___fleq^0,w,c
  6976  0056DA  1013               	iorwf	(??___fleq+1)^0,w,c
  6977  0056DC  1014               	iorwf	(??___fleq+2)^0,w,c
  6978  0056DE  1015               	iorwf	(??___fleq+3)^0,w,c
  6979  0056E0  A4D8               	btfss	status,2,c
  6980  0056E2  EF75  F02B         	goto	u9581
  6981  0056E6  EF77  F02B         	goto	u9580
  6982  0056EA                     u9581:
  6983  0056EA  EF7F  F02B         	goto	l7568
  6984  0056EE                     u9580:
  6985  0056EE  0E00               	movlw	0
  6986  0056F0  6E0E               	movwf	___fleq@ff2^0,c
  6987  0056F2  0E00               	movlw	0
  6988  0056F4  6E0F               	movwf	(___fleq@ff2+1)^0,c
  6989  0056F6  0E00               	movlw	0
  6990  0056F8  6E10               	movwf	(___fleq@ff2+2)^0,c
  6991  0056FA  0E00               	movlw	0
  6992  0056FC  6E11               	movwf	(___fleq@ff2+3)^0,c
  6993  0056FE                     l7568:
  6994  0056FE  500E               	movf	___fleq@ff2^0,w,c
  6995  005700  180A               	xorwf	___fleq@ff1^0,w,c
  6996  005702  E10F               	bnz	u9590
  6997  005704  500F               	movf	(___fleq@ff2+1)^0,w,c
  6998  005706  180B               	xorwf	(___fleq@ff1+1)^0,w,c
  6999  005708  E10C               	bnz	u9590
  7000  00570A  5010               	movf	(___fleq@ff2+2)^0,w,c
  7001  00570C  180C               	xorwf	(___fleq@ff1+2)^0,w,c
  7002  00570E  E109               	bnz	u9590
  7003  005710  5011               	movf	(___fleq@ff2+3)^0,w,c
  7004  005712  180D               	xorwf	(___fleq@ff1+3)^0,w,c
  7005  005714  B4D8               	btfsc	status,2,c
  7006  005716  EF8F  F02B         	goto	u9591
  7007  00571A  EF91  F02B         	goto	u9590
  7008  00571E                     u9591:
  7009  00571E  EF94  F02B         	goto	l7572
  7010  005722                     u9590:
  7011  005722  90D8               	bcf	status,0,c
  7012  005724  EF95  F02B         	goto	l1059
  7013  005728                     l7572:
  7014  005728  80D8               	bsf	status,0,c
  7015  00572A                     l1059:
  7016  00572A  0012               	return		;funcret
  7017  00572C                     __end_of___fleq:
  7018                           	callstack 0
  7019                           
  7020 ;; *************** function ___awmod *****************
  7021 ;; Defined at:
  7022 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  dividend        2    9[COMRAM] int 
  7025 ;;  divisor         2   11[COMRAM] int 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;  sign            1   14[COMRAM] unsigned char 
  7028 ;;  counter         1   13[COMRAM] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  2    9[COMRAM] int 
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7041 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7042 ;;Total ram usage:        6 bytes
  7043 ;; Hardware stack levels used: 1
  7044 ;; Hardware stack levels required when called: 7
  7045 ;; This function calls:
  7046 ;;		Nothing
  7047 ;; This function is called by:
  7048 ;;		_efgtoa
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text25
  7053  0055D2                     __ptext25:
  7054                           	callstack 0
  7055  0055D2                     ___awmod:
  7056                           	callstack 17
  7057  0055D2  0E00               	movlw	0
  7058  0055D4  6E0F               	movwf	___awmod@sign^0,c
  7059  0055D6  BE0B               	btfsc	(___awmod@dividend+1)^0,7,c
  7060  0055D8  EFF2  F02A         	goto	u9510
  7061  0055DC  EFF0  F02A         	goto	u9511
  7062  0055E0                     u9511:
  7063  0055E0  EFF8  F02A         	goto	l7532
  7064  0055E4                     u9510:
  7065  0055E4  6C0A               	negf	___awmod@dividend^0,c
  7066  0055E6  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  7067  0055E8  B0D8               	btfsc	status,0,c
  7068  0055EA  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  7069  0055EC  0E01               	movlw	1
  7070  0055EE  6E0F               	movwf	___awmod@sign^0,c
  7071  0055F0                     l7532:
  7072  0055F0  BE0D               	btfsc	(___awmod@divisor+1)^0,7,c
  7073  0055F2  EFFF  F02A         	goto	u9520
  7074  0055F6  EFFD  F02A         	goto	u9521
  7075  0055FA                     u9521:
  7076  0055FA  EF03  F02B         	goto	l7536
  7077  0055FE                     u9520:
  7078  0055FE  6C0C               	negf	___awmod@divisor^0,c
  7079  005600  1E0D               	comf	(___awmod@divisor+1)^0,f,c
  7080  005602  B0D8               	btfsc	status,0,c
  7081  005604  2A0D               	incf	(___awmod@divisor+1)^0,f,c
  7082  005606                     l7536:
  7083  005606  500C               	movf	___awmod@divisor^0,w,c
  7084  005608  100D               	iorwf	(___awmod@divisor+1)^0,w,c
  7085  00560A  B4D8               	btfsc	status,2,c
  7086  00560C  EF0A  F02B         	goto	u9531
  7087  005610  EF0C  F02B         	goto	u9530
  7088  005614                     u9531:
  7089  005614  EF30  F02B         	goto	l7552
  7090  005618                     u9530:
  7091  005618  0E01               	movlw	1
  7092  00561A  6E0E               	movwf	___awmod@counter^0,c
  7093  00561C  EF14  F02B         	goto	l7542
  7094  005620                     l7540:
  7095  005620  90D8               	bcf	status,0,c
  7096  005622  360C               	rlcf	___awmod@divisor^0,f,c
  7097  005624  360D               	rlcf	(___awmod@divisor+1)^0,f,c
  7098  005626  2A0E               	incf	___awmod@counter^0,f,c
  7099  005628                     l7542:
  7100  005628  AE0D               	btfss	(___awmod@divisor+1)^0,7,c
  7101  00562A  EF19  F02B         	goto	u9541
  7102  00562E  EF1B  F02B         	goto	u9540
  7103  005632                     u9541:
  7104  005632  EF10  F02B         	goto	l7540
  7105  005636                     u9540:
  7106  005636                     l7544:
  7107  005636  500C               	movf	___awmod@divisor^0,w,c
  7108  005638  5C0A               	subwf	___awmod@dividend^0,w,c
  7109  00563A  500D               	movf	(___awmod@divisor+1)^0,w,c
  7110  00563C  580B               	subwfb	(___awmod@dividend+1)^0,w,c
  7111  00563E  A0D8               	btfss	status,0,c
  7112  005640  EF24  F02B         	goto	u9551
  7113  005644  EF26  F02B         	goto	u9550
  7114  005648                     u9551:
  7115  005648  EF2A  F02B         	goto	l7548
  7116  00564C                     u9550:
  7117  00564C  500C               	movf	___awmod@divisor^0,w,c
  7118  00564E  5E0A               	subwf	___awmod@dividend^0,f,c
  7119  005650  500D               	movf	(___awmod@divisor+1)^0,w,c
  7120  005652  5A0B               	subwfb	(___awmod@dividend+1)^0,f,c
  7121  005654                     l7548:
  7122  005654  90D8               	bcf	status,0,c
  7123  005656  320D               	rrcf	(___awmod@divisor+1)^0,f,c
  7124  005658  320C               	rrcf	___awmod@divisor^0,f,c
  7125  00565A  2E0E               	decfsz	___awmod@counter^0,f,c
  7126  00565C  EF1B  F02B         	goto	l7544
  7127  005660                     l7552:
  7128  005660  500F               	movf	___awmod@sign^0,w,c
  7129  005662  B4D8               	btfsc	status,2,c
  7130  005664  EF36  F02B         	goto	u9561
  7131  005668  EF38  F02B         	goto	u9560
  7132  00566C                     u9561:
  7133  00566C  EF3C  F02B         	goto	l7556
  7134  005670                     u9560:
  7135  005670  6C0A               	negf	___awmod@dividend^0,c
  7136  005672  1E0B               	comf	(___awmod@dividend+1)^0,f,c
  7137  005674  B0D8               	btfsc	status,0,c
  7138  005676  2A0B               	incf	(___awmod@dividend+1)^0,f,c
  7139  005678                     l7556:
  7140  005678  C00A  F00A         	movff	___awmod@dividend,?___awmod
  7141  00567C  C00B  F00B         	movff	___awmod@dividend+1,?___awmod+1
  7142  005680  0012               	return		;funcret
  7143  005682                     __end_of___awmod:
  7144                           	callstack 0
  7145                           
  7146 ;; *************** function _dtoa *****************
  7147 ;; Defined at:
  7148 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  7151 ;;		 -> sprintf@f(6), 
  7152 ;;  d               8   38[COMRAM] long long 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;  n               8   62[COMRAM] long long 
  7155 ;;  i               2   70[COMRAM] int 
  7156 ;;  s               2   60[COMRAM] int 
  7157 ;;  w               2   58[COMRAM] int 
  7158 ;;  p               2   56[COMRAM] int 
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  2   36[COMRAM] int 
  7161 ;; Registers used:
  7162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7168 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7170 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7171 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7172 ;;Total ram usage:       36 bytes
  7173 ;; Hardware stack levels used: 1
  7174 ;; Hardware stack levels required when called: 11
  7175 ;; This function calls:
  7176 ;;		___aodiv
  7177 ;;		___aomod
  7178 ;;		_abs
  7179 ;;		_pad
  7180 ;; This function is called by:
  7181 ;;		_vfpfcnvrt
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text26
  7186  003518                     __ptext26:
  7187                           	callstack 0
  7188  003518                     _dtoa:
  7189                           	callstack 14
  7190  003518                     
  7191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7192  003518  C027  F03F         	movff	dtoa@d,dtoa@n
  7193  00351C  C028  F040         	movff	dtoa@d+1,dtoa@n+1
  7194  003520  C029  F041         	movff	dtoa@d+2,dtoa@n+2
  7195  003524  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
  7196  003528  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
  7197  00352C  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
  7198  003530  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
  7199  003534  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
  7200  003538                     
  7201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7202  003538  BE46               	btfsc	(dtoa@n+7)^0,7,c
  7203  00353A  EFA1  F01A         	goto	u10061
  7204  00353E  EFA4  F01A         	goto	u10060
  7205  003542                     u10061:
  7206  003542  0E01               	movlw	1
  7207  003544  EFA5  F01A         	goto	u10070
  7208  003548                     u10060:
  7209  003548  0E00               	movlw	0
  7210  00354A                     u10070:
  7211  00354A  6E3D               	movwf	dtoa@s^0,c
  7212  00354C  6A3E               	clrf	(dtoa@s+1)^0,c
  7213                           
  7214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7215  00354E  503D               	movf	dtoa@s^0,w,c
  7216  003550  103E               	iorwf	(dtoa@s+1)^0,w,c
  7217  003552  B4D8               	btfsc	status,2,c
  7218  003554  EFAE  F01A         	goto	u10081
  7219  003558  EFB0  F01A         	goto	u10080
  7220  00355C                     u10081:
  7221  00355C  EFC0  F01A         	goto	l7766
  7222  003560                     u10080:
  7223  003560                     
  7224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7225  003560  1E46               	comf	(dtoa@n+7)^0,f,c
  7226  003562  1E45               	comf	(dtoa@n+6)^0,f,c
  7227  003564  1E44               	comf	(dtoa@n+5)^0,f,c
  7228  003566  1E43               	comf	(dtoa@n+4)^0,f,c
  7229  003568  1E42               	comf	(dtoa@n+3)^0,f,c
  7230  00356A  1E41               	comf	(dtoa@n+2)^0,f,c
  7231  00356C  1E40               	comf	(dtoa@n+1)^0,f,c
  7232  00356E  6C3F               	negf	dtoa@n^0,c
  7233  003570  0E00               	movlw	0
  7234  003572  2240               	addwfc	(dtoa@n+1)^0,f,c
  7235  003574  2241               	addwfc	(dtoa@n+2)^0,f,c
  7236  003576  2242               	addwfc	(dtoa@n+3)^0,f,c
  7237  003578  2243               	addwfc	(dtoa@n+4)^0,f,c
  7238  00357A  2244               	addwfc	(dtoa@n+5)^0,f,c
  7239  00357C  2245               	addwfc	(dtoa@n+6)^0,f,c
  7240  00357E  2246               	addwfc	(dtoa@n+7)^0,f,c
  7241  003580                     l7766:
  7242                           
  7243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7244  003580  BE4E               	btfsc	(_prec+1)^0,7,c
  7245  003582  EFC5  F01A         	goto	u10091
  7246  003586  EFC7  F01A         	goto	u10090
  7247  00358A                     u10091:
  7248  00358A  EFC8  F01A         	goto	l7770
  7249  00358E                     u10090:
  7250  00358E                     
  7251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7252  00358E  924F               	bcf	_flags^0,1,c
  7253  003590                     l7770:
  7254                           
  7255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7256  003590  BE4E               	btfsc	(_prec+1)^0,7,c
  7257  003592  EFD5  F01A         	goto	u10100
  7258  003596  504E               	movf	(_prec+1)^0,w,c
  7259  003598  E106               	bnz	u10101
  7260  00359A  044D               	decf	_prec^0,w,c
  7261  00359C  B0D8               	btfsc	status,0,c
  7262  00359E  EFD3  F01A         	goto	u10101
  7263  0035A2  EFD5  F01A         	goto	u10100
  7264  0035A6                     u10101:
  7265  0035A6  EFDB  F01A         	goto	l1532
  7266  0035AA                     u10100:
  7267  0035AA  0E00               	movlw	0
  7268  0035AC  6E3A               	movwf	(dtoa@p+1)^0,c
  7269  0035AE  0E01               	movlw	1
  7270  0035B0  6E39               	movwf	dtoa@p^0,c
  7271  0035B2  EFDF  F01A         	goto	l1534
  7272  0035B6                     l1532:
  7273  0035B6  C04D  F039         	movff	_prec,dtoa@p
  7274  0035BA  C04E  F03A         	movff	_prec+1,dtoa@p+1
  7275  0035BE                     l1534:
  7276                           
  7277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7278  0035BE  C1D9  F03B         	movff	_width,dtoa@w
  7279  0035C2  C1DA  F03C         	movff	_width+1,dtoa@w+1
  7280  0035C6                     
  7281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7282  0035C6  503D               	movf	dtoa@s^0,w,c
  7283  0035C8  103E               	iorwf	(dtoa@s+1)^0,w,c
  7284  0035CA  A4D8               	btfss	status,2,c
  7285  0035CC  EFEA  F01A         	goto	u10111
  7286  0035D0  EFEC  F01A         	goto	u10110
  7287  0035D4                     u10111:
  7288  0035D4  EFF3  F01A         	goto	l7778
  7289  0035D8                     u10110:
  7290  0035D8  A44F               	btfss	_flags^0,2,c
  7291  0035DA  EFF1  F01A         	goto	u10121
  7292  0035DE  EFF3  F01A         	goto	u10120
  7293  0035E2                     u10121:
  7294  0035E2  EFF6  F01A         	goto	l7780
  7295  0035E6                     u10120:
  7296  0035E6                     l7778:
  7297                           
  7298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7299  0035E6  063B               	decf	dtoa@w^0,f,c
  7300  0035E8  A0D8               	btfss	status,0,c
  7301  0035EA  063C               	decf	(dtoa@w+1)^0,f,c
  7302  0035EC                     l7780:
  7303                           
  7304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7305  0035EC  0E00               	movlw	0
  7306  0035EE  6E48               	movwf	(dtoa@i+1)^0,c
  7307  0035F0  0E4F               	movlw	79
  7308  0035F2  6E47               	movwf	dtoa@i^0,c
  7309  0035F4                     
  7310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7311  0035F4  0E00               	movlw	0
  7312  0035F6  0102               	movlb	2	; () banked
  7313  0035F8  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7314                           
  7315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7316  0035FA  EF7B  F01B         	goto	l7794
  7317  0035FE                     l7784:
  7318                           
  7319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7320  0035FE  0647               	decf	dtoa@i^0,f,c
  7321  003600  A0D8               	btfss	status,0,c
  7322  003602  0648               	decf	(dtoa@i+1)^0,f,c
  7323  003604                     
  7324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7325  003604  0E00               	movlw	low _dbuf
  7326  003606  2447               	addwf	dtoa@i^0,w,c
  7327  003608  6ED9               	movwf	fsr2l,c
  7328  00360A  0E02               	movlw	high _dbuf
  7329  00360C  2048               	addwfc	(dtoa@i+1)^0,w,c
  7330  00360E  6EDA               	movwf	fsr2h,c
  7331  003610  C03F  F00A         	movff	dtoa@n,___aomod@dividend
  7332  003614  C040  F00B         	movff	dtoa@n+1,___aomod@dividend+1
  7333  003618  C041  F00C         	movff	dtoa@n+2,___aomod@dividend+2
  7334  00361C  C042  F00D         	movff	dtoa@n+3,___aomod@dividend+3
  7335  003620  C043  F00E         	movff	dtoa@n+4,___aomod@dividend+4
  7336  003624  C044  F00F         	movff	dtoa@n+5,___aomod@dividend+5
  7337  003628  C045  F010         	movff	dtoa@n+6,___aomod@dividend+6
  7338  00362C  C046  F011         	movff	dtoa@n+7,___aomod@dividend+7
  7339  003630  0E0A               	movlw	10
  7340  003632  6E12               	movwf	___aomod@divisor^0,c
  7341  003634  0E00               	movlw	0
  7342  003636  6E13               	movwf	(___aomod@divisor+1)^0,c
  7343  003638  0E00               	movlw	0
  7344  00363A  6E14               	movwf	(___aomod@divisor+2)^0,c
  7345  00363C  0E00               	movlw	0
  7346  00363E  6E15               	movwf	(___aomod@divisor+3)^0,c
  7347  003640  0E00               	movlw	0
  7348  003642  6E16               	movwf	(___aomod@divisor+4)^0,c
  7349  003644  0E00               	movlw	0
  7350  003646  6E17               	movwf	(___aomod@divisor+5)^0,c
  7351  003648  0E00               	movlw	0
  7352  00364A  6E18               	movwf	(___aomod@divisor+6)^0,c
  7353  00364C  0E00               	movlw	0
  7354  00364E  6E19               	movwf	(___aomod@divisor+7)^0,c
  7355  003650  EC96  F023         	call	___aomod	;wreg free
  7356  003654  C00A  F02F         	movff	?___aomod,??_dtoa
  7357  003658  C00B  F030         	movff	?___aomod+1,??_dtoa+1
  7358  00365C  C00C  F031         	movff	?___aomod+2,??_dtoa+2
  7359  003660  C00D  F032         	movff	?___aomod+3,??_dtoa+3
  7360  003664  C00E  F033         	movff	?___aomod+4,??_dtoa+4
  7361  003668  C00F  F034         	movff	?___aomod+5,??_dtoa+5
  7362  00366C  C010  F035         	movff	?___aomod+6,??_dtoa+6
  7363  003670  C011  F036         	movff	?___aomod+7,??_dtoa+7
  7364  003674  C02F  F01C         	movff	??_dtoa,abs@a
  7365  003678  C031  F01D         	movff	??_dtoa+2,abs@a+1
  7366  00367C  ECC1  F02F         	call	_abs	;wreg free
  7367  003680  501C               	movf	?_abs^0,w,c
  7368  003682  0F30               	addlw	48
  7369  003684  6EDF               	movwf	indf2,c
  7370  003686                     
  7371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7372  003686  0639               	decf	dtoa@p^0,f,c
  7373  003688  A0D8               	btfss	status,0,c
  7374  00368A  063A               	decf	(dtoa@p+1)^0,f,c
  7375  00368C                     
  7376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7377  00368C  063B               	decf	dtoa@w^0,f,c
  7378  00368E  A0D8               	btfss	status,0,c
  7379  003690  063C               	decf	(dtoa@w+1)^0,f,c
  7380  003692                     
  7381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7382  003692  C03F  F00A         	movff	dtoa@n,___aodiv@dividend
  7383  003696  C040  F00B         	movff	dtoa@n+1,___aodiv@dividend+1
  7384  00369A  C041  F00C         	movff	dtoa@n+2,___aodiv@dividend+2
  7385  00369E  C042  F00D         	movff	dtoa@n+3,___aodiv@dividend+3
  7386  0036A2  C043  F00E         	movff	dtoa@n+4,___aodiv@dividend+4
  7387  0036A6  C044  F00F         	movff	dtoa@n+5,___aodiv@dividend+5
  7388  0036AA  C045  F010         	movff	dtoa@n+6,___aodiv@dividend+6
  7389  0036AE  C046  F011         	movff	dtoa@n+7,___aodiv@dividend+7
  7390  0036B2  0E0A               	movlw	10
  7391  0036B4  6E12               	movwf	___aodiv@divisor^0,c
  7392  0036B6  0E00               	movlw	0
  7393  0036B8  6E13               	movwf	(___aodiv@divisor+1)^0,c
  7394  0036BA  0E00               	movlw	0
  7395  0036BC  6E14               	movwf	(___aodiv@divisor+2)^0,c
  7396  0036BE  0E00               	movlw	0
  7397  0036C0  6E15               	movwf	(___aodiv@divisor+3)^0,c
  7398  0036C2  0E00               	movlw	0
  7399  0036C4  6E16               	movwf	(___aodiv@divisor+4)^0,c
  7400  0036C6  0E00               	movlw	0
  7401  0036C8  6E17               	movwf	(___aodiv@divisor+5)^0,c
  7402  0036CA  0E00               	movlw	0
  7403  0036CC  6E18               	movwf	(___aodiv@divisor+6)^0,c
  7404  0036CE  0E00               	movlw	0
  7405  0036D0  6E19               	movwf	(___aodiv@divisor+7)^0,c
  7406  0036D2  EC54  F021         	call	___aodiv	;wreg free
  7407  0036D6  C00A  F03F         	movff	?___aodiv,dtoa@n
  7408  0036DA  C00B  F040         	movff	?___aodiv+1,dtoa@n+1
  7409  0036DE  C00C  F041         	movff	?___aodiv+2,dtoa@n+2
  7410  0036E2  C00D  F042         	movff	?___aodiv+3,dtoa@n+3
  7411  0036E6  C00E  F043         	movff	?___aodiv+4,dtoa@n+4
  7412  0036EA  C00F  F044         	movff	?___aodiv+5,dtoa@n+5
  7413  0036EE  C010  F045         	movff	?___aodiv+6,dtoa@n+6
  7414  0036F2  C011  F046         	movff	?___aodiv+7,dtoa@n+7
  7415  0036F6                     l7794:
  7416                           
  7417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7418  0036F6  BE48               	btfsc	(dtoa@i+1)^0,7,c
  7419  0036F8  EF86  F01B         	goto	u10131
  7420  0036FC  5048               	movf	(dtoa@i+1)^0,w,c
  7421  0036FE  E108               	bnz	u10130
  7422  003700  0447               	decf	dtoa@i^0,w,c
  7423  003702  A0D8               	btfss	status,0,c
  7424  003704  EF86  F01B         	goto	u10131
  7425  003708  EF88  F01B         	goto	u10130
  7426  00370C                     u10131:
  7427  00370C  EFB8  F01B         	goto	l7804
  7428  003710                     u10130:
  7429  003710  503F               	movf	dtoa@n^0,w,c
  7430  003712  1040               	iorwf	(dtoa@n+1)^0,w,c
  7431  003714  1041               	iorwf	(dtoa@n+2)^0,w,c
  7432  003716  1042               	iorwf	(dtoa@n+3)^0,w,c
  7433  003718  1043               	iorwf	(dtoa@n+4)^0,w,c
  7434  00371A  1044               	iorwf	(dtoa@n+5)^0,w,c
  7435  00371C  1045               	iorwf	(dtoa@n+6)^0,w,c
  7436  00371E  1046               	iorwf	(dtoa@n+7)^0,w,c
  7437  003720  A4D8               	btfss	status,2,c
  7438  003722  EF95  F01B         	goto	u10141
  7439  003726  EF97  F01B         	goto	u10140
  7440  00372A                     u10141:
  7441  00372A  EFFF  F01A         	goto	l7784
  7442  00372E                     u10140:
  7443  00372E  BE3A               	btfsc	(dtoa@p+1)^0,7,c
  7444  003730  EFA4  F01B         	goto	u10150
  7445  003734  503A               	movf	(dtoa@p+1)^0,w,c
  7446  003736  E106               	bnz	u10151
  7447  003738  0439               	decf	dtoa@p^0,w,c
  7448  00373A  B0D8               	btfsc	status,0,c
  7449  00373C  EFA2  F01B         	goto	u10151
  7450  003740  EFA4  F01B         	goto	u10150
  7451  003744                     u10151:
  7452  003744  EFFF  F01A         	goto	l7784
  7453  003748                     u10150:
  7454  003748  BE3C               	btfsc	(dtoa@w+1)^0,7,c
  7455  00374A  EFAF  F01B         	goto	u10161
  7456  00374E  503C               	movf	(dtoa@w+1)^0,w,c
  7457  003750  E108               	bnz	u10160
  7458  003752  043B               	decf	dtoa@w^0,w,c
  7459  003754  A0D8               	btfss	status,0,c
  7460  003756  EFAF  F01B         	goto	u10161
  7461  00375A  EFB1  F01B         	goto	u10160
  7462  00375E                     u10161:
  7463  00375E  EFB8  F01B         	goto	l7804
  7464  003762                     u10160:
  7465  003762  B24F               	btfsc	_flags^0,1,c
  7466  003764  EFB6  F01B         	goto	u10171
  7467  003768  EFB8  F01B         	goto	u10170
  7468  00376C                     u10171:
  7469  00376C  EFFF  F01A         	goto	l7784
  7470  003770                     u10170:
  7471  003770                     l7804:
  7472                           
  7473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7474  003770  503D               	movf	dtoa@s^0,w,c
  7475  003772  103E               	iorwf	(dtoa@s+1)^0,w,c
  7476  003774  A4D8               	btfss	status,2,c
  7477  003776  EFBF  F01B         	goto	u10181
  7478  00377A  EFC1  F01B         	goto	u10180
  7479  00377E                     u10181:
  7480  00377E  EFC8  F01B         	goto	l7808
  7481  003782                     u10180:
  7482  003782  A44F               	btfss	_flags^0,2,c
  7483  003784  EFC6  F01B         	goto	u10191
  7484  003788  EFC8  F01B         	goto	u10190
  7485  00378C                     u10191:
  7486  00378C  EFE6  F01B         	goto	l7818
  7487  003790                     u10190:
  7488  003790                     l7808:
  7489                           
  7490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7491  003790  0647               	decf	dtoa@i^0,f,c
  7492  003792  A0D8               	btfss	status,0,c
  7493  003794  0648               	decf	(dtoa@i+1)^0,f,c
  7494  003796                     
  7495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7496  003796  503D               	movf	dtoa@s^0,w,c
  7497  003798  103E               	iorwf	(dtoa@s+1)^0,w,c
  7498  00379A  A4D8               	btfss	status,2,c
  7499  00379C  EFD2  F01B         	goto	u10201
  7500  0037A0  EFD4  F01B         	goto	u10200
  7501  0037A4                     u10201:
  7502  0037A4  EFDA  F01B         	goto	l7814
  7503  0037A8                     u10200:
  7504  0037A8  0E00               	movlw	0
  7505  0037AA  6E38               	movwf	(_dtoa$3104+1)^0,c
  7506  0037AC  0E2B               	movlw	43
  7507  0037AE  6E37               	movwf	_dtoa$3104^0,c
  7508  0037B0  EFDE  F01B         	goto	l7816
  7509  0037B4                     l7814:
  7510  0037B4  0E00               	movlw	0
  7511  0037B6  6E38               	movwf	(_dtoa$3104+1)^0,c
  7512  0037B8  0E2D               	movlw	45
  7513  0037BA  6E37               	movwf	_dtoa$3104^0,c
  7514  0037BC                     l7816:
  7515  0037BC  0E00               	movlw	low _dbuf
  7516  0037BE  2447               	addwf	dtoa@i^0,w,c
  7517  0037C0  6ED9               	movwf	fsr2l,c
  7518  0037C2  0E02               	movlw	high _dbuf
  7519  0037C4  2048               	addwfc	(dtoa@i+1)^0,w,c
  7520  0037C6  6EDA               	movwf	fsr2h,c
  7521  0037C8  C037  FFDF         	movff	_dtoa$3104,indf2
  7522  0037CC                     l7818:
  7523                           
  7524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7525  0037CC  C025  F01A         	movff	dtoa@fp,pad@fp
  7526  0037D0  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
  7527  0037D4  0E00               	movlw	low _dbuf
  7528  0037D6  2447               	addwf	dtoa@i^0,w,c
  7529  0037D8  6E1C               	movwf	pad@buf^0,c
  7530  0037DA  0E02               	movlw	high _dbuf
  7531  0037DC  2048               	addwfc	(dtoa@i+1)^0,w,c
  7532  0037DE  6E1D               	movwf	(pad@buf+1)^0,c
  7533  0037E0  C03B  F01E         	movff	dtoa@w,pad@p
  7534  0037E4  C03C  F01F         	movff	dtoa@w+1,pad@p+1
  7535  0037E8  EC88  F02A         	call	_pad	;wreg free
  7536  0037EC  C01A  F025         	movff	?_pad,?_dtoa
  7537  0037F0  C01B  F026         	movff	?_pad+1,?_dtoa+1
  7538  0037F4  0012               	return		;funcret
  7539  0037F6                     __end_of_dtoa:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function _pad *****************
  7543 ;; Defined at:
  7544 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  7547 ;;		 -> sprintf@f(6), 
  7548 ;;  buf             2   27[COMRAM] PTR unsigned char 
  7549 ;;		 -> dbuf(80), 
  7550 ;;  p               2   29[COMRAM] int 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  w               2   34[COMRAM] int 
  7553 ;;  i               2   32[COMRAM] int 
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  2   25[COMRAM] int 
  7556 ;; Registers used:
  7557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7563 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7567 ;;Total ram usage:       11 bytes
  7568 ;; Hardware stack levels used: 1
  7569 ;; Hardware stack levels required when called: 10
  7570 ;; This function calls:
  7571 ;;		_fputc
  7572 ;;		_fputs
  7573 ;;		_strlen
  7574 ;; This function is called by:
  7575 ;;		_dtoa
  7576 ;;		_efgtoa
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           	psect	text27
  7581  005510                     __ptext27:
  7582                           	callstack 0
  7583  005510                     _pad:
  7584                           	callstack 14
  7585  005510                     
  7586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7587  005510  A04F               	btfss	_flags^0,0,c
  7588  005512  EF8D  F02A         	goto	u9731
  7589  005516  EF8F  F02A         	goto	u9730
  7590  00551A                     u9731:
  7591  00551A  EF99  F02A         	goto	l7654
  7592  00551E                     u9730:
  7593  00551E                     
  7594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7595  00551E  C01C  F013         	movff	pad@buf,fputs@s
  7596  005522  C01D  F014         	movff	pad@buf+1,fputs@s+1
  7597  005526  C01A  F015         	movff	pad@fp,fputs@fp
  7598  00552A  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  7599  00552E  EC5C  F02F         	call	_fputs	;wreg free
  7600  005532                     l7654:
  7601                           
  7602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7603  005532  BE1F               	btfsc	(pad@p+1)^0,7,c
  7604  005534  EF9E  F02A         	goto	u9741
  7605  005538  EFA0  F02A         	goto	u9740
  7606  00553C                     u9741:
  7607  00553C  EFA6  F02A         	goto	l7658
  7608  005540                     u9740:
  7609  005540  C01E  F023         	movff	pad@p,pad@w
  7610  005544  C01F  F024         	movff	pad@p+1,pad@w+1
  7611  005548  EFAA  F02A         	goto	l1521
  7612  00554C                     l7658:
  7613  00554C  0E00               	movlw	0
  7614  00554E  6E24               	movwf	(pad@w+1)^0,c
  7615  005550  0E00               	movlw	0
  7616  005552  6E23               	movwf	pad@w^0,c
  7617  005554                     l1521:
  7618                           
  7619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7620  005554  0E00               	movlw	0
  7621  005556  6E22               	movwf	(pad@i+1)^0,c
  7622  005558  0E00               	movlw	0
  7623  00555A  6E21               	movwf	pad@i^0,c
  7624                           
  7625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7626  00555C  EFBC  F02A         	goto	l7664
  7627  005560                     l7660:
  7628                           
  7629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7630  005560  0E00               	movlw	0
  7631  005562  6E0B               	movwf	(fputc@c+1)^0,c
  7632  005564  0E20               	movlw	32
  7633  005566  6E0A               	movwf	fputc@c^0,c
  7634  005568  C01A  F00C         	movff	pad@fp,fputc@fp
  7635  00556C  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
  7636  005570  ECC1  F029         	call	_fputc	;wreg free
  7637  005574                     
  7638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7639  005574  4A21               	infsnz	pad@i^0,f,c
  7640  005576  2A22               	incf	(pad@i+1)^0,f,c
  7641  005578                     l7664:
  7642                           
  7643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7644  005578  5023               	movf	pad@w^0,w,c
  7645  00557A  5C21               	subwf	pad@i^0,w,c
  7646  00557C  5022               	movf	(pad@i+1)^0,w,c
  7647  00557E  0A80               	xorlw	128
  7648  005580  6E20               	movwf	??_pad^0,c
  7649  005582  5024               	movf	(pad@w+1)^0,w,c
  7650  005584  0A80               	xorlw	128
  7651  005586  5820               	subwfb	??_pad^0,w,c
  7652  005588  A0D8               	btfss	status,0,c
  7653  00558A  EFC9  F02A         	goto	u9751
  7654  00558E  EFCB  F02A         	goto	u9750
  7655  005592                     u9751:
  7656  005592  EFB0  F02A         	goto	l7660
  7657  005596                     u9750:
  7658  005596                     
  7659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7660  005596  B04F               	btfsc	_flags^0,0,c
  7661  005598  EFD0  F02A         	goto	u9761
  7662  00559C  EFD2  F02A         	goto	u9760
  7663  0055A0                     u9761:
  7664  0055A0  EFDC  F02A         	goto	l7668
  7665  0055A4                     u9760:
  7666  0055A4                     
  7667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7668  0055A4  C01C  F013         	movff	pad@buf,fputs@s
  7669  0055A8  C01D  F014         	movff	pad@buf+1,fputs@s+1
  7670  0055AC  C01A  F015         	movff	pad@fp,fputs@fp
  7671  0055B0  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  7672  0055B4  EC5C  F02F         	call	_fputs	;wreg free
  7673  0055B8                     l7668:
  7674                           
  7675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7676  0055B8  C01C  F00A         	movff	pad@buf,strlen@s
  7677  0055BC  C01D  F00B         	movff	pad@buf+1,strlen@s+1
  7678  0055C0  ECAB  F02D         	call	_strlen	;wreg free
  7679  0055C4  5023               	movf	pad@w^0,w,c
  7680  0055C6  240A               	addwf	?_strlen^0,w,c
  7681  0055C8  6E1A               	movwf	?_pad^0,c
  7682  0055CA  5024               	movf	(pad@w+1)^0,w,c
  7683  0055CC  200B               	addwfc	(?_strlen+1)^0,w,c
  7684  0055CE  6E1B               	movwf	(?_pad+1)^0,c
  7685  0055D0  0012               	return		;funcret
  7686  0055D2                     __end_of_pad:
  7687                           	callstack 0
  7688                           
  7689 ;; *************** function _strlen *****************
  7690 ;; Defined at:
  7691 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7694 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  7695 ;;		 -> STR_16(6), STR_14(5), STR_12(7), STR_10(11), 
  7696 ;;		 -> STR_8(6), STR_6(5), STR_4(4), STR_2(7), 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  a               2   11[COMRAM] PTR const unsigned char 
  7699 ;;		 -> stoa@nuls(7), dbuf(80), ?_sprintf(2), STR_18(8), 
  7700 ;;		 -> STR_16(6), STR_14(5), STR_12(7), STR_10(11), 
  7701 ;;		 -> STR_8(6), STR_6(5), STR_4(4), STR_2(7), 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  2    9[COMRAM] unsigned int 
  7704 ;; Registers used:
  7705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7714 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7715 ;;Total ram usage:        4 bytes
  7716 ;; Hardware stack levels used: 1
  7717 ;; Hardware stack levels required when called: 7
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_pad
  7722 ;;		_stoa
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           	psect	text28
  7727  005B56                     __ptext28:
  7728                           	callstack 0
  7729  005B56                     _strlen:
  7730                           	callstack 17
  7731  005B56  C00A  F00C         	movff	strlen@s,strlen@a
  7732  005B5A  C00B  F00D         	movff	strlen@s+1,strlen@a+1
  7733  005B5E  EFB3  F02D         	goto	l7110
  7734  005B62                     l7108:
  7735  005B62  4A0A               	infsnz	strlen@s^0,f,c
  7736  005B64  2A0B               	incf	(strlen@s+1)^0,f,c
  7737  005B66                     l7110:
  7738  005B66  C00A  FFF6         	movff	strlen@s,tblptrl
  7739  005B6A  C00B  FFF7         	movff	strlen@s+1,tblptrh
  7740  005B6E  0E00               	movlw	low (__smallconst shr (0+16))
  7741  005B70  6EF8               	movwf	tblptru,c
  7742  005B72  0E0D               	movlw	(high __ramtop+-1)
  7743  005B74  64F7               	cpfsgt	tblptrh,c
  7744  005B76  D003               	bra	u8867
  7745  005B78  0008               	tblrd		*
  7746  005B7A  50F5               	movf	tablat,w,c
  7747  005B7C  D005               	bra	u8860
  7748  005B7E                     u8867:
  7749  005B7E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7750  005B82  CFF7 FFE2          	movff	tblptrh,fsr1h
  7751  005B86  50E7               	movf	indf1,w,c
  7752  005B88                     u8860:
  7753  005B88  0900               	iorlw	0
  7754  005B8A  A4D8               	btfss	status,2,c
  7755  005B8C  EFCA  F02D         	goto	u8871
  7756  005B90  EFCC  F02D         	goto	u8870
  7757  005B94                     u8871:
  7758  005B94  EFB1  F02D         	goto	l7108
  7759  005B98                     u8870:
  7760  005B98  500C               	movf	strlen@a^0,w,c
  7761  005B9A  5C0A               	subwf	strlen@s^0,w,c
  7762  005B9C  6E0A               	movwf	?_strlen^0,c
  7763  005B9E  500D               	movf	(strlen@a+1)^0,w,c
  7764  005BA0  580B               	subwfb	(strlen@s+1)^0,w,c
  7765  005BA2  6E0B               	movwf	(?_strlen+1)^0,c
  7766  005BA4  0012               	return		;funcret
  7767  005BA6                     __end_of_strlen:
  7768                           	callstack 0
  7769                           
  7770 ;; *************** function _fputs *****************
  7771 ;; Defined at:
  7772 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  s               2   18[COMRAM] PTR const unsigned char 
  7775 ;;		 -> dbuf(80), 
  7776 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  7777 ;;		 -> sprintf@f(6), 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  i               2   23[COMRAM] int 
  7780 ;;  c               1   22[COMRAM] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  2   18[COMRAM] int 
  7783 ;; Registers used:
  7784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7791 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7793 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7794 ;;Total ram usage:        7 bytes
  7795 ;; Hardware stack levels used: 1
  7796 ;; Hardware stack levels required when called: 9
  7797 ;; This function calls:
  7798 ;;		_fputc
  7799 ;; This function is called by:
  7800 ;;		_pad
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text29
  7805  005EB8                     __ptext29:
  7806                           	callstack 0
  7807  005EB8                     _fputs:
  7808                           	callstack 14
  7809  005EB8  0E00               	movlw	0
  7810  005EBA  6E19               	movwf	(fputs@i+1)^0,c
  7811  005EBC  0E00               	movlw	0
  7812  005EBE  6E18               	movwf	fputs@i^0,c
  7813  005EC0  EF6D  F02F         	goto	l7104
  7814  005EC4                     l7100:
  7815  005EC4  C017  F00A         	movff	fputs@c,fputc@c
  7816  005EC8  6A0B               	clrf	(fputc@c+1)^0,c
  7817  005ECA  C015  F00C         	movff	fputs@fp,fputc@fp
  7818  005ECE  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
  7819  005ED2  ECC1  F029         	call	_fputc	;wreg free
  7820  005ED6  4A18               	infsnz	fputs@i^0,f,c
  7821  005ED8  2A19               	incf	(fputs@i+1)^0,f,c
  7822  005EDA                     l7104:
  7823  005EDA  5018               	movf	fputs@i^0,w,c
  7824  005EDC  2413               	addwf	fputs@s^0,w,c
  7825  005EDE  6ED9               	movwf	fsr2l,c
  7826  005EE0  5019               	movf	(fputs@i+1)^0,w,c
  7827  005EE2  2014               	addwfc	(fputs@s+1)^0,w,c
  7828  005EE4  6EDA               	movwf	fsr2h,c
  7829  005EE6  50DF               	movf	indf2,w,c
  7830  005EE8  6E17               	movwf	fputs@c^0,c
  7831  005EEA  5017               	movf	fputs@c^0,w,c
  7832  005EEC  A4D8               	btfss	status,2,c
  7833  005EEE  EF7B  F02F         	goto	u8851
  7834  005EF2  EF7D  F02F         	goto	u8850
  7835  005EF6                     u8851:
  7836  005EF6  EF62  F02F         	goto	l7100
  7837  005EFA                     u8850:
  7838  005EFA  0012               	return		;funcret
  7839  005EFC                     __end_of_fputs:
  7840                           	callstack 0
  7841                           
  7842 ;; *************** function _fputc *****************
  7843 ;; Defined at:
  7844 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;  c               2    9[COMRAM] int 
  7847 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7848 ;;		 -> sprintf@f(6), 
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;		None
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  2    9[COMRAM] int 
  7853 ;; Registers used:
  7854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7862 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7863 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;Total ram usage:        9 bytes
  7865 ;; Hardware stack levels used: 1
  7866 ;; Hardware stack levels required when called: 8
  7867 ;; This function calls:
  7868 ;;		_putch
  7869 ;; This function is called by:
  7870 ;;		_pad
  7871 ;;		_stoa
  7872 ;;		_vfpfcnvrt
  7873 ;;		_fputs
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text30
  7878  005382                     __ptext30:
  7879                           	callstack 0
  7880  005382                     _fputc:
  7881                           	callstack 16
  7882  005382  500C               	movf	fputc@fp^0,w,c
  7883  005384  100D               	iorwf	(fputc@fp+1)^0,w,c
  7884  005386  B4D8               	btfsc	status,2,c
  7885  005388  EFC8  F029         	goto	u8421
  7886  00538C  EFCA  F029         	goto	u8420
  7887  005390                     u8421:
  7888  005390  EFD3  F029         	goto	l6886
  7889  005394                     u8420:
  7890  005394  500C               	movf	fputc@fp^0,w,c
  7891  005396  100D               	iorwf	(fputc@fp+1)^0,w,c
  7892  005398  A4D8               	btfss	status,2,c
  7893  00539A  EFD1  F029         	goto	u8431
  7894  00539E  EFD3  F029         	goto	u8430
  7895  0053A2                     u8431:
  7896  0053A2  EFD8  F029         	goto	l6888
  7897  0053A6                     u8430:
  7898  0053A6                     l6886:
  7899  0053A6  500A               	movf	fputc@c^0,w,c
  7900  0053A8  ECA1  F031         	call	_putch
  7901  0053AC  EF25  F02A         	goto	l1797
  7902  0053B0                     l6888:
  7903  0053B0  EE20 F004          	lfsr	2,4
  7904  0053B4  500C               	movf	fputc@fp^0,w,c
  7905  0053B6  26D9               	addwf	fsr2l,f,c
  7906  0053B8  500D               	movf	(fputc@fp+1)^0,w,c
  7907  0053BA  22DA               	addwfc	fsr2h,f,c
  7908  0053BC  50DE               	movf	postinc2,w,c
  7909  0053BE  10DE               	iorwf	postinc2,w,c
  7910  0053C0  B4D8               	btfsc	status,2,c
  7911  0053C2  EFE5  F029         	goto	u8441
  7912  0053C6  EFE7  F029         	goto	u8440
  7913  0053CA                     u8441:
  7914  0053CA  EF02  F02A         	goto	l6892
  7915  0053CE                     u8440:
  7916  0053CE  EE20 F004          	lfsr	2,4
  7917  0053D2  500C               	movf	fputc@fp^0,w,c
  7918  0053D4  26D9               	addwf	fsr2l,f,c
  7919  0053D6  500D               	movf	(fputc@fp+1)^0,w,c
  7920  0053D8  22DA               	addwfc	fsr2h,f,c
  7921  0053DA  EE10 F002          	lfsr	1,2
  7922  0053DE  500C               	movf	fputc@fp^0,w,c
  7923  0053E0  26E1               	addwf	fsr1l,f,c
  7924  0053E2  500D               	movf	(fputc@fp+1)^0,w,c
  7925  0053E4  22E2               	addwfc	fsr1h,f,c
  7926  0053E6  50DE               	movf	postinc2,w,c
  7927  0053E8  5CE6               	subwf	postinc1,w,c
  7928  0053EA  50E6               	movf	postinc1,w,c
  7929  0053EC  0A80               	xorlw	128
  7930  0053EE  6E12               	movwf	(??_fputc+4)^0,c
  7931  0053F0  50DE               	movf	postinc2,w,c
  7932  0053F2  0A80               	xorlw	128
  7933  0053F4  5812               	subwfb	(??_fputc+4)^0,w,c
  7934  0053F6  B0D8               	btfsc	status,0,c
  7935  0053F8  EF00  F02A         	goto	u8451
  7936  0053FC  EF02  F02A         	goto	u8450
  7937  005400                     u8451:
  7938  005400  EF25  F02A         	goto	l1797
  7939  005404                     u8450:
  7940  005404                     l6892:
  7941  005404  EE20 F002          	lfsr	2,2
  7942  005408  500C               	movf	fputc@fp^0,w,c
  7943  00540A  26D9               	addwf	fsr2l,f,c
  7944  00540C  500D               	movf	(fputc@fp+1)^0,w,c
  7945  00540E  22DA               	addwfc	fsr2h,f,c
  7946  005410  CFDE F00E          	movff	postinc2,??_fputc
  7947  005414  CFDD F00F          	movff	postdec2,??_fputc+1
  7948  005418  C00C  FFD9         	movff	fputc@fp,fsr2l
  7949  00541C  C00D  FFDA         	movff	fputc@fp+1,fsr2h
  7950  005420  CFDE F010          	movff	postinc2,??_fputc+2
  7951  005424  CFDD F011          	movff	postdec2,??_fputc+3
  7952  005428  500E               	movf	??_fputc^0,w,c
  7953  00542A  2410               	addwf	(??_fputc+2)^0,w,c
  7954  00542C  6ED9               	movwf	fsr2l,c
  7955  00542E  500F               	movf	(??_fputc+1)^0,w,c
  7956  005430  2011               	addwfc	(??_fputc+3)^0,w,c
  7957  005432  6EDA               	movwf	fsr2h,c
  7958  005434  C00A  FFDF         	movff	fputc@c,indf2
  7959  005438  EE20 F002          	lfsr	2,2
  7960  00543C  500C               	movf	fputc@fp^0,w,c
  7961  00543E  26D9               	addwf	fsr2l,f,c
  7962  005440  500D               	movf	(fputc@fp+1)^0,w,c
  7963  005442  22DA               	addwfc	fsr2h,f,c
  7964  005444  2ADE               	incf	postinc2,f,c
  7965  005446  0E00               	movlw	0
  7966  005448  22DD               	addwfc	postdec2,f,c
  7967  00544A                     l1797:
  7968  00544A  0012               	return		;funcret
  7969  00544C                     __end_of_fputc:
  7970                           	callstack 0
  7971                           
  7972 ;; *************** function _putch *****************
  7973 ;; Defined at:
  7974 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  c               1    wreg     unsigned char 
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;  c               1    0[COMRAM] unsigned char 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  1    wreg      void 
  7981 ;; Registers used:
  7982 ;;		wreg
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;Total ram usage:        0 bytes
  7993 ;; Hardware stack levels used: 1
  7994 ;; Hardware stack levels required when called: 7
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		_fputc
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           	psect	text31
  8003  006342                     __ptext31:
  8004                           	callstack 0
  8005  006342                     _putch:
  8006                           	callstack 16
  8007  006342  0012               	return		;funcret
  8008  006344                     __end_of_putch:
  8009                           	callstack 0
  8010                           
  8011 ;; *************** function _abs *****************
  8012 ;; Defined at:
  8013 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  a               2   27[COMRAM] int 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;		None
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  2   27[COMRAM] int 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8031 ;;Total ram usage:        4 bytes
  8032 ;; Hardware stack levels used: 1
  8033 ;; Hardware stack levels required when called: 7
  8034 ;; This function calls:
  8035 ;;		Nothing
  8036 ;; This function is called by:
  8037 ;;		_dtoa
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text32
  8042  005F82                     __ptext32:
  8043                           	callstack 0
  8044  005F82                     _abs:
  8045                           	callstack 17
  8046  005F82  BE1D               	btfsc	(abs@a+1)^0,7,c
  8047  005F84  EFCE  F02F         	goto	u9770
  8048  005F88  501D               	movf	(abs@a+1)^0,w,c
  8049  005F8A  E106               	bnz	u9771
  8050  005F8C  041C               	decf	abs@a^0,w,c
  8051  005F8E  B0D8               	btfsc	status,0,c
  8052  005F90  EFCC  F02F         	goto	u9771
  8053  005F94  EFCE  F02F         	goto	u9770
  8054  005F98                     u9771:
  8055  005F98  EFDC  F02F         	goto	l1718
  8056  005F9C                     u9770:
  8057  005F9C  C01C  F01E         	movff	abs@a,??_abs
  8058  005FA0  C01D  F01F         	movff	abs@a+1,??_abs+1
  8059  005FA4  1E1E               	comf	??_abs^0,f,c
  8060  005FA6  1E1F               	comf	(??_abs+1)^0,f,c
  8061  005FA8  4A1E               	infsnz	??_abs^0,f,c
  8062  005FAA  2A1F               	incf	(??_abs+1)^0,f,c
  8063  005FAC  C01E  F01C         	movff	??_abs,?_abs
  8064  005FB0  C01F  F01D         	movff	??_abs+1,?_abs+1
  8065  005FB4  EFE0  F02F         	goto	l1721
  8066  005FB8                     l1718:
  8067  005FB8  C01C  F01C         	movff	abs@a,?_abs
  8068  005FBC  C01D  F01D         	movff	abs@a+1,?_abs+1
  8069  005FC0                     l1721:
  8070  005FC0  0012               	return		;funcret
  8071  005FC2                     __end_of_abs:
  8072                           	callstack 0
  8073                           
  8074 ;; *************** function ___aomod *****************
  8075 ;; Defined at:
  8076 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8077 ;; Parameters:    Size  Location     Type
  8078 ;;  dividend        8    9[COMRAM] long long 
  8079 ;;  divisor         8   17[COMRAM] long long 
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;  sign            1   26[COMRAM] unsigned char 
  8082 ;;  counter         1   25[COMRAM] unsigned char 
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  8    9[COMRAM] long long 
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8092 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8095 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8096 ;;Total ram usage:       18 bytes
  8097 ;; Hardware stack levels used: 1
  8098 ;; Hardware stack levels required when called: 7
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_dtoa
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text33
  8107  00472C                     __ptext33:
  8108                           	callstack 0
  8109  00472C                     ___aomod:
  8110                           	callstack 17
  8111  00472C  0E00               	movlw	0
  8112  00472E  6E1B               	movwf	___aomod@sign^0,c
  8113  004730  BE11               	btfsc	(___aomod@dividend+7)^0,7,c
  8114  004732  EF9F  F023         	goto	u8970
  8115  004736  EF9D  F023         	goto	u8971
  8116  00473A                     u8971:
  8117  00473A  EFB1  F023         	goto	l7178
  8118  00473E                     u8970:
  8119  00473E  1E11               	comf	(___aomod@dividend+7)^0,f,c
  8120  004740  1E10               	comf	(___aomod@dividend+6)^0,f,c
  8121  004742  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  8122  004744  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  8123  004746  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  8124  004748  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  8125  00474A  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  8126  00474C  6C0A               	negf	___aomod@dividend^0,c
  8127  00474E  0E00               	movlw	0
  8128  004750  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  8129  004752  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  8130  004754  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  8131  004756  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  8132  004758  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  8133  00475A  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  8134  00475C  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  8135  00475E  0E01               	movlw	1
  8136  004760  6E1B               	movwf	___aomod@sign^0,c
  8137  004762                     l7178:
  8138  004762  BE19               	btfsc	(___aomod@divisor+7)^0,7,c
  8139  004764  EFB8  F023         	goto	u8980
  8140  004768  EFB6  F023         	goto	u8981
  8141  00476C                     u8981:
  8142  00476C  EFC8  F023         	goto	l7182
  8143  004770                     u8980:
  8144  004770  1E19               	comf	(___aomod@divisor+7)^0,f,c
  8145  004772  1E18               	comf	(___aomod@divisor+6)^0,f,c
  8146  004774  1E17               	comf	(___aomod@divisor+5)^0,f,c
  8147  004776  1E16               	comf	(___aomod@divisor+4)^0,f,c
  8148  004778  1E15               	comf	(___aomod@divisor+3)^0,f,c
  8149  00477A  1E14               	comf	(___aomod@divisor+2)^0,f,c
  8150  00477C  1E13               	comf	(___aomod@divisor+1)^0,f,c
  8151  00477E  6C12               	negf	___aomod@divisor^0,c
  8152  004780  0E00               	movlw	0
  8153  004782  2213               	addwfc	(___aomod@divisor+1)^0,f,c
  8154  004784  2214               	addwfc	(___aomod@divisor+2)^0,f,c
  8155  004786  2215               	addwfc	(___aomod@divisor+3)^0,f,c
  8156  004788  2216               	addwfc	(___aomod@divisor+4)^0,f,c
  8157  00478A  2217               	addwfc	(___aomod@divisor+5)^0,f,c
  8158  00478C  2218               	addwfc	(___aomod@divisor+6)^0,f,c
  8159  00478E  2219               	addwfc	(___aomod@divisor+7)^0,f,c
  8160  004790                     l7182:
  8161  004790  5012               	movf	___aomod@divisor^0,w,c
  8162  004792  1013               	iorwf	(___aomod@divisor+1)^0,w,c
  8163  004794  1014               	iorwf	(___aomod@divisor+2)^0,w,c
  8164  004796  1015               	iorwf	(___aomod@divisor+3)^0,w,c
  8165  004798  1016               	iorwf	(___aomod@divisor+4)^0,w,c
  8166  00479A  1017               	iorwf	(___aomod@divisor+5)^0,w,c
  8167  00479C  1018               	iorwf	(___aomod@divisor+6)^0,w,c
  8168  00479E  1019               	iorwf	(___aomod@divisor+7)^0,w,c
  8169  0047A0  B4D8               	btfsc	status,2,c
  8170  0047A2  EFD5  F023         	goto	u8991
  8171  0047A6  EFD7  F023         	goto	u8990
  8172  0047AA                     u8991:
  8173  0047AA  EF1F  F024         	goto	l7198
  8174  0047AE                     u8990:
  8175  0047AE  0E01               	movlw	1
  8176  0047B0  6E1A               	movwf	___aomod@counter^0,c
  8177  0047B2  EFE5  F023         	goto	l7188
  8178  0047B6                     l7186:
  8179  0047B6  90D8               	bcf	status,0,c
  8180  0047B8  3612               	rlcf	___aomod@divisor^0,f,c
  8181  0047BA  3613               	rlcf	(___aomod@divisor+1)^0,f,c
  8182  0047BC  3614               	rlcf	(___aomod@divisor+2)^0,f,c
  8183  0047BE  3615               	rlcf	(___aomod@divisor+3)^0,f,c
  8184  0047C0  3616               	rlcf	(___aomod@divisor+4)^0,f,c
  8185  0047C2  3617               	rlcf	(___aomod@divisor+5)^0,f,c
  8186  0047C4  3618               	rlcf	(___aomod@divisor+6)^0,f,c
  8187  0047C6  3619               	rlcf	(___aomod@divisor+7)^0,f,c
  8188  0047C8  2A1A               	incf	___aomod@counter^0,f,c
  8189  0047CA                     l7188:
  8190  0047CA  AE19               	btfss	(___aomod@divisor+7)^0,7,c
  8191  0047CC  EFEA  F023         	goto	u9001
  8192  0047D0  EFEC  F023         	goto	u9000
  8193  0047D4                     u9001:
  8194  0047D4  EFDB  F023         	goto	l7186
  8195  0047D8                     u9000:
  8196  0047D8                     l7190:
  8197  0047D8  5012               	movf	___aomod@divisor^0,w,c
  8198  0047DA  5C0A               	subwf	___aomod@dividend^0,w,c
  8199  0047DC  5013               	movf	(___aomod@divisor+1)^0,w,c
  8200  0047DE  580B               	subwfb	(___aomod@dividend+1)^0,w,c
  8201  0047E0  5014               	movf	(___aomod@divisor+2)^0,w,c
  8202  0047E2  580C               	subwfb	(___aomod@dividend+2)^0,w,c
  8203  0047E4  5015               	movf	(___aomod@divisor+3)^0,w,c
  8204  0047E6  580D               	subwfb	(___aomod@dividend+3)^0,w,c
  8205  0047E8  5016               	movf	(___aomod@divisor+4)^0,w,c
  8206  0047EA  580E               	subwfb	(___aomod@dividend+4)^0,w,c
  8207  0047EC  5017               	movf	(___aomod@divisor+5)^0,w,c
  8208  0047EE  580F               	subwfb	(___aomod@dividend+5)^0,w,c
  8209  0047F0  5018               	movf	(___aomod@divisor+6)^0,w,c
  8210  0047F2  5810               	subwfb	(___aomod@dividend+6)^0,w,c
  8211  0047F4  5019               	movf	(___aomod@divisor+7)^0,w,c
  8212  0047F6  5811               	subwfb	(___aomod@dividend+7)^0,w,c
  8213  0047F8  A0D8               	btfss	status,0,c
  8214  0047FA  EF01  F024         	goto	u9011
  8215  0047FE  EF03  F024         	goto	u9010
  8216  004802                     u9011:
  8217  004802  EF13  F024         	goto	l7194
  8218  004806                     u9010:
  8219  004806  5012               	movf	___aomod@divisor^0,w,c
  8220  004808  5E0A               	subwf	___aomod@dividend^0,f,c
  8221  00480A  5013               	movf	(___aomod@divisor+1)^0,w,c
  8222  00480C  5A0B               	subwfb	(___aomod@dividend+1)^0,f,c
  8223  00480E  5014               	movf	(___aomod@divisor+2)^0,w,c
  8224  004810  5A0C               	subwfb	(___aomod@dividend+2)^0,f,c
  8225  004812  5015               	movf	(___aomod@divisor+3)^0,w,c
  8226  004814  5A0D               	subwfb	(___aomod@dividend+3)^0,f,c
  8227  004816  5016               	movf	(___aomod@divisor+4)^0,w,c
  8228  004818  5A0E               	subwfb	(___aomod@dividend+4)^0,f,c
  8229  00481A  5017               	movf	(___aomod@divisor+5)^0,w,c
  8230  00481C  5A0F               	subwfb	(___aomod@dividend+5)^0,f,c
  8231  00481E  5018               	movf	(___aomod@divisor+6)^0,w,c
  8232  004820  5A10               	subwfb	(___aomod@dividend+6)^0,f,c
  8233  004822  5019               	movf	(___aomod@divisor+7)^0,w,c
  8234  004824  5A11               	subwfb	(___aomod@dividend+7)^0,f,c
  8235  004826                     l7194:
  8236  004826  90D8               	bcf	status,0,c
  8237  004828  3219               	rrcf	(___aomod@divisor+7)^0,f,c
  8238  00482A  3218               	rrcf	(___aomod@divisor+6)^0,f,c
  8239  00482C  3217               	rrcf	(___aomod@divisor+5)^0,f,c
  8240  00482E  3216               	rrcf	(___aomod@divisor+4)^0,f,c
  8241  004830  3215               	rrcf	(___aomod@divisor+3)^0,f,c
  8242  004832  3214               	rrcf	(___aomod@divisor+2)^0,f,c
  8243  004834  3213               	rrcf	(___aomod@divisor+1)^0,f,c
  8244  004836  3212               	rrcf	___aomod@divisor^0,f,c
  8245  004838  2E1A               	decfsz	___aomod@counter^0,f,c
  8246  00483A  EFEC  F023         	goto	l7190
  8247  00483E                     l7198:
  8248  00483E  501B               	movf	___aomod@sign^0,w,c
  8249  004840  B4D8               	btfsc	status,2,c
  8250  004842  EF25  F024         	goto	u9021
  8251  004846  EF27  F024         	goto	u9020
  8252  00484A                     u9021:
  8253  00484A  EF37  F024         	goto	l7202
  8254  00484E                     u9020:
  8255  00484E  1E11               	comf	(___aomod@dividend+7)^0,f,c
  8256  004850  1E10               	comf	(___aomod@dividend+6)^0,f,c
  8257  004852  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  8258  004854  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  8259  004856  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  8260  004858  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  8261  00485A  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  8262  00485C  6C0A               	negf	___aomod@dividend^0,c
  8263  00485E  0E00               	movlw	0
  8264  004860  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  8265  004862  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  8266  004864  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  8267  004866  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  8268  004868  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  8269  00486A  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  8270  00486C  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  8271  00486E                     l7202:
  8272  00486E  C00A  F00A         	movff	___aomod@dividend,?___aomod
  8273  004872  C00B  F00B         	movff	___aomod@dividend+1,?___aomod+1
  8274  004876  C00C  F00C         	movff	___aomod@dividend+2,?___aomod+2
  8275  00487A  C00D  F00D         	movff	___aomod@dividend+3,?___aomod+3
  8276  00487E  C00E  F00E         	movff	___aomod@dividend+4,?___aomod+4
  8277  004882  C00F  F00F         	movff	___aomod@dividend+5,?___aomod+5
  8278  004886  C010  F010         	movff	___aomod@dividend+6,?___aomod+6
  8279  00488A  C011  F011         	movff	___aomod@dividend+7,?___aomod+7
  8280  00488E  0012               	return		;funcret
  8281  004890                     __end_of___aomod:
  8282                           	callstack 0
  8283                           
  8284 ;; *************** function ___aodiv *****************
  8285 ;; Defined at:
  8286 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  dividend        8    9[COMRAM] long long 
  8289 ;;  divisor         8   17[COMRAM] long long 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  quotient        8   27[COMRAM] long long 
  8292 ;;  sign            1   26[COMRAM] unsigned char 
  8293 ;;  counter         1   25[COMRAM] unsigned char 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  8    9[COMRAM] long long 
  8296 ;; Registers used:
  8297 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8303 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8304 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8306 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8307 ;;Total ram usage:       26 bytes
  8308 ;; Hardware stack levels used: 1
  8309 ;; Hardware stack levels required when called: 7
  8310 ;; This function calls:
  8311 ;;		Nothing
  8312 ;; This function is called by:
  8313 ;;		_dtoa
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text34
  8318  0042A8                     __ptext34:
  8319                           	callstack 0
  8320  0042A8                     ___aodiv:
  8321                           	callstack 17
  8322  0042A8  0E00               	movlw	0
  8323  0042AA  6E1B               	movwf	___aodiv@sign^0,c
  8324  0042AC  BE19               	btfsc	(___aodiv@divisor+7)^0,7,c
  8325  0042AE  EF5D  F021         	goto	u8900
  8326  0042B2  EF5B  F021         	goto	u8901
  8327  0042B6                     u8901:
  8328  0042B6  EF6F  F021         	goto	l7134
  8329  0042BA                     u8900:
  8330  0042BA  1E19               	comf	(___aodiv@divisor+7)^0,f,c
  8331  0042BC  1E18               	comf	(___aodiv@divisor+6)^0,f,c
  8332  0042BE  1E17               	comf	(___aodiv@divisor+5)^0,f,c
  8333  0042C0  1E16               	comf	(___aodiv@divisor+4)^0,f,c
  8334  0042C2  1E15               	comf	(___aodiv@divisor+3)^0,f,c
  8335  0042C4  1E14               	comf	(___aodiv@divisor+2)^0,f,c
  8336  0042C6  1E13               	comf	(___aodiv@divisor+1)^0,f,c
  8337  0042C8  6C12               	negf	___aodiv@divisor^0,c
  8338  0042CA  0E00               	movlw	0
  8339  0042CC  2213               	addwfc	(___aodiv@divisor+1)^0,f,c
  8340  0042CE  2214               	addwfc	(___aodiv@divisor+2)^0,f,c
  8341  0042D0  2215               	addwfc	(___aodiv@divisor+3)^0,f,c
  8342  0042D2  2216               	addwfc	(___aodiv@divisor+4)^0,f,c
  8343  0042D4  2217               	addwfc	(___aodiv@divisor+5)^0,f,c
  8344  0042D6  2218               	addwfc	(___aodiv@divisor+6)^0,f,c
  8345  0042D8  2219               	addwfc	(___aodiv@divisor+7)^0,f,c
  8346  0042DA  0E01               	movlw	1
  8347  0042DC  6E1B               	movwf	___aodiv@sign^0,c
  8348  0042DE                     l7134:
  8349  0042DE  BE11               	btfsc	(___aodiv@dividend+7)^0,7,c
  8350  0042E0  EF76  F021         	goto	u8910
  8351  0042E4  EF74  F021         	goto	u8911
  8352  0042E8                     u8911:
  8353  0042E8  EF88  F021         	goto	l7140
  8354  0042EC                     u8910:
  8355  0042EC  1E11               	comf	(___aodiv@dividend+7)^0,f,c
  8356  0042EE  1E10               	comf	(___aodiv@dividend+6)^0,f,c
  8357  0042F0  1E0F               	comf	(___aodiv@dividend+5)^0,f,c
  8358  0042F2  1E0E               	comf	(___aodiv@dividend+4)^0,f,c
  8359  0042F4  1E0D               	comf	(___aodiv@dividend+3)^0,f,c
  8360  0042F6  1E0C               	comf	(___aodiv@dividend+2)^0,f,c
  8361  0042F8  1E0B               	comf	(___aodiv@dividend+1)^0,f,c
  8362  0042FA  6C0A               	negf	___aodiv@dividend^0,c
  8363  0042FC  0E00               	movlw	0
  8364  0042FE  220B               	addwfc	(___aodiv@dividend+1)^0,f,c
  8365  004300  220C               	addwfc	(___aodiv@dividend+2)^0,f,c
  8366  004302  220D               	addwfc	(___aodiv@dividend+3)^0,f,c
  8367  004304  220E               	addwfc	(___aodiv@dividend+4)^0,f,c
  8368  004306  220F               	addwfc	(___aodiv@dividend+5)^0,f,c
  8369  004308  2210               	addwfc	(___aodiv@dividend+6)^0,f,c
  8370  00430A  2211               	addwfc	(___aodiv@dividend+7)^0,f,c
  8371  00430C  0E01               	movlw	1
  8372  00430E  1A1B               	xorwf	___aodiv@sign^0,f,c
  8373  004310                     l7140:
  8374  004310  EE20  F01C         	lfsr	2,___aodiv@quotient
  8375  004314  0E07               	movlw	7
  8376  004316                     u8921:
  8377  004316  6ADE               	clrf	postinc2,c
  8378  004318  06E8               	decf	wreg,f,c
  8379  00431A  E2FD               	bc	u8921
  8380  00431C  5012               	movf	___aodiv@divisor^0,w,c
  8381  00431E  1013               	iorwf	(___aodiv@divisor+1)^0,w,c
  8382  004320  1014               	iorwf	(___aodiv@divisor+2)^0,w,c
  8383  004322  1015               	iorwf	(___aodiv@divisor+3)^0,w,c
  8384  004324  1016               	iorwf	(___aodiv@divisor+4)^0,w,c
  8385  004326  1017               	iorwf	(___aodiv@divisor+5)^0,w,c
  8386  004328  1018               	iorwf	(___aodiv@divisor+6)^0,w,c
  8387  00432A  1019               	iorwf	(___aodiv@divisor+7)^0,w,c
  8388  00432C  B4D8               	btfsc	status,2,c
  8389  00432E  EF9B  F021         	goto	u8931
  8390  004332  EF9D  F021         	goto	u8930
  8391  004336                     u8931:
  8392  004336  EFEF  F021         	goto	l7162
  8393  00433A                     u8930:
  8394  00433A  0E01               	movlw	1
  8395  00433C  6E1A               	movwf	___aodiv@counter^0,c
  8396  00433E  EFAB  F021         	goto	l7148
  8397  004342                     l7146:
  8398  004342  90D8               	bcf	status,0,c
  8399  004344  3612               	rlcf	___aodiv@divisor^0,f,c
  8400  004346  3613               	rlcf	(___aodiv@divisor+1)^0,f,c
  8401  004348  3614               	rlcf	(___aodiv@divisor+2)^0,f,c
  8402  00434A  3615               	rlcf	(___aodiv@divisor+3)^0,f,c
  8403  00434C  3616               	rlcf	(___aodiv@divisor+4)^0,f,c
  8404  00434E  3617               	rlcf	(___aodiv@divisor+5)^0,f,c
  8405  004350  3618               	rlcf	(___aodiv@divisor+6)^0,f,c
  8406  004352  3619               	rlcf	(___aodiv@divisor+7)^0,f,c
  8407  004354  2A1A               	incf	___aodiv@counter^0,f,c
  8408  004356                     l7148:
  8409  004356  AE19               	btfss	(___aodiv@divisor+7)^0,7,c
  8410  004358  EFB0  F021         	goto	u8941
  8411  00435C  EFB2  F021         	goto	u8940
  8412  004360                     u8941:
  8413  004360  EFA1  F021         	goto	l7146
  8414  004364                     u8940:
  8415  004364                     l7150:
  8416  004364  90D8               	bcf	status,0,c
  8417  004366  361C               	rlcf	___aodiv@quotient^0,f,c
  8418  004368  361D               	rlcf	(___aodiv@quotient+1)^0,f,c
  8419  00436A  361E               	rlcf	(___aodiv@quotient+2)^0,f,c
  8420  00436C  361F               	rlcf	(___aodiv@quotient+3)^0,f,c
  8421  00436E  3620               	rlcf	(___aodiv@quotient+4)^0,f,c
  8422  004370  3621               	rlcf	(___aodiv@quotient+5)^0,f,c
  8423  004372  3622               	rlcf	(___aodiv@quotient+6)^0,f,c
  8424  004374  3623               	rlcf	(___aodiv@quotient+7)^0,f,c
  8425  004376  5012               	movf	___aodiv@divisor^0,w,c
  8426  004378  5C0A               	subwf	___aodiv@dividend^0,w,c
  8427  00437A  5013               	movf	(___aodiv@divisor+1)^0,w,c
  8428  00437C  580B               	subwfb	(___aodiv@dividend+1)^0,w,c
  8429  00437E  5014               	movf	(___aodiv@divisor+2)^0,w,c
  8430  004380  580C               	subwfb	(___aodiv@dividend+2)^0,w,c
  8431  004382  5015               	movf	(___aodiv@divisor+3)^0,w,c
  8432  004384  580D               	subwfb	(___aodiv@dividend+3)^0,w,c
  8433  004386  5016               	movf	(___aodiv@divisor+4)^0,w,c
  8434  004388  580E               	subwfb	(___aodiv@dividend+4)^0,w,c
  8435  00438A  5017               	movf	(___aodiv@divisor+5)^0,w,c
  8436  00438C  580F               	subwfb	(___aodiv@dividend+5)^0,w,c
  8437  00438E  5018               	movf	(___aodiv@divisor+6)^0,w,c
  8438  004390  5810               	subwfb	(___aodiv@dividend+6)^0,w,c
  8439  004392  5019               	movf	(___aodiv@divisor+7)^0,w,c
  8440  004394  5811               	subwfb	(___aodiv@dividend+7)^0,w,c
  8441  004396  A0D8               	btfss	status,0,c
  8442  004398  EFD0  F021         	goto	u8951
  8443  00439C  EFD2  F021         	goto	u8950
  8444  0043A0                     u8951:
  8445  0043A0  EFE3  F021         	goto	l7158
  8446  0043A4                     u8950:
  8447  0043A4  5012               	movf	___aodiv@divisor^0,w,c
  8448  0043A6  5E0A               	subwf	___aodiv@dividend^0,f,c
  8449  0043A8  5013               	movf	(___aodiv@divisor+1)^0,w,c
  8450  0043AA  5A0B               	subwfb	(___aodiv@dividend+1)^0,f,c
  8451  0043AC  5014               	movf	(___aodiv@divisor+2)^0,w,c
  8452  0043AE  5A0C               	subwfb	(___aodiv@dividend+2)^0,f,c
  8453  0043B0  5015               	movf	(___aodiv@divisor+3)^0,w,c
  8454  0043B2  5A0D               	subwfb	(___aodiv@dividend+3)^0,f,c
  8455  0043B4  5016               	movf	(___aodiv@divisor+4)^0,w,c
  8456  0043B6  5A0E               	subwfb	(___aodiv@dividend+4)^0,f,c
  8457  0043B8  5017               	movf	(___aodiv@divisor+5)^0,w,c
  8458  0043BA  5A0F               	subwfb	(___aodiv@dividend+5)^0,f,c
  8459  0043BC  5018               	movf	(___aodiv@divisor+6)^0,w,c
  8460  0043BE  5A10               	subwfb	(___aodiv@dividend+6)^0,f,c
  8461  0043C0  5019               	movf	(___aodiv@divisor+7)^0,w,c
  8462  0043C2  5A11               	subwfb	(___aodiv@dividend+7)^0,f,c
  8463  0043C4  801C               	bsf	___aodiv@quotient^0,0,c
  8464  0043C6                     l7158:
  8465  0043C6  90D8               	bcf	status,0,c
  8466  0043C8  3219               	rrcf	(___aodiv@divisor+7)^0,f,c
  8467  0043CA  3218               	rrcf	(___aodiv@divisor+6)^0,f,c
  8468  0043CC  3217               	rrcf	(___aodiv@divisor+5)^0,f,c
  8469  0043CE  3216               	rrcf	(___aodiv@divisor+4)^0,f,c
  8470  0043D0  3215               	rrcf	(___aodiv@divisor+3)^0,f,c
  8471  0043D2  3214               	rrcf	(___aodiv@divisor+2)^0,f,c
  8472  0043D4  3213               	rrcf	(___aodiv@divisor+1)^0,f,c
  8473  0043D6  3212               	rrcf	___aodiv@divisor^0,f,c
  8474  0043D8  2E1A               	decfsz	___aodiv@counter^0,f,c
  8475  0043DA  EFB2  F021         	goto	l7150
  8476  0043DE                     l7162:
  8477  0043DE  501B               	movf	___aodiv@sign^0,w,c
  8478  0043E0  B4D8               	btfsc	status,2,c
  8479  0043E2  EFF5  F021         	goto	u8961
  8480  0043E6  EFF7  F021         	goto	u8960
  8481  0043EA                     u8961:
  8482  0043EA  EF07  F022         	goto	l7166
  8483  0043EE                     u8960:
  8484  0043EE  1E23               	comf	(___aodiv@quotient+7)^0,f,c
  8485  0043F0  1E22               	comf	(___aodiv@quotient+6)^0,f,c
  8486  0043F2  1E21               	comf	(___aodiv@quotient+5)^0,f,c
  8487  0043F4  1E20               	comf	(___aodiv@quotient+4)^0,f,c
  8488  0043F6  1E1F               	comf	(___aodiv@quotient+3)^0,f,c
  8489  0043F8  1E1E               	comf	(___aodiv@quotient+2)^0,f,c
  8490  0043FA  1E1D               	comf	(___aodiv@quotient+1)^0,f,c
  8491  0043FC  6C1C               	negf	___aodiv@quotient^0,c
  8492  0043FE  0E00               	movlw	0
  8493  004400  221D               	addwfc	(___aodiv@quotient+1)^0,f,c
  8494  004402  221E               	addwfc	(___aodiv@quotient+2)^0,f,c
  8495  004404  221F               	addwfc	(___aodiv@quotient+3)^0,f,c
  8496  004406  2220               	addwfc	(___aodiv@quotient+4)^0,f,c
  8497  004408  2221               	addwfc	(___aodiv@quotient+5)^0,f,c
  8498  00440A  2222               	addwfc	(___aodiv@quotient+6)^0,f,c
  8499  00440C  2223               	addwfc	(___aodiv@quotient+7)^0,f,c
  8500  00440E                     l7166:
  8501  00440E  C01C  F00A         	movff	___aodiv@quotient,?___aodiv
  8502  004412  C01D  F00B         	movff	___aodiv@quotient+1,?___aodiv+1
  8503  004416  C01E  F00C         	movff	___aodiv@quotient+2,?___aodiv+2
  8504  00441A  C01F  F00D         	movff	___aodiv@quotient+3,?___aodiv+3
  8505  00441E  C020  F00E         	movff	___aodiv@quotient+4,?___aodiv+4
  8506  004422  C021  F00F         	movff	___aodiv@quotient+5,?___aodiv+5
  8507  004426  C022  F010         	movff	___aodiv@quotient+6,?___aodiv+6
  8508  00442A  C023  F011         	movff	___aodiv@quotient+7,?___aodiv+7
  8509  00442E  0012               	return		;funcret
  8510  004430                     __end_of___aodiv:
  8511                           	callstack 0
  8512                           
  8513 ;; *************** function _atoi *****************
  8514 ;; Defined at:
  8515 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  s               2   16[COMRAM] PTR const unsigned char 
  8518 ;;		 -> STR_19(44), STR_17(64), STR_15(64), STR_13(64), 
  8519 ;;		 -> STR_11(64), STR_9(64), STR_7(64), STR_5(64), 
  8520 ;;		 -> STR_3(64), STR_1(64), 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  n               2   29[COMRAM] int 
  8523 ;;  neg             2   22[COMRAM] int 
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  2   16[COMRAM] int 
  8526 ;; Registers used:
  8527 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/0
  8530 ;;		On exit  : 0/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8534 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8535 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;Total ram usage:       15 bytes
  8538 ;; Hardware stack levels used: 1
  8539 ;; Hardware stack levels required when called: 8
  8540 ;; This function calls:
  8541 ;;		___wmul
  8542 ;;		_isdigit
  8543 ;;		_isspace
  8544 ;; This function is called by:
  8545 ;;		_vfpfcnvrt
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           	psect	text35
  8550  003F6A                     __ptext35:
  8551                           	callstack 0
  8552  003F6A                     _atoi:
  8553                           	callstack 17
  8554  003F6A  0E00               	movlw	0
  8555  003F6C  6E1F               	movwf	(atoi@n+1)^0,c
  8556  003F6E  0E00               	movlw	0
  8557  003F70  6E1E               	movwf	atoi@n^0,c
  8558  003F72  0E00               	movlw	0
  8559  003F74  6E18               	movwf	(atoi@neg+1)^0,c
  8560  003F76  0E00               	movlw	0
  8561  003F78  6E17               	movwf	atoi@neg^0,c
  8562  003F7A  EFC1  F01F         	goto	l8176
  8563  003F7E                     l8174:
  8564  003F7E  4A11               	infsnz	atoi@s^0,f,c
  8565  003F80  2A12               	incf	(atoi@s+1)^0,f,c
  8566  003F82                     l8176:
  8567  003F82  0E01               	movlw	1
  8568  003F84  6E1D               	movwf	_atoi$3207^0,c
  8569  003F86  C011  FFF6         	movff	atoi@s,tblptrl
  8570  003F8A  C012  FFF7         	movff	atoi@s+1,tblptrh
  8571  003F8E                     	if	0	;tblptru may be non-zero
  8572  003F8E                     	endif
  8573  003F8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8574  003F8E  0E00               	movlw	low (__mediumconst shr (0+16))
  8575  003F90  6EF8               	movwf	tblptru,c
  8576  003F92                     	endif
  8577  003F92  0008               	tblrd		*
  8578  003F94  50F5               	movf	tablat,w,c
  8579  003F96  0A20               	xorlw	32
  8580  003F98  B4D8               	btfsc	status,2,c
  8581  003F9A  EFD1  F01F         	goto	u10851
  8582  003F9E  EFD3  F01F         	goto	u10850
  8583  003FA2                     u10851:
  8584  003FA2  EFF2  F01F         	goto	l8184
  8585  003FA6                     u10850:
  8586  003FA6  0EF7               	movlw	247
  8587  003FA8  6E13               	movwf	??_atoi^0,c
  8588  003FAA  0EFF               	movlw	255
  8589  003FAC  6E14               	movwf	(??_atoi+1)^0,c
  8590  003FAE  C011  FFF6         	movff	atoi@s,tblptrl
  8591  003FB2  C012  FFF7         	movff	atoi@s+1,tblptrh
  8592  003FB6                     	if	0	;tblptru may be non-zero
  8593  003FB6                     	endif
  8594  003FB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8595  003FB6  0E00               	movlw	low (__mediumconst shr (0+16))
  8596  003FB8  6EF8               	movwf	tblptru,c
  8597  003FBA                     	endif
  8598  003FBA  0008               	tblrd		*
  8599  003FBC  50F5               	movf	tablat,w,c
  8600  003FBE  6E15               	movwf	(??_atoi+2)^0,c
  8601  003FC0  6A16               	clrf	(??_atoi+3)^0,c
  8602  003FC2  5013               	movf	??_atoi^0,w,c
  8603  003FC4  2615               	addwf	(??_atoi+2)^0,f,c
  8604  003FC6  5014               	movf	(??_atoi+1)^0,w,c
  8605  003FC8  2216               	addwfc	(??_atoi+3)^0,f,c
  8606  003FCA  5016               	movf	(??_atoi+3)^0,w,c
  8607  003FCC  E109               	bnz	u10860
  8608  003FCE  0E05               	movlw	5
  8609  003FD0  5C15               	subwf	(??_atoi+2)^0,w,c
  8610  003FD2  A0D8               	btfss	status,0,c
  8611  003FD4  EFEE  F01F         	goto	u10861
  8612  003FD8  EFF0  F01F         	goto	u10860
  8613  003FDC                     u10861:
  8614  003FDC  EFF2  F01F         	goto	l8184
  8615  003FE0                     u10860:
  8616  003FE0  0E00               	movlw	0
  8617  003FE2  6E1D               	movwf	_atoi$3207^0,c
  8618  003FE4                     l8184:
  8619  003FE4  C01D  F019         	movff	_atoi$3207,_atoi$3206
  8620  003FE8  6A1A               	clrf	(_atoi$3206+1)^0,c
  8621  003FEA  5019               	movf	_atoi$3206^0,w,c
  8622  003FEC  101A               	iorwf	(_atoi$3206+1)^0,w,c
  8623  003FEE  A4D8               	btfss	status,2,c
  8624  003FF0  EFFC  F01F         	goto	u10871
  8625  003FF4  EFFE  F01F         	goto	u10870
  8626  003FF8                     u10871:
  8627  003FF8  EFBF  F01F         	goto	l8174
  8628  003FFC                     u10870:
  8629  003FFC  EF08  F020         	goto	l8194
  8630  004000                     l8190:
  8631  004000  0E00               	movlw	0
  8632  004002  6E18               	movwf	(atoi@neg+1)^0,c
  8633  004004  0E01               	movlw	1
  8634  004006  6E17               	movwf	atoi@neg^0,c
  8635  004008                     l8192:
  8636  004008  4A11               	infsnz	atoi@s^0,f,c
  8637  00400A  2A12               	incf	(atoi@s+1)^0,f,c
  8638  00400C  EF41  F020         	goto	l8200
  8639  004010                     l8194:
  8640  004010  C011  FFF6         	movff	atoi@s,tblptrl
  8641  004014  C012  FFF7         	movff	atoi@s+1,tblptrh
  8642  004018                     	if	0	;tblptru may be non-zero
  8643  004018                     	endif
  8644  004018                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8645  004018  0E00               	movlw	low (__mediumconst shr (0+16))
  8646  00401A  6EF8               	movwf	tblptru,c
  8647  00401C                     	endif
  8648  00401C  0008               	tblrd		*
  8649  00401E  50F5               	movf	tablat,w,c
  8650  004020  6E13               	movwf	??_atoi^0,c
  8651  004022  6A14               	clrf	(??_atoi+1)^0,c
  8652                           
  8653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8654                           ; Switch size 1, requested type "simple"
  8655                           ; Number of cases is 1, Range of values is 0 to 0
  8656                           ; switch strategies available:
  8657                           ; Name         Instructions Cycles
  8658                           ; simple_byte            4     3 (average)
  8659                           ;	Chosen strategy is simple_byte
  8660  004024  5014               	movf	(??_atoi+1)^0,w,c
  8661  004026  0A00               	xorlw	0	; case 0
  8662  004028  B4D8               	btfsc	status,2,c
  8663  00402A  EF19  F020         	goto	l9290
  8664  00402E  EF41  F020         	goto	l8200
  8665  004032                     l9290:
  8666                           
  8667                           ; Switch size 1, requested type "simple"
  8668                           ; Number of cases is 2, Range of values is 43 to 45
  8669                           ; switch strategies available:
  8670                           ; Name         Instructions Cycles
  8671                           ; simple_byte            7     4 (average)
  8672                           ;	Chosen strategy is simple_byte
  8673  004032  5013               	movf	??_atoi^0,w,c
  8674  004034  0A2B               	xorlw	43	; case 43
  8675  004036  B4D8               	btfsc	status,2,c
  8676  004038  EF04  F020         	goto	l8192
  8677  00403C  0A06               	xorlw	6	; case 45
  8678  00403E  B4D8               	btfsc	status,2,c
  8679  004040  EF00  F020         	goto	l8190
  8680  004044  EF41  F020         	goto	l8200
  8681  004048                     l8196:
  8682  004048  C01E  F00A         	movff	atoi@n,___wmul@multiplier
  8683  00404C  C01F  F00B         	movff	atoi@n+1,___wmul@multiplier+1
  8684  004050  0E00               	movlw	0
  8685  004052  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  8686  004054  0E0A               	movlw	10
  8687  004056  6E0C               	movwf	___wmul@multiplicand^0,c
  8688  004058  ECA6  F030         	call	___wmul	;wreg free
  8689  00405C  C011  FFF6         	movff	atoi@s,tblptrl
  8690  004060  C012  FFF7         	movff	atoi@s+1,tblptrh
  8691  004064                     	if	0	;tblptru may be non-zero
  8692  004064                     	endif
  8693  004064                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8694  004064  0E00               	movlw	low (__mediumconst shr (0+16))
  8695  004066  6EF8               	movwf	tblptru,c
  8696  004068                     	endif
  8697  004068  0008               	tblrd		*
  8698  00406A  50F5               	movf	tablat,w,c
  8699  00406C  5E0A               	subwf	?___wmul^0,f,c
  8700  00406E  0E00               	movlw	0
  8701  004070  5A0B               	subwfb	(?___wmul+1)^0,f,c
  8702  004072  0E30               	movlw	48
  8703  004074  240A               	addwf	?___wmul^0,w,c
  8704  004076  6E1E               	movwf	atoi@n^0,c
  8705  004078  0E00               	movlw	0
  8706  00407A  200B               	addwfc	(?___wmul+1)^0,w,c
  8707  00407C  6E1F               	movwf	(atoi@n+1)^0,c
  8708  00407E  EF04  F020         	goto	l8192
  8709  004082                     l8200:
  8710  004082  0ED0               	movlw	208
  8711  004084  6E13               	movwf	??_atoi^0,c
  8712  004086  0EFF               	movlw	255
  8713  004088  6E14               	movwf	(??_atoi+1)^0,c
  8714  00408A  C011  FFF6         	movff	atoi@s,tblptrl
  8715  00408E  C012  FFF7         	movff	atoi@s+1,tblptrh
  8716  004092                     	if	0	;tblptru may be non-zero
  8717  004092                     	endif
  8718  004092                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8719  004092  0E00               	movlw	low (__mediumconst shr (0+16))
  8720  004094  6EF8               	movwf	tblptru,c
  8721  004096                     	endif
  8722  004096  0008               	tblrd		*
  8723  004098  50F5               	movf	tablat,w,c
  8724  00409A  6E15               	movwf	(??_atoi+2)^0,c
  8725  00409C  6A16               	clrf	(??_atoi+3)^0,c
  8726  00409E  5013               	movf	??_atoi^0,w,c
  8727  0040A0  2615               	addwf	(??_atoi+2)^0,f,c
  8728  0040A2  5014               	movf	(??_atoi+1)^0,w,c
  8729  0040A4  2216               	addwfc	(??_atoi+3)^0,f,c
  8730  0040A6  5016               	movf	(??_atoi+3)^0,w,c
  8731  0040A8  E10A               	bnz	u10880
  8732  0040AA  0E0A               	movlw	10
  8733  0040AC  5C15               	subwf	(??_atoi+2)^0,w,c
  8734  0040AE  A0D8               	btfss	status,0,c
  8735  0040B0  EF5C  F020         	goto	u10881
  8736  0040B4  EF5F  F020         	goto	u10880
  8737  0040B8                     u10881:
  8738  0040B8  0E01               	movlw	1
  8739  0040BA  EF60  F020         	goto	u10890
  8740  0040BE                     u10880:
  8741  0040BE  0E00               	movlw	0
  8742  0040C0                     u10890:
  8743  0040C0  6E1B               	movwf	_atoi$3208^0,c
  8744  0040C2  6A1C               	clrf	(_atoi$3208+1)^0,c
  8745  0040C4  501B               	movf	_atoi$3208^0,w,c
  8746  0040C6  101C               	iorwf	(_atoi$3208+1)^0,w,c
  8747  0040C8  A4D8               	btfss	status,2,c
  8748  0040CA  EF69  F020         	goto	u10901
  8749  0040CE  EF6B  F020         	goto	u10900
  8750  0040D2                     u10901:
  8751  0040D2  EF24  F020         	goto	l8196
  8752  0040D6                     u10900:
  8753  0040D6  5017               	movf	atoi@neg^0,w,c
  8754  0040D8  1018               	iorwf	(atoi@neg+1)^0,w,c
  8755  0040DA  A4D8               	btfss	status,2,c
  8756  0040DC  EF72  F020         	goto	u10911
  8757  0040E0  EF74  F020         	goto	u10910
  8758  0040E4                     u10911:
  8759  0040E4  EF82  F020         	goto	l1749
  8760  0040E8                     u10910:
  8761  0040E8  C01E  F013         	movff	atoi@n,??_atoi
  8762  0040EC  C01F  F014         	movff	atoi@n+1,??_atoi+1
  8763  0040F0  1E13               	comf	??_atoi^0,f,c
  8764  0040F2  1E14               	comf	(??_atoi+1)^0,f,c
  8765  0040F4  4A13               	infsnz	??_atoi^0,f,c
  8766  0040F6  2A14               	incf	(??_atoi+1)^0,f,c
  8767  0040F8  C013  F011         	movff	??_atoi,?_atoi
  8768  0040FC  C014  F012         	movff	??_atoi+1,?_atoi+1
  8769  004100  EF86  F020         	goto	l1752
  8770  004104                     l1749:
  8771  004104  C01E  F011         	movff	atoi@n,?_atoi
  8772  004108  C01F  F012         	movff	atoi@n+1,?_atoi+1
  8773  00410C                     l1752:
  8774  00410C  0012               	return		;funcret
  8775  00410E                     __end_of_atoi:
  8776                           	callstack 0
  8777                           
  8778 ;; *************** function _isspace *****************
  8779 ;; Defined at:
  8780 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;  c               2    9[COMRAM] int 
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  2    9[COMRAM] int 
  8787 ;; Registers used:
  8788 ;;		wreg, status,2, status,0
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8796 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8797 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8798 ;;Total ram usage:        7 bytes
  8799 ;; Hardware stack levels used: 1
  8800 ;; Hardware stack levels required when called: 7
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		_atoi
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           	psect	text36
  8809  005B04                     __ptext36:
  8810                           	callstack 0
  8811  005B04                     _isspace:
  8812                           	callstack 17
  8813  005B04  0E01               	movlw	1
  8814  005B06  6E10               	movwf	_isspace$3237^0,c
  8815  005B08  0E20               	movlw	32
  8816  005B0A  180A               	xorwf	isspace@c^0,w,c
  8817  005B0C  100B               	iorwf	(isspace@c+1)^0,w,c
  8818  005B0E  B4D8               	btfsc	status,2,c
  8819  005B10  EF8C  F02D         	goto	u10021
  8820  005B14  EF8E  F02D         	goto	u10020
  8821  005B18                     u10021:
  8822  005B18  EFA7  F02D         	goto	l7752
  8823  005B1C                     u10020:
  8824  005B1C  0EF7               	movlw	247
  8825  005B1E  6E0C               	movwf	??_isspace^0,c
  8826  005B20  0EFF               	movlw	255
  8827  005B22  6E0D               	movwf	(??_isspace+1)^0,c
  8828  005B24  C00A  F00E         	movff	isspace@c,??_isspace+2
  8829  005B28  C00B  F00F         	movff	isspace@c+1,??_isspace+3
  8830  005B2C  500C               	movf	??_isspace^0,w,c
  8831  005B2E  260E               	addwf	(??_isspace+2)^0,f,c
  8832  005B30  500D               	movf	(??_isspace+1)^0,w,c
  8833  005B32  220F               	addwfc	(??_isspace+3)^0,f,c
  8834  005B34  500F               	movf	(??_isspace+3)^0,w,c
  8835  005B36  E109               	bnz	u10030
  8836  005B38  0E05               	movlw	5
  8837  005B3A  5C0E               	subwf	(??_isspace+2)^0,w,c
  8838  005B3C  A0D8               	btfss	status,0,c
  8839  005B3E  EFA3  F02D         	goto	u10031
  8840  005B42  EFA5  F02D         	goto	u10030
  8841  005B46                     u10031:
  8842  005B46  EFA7  F02D         	goto	l7752
  8843  005B4A                     u10030:
  8844  005B4A  0E00               	movlw	0
  8845  005B4C  6E10               	movwf	_isspace$3237^0,c
  8846  005B4E                     l7752:
  8847  005B4E  C010  F00A         	movff	_isspace$3237,?_isspace
  8848  005B52  6A0B               	clrf	(?_isspace+1)^0,c
  8849  005B54  0012               	return		;funcret
  8850  005B56                     __end_of_isspace:
  8851                           	callstack 0
  8852                           
  8853 ;; *************** function _isdigit *****************
  8854 ;; Defined at:
  8855 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  c               2    9[COMRAM] int 
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;		None
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  2    9[COMRAM] int 
  8862 ;; Registers used:
  8863 ;;		wreg, status,2, status,0
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8871 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8872 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8873 ;;Total ram usage:        6 bytes
  8874 ;; Hardware stack levels used: 1
  8875 ;; Hardware stack levels required when called: 7
  8876 ;; This function calls:
  8877 ;;		Nothing
  8878 ;; This function is called by:
  8879 ;;		_vfpfcnvrt
  8880 ;;		_atoi
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           	psect	text37
  8885  00606A                     __ptext37:
  8886                           	callstack 0
  8887  00606A                     _isdigit:
  8888                           	callstack 18
  8889  00606A  0ED0               	movlw	208
  8890  00606C  6E0C               	movwf	??_isdigit^0,c
  8891  00606E  0EFF               	movlw	255
  8892  006070  6E0D               	movwf	(??_isdigit+1)^0,c
  8893  006072  C00A  F00E         	movff	isdigit@c,??_isdigit+2
  8894  006076  C00B  F00F         	movff	isdigit@c+1,??_isdigit+3
  8895  00607A  500C               	movf	??_isdigit^0,w,c
  8896  00607C  260E               	addwf	(??_isdigit+2)^0,f,c
  8897  00607E  500D               	movf	(??_isdigit+1)^0,w,c
  8898  006080  220F               	addwfc	(??_isdigit+3)^0,f,c
  8899  006082  500F               	movf	(??_isdigit+3)^0,w,c
  8900  006084  E10A               	bnz	u10000
  8901  006086  0E0A               	movlw	10
  8902  006088  5C0E               	subwf	(??_isdigit+2)^0,w,c
  8903  00608A  A0D8               	btfss	status,0,c
  8904  00608C  EF4A  F030         	goto	u10001
  8905  006090  EF4D  F030         	goto	u10000
  8906  006094                     u10001:
  8907  006094  0E01               	movlw	1
  8908  006096  EF4E  F030         	goto	u10010
  8909  00609A                     u10000:
  8910  00609A  0E00               	movlw	0
  8911  00609C                     u10010:
  8912  00609C  6E0A               	movwf	?_isdigit^0,c
  8913  00609E  6A0B               	clrf	(?_isdigit+1)^0,c
  8914  0060A0  0012               	return		;funcret
  8915  0060A2                     __end_of_isdigit:
  8916                           	callstack 0
  8917                           
  8918 ;; *************** function _sendStringSerial4 *****************
  8919 ;; Defined at:
  8920 ;;		line 46 in file "serial_comm.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;  string          2   10[COMRAM] PTR unsigned char 
  8923 ;;		 -> colourclick_testing@buf(100), colourcards_testingRGBC@buf(30), 
  8924 ;; Auto vars:     Size  Location     Type
  8925 ;;		None
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  1    wreg      void 
  8928 ;; Registers used:
  8929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8938 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8939 ;;Total ram usage:        2 bytes
  8940 ;; Hardware stack levels used: 1
  8941 ;; Hardware stack levels required when called: 8
  8942 ;; This function calls:
  8943 ;;		_sendCharSerial4
  8944 ;; This function is called by:
  8945 ;;		_colourclick_testing
  8946 ;;		_colourcards_testingRGBC
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           	psect	text38
  8951  0060A2                     __ptext38:
  8952                           	callstack 0
  8953  0060A2                     _sendStringSerial4:
  8954                           	callstack 20
  8955  0060A2                     
  8956                           ;serial_comm.c: 48:     while (*string != 0) {
  8957  0060A2  EF5C  F030         	goto	l8506
  8958  0060A6                     l8502:
  8959                           
  8960                           ;serial_comm.c: 49:         sendCharSerial4(*string++);
  8961  0060A6  C00B  FFD9         	movff	sendStringSerial4@string,fsr2l
  8962  0060AA  C00C  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8963  0060AE  50DF               	movf	indf2,w,c
  8964  0060B0  EC43  F031         	call	_sendCharSerial4
  8965  0060B4  4A0B               	infsnz	sendStringSerial4@string^0,f,c
  8966  0060B6  2A0C               	incf	(sendStringSerial4@string+1)^0,f,c
  8967  0060B8                     l8506:
  8968                           
  8969                           ;serial_comm.c: 48:     while (*string != 0) {
  8970  0060B8  C00B  FFD9         	movff	sendStringSerial4@string,fsr2l
  8971  0060BC  C00C  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8972  0060C0  50DF               	movf	indf2,w,c
  8973  0060C2  A4D8               	btfss	status,2,c
  8974  0060C4  EF66  F030         	goto	u11351
  8975  0060C8  EF68  F030         	goto	u11350
  8976  0060CC                     u11351:
  8977  0060CC  EF53  F030         	goto	l8502
  8978  0060D0                     u11350:
  8979  0060D0  0012               	return		;funcret
  8980  0060D2                     __end_of_sendStringSerial4:
  8981                           	callstack 0
  8982                           
  8983 ;; *************** function _sendCharSerial4 *****************
  8984 ;; Defined at:
  8985 ;;		line 37 in file "serial_comm.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;  charToSend      1    wreg     unsigned char 
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;  charToSend      1    9[COMRAM] unsigned char 
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9003 ;;Total ram usage:        1 bytes
  9004 ;; Hardware stack levels used: 1
  9005 ;; Hardware stack levels required when called: 7
  9006 ;; This function calls:
  9007 ;;		Nothing
  9008 ;; This function is called by:
  9009 ;;		_sendStringSerial4
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           	psect	text39
  9014  006286                     __ptext39:
  9015                           	callstack 0
  9016  006286                     _sendCharSerial4:
  9017                           	callstack 20
  9018                           
  9019                           ;incstack = 0
  9020                           ;sendCharSerial4@charToSend stored from wreg
  9021  006286  6E0A               	movwf	sendCharSerial4@charToSend^0,c
  9022  006288                     l542:
  9023  006288  010E               	movlb	14	; () banked
  9024  00628A  A537               	btfss	55,2,b	;volatile
  9025  00628C  EF4A  F031         	goto	u11161
  9026  006290  EF4C  F031         	goto	u11160
  9027  006294                     u11161:
  9028  006294  EF44  F031         	goto	l542
  9029  006298                     u11160:
  9030  006298                     
  9031                           ; BSR set to: 14
  9032                           ;serial_comm.c: 39:     TX4REG = charToSend;
  9033  006298  C00A  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9034  00629C                     
  9035                           ; BSR set to: 14
  9036  00629C  0012               	return		;funcret
  9037  00629E                     __end_of_sendCharSerial4:
  9038                           	callstack 0
  9039                           
  9040 ;; *************** function _colourcards_readRGBC *****************
  9041 ;; Defined at:
  9042 ;;		line 12 in file "colour_cards.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  abs             2   16[BANK0 ] PTR struct .
  9045 ;;		 -> main@current(8), 
  9046 ;;  mL              2   18[BANK0 ] PTR struct .
  9047 ;;		 -> main@motorL(9), 
  9048 ;;  mR              2   20[BANK0 ] PTR struct .
  9049 ;;		 -> main@motorR(9), 
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;  rel            12   22[BANK0 ] struct .
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  1    wreg      void 
  9054 ;; Registers used:
  9055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9061 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9064 ;;      Totals:         2      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9065 ;;Total ram usage:       20 bytes
  9066 ;; Hardware stack levels used: 1
  9067 ;; Hardware stack levels required when called: 12
  9068 ;; This function calls:
  9069 ;;		___flge
  9070 ;;		_colourcards_normaliseRGBC
  9071 ;;		_colourclick_readRGBC
  9072 ;;		_colourclick_readRGBC2
  9073 ;;		_forward
  9074 ;;		_reverse
  9075 ;;		_stop
  9076 ;;		_turnleft
  9077 ;;		_turnright
  9078 ;; This function is called by:
  9079 ;;		_main
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           	psect	text40
  9084  001B12                     __ptext40:
  9085                           	callstack 0
  9086  001B12                     _colourcards_readRGBC:
  9087                           	callstack 18
  9088  001B12                     
  9089                           ;colour_cards.c: 12: void colourcards_readRGBC(RGBC_val *abs, DC_motor *mL, DC_motor *mR
      +                          );colour_cards.c: 13: {;colour_cards.c: 15:     PIE0bits.INT1IE = 0;
  9090  001B12  010E               	movlb	14	; () banked
  9091  001B14  9329               	bcf	41,1,b	;volatile
  9092  001B16                     
  9093                           ; BSR set to: 14
  9094                           ;colour_cards.c: 18:     RGB_rel rel;;colour_cards.c: 19:     colourclick_readRGBC(abs);
  9095  001B16  C070  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  9096  001B1A  C071  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  9097  001B1E  ECFF  F02C         	call	_colourclick_readRGBC	;wreg free
  9098                           
  9099                           ;colour_cards.c: 20:     colourcards_normaliseRGBC(abs, &rel);
  9100  001B22  C070  F031         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9101  001B26  C071  F032         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9102  001B2A  0E76               	movlw	low colourcards_readRGBC@rel
  9103  001B2C  6E33               	movwf	colourcards_normaliseRGBC@rel^0,c
  9104  001B2E  0E00               	movlw	high colourcards_readRGBC@rel
  9105  001B30  6E34               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9106  001B32  ECDB  F022         	call	_colourcards_normaliseRGBC	;wreg free
  9107  001B36                     
  9108                           ;colour_cards.c: 24:     if ((rel.R>0.54) && (rel.G<0.245) && (rel.B<0.18)) {
  9109  001B36  0E71               	movlw	113
  9110  001B38  6E31               	movwf	___flge@ff1^0,c
  9111  001B3A  0E3D               	movlw	61
  9112  001B3C  6E32               	movwf	(___flge@ff1+1)^0,c
  9113  001B3E  0E0A               	movlw	10
  9114  001B40  6E33               	movwf	(___flge@ff1+2)^0,c
  9115  001B42  0E3F               	movlw	63
  9116  001B44  6E34               	movwf	(___flge@ff1+3)^0,c
  9117  001B46  C076  F035         	movff	colourcards_readRGBC@rel,___flge@ff2
  9118  001B4A  C077  F036         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9119  001B4E  C078  F037         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9120  001B52  C079  F038         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9121  001B56  ECE5  F027         	call	___flge	;wreg free
  9122  001B5A  B0D8               	btfsc	status,0,c
  9123  001B5C  EFB2  F00D         	goto	u11811
  9124  001B60  EFB4  F00D         	goto	u11810
  9125  001B64                     u11811:
  9126  001B64  EF4A  F00E         	goto	l8988
  9127  001B68                     u11810:
  9128  001B68  C07A  F031         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  9129  001B6C  C07B  F032         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  9130  001B70  C07C  F033         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  9131  001B74  C07D  F034         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  9132  001B78  0E48               	movlw	72
  9133  001B7A  6E35               	movwf	___flge@ff2^0,c
  9134  001B7C  0EE1               	movlw	225
  9135  001B7E  6E36               	movwf	(___flge@ff2+1)^0,c
  9136  001B80  0E7A               	movlw	122
  9137  001B82  6E37               	movwf	(___flge@ff2+2)^0,c
  9138  001B84  0E3E               	movlw	62
  9139  001B86  6E38               	movwf	(___flge@ff2+3)^0,c
  9140  001B88  ECE5  F027         	call	___flge	;wreg free
  9141  001B8C  B0D8               	btfsc	status,0,c
  9142  001B8E  EFCB  F00D         	goto	u11821
  9143  001B92  EFCD  F00D         	goto	u11820
  9144  001B96                     u11821:
  9145  001B96  EF4A  F00E         	goto	l8988
  9146  001B9A                     u11820:
  9147  001B9A  C07E  F031         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  9148  001B9E  C07F  F032         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  9149  001BA2  C080  F033         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  9150  001BA6  C081  F034         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  9151  001BAA  0EEC               	movlw	236
  9152  001BAC  6E35               	movwf	___flge@ff2^0,c
  9153  001BAE  0E51               	movlw	81
  9154  001BB0  6E36               	movwf	(___flge@ff2+1)^0,c
  9155  001BB2  0E38               	movlw	56
  9156  001BB4  6E37               	movwf	(___flge@ff2+2)^0,c
  9157  001BB6  0E3E               	movlw	62
  9158  001BB8  6E38               	movwf	(___flge@ff2+3)^0,c
  9159  001BBA  ECE5  F027         	call	___flge	;wreg free
  9160  001BBE  B0D8               	btfsc	status,0,c
  9161  001BC0  EFE4  F00D         	goto	u11831
  9162  001BC4  EFE6  F00D         	goto	u11830
  9163  001BC8                     u11831:
  9164  001BC8  EF4A  F00E         	goto	l8988
  9165  001BCC                     u11830:
  9166  001BCC                     
  9167                           ;colour_cards.c: 25:         colourclick_readRGBC2(abs, 3);
  9168  001BCC  C070  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  9169  001BD0  C071  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  9170  001BD4  0E03               	movlw	3
  9171  001BD6  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  9172  001BD8  EC48  F024         	call	_colourclick_readRGBC2	;wreg free
  9173                           
  9174                           ;colour_cards.c: 26:         colourcards_normaliseRGBC(abs, &rel);
  9175  001BDC  C070  F031         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9176  001BE0  C071  F032         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9177  001BE4  0E76               	movlw	low colourcards_readRGBC@rel
  9178  001BE6  6E33               	movwf	colourcards_normaliseRGBC@rel^0,c
  9179  001BE8  0E00               	movlw	high colourcards_readRGBC@rel
  9180  001BEA  6E34               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9181  001BEC  ECDB  F022         	call	_colourcards_normaliseRGBC	;wreg free
  9182  001BF0                     
  9183                           ;colour_cards.c: 27:         if (rel.B<0.56) {
  9184  001BF0  C07E  F031         	movff	colourcards_readRGBC@rel+8,___flge@ff1
  9185  001BF4  C07F  F032         	movff	colourcards_readRGBC@rel+9,___flge@ff1+1
  9186  001BF8  C080  F033         	movff	colourcards_readRGBC@rel+10,___flge@ff1+2
  9187  001BFC  C081  F034         	movff	colourcards_readRGBC@rel+11,___flge@ff1+3
  9188  001C00  0E29               	movlw	41
  9189  001C02  6E35               	movwf	___flge@ff2^0,c
  9190  001C04  0E5C               	movlw	92
  9191  001C06  6E36               	movwf	(___flge@ff2+1)^0,c
  9192  001C08  0E0F               	movlw	15
  9193  001C0A  6E37               	movwf	(___flge@ff2+2)^0,c
  9194  001C0C  0E3F               	movlw	63
  9195  001C0E  6E38               	movwf	(___flge@ff2+3)^0,c
  9196  001C10  ECE5  F027         	call	___flge	;wreg free
  9197  001C14  B0D8               	btfsc	status,0,c
  9198  001C16  EF0F  F00E         	goto	u11841
  9199  001C1A  EF11  F00E         	goto	u11840
  9200  001C1E                     u11841:
  9201  001C1E  EF2F  F00E         	goto	l8984
  9202  001C22                     u11840:
  9203  001C22                     
  9204                           ;colour_cards.c: 29:             turnright(mL, mR, 135);
  9205  001C22  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9206  001C26  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9207  001C2A  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9208  001C2E  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9209  001C32  0E00               	movlw	0
  9210  001C34  0100               	movlb	0	; () banked
  9211  001C36  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9212  001C38  0E87               	movlw	135
  9213  001C3A  6F6E               	movwf	turnright@deg& (0+255),b
  9214  001C3C  EC9B  F02E         	call	_turnright	;wreg free
  9215                           
  9216                           ;colour_cards.c: 30:             stop(mL, mR);
  9217  001C40  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9218  001C44  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9219  001C48  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9220  001C4C  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9221  001C50  EC24  F02C         	call	_stop	;wreg free
  9222  001C54                     l8982:
  9223                           
  9224                           ;colour_cards.c: 31:             unknowncard_flag = 0;
  9225  001C54  0E00               	movlw	0
  9226  001C56  0101               	movlb	1	; () banked
  9227  001C58  6FE3               	movwf	_unknowncard_flag& (0+255),b	;volatile
  9228                           
  9229                           ;colour_cards.c: 32:         } else {
  9230  001C5A  EF51  F011         	goto	l9086
  9231  001C5E                     l8984:
  9232                           
  9233                           ;colour_cards.c: 34:             turnright(mL, mR, 90);
  9234  001C5E  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9235  001C62  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9236  001C66  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9237  001C6A  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9238  001C6E  0E00               	movlw	0
  9239  001C70  0100               	movlb	0	; () banked
  9240  001C72  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9241  001C74  0E5A               	movlw	90
  9242  001C76  6F6E               	movwf	turnright@deg& (0+255),b
  9243  001C78  EC9B  F02E         	call	_turnright	;wreg free
  9244                           
  9245                           ;colour_cards.c: 35:             stop(mL, mR);
  9246  001C7C  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9247  001C80  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9248  001C84  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9249  001C88  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9250  001C8C  EC24  F02C         	call	_stop	;wreg free
  9251  001C90  EF2A  F00E         	goto	l8982
  9252  001C94                     l8988:
  9253  001C94  C076  F031         	movff	colourcards_readRGBC@rel,___flge@ff1
  9254  001C98  C077  F032         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9255  001C9C  C078  F033         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9256  001CA0  C079  F034         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9257  001CA4  0EAE               	movlw	174
  9258  001CA6  6E35               	movwf	___flge@ff2^0,c
  9259  001CA8  0E47               	movlw	71
  9260  001CAA  6E36               	movwf	(___flge@ff2+1)^0,c
  9261  001CAC  0EE1               	movlw	225
  9262  001CAE  6E37               	movwf	(___flge@ff2+2)^0,c
  9263  001CB0  0E3E               	movlw	62
  9264  001CB2  6E38               	movwf	(___flge@ff2+3)^0,c
  9265  001CB4  ECE5  F027         	call	___flge	;wreg free
  9266  001CB8  B0D8               	btfsc	status,0,c
  9267  001CBA  EF61  F00E         	goto	u11851
  9268  001CBE  EF63  F00E         	goto	u11850
  9269  001CC2                     u11851:
  9270  001CC2  EF5C  F00F         	goto	l9016
  9271  001CC6                     u11850:
  9272  001CC6  0E9A               	movlw	154
  9273  001CC8  6E31               	movwf	___flge@ff1^0,c
  9274  001CCA  0E99               	movlw	153
  9275  001CCC  6E32               	movwf	(___flge@ff1+1)^0,c
  9276  001CCE  0E99               	movlw	153
  9277  001CD0  6E33               	movwf	(___flge@ff1+2)^0,c
  9278  001CD2  0E3E               	movlw	62
  9279  001CD4  6E34               	movwf	(___flge@ff1+3)^0,c
  9280  001CD6  C07A  F035         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9281  001CDA  C07B  F036         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9282  001CDE  C07C  F037         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9283  001CE2  C07D  F038         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9284  001CE6  ECE5  F027         	call	___flge	;wreg free
  9285  001CEA  B0D8               	btfsc	status,0,c
  9286  001CEC  EF7A  F00E         	goto	u11861
  9287  001CF0  EF7C  F00E         	goto	u11860
  9288  001CF4                     u11861:
  9289  001CF4  EF5C  F00F         	goto	l9016
  9290  001CF8                     u11860:
  9291  001CF8  0E14               	movlw	20
  9292  001CFA  6E31               	movwf	___flge@ff1^0,c
  9293  001CFC  0EAE               	movlw	174
  9294  001CFE  6E32               	movwf	(___flge@ff1+1)^0,c
  9295  001D00  0E47               	movlw	71
  9296  001D02  6E33               	movwf	(___flge@ff1+2)^0,c
  9297  001D04  0E3E               	movlw	62
  9298  001D06  6E34               	movwf	(___flge@ff1+3)^0,c
  9299  001D08  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9300  001D0C  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9301  001D10  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9302  001D14  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9303  001D18  ECE5  F027         	call	___flge	;wreg free
  9304  001D1C  B0D8               	btfsc	status,0,c
  9305  001D1E  EF93  F00E         	goto	u11871
  9306  001D22  EF95  F00E         	goto	u11870
  9307  001D26                     u11871:
  9308  001D26  EF5C  F00F         	goto	l9016
  9309  001D2A                     u11870:
  9310  001D2A                     
  9311                           ;colour_cards.c: 41:         colourclick_readRGBC2(abs, 3);
  9312  001D2A  C070  F017         	movff	colourcards_readRGBC@abs,colourclick_readRGBC2@tmpval
  9313  001D2E  C071  F018         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC2@tmpval+1
  9314  001D32  0E03               	movlw	3
  9315  001D34  6E19               	movwf	colourclick_readRGBC2@mode^0,c
  9316  001D36  EC48  F024         	call	_colourclick_readRGBC2	;wreg free
  9317                           
  9318                           ;colour_cards.c: 42:         colourcards_normaliseRGBC(abs, &rel);
  9319  001D3A  C070  F031         	movff	colourcards_readRGBC@abs,colourcards_normaliseRGBC@abs
  9320  001D3E  C071  F032         	movff	colourcards_readRGBC@abs+1,colourcards_normaliseRGBC@abs+1
  9321  001D42  0E76               	movlw	low colourcards_readRGBC@rel
  9322  001D44  6E33               	movwf	colourcards_normaliseRGBC@rel^0,c
  9323  001D46  0E00               	movlw	high colourcards_readRGBC@rel
  9324  001D48  6E34               	movwf	(colourcards_normaliseRGBC@rel+1)^0,c
  9325  001D4A  ECDB  F022         	call	_colourcards_normaliseRGBC	;wreg free
  9326  001D4E                     
  9327                           ;colour_cards.c: 43:         if ((rel.R<0.65) && (rel.B>0.67)) {
  9328  001D4E  C076  F031         	movff	colourcards_readRGBC@rel,___flge@ff1
  9329  001D52  C077  F032         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9330  001D56  C078  F033         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9331  001D5A  C079  F034         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9332  001D5E  0E66               	movlw	102
  9333  001D60  6E35               	movwf	___flge@ff2^0,c
  9334  001D62  0E66               	movlw	102
  9335  001D64  6E36               	movwf	(___flge@ff2+1)^0,c
  9336  001D66  0E26               	movlw	38
  9337  001D68  6E37               	movwf	(___flge@ff2+2)^0,c
  9338  001D6A  0E3F               	movlw	63
  9339  001D6C  6E38               	movwf	(___flge@ff2+3)^0,c
  9340  001D6E  ECE5  F027         	call	___flge	;wreg free
  9341  001D72  B0D8               	btfsc	status,0,c
  9342  001D74  EFBE  F00E         	goto	u11881
  9343  001D78  EFC0  F00E         	goto	u11880
  9344  001D7C                     u11881:
  9345  001D7C  EFF4  F00E         	goto	l9004
  9346  001D80                     u11880:
  9347  001D80  0E1F               	movlw	31
  9348  001D82  6E31               	movwf	___flge@ff1^0,c
  9349  001D84  0E85               	movlw	133
  9350  001D86  6E32               	movwf	(___flge@ff1+1)^0,c
  9351  001D88  0E2B               	movlw	43
  9352  001D8A  6E33               	movwf	(___flge@ff1+2)^0,c
  9353  001D8C  0E3F               	movlw	63
  9354  001D8E  6E34               	movwf	(___flge@ff1+3)^0,c
  9355  001D90  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9356  001D94  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9357  001D98  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9358  001D9C  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9359  001DA0  ECE5  F027         	call	___flge	;wreg free
  9360  001DA4  B0D8               	btfsc	status,0,c
  9361  001DA6  EFD7  F00E         	goto	u11891
  9362  001DAA  EFD9  F00E         	goto	u11890
  9363  001DAE                     u11891:
  9364  001DAE  EFF4  F00E         	goto	l9004
  9365  001DB2                     u11890:
  9366  001DB2                     
  9367                           ;colour_cards.c: 45:             turnright(mL, mR, 180);
  9368  001DB2  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9369  001DB6  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9370  001DBA  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9371  001DBE  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9372  001DC2  0E00               	movlw	0
  9373  001DC4  0100               	movlb	0	; () banked
  9374  001DC6  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9375  001DC8  0EB4               	movlw	180
  9376  001DCA  6F6E               	movwf	turnright@deg& (0+255),b
  9377  001DCC  EC9B  F02E         	call	_turnright	;wreg free
  9378                           
  9379                           ;colour_cards.c: 46:             stop(mL, mR);
  9380  001DD0  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9381  001DD4  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9382  001DD8  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9383  001DDC  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9384  001DE0  EC24  F02C         	call	_stop	;wreg free
  9385  001DE4  EF2A  F00E         	goto	l8982
  9386  001DE8                     l9004:
  9387  001DE8  C076  F031         	movff	colourcards_readRGBC@rel,___flge@ff1
  9388  001DEC  C077  F032         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9389  001DF0  C078  F033         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9390  001DF4  C079  F034         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9391  001DF8  0EEC               	movlw	236
  9392  001DFA  6E35               	movwf	___flge@ff2^0,c
  9393  001DFC  0E51               	movlw	81
  9394  001DFE  6E36               	movwf	(___flge@ff2+1)^0,c
  9395  001E00  0EB8               	movlw	184
  9396  001E02  6E37               	movwf	(___flge@ff2+2)^0,c
  9397  001E04  0E3D               	movlw	61
  9398  001E06  6E38               	movwf	(___flge@ff2+3)^0,c
  9399  001E08  ECE5  F027         	call	___flge	;wreg free
  9400  001E0C  B0D8               	btfsc	status,0,c
  9401  001E0E  EF0B  F00F         	goto	u11901
  9402  001E12  EF0D  F00F         	goto	u11900
  9403  001E16                     u11901:
  9404  001E16  EF41  F00F         	goto	l9012
  9405  001E1A                     u11900:
  9406  001E1A  0E52               	movlw	82
  9407  001E1C  6E31               	movwf	___flge@ff1^0,c
  9408  001E1E  0EB8               	movlw	184
  9409  001E20  6E32               	movwf	(___flge@ff1+1)^0,c
  9410  001E22  0E1E               	movlw	30
  9411  001E24  6E33               	movwf	(___flge@ff1+2)^0,c
  9412  001E26  0E3F               	movlw	63
  9413  001E28  6E34               	movwf	(___flge@ff1+3)^0,c
  9414  001E2A  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9415  001E2E  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9416  001E32  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9417  001E36  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9418  001E3A  ECE5  F027         	call	___flge	;wreg free
  9419  001E3E  B0D8               	btfsc	status,0,c
  9420  001E40  EF24  F00F         	goto	u11911
  9421  001E44  EF26  F00F         	goto	u11910
  9422  001E48                     u11911:
  9423  001E48  EF41  F00F         	goto	l9012
  9424  001E4C                     u11910:
  9425  001E4C                     
  9426                           ;colour_cards.c: 50:             turnleft(mL, mR, 90);
  9427  001E4C  C072  F06A         	movff	colourcards_readRGBC@mL,turnleft@mL
  9428  001E50  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9429  001E54  C074  F06C         	movff	colourcards_readRGBC@mR,turnleft@mR
  9430  001E58  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9431  001E5C  0E00               	movlw	0
  9432  001E5E  0100               	movlb	0	; () banked
  9433  001E60  6F6F               	movwf	(turnleft@deg+1)& (0+255),b
  9434  001E62  0E5A               	movlw	90
  9435  001E64  6F6E               	movwf	turnleft@deg& (0+255),b
  9436  001E66  ECC3  F02E         	call	_turnleft	;wreg free
  9437                           
  9438                           ;colour_cards.c: 51:             stop(mL, mR);
  9439  001E6A  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9440  001E6E  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9441  001E72  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9442  001E76  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9443  001E7A  EC24  F02C         	call	_stop	;wreg free
  9444  001E7E  EF2A  F00E         	goto	l8982
  9445  001E82                     l9012:
  9446                           
  9447                           ;colour_cards.c: 55:             turnleft(mL, mR, 135);
  9448  001E82  C072  F06A         	movff	colourcards_readRGBC@mL,turnleft@mL
  9449  001E86  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9450  001E8A  C074  F06C         	movff	colourcards_readRGBC@mR,turnleft@mR
  9451  001E8E  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9452  001E92  0E00               	movlw	0
  9453  001E94  0100               	movlb	0	; () banked
  9454  001E96  6F6F               	movwf	(turnleft@deg+1)& (0+255),b
  9455  001E98  0E87               	movlw	135
  9456  001E9A  6F6E               	movwf	turnleft@deg& (0+255),b
  9457  001E9C  ECC3  F02E         	call	_turnleft	;wreg free
  9458                           
  9459                           ;colour_cards.c: 56:             stop(mL, mR);
  9460  001EA0  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9461  001EA4  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9462  001EA8  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9463  001EAC  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9464  001EB0  EC24  F02C         	call	_stop	;wreg free
  9465  001EB4  EF2A  F00E         	goto	l8982
  9466  001EB8                     l9016:
  9467  001EB8  0E48               	movlw	72
  9468  001EBA  6E31               	movwf	___flge@ff1^0,c
  9469  001EBC  0EE1               	movlw	225
  9470  001EBE  6E32               	movwf	(___flge@ff1+1)^0,c
  9471  001EC0  0EFA               	movlw	250
  9472  001EC2  6E33               	movwf	(___flge@ff1+2)^0,c
  9473  001EC4  0E3E               	movlw	62
  9474  001EC6  6E34               	movwf	(___flge@ff1+3)^0,c
  9475  001EC8  C076  F035         	movff	colourcards_readRGBC@rel,___flge@ff2
  9476  001ECC  C077  F036         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9477  001ED0  C078  F037         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9478  001ED4  C079  F038         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9479  001ED8  ECE5  F027         	call	___flge	;wreg free
  9480  001EDC  B0D8               	btfsc	status,0,c
  9481  001EDE  EF73  F00F         	goto	u11921
  9482  001EE2  EF75  F00F         	goto	u11920
  9483  001EE6                     u11921:
  9484  001EE6  EFE2  F00F         	goto	l9032
  9485  001EEA                     u11920:
  9486  001EEA  0E85               	movlw	133
  9487  001EEC  6E31               	movwf	___flge@ff1^0,c
  9488  001EEE  0EEB               	movlw	235
  9489  001EF0  6E32               	movwf	(___flge@ff1+1)^0,c
  9490  001EF2  0E91               	movlw	145
  9491  001EF4  6E33               	movwf	(___flge@ff1+2)^0,c
  9492  001EF6  0E3E               	movlw	62
  9493  001EF8  6E34               	movwf	(___flge@ff1+3)^0,c
  9494  001EFA  C07A  F035         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9495  001EFE  C07B  F036         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9496  001F02  C07C  F037         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9497  001F06  C07D  F038         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9498  001F0A  ECE5  F027         	call	___flge	;wreg free
  9499  001F0E  B0D8               	btfsc	status,0,c
  9500  001F10  EF8C  F00F         	goto	u11931
  9501  001F14  EF8E  F00F         	goto	u11930
  9502  001F18                     u11931:
  9503  001F18  EFE2  F00F         	goto	l9032
  9504  001F1C                     u11930:
  9505  001F1C  0EEC               	movlw	236
  9506  001F1E  6E31               	movwf	___flge@ff1^0,c
  9507  001F20  0E51               	movlw	81
  9508  001F22  6E32               	movwf	(___flge@ff1+1)^0,c
  9509  001F24  0E38               	movlw	56
  9510  001F26  6E33               	movwf	(___flge@ff1+2)^0,c
  9511  001F28  0E3E               	movlw	62
  9512  001F2A  6E34               	movwf	(___flge@ff1+3)^0,c
  9513  001F2C  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9514  001F30  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9515  001F34  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9516  001F38  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9517  001F3C  ECE5  F027         	call	___flge	;wreg free
  9518  001F40  B0D8               	btfsc	status,0,c
  9519  001F42  EFA5  F00F         	goto	u11941
  9520  001F46  EFA7  F00F         	goto	u11940
  9521  001F4A                     u11941:
  9522  001F4A  EFE2  F00F         	goto	l9032
  9523  001F4E                     u11940:
  9524  001F4E                     
  9525                           ;colour_cards.c: 63:         reverse(mL, mR);
  9526  001F4E  C072  F023         	movff	colourcards_readRGBC@mL,reverse@mL
  9527  001F52  C073  F024         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  9528  001F56  C074  F025         	movff	colourcards_readRGBC@mR,reverse@mR
  9529  001F5A  C075  F026         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  9530  001F5E  EC96  F02B         	call	_reverse	;wreg free
  9531                           
  9532                           ;colour_cards.c: 64:         stop(mL, mR);
  9533  001F62  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9534  001F66  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9535  001F6A  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9536  001F6E  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9537  001F72  EC24  F02C         	call	_stop	;wreg free
  9538  001F76                     
  9539                           ;colour_cards.c: 65:         _delay((unsigned long)((100)*(64000000/4000.0)));
  9540  001F76  0E09               	movlw	9
  9541  001F78  6E49               	movwf	(??_colourcards_readRGBC+1)^0,c
  9542  001F7A  0E1E               	movlw	30
  9543  001F7C  6E48               	movwf	??_colourcards_readRGBC^0,c
  9544  001F7E  0EE4               	movlw	228
  9545  001F80                     u12587:
  9546  001F80  2EE8               	decfsz	wreg,f,c
  9547  001F82  D7FE               	bra	u12587
  9548  001F84  2E48               	decfsz	??_colourcards_readRGBC^0,f,c
  9549  001F86  D7FC               	bra	u12587
  9550  001F88  2E49               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9551  001F8A  D7FA               	bra	u12587
  9552  001F8C  D000               	nop2	
  9553  001F8E                     
  9554                           ;colour_cards.c: 66:         turnright(mL, mR, 90);
  9555  001F8E  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9556  001F92  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9557  001F96  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9558  001F9A  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9559  001F9E  0E00               	movlw	0
  9560  001FA0  0100               	movlb	0	; () banked
  9561  001FA2  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9562  001FA4  0E5A               	movlw	90
  9563  001FA6  6F6E               	movwf	turnright@deg& (0+255),b
  9564  001FA8  EC9B  F02E         	call	_turnright	;wreg free
  9565  001FAC                     l9028:
  9566                           
  9567                           ;colour_cards.c: 67:         stop(mL, mR);
  9568  001FAC  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9569  001FB0  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9570  001FB4  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9571  001FB8  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9572  001FBC  EC24  F02C         	call	_stop	;wreg free
  9573  001FC0  EF2A  F00E         	goto	l8982
  9574  001FC4                     l9032:
  9575  001FC4  0E48               	movlw	72
  9576  001FC6  6E31               	movwf	___flge@ff1^0,c
  9577  001FC8  0EE1               	movlw	225
  9578  001FCA  6E32               	movwf	(___flge@ff1+1)^0,c
  9579  001FCC  0EFA               	movlw	250
  9580  001FCE  6E33               	movwf	(___flge@ff1+2)^0,c
  9581  001FD0  0E3E               	movlw	62
  9582  001FD2  6E34               	movwf	(___flge@ff1+3)^0,c
  9583  001FD4  C076  F035         	movff	colourcards_readRGBC@rel,___flge@ff2
  9584  001FD8  C077  F036         	movff	colourcards_readRGBC@rel+1,___flge@ff2+1
  9585  001FDC  C078  F037         	movff	colourcards_readRGBC@rel+2,___flge@ff2+2
  9586  001FE0  C079  F038         	movff	colourcards_readRGBC@rel+3,___flge@ff2+3
  9587  001FE4  ECE5  F027         	call	___flge	;wreg free
  9588  001FE8  B0D8               	btfsc	status,0,c
  9589  001FEA  EFF9  F00F         	goto	u11951
  9590  001FEE  EFFB  F00F         	goto	u11950
  9591  001FF2                     u11951:
  9592  001FF2  EF5E  F010         	goto	l9048
  9593  001FF6                     u11950:
  9594  001FF6  C07A  F031         	movff	colourcards_readRGBC@rel+4,___flge@ff1
  9595  001FFA  C07B  F032         	movff	colourcards_readRGBC@rel+5,___flge@ff1+1
  9596  001FFE  C07C  F033         	movff	colourcards_readRGBC@rel+6,___flge@ff1+2
  9597  002002  C07D  F034         	movff	colourcards_readRGBC@rel+7,___flge@ff1+3
  9598  002006  0ECD               	movlw	205
  9599  002008  6E35               	movwf	___flge@ff2^0,c
  9600  00200A  0ECC               	movlw	204
  9601  00200C  6E36               	movwf	(___flge@ff2+1)^0,c
  9602  00200E  0E8C               	movlw	140
  9603  002010  6E37               	movwf	(___flge@ff2+2)^0,c
  9604  002012  0E3E               	movlw	62
  9605  002014  6E38               	movwf	(___flge@ff2+3)^0,c
  9606  002016  ECE5  F027         	call	___flge	;wreg free
  9607  00201A  B0D8               	btfsc	status,0,c
  9608  00201C  EF12  F010         	goto	u11961
  9609  002020  EF14  F010         	goto	u11960
  9610  002024                     u11961:
  9611  002024  EF5E  F010         	goto	l9048
  9612  002028                     u11960:
  9613  002028  0E14               	movlw	20
  9614  00202A  6E31               	movwf	___flge@ff1^0,c
  9615  00202C  0EAE               	movlw	174
  9616  00202E  6E32               	movwf	(___flge@ff1+1)^0,c
  9617  002030  0E47               	movlw	71
  9618  002032  6E33               	movwf	(___flge@ff1+2)^0,c
  9619  002034  0E3E               	movlw	62
  9620  002036  6E34               	movwf	(___flge@ff1+3)^0,c
  9621  002038  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9622  00203C  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9623  002040  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9624  002044  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9625  002048  ECE5  F027         	call	___flge	;wreg free
  9626  00204C  B0D8               	btfsc	status,0,c
  9627  00204E  EF2B  F010         	goto	u11971
  9628  002052  EF2D  F010         	goto	u11970
  9629  002056                     u11971:
  9630  002056  EF5E  F010         	goto	l9048
  9631  00205A                     u11970:
  9632  00205A                     
  9633                           ;colour_cards.c: 72:         reverse(mL, mR);
  9634  00205A  C072  F023         	movff	colourcards_readRGBC@mL,reverse@mL
  9635  00205E  C073  F024         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  9636  002062  C074  F025         	movff	colourcards_readRGBC@mR,reverse@mR
  9637  002066  C075  F026         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  9638  00206A  EC96  F02B         	call	_reverse	;wreg free
  9639                           
  9640                           ;colour_cards.c: 73:         stop(mL, mR);
  9641  00206E  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9642  002072  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9643  002076  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9644  00207A  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9645  00207E  EC24  F02C         	call	_stop	;wreg free
  9646  002082                     
  9647                           ;colour_cards.c: 74:         _delay((unsigned long)((100)*(64000000/4000.0)));
  9648  002082  0E09               	movlw	9
  9649  002084  6E49               	movwf	(??_colourcards_readRGBC+1)^0,c
  9650  002086  0E1E               	movlw	30
  9651  002088  6E48               	movwf	??_colourcards_readRGBC^0,c
  9652  00208A  0EE4               	movlw	228
  9653  00208C                     u12597:
  9654  00208C  2EE8               	decfsz	wreg,f,c
  9655  00208E  D7FE               	bra	u12597
  9656  002090  2E48               	decfsz	??_colourcards_readRGBC^0,f,c
  9657  002092  D7FC               	bra	u12597
  9658  002094  2E49               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9659  002096  D7FA               	bra	u12597
  9660  002098  D000               	nop2	
  9661  00209A                     
  9662                           ;colour_cards.c: 75:         turnleft(mL, mR, 90);
  9663  00209A  C072  F06A         	movff	colourcards_readRGBC@mL,turnleft@mL
  9664  00209E  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9665  0020A2  C074  F06C         	movff	colourcards_readRGBC@mR,turnleft@mR
  9666  0020A6  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9667  0020AA  0E00               	movlw	0
  9668  0020AC  0100               	movlb	0	; () banked
  9669  0020AE  6F6F               	movwf	(turnleft@deg+1)& (0+255),b
  9670  0020B0  0E5A               	movlw	90
  9671  0020B2  6F6E               	movwf	turnleft@deg& (0+255),b
  9672  0020B4  ECC3  F02E         	call	_turnleft	;wreg free
  9673  0020B8  EFD6  F00F         	goto	l9028
  9674  0020BC                     l9048:
  9675  0020BC  C076  F031         	movff	colourcards_readRGBC@rel,___flge@ff1
  9676  0020C0  C077  F032         	movff	colourcards_readRGBC@rel+1,___flge@ff1+1
  9677  0020C4  C078  F033         	movff	colourcards_readRGBC@rel+2,___flge@ff1+2
  9678  0020C8  C079  F034         	movff	colourcards_readRGBC@rel+3,___flge@ff1+3
  9679  0020CC  0E1F               	movlw	31
  9680  0020CE  6E35               	movwf	___flge@ff2^0,c
  9681  0020D0  0E85               	movlw	133
  9682  0020D2  6E36               	movwf	(___flge@ff2+1)^0,c
  9683  0020D4  0EEB               	movlw	235
  9684  0020D6  6E37               	movwf	(___flge@ff2+2)^0,c
  9685  0020D8  0E3E               	movlw	62
  9686  0020DA  6E38               	movwf	(___flge@ff2+3)^0,c
  9687  0020DC  ECE5  F027         	call	___flge	;wreg free
  9688  0020E0  B0D8               	btfsc	status,0,c
  9689  0020E2  EF75  F010         	goto	u11981
  9690  0020E6  EF77  F010         	goto	u11980
  9691  0020EA                     u11981:
  9692  0020EA  EFCA  F010         	goto	l9060
  9693  0020EE                     u11980:
  9694  0020EE  0E3D               	movlw	61
  9695  0020F0  6E31               	movwf	___flge@ff1^0,c
  9696  0020F2  0E0A               	movlw	10
  9697  0020F4  6E32               	movwf	(___flge@ff1+1)^0,c
  9698  0020F6  0E97               	movlw	151
  9699  0020F8  6E33               	movwf	(___flge@ff1+2)^0,c
  9700  0020FA  0E3E               	movlw	62
  9701  0020FC  6E34               	movwf	(___flge@ff1+3)^0,c
  9702  0020FE  C07A  F035         	movff	colourcards_readRGBC@rel+4,___flge@ff2
  9703  002102  C07B  F036         	movff	colourcards_readRGBC@rel+5,___flge@ff2+1
  9704  002106  C07C  F037         	movff	colourcards_readRGBC@rel+6,___flge@ff2+2
  9705  00210A  C07D  F038         	movff	colourcards_readRGBC@rel+7,___flge@ff2+3
  9706  00210E  ECE5  F027         	call	___flge	;wreg free
  9707  002112  B0D8               	btfsc	status,0,c
  9708  002114  EF8E  F010         	goto	u11991
  9709  002118  EF90  F010         	goto	u11990
  9710  00211C                     u11991:
  9711  00211C  EFCA  F010         	goto	l9060
  9712  002120                     u11990:
  9713  002120  0E3D               	movlw	61
  9714  002122  6E31               	movwf	___flge@ff1^0,c
  9715  002124  0E0A               	movlw	10
  9716  002126  6E32               	movwf	(___flge@ff1+1)^0,c
  9717  002128  0E57               	movlw	87
  9718  00212A  6E33               	movwf	(___flge@ff1+2)^0,c
  9719  00212C  0E3E               	movlw	62
  9720  00212E  6E34               	movwf	(___flge@ff1+3)^0,c
  9721  002130  C07E  F035         	movff	colourcards_readRGBC@rel+8,___flge@ff2
  9722  002134  C07F  F036         	movff	colourcards_readRGBC@rel+9,___flge@ff2+1
  9723  002138  C080  F037         	movff	colourcards_readRGBC@rel+10,___flge@ff2+2
  9724  00213C  C081  F038         	movff	colourcards_readRGBC@rel+11,___flge@ff2+3
  9725  002140  ECE5  F027         	call	___flge	;wreg free
  9726  002144  B0D8               	btfsc	status,0,c
  9727  002146  EFA7  F010         	goto	u12001
  9728  00214A  EFA9  F010         	goto	u12000
  9729  00214E                     u12001:
  9730  00214E  EFCA  F010         	goto	l9060
  9731  002152                     u12000:
  9732  002152                     
  9733                           ;colour_cards.c: 81:         turnright(mL, mR, 180);
  9734  002152  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9735  002156  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9736  00215A  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9737  00215E  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9738  002162  0E00               	movlw	0
  9739  002164  0100               	movlb	0	; () banked
  9740  002166  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9741  002168  0EB4               	movlw	180
  9742  00216A  6F6E               	movwf	turnright@deg& (0+255),b
  9743  00216C  EC9B  F02E         	call	_turnright	;wreg free
  9744                           
  9745                           ;colour_cards.c: 82:         stop(mL, mR);
  9746  002170  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9747  002174  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9748  002178  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9749  00217C  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9750  002180  EC24  F02C         	call	_stop	;wreg free
  9751  002184                     
  9752                           ;colour_cards.c: 83:         unknowncard_flag = 0;
  9753  002184  0E00               	movlw	0
  9754  002186  0101               	movlb	1	; () banked
  9755  002188  6FE3               	movwf	_unknowncard_flag& (0+255),b	;volatile
  9756  00218A                     
  9757                           ; BSR set to: 1
  9758                           ;colour_cards.c: 84:         returnhome_flag = 1;
  9759  00218A  0E01               	movlw	1
  9760  00218C  0100               	movlb	0	; () banked
  9761  00218E  6FF4               	movwf	_returnhome_flag& (0+255),b	;volatile
  9762                           
  9763                           ;colour_cards.c: 86:     } else {
  9764  002190  EF51  F011         	goto	l9086
  9765  002194                     l9060:
  9766                           
  9767                           ;colour_cards.c: 88:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  9768  002194  0E52               	movlw	82
  9769  002196  6E49               	movwf	(??_colourcards_readRGBC+1)^0,c
  9770  002198  0E2B               	movlw	43
  9771  00219A  6E48               	movwf	??_colourcards_readRGBC^0,c
  9772  00219C  0E00               	movlw	0
  9773  00219E                     u12607:
  9774  00219E  2EE8               	decfsz	wreg,f,c
  9775  0021A0  D7FE               	bra	u12607
  9776  0021A2  2E48               	decfsz	??_colourcards_readRGBC^0,f,c
  9777  0021A4  D7FC               	bra	u12607
  9778  0021A6  2E49               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
  9779  0021A8  D7FA               	bra	u12607
  9780  0021AA  D000               	nop2	
  9781  0021AC                     
  9782                           ;colour_cards.c: 89:         forward(mL, mR);
  9783  0021AC  C072  F023         	movff	colourcards_readRGBC@mL,forward@mL
  9784  0021B0  C073  F024         	movff	colourcards_readRGBC@mL+1,forward@mL+1
  9785  0021B4  C074  F025         	movff	colourcards_readRGBC@mR,forward@mR
  9786  0021B8  C075  F026         	movff	colourcards_readRGBC@mR+1,forward@mR+1
  9787  0021BC  ECDD  F02B         	call	_forward	;wreg free
  9788  0021C0                     
  9789                           ;colour_cards.c: 90:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9790  0021C0  0ED0               	movlw	208
  9791  0021C2  6E48               	movwf	??_colourcards_readRGBC^0,c
  9792  0021C4  0ECA               	movlw	202
  9793  0021C6                     u12617:
  9794  0021C6  2EE8               	decfsz	wreg,f,c
  9795  0021C8  D7FE               	bra	u12617
  9796  0021CA  2E48               	decfsz	??_colourcards_readRGBC^0,f,c
  9797  0021CC  D7FC               	bra	u12617
  9798                           
  9799                           ;colour_cards.c: 91:         stop(mL, mR);
  9800  0021CE  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9801  0021D2  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9802  0021D6  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9803  0021DA  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9804  0021DE  EC24  F02C         	call	_stop	;wreg free
  9805  0021E2                     
  9806                           ;colour_cards.c: 92:         colourclick_readRGBC(abs);
  9807  0021E2  C070  F015         	movff	colourcards_readRGBC@abs,colourclick_readRGBC@tmpval
  9808  0021E6  C071  F016         	movff	colourcards_readRGBC@abs+1,colourclick_readRGBC@tmpval+1
  9809  0021EA  ECFF  F02C         	call	_colourclick_readRGBC	;wreg free
  9810  0021EE                     
  9811                           ;colour_cards.c: 93:         if ((abs->C < interrupts_lowerbound) || (abs->C > interrupt
      +                          s_upperbound)) {
  9812  0021EE  0100               	movlb	0	; () banked
  9813  0021F0  EE20 F006          	lfsr	2,6
  9814  0021F4  5170               	movf	colourcards_readRGBC@abs& (0+255),w,b
  9815  0021F6  26D9               	addwf	fsr2l,f,c
  9816  0021F8  5171               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  9817  0021FA  22DA               	addwfc	fsr2h,f,c
  9818  0021FC  5051               	movf	_interrupts_lowerbound^0,w,c	;volatile
  9819  0021FE  5CDE               	subwf	postinc2,w,c
  9820  002200  5052               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
  9821  002202  58DE               	subwfb	postinc2,w,c
  9822  002204  A0D8               	btfss	status,0,c
  9823  002206  EF07  F011         	goto	u12011
  9824  00220A  EF09  F011         	goto	u12010
  9825  00220E                     u12011:
  9826  00220E  EF1A  F011         	goto	l9072
  9827  002212                     u12010:
  9828  002212                     
  9829                           ; BSR set to: 0
  9830  002212  EE20 F006          	lfsr	2,6
  9831  002216  5170               	movf	colourcards_readRGBC@abs& (0+255),w,b
  9832  002218  26D9               	addwf	fsr2l,f,c
  9833  00221A  5171               	movf	(colourcards_readRGBC@abs+1)& (0+255),w,b
  9834  00221C  22DA               	addwfc	fsr2h,f,c
  9835  00221E  50DE               	movf	postinc2,w,c
  9836  002220  5C54               	subwf	_interrupts_upperbound^0,w,c	;volatile
  9837  002222  50DE               	movf	postinc2,w,c
  9838  002224  5855               	subwfb	(_interrupts_upperbound+1)^0,w,c	;volatile
  9839  002226  B0D8               	btfsc	status,0,c
  9840  002228  EF18  F011         	goto	u12021
  9841  00222C  EF1A  F011         	goto	u12020
  9842  002230                     u12021:
  9843  002230  EF2A  F00E         	goto	l8982
  9844  002234                     u12020:
  9845  002234                     l9072:
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;colour_cards.c: 94:             if (unknowncard_flag<3) {
  9849  002234  0E03               	movlw	3
  9850  002236  0101               	movlb	1	; () banked
  9851  002238  61E3               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
  9852  00223A  EF21  F011         	goto	u12031
  9853  00223E  EF23  F011         	goto	u12030
  9854  002242                     u12031:
  9855  002242  EF29  F011         	goto	l235
  9856  002246                     u12030:
  9857  002246                     
  9858                           ; BSR set to: 1
  9859                           ;colour_cards.c: 95:                 PIR0bits.INT1IF = 1;
  9860  002246  010E               	movlb	14	; () banked
  9861  002248  8333               	bsf	51,1,b	;volatile
  9862  00224A                     
  9863                           ; BSR set to: 14
  9864                           ;colour_cards.c: 96:                 unknowncard_flag++;
  9865  00224A  0101               	movlb	1	; () banked
  9866  00224C  2BE3               	incf	_unknowncard_flag& (0+255),f,b	;volatile
  9867                           
  9868                           ;colour_cards.c: 97:             } else {
  9869  00224E  EF51  F011         	goto	l9086
  9870  002252                     l235:
  9871                           
  9872                           ; BSR set to: 1
  9873                           ;colour_cards.c: 98:                 LATHbits.LATH3 = 1;
  9874  002252  8680               	bsf	128,3,c	;volatile
  9875  002254                     
  9876                           ; BSR set to: 1
  9877                           ;colour_cards.c: 99:                 turnright(mL, mR, 180);
  9878  002254  C072  F06A         	movff	colourcards_readRGBC@mL,turnright@mL
  9879  002258  C073  F06B         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9880  00225C  C074  F06C         	movff	colourcards_readRGBC@mR,turnright@mR
  9881  002260  C075  F06D         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9882  002264  0E00               	movlw	0
  9883  002266  0100               	movlb	0	; () banked
  9884  002268  6F6F               	movwf	(turnright@deg+1)& (0+255),b
  9885  00226A  0EB4               	movlw	180
  9886  00226C  6F6E               	movwf	turnright@deg& (0+255),b
  9887  00226E  EC9B  F02E         	call	_turnright	;wreg free
  9888                           
  9889                           ;colour_cards.c: 100:                 stop(mL, mR);
  9890  002272  C072  F023         	movff	colourcards_readRGBC@mL,stop@mL
  9891  002276  C073  F024         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9892  00227A  C074  F025         	movff	colourcards_readRGBC@mR,stop@mR
  9893  00227E  C075  F026         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9894  002282  EC24  F02C         	call	_stop	;wreg free
  9895  002286                     
  9896                           ;colour_cards.c: 101:                 returnhome_flag = !returnhome_flag;
  9897  002286  0100               	movlb	0	; () banked
  9898  002288  51F4               	movf	_returnhome_flag& (0+255),w,b	;volatile
  9899  00228A  B4D8               	btfsc	status,2,c
  9900  00228C  EF4A  F011         	goto	u12041
  9901  002290  EF4D  F011         	goto	u12040
  9902  002294                     u12041:
  9903  002294  0E01               	movlw	1
  9904  002296  EF4E  F011         	goto	u12050
  9905  00229A                     u12040:
  9906  00229A  0E00               	movlw	0
  9907  00229C                     u12050:
  9908  00229C  6FF4               	movwf	_returnhome_flag& (0+255),b	;volatile
  9909  00229E  EF2A  F00E         	goto	l8982
  9910  0022A2                     l9086:
  9911                           
  9912                           ;colour_cards.c: 109:     PIE0bits.INT1IE = 1;
  9913  0022A2  010E               	movlb	14	; () banked
  9914  0022A4  8329               	bsf	41,1,b	;volatile
  9915  0022A6                     
  9916                           ; BSR set to: 14
  9917  0022A6  0012               	return		;funcret
  9918  0022A8                     __end_of_colourcards_readRGBC:
  9919                           	callstack 0
  9920                           
  9921 ;; *************** function _reverse *****************
  9922 ;; Defined at:
  9923 ;;		line 105 in file "DC_motors.c"
  9924 ;; Parameters:    Size  Location     Type
  9925 ;;  mL              2   34[COMRAM] PTR struct .
  9926 ;;		 -> main@motorL(9), 
  9927 ;;  mR              2   36[COMRAM] PTR struct .
  9928 ;;		 -> main@motorR(9), 
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;		None
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      void 
  9933 ;; Registers used:
  9934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9943 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9944 ;;Total ram usage:        5 bytes
  9945 ;; Hardware stack levels used: 1
  9946 ;; Hardware stack levels required when called: 9
  9947 ;; This function calls:
  9948 ;;		_DCmotors_setPWM
  9949 ;; This function is called by:
  9950 ;;		_colourcards_readRGBC
  9951 ;;		_DCmotors_testing
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text41
  9956  00572C                     __ptext41:
  9957                           	callstack 0
  9958  00572C                     _reverse:
  9959                           	callstack 20
  9960  00572C                     
  9961                           ;DC_motors.c: 105: void reverse(DC_motor *mL, DC_motor *mR);DC_motors.c: 106: {;DC_motor
      +                          s.c: 108:     mL->direction = 0;
  9962  00572C  EE20 F001          	lfsr	2,1
  9963  005730  5023               	movf	reverse@mL^0,w,c
  9964  005732  26D9               	addwf	fsr2l,f,c
  9965  005734  5024               	movf	(reverse@mL+1)^0,w,c
  9966  005736  22DA               	addwfc	fsr2h,f,c
  9967  005738  0E00               	movlw	0
  9968  00573A  6EDF               	movwf	indf2,c
  9969                           
  9970                           ;DC_motors.c: 109:     mR->direction = 0;
  9971  00573C  EE20 F001          	lfsr	2,1
  9972  005740  5025               	movf	reverse@mR^0,w,c
  9973  005742  26D9               	addwf	fsr2l,f,c
  9974  005744  5026               	movf	(reverse@mR+1)^0,w,c
  9975  005746  22DA               	addwfc	fsr2h,f,c
  9976  005748  0E00               	movlw	0
  9977  00574A  6EDF               	movwf	indf2,c
  9978                           
  9979                           ;DC_motors.c: 112:     while((mL->power < 40) && (mR->power < 40)){
  9980  00574C  EFC4  F02B         	goto	l8696
  9981  005750                     l8688:
  9982                           
  9983                           ;DC_motors.c: 113:         mL->power += 10;
  9984  005750  C023  FFD9         	movff	reverse@mL,fsr2l
  9985  005754  C024  FFDA         	movff	reverse@mL+1,fsr2h
  9986  005758  0E0A               	movlw	10
  9987  00575A  26DF               	addwf	indf2,f,c
  9988                           
  9989                           ;DC_motors.c: 114:         mR->power += 10;
  9990  00575C  C025  FFD9         	movff	reverse@mR,fsr2l
  9991  005760  C026  FFDA         	movff	reverse@mR+1,fsr2h
  9992  005764  0E0A               	movlw	10
  9993  005766  26DF               	addwf	indf2,f,c
  9994  005768                     
  9995                           ;DC_motors.c: 116:         DCmotors_setPWM(mL);
  9996  005768  C023  F018         	movff	reverse@mL,DCmotors_setPWM@m
  9997  00576C  C024  F019         	movff	reverse@mL+1,DCmotors_setPWM@m+1
  9998  005770  ECF1  F01D         	call	_DCmotors_setPWM	;wreg free
  9999  005774                     
 10000                           ;DC_motors.c: 117:         DCmotors_setPWM(mR);
 10001  005774  C025  F018         	movff	reverse@mR,DCmotors_setPWM@m
 10002  005778  C026  F019         	movff	reverse@mR+1,DCmotors_setPWM@m+1
 10003  00577C  ECF1  F01D         	call	_DCmotors_setPWM	;wreg free
 10004  005780                     
 10005                           ;DC_motors.c: 118:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 10006  005780  0EA0               	movlw	160
 10007  005782                     u12627:
 10008  005782  D000               	nop2	
 10009  005784  2EE8               	decfsz	wreg,f,c
 10010  005786  D7FD               	bra	u12627
 10011  005788                     l8696:
 10012                           
 10013                           ;DC_motors.c: 112:     while((mL->power < 40) && (mR->power < 40)){
 10014  005788  C023  FFD9         	movff	reverse@mL,fsr2l
 10015  00578C  C024  FFDA         	movff	reverse@mL+1,fsr2h
 10016  005790  0E28               	movlw	40
 10017  005792  60DF               	cpfslt	indf2,c
 10018  005794  EFCE  F02B         	goto	u11551
 10019  005798  EFD0  F02B         	goto	u11550
 10020  00579C                     u11551:
 10021  00579C  EFDC  F02B         	goto	l671
 10022  0057A0                     u11550:
 10023  0057A0  C025  FFD9         	movff	reverse@mR,fsr2l
 10024  0057A4  C026  FFDA         	movff	reverse@mR+1,fsr2h
 10025  0057A8  0E27               	movlw	39
 10026  0057AA  64DF               	cpfsgt	indf2,c
 10027  0057AC  EFDA  F02B         	goto	u11561
 10028  0057B0  EFDC  F02B         	goto	u11560
 10029  0057B4                     u11561:
 10030  0057B4  EFA8  F02B         	goto	l8688
 10031  0057B8                     u11560:
 10032  0057B8                     l671:
 10033  0057B8  0012               	return		;funcret
 10034  0057BA                     __end_of_reverse:
 10035                           	callstack 0
 10036                           
 10037 ;; *************** function _forward *****************
 10038 ;; Defined at:
 10039 ;;		line 85 in file "DC_motors.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;  mL              2   34[COMRAM] PTR struct .
 10042 ;;		 -> main@motorL(9), 
 10043 ;;  mR              2   36[COMRAM] PTR struct .
 10044 ;;		 -> main@motorR(9), 
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;		None
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  1    wreg      void 
 10049 ;; Registers used:
 10050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10059 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10060 ;;Total ram usage:        5 bytes
 10061 ;; Hardware stack levels used: 1
 10062 ;; Hardware stack levels required when called: 9
 10063 ;; This function calls:
 10064 ;;		_DCmotors_setPWM
 10065 ;; This function is called by:
 10066 ;;		_main
 10067 ;;		_colourcards_readRGBC
 10068 ;;		_DCmotors_testing
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text42
 10073  0057BA                     __ptext42:
 10074                           	callstack 0
 10075  0057BA                     _forward:
 10076                           	callstack 21
 10077  0057BA                     
 10078                           ;DC_motors.c: 85: void forward(DC_motor *mL, DC_motor *mR);DC_motors.c: 86: {;DC_motors.
      +                          c: 87:     mL->direction = 1;
 10079  0057BA  EE20 F001          	lfsr	2,1
 10080  0057BE  5023               	movf	forward@mL^0,w,c
 10081  0057C0  26D9               	addwf	fsr2l,f,c
 10082  0057C2  5024               	movf	(forward@mL+1)^0,w,c
 10083  0057C4  22DA               	addwfc	fsr2h,f,c
 10084  0057C6  0E01               	movlw	1
 10085  0057C8  6EDF               	movwf	indf2,c
 10086                           
 10087                           ;DC_motors.c: 88:     mR->direction = 1;
 10088  0057CA  EE20 F001          	lfsr	2,1
 10089  0057CE  5025               	movf	forward@mR^0,w,c
 10090  0057D0  26D9               	addwf	fsr2l,f,c
 10091  0057D2  5026               	movf	(forward@mR+1)^0,w,c
 10092  0057D4  22DA               	addwfc	fsr2h,f,c
 10093  0057D6  0E01               	movlw	1
 10094  0057D8  6EDF               	movwf	indf2,c
 10095                           
 10096                           ;DC_motors.c: 91:     while((mL->power < 20) && (mR->power < 20)){
 10097  0057DA  EF0B  F02C         	goto	l8586
 10098  0057DE                     l8578:
 10099                           
 10100                           ;DC_motors.c: 92:         mL->power += 10;
 10101  0057DE  C023  FFD9         	movff	forward@mL,fsr2l
 10102  0057E2  C024  FFDA         	movff	forward@mL+1,fsr2h
 10103  0057E6  0E0A               	movlw	10
 10104  0057E8  26DF               	addwf	indf2,f,c
 10105                           
 10106                           ;DC_motors.c: 93:         mR->power += 10;
 10107  0057EA  C025  FFD9         	movff	forward@mR,fsr2l
 10108  0057EE  C026  FFDA         	movff	forward@mR+1,fsr2h
 10109  0057F2  0E0A               	movlw	10
 10110  0057F4  26DF               	addwf	indf2,f,c
 10111  0057F6                     
 10112                           ;DC_motors.c: 95:         DCmotors_setPWM(mL);
 10113  0057F6  C023  F018         	movff	forward@mL,DCmotors_setPWM@m
 10114  0057FA  C024  F019         	movff	forward@mL+1,DCmotors_setPWM@m+1
 10115  0057FE  ECF1  F01D         	call	_DCmotors_setPWM	;wreg free
 10116  005802                     
 10117                           ;DC_motors.c: 96:         DCmotors_setPWM(mR);
 10118  005802  C025  F018         	movff	forward@mR,DCmotors_setPWM@m
 10119  005806  C026  F019         	movff	forward@mR+1,DCmotors_setPWM@m+1
 10120  00580A  ECF1  F01D         	call	_DCmotors_setPWM	;wreg free
 10121  00580E                     
 10122                           ;DC_motors.c: 97:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 10123  00580E  0EA0               	movlw	160
 10124  005810                     u12637:
 10125  005810  D000               	nop2	
 10126  005812  2EE8               	decfsz	wreg,f,c
 10127  005814  D7FD               	bra	u12637
 10128  005816                     l8586:
 10129                           
 10130                           ;DC_motors.c: 91:     while((mL->power < 20) && (mR->power < 20)){
 10131  005816  C023  FFD9         	movff	forward@mL,fsr2l
 10132  00581A  C024  FFDA         	movff	forward@mL+1,fsr2h
 10133  00581E  0E14               	movlw	20
 10134  005820  60DF               	cpfslt	indf2,c
 10135  005822  EF15  F02C         	goto	u11461
 10136  005826  EF17  F02C         	goto	u11460
 10137  00582A                     u11461:
 10138  00582A  EF23  F02C         	goto	l663
 10139  00582E                     u11460:
 10140  00582E  C025  FFD9         	movff	forward@mR,fsr2l
 10141  005832  C026  FFDA         	movff	forward@mR+1,fsr2h
 10142  005836  0E13               	movlw	19
 10143  005838  64DF               	cpfsgt	indf2,c
 10144  00583A  EF21  F02C         	goto	u11471
 10145  00583E  EF23  F02C         	goto	u11470
 10146  005842                     u11471:
 10147  005842  EFEF  F02B         	goto	l8578
 10148  005846                     u11470:
 10149  005846                     l663:
 10150  005846  0012               	return		;funcret
 10151  005848                     __end_of_forward:
 10152                           	callstack 0
 10153                           
 10154 ;; *************** function _colourclick_readRGBC2 *****************
 10155 ;; Defined at:
 10156 ;;		line 140 in file "colour_click.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;  tmpval          2   22[COMRAM] PTR struct .
 10159 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
 10160 ;;  mode            1   24[COMRAM] unsigned char 
 10161 ;; Auto vars:     Size  Location     Type
 10162 ;;		None
 10163 ;; Return value:  Size  Location     Type
 10164 ;;                  1    wreg      void 
 10165 ;; Registers used:
 10166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10167 ;; Tracked objects:
 10168 ;;		On entry : 0/0
 10169 ;;		On exit  : 0/0
 10170 ;;		Unchanged: 0/0
 10171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10172 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10175 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10176 ;;Total ram usage:        5 bytes
 10177 ;; Hardware stack levels used: 1
 10178 ;; Hardware stack levels required when called: 11
 10179 ;; This function calls:
 10180 ;;		_colourclickLEDs_C
 10181 ;;		_colourclick_readRGBC
 10182 ;; This function is called by:
 10183 ;;		_colourcards_readRGBC
 10184 ;;		_colourcards_testingRGBC
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text43
 10189  004890                     __ptext43:
 10190                           	callstack 0
 10191  004890                     _colourclick_readRGBC2:
 10192                           	callstack 18
 10193  004890                     
 10194                           ;colour_click.c: 140: void colourclick_readRGBC2(RGBC_val *tmpval, unsigned char mode);c
      +                          olour_click.c: 141: {;colour_click.c: 142:     colourclickLEDs_C(0);
 10195  004890  0E00               	movlw	0
 10196  004892  ECCB  F030         	call	_colourclickLEDs_C
 10197  004896                     
 10198                           ;colour_click.c: 143:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10199  004896  0E09               	movlw	9
 10200  004898  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10201  00489A  0E1E               	movlw	30
 10202  00489C  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10203  00489E  0EE4               	movlw	228
 10204  0048A0                     u12647:
 10205  0048A0  2EE8               	decfsz	wreg,f,c
 10206  0048A2  D7FE               	bra	u12647
 10207  0048A4  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10208  0048A6  D7FC               	bra	u12647
 10209  0048A8  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10210  0048AA  D7FA               	bra	u12647
 10211  0048AC  D000               	nop2	
 10212  0048AE                     
 10213                           ;colour_click.c: 145:     if (mode==1) {
 10214  0048AE  0419               	decf	colourclick_readRGBC2@mode^0,w,c
 10215  0048B0  A4D8               	btfss	status,2,c
 10216  0048B2  EF5D  F024         	goto	u11501
 10217  0048B6  EF5F  F024         	goto	u11500
 10218  0048BA                     u11501:
 10219  0048BA  EF8D  F024         	goto	l8642
 10220  0048BE                     u11500:
 10221  0048BE                     
 10222                           ;colour_click.c: 146:         LATGbits.LATG1 = 1;
 10223  0048BE  827F               	bsf	127,1,c	;volatile
 10224  0048C0                     
 10225                           ;colour_click.c: 147:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10226  0048C0  0E52               	movlw	82
 10227  0048C2  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10228  0048C4  0E2B               	movlw	43
 10229  0048C6  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10230  0048C8  0E00               	movlw	0
 10231  0048CA                     u12657:
 10232  0048CA  2EE8               	decfsz	wreg,f,c
 10233  0048CC  D7FE               	bra	u12657
 10234  0048CE  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10235  0048D0  D7FC               	bra	u12657
 10236  0048D2  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10237  0048D4  D7FA               	bra	u12657
 10238  0048D6  D000               	nop2	
 10239  0048D8                     
 10240                           ;colour_click.c: 148:         colourclick_readRGBC(tmpval);
 10241  0048D8  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 10242  0048DC  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 10243  0048E0  ECFF  F02C         	call	_colourclick_readRGBC	;wreg free
 10244  0048E4                     
 10245                           ;colour_click.c: 149:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10246  0048E4  0E52               	movlw	82
 10247  0048E6  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10248  0048E8  0E2B               	movlw	43
 10249  0048EA  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10250  0048EC  0E00               	movlw	0
 10251  0048EE                     u12667:
 10252  0048EE  2EE8               	decfsz	wreg,f,c
 10253  0048F0  D7FE               	bra	u12667
 10254  0048F2  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10255  0048F4  D7FC               	bra	u12667
 10256  0048F6  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10257  0048F8  D7FA               	bra	u12667
 10258  0048FA  D000               	nop2	
 10259  0048FC                     
 10260                           ;colour_click.c: 150:         LATGbits.LATG1 = 0;
 10261  0048FC  927F               	bcf	127,1,c	;volatile
 10262  0048FE                     l8640:
 10263                           
 10264                           ;colour_click.c: 151:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10265  0048FE  0E02               	movlw	2
 10266  004900  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10267  004902  0EA0               	movlw	160
 10268  004904  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10269  004906  0E92               	movlw	146
 10270  004908                     u12677:
 10271  004908  2EE8               	decfsz	wreg,f,c
 10272  00490A  D7FE               	bra	u12677
 10273  00490C  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10274  00490E  D7FC               	bra	u12677
 10275  004910  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10276  004912  D7FA               	bra	u12677
 10277  004914  D000               	nop2	
 10278                           
 10279                           ;colour_click.c: 152:     } else if (mode==2) {
 10280  004916  EFE3  F024         	goto	l8670
 10281  00491A                     l8642:
 10282  00491A  0E02               	movlw	2
 10283  00491C  1819               	xorwf	colourclick_readRGBC2@mode^0,w,c
 10284  00491E  A4D8               	btfss	status,2,c
 10285  004920  EF94  F024         	goto	u11511
 10286  004924  EF96  F024         	goto	u11510
 10287  004928                     u11511:
 10288  004928  EFB8  F024         	goto	l8656
 10289  00492C                     u11510:
 10290  00492C                     
 10291                           ;colour_click.c: 153:         LATAbits.LATA4 = 1;
 10292  00492C  8879               	bsf	121,4,c	;volatile
 10293  00492E                     
 10294                           ;colour_click.c: 154:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10295  00492E  0E52               	movlw	82
 10296  004930  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10297  004932  0E2B               	movlw	43
 10298  004934  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10299  004936  0E00               	movlw	0
 10300  004938                     u12687:
 10301  004938  2EE8               	decfsz	wreg,f,c
 10302  00493A  D7FE               	bra	u12687
 10303  00493C  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10304  00493E  D7FC               	bra	u12687
 10305  004940  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10306  004942  D7FA               	bra	u12687
 10307  004944  D000               	nop2	
 10308  004946                     
 10309                           ;colour_click.c: 155:         colourclick_readRGBC(tmpval);
 10310  004946  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 10311  00494A  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 10312  00494E  ECFF  F02C         	call	_colourclick_readRGBC	;wreg free
 10313  004952                     
 10314                           ;colour_click.c: 156:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10315  004952  0E52               	movlw	82
 10316  004954  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10317  004956  0E2B               	movlw	43
 10318  004958  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10319  00495A  0E00               	movlw	0
 10320  00495C                     u12697:
 10321  00495C  2EE8               	decfsz	wreg,f,c
 10322  00495E  D7FE               	bra	u12697
 10323  004960  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10324  004962  D7FC               	bra	u12697
 10325  004964  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10326  004966  D7FA               	bra	u12697
 10327  004968  D000               	nop2	
 10328  00496A                     
 10329                           ;colour_click.c: 157:         LATAbits.LATA4 = 0;
 10330  00496A  9879               	bcf	121,4,c	;volatile
 10331  00496C  EF7F  F024         	goto	l8640
 10332  004970                     l8656:
 10333  004970  0E03               	movlw	3
 10334  004972  1819               	xorwf	colourclick_readRGBC2@mode^0,w,c
 10335  004974  A4D8               	btfss	status,2,c
 10336  004976  EFBF  F024         	goto	u11521
 10337  00497A  EFC1  F024         	goto	u11520
 10338  00497E                     u11521:
 10339  00497E  EFE3  F024         	goto	l8670
 10340  004982                     u11520:
 10341  004982                     
 10342                           ;colour_click.c: 160:         LATFbits.LATF7 = 1;
 10343  004982  8E7E               	bsf	126,7,c	;volatile
 10344  004984                     
 10345                           ;colour_click.c: 161:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10346  004984  0E52               	movlw	82
 10347  004986  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10348  004988  0E2B               	movlw	43
 10349  00498A  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10350  00498C  0E00               	movlw	0
 10351  00498E                     u12707:
 10352  00498E  2EE8               	decfsz	wreg,f,c
 10353  004990  D7FE               	bra	u12707
 10354  004992  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10355  004994  D7FC               	bra	u12707
 10356  004996  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10357  004998  D7FA               	bra	u12707
 10358  00499A  D000               	nop2	
 10359  00499C                     
 10360                           ;colour_click.c: 162:         colourclick_readRGBC(tmpval);
 10361  00499C  C017  F015         	movff	colourclick_readRGBC2@tmpval,colourclick_readRGBC@tmpval
 10362  0049A0  C018  F016         	movff	colourclick_readRGBC2@tmpval+1,colourclick_readRGBC@tmpval+1
 10363  0049A4  ECFF  F02C         	call	_colourclick_readRGBC	;wreg free
 10364  0049A8                     
 10365                           ;colour_click.c: 163:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10366  0049A8  0E52               	movlw	82
 10367  0049AA  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10368  0049AC  0E2B               	movlw	43
 10369  0049AE  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10370  0049B0  0E00               	movlw	0
 10371  0049B2                     u12717:
 10372  0049B2  2EE8               	decfsz	wreg,f,c
 10373  0049B4  D7FE               	bra	u12717
 10374  0049B6  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10375  0049B8  D7FC               	bra	u12717
 10376  0049BA  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10377  0049BC  D7FA               	bra	u12717
 10378  0049BE  D000               	nop2	
 10379  0049C0                     
 10380                           ;colour_click.c: 164:         LATFbits.LATF7 = 0;
 10381  0049C0  9E7E               	bcf	126,7,c	;volatile
 10382  0049C2  EF7F  F024         	goto	l8640
 10383  0049C6                     l8670:
 10384                           
 10385                           ;colour_click.c: 168:     colourclickLEDs_C(1);
 10386  0049C6  0E01               	movlw	1
 10387  0049C8  ECCB  F030         	call	_colourclickLEDs_C
 10388  0049CC                     
 10389                           ;colour_click.c: 169:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10390  0049CC  0E09               	movlw	9
 10391  0049CE  6E1B               	movwf	(??_colourclick_readRGBC2+1)^0,c
 10392  0049D0  0E1E               	movlw	30
 10393  0049D2  6E1A               	movwf	??_colourclick_readRGBC2^0,c
 10394  0049D4  0EE4               	movlw	228
 10395  0049D6                     u12727:
 10396  0049D6  2EE8               	decfsz	wreg,f,c
 10397  0049D8  D7FE               	bra	u12727
 10398  0049DA  2E1A               	decfsz	??_colourclick_readRGBC2^0,f,c
 10399  0049DC  D7FC               	bra	u12727
 10400  0049DE  2E1B               	decfsz	(??_colourclick_readRGBC2+1)^0,f,c
 10401  0049E0  D7FA               	bra	u12727
 10402  0049E2  D000               	nop2	
 10403  0049E4  0012               	return		;funcret
 10404  0049E6                     __end_of_colourclick_readRGBC2:
 10405                           	callstack 0
 10406                           
 10407 ;; *************** function _colourclick_readRGBC *****************
 10408 ;; Defined at:
 10409 ;;		line 128 in file "colour_click.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;  tmpval          2   20[COMRAM] PTR struct .
 10412 ;;		 -> colourclick_calibration@current(8), colourclick_calibration@initial(8), colourcards_testingRGBC@abs(8), main@cur
      +rent(8), 
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;		None
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  1    wreg      void 
 10417 ;; Registers used:
 10418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10428 ;;Total ram usage:        2 bytes
 10429 ;; Hardware stack levels used: 1
 10430 ;; Hardware stack levels required when called: 10
 10431 ;; This function calls:
 10432 ;;		_colourclick_readB
 10433 ;;		_colourclick_readC
 10434 ;;		_colourclick_readG
 10435 ;;		_colourclick_readR
 10436 ;; This function is called by:
 10437 ;;		_colourcards_readRGBC
 10438 ;;		_colourclick_readRGBC2
 10439 ;;		_colourclick_calibration
 10440 ;;		_colourcards_testingRGBC
 10441 ;; This function uses a non-reentrant model
 10442 ;;
 10443                           
 10444                           	psect	text44
 10445  0059FE                     __ptext44:
 10446                           	callstack 0
 10447  0059FE                     _colourclick_readRGBC:
 10448                           	callstack 19
 10449  0059FE                     
 10450                           ;colour_click.c: 128: void colourclick_readRGBC(RGBC_val *tmpval);colour_click.c: 129: {
      +                          ;colour_click.c: 130:     tmpval->R = colourclick_readR();
 10451  0059FE  ECD3  F02D         	call	_colourclick_readR	;wreg free
 10452  005A02  C015  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
 10453  005A06  C016  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
 10454  005A0A  C00E  FFDE         	movff	?_colourclick_readR,postinc2
 10455  005A0E  C00F  FFDD         	movff	?_colourclick_readR+1,postdec2
 10456                           
 10457                           ;colour_click.c: 131:     tmpval->G = colourclick_readG();
 10458  005A12  ECFB  F02D         	call	_colourclick_readG	;wreg free
 10459  005A16  EE20 F002          	lfsr	2,2
 10460  005A1A  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
 10461  005A1C  26D9               	addwf	fsr2l,f,c
 10462  005A1E  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10463  005A20  22DA               	addwfc	fsr2h,f,c
 10464  005A22  C00E  FFDE         	movff	?_colourclick_readG,postinc2
 10465  005A26  C00F  FFDD         	movff	?_colourclick_readG+1,postdec2
 10466                           
 10467                           ;colour_click.c: 132:     tmpval->B = colourclick_readB();
 10468  005A2A  EC4B  F02E         	call	_colourclick_readB	;wreg free
 10469  005A2E  EE20 F004          	lfsr	2,4
 10470  005A32  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
 10471  005A34  26D9               	addwf	fsr2l,f,c
 10472  005A36  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10473  005A38  22DA               	addwfc	fsr2h,f,c
 10474  005A3A  C00E  FFDE         	movff	?_colourclick_readB,postinc2
 10475  005A3E  C00F  FFDD         	movff	?_colourclick_readB+1,postdec2
 10476                           
 10477                           ;colour_click.c: 133:     tmpval->C = colourclick_readC();
 10478  005A42  EC23  F02E         	call	_colourclick_readC	;wreg free
 10479  005A46  EE20 F006          	lfsr	2,6
 10480  005A4A  5015               	movf	colourclick_readRGBC@tmpval^0,w,c
 10481  005A4C  26D9               	addwf	fsr2l,f,c
 10482  005A4E  5016               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10483  005A50  22DA               	addwfc	fsr2h,f,c
 10484  005A52  C00E  FFDE         	movff	?_colourclick_readC,postinc2
 10485  005A56  C00F  FFDD         	movff	?_colourclick_readC+1,postdec2
 10486  005A5A  0012               	return		;funcret
 10487  005A5C                     __end_of_colourclick_readRGBC:
 10488                           	callstack 0
 10489                           
 10490 ;; *************** function _colourclick_readR *****************
 10491 ;; Defined at:
 10492 ;;		line 53 in file "colour_click.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;		None
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;  tmp             2   18[COMRAM] unsigned int 
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  2   13[COMRAM] unsigned int 
 10499 ;; Registers used:
 10500 ;;		wreg, status,2, status,0, cstack
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10508 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10509 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10510 ;;Total ram usage:        7 bytes
 10511 ;; Hardware stack levels used: 1
 10512 ;; Hardware stack levels required when called: 9
 10513 ;; This function calls:
 10514 ;;		_I2C_2_Master_Read
 10515 ;;		_I2C_2_Master_RepStart
 10516 ;;		_I2C_2_Master_Start
 10517 ;;		_I2C_2_Master_Stop
 10518 ;;		_I2C_2_Master_Write
 10519 ;; This function is called by:
 10520 ;;		_colourclick_readRGBC
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           	psect	text45
 10525  005BA6                     __ptext45:
 10526                           	callstack 0
 10527  005BA6                     _colourclick_readR:
 10528                           	callstack 19
 10529  005BA6                     
 10530                           ;colour_click.c: 55:  unsigned int tmp;;colour_click.c: 56:  I2C_2_Master_Start();
 10531  005BA6  EC84  F031         	call	_I2C_2_Master_Start	;wreg free
 10532                           
 10533                           ;colour_click.c: 57:  I2C_2_Master_Write(0x52 | 0x00);
 10534  005BAA  0E52               	movlw	82
 10535  005BAC  EC6D  F031         	call	_I2C_2_Master_Write
 10536                           
 10537                           ;colour_click.c: 58:  I2C_2_Master_Write(0xA0 | 0x16);
 10538  005BB0  0EB6               	movlw	182
 10539  005BB2  EC6D  F031         	call	_I2C_2_Master_Write
 10540                           
 10541                           ;colour_click.c: 59:  I2C_2_Master_RepStart();
 10542  005BB6  EC89  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10543                           
 10544                           ;colour_click.c: 60:  I2C_2_Master_Write(0x52 | 0x01);
 10545  005BBA  0E53               	movlw	83
 10546  005BBC  EC6D  F031         	call	_I2C_2_Master_Write
 10547                           
 10548                           ;colour_click.c: 61:  tmp=I2C_2_Master_Read(1);
 10549  005BC0  0E01               	movlw	1
 10550  005BC2  ECA0  F02F         	call	_I2C_2_Master_Read
 10551  005BC6  6E10               	movwf	??_colourclick_readR^0,c
 10552  005BC8  5010               	movf	??_colourclick_readR^0,w,c
 10553  005BCA  6E13               	movwf	colourclick_readR@tmp^0,c
 10554  005BCC  6A14               	clrf	(colourclick_readR@tmp+1)^0,c
 10555                           
 10556                           ;colour_click.c: 62:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10557  005BCE  0E00               	movlw	0
 10558  005BD0  ECA0  F02F         	call	_I2C_2_Master_Read
 10559  005BD4  6E10               	movwf	??_colourclick_readR^0,c
 10560  005BD6  5010               	movf	??_colourclick_readR^0,w,c
 10561  005BD8  6E12               	movwf	(??_colourclick_readR+2)^0,c
 10562  005BDA  6A11               	clrf	(??_colourclick_readR+1)^0,c
 10563  005BDC  5013               	movf	colourclick_readR@tmp^0,w,c
 10564  005BDE  1011               	iorwf	(??_colourclick_readR+1)^0,w,c
 10565  005BE0  6E13               	movwf	colourclick_readR@tmp^0,c
 10566  005BE2  5014               	movf	(colourclick_readR@tmp+1)^0,w,c
 10567  005BE4  1012               	iorwf	(??_colourclick_readR+2)^0,w,c
 10568  005BE6  6E14               	movwf	(colourclick_readR@tmp+1)^0,c
 10569                           
 10570                           ;colour_click.c: 63:  I2C_2_Master_Stop();
 10571  005BE8  EC7F  F031         	call	_I2C_2_Master_Stop	;wreg free
 10572  005BEC                     
 10573                           ;colour_click.c: 64:  return tmp;
 10574  005BEC  C013  F00E         	movff	colourclick_readR@tmp,?_colourclick_readR
 10575  005BF0  C014  F00F         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
 10576  005BF4  0012               	return		;funcret
 10577  005BF6                     __end_of_colourclick_readR:
 10578                           	callstack 0
 10579                           
 10580 ;; *************** function _colourclick_readG *****************
 10581 ;; Defined at:
 10582 ;;		line 72 in file "colour_click.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;		None
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;  tmp             2   18[COMRAM] unsigned int 
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  2   13[COMRAM] unsigned int 
 10589 ;; Registers used:
 10590 ;;		wreg, status,2, status,0, cstack
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10598 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10599 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10600 ;;Total ram usage:        7 bytes
 10601 ;; Hardware stack levels used: 1
 10602 ;; Hardware stack levels required when called: 9
 10603 ;; This function calls:
 10604 ;;		_I2C_2_Master_Read
 10605 ;;		_I2C_2_Master_RepStart
 10606 ;;		_I2C_2_Master_Start
 10607 ;;		_I2C_2_Master_Stop
 10608 ;;		_I2C_2_Master_Write
 10609 ;; This function is called by:
 10610 ;;		_colourclick_readRGBC
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           	psect	text46
 10615  005BF6                     __ptext46:
 10616                           	callstack 0
 10617  005BF6                     _colourclick_readG:
 10618                           	callstack 19
 10619  005BF6                     
 10620                           ;colour_click.c: 74:  unsigned int tmp;;colour_click.c: 75:  I2C_2_Master_Start();
 10621  005BF6  EC84  F031         	call	_I2C_2_Master_Start	;wreg free
 10622                           
 10623                           ;colour_click.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
 10624  005BFA  0E52               	movlw	82
 10625  005BFC  EC6D  F031         	call	_I2C_2_Master_Write
 10626                           
 10627                           ;colour_click.c: 77:  I2C_2_Master_Write(0xA0 | 0x18);
 10628  005C00  0EB8               	movlw	184
 10629  005C02  EC6D  F031         	call	_I2C_2_Master_Write
 10630                           
 10631                           ;colour_click.c: 78:  I2C_2_Master_RepStart();
 10632  005C06  EC89  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10633                           
 10634                           ;colour_click.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
 10635  005C0A  0E53               	movlw	83
 10636  005C0C  EC6D  F031         	call	_I2C_2_Master_Write
 10637                           
 10638                           ;colour_click.c: 80:  tmp=I2C_2_Master_Read(1);
 10639  005C10  0E01               	movlw	1
 10640  005C12  ECA0  F02F         	call	_I2C_2_Master_Read
 10641  005C16  6E10               	movwf	??_colourclick_readG^0,c
 10642  005C18  5010               	movf	??_colourclick_readG^0,w,c
 10643  005C1A  6E13               	movwf	colourclick_readG@tmp^0,c
 10644  005C1C  6A14               	clrf	(colourclick_readG@tmp+1)^0,c
 10645                           
 10646                           ;colour_click.c: 81:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10647  005C1E  0E00               	movlw	0
 10648  005C20  ECA0  F02F         	call	_I2C_2_Master_Read
 10649  005C24  6E10               	movwf	??_colourclick_readG^0,c
 10650  005C26  5010               	movf	??_colourclick_readG^0,w,c
 10651  005C28  6E12               	movwf	(??_colourclick_readG+2)^0,c
 10652  005C2A  6A11               	clrf	(??_colourclick_readG+1)^0,c
 10653  005C2C  5013               	movf	colourclick_readG@tmp^0,w,c
 10654  005C2E  1011               	iorwf	(??_colourclick_readG+1)^0,w,c
 10655  005C30  6E13               	movwf	colourclick_readG@tmp^0,c
 10656  005C32  5014               	movf	(colourclick_readG@tmp+1)^0,w,c
 10657  005C34  1012               	iorwf	(??_colourclick_readG+2)^0,w,c
 10658  005C36  6E14               	movwf	(colourclick_readG@tmp+1)^0,c
 10659                           
 10660                           ;colour_click.c: 82:  I2C_2_Master_Stop();
 10661  005C38  EC7F  F031         	call	_I2C_2_Master_Stop	;wreg free
 10662  005C3C                     
 10663                           ;colour_click.c: 83:  return tmp;
 10664  005C3C  C013  F00E         	movff	colourclick_readG@tmp,?_colourclick_readG
 10665  005C40  C014  F00F         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
 10666  005C44  0012               	return		;funcret
 10667  005C46                     __end_of_colourclick_readG:
 10668                           	callstack 0
 10669                           
 10670 ;; *************** function _colourclick_readC *****************
 10671 ;; Defined at:
 10672 ;;		line 110 in file "colour_click.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;		None
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;  tmp             2   18[COMRAM] unsigned int 
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  2   13[COMRAM] unsigned int 
 10679 ;; Registers used:
 10680 ;;		wreg, status,2, status,0, cstack
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10688 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10689 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10690 ;;Total ram usage:        7 bytes
 10691 ;; Hardware stack levels used: 1
 10692 ;; Hardware stack levels required when called: 9
 10693 ;; This function calls:
 10694 ;;		_I2C_2_Master_Read
 10695 ;;		_I2C_2_Master_RepStart
 10696 ;;		_I2C_2_Master_Start
 10697 ;;		_I2C_2_Master_Stop
 10698 ;;		_I2C_2_Master_Write
 10699 ;; This function is called by:
 10700 ;;		_colourclick_readRGBC
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           	psect	text47
 10705  005C46                     __ptext47:
 10706                           	callstack 0
 10707  005C46                     _colourclick_readC:
 10708                           	callstack 19
 10709  005C46                     
 10710                           ;colour_click.c: 112:  unsigned int tmp;;colour_click.c: 113:  I2C_2_Master_Start();
 10711  005C46  EC84  F031         	call	_I2C_2_Master_Start	;wreg free
 10712                           
 10713                           ;colour_click.c: 114:  I2C_2_Master_Write(0x52 | 0x00);
 10714  005C4A  0E52               	movlw	82
 10715  005C4C  EC6D  F031         	call	_I2C_2_Master_Write
 10716                           
 10717                           ;colour_click.c: 115:  I2C_2_Master_Write(0xA0 | 0x14);
 10718  005C50  0EB4               	movlw	180
 10719  005C52  EC6D  F031         	call	_I2C_2_Master_Write
 10720                           
 10721                           ;colour_click.c: 116:  I2C_2_Master_RepStart();
 10722  005C56  EC89  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10723                           
 10724                           ;colour_click.c: 117:  I2C_2_Master_Write(0x52 | 0x01);
 10725  005C5A  0E53               	movlw	83
 10726  005C5C  EC6D  F031         	call	_I2C_2_Master_Write
 10727                           
 10728                           ;colour_click.c: 118:  tmp=I2C_2_Master_Read(1);
 10729  005C60  0E01               	movlw	1
 10730  005C62  ECA0  F02F         	call	_I2C_2_Master_Read
 10731  005C66  6E10               	movwf	??_colourclick_readC^0,c
 10732  005C68  5010               	movf	??_colourclick_readC^0,w,c
 10733  005C6A  6E13               	movwf	colourclick_readC@tmp^0,c
 10734  005C6C  6A14               	clrf	(colourclick_readC@tmp+1)^0,c
 10735                           
 10736                           ;colour_click.c: 119:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10737  005C6E  0E00               	movlw	0
 10738  005C70  ECA0  F02F         	call	_I2C_2_Master_Read
 10739  005C74  6E10               	movwf	??_colourclick_readC^0,c
 10740  005C76  5010               	movf	??_colourclick_readC^0,w,c
 10741  005C78  6E12               	movwf	(??_colourclick_readC+2)^0,c
 10742  005C7A  6A11               	clrf	(??_colourclick_readC+1)^0,c
 10743  005C7C  5013               	movf	colourclick_readC@tmp^0,w,c
 10744  005C7E  1011               	iorwf	(??_colourclick_readC+1)^0,w,c
 10745  005C80  6E13               	movwf	colourclick_readC@tmp^0,c
 10746  005C82  5014               	movf	(colourclick_readC@tmp+1)^0,w,c
 10747  005C84  1012               	iorwf	(??_colourclick_readC+2)^0,w,c
 10748  005C86  6E14               	movwf	(colourclick_readC@tmp+1)^0,c
 10749                           
 10750                           ;colour_click.c: 120:  I2C_2_Master_Stop();
 10751  005C88  EC7F  F031         	call	_I2C_2_Master_Stop	;wreg free
 10752  005C8C                     
 10753                           ;colour_click.c: 121:  return tmp;
 10754  005C8C  C013  F00E         	movff	colourclick_readC@tmp,?_colourclick_readC
 10755  005C90  C014  F00F         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
 10756  005C94  0012               	return		;funcret
 10757  005C96                     __end_of_colourclick_readC:
 10758                           	callstack 0
 10759                           
 10760 ;; *************** function _colourclick_readB *****************
 10761 ;; Defined at:
 10762 ;;		line 91 in file "colour_click.c"
 10763 ;; Parameters:    Size  Location     Type
 10764 ;;		None
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;  tmp             2   18[COMRAM] unsigned int 
 10767 ;; Return value:  Size  Location     Type
 10768 ;;                  2   13[COMRAM] unsigned int 
 10769 ;; Registers used:
 10770 ;;		wreg, status,2, status,0, cstack
 10771 ;; Tracked objects:
 10772 ;;		On entry : 0/0
 10773 ;;		On exit  : 0/0
 10774 ;;		Unchanged: 0/0
 10775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10778 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10779 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10780 ;;Total ram usage:        7 bytes
 10781 ;; Hardware stack levels used: 1
 10782 ;; Hardware stack levels required when called: 9
 10783 ;; This function calls:
 10784 ;;		_I2C_2_Master_Read
 10785 ;;		_I2C_2_Master_RepStart
 10786 ;;		_I2C_2_Master_Start
 10787 ;;		_I2C_2_Master_Stop
 10788 ;;		_I2C_2_Master_Write
 10789 ;; This function is called by:
 10790 ;;		_colourclick_readRGBC
 10791 ;; This function uses a non-reentrant model
 10792 ;;
 10793                           
 10794                           	psect	text48
 10795  005C96                     __ptext48:
 10796                           	callstack 0
 10797  005C96                     _colourclick_readB:
 10798                           	callstack 19
 10799  005C96                     
 10800                           ;colour_click.c: 93:  unsigned int tmp;;colour_click.c: 94:  I2C_2_Master_Start();
 10801  005C96  EC84  F031         	call	_I2C_2_Master_Start	;wreg free
 10802                           
 10803                           ;colour_click.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
 10804  005C9A  0E52               	movlw	82
 10805  005C9C  EC6D  F031         	call	_I2C_2_Master_Write
 10806                           
 10807                           ;colour_click.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
 10808  005CA0  0EBA               	movlw	186
 10809  005CA2  EC6D  F031         	call	_I2C_2_Master_Write
 10810                           
 10811                           ;colour_click.c: 97:  I2C_2_Master_RepStart();
 10812  005CA6  EC89  F031         	call	_I2C_2_Master_RepStart	;wreg free
 10813                           
 10814                           ;colour_click.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
 10815  005CAA  0E53               	movlw	83
 10816  005CAC  EC6D  F031         	call	_I2C_2_Master_Write
 10817                           
 10818                           ;colour_click.c: 99:  tmp=I2C_2_Master_Read(1);
 10819  005CB0  0E01               	movlw	1
 10820  005CB2  ECA0  F02F         	call	_I2C_2_Master_Read
 10821  005CB6  6E10               	movwf	??_colourclick_readB^0,c
 10822  005CB8  5010               	movf	??_colourclick_readB^0,w,c
 10823  005CBA  6E13               	movwf	colourclick_readB@tmp^0,c
 10824  005CBC  6A14               	clrf	(colourclick_readB@tmp+1)^0,c
 10825                           
 10826                           ;colour_click.c: 100:  tmp=tmp | (unsigned int)(I2C_2_Master_Read(0)<<8);
 10827  005CBE  0E00               	movlw	0
 10828  005CC0  ECA0  F02F         	call	_I2C_2_Master_Read
 10829  005CC4  6E10               	movwf	??_colourclick_readB^0,c
 10830  005CC6  5010               	movf	??_colourclick_readB^0,w,c
 10831  005CC8  6E12               	movwf	(??_colourclick_readB+2)^0,c
 10832  005CCA  6A11               	clrf	(??_colourclick_readB+1)^0,c
 10833  005CCC  5013               	movf	colourclick_readB@tmp^0,w,c
 10834  005CCE  1011               	iorwf	(??_colourclick_readB+1)^0,w,c
 10835  005CD0  6E13               	movwf	colourclick_readB@tmp^0,c
 10836  005CD2  5014               	movf	(colourclick_readB@tmp+1)^0,w,c
 10837  005CD4  1012               	iorwf	(??_colourclick_readB+2)^0,w,c
 10838  005CD6  6E14               	movwf	(colourclick_readB@tmp+1)^0,c
 10839                           
 10840                           ;colour_click.c: 101:  I2C_2_Master_Stop();
 10841  005CD8  EC7F  F031         	call	_I2C_2_Master_Stop	;wreg free
 10842  005CDC                     
 10843                           ;colour_click.c: 102:  return tmp;
 10844  005CDC  C013  F00E         	movff	colourclick_readB@tmp,?_colourclick_readB
 10845  005CE0  C014  F00F         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
 10846  005CE4  0012               	return		;funcret
 10847  005CE6                     __end_of_colourclick_readB:
 10848                           	callstack 0
 10849                           
 10850 ;; *************** function _I2C_2_Master_Write *****************
 10851 ;; Defined at:
 10852 ;;		line 69 in file "I2C.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  data_byte       1    wreg     unsigned char 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;  data_byte       1   10[COMRAM] unsigned char 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg, status,2, status,0, cstack
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10870 ;;Total ram usage:        1 bytes
 10871 ;; Hardware stack levels used: 1
 10872 ;; Hardware stack levels required when called: 8
 10873 ;; This function calls:
 10874 ;;		_I2C_2_Master_Idle
 10875 ;; This function is called by:
 10876 ;;		_interrupts_clear
 10877 ;;		_colourclick_writetoaddr
 10878 ;;		_colourclick_readR
 10879 ;;		_colourclick_readG
 10880 ;;		_colourclick_readB
 10881 ;;		_colourclick_readC
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885                           	psect	text49
 10886  0062DA                     __ptext49:
 10887                           	callstack 0
 10888  0062DA                     _I2C_2_Master_Write:
 10889                           	callstack 18
 10890                           
 10891                           ;incstack = 0
 10892                           ;I2C_2_Master_Write@data_byte stored from wreg
 10893  0062DA  6E0B               	movwf	I2C_2_Master_Write@data_byte^0,c
 10894  0062DC                     
 10895                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
 10896  0062DC  EC7E  F030         	call	_I2C_2_Master_Idle	;wreg free
 10897  0062E0                     
 10898                           ;I2C.c: 72:   SSP2BUF = data_byte;
 10899  0062E0  C00B  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10900  0062E4  0012               	return		;funcret
 10901  0062E6                     __end_of_I2C_2_Master_Write:
 10902                           	callstack 0
 10903                           
 10904 ;; *************** function _I2C_2_Master_Stop *****************
 10905 ;; Defined at:
 10906 ;;		line 59 in file "I2C.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;		None
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;		None
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  1    wreg      void 
 10913 ;; Registers used:
 10914 ;;		wreg, status,2, status,0, cstack
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10924 ;;Total ram usage:        0 bytes
 10925 ;; Hardware stack levels used: 1
 10926 ;; Hardware stack levels required when called: 8
 10927 ;; This function calls:
 10928 ;;		_I2C_2_Master_Idle
 10929 ;; This function is called by:
 10930 ;;		_interrupts_clear
 10931 ;;		_colourclick_writetoaddr
 10932 ;;		_colourclick_readR
 10933 ;;		_colourclick_readG
 10934 ;;		_colourclick_readB
 10935 ;;		_colourclick_readC
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           	psect	text50
 10940  0062FE                     __ptext50:
 10941                           	callstack 0
 10942  0062FE                     _I2C_2_Master_Stop:
 10943                           	callstack 18
 10944  0062FE                     
 10945                           ;I2C.c: 61:   I2C_2_Master_Idle();
 10946  0062FE  EC7E  F030         	call	_I2C_2_Master_Idle	;wreg free
 10947  006302                     
 10948                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
 10949  006302  010E               	movlb	14	; () banked
 10950  006304  85DA               	bsf	218,2,b	;volatile
 10951  006306                     
 10952                           ; BSR set to: 14
 10953  006306  0012               	return		;funcret
 10954  006308                     __end_of_I2C_2_Master_Stop:
 10955                           	callstack 0
 10956                           
 10957 ;; *************** function _I2C_2_Master_Start *****************
 10958 ;; Defined at:
 10959 ;;		line 39 in file "I2C.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;		None
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;		None
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  1    wreg      void 
 10966 ;; Registers used:
 10967 ;;		wreg, status,2, status,0, cstack
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10977 ;;Total ram usage:        0 bytes
 10978 ;; Hardware stack levels used: 1
 10979 ;; Hardware stack levels required when called: 8
 10980 ;; This function calls:
 10981 ;;		_I2C_2_Master_Idle
 10982 ;; This function is called by:
 10983 ;;		_interrupts_clear
 10984 ;;		_colourclick_writetoaddr
 10985 ;;		_colourclick_readR
 10986 ;;		_colourclick_readG
 10987 ;;		_colourclick_readB
 10988 ;;		_colourclick_readC
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           	psect	text51
 10993  006308                     __ptext51:
 10994                           	callstack 0
 10995  006308                     _I2C_2_Master_Start:
 10996                           	callstack 18
 10997  006308                     
 10998                           ;I2C.c: 41:   I2C_2_Master_Idle();
 10999  006308  EC7E  F030         	call	_I2C_2_Master_Idle	;wreg free
 11000  00630C                     
 11001                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
 11002  00630C  010E               	movlb	14	; () banked
 11003  00630E  81DA               	bsf	218,0,b	;volatile
 11004  006310                     
 11005                           ; BSR set to: 14
 11006  006310  0012               	return		;funcret
 11007  006312                     __end_of_I2C_2_Master_Start:
 11008                           	callstack 0
 11009                           
 11010 ;; *************** function _I2C_2_Master_RepStart *****************
 11011 ;; Defined at:
 11012 ;;		line 49 in file "I2C.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;		None
 11015 ;; Auto vars:     Size  Location     Type
 11016 ;;		None
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  1    wreg      void 
 11019 ;; Registers used:
 11020 ;;		wreg, status,2, status,0, cstack
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11030 ;;Total ram usage:        0 bytes
 11031 ;; Hardware stack levels used: 1
 11032 ;; Hardware stack levels required when called: 8
 11033 ;; This function calls:
 11034 ;;		_I2C_2_Master_Idle
 11035 ;; This function is called by:
 11036 ;;		_colourclick_readR
 11037 ;;		_colourclick_readG
 11038 ;;		_colourclick_readB
 11039 ;;		_colourclick_readC
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text52
 11044  006312                     __ptext52:
 11045                           	callstack 0
 11046  006312                     _I2C_2_Master_RepStart:
 11047                           	callstack 19
 11048  006312                     
 11049                           ;I2C.c: 51:   I2C_2_Master_Idle();
 11050  006312  EC7E  F030         	call	_I2C_2_Master_Idle	;wreg free
 11051  006316                     
 11052                           ;I2C.c: 52:   SSP2CON2bits.RSEN = 1;
 11053  006316  010E               	movlb	14	; () banked
 11054  006318  83DA               	bsf	218,1,b	;volatile
 11055  00631A                     
 11056                           ; BSR set to: 14
 11057  00631A  0012               	return		;funcret
 11058  00631C                     __end_of_I2C_2_Master_RepStart:
 11059                           	callstack 0
 11060                           
 11061 ;; *************** function _I2C_2_Master_Read *****************
 11062 ;; Defined at:
 11063 ;;		line 79 in file "I2C.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;  ack             1    wreg     unsigned char 
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;  ack             1   11[COMRAM] unsigned char 
 11068 ;;  tmp             1   12[COMRAM] unsigned char 
 11069 ;; Return value:  Size  Location     Type
 11070 ;;                  1    wreg      unsigned char 
 11071 ;; Registers used:
 11072 ;;		wreg, status,2, status,0, cstack
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11079 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11081 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11082 ;;Total ram usage:        3 bytes
 11083 ;; Hardware stack levels used: 1
 11084 ;; Hardware stack levels required when called: 8
 11085 ;; This function calls:
 11086 ;;		_I2C_2_Master_Idle
 11087 ;; This function is called by:
 11088 ;;		_colourclick_readR
 11089 ;;		_colourclick_readG
 11090 ;;		_colourclick_readB
 11091 ;;		_colourclick_readC
 11092 ;; This function uses a non-reentrant model
 11093 ;;
 11094                           
 11095                           	psect	text53
 11096  005F40                     __ptext53:
 11097                           	callstack 0
 11098  005F40                     _I2C_2_Master_Read:
 11099                           	callstack 19
 11100                           
 11101                           ; BSR set to: 14
 11102                           ;incstack = 0
 11103                           ;I2C_2_Master_Read@ack stored from wreg
 11104  005F40  6E0C               	movwf	I2C_2_Master_Read@ack^0,c
 11105  005F42                     
 11106                           ;I2C.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);I2C.c: 80: {;I2C.c: 81:  
      +                           unsigned char tmp;;I2C.c: 82:   I2C_2_Master_Idle();
 11107  005F42  EC7E  F030         	call	_I2C_2_Master_Idle	;wreg free
 11108  005F46                     
 11109                           ;I2C.c: 83:   SSP2CON2bits.RCEN = 1;
 11110  005F46  010E               	movlb	14	; () banked
 11111  005F48  87DA               	bsf	218,3,b	;volatile
 11112                           
 11113                           ;I2C.c: 84:   I2C_2_Master_Idle();
 11114  005F4A  EC7E  F030         	call	_I2C_2_Master_Idle	;wreg free
 11115  005F4E                     
 11116                           ;I2C.c: 85:   tmp = SSP2BUF;
 11117  005F4E  CED5 F00D          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 11118                           
 11119                           ;I2C.c: 86:   I2C_2_Master_Idle();
 11120  005F52  EC7E  F030         	call	_I2C_2_Master_Idle	;wreg free
 11121  005F56                     
 11122                           ;I2C.c: 87:   SSP2CON2bits.ACKDT = !ack;
 11123  005F56  500C               	movf	I2C_2_Master_Read@ack^0,w,c
 11124  005F58  B4D8               	btfsc	status,2,c
 11125  005F5A  EFB1  F02F         	goto	u10971
 11126  005F5E  EFB5  F02F         	goto	u10970
 11127  005F62                     u10971:
 11128  005F62  6A0B               	clrf	??_I2C_2_Master_Read^0,c
 11129  005F64  2A0B               	incf	??_I2C_2_Master_Read^0,f,c
 11130  005F66  EFB6  F02F         	goto	u10988
 11131  005F6A                     u10970:
 11132  005F6A  6A0B               	clrf	??_I2C_2_Master_Read^0,c
 11133  005F6C                     u10988:
 11134  005F6C  3A0B               	swapf	??_I2C_2_Master_Read^0,f,c
 11135  005F6E  460B               	rlncf	??_I2C_2_Master_Read^0,f,c
 11136  005F70  010E               	movlb	14	; () banked
 11137  005F72  51DA               	movf	218,w,b	;volatile
 11138  005F74  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
 11139  005F76  0BDF               	andlw	-33
 11140  005F78  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
 11141  005F7A  6FDA               	movwf	218,b	;volatile
 11142  005F7C                     
 11143                           ; BSR set to: 14
 11144                           ;I2C.c: 88:   SSP2CON2bits.ACKEN = 1;
 11145  005F7C  89DA               	bsf	218,4,b	;volatile
 11146  005F7E                     
 11147                           ; BSR set to: 14
 11148                           ;I2C.c: 89:   return tmp;
 11149  005F7E  500D               	movf	I2C_2_Master_Read@tmp^0,w,c
 11150  005F80                     
 11151                           ; BSR set to: 14
 11152  005F80  0012               	return		;funcret
 11153  005F82                     __end_of_I2C_2_Master_Read:
 11154                           	callstack 0
 11155                           
 11156 ;; *************** function _I2C_2_Master_Idle *****************
 11157 ;; Defined at:
 11158 ;;		line 30 in file "I2C.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;		None
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  1    wreg      void 
 11165 ;; Registers used:
 11166 ;;		wreg, status,2, status,0
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11176 ;;Total ram usage:        1 bytes
 11177 ;; Hardware stack levels used: 1
 11178 ;; Hardware stack levels required when called: 7
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_I2C_2_Master_Start
 11183 ;;		_I2C_2_Master_RepStart
 11184 ;;		_I2C_2_Master_Stop
 11185 ;;		_I2C_2_Master_Write
 11186 ;;		_I2C_2_Master_Read
 11187 ;; This function uses a non-reentrant model
 11188 ;;
 11189                           
 11190                           	psect	text54
 11191  0060FC                     __ptext54:
 11192                           	callstack 0
 11193  0060FC                     _I2C_2_Master_Idle:
 11194                           	callstack 18
 11195  0060FC                     l476:
 11196  0060FC  010E               	movlb	14	; () banked
 11197  0060FE  B5D8               	btfsc	216,2,b	;volatile
 11198  006100  EF84  F030         	goto	u10041
 11199  006104  EF86  F030         	goto	u10040
 11200  006108                     u10041:
 11201  006108  EF7E  F030         	goto	l476
 11202  00610C                     u10040:
 11203  00610C                     
 11204                           ; BSR set to: 14
 11205  00610C  CEDA F00A          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11206  006110  0E1F               	movlw	31
 11207  006112  160A               	andwf	??_I2C_2_Master_Idle^0,f,c
 11208  006114  A4D8               	btfss	status,2,c
 11209  006116  EF8F  F030         	goto	u10051
 11210  00611A  EF91  F030         	goto	u10050
 11211  00611E                     u10051:
 11212  00611E  EF7E  F030         	goto	l476
 11213  006122                     u10050:
 11214  006122                     
 11215                           ; BSR set to: 14
 11216  006122  0012               	return		;funcret
 11217  006124                     __end_of_I2C_2_Master_Idle:
 11218                           	callstack 0
 11219                           
 11220 ;; *************** function _colourclickLEDs_C *****************
 11221 ;; Defined at:
 11222 ;;		line 84 in file "buttons_n_LEDs.c"
 11223 ;; Parameters:    Size  Location     Type
 11224 ;;  tog             1    wreg     unsigned char 
 11225 ;; Auto vars:     Size  Location     Type
 11226 ;;  tog             1    9[COMRAM] unsigned char 
 11227 ;; Return value:  Size  Location     Type
 11228 ;;                  1    wreg      void 
 11229 ;; Registers used:
 11230 ;;		wreg
 11231 ;; Tracked objects:
 11232 ;;		On entry : 0/0
 11233 ;;		On exit  : 0/0
 11234 ;;		Unchanged: 0/0
 11235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11240 ;;Total ram usage:        1 bytes
 11241 ;; Hardware stack levels used: 1
 11242 ;; Hardware stack levels required when called: 7
 11243 ;; This function calls:
 11244 ;;		Nothing
 11245 ;; This function is called by:
 11246 ;;		_main
 11247 ;;		_colourclick_readRGBC2
 11248 ;;		_colourclick_calibration
 11249 ;;		_colourclickLEDs_init
 11250 ;;		_colourcards_testingRGBC
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           	psect	text55
 11255  006196                     __ptext55:
 11256                           	callstack 0
 11257  006196                     _colourclickLEDs_C:
 11258                           	callstack 21
 11259                           
 11260                           ; BSR set to: 14
 11261                           ;incstack = 0
 11262                           ;colourclickLEDs_C@tog stored from wreg
 11263  006196  6E0A               	movwf	colourclickLEDs_C@tog^0,c
 11264  006198                     
 11265                           ;buttons_n_LEDs.c: 84: void colourclickLEDs_C(unsigned char tog);buttons_n_LEDs.c: 85: {
      +                          ;buttons_n_LEDs.c: 86:     LATGbits.LATG1 = tog;
 11266  006198  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
 11267  00619A  D002               	bra	u11325
 11268  00619C  927F               	bcf	127,1,c	;volatile
 11269  00619E  D001               	bra	u11326
 11270  0061A0                     u11325:
 11271  0061A0  827F               	bsf	127,1,c	;volatile
 11272  0061A2                     u11326:
 11273                           
 11274                           ;buttons_n_LEDs.c: 87:     LATAbits.LATA4 = tog;
 11275  0061A2  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
 11276  0061A4  D002               	bra	u11335
 11277  0061A6  9879               	bcf	121,4,c	;volatile
 11278  0061A8  D001               	bra	u11336
 11279  0061AA                     u11335:
 11280  0061AA  8879               	bsf	121,4,c	;volatile
 11281  0061AC                     u11336:
 11282                           
 11283                           ;buttons_n_LEDs.c: 88:     LATFbits.LATF7 = tog;
 11284  0061AC  B00A               	btfsc	colourclickLEDs_C@tog^0,0,c
 11285  0061AE  D002               	bra	u11345
 11286  0061B0  9E7E               	bcf	126,7,c	;volatile
 11287  0061B2  D001               	bra	u11346
 11288  0061B4                     u11345:
 11289  0061B4  8E7E               	bsf	126,7,c	;volatile
 11290  0061B6                     u11346:
 11291  0061B6  0012               	return		;funcret
 11292  0061B8                     __end_of_colourclickLEDs_C:
 11293                           	callstack 0
 11294                           
 11295 ;; *************** function _colourcards_normaliseRGBC *****************
 11296 ;; Defined at:
 11297 ;;		line 209 in file "colour_cards.c"
 11298 ;; Parameters:    Size  Location     Type
 11299 ;;  abs             2   48[COMRAM] PTR struct .
 11300 ;;		 -> colourcards_testingRGBC@abs(8), main@current(8), 
 11301 ;;  rel             2   50[COMRAM] PTR struct .
 11302 ;;		 -> colourcards_testingRGBC@rel(12), colourcards_readRGBC@rel(12), 
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;  C               2   58[COMRAM] unsigned int 
 11305 ;;  B               2   56[COMRAM] unsigned int 
 11306 ;;  G               2   54[COMRAM] unsigned int 
 11307 ;;  R               2   52[COMRAM] unsigned int 
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  1    wreg      void 
 11310 ;; Registers used:
 11311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11318 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11321 ;;Total ram usage:       12 bytes
 11322 ;; Hardware stack levels used: 1
 11323 ;; Hardware stack levels required when called: 8
 11324 ;; This function calls:
 11325 ;;		___fldiv
 11326 ;;		___xxtofl
 11327 ;; This function is called by:
 11328 ;;		_colourcards_readRGBC
 11329 ;;		_colourcards_testingRGBC
 11330 ;; This function uses a non-reentrant model
 11331 ;;
 11332                           
 11333                           	psect	text56
 11334  0045B6                     __ptext56:
 11335                           	callstack 0
 11336  0045B6                     _colourcards_normaliseRGBC:
 11337                           	callstack 21
 11338  0045B6                     
 11339                           ;colour_cards.c: 209: void colourcards_normaliseRGBC(RGBC_val *abs, RGB_rel *rel);colour
      +                          _cards.c: 210: {;colour_cards.c: 211:     unsigned int R = abs->R;
 11340  0045B6  C031  FFD9         	movff	colourcards_normaliseRGBC@abs,fsr2l
 11341  0045BA  C032  FFDA         	movff	colourcards_normaliseRGBC@abs+1,fsr2h
 11342  0045BE  CFDE F035          	movff	postinc2,colourcards_normaliseRGBC@R
 11343  0045C2  CFDD F036          	movff	postdec2,colourcards_normaliseRGBC@R+1
 11344  0045C6                     
 11345                           ;colour_cards.c: 212:     unsigned int G = abs->G;
 11346  0045C6  EE20 F002          	lfsr	2,2
 11347  0045CA  5031               	movf	colourcards_normaliseRGBC@abs^0,w,c
 11348  0045CC  26D9               	addwf	fsr2l,f,c
 11349  0045CE  5032               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 11350  0045D0  22DA               	addwfc	fsr2h,f,c
 11351  0045D2  CFDE F037          	movff	postinc2,colourcards_normaliseRGBC@G
 11352  0045D6  CFDD F038          	movff	postdec2,colourcards_normaliseRGBC@G+1
 11353  0045DA                     
 11354                           ;colour_cards.c: 213:     unsigned int B = abs->B;
 11355  0045DA  EE20 F004          	lfsr	2,4
 11356  0045DE  5031               	movf	colourcards_normaliseRGBC@abs^0,w,c
 11357  0045E0  26D9               	addwf	fsr2l,f,c
 11358  0045E2  5032               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 11359  0045E4  22DA               	addwfc	fsr2h,f,c
 11360  0045E6  CFDE F039          	movff	postinc2,colourcards_normaliseRGBC@B
 11361  0045EA  CFDD F03A          	movff	postdec2,colourcards_normaliseRGBC@B+1
 11362  0045EE                     
 11363                           ;colour_cards.c: 214:     unsigned int C = abs->C;
 11364  0045EE  EE20 F006          	lfsr	2,6
 11365  0045F2  5031               	movf	colourcards_normaliseRGBC@abs^0,w,c
 11366  0045F4  26D9               	addwf	fsr2l,f,c
 11367  0045F6  5032               	movf	(colourcards_normaliseRGBC@abs+1)^0,w,c
 11368  0045F8  22DA               	addwfc	fsr2h,f,c
 11369  0045FA  CFDE F03B          	movff	postinc2,colourcards_normaliseRGBC@C
 11370  0045FE  CFDD F03C          	movff	postdec2,colourcards_normaliseRGBC@C+1
 11371  004602                     
 11372                           ;colour_cards.c: 216:     rel->R = (float)R/(float)C;
 11373  004602  C035  F00A         	movff	colourcards_normaliseRGBC@R,___xxtofl@val
 11374  004606  C036  F00B         	movff	colourcards_normaliseRGBC@R+1,___xxtofl@val+1
 11375  00460A  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11376  00460C  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11377  00460E  0E00               	movlw	0
 11378  004610  ECDB  F01E         	call	___xxtofl
 11379  004614  C00A  F018         	movff	?___xxtofl,___fldiv@b
 11380  004618  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
 11381  00461C  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
 11382  004620  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
 11383  004624  C03B  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 11384  004628  C03C  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 11385  00462C  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11386  00462E  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11387  004630  0E00               	movlw	0
 11388  004632  ECDB  F01E         	call	___xxtofl
 11389  004636  C00A  F01C         	movff	?___xxtofl,___fldiv@a
 11390  00463A  C00B  F01D         	movff	?___xxtofl+1,___fldiv@a+1
 11391  00463E  C00C  F01E         	movff	?___xxtofl+2,___fldiv@a+2
 11392  004642  C00D  F01F         	movff	?___xxtofl+3,___fldiv@a+3
 11393  004646  ECBF  F018         	call	___fldiv	;wreg free
 11394  00464A  C033  FFD9         	movff	colourcards_normaliseRGBC@rel,fsr2l
 11395  00464E  C034  FFDA         	movff	colourcards_normaliseRGBC@rel+1,fsr2h
 11396  004652  C018  FFDE         	movff	?___fldiv,postinc2
 11397  004656  C019  FFDE         	movff	?___fldiv+1,postinc2
 11398  00465A  C01A  FFDE         	movff	?___fldiv+2,postinc2
 11399  00465E  C01B  FFDE         	movff	?___fldiv+3,postinc2
 11400  004662                     
 11401                           ;colour_cards.c: 217:     rel->G = (float)G/(float)C;
 11402  004662  C037  F00A         	movff	colourcards_normaliseRGBC@G,___xxtofl@val
 11403  004666  C038  F00B         	movff	colourcards_normaliseRGBC@G+1,___xxtofl@val+1
 11404  00466A  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11405  00466C  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11406  00466E  0E00               	movlw	0
 11407  004670  ECDB  F01E         	call	___xxtofl
 11408  004674  C00A  F018         	movff	?___xxtofl,___fldiv@b
 11409  004678  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
 11410  00467C  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
 11411  004680  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
 11412  004684  C03B  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 11413  004688  C03C  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 11414  00468C  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11415  00468E  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11416  004690  0E00               	movlw	0
 11417  004692  ECDB  F01E         	call	___xxtofl
 11418  004696  C00A  F01C         	movff	?___xxtofl,___fldiv@a
 11419  00469A  C00B  F01D         	movff	?___xxtofl+1,___fldiv@a+1
 11420  00469E  C00C  F01E         	movff	?___xxtofl+2,___fldiv@a+2
 11421  0046A2  C00D  F01F         	movff	?___xxtofl+3,___fldiv@a+3
 11422  0046A6  ECBF  F018         	call	___fldiv	;wreg free
 11423  0046AA  EE20 F004          	lfsr	2,4
 11424  0046AE  5033               	movf	colourcards_normaliseRGBC@rel^0,w,c
 11425  0046B0  26D9               	addwf	fsr2l,f,c
 11426  0046B2  5034               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
 11427  0046B4  22DA               	addwfc	fsr2h,f,c
 11428  0046B6  C018  FFDE         	movff	?___fldiv,postinc2
 11429  0046BA  C019  FFDE         	movff	?___fldiv+1,postinc2
 11430  0046BE  C01A  FFDE         	movff	?___fldiv+2,postinc2
 11431  0046C2  C01B  FFDE         	movff	?___fldiv+3,postinc2
 11432  0046C6                     
 11433                           ;colour_cards.c: 218:     rel->B = (float)B/(float)C;
 11434  0046C6  C039  F00A         	movff	colourcards_normaliseRGBC@B,___xxtofl@val
 11435  0046CA  C03A  F00B         	movff	colourcards_normaliseRGBC@B+1,___xxtofl@val+1
 11436  0046CE  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11437  0046D0  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11438  0046D2  0E00               	movlw	0
 11439  0046D4  ECDB  F01E         	call	___xxtofl
 11440  0046D8  C00A  F018         	movff	?___xxtofl,___fldiv@b
 11441  0046DC  C00B  F019         	movff	?___xxtofl+1,___fldiv@b+1
 11442  0046E0  C00C  F01A         	movff	?___xxtofl+2,___fldiv@b+2
 11443  0046E4  C00D  F01B         	movff	?___xxtofl+3,___fldiv@b+3
 11444  0046E8  C03B  F00A         	movff	colourcards_normaliseRGBC@C,___xxtofl@val
 11445  0046EC  C03C  F00B         	movff	colourcards_normaliseRGBC@C+1,___xxtofl@val+1
 11446  0046F0  6A0C               	clrf	(___xxtofl@val+2)^0,c
 11447  0046F2  6A0D               	clrf	(___xxtofl@val+3)^0,c
 11448  0046F4  0E00               	movlw	0
 11449  0046F6  ECDB  F01E         	call	___xxtofl
 11450  0046FA  C00A  F01C         	movff	?___xxtofl,___fldiv@a
 11451  0046FE  C00B  F01D         	movff	?___xxtofl+1,___fldiv@a+1
 11452  004702  C00C  F01E         	movff	?___xxtofl+2,___fldiv@a+2
 11453  004706  C00D  F01F         	movff	?___xxtofl+3,___fldiv@a+3
 11454  00470A  ECBF  F018         	call	___fldiv	;wreg free
 11455  00470E  EE20 F008          	lfsr	2,8
 11456  004712  5033               	movf	colourcards_normaliseRGBC@rel^0,w,c
 11457  004714  26D9               	addwf	fsr2l,f,c
 11458  004716  5034               	movf	(colourcards_normaliseRGBC@rel+1)^0,w,c
 11459  004718  22DA               	addwfc	fsr2h,f,c
 11460  00471A  C018  FFDE         	movff	?___fldiv,postinc2
 11461  00471E  C019  FFDE         	movff	?___fldiv+1,postinc2
 11462  004722  C01A  FFDE         	movff	?___fldiv+2,postinc2
 11463  004726  C01B  FFDE         	movff	?___fldiv+3,postinc2
 11464  00472A  0012               	return		;funcret
 11465  00472C                     __end_of_colourcards_normaliseRGBC:
 11466                           	callstack 0
 11467                           
 11468 ;; *************** function ___fldiv *****************
 11469 ;; Defined at:
 11470 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;  b               4   23[COMRAM] void 
 11473 ;;  a               4   27[COMRAM] void 
 11474 ;; Auto vars:     Size  Location     Type
 11475 ;;  grs             4   42[COMRAM] unsigned long 
 11476 ;;  rem             4   35[COMRAM] unsigned long 
 11477 ;;  new_exp         2   40[COMRAM] short 
 11478 ;;  aexp            1   47[COMRAM] unsigned char 
 11479 ;;  bexp            1   46[COMRAM] unsigned char 
 11480 ;;  sign            1   39[COMRAM] unsigned char 
 11481 ;; Return value:  Size  Location     Type
 11482 ;;                  4   23[COMRAM] unsigned char 
 11483 ;; Registers used:
 11484 ;;		wreg, status,2, status,0
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/0
 11487 ;;		On exit  : 0/0
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11490 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11491 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11493 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11494 ;;Total ram usage:       25 bytes
 11495 ;; Hardware stack levels used: 1
 11496 ;; Hardware stack levels required when called: 7
 11497 ;; This function calls:
 11498 ;;		Nothing
 11499 ;; This function is called by:
 11500 ;;		_colourcards_normaliseRGBC
 11501 ;;		_efgtoa
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505                           	psect	text57
 11506  00317E                     __ptext57:
 11507                           	callstack 0
 11508  00317E                     ___fldiv:
 11509                           	callstack 17
 11510  00317E  501B               	movf	(___fldiv@b+3)^0,w,c
 11511  003180  0B80               	andlw	128
 11512  003182  6E28               	movwf	___fldiv@sign^0,c
 11513  003184  501B               	movf	(___fldiv@b+3)^0,w,c
 11514  003186  241B               	addwf	(___fldiv@b+3)^0,w,c
 11515  003188  6E2F               	movwf	___fldiv@bexp^0,c
 11516  00318A  AE1A               	btfss	(___fldiv@b+2)^0,7,c
 11517  00318C  EFCA  F018         	goto	u9031
 11518  003190  EFCC  F018         	goto	u9030
 11519  003194                     u9031:
 11520  003194  EFCD  F018         	goto	l7212
 11521  003198                     u9030:
 11522  003198  802F               	bsf	___fldiv@bexp^0,0,c
 11523  00319A                     l7212:
 11524  00319A  502F               	movf	___fldiv@bexp^0,w,c
 11525  00319C  B4D8               	btfsc	status,2,c
 11526  00319E  EFD3  F018         	goto	u9041
 11527  0031A2  EFD5  F018         	goto	u9040
 11528  0031A6                     u9041:
 11529  0031A6  EFEA  F018         	goto	l7222
 11530  0031AA                     u9040:
 11531  0031AA  282F               	incf	___fldiv@bexp^0,w,c
 11532  0031AC  A4D8               	btfss	status,2,c
 11533  0031AE  EFDB  F018         	goto	u9051
 11534  0031B2  EFDD  F018         	goto	u9050
 11535  0031B6                     u9051:
 11536  0031B6  EFE5  F018         	goto	l7218
 11537  0031BA                     u9050:
 11538  0031BA  0E00               	movlw	0
 11539  0031BC  6E18               	movwf	___fldiv@b^0,c
 11540  0031BE  0E00               	movlw	0
 11541  0031C0  6E19               	movwf	(___fldiv@b+1)^0,c
 11542  0031C2  0E00               	movlw	0
 11543  0031C4  6E1A               	movwf	(___fldiv@b+2)^0,c
 11544  0031C6  0E00               	movlw	0
 11545  0031C8  6E1B               	movwf	(___fldiv@b+3)^0,c
 11546  0031CA                     l7218:
 11547  0031CA  8E1A               	bsf	(___fldiv@b+2)^0,7,c
 11548  0031CC  0E00               	movlw	0
 11549  0031CE  6E1B               	movwf	(___fldiv@b+3)^0,c
 11550  0031D0  EFF2  F018         	goto	l7224
 11551  0031D4                     l7222:
 11552  0031D4  0E00               	movlw	0
 11553  0031D6  6E18               	movwf	___fldiv@b^0,c
 11554  0031D8  0E00               	movlw	0
 11555  0031DA  6E19               	movwf	(___fldiv@b+1)^0,c
 11556  0031DC  0E00               	movlw	0
 11557  0031DE  6E1A               	movwf	(___fldiv@b+2)^0,c
 11558  0031E0  0E00               	movlw	0
 11559  0031E2  6E1B               	movwf	(___fldiv@b+3)^0,c
 11560  0031E4                     l7224:
 11561  0031E4  501F               	movf	(___fldiv@a+3)^0,w,c
 11562  0031E6  0B80               	andlw	128
 11563  0031E8  1A28               	xorwf	___fldiv@sign^0,f,c
 11564  0031EA  501F               	movf	(___fldiv@a+3)^0,w,c
 11565  0031EC  241F               	addwf	(___fldiv@a+3)^0,w,c
 11566  0031EE  6E30               	movwf	___fldiv@aexp^0,c
 11567  0031F0  AE1E               	btfss	(___fldiv@a+2)^0,7,c
 11568  0031F2  EFFD  F018         	goto	u9061
 11569  0031F6  EFFF  F018         	goto	u9060
 11570  0031FA                     u9061:
 11571  0031FA  EF00  F019         	goto	l7232
 11572  0031FE                     u9060:
 11573  0031FE  8030               	bsf	___fldiv@aexp^0,0,c
 11574  003200                     l7232:
 11575  003200  5030               	movf	___fldiv@aexp^0,w,c
 11576  003202  B4D8               	btfsc	status,2,c
 11577  003204  EF06  F019         	goto	u9071
 11578  003208  EF08  F019         	goto	u9070
 11579  00320C                     u9071:
 11580  00320C  EF1D  F019         	goto	l7242
 11581  003210                     u9070:
 11582  003210  2830               	incf	___fldiv@aexp^0,w,c
 11583  003212  A4D8               	btfss	status,2,c
 11584  003214  EF0E  F019         	goto	u9081
 11585  003218  EF10  F019         	goto	u9080
 11586  00321C                     u9081:
 11587  00321C  EF18  F019         	goto	l7238
 11588  003220                     u9080:
 11589  003220  0E00               	movlw	0
 11590  003222  6E1C               	movwf	___fldiv@a^0,c
 11591  003224  0E00               	movlw	0
 11592  003226  6E1D               	movwf	(___fldiv@a+1)^0,c
 11593  003228  0E00               	movlw	0
 11594  00322A  6E1E               	movwf	(___fldiv@a+2)^0,c
 11595  00322C  0E00               	movlw	0
 11596  00322E  6E1F               	movwf	(___fldiv@a+3)^0,c
 11597  003230                     l7238:
 11598  003230  8E1E               	bsf	(___fldiv@a+2)^0,7,c
 11599  003232  0E00               	movlw	0
 11600  003234  6E1F               	movwf	(___fldiv@a+3)^0,c
 11601  003236  EF25  F019         	goto	l7244
 11602  00323A                     l7242:
 11603  00323A  0E00               	movlw	0
 11604  00323C  6E1C               	movwf	___fldiv@a^0,c
 11605  00323E  0E00               	movlw	0
 11606  003240  6E1D               	movwf	(___fldiv@a+1)^0,c
 11607  003242  0E00               	movlw	0
 11608  003244  6E1E               	movwf	(___fldiv@a+2)^0,c
 11609  003246  0E00               	movlw	0
 11610  003248  6E1F               	movwf	(___fldiv@a+3)^0,c
 11611  00324A                     l7244:
 11612  00324A  501C               	movf	___fldiv@a^0,w,c
 11613  00324C  101D               	iorwf	(___fldiv@a+1)^0,w,c
 11614  00324E  101E               	iorwf	(___fldiv@a+2)^0,w,c
 11615  003250  101F               	iorwf	(___fldiv@a+3)^0,w,c
 11616  003252  A4D8               	btfss	status,2,c
 11617  003254  EF2E  F019         	goto	u9091
 11618  003258  EF30  F019         	goto	u9090
 11619  00325C                     u9091:
 11620  00325C  EF48  F019         	goto	l7256
 11621  003260                     u9090:
 11622  003260  0E00               	movlw	0
 11623  003262  6E18               	movwf	___fldiv@b^0,c
 11624  003264  0E00               	movlw	0
 11625  003266  6E19               	movwf	(___fldiv@b+1)^0,c
 11626  003268  0E00               	movlw	0
 11627  00326A  6E1A               	movwf	(___fldiv@b+2)^0,c
 11628  00326C  0E00               	movlw	0
 11629  00326E  6E1B               	movwf	(___fldiv@b+3)^0,c
 11630  003270  0E80               	movlw	128
 11631  003272  121A               	iorwf	(___fldiv@b+2)^0,f,c
 11632  003274  0E7F               	movlw	127
 11633  003276  121B               	iorwf	(___fldiv@b+3)^0,f,c
 11634  003278                     l7250:
 11635  003278  5028               	movf	___fldiv@sign^0,w,c
 11636  00327A  121B               	iorwf	(___fldiv@b+3)^0,f,c
 11637  00327C  C018  F018         	movff	___fldiv@b,?___fldiv
 11638  003280  C019  F019         	movff	___fldiv@b+1,?___fldiv+1
 11639  003284  C01A  F01A         	movff	___fldiv@b+2,?___fldiv+2
 11640  003288  C01B  F01B         	movff	___fldiv@b+3,?___fldiv+3
 11641  00328C  EF8B  F01A         	goto	l1382
 11642  003290                     l7256:
 11643  003290  502F               	movf	___fldiv@bexp^0,w,c
 11644  003292  A4D8               	btfss	status,2,c
 11645  003294  EF4E  F019         	goto	u9101
 11646  003298  EF50  F019         	goto	u9100
 11647  00329C                     u9101:
 11648  00329C  EF5A  F019         	goto	l7264
 11649  0032A0                     u9100:
 11650  0032A0  0E00               	movlw	0
 11651  0032A2  6E18               	movwf	?___fldiv^0,c
 11652  0032A4  0E00               	movlw	0
 11653  0032A6  6E19               	movwf	(?___fldiv+1)^0,c
 11654  0032A8  0E00               	movlw	0
 11655  0032AA  6E1A               	movwf	(?___fldiv+2)^0,c
 11656  0032AC  0E00               	movlw	0
 11657  0032AE  6E1B               	movwf	(?___fldiv+3)^0,c
 11658  0032B0  EF8B  F01A         	goto	l1382
 11659  0032B4                     l7264:
 11660  0032B4  5030               	movf	___fldiv@aexp^0,w,c
 11661  0032B6  C02F  F020         	movff	___fldiv@bexp,??___fldiv
 11662  0032BA  6A21               	clrf	(??___fldiv+1)^0,c
 11663  0032BC  5E20               	subwf	??___fldiv^0,f,c
 11664  0032BE  0E00               	movlw	0
 11665  0032C0  5A21               	subwfb	(??___fldiv+1)^0,f,c
 11666  0032C2  0E7F               	movlw	127
 11667  0032C4  2420               	addwf	??___fldiv^0,w,c
 11668  0032C6  6E29               	movwf	___fldiv@new_exp^0,c
 11669  0032C8  0E00               	movlw	0
 11670  0032CA  2021               	addwfc	(??___fldiv+1)^0,w,c
 11671  0032CC  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 11672  0032CE  C018  F024         	movff	___fldiv@b,___fldiv@rem
 11673  0032D2  C019  F025         	movff	___fldiv@b+1,___fldiv@rem+1
 11674  0032D6  C01A  F026         	movff	___fldiv@b+2,___fldiv@rem+2
 11675  0032DA  C01B  F027         	movff	___fldiv@b+3,___fldiv@rem+3
 11676  0032DE  0E00               	movlw	0
 11677  0032E0  6E18               	movwf	___fldiv@b^0,c
 11678  0032E2  0E00               	movlw	0
 11679  0032E4  6E19               	movwf	(___fldiv@b+1)^0,c
 11680  0032E6  0E00               	movlw	0
 11681  0032E8  6E1A               	movwf	(___fldiv@b+2)^0,c
 11682  0032EA  0E00               	movlw	0
 11683  0032EC  6E1B               	movwf	(___fldiv@b+3)^0,c
 11684  0032EE  0E00               	movlw	0
 11685  0032F0  6E2B               	movwf	___fldiv@grs^0,c
 11686  0032F2  0E00               	movlw	0
 11687  0032F4  6E2C               	movwf	(___fldiv@grs+1)^0,c
 11688  0032F6  0E00               	movlw	0
 11689  0032F8  6E2D               	movwf	(___fldiv@grs+2)^0,c
 11690  0032FA  0E00               	movlw	0
 11691  0032FC  6E2E               	movwf	(___fldiv@grs+3)^0,c
 11692  0032FE  0E00               	movlw	0
 11693  003300  6E30               	movwf	___fldiv@aexp^0,c
 11694  003302  EFBB  F019         	goto	l1384
 11695  003306                     l7274:
 11696  003306  5030               	movf	___fldiv@aexp^0,w,c
 11697  003308  B4D8               	btfsc	status,2,c
 11698  00330A  EF89  F019         	goto	u9111
 11699  00330E  EF8B  F019         	goto	u9110
 11700  003312                     u9111:
 11701  003312  EFA2  F019         	goto	l7282
 11702  003316                     u9110:
 11703  003316  90D8               	bcf	status,0,c
 11704  003318  3624               	rlcf	___fldiv@rem^0,f,c
 11705  00331A  3625               	rlcf	(___fldiv@rem+1)^0,f,c
 11706  00331C  3626               	rlcf	(___fldiv@rem+2)^0,f,c
 11707  00331E  3627               	rlcf	(___fldiv@rem+3)^0,f,c
 11708  003320  90D8               	bcf	status,0,c
 11709  003322  3618               	rlcf	___fldiv@b^0,f,c
 11710  003324  3619               	rlcf	(___fldiv@b+1)^0,f,c
 11711  003326  361A               	rlcf	(___fldiv@b+2)^0,f,c
 11712  003328  361B               	rlcf	(___fldiv@b+3)^0,f,c
 11713  00332A  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
 11714  00332C  EF9A  F019         	goto	u9121
 11715  003330  EF9C  F019         	goto	u9120
 11716  003334                     u9121:
 11717  003334  EF9D  F019         	goto	l1387
 11718  003338                     u9120:
 11719  003338  8018               	bsf	___fldiv@b^0,0,c
 11720  00333A                     l1387:
 11721  00333A  90D8               	bcf	status,0,c
 11722  00333C  362B               	rlcf	___fldiv@grs^0,f,c
 11723  00333E  362C               	rlcf	(___fldiv@grs+1)^0,f,c
 11724  003340  362D               	rlcf	(___fldiv@grs+2)^0,f,c
 11725  003342  362E               	rlcf	(___fldiv@grs+3)^0,f,c
 11726  003344                     l7282:
 11727  003344  501C               	movf	___fldiv@a^0,w,c
 11728  003346  5C24               	subwf	___fldiv@rem^0,w,c
 11729  003348  501D               	movf	(___fldiv@a+1)^0,w,c
 11730  00334A  5825               	subwfb	(___fldiv@rem+1)^0,w,c
 11731  00334C  501E               	movf	(___fldiv@a+2)^0,w,c
 11732  00334E  5826               	subwfb	(___fldiv@rem+2)^0,w,c
 11733  003350  501F               	movf	(___fldiv@a+3)^0,w,c
 11734  003352  5827               	subwfb	(___fldiv@rem+3)^0,w,c
 11735  003354  A0D8               	btfss	status,0,c
 11736  003356  EFAF  F019         	goto	u9131
 11737  00335A  EFB1  F019         	goto	u9130
 11738  00335E                     u9131:
 11739  00335E  EFBA  F019         	goto	l7288
 11740  003362                     u9130:
 11741  003362  8C2E               	bsf	(___fldiv@grs+3)^0,6,c
 11742  003364  501C               	movf	___fldiv@a^0,w,c
 11743  003366  5E24               	subwf	___fldiv@rem^0,f,c
 11744  003368  501D               	movf	(___fldiv@a+1)^0,w,c
 11745  00336A  5A25               	subwfb	(___fldiv@rem+1)^0,f,c
 11746  00336C  501E               	movf	(___fldiv@a+2)^0,w,c
 11747  00336E  5A26               	subwfb	(___fldiv@rem+2)^0,f,c
 11748  003370  501F               	movf	(___fldiv@a+3)^0,w,c
 11749  003372  5A27               	subwfb	(___fldiv@rem+3)^0,f,c
 11750  003374                     l7288:
 11751  003374  2A30               	incf	___fldiv@aexp^0,f,c
 11752  003376                     l1384:
 11753  003376  0E19               	movlw	25
 11754  003378  6430               	cpfsgt	___fldiv@aexp^0,c
 11755  00337A  EFC1  F019         	goto	u9141
 11756  00337E  EFC3  F019         	goto	u9140
 11757  003382                     u9141:
 11758  003382  EF83  F019         	goto	l7274
 11759  003386                     u9140:
 11760  003386  5024               	movf	___fldiv@rem^0,w,c
 11761  003388  1025               	iorwf	(___fldiv@rem+1)^0,w,c
 11762  00338A  1026               	iorwf	(___fldiv@rem+2)^0,w,c
 11763  00338C  1027               	iorwf	(___fldiv@rem+3)^0,w,c
 11764  00338E  B4D8               	btfsc	status,2,c
 11765  003390  EFCC  F019         	goto	u9151
 11766  003394  EFCE  F019         	goto	u9150
 11767  003398                     u9151:
 11768  003398  EFE6  F019         	goto	l7300
 11769  00339C                     u9150:
 11770  00339C  802B               	bsf	___fldiv@grs^0,0,c
 11771  00339E  EFE6  F019         	goto	l7300
 11772  0033A2                     l7294:
 11773  0033A2  90D8               	bcf	status,0,c
 11774  0033A4  3618               	rlcf	___fldiv@b^0,f,c
 11775  0033A6  3619               	rlcf	(___fldiv@b+1)^0,f,c
 11776  0033A8  361A               	rlcf	(___fldiv@b+2)^0,f,c
 11777  0033AA  361B               	rlcf	(___fldiv@b+3)^0,f,c
 11778  0033AC  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
 11779  0033AE  EFDB  F019         	goto	u9161
 11780  0033B2  EFDD  F019         	goto	u9160
 11781  0033B6                     u9161:
 11782  0033B6  EFDE  F019         	goto	l1393
 11783  0033BA                     u9160:
 11784  0033BA  8018               	bsf	___fldiv@b^0,0,c
 11785  0033BC                     l1393:
 11786  0033BC  90D8               	bcf	status,0,c
 11787  0033BE  362B               	rlcf	___fldiv@grs^0,f,c
 11788  0033C0  362C               	rlcf	(___fldiv@grs+1)^0,f,c
 11789  0033C2  362D               	rlcf	(___fldiv@grs+2)^0,f,c
 11790  0033C4  362E               	rlcf	(___fldiv@grs+3)^0,f,c
 11791  0033C6  0629               	decf	___fldiv@new_exp^0,f,c
 11792  0033C8  A0D8               	btfss	status,0,c
 11793  0033CA  062A               	decf	(___fldiv@new_exp+1)^0,f,c
 11794  0033CC                     l7300:
 11795  0033CC  AE1A               	btfss	(___fldiv@b+2)^0,7,c
 11796  0033CE  EFEB  F019         	goto	u9171
 11797  0033D2  EFED  F019         	goto	u9170
 11798  0033D6                     u9171:
 11799  0033D6  EFD1  F019         	goto	l7294
 11800  0033DA                     u9170:
 11801  0033DA  0E00               	movlw	0
 11802  0033DC  6E30               	movwf	___fldiv@aexp^0,c
 11803  0033DE  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
 11804  0033E0  EFF4  F019         	goto	u9181
 11805  0033E4  EFF6  F019         	goto	u9180
 11806  0033E8                     u9181:
 11807  0033E8  EF1A  F01A         	goto	l1395
 11808  0033EC                     u9180:
 11809  0033EC  0EFF               	movlw	255
 11810  0033EE  142B               	andwf	___fldiv@grs^0,w,c
 11811  0033F0  6E20               	movwf	??___fldiv^0,c
 11812  0033F2  0EFF               	movlw	255
 11813  0033F4  142C               	andwf	(___fldiv@grs+1)^0,w,c
 11814  0033F6  6E21               	movwf	(??___fldiv+1)^0,c
 11815  0033F8  0EFF               	movlw	255
 11816  0033FA  142D               	andwf	(___fldiv@grs+2)^0,w,c
 11817  0033FC  6E22               	movwf	(??___fldiv+2)^0,c
 11818  0033FE  0E7F               	movlw	127
 11819  003400  142E               	andwf	(___fldiv@grs+3)^0,w,c
 11820  003402  6E23               	movwf	(??___fldiv+3)^0,c
 11821  003404  5020               	movf	??___fldiv^0,w,c
 11822  003406  1021               	iorwf	(??___fldiv+1)^0,w,c
 11823  003408  1022               	iorwf	(??___fldiv+2)^0,w,c
 11824  00340A  1023               	iorwf	(??___fldiv+3)^0,w,c
 11825  00340C  B4D8               	btfsc	status,2,c
 11826  00340E  EF0B  F01A         	goto	u9191
 11827  003412  EF0D  F01A         	goto	u9190
 11828  003416                     u9191:
 11829  003416  EF11  F01A         	goto	l1396
 11830  00341A                     u9190:
 11831  00341A                     l7308:
 11832  00341A  0E01               	movlw	1
 11833  00341C  6E30               	movwf	___fldiv@aexp^0,c
 11834  00341E  EF1A  F01A         	goto	l1395
 11835  003422                     l1396:
 11836  003422  A018               	btfss	___fldiv@b^0,0,c
 11837  003424  EF16  F01A         	goto	u9201
 11838  003428  EF18  F01A         	goto	u9200
 11839  00342C                     u9201:
 11840  00342C  EF1A  F01A         	goto	l1395
 11841  003430                     u9200:
 11842  003430  EF0D  F01A         	goto	l7308
 11843  003434                     l1395:
 11844  003434  5030               	movf	___fldiv@aexp^0,w,c
 11845  003436  B4D8               	btfsc	status,2,c
 11846  003438  EF20  F01A         	goto	u9211
 11847  00343C  EF22  F01A         	goto	u9210
 11848  003440                     u9211:
 11849  003440  EF46  F01A         	goto	l7320
 11850  003444                     u9210:
 11851  003444  0E01               	movlw	1
 11852  003446  2618               	addwf	___fldiv@b^0,f,c
 11853  003448  0E00               	movlw	0
 11854  00344A  2219               	addwfc	(___fldiv@b+1)^0,f,c
 11855  00344C  221A               	addwfc	(___fldiv@b+2)^0,f,c
 11856  00344E  221B               	addwfc	(___fldiv@b+3)^0,f,c
 11857  003450  A01B               	btfss	(___fldiv@b+3)^0,0,c
 11858  003452  EF2D  F01A         	goto	u9221
 11859  003456  EF2F  F01A         	goto	u9220
 11860  00345A                     u9221:
 11861  00345A  EF46  F01A         	goto	l7320
 11862  00345E                     u9220:
 11863  00345E  C018  F020         	movff	___fldiv@b,??___fldiv
 11864  003462  C019  F021         	movff	___fldiv@b+1,??___fldiv+1
 11865  003466  C01A  F022         	movff	___fldiv@b+2,??___fldiv+2
 11866  00346A  C01B  F023         	movff	___fldiv@b+3,??___fldiv+3
 11867  00346E  3423               	rlcf	(??___fldiv+3)^0,w,c
 11868  003470  3223               	rrcf	(??___fldiv+3)^0,f,c
 11869  003472  3222               	rrcf	(??___fldiv+2)^0,f,c
 11870  003474  3221               	rrcf	(??___fldiv+1)^0,f,c
 11871  003476  3220               	rrcf	??___fldiv^0,f,c
 11872  003478  C020  F018         	movff	??___fldiv,___fldiv@b
 11873  00347C  C021  F019         	movff	??___fldiv+1,___fldiv@b+1
 11874  003480  C022  F01A         	movff	??___fldiv+2,___fldiv@b+2
 11875  003484  C023  F01B         	movff	??___fldiv+3,___fldiv@b+3
 11876  003488  4A29               	infsnz	___fldiv@new_exp^0,f,c
 11877  00348A  2A2A               	incf	(___fldiv@new_exp+1)^0,f,c
 11878  00348C                     l7320:
 11879  00348C  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11880  00348E  EF51  F01A         	goto	u9231
 11881  003492  502A               	movf	(___fldiv@new_exp+1)^0,w,c
 11882  003494  E108               	bnz	u9230
 11883  003496  2829               	incf	___fldiv@new_exp^0,w,c
 11884  003498  A0D8               	btfss	status,0,c
 11885  00349A  EF51  F01A         	goto	u9231
 11886  00349E  EF53  F01A         	goto	u9230
 11887  0034A2                     u9231:
 11888  0034A2  EF5E  F01A         	goto	l7324
 11889  0034A6                     u9230:
 11890  0034A6  0E00               	movlw	0
 11891  0034A8  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 11892  0034AA  6829               	setf	___fldiv@new_exp^0,c
 11893  0034AC  0E00               	movlw	0
 11894  0034AE  6E18               	movwf	___fldiv@b^0,c
 11895  0034B0  0E00               	movlw	0
 11896  0034B2  6E19               	movwf	(___fldiv@b+1)^0,c
 11897  0034B4  0E00               	movlw	0
 11898  0034B6  6E1A               	movwf	(___fldiv@b+2)^0,c
 11899  0034B8  0E00               	movlw	0
 11900  0034BA  6E1B               	movwf	(___fldiv@b+3)^0,c
 11901  0034BC                     l7324:
 11902  0034BC  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11903  0034BE  EF6B  F01A         	goto	u9240
 11904  0034C2  502A               	movf	(___fldiv@new_exp+1)^0,w,c
 11905  0034C4  E106               	bnz	u9241
 11906  0034C6  0429               	decf	___fldiv@new_exp^0,w,c
 11907  0034C8  B0D8               	btfsc	status,0,c
 11908  0034CA  EF69  F01A         	goto	u9241
 11909  0034CE  EF6B  F01A         	goto	u9240
 11910  0034D2                     u9241:
 11911  0034D2  EF79  F01A         	goto	l7328
 11912  0034D6                     u9240:
 11913  0034D6  0E00               	movlw	0
 11914  0034D8  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 11915  0034DA  0E00               	movlw	0
 11916  0034DC  6E29               	movwf	___fldiv@new_exp^0,c
 11917  0034DE  0E00               	movlw	0
 11918  0034E0  6E18               	movwf	___fldiv@b^0,c
 11919  0034E2  0E00               	movlw	0
 11920  0034E4  6E19               	movwf	(___fldiv@b+1)^0,c
 11921  0034E6  0E00               	movlw	0
 11922  0034E8  6E1A               	movwf	(___fldiv@b+2)^0,c
 11923  0034EA  0E00               	movlw	0
 11924  0034EC  6E1B               	movwf	(___fldiv@b+3)^0,c
 11925  0034EE  0E00               	movlw	0
 11926  0034F0  6E28               	movwf	___fldiv@sign^0,c
 11927  0034F2                     l7328:
 11928  0034F2  C029  F02F         	movff	___fldiv@new_exp,___fldiv@bexp
 11929  0034F6  A02F               	btfss	___fldiv@bexp^0,0,c
 11930  0034F8  EF80  F01A         	goto	u9251
 11931  0034FC  EF82  F01A         	goto	u9250
 11932  003500                     u9251:
 11933  003500  EF85  F01A         	goto	l7334
 11934  003504                     u9250:
 11935  003504  8E1A               	bsf	(___fldiv@b+2)^0,7,c
 11936  003506  EF86  F01A         	goto	l7336
 11937  00350A                     l7334:
 11938  00350A  9E1A               	bcf	(___fldiv@b+2)^0,7,c
 11939  00350C                     l7336:
 11940  00350C  90D8               	bcf	status,0,c
 11941  00350E  302F               	rrcf	___fldiv@bexp^0,w,c
 11942  003510  6E1B               	movwf	(___fldiv@b+3)^0,c
 11943  003512  EF3C  F019         	goto	l7250
 11944  003516                     l1382:
 11945  003516  0012               	return		;funcret
 11946  003518                     __end_of___fldiv:
 11947                           	callstack 0
 11948                           
 11949 ;; *************** function _checkbatterylevel *****************
 11950 ;; Defined at:
 11951 ;;		line 73 in file "DC_motors.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;		None
 11954 ;; Auto vars:     Size  Location     Type
 11955 ;;  batterylevel    1   10[COMRAM] unsigned char 
 11956 ;; Return value:  Size  Location     Type
 11957 ;;                  1    wreg      void 
 11958 ;; Registers used:
 11959 ;;		wreg, status,2, status,0, cstack
 11960 ;; Tracked objects:
 11961 ;;		On entry : 0/0
 11962 ;;		On exit  : 0/0
 11963 ;;		Unchanged: 0/0
 11964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11969 ;;Total ram usage:        1 bytes
 11970 ;; Hardware stack levels used: 1
 11971 ;; Hardware stack levels required when called: 8
 11972 ;; This function calls:
 11973 ;;		_ADC_getval
 11974 ;; This function is called by:
 11975 ;;		_main
 11976 ;; This function uses a non-reentrant model
 11977 ;;
 11978                           
 11979                           	psect	text58
 11980  0061D8                     __ptext58:
 11981                           	callstack 0
 11982  0061D8                     _checkbatterylevel:
 11983                           	callstack 22
 11984  0061D8                     
 11985                           ;DC_motors.c: 75:     unsigned char batterylevel;;DC_motors.c: 76:     batterylevel = AD
      +                          C_getval();
 11986  0061D8  EC4F  F031         	call	_ADC_getval	;wreg free
 11987  0061DC  6E0B               	movwf	checkbatterylevel@batterylevel^0,c
 11988  0061DE                     
 11989                           ;DC_motors.c: 77:     if (batterylevel<100) {LATDbits.LATD7 = 1;}
 11990  0061DE  0E64               	movlw	100
 11991  0061E0  600B               	cpfslt	checkbatterylevel@batterylevel^0,c
 11992  0061E2  EFF5  F030         	goto	u11671
 11993  0061E6  EFF7  F030         	goto	u11670
 11994  0061EA                     u11671:
 11995  0061EA  EFFA  F030         	goto	l653
 11996  0061EE                     u11670:
 11997  0061EE  8E7C               	bsf	124,7,c	;volatile
 11998  0061F0  EFFB  F030         	goto	l655
 11999  0061F4                     l653:
 12000  0061F4  9E7C               	bcf	124,7,c	;volatile
 12001  0061F6                     l655:
 12002  0061F6  0012               	return		;funcret
 12003  0061F8                     __end_of_checkbatterylevel:
 12004                           	callstack 0
 12005                           
 12006 ;; *************** function _ADC_getval *****************
 12007 ;; Defined at:
 12008 ;;		line 26 in file "ADC.c"
 12009 ;; Parameters:    Size  Location     Type
 12010 ;;		None
 12011 ;; Auto vars:     Size  Location     Type
 12012 ;;  tmpval          1    9[COMRAM] unsigned char 
 12013 ;; Return value:  Size  Location     Type
 12014 ;;                  1    wreg      unsigned char 
 12015 ;; Registers used:
 12016 ;;		wreg, status,2
 12017 ;; Tracked objects:
 12018 ;;		On entry : 0/0
 12019 ;;		On exit  : 0/0
 12020 ;;		Unchanged: 0/0
 12021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12025 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12026 ;;Total ram usage:        1 bytes
 12027 ;; Hardware stack levels used: 1
 12028 ;; Hardware stack levels required when called: 7
 12029 ;; This function calls:
 12030 ;;		Nothing
 12031 ;; This function is called by:
 12032 ;;		_checkbatterylevel
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036                           	psect	text59
 12037  00629E                     __ptext59:
 12038                           	callstack 0
 12039  00629E                     _ADC_getval:
 12040                           	callstack 22
 12041  00629E                     
 12042                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
 12043  00629E  8060               	bsf	96,0,c	;volatile
 12044  0062A0                     l399:
 12045  0062A0  B060               	btfsc	96,0,c	;volatile
 12046  0062A2  EF55  F031         	goto	u11571
 12047  0062A6  EF57  F031         	goto	u11570
 12048  0062AA                     u11571:
 12049  0062AA  EF50  F031         	goto	l399
 12050  0062AE                     u11570:
 12051  0062AE                     
 12052                           ;ADC.c: 31:     tmpval = ADRESH;
 12053  0062AE  CF64 F00A          	movff	3940,ADC_getval@tmpval	;volatile
 12054  0062B2                     
 12055                           ;ADC.c: 34:     return tmpval;
 12056  0062B2  500A               	movf	ADC_getval@tmpval^0,w,c
 12057  0062B4  0012               	return		;funcret
 12058  0062B6                     __end_of_ADC_getval:
 12059                           	callstack 0
 12060                           
 12061 ;; *************** function _USART4_init *****************
 12062 ;; Defined at:
 12063 ;;		line 7 in file "serial_comm.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;		None
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;		None
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  1    wreg      void 
 12070 ;; Registers used:
 12071 ;;		wreg, status,2
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12081 ;;Total ram usage:        0 bytes
 12082 ;; Hardware stack levels used: 1
 12083 ;; Hardware stack levels required when called: 7
 12084 ;; This function calls:
 12085 ;;		Nothing
 12086 ;; This function is called by:
 12087 ;;		_main
 12088 ;; This function uses a non-reentrant model
 12089 ;;
 12090                           
 12091                           	psect	text60
 12092  0061F8                     __ptext60:
 12093                           	callstack 0
 12094  0061F8                     _USART4_init:
 12095                           	callstack 23
 12096  0061F8                     
 12097                           ;serial_comm.c: 10:     RC0PPS = 0x12;
 12098  0061F8  0E12               	movlw	18
 12099  0061FA  010E               	movlb	14	; () banked
 12100  0061FC  6F62               	movwf	98,b	;volatile
 12101                           
 12102                           ;serial_comm.c: 11:     RX4PPS = 0x11;
 12103  0061FE  0E11               	movlw	17
 12104  006200  6F15               	movwf	21,b	;volatile
 12105  006202                     
 12106                           ; BSR set to: 14
 12107                           ;serial_comm.c: 12:     TRISCbits.TRISC1 = 1;
 12108  006202  8283               	bsf	131,1,c	;volatile
 12109  006204                     
 12110                           ; BSR set to: 14
 12111                           ;serial_comm.c: 14:     BAUD4CONbits.BRG16 = 0;
 12112  006204  97E9               	bcf	233,3,b	;volatile
 12113  006206                     
 12114                           ; BSR set to: 14
 12115                           ;serial_comm.c: 15:     TX4STAbits.BRGH = 0;
 12116  006206  95E8               	bcf	232,2,b	;volatile
 12117                           
 12118                           ;serial_comm.c: 16:     SP4BRGL = 51;
 12119  006208  0E33               	movlw	51
 12120  00620A  6FE5               	movwf	229,b	;volatile
 12121                           
 12122                           ;serial_comm.c: 17:     SP4BRGH = 0;
 12123  00620C  0E00               	movlw	0
 12124  00620E  6FE6               	movwf	230,b	;volatile
 12125  006210                     
 12126                           ; BSR set to: 14
 12127                           ;serial_comm.c: 19:     RC4STAbits.CREN = 1;
 12128  006210  89E7               	bsf	231,4,b	;volatile
 12129  006212                     
 12130                           ; BSR set to: 14
 12131                           ;serial_comm.c: 20:     TX4STAbits.TXEN = 1;
 12132  006212  8BE8               	bsf	232,5,b	;volatile
 12133  006214                     
 12134                           ; BSR set to: 14
 12135                           ;serial_comm.c: 21:     RC4STAbits.SPEN = 1;
 12136  006214  8FE7               	bsf	231,7,b	;volatile
 12137  006216                     
 12138                           ; BSR set to: 14
 12139  006216  0012               	return		;funcret
 12140  006218                     __end_of_USART4_init:
 12141                           	callstack 0
 12142                           
 12143 ;; *************** function _DCmotors_init *****************
 12144 ;; Defined at:
 12145 ;;		line 10 in file "DC_motors.c"
 12146 ;; Parameters:    Size  Location     Type
 12147 ;;  PWMperiod       1    wreg     unsigned char 
 12148 ;; Auto vars:     Size  Location     Type
 12149 ;;  PWMperiod       1    9[COMRAM] unsigned char 
 12150 ;; Return value:  Size  Location     Type
 12151 ;;                  1    wreg      void 
 12152 ;; Registers used:
 12153 ;;		wreg, status,2, cstack
 12154 ;; Tracked objects:
 12155 ;;		On entry : 0/0
 12156 ;;		On exit  : 0/0
 12157 ;;		Unchanged: 0/0
 12158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12163 ;;Total ram usage:        1 bytes
 12164 ;; Hardware stack levels used: 1
 12165 ;; Hardware stack levels required when called: 8
 12166 ;; This function calls:
 12167 ;;		_buggyLEDs_init
 12168 ;;		_clicker2LEDs_init
 12169 ;;		_clicker2buttons_init
 12170 ;; This function is called by:
 12171 ;;		_main
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175                           	psect	text61
 12176  005CE6                     __ptext61:
 12177                           	callstack 0
 12178  005CE6                     _DCmotors_init:
 12179                           	callstack 22
 12180                           
 12181                           ; BSR set to: 14
 12182                           ;incstack = 0
 12183                           ;DCmotors_init@PWMperiod stored from wreg
 12184  005CE6  6E0A               	movwf	DCmotors_init@PWMperiod^0,c
 12185  005CE8                     
 12186                           ;DC_motors.c: 10: void DCmotors_init(unsigned char PWMperiod);DC_motors.c: 11: {;DC_moto
      +                          rs.c: 13:     T2CONbits.CKPS=0b100;
 12187  005CE8  50BD               	movf	189,w,c	;volatile
 12188  005CEA  0B8F               	andlw	-113
 12189  005CEC  0940               	iorlw	64
 12190  005CEE  6EBD               	movwf	189,c	;volatile
 12191                           
 12192                           ;DC_motors.c: 14:     T2HLTbits.MODE=0b00000;
 12193  005CF0  0EE0               	movlw	-32
 12194  005CF2  16BE               	andwf	190,f,c	;volatile
 12195                           
 12196                           ;DC_motors.c: 15:     T2CLKCONbits.CS=0b0001;
 12197  005CF4  50BF               	movf	191,w,c	;volatile
 12198  005CF6  0BF0               	andlw	-16
 12199  005CF8  0901               	iorlw	1
 12200  005CFA  6EBF               	movwf	191,c	;volatile
 12201  005CFC                     
 12202                           ;DC_motors.c: 18:     T2PR=PWMperiod;
 12203  005CFC  C00A  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
 12204  005D00                     
 12205                           ;DC_motors.c: 19:     T2CONbits.ON=1;
 12206  005D00  8EBD               	bsf	189,7,c	;volatile
 12207  005D02                     
 12208                           ;DC_motors.c: 22:     TRISEbits.TRISE2=0;
 12209  005D02  9485               	bcf	133,2,c	;volatile
 12210  005D04                     
 12211                           ;DC_motors.c: 23:     TRISEbits.TRISE4=0;
 12212  005D04  9885               	bcf	133,4,c	;volatile
 12213  005D06                     
 12214                           ;DC_motors.c: 24:     TRISCbits.TRISC7=0;
 12215  005D06  9E83               	bcf	131,7,c	;volatile
 12216  005D08                     
 12217                           ;DC_motors.c: 25:     TRISGbits.TRISG6=0;
 12218  005D08  9C87               	bcf	135,6,c	;volatile
 12219  005D0A                     
 12220                           ;DC_motors.c: 27:     LATEbits.LATE2=0;
 12221  005D0A  947D               	bcf	125,2,c	;volatile
 12222  005D0C                     
 12223                           ;DC_motors.c: 28:     LATEbits.LATE4=0;
 12224  005D0C  987D               	bcf	125,4,c	;volatile
 12225  005D0E                     
 12226                           ;DC_motors.c: 29:     LATCbits.LATC7=0;
 12227  005D0E  9E7B               	bcf	123,7,c	;volatile
 12228  005D10                     
 12229                           ;DC_motors.c: 30:     LATGbits.LATG6=0;
 12230  005D10  9C7F               	bcf	127,6,c	;volatile
 12231                           
 12232                           ;DC_motors.c: 32:     PWM6DCH=0;
 12233  005D12  0E00               	movlw	0
 12234  005D14  6EA3               	movwf	163,c	;volatile
 12235                           
 12236                           ;DC_motors.c: 33:     PWM7DCH=0;
 12237  005D16  0E00               	movlw	0
 12238  005D18  6EA0               	movwf	160,c	;volatile
 12239  005D1A                     
 12240                           ;DC_motors.c: 35:     PWM6CONbits.EN = 1;
 12241  005D1A  8EA4               	bsf	164,7,c	;volatile
 12242  005D1C                     
 12243                           ;DC_motors.c: 36:     PWM7CONbits.EN = 1;
 12244  005D1C  8EA1               	bsf	161,7,c	;volatile
 12245                           
 12246                           ;DC_motors.c: 38:     RE2PPS=0x0A;
 12247  005D1E  0E0A               	movlw	10
 12248  005D20  010E               	movlb	14	; () banked
 12249  005D22  6F74               	movwf	116,b	;volatile
 12250                           
 12251                           ;DC_motors.c: 39:     RC7PPS=0x0B;
 12252  005D24  0E0B               	movlw	11
 12253  005D26  6F69               	movwf	105,b	;volatile
 12254  005D28                     
 12255                           ; BSR set to: 14
 12256                           ;DC_motors.c: 42:     clicker2buttons_init();
 12257  005D28  EC73  F031         	call	_clicker2buttons_init	;wreg free
 12258  005D2C                     
 12259                           ;DC_motors.c: 43:     clicker2LEDs_init();
 12260  005D2C  EC8E  F031         	call	_clicker2LEDs_init	;wreg free
 12261  005D30                     
 12262                           ;DC_motors.c: 44:     buggyLEDs_init();
 12263  005D30  EC5B  F031         	call	_buggyLEDs_init	;wreg free
 12264  005D34  0012               	return		;funcret
 12265  005D36                     __end_of_DCmotors_init:
 12266                           	callstack 0
 12267                           
 12268 ;; *************** function _clicker2buttons_init *****************
 12269 ;; Defined at:
 12270 ;;		line 7 in file "buttons_n_LEDs.c"
 12271 ;; Parameters:    Size  Location     Type
 12272 ;;		None
 12273 ;; Auto vars:     Size  Location     Type
 12274 ;;		None
 12275 ;; Return value:  Size  Location     Type
 12276 ;;                  1    wreg      void 
 12277 ;; Registers used:
 12278 ;;		None
 12279 ;; Tracked objects:
 12280 ;;		On entry : 0/0
 12281 ;;		On exit  : 0/0
 12282 ;;		Unchanged: 0/0
 12283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12288 ;;Total ram usage:        0 bytes
 12289 ;; Hardware stack levels used: 1
 12290 ;; Hardware stack levels required when called: 7
 12291 ;; This function calls:
 12292 ;;		Nothing
 12293 ;; This function is called by:
 12294 ;;		_DCmotors_init
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298                           	psect	text62
 12299  0062E6                     __ptext62:
 12300                           	callstack 0
 12301  0062E6                     _clicker2buttons_init:
 12302                           	callstack 22
 12303  0062E6                     
 12304                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
 12305  0062E6  8486               	bsf	134,2,c	;volatile
 12306                           
 12307                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
 12308  0062E8  8686               	bsf	134,3,c	;volatile
 12309                           
 12310                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
 12311  0062EA  010E               	movlb	14	; () banked
 12312  0062EC  95B4               	bcf	180,2,b	;volatile
 12313                           
 12314                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
 12315  0062EE  97B4               	bcf	180,3,b	;volatile
 12316  0062F0                     
 12317                           ; BSR set to: 14
 12318  0062F0  0012               	return		;funcret
 12319  0062F2                     __end_of_clicker2buttons_init:
 12320                           	callstack 0
 12321                           
 12322 ;; *************** function _clicker2LEDs_init *****************
 12323 ;; Defined at:
 12324 ;;		line 19 in file "buttons_n_LEDs.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;		None
 12327 ;; Auto vars:     Size  Location     Type
 12328 ;;		None
 12329 ;; Return value:  Size  Location     Type
 12330 ;;                  1    wreg      void 
 12331 ;; Registers used:
 12332 ;;		None
 12333 ;; Tracked objects:
 12334 ;;		On entry : 0/0
 12335 ;;		On exit  : 0/0
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12342 ;;Total ram usage:        0 bytes
 12343 ;; Hardware stack levels used: 1
 12344 ;; Hardware stack levels required when called: 7
 12345 ;; This function calls:
 12346 ;;		Nothing
 12347 ;; This function is called by:
 12348 ;;		_DCmotors_init
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           	psect	text63
 12353  00631C                     __ptext63:
 12354                           	callstack 0
 12355  00631C                     _clicker2LEDs_init:
 12356                           	callstack 22
 12357  00631C                     
 12358                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
 12359  00631C  9E84               	bcf	132,7,c	;volatile
 12360                           
 12361                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
 12362  00631E  9688               	bcf	136,3,c	;volatile
 12363                           
 12364                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
 12365  006320  9E7C               	bcf	124,7,c	;volatile
 12366                           
 12367                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
 12368  006322  9680               	bcf	128,3,c	;volatile
 12369  006324  0012               	return		;funcret
 12370  006326                     __end_of_clicker2LEDs_init:
 12371                           	callstack 0
 12372                           
 12373 ;; *************** function _buggyLEDs_init *****************
 12374 ;; Defined at:
 12375 ;;		line 31 in file "buttons_n_LEDs.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;		None
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;		None
 12380 ;; Return value:  Size  Location     Type
 12381 ;;                  1    wreg      void 
 12382 ;; Registers used:
 12383 ;;		None
 12384 ;; Tracked objects:
 12385 ;;		On entry : 0/0
 12386 ;;		On exit  : 0/0
 12387 ;;		Unchanged: 0/0
 12388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12393 ;;Total ram usage:        0 bytes
 12394 ;; Hardware stack levels used: 1
 12395 ;; Hardware stack levels required when called: 7
 12396 ;; This function calls:
 12397 ;;		Nothing
 12398 ;; This function is called by:
 12399 ;;		_DCmotors_init
 12400 ;; This function uses a non-reentrant model
 12401 ;;
 12402                           
 12403                           	psect	text64
 12404  0062B6                     __ptext64:
 12405                           	callstack 0
 12406  0062B6                     _buggyLEDs_init:
 12407                           	callstack 22
 12408  0062B6                     
 12409                           ;buttons_n_LEDs.c: 33:     TRISHbits.TRISH1 = 0;
 12410  0062B6  9288               	bcf	136,1,c	;volatile
 12411                           
 12412                           ;buttons_n_LEDs.c: 34:     TRISDbits.TRISD3 = 0;
 12413  0062B8  9684               	bcf	132,3,c	;volatile
 12414                           
 12415                           ;buttons_n_LEDs.c: 35:     TRISDbits.TRISD4 = 0;
 12416  0062BA  9884               	bcf	132,4,c	;volatile
 12417                           
 12418                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF0 = 0;
 12419  0062BC  9086               	bcf	134,0,c	;volatile
 12420                           
 12421                           ;buttons_n_LEDs.c: 37:     TRISHbits.TRISH0 = 0;
 12422  0062BE  9088               	bcf	136,0,c	;volatile
 12423                           
 12424                           ;buttons_n_LEDs.c: 39:     LATHbits.LATH1 = 0;
 12425  0062C0  9280               	bcf	128,1,c	;volatile
 12426                           
 12427                           ;buttons_n_LEDs.c: 40:     LATDbits.LATD3 = 0;
 12428  0062C2  967C               	bcf	124,3,c	;volatile
 12429                           
 12430                           ;buttons_n_LEDs.c: 41:     LATDbits.LATD4 = 0;
 12431  0062C4  987C               	bcf	124,4,c	;volatile
 12432                           
 12433                           ;buttons_n_LEDs.c: 42:     LATFbits.LATF0 = 0;
 12434  0062C6  907E               	bcf	126,0,c	;volatile
 12435                           
 12436                           ;buttons_n_LEDs.c: 43:     LATHbits.LATH0 = 0;
 12437  0062C8  9080               	bcf	128,0,c	;volatile
 12438  0062CA  0012               	return		;funcret
 12439  0062CC                     __end_of_buggyLEDs_init:
 12440                           	callstack 0
 12441                           
 12442 ;; *************** function _DCmotors_calibration *****************
 12443 ;; Defined at:
 12444 ;;		line 227 in file "DC_motors.c"
 12445 ;; Parameters:    Size  Location     Type
 12446 ;;  mL              2   71[COMRAM] PTR struct .
 12447 ;;		 -> main@motorL(9), 
 12448 ;;  mR              2   73[COMRAM] PTR struct .
 12449 ;;		 -> main@motorR(9), 
 12450 ;; Auto vars:     Size  Location     Type
 12451 ;;		None
 12452 ;; Return value:  Size  Location     Type
 12453 ;;                  1    wreg      void 
 12454 ;; Registers used:
 12455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12456 ;; Tracked objects:
 12457 ;;		On entry : 0/0
 12458 ;;		On exit  : 0/0
 12459 ;;		Unchanged: 0/0
 12460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12464 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12465 ;;Total ram usage:        6 bytes
 12466 ;; Hardware stack levels used: 1
 12467 ;; Hardware stack levels required when called: 11
 12468 ;; This function calls:
 12469 ;;		_adjdelay
 12470 ;;		_stop
 12471 ;;		_turnleft
 12472 ;;		_turnright
 12473 ;; This function is called by:
 12474 ;;		_main
 12475 ;; This function uses a non-reentrant model
 12476 ;;
 12477                           
 12478                           	psect	text65
 12479  0049E6                     __ptext65:
 12480                           	callstack 0
 12481  0049E6                     _DCmotors_calibration:
 12482                           	callstack 19
 12483  0049E6                     l714:
 12484  0049E6  A48E               	btfss	142,2,c	;volatile
 12485  0049E8  EFF8  F024         	goto	u11751
 12486  0049EC  EFFA  F024         	goto	u11750
 12487  0049F0                     u11751:
 12488  0049F0  EF01  F025         	goto	l718
 12489  0049F4                     u11750:
 12490  0049F4  B68E               	btfsc	142,3,c	;volatile
 12491  0049F6  EFFF  F024         	goto	u11761
 12492  0049FA  EF01  F025         	goto	u11760
 12493  0049FE                     u11761:
 12494  0049FE  EFF3  F024         	goto	l714
 12495  004A02                     u11760:
 12496  004A02                     l718:
 12497                           
 12498                           ;DC_motors.c: 230:     LATDbits.LATD3 = 1;
 12499  004A02  867C               	bsf	124,3,c	;volatile
 12500  004A04                     
 12501                           ;DC_motors.c: 231:     _delay((unsigned long)((200)*(64000000/4000.0)));
 12502  004A04  0E11               	movlw	17
 12503  004A06  0100               	movlb	0	; () banked
 12504  004A08  6F71               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12505  004A0A  0E3C               	movlw	60
 12506  004A0C  6F70               	movwf	??_DCmotors_calibration& (0+255),b
 12507  004A0E  0ECB               	movlw	203
 12508  004A10                     u12737:
 12509  004A10  2EE8               	decfsz	wreg,f,c
 12510  004A12  D7FE               	bra	u12737
 12511  004A14  2F70               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12512  004A16  D7FC               	bra	u12737
 12513  004A18  2F71               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12514  004A1A  D7FA               	bra	u12737
 12515  004A1C                     
 12516                           ;DC_motors.c: 232:     turnleft(mL, mR, 360);
 12517  004A1C  C048  F06A         	movff	DCmotors_calibration@mL,turnleft@mL
 12518  004A20  C049  F06B         	movff	DCmotors_calibration@mL+1,turnleft@mL+1
 12519  004A24  C04A  F06C         	movff	DCmotors_calibration@mR,turnleft@mR
 12520  004A28  C04B  F06D         	movff	DCmotors_calibration@mR+1,turnleft@mR+1
 12521  004A2C  0E01               	movlw	1
 12522  004A2E  0100               	movlb	0	; () banked
 12523  004A30  6F6F               	movwf	(turnleft@deg+1)& (0+255),b
 12524  004A32  0E68               	movlw	104
 12525  004A34  6F6E               	movwf	turnleft@deg& (0+255),b
 12526  004A36  ECC3  F02E         	call	_turnleft	;wreg free
 12527  004A3A                     
 12528                           ;DC_motors.c: 233:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12529  004A3A  0E52               	movlw	82
 12530  004A3C  0100               	movlb	0	; () banked
 12531  004A3E  6F71               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12532  004A40  0E2B               	movlw	43
 12533  004A42  6F70               	movwf	??_DCmotors_calibration& (0+255),b
 12534  004A44  0E00               	movlw	0
 12535  004A46                     u12747:
 12536  004A46  2EE8               	decfsz	wreg,f,c
 12537  004A48  D7FE               	bra	u12747
 12538  004A4A  2F70               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12539  004A4C  D7FC               	bra	u12747
 12540  004A4E  2F71               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12541  004A50  D7FA               	bra	u12747
 12542  004A52  F000               	nop	
 12543                           
 12544                           ;DC_motors.c: 234:     stop(mL, mR);
 12545  004A54  C048  F023         	movff	DCmotors_calibration@mL,stop@mL
 12546  004A58  C049  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
 12547  004A5C  C04A  F025         	movff	DCmotors_calibration@mR,stop@mR
 12548  004A60  C04B  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
 12549  004A64  EC24  F02C         	call	_stop	;wreg free
 12550  004A68                     l719:
 12551  004A68  A48E               	btfss	142,2,c	;volatile
 12552  004A6A  EF39  F025         	goto	u11771
 12553  004A6E  EF3B  F025         	goto	u11770
 12554  004A72                     u11771:
 12555  004A72  EF42  F025         	goto	l8922
 12556  004A76                     u11770:
 12557  004A76  B68E               	btfsc	142,3,c	;volatile
 12558  004A78  EF40  F025         	goto	u11781
 12559  004A7C  EF42  F025         	goto	u11780
 12560  004A80                     u11781:
 12561  004A80  EF34  F025         	goto	l719
 12562  004A84                     u11780:
 12563  004A84                     l8922:
 12564                           
 12565                           ;DC_motors.c: 237:     adjdelay(1);
 12566  004A84  0E01               	movlw	1
 12567  004A86  EC35  F026         	call	_adjdelay
 12568  004A8A                     
 12569                           ;DC_motors.c: 238:     LATDbits.LATD3 = 0;
 12570  004A8A  967C               	bcf	124,3,c	;volatile
 12571  004A8C                     
 12572                           ;DC_motors.c: 239:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12573  004A8C  0E52               	movlw	82
 12574  004A8E  0100               	movlb	0	; () banked
 12575  004A90  6F71               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12576  004A92  0E2B               	movlw	43
 12577  004A94  6F70               	movwf	??_DCmotors_calibration& (0+255),b
 12578  004A96  0E00               	movlw	0
 12579  004A98                     u12757:
 12580  004A98  2EE8               	decfsz	wreg,f,c
 12581  004A9A  D7FE               	bra	u12757
 12582  004A9C  2F70               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12583  004A9E  D7FC               	bra	u12757
 12584  004AA0  2F71               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12585  004AA2  D7FA               	bra	u12757
 12586  004AA4  F000               	nop	
 12587  004AA6                     
 12588                           ;DC_motors.c: 241:     LATDbits.LATD3 = 1;
 12589  004AA6  867C               	bsf	124,3,c	;volatile
 12590  004AA8                     
 12591                           ;DC_motors.c: 242:     _delay((unsigned long)((200)*(64000000/4000.0)));
 12592  004AA8  0E11               	movlw	17
 12593  004AAA  0100               	movlb	0	; () banked
 12594  004AAC  6F71               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12595  004AAE  0E3C               	movlw	60
 12596  004AB0  6F70               	movwf	??_DCmotors_calibration& (0+255),b
 12597  004AB2  0ECB               	movlw	203
 12598  004AB4                     u12767:
 12599  004AB4  2EE8               	decfsz	wreg,f,c
 12600  004AB6  D7FE               	bra	u12767
 12601  004AB8  2F70               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12602  004ABA  D7FC               	bra	u12767
 12603  004ABC  2F71               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12604  004ABE  D7FA               	bra	u12767
 12605  004AC0                     
 12606                           ;DC_motors.c: 243:     turnright(mL, mR, 360);
 12607  004AC0  C048  F06A         	movff	DCmotors_calibration@mL,turnright@mL
 12608  004AC4  C049  F06B         	movff	DCmotors_calibration@mL+1,turnright@mL+1
 12609  004AC8  C04A  F06C         	movff	DCmotors_calibration@mR,turnright@mR
 12610  004ACC  C04B  F06D         	movff	DCmotors_calibration@mR+1,turnright@mR+1
 12611  004AD0  0E01               	movlw	1
 12612  004AD2  0100               	movlb	0	; () banked
 12613  004AD4  6F6F               	movwf	(turnright@deg+1)& (0+255),b
 12614  004AD6  0E68               	movlw	104
 12615  004AD8  6F6E               	movwf	turnright@deg& (0+255),b
 12616  004ADA  EC9B  F02E         	call	_turnright	;wreg free
 12617  004ADE                     
 12618                           ;DC_motors.c: 244:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12619  004ADE  0E52               	movlw	82
 12620  004AE0  0100               	movlb	0	; () banked
 12621  004AE2  6F71               	movwf	(??_DCmotors_calibration+1)& (0+255),b
 12622  004AE4  0E2B               	movlw	43
 12623  004AE6  6F70               	movwf	??_DCmotors_calibration& (0+255),b
 12624  004AE8  0E00               	movlw	0
 12625  004AEA                     u12777:
 12626  004AEA  2EE8               	decfsz	wreg,f,c
 12627  004AEC  D7FE               	bra	u12777
 12628  004AEE  2F70               	decfsz	??_DCmotors_calibration& (0+255),f,b
 12629  004AF0  D7FC               	bra	u12777
 12630  004AF2  2F71               	decfsz	(??_DCmotors_calibration+1)& (0+255),f,b
 12631  004AF4  D7FA               	bra	u12777
 12632  004AF6  F000               	nop	
 12633  004AF8                     
 12634                           ;DC_motors.c: 245:     stop(mL, mR);
 12635  004AF8  C048  F023         	movff	DCmotors_calibration@mL,stop@mL
 12636  004AFC  C049  F024         	movff	DCmotors_calibration@mL+1,stop@mL+1
 12637  004B00  C04A  F025         	movff	DCmotors_calibration@mR,stop@mR
 12638  004B04  C04B  F026         	movff	DCmotors_calibration@mR+1,stop@mR+1
 12639  004B08  EC24  F02C         	call	_stop	;wreg free
 12640  004B0C                     l724:
 12641  004B0C  A48E               	btfss	142,2,c	;volatile
 12642  004B0E  EF8B  F025         	goto	u11791
 12643  004B12  EF8D  F025         	goto	u11790
 12644  004B16                     u11791:
 12645  004B16  EF94  F025         	goto	l8940
 12646  004B1A                     u11790:
 12647  004B1A  B68E               	btfsc	142,3,c	;volatile
 12648  004B1C  EF92  F025         	goto	u11801
 12649  004B20  EF94  F025         	goto	u11800
 12650  004B24                     u11801:
 12651  004B24  EF86  F025         	goto	l724
 12652  004B28                     u11800:
 12653  004B28                     l8940:
 12654                           
 12655                           ;DC_motors.c: 248:     adjdelay(2);
 12656  004B28  0E02               	movlw	2
 12657  004B2A  EC35  F026         	call	_adjdelay
 12658  004B2E                     
 12659                           ;DC_motors.c: 249:     LATDbits.LATD3 = 0;
 12660  004B2E  967C               	bcf	124,3,c	;volatile
 12661  004B30  0012               	return		;funcret
 12662  004B32                     __end_of_DCmotors_calibration:
 12663                           	callstack 0
 12664                           
 12665 ;; *************** function _turnright *****************
 12666 ;; Defined at:
 12667 ;;		line 218 in file "DC_motors.c"
 12668 ;; Parameters:    Size  Location     Type
 12669 ;;  mL              2   10[BANK0 ] PTR struct .
 12670 ;;		 -> main@motorL(9), 
 12671 ;;  mR              2   12[BANK0 ] PTR struct .
 12672 ;;		 -> main@motorR(9), 
 12673 ;;  deg             2   14[BANK0 ] unsigned int 
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;		None
 12676 ;; Return value:  Size  Location     Type
 12677 ;;                  1    wreg      void 
 12678 ;; Registers used:
 12679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12680 ;; Tracked objects:
 12681 ;;		On entry : 0/0
 12682 ;;		On exit  : 0/0
 12683 ;;		Unchanged: 0/0
 12684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12685 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12688 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12689 ;;Total ram usage:        6 bytes
 12690 ;; Hardware stack levels used: 1
 12691 ;; Hardware stack levels required when called: 10
 12692 ;; This function calls:
 12693 ;;		_left
 12694 ;;		_right
 12695 ;; This function is called by:
 12696 ;;		_colourcards_readRGBC
 12697 ;;		_DCmotors_calibration
 12698 ;;		_DCmotors_testing
 12699 ;; This function uses a non-reentrant model
 12700 ;;
 12701                           
 12702                           	psect	text66
 12703  005D36                     __ptext66:
 12704                           	callstack 0
 12705  005D36                     _turnright:
 12706                           	callstack 19
 12707  005D36                     
 12708                           ;DC_motors.c: 218: void turnright(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motor
      +                          s.c: 219: {;DC_motors.c: 220:     if (returnhome_flag==0) {right(mL, mR, deg);}
 12709  005D36  0100               	movlb	0	; () banked
 12710  005D38  51F4               	movf	_returnhome_flag& (0+255),w,b	;volatile
 12711  005D3A  A4D8               	btfss	status,2,c
 12712  005D3C  EFA2  F02E         	goto	u11531
 12713  005D40  EFA4  F02E         	goto	u11530
 12714  005D44                     u11531:
 12715  005D44  EFB4  F02E         	goto	l8678
 12716  005D48                     u11530:
 12717  005D48                     
 12718                           ; BSR set to: 0
 12719  005D48  C06A  F023         	movff	turnright@mL,right@mL
 12720  005D4C  C06B  F024         	movff	turnright@mL+1,right@mL+1
 12721  005D50  C06C  F025         	movff	turnright@mR,right@mR
 12722  005D54  C06D  F026         	movff	turnright@mR+1,right@mR+1
 12723  005D58  C06E  F027         	movff	turnright@deg,right@deg
 12724  005D5C  C06F  F028         	movff	turnright@deg+1,right@deg+1
 12725  005D60  ECCE  F026         	call	_right	;wreg free
 12726  005D64  EFC2  F02E         	goto	l711
 12727  005D68                     l8678:
 12728                           
 12729                           ; BSR set to: 0
 12730  005D68  C06A  F041         	movff	turnright@mL,left@mL
 12731  005D6C  C06B  F042         	movff	turnright@mL+1,left@mL+1
 12732  005D70  C06C  F043         	movff	turnright@mR,left@mR
 12733  005D74  C06D  F044         	movff	turnright@mR+1,left@mR+1
 12734  005D78  C06E  F045         	movff	turnright@deg,left@deg
 12735  005D7C  C06F  F046         	movff	turnright@deg+1,left@deg+1
 12736  005D80  EC04  F01D         	call	_left	;wreg free
 12737  005D84                     l711:
 12738  005D84  0012               	return		;funcret
 12739  005D86                     __end_of_turnright:
 12740                           	callstack 0
 12741                           
 12742 ;; *************** function _turnleft *****************
 12743 ;; Defined at:
 12744 ;;		line 208 in file "DC_motors.c"
 12745 ;; Parameters:    Size  Location     Type
 12746 ;;  mL              2   10[BANK0 ] PTR struct .
 12747 ;;		 -> main@motorL(9), 
 12748 ;;  mR              2   12[BANK0 ] PTR struct .
 12749 ;;		 -> main@motorR(9), 
 12750 ;;  deg             2   14[BANK0 ] unsigned int 
 12751 ;; Auto vars:     Size  Location     Type
 12752 ;;		None
 12753 ;; Return value:  Size  Location     Type
 12754 ;;                  1    wreg      void 
 12755 ;; Registers used:
 12756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12757 ;; Tracked objects:
 12758 ;;		On entry : 0/0
 12759 ;;		On exit  : 0/0
 12760 ;;		Unchanged: 0/0
 12761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12762 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12765 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12766 ;;Total ram usage:        6 bytes
 12767 ;; Hardware stack levels used: 1
 12768 ;; Hardware stack levels required when called: 10
 12769 ;; This function calls:
 12770 ;;		_left
 12771 ;;		_right
 12772 ;; This function is called by:
 12773 ;;		_colourcards_readRGBC
 12774 ;;		_DCmotors_calibration
 12775 ;;		_DCmotors_testing
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           	psect	text67
 12780  005D86                     __ptext67:
 12781                           	callstack 0
 12782  005D86                     _turnleft:
 12783                           	callstack 19
 12784  005D86                     
 12785                           ;DC_motors.c: 208: void turnleft(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors
      +                          .c: 209: {;DC_motors.c: 210:     if (returnhome_flag==0) {left(mL, mR, deg);}
 12786  005D86  0100               	movlb	0	; () banked
 12787  005D88  51F4               	movf	_returnhome_flag& (0+255),w,b	;volatile
 12788  005D8A  A4D8               	btfss	status,2,c
 12789  005D8C  EFCA  F02E         	goto	u11541
 12790  005D90  EFCC  F02E         	goto	u11540
 12791  005D94                     u11541:
 12792  005D94  EFDC  F02E         	goto	l8684
 12793  005D98                     u11540:
 12794  005D98                     
 12795                           ; BSR set to: 0
 12796  005D98  C06A  F041         	movff	turnleft@mL,left@mL
 12797  005D9C  C06B  F042         	movff	turnleft@mL+1,left@mL+1
 12798  005DA0  C06C  F043         	movff	turnleft@mR,left@mR
 12799  005DA4  C06D  F044         	movff	turnleft@mR+1,left@mR+1
 12800  005DA8  C06E  F045         	movff	turnleft@deg,left@deg
 12801  005DAC  C06F  F046         	movff	turnleft@deg+1,left@deg+1
 12802  005DB0  EC04  F01D         	call	_left	;wreg free
 12803  005DB4  EFEA  F02E         	goto	l706
 12804  005DB8                     l8684:
 12805                           
 12806                           ; BSR set to: 0
 12807  005DB8  C06A  F023         	movff	turnleft@mL,right@mL
 12808  005DBC  C06B  F024         	movff	turnleft@mL+1,right@mL+1
 12809  005DC0  C06C  F025         	movff	turnleft@mR,right@mR
 12810  005DC4  C06D  F026         	movff	turnleft@mR+1,right@mR+1
 12811  005DC8  C06E  F027         	movff	turnleft@deg,right@deg
 12812  005DCC  C06F  F028         	movff	turnleft@deg+1,right@deg+1
 12813  005DD0  ECCE  F026         	call	_right	;wreg free
 12814  005DD4                     l706:
 12815  005DD4  0012               	return		;funcret
 12816  005DD6                     __end_of_turnleft:
 12817                           	callstack 0
 12818                           
 12819 ;; *************** function _right *****************
 12820 ;; Defined at:
 12821 ;;		line 176 in file "DC_motors.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;  mL              2   34[COMRAM] PTR struct .
 12824 ;;		 -> main@motorL(9), 
 12825 ;;  mR              2   36[COMRAM] PTR struct .
 12826 ;;		 -> main@motorR(9), 
 12827 ;;  deg             2   38[COMRAM] unsigned int 
 12828 ;; Auto vars:     Size  Location     Type
 12829 ;;  i               2   44[COMRAM] unsigned int 
 12830 ;;  delay           2   42[COMRAM] unsigned int 
 12831 ;; Return value:  Size  Location     Type
 12832 ;;                  1    wreg      void 
 12833 ;; Registers used:
 12834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12835 ;; Tracked objects:
 12836 ;;		On entry : 0/0
 12837 ;;		On exit  : 0/0
 12838 ;;		Unchanged: 0/0
 12839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12840 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12841 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12843 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12844 ;;Total ram usage:       12 bytes
 12845 ;; Hardware stack levels used: 1
 12846 ;; Hardware stack levels required when called: 9
 12847 ;; This function calls:
 12848 ;;		_DCmotors_setPWM
 12849 ;; This function is called by:
 12850 ;;		_turnleft
 12851 ;;		_turnright
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855                           	psect	text68
 12856  004D9C                     __ptext68:
 12857                           	callstack 0
 12858  004D9C                     _right:
 12859                           	callstack 19
 12860  004D9C                     
 12861                           ;DC_motors.c: 176: void right(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c:
      +                           177: {;DC_motors.c: 179:     unsigned int delay = (8*deg) + 180 + turnright_delay;
 12862  004D9C  C027  F029         	movff	right@deg,??_right
 12863  004DA0  C028  F02A         	movff	right@deg+1,??_right+1
 12864  004DA4  90D8               	bcf	status,0,c
 12865  004DA6  3629               	rlcf	??_right^0,f,c
 12866  004DA8  362A               	rlcf	(??_right+1)^0,f,c
 12867  004DAA  90D8               	bcf	status,0,c
 12868  004DAC  3629               	rlcf	??_right^0,f,c
 12869  004DAE  362A               	rlcf	(??_right+1)^0,f,c
 12870  004DB0  90D8               	bcf	status,0,c
 12871  004DB2  3629               	rlcf	??_right^0,f,c
 12872  004DB4  362A               	rlcf	(??_right+1)^0,f,c
 12873  004DB6  0101               	movlb	1	; () banked
 12874  004DB8  51DF               	movf	_turnright_delay& (0+255),w,b	;volatile
 12875  004DBA  2629               	addwf	??_right^0,f,c
 12876  004DBC  51E0               	movf	(_turnright_delay+1)& (0+255),w,b	;volatile
 12877  004DBE  222A               	addwfc	(??_right+1)^0,f,c
 12878  004DC0  0EB4               	movlw	180
 12879  004DC2  2429               	addwf	??_right^0,w,c
 12880  004DC4  6E2B               	movwf	right@delay^0,c
 12881  004DC6  0E00               	movlw	0
 12882  004DC8  202A               	addwfc	(??_right+1)^0,w,c
 12883  004DCA  6E2C               	movwf	(right@delay+1)^0,c
 12884  004DCC                     
 12885                           ; BSR set to: 1
 12886                           ;DC_motors.c: 182:     mL->direction = 1;
 12887  004DCC  EE20 F001          	lfsr	2,1
 12888  004DD0  5023               	movf	right@mL^0,w,c
 12889  004DD2  26D9               	addwf	fsr2l,f,c
 12890  004DD4  5024               	movf	(right@mL+1)^0,w,c
 12891  004DD6  22DA               	addwfc	fsr2h,f,c
 12892  004DD8  0E01               	movlw	1
 12893  004DDA  6EDF               	movwf	indf2,c
 12894  004DDC                     
 12895                           ; BSR set to: 1
 12896                           ;DC_motors.c: 183:     mR->direction = 0;
 12897  004DDC  EE20 F001          	lfsr	2,1
 12898  004DE0  5025               	movf	right@mR^0,w,c
 12899  004DE2  26D9               	addwf	fsr2l,f,c
 12900  004DE4  5026               	movf	(right@mR+1)^0,w,c
 12901  004DE6  22DA               	addwfc	fsr2h,f,c
 12902  004DE8  0E00               	movlw	0
 12903  004DEA  6EDF               	movwf	indf2,c
 12904  004DEC                     
 12905                           ; BSR set to: 1
 12906                           ;DC_motors.c: 186:     LATHbits.LATH0 = 1;
 12907  004DEC  8080               	bsf	128,0,c	;volatile
 12908                           
 12909                           ;DC_motors.c: 187:     while((mL->power < 40) || (mR->power < 40)){
 12910  004DEE  EF2D  F027         	goto	l8566
 12911  004DF2                     l8552:
 12912                           
 12913                           ;DC_motors.c: 189:         if (mL->power < 40) {mL->power += 10;}
 12914  004DF2  C023  FFD9         	movff	right@mL,fsr2l
 12915  004DF6  C024  FFDA         	movff	right@mL+1,fsr2h
 12916  004DFA  0E28               	movlw	40
 12917  004DFC  60DF               	cpfslt	indf2,c
 12918  004DFE  EF03  F027         	goto	u11411
 12919  004E02  EF05  F027         	goto	u11410
 12920  004E06                     u11411:
 12921  004E06  EF0B  F027         	goto	l8556
 12922  004E0A                     u11410:
 12923  004E0A  C023  FFD9         	movff	right@mL,fsr2l
 12924  004E0E  C024  FFDA         	movff	right@mL+1,fsr2h
 12925  004E12  0E0A               	movlw	10
 12926  004E14  26DF               	addwf	indf2,f,c
 12927  004E16                     l8556:
 12928                           
 12929                           ;DC_motors.c: 190:         if (mR->power < 40) {mR->power += 10;}
 12930  004E16  C025  FFD9         	movff	right@mR,fsr2l
 12931  004E1A  C026  FFDA         	movff	right@mR+1,fsr2h
 12932  004E1E  0E28               	movlw	40
 12933  004E20  60DF               	cpfslt	indf2,c
 12934  004E22  EF15  F027         	goto	u11421
 12935  004E26  EF17  F027         	goto	u11420
 12936  004E2A                     u11421:
 12937  004E2A  EF1D  F027         	goto	l8560
 12938  004E2E                     u11420:
 12939  004E2E  C025  FFD9         	movff	right@mR,fsr2l
 12940  004E32  C026  FFDA         	movff	right@mR+1,fsr2h
 12941  004E36  0E0A               	movlw	10
 12942  004E38  26DF               	addwf	indf2,f,c
 12943  004E3A                     l8560:
 12944                           
 12945                           ;DC_motors.c: 193:         DCmotors_setPWM(mL);
 12946  004E3A  C023  F018         	movff	right@mL,DCmotors_setPWM@m
 12947  004E3E  C024  F019         	movff	right@mL+1,DCmotors_setPWM@m+1
 12948  004E42  ECF1  F01D         	call	_DCmotors_setPWM	;wreg free
 12949  004E46                     
 12950                           ;DC_motors.c: 194:         DCmotors_setPWM(mR);
 12951  004E46  C025  F018         	movff	right@mR,DCmotors_setPWM@m
 12952  004E4A  C026  F019         	movff	right@mR+1,DCmotors_setPWM@m+1
 12953  004E4E  ECF1  F01D         	call	_DCmotors_setPWM	;wreg free
 12954  004E52                     
 12955                           ;DC_motors.c: 195:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 12956  004E52  0EA0               	movlw	160
 12957  004E54                     u12787:
 12958  004E54  D000               	nop2	
 12959  004E56  2EE8               	decfsz	wreg,f,c
 12960  004E58  D7FD               	bra	u12787
 12961  004E5A                     l8566:
 12962                           
 12963                           ;DC_motors.c: 187:     while((mL->power < 40) || (mR->power < 40)){
 12964  004E5A  C023  FFD9         	movff	right@mL,fsr2l
 12965  004E5E  C024  FFDA         	movff	right@mL+1,fsr2h
 12966  004E62  0E27               	movlw	39
 12967  004E64  64DF               	cpfsgt	indf2,c
 12968  004E66  EF37  F027         	goto	u11431
 12969  004E6A  EF39  F027         	goto	u11430
 12970  004E6E                     u11431:
 12971  004E6E  EFF9  F026         	goto	l8552
 12972  004E72                     u11430:
 12973  004E72  C025  FFD9         	movff	right@mR,fsr2l
 12974  004E76  C026  FFDA         	movff	right@mR+1,fsr2h
 12975  004E7A  0E27               	movlw	39
 12976  004E7C  64DF               	cpfsgt	indf2,c
 12977  004E7E  EF43  F027         	goto	u11441
 12978  004E82  EF45  F027         	goto	u11440
 12979  004E86                     u11441:
 12980  004E86  EFF9  F026         	goto	l8552
 12981  004E8A                     u11440:
 12982  004E8A                     
 12983                           ;DC_motors.c: 198:     unsigned int i;;DC_motors.c: 199:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
 12984  004E8A  0E00               	movlw	0
 12985  004E8C  6E2E               	movwf	(right@i+1)^0,c
 12986  004E8E  0E00               	movlw	0
 12987  004E90  6E2D               	movwf	right@i^0,c
 12988  004E92  EF55  F027         	goto	l698
 12989  004E96                     l8572:
 12990  004E96  0E15               	movlw	21
 12991  004E98  6E29               	movwf	??_right^0,c
 12992  004E9A  0EC6               	movlw	198
 12993  004E9C                     u12797:
 12994  004E9C  2EE8               	decfsz	wreg,f,c
 12995  004E9E  D7FE               	bra	u12797
 12996  004EA0  2E29               	decfsz	??_right^0,f,c
 12997  004EA2  D7FC               	bra	u12797
 12998  004EA4  D000               	nop2	
 12999  004EA6  4A2D               	infsnz	right@i^0,f,c
 13000  004EA8  2A2E               	incf	(right@i+1)^0,f,c
 13001  004EAA                     l698:
 13002  004EAA  502B               	movf	right@delay^0,w,c
 13003  004EAC  5C2D               	subwf	right@i^0,w,c
 13004  004EAE  502C               	movf	(right@delay+1)^0,w,c
 13005  004EB0  582E               	subwfb	(right@i+1)^0,w,c
 13006  004EB2  A0D8               	btfss	status,0,c
 13007  004EB4  EF5E  F027         	goto	u11451
 13008  004EB8  EF60  F027         	goto	u11450
 13009  004EBC                     u11451:
 13010  004EBC  EF4B  F027         	goto	l8572
 13011  004EC0                     u11450:
 13012  004EC0                     
 13013                           ;DC_motors.c: 201:     LATHbits.LATH0 = 0;
 13014  004EC0  9080               	bcf	128,0,c	;volatile
 13015  004EC2  0012               	return		;funcret
 13016  004EC4                     __end_of_right:
 13017                           	callstack 0
 13018                           
 13019 ;; *************** function _left *****************
 13020 ;; Defined at:
 13021 ;;		line 146 in file "DC_motors.c"
 13022 ;; Parameters:    Size  Location     Type
 13023 ;;  mL              2   64[COMRAM] PTR struct .
 13024 ;;		 -> main@motorL(9), 
 13025 ;;  mR              2   66[COMRAM] PTR struct .
 13026 ;;		 -> main@motorR(9), 
 13027 ;;  deg             2   68[COMRAM] unsigned int 
 13028 ;; Auto vars:     Size  Location     Type
 13029 ;;  delay           4    0[BANK0 ] unsigned int 
 13030 ;;  i               2    8[BANK0 ] unsigned int 
 13031 ;; Return value:  Size  Location     Type
 13032 ;;                  1    wreg      void 
 13033 ;; Registers used:
 13034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13035 ;; Tracked objects:
 13036 ;;		On entry : 0/0
 13037 ;;		On exit  : 0/0
 13038 ;;		Unchanged: 0/0
 13039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13040 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13041 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13043 ;;      Totals:         7      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13044 ;;Total ram usage:       17 bytes
 13045 ;; Hardware stack levels used: 1
 13046 ;; Hardware stack levels required when called: 9
 13047 ;; This function calls:
 13048 ;;		_DCmotors_setPWM
 13049 ;;		___fladd
 13050 ;;		___flge
 13051 ;;		___flmul
 13052 ;;		___xxtofl
 13053 ;; This function is called by:
 13054 ;;		_turnleft
 13055 ;;		_turnright
 13056 ;; This function uses a non-reentrant model
 13057 ;;
 13058                           
 13059                           	psect	text69
 13060  003A08                     __ptext69:
 13061                           	callstack 0
 13062  003A08                     _left:
 13063                           	callstack 19
 13064  003A08                     
 13065                           ;DC_motors.c: 146: void left(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c: 
      +                          147: {;DC_motors.c: 149:     double delay = (deg*12.5) - 135 + turnleft_delay;
 13066  003A08  0E00               	movlw	0
 13067  003A0A  6E35               	movwf	___fladd@a^0,c
 13068  003A0C  0E00               	movlw	0
 13069  003A0E  6E36               	movwf	(___fladd@a+1)^0,c
 13070  003A10  0E07               	movlw	7
 13071  003A12  6E37               	movwf	(___fladd@a+2)^0,c
 13072  003A14  0EC3               	movlw	195
 13073  003A16  6E38               	movwf	(___fladd@a+3)^0,c
 13074  003A18  0E00               	movlw	0
 13075  003A1A  6E1C               	movwf	___flmul@a^0,c
 13076  003A1C  0E00               	movlw	0
 13077  003A1E  6E1D               	movwf	(___flmul@a+1)^0,c
 13078  003A20  0E48               	movlw	72
 13079  003A22  6E1E               	movwf	(___flmul@a+2)^0,c
 13080  003A24  0E41               	movlw	65
 13081  003A26  6E1F               	movwf	(___flmul@a+3)^0,c
 13082  003A28  C045  F00A         	movff	left@deg,___xxtofl@val
 13083  003A2C  C046  F00B         	movff	left@deg+1,___xxtofl@val+1
 13084  003A30  6A0C               	clrf	(___xxtofl@val+2)^0,c
 13085  003A32  6A0D               	clrf	(___xxtofl@val+3)^0,c
 13086  003A34  0E00               	movlw	0
 13087  003A36  ECDB  F01E         	call	___xxtofl
 13088  003A3A  C00A  F018         	movff	?___xxtofl,___flmul@b
 13089  003A3E  C00B  F019         	movff	?___xxtofl+1,___flmul@b+1
 13090  003A42  C00C  F01A         	movff	?___xxtofl+2,___flmul@b+2
 13091  003A46  C00D  F01B         	movff	?___xxtofl+3,___flmul@b+3
 13092  003A4A  ECAA  F016         	call	___flmul	;wreg free
 13093  003A4E  C018  F031         	movff	?___flmul,___fladd@b
 13094  003A52  C019  F032         	movff	?___flmul+1,___fladd@b+1
 13095  003A56  C01A  F033         	movff	?___flmul+2,___fladd@b+2
 13096  003A5A  C01B  F034         	movff	?___flmul+3,___fladd@b+3
 13097  003A5E  EC4A  F014         	call	___fladd	;wreg free
 13098  003A62  C031  F064         	movff	?___fladd,_left$3571
 13099  003A66  C032  F065         	movff	?___fladd+1,_left$3571+1
 13100  003A6A  C033  F066         	movff	?___fladd+2,_left$3571+2
 13101  003A6E  C034  F067         	movff	?___fladd+3,_left$3571+3
 13102  003A72                     
 13103                           ;DC_motors.c: 146: void left(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c: 
      +                          147: {;DC_motors.c: 149:     double delay = (deg*12.5) - 135 + turnleft_delay;
 13104  003A72  C064  F031         	movff	_left$3571,___fladd@b
 13105  003A76  C065  F032         	movff	_left$3571+1,___fladd@b+1
 13106  003A7A  C066  F033         	movff	_left$3571+2,___fladd@b+2
 13107  003A7E  C067  F034         	movff	_left$3571+3,___fladd@b+3
 13108  003A82  C1E1  F00A         	movff	_turnleft_delay,___xxtofl@val	;volatile
 13109  003A86  C1E2  F00B         	movff	_turnleft_delay+1,___xxtofl@val+1	;volatile
 13110  003A8A  6A0C               	clrf	(___xxtofl@val+2)^0,c
 13111  003A8C  6A0D               	clrf	(___xxtofl@val+3)^0,c
 13112  003A8E  0E00               	movlw	0
 13113  003A90  ECDB  F01E         	call	___xxtofl
 13114  003A94  C00A  F035         	movff	?___xxtofl,___fladd@a
 13115  003A98  C00B  F036         	movff	?___xxtofl+1,___fladd@a+1
 13116  003A9C  C00C  F037         	movff	?___xxtofl+2,___fladd@a+2
 13117  003AA0  C00D  F038         	movff	?___xxtofl+3,___fladd@a+3
 13118  003AA4  EC4A  F014         	call	___fladd	;wreg free
 13119  003AA8  C031  F060         	movff	?___fladd,left@delay
 13120  003AAC  C032  F061         	movff	?___fladd+1,left@delay+1
 13121  003AB0  C033  F062         	movff	?___fladd+2,left@delay+2
 13122  003AB4  C034  F063         	movff	?___fladd+3,left@delay+3
 13123  003AB8                     
 13124                           ;DC_motors.c: 152:     mL->direction = 0;
 13125  003AB8  EE20 F001          	lfsr	2,1
 13126  003ABC  5041               	movf	left@mL^0,w,c
 13127  003ABE  26D9               	addwf	fsr2l,f,c
 13128  003AC0  5042               	movf	(left@mL+1)^0,w,c
 13129  003AC2  22DA               	addwfc	fsr2h,f,c
 13130  003AC4  0E00               	movlw	0
 13131  003AC6  6EDF               	movwf	indf2,c
 13132  003AC8                     
 13133                           ;DC_motors.c: 153:     mR->direction = 1;
 13134  003AC8  EE20 F001          	lfsr	2,1
 13135  003ACC  5043               	movf	left@mR^0,w,c
 13136  003ACE  26D9               	addwf	fsr2l,f,c
 13137  003AD0  5044               	movf	(left@mR+1)^0,w,c
 13138  003AD2  22DA               	addwfc	fsr2h,f,c
 13139  003AD4  0E01               	movlw	1
 13140  003AD6  6EDF               	movwf	indf2,c
 13141  003AD8                     
 13142                           ;DC_motors.c: 156:     LATFbits.LATF0 = 1;
 13143  003AD8  807E               	bsf	126,0,c	;volatile
 13144                           
 13145                           ;DC_motors.c: 157:     while((mL->power < 40) || (mR->power < 40)){
 13146  003ADA  EFA3  F01D         	goto	l8532
 13147  003ADE                     l8518:
 13148                           
 13149                           ;DC_motors.c: 159:         if (mL->power < 40) {mL->power += 10;}
 13150  003ADE  C041  FFD9         	movff	left@mL,fsr2l
 13151  003AE2  C042  FFDA         	movff	left@mL+1,fsr2h
 13152  003AE6  0E28               	movlw	40
 13153  003AE8  60DF               	cpfslt	indf2,c
 13154  003AEA  EF79  F01D         	goto	u11361
 13155  003AEE  EF7B  F01D         	goto	u11360
 13156  003AF2                     u11361:
 13157  003AF2  EF81  F01D         	goto	l8522
 13158  003AF6                     u11360:
 13159  003AF6  C041  FFD9         	movff	left@mL,fsr2l
 13160  003AFA  C042  FFDA         	movff	left@mL+1,fsr2h
 13161  003AFE  0E0A               	movlw	10
 13162  003B00  26DF               	addwf	indf2,f,c
 13163  003B02                     l8522:
 13164                           
 13165                           ;DC_motors.c: 160:         if (mR->power < 40) {mR->power += 10;}
 13166  003B02  C043  FFD9         	movff	left@mR,fsr2l
 13167  003B06  C044  FFDA         	movff	left@mR+1,fsr2h
 13168  003B0A  0E28               	movlw	40
 13169  003B0C  60DF               	cpfslt	indf2,c
 13170  003B0E  EF8B  F01D         	goto	u11371
 13171  003B12  EF8D  F01D         	goto	u11370
 13172  003B16                     u11371:
 13173  003B16  EF93  F01D         	goto	l8526
 13174  003B1A                     u11370:
 13175  003B1A  C043  FFD9         	movff	left@mR,fsr2l
 13176  003B1E  C044  FFDA         	movff	left@mR+1,fsr2h
 13177  003B22  0E0A               	movlw	10
 13178  003B24  26DF               	addwf	indf2,f,c
 13179  003B26                     l8526:
 13180                           
 13181                           ;DC_motors.c: 163:         DCmotors_setPWM(mL);
 13182  003B26  C041  F018         	movff	left@mL,DCmotors_setPWM@m
 13183  003B2A  C042  F019         	movff	left@mL+1,DCmotors_setPWM@m+1
 13184  003B2E  ECF1  F01D         	call	_DCmotors_setPWM	;wreg free
 13185  003B32                     
 13186                           ;DC_motors.c: 164:         DCmotors_setPWM(mR);
 13187  003B32  C043  F018         	movff	left@mR,DCmotors_setPWM@m
 13188  003B36  C044  F019         	movff	left@mR+1,DCmotors_setPWM@m+1
 13189  003B3A  ECF1  F01D         	call	_DCmotors_setPWM	;wreg free
 13190  003B3E                     
 13191                           ;DC_motors.c: 165:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 13192  003B3E  0EA0               	movlw	160
 13193  003B40                     u12807:
 13194  003B40  D000               	nop2	
 13195  003B42  2EE8               	decfsz	wreg,f,c
 13196  003B44  D7FD               	bra	u12807
 13197  003B46                     l8532:
 13198                           
 13199                           ;DC_motors.c: 157:     while((mL->power < 40) || (mR->power < 40)){
 13200  003B46  C041  FFD9         	movff	left@mL,fsr2l
 13201  003B4A  C042  FFDA         	movff	left@mL+1,fsr2h
 13202  003B4E  0E27               	movlw	39
 13203  003B50  64DF               	cpfsgt	indf2,c
 13204  003B52  EFAD  F01D         	goto	u11381
 13205  003B56  EFAF  F01D         	goto	u11380
 13206  003B5A                     u11381:
 13207  003B5A  EF6F  F01D         	goto	l8518
 13208  003B5E                     u11380:
 13209  003B5E  C043  FFD9         	movff	left@mR,fsr2l
 13210  003B62  C044  FFDA         	movff	left@mR+1,fsr2h
 13211  003B66  0E27               	movlw	39
 13212  003B68  64DF               	cpfsgt	indf2,c
 13213  003B6A  EFB9  F01D         	goto	u11391
 13214  003B6E  EFBB  F01D         	goto	u11390
 13215  003B72                     u11391:
 13216  003B72  EF6F  F01D         	goto	l8518
 13217  003B76                     u11390:
 13218  003B76                     
 13219                           ;DC_motors.c: 168:     unsigned int i;;DC_motors.c: 169:     for (i=0; i<delay; i++) {_d
      +                          elay((unsigned long)((1)*(64000000/4000.0)));}
 13220  003B76  0E00               	movlw	0
 13221  003B78  0100               	movlb	0	; () banked
 13222  003B7A  6F69               	movwf	(left@i+1)& (0+255),b
 13223  003B7C  0E00               	movlw	0
 13224  003B7E  6F68               	movwf	left@i& (0+255),b
 13225  003B80  EFCD  F01D         	goto	l8542
 13226  003B84                     l8538:
 13227  003B84  0E15               	movlw	21
 13228  003B86  6E47               	movwf	??_left^0,c
 13229  003B88  0EC6               	movlw	198
 13230  003B8A                     u12817:
 13231  003B8A  2EE8               	decfsz	wreg,f,c
 13232  003B8C  D7FE               	bra	u12817
 13233  003B8E  2E47               	decfsz	??_left^0,f,c
 13234  003B90  D7FC               	bra	u12817
 13235  003B92  D000               	nop2	
 13236  003B94  0100               	movlb	0	; () banked
 13237  003B96  4B68               	infsnz	left@i& (0+255),f,b
 13238  003B98  2B69               	incf	(left@i+1)& (0+255),f,b
 13239  003B9A                     l8542:
 13240                           
 13241                           ; BSR set to: 0
 13242  003B9A  C068  F00A         	movff	left@i,___xxtofl@val
 13243  003B9E  C069  F00B         	movff	left@i+1,___xxtofl@val+1
 13244  003BA2  6A0C               	clrf	(___xxtofl@val+2)^0,c
 13245  003BA4  6A0D               	clrf	(___xxtofl@val+3)^0,c
 13246  003BA6  0E00               	movlw	0
 13247  003BA8  ECDB  F01E         	call	___xxtofl
 13248  003BAC  C00A  F031         	movff	?___xxtofl,___flge@ff1
 13249  003BB0  C00B  F032         	movff	?___xxtofl+1,___flge@ff1+1
 13250  003BB4  C00C  F033         	movff	?___xxtofl+2,___flge@ff1+2
 13251  003BB8  C00D  F034         	movff	?___xxtofl+3,___flge@ff1+3
 13252  003BBC  C060  F035         	movff	left@delay,___flge@ff2
 13253  003BC0  C061  F036         	movff	left@delay+1,___flge@ff2+1
 13254  003BC4  C062  F037         	movff	left@delay+2,___flge@ff2+2
 13255  003BC8  C063  F038         	movff	left@delay+3,___flge@ff2+3
 13256  003BCC  ECE5  F027         	call	___flge	;wreg free
 13257  003BD0  A0D8               	btfss	status,0,c
 13258  003BD2  EFED  F01D         	goto	u11401
 13259  003BD6  EFEF  F01D         	goto	u11400
 13260  003BDA                     u11401:
 13261  003BDA  EFC2  F01D         	goto	l8538
 13262  003BDE                     u11400:
 13263  003BDE                     
 13264                           ;DC_motors.c: 170:     LATFbits.LATF0 = 0;
 13265  003BDE  907E               	bcf	126,0,c	;volatile
 13266  003BE0  0012               	return		;funcret
 13267  003BE2                     __end_of_left:
 13268                           	callstack 0
 13269                           
 13270 ;; *************** function ___xxtofl *****************
 13271 ;; Defined at:
 13272 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 13273 ;; Parameters:    Size  Location     Type
 13274 ;;  sign            1    wreg     unsigned char 
 13275 ;;  val             4    9[COMRAM] long 
 13276 ;; Auto vars:     Size  Location     Type
 13277 ;;  sign            1   17[COMRAM] unsigned char 
 13278 ;;  arg             4   19[COMRAM] unsigned long 
 13279 ;;  exp             1   18[COMRAM] unsigned char 
 13280 ;; Return value:  Size  Location     Type
 13281 ;;                  4    9[COMRAM] unsigned char 
 13282 ;; Registers used:
 13283 ;;		wreg, status,2, status,0
 13284 ;; Tracked objects:
 13285 ;;		On entry : 0/0
 13286 ;;		On exit  : 0/0
 13287 ;;		Unchanged: 0/0
 13288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13290 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13291 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13292 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13293 ;;Total ram usage:       14 bytes
 13294 ;; Hardware stack levels used: 1
 13295 ;; Hardware stack levels required when called: 7
 13296 ;; This function calls:
 13297 ;;		Nothing
 13298 ;; This function is called by:
 13299 ;;		_colourcards_normaliseRGBC
 13300 ;;		_left
 13301 ;; This function uses a non-reentrant model
 13302 ;;
 13303                           
 13304                           	psect	text70
 13305  003DB6                     __ptext70:
 13306                           	callstack 0
 13307  003DB6                     ___xxtofl:
 13308                           	callstack 20
 13309                           
 13310                           ;incstack = 0
 13311                           ;___xxtofl@sign stored from wreg
 13312  003DB6  6E12               	movwf	___xxtofl@sign^0,c
 13313  003DB8  5012               	movf	___xxtofl@sign^0,w,c
 13314  003DBA  B4D8               	btfsc	status,2,c
 13315  003DBC  EFE2  F01E         	goto	u11211
 13316  003DC0  EFE4  F01E         	goto	u11210
 13317  003DC4                     u11211:
 13318  003DC4  EF06  F01F         	goto	l1455
 13319  003DC8                     u11210:
 13320  003DC8  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
 13321  003DCA  EFEB  F01E         	goto	u11220
 13322  003DCE  EFE9  F01E         	goto	u11221
 13323  003DD2                     u11221:
 13324  003DD2  EF06  F01F         	goto	l1455
 13325  003DD6                     u11220:
 13326  003DD6  C00A  F00E         	movff	___xxtofl@val,??___xxtofl
 13327  003DDA  C00B  F00F         	movff	___xxtofl@val+1,??___xxtofl+1
 13328  003DDE  C00C  F010         	movff	___xxtofl@val+2,??___xxtofl+2
 13329  003DE2  C00D  F011         	movff	___xxtofl@val+3,??___xxtofl+3
 13330  003DE6  1E0E               	comf	??___xxtofl^0,f,c
 13331  003DE8  1E0F               	comf	(??___xxtofl+1)^0,f,c
 13332  003DEA  1E10               	comf	(??___xxtofl+2)^0,f,c
 13333  003DEC  1E11               	comf	(??___xxtofl+3)^0,f,c
 13334  003DEE  2A0E               	incf	??___xxtofl^0,f,c
 13335  003DF0  0E00               	movlw	0
 13336  003DF2  220F               	addwfc	(??___xxtofl+1)^0,f,c
 13337  003DF4  2210               	addwfc	(??___xxtofl+2)^0,f,c
 13338  003DF6  2211               	addwfc	(??___xxtofl+3)^0,f,c
 13339  003DF8  C00E  F014         	movff	??___xxtofl,___xxtofl@arg
 13340  003DFC  C00F  F015         	movff	??___xxtofl+1,___xxtofl@arg+1
 13341  003E00  C010  F016         	movff	??___xxtofl+2,___xxtofl@arg+2
 13342  003E04  C011  F017         	movff	??___xxtofl+3,___xxtofl@arg+3
 13343  003E08  EF0E  F01F         	goto	l8422
 13344  003E0C                     l1455:
 13345  003E0C  C00A  F014         	movff	___xxtofl@val,___xxtofl@arg
 13346  003E10  C00B  F015         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13347  003E14  C00C  F016         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13348  003E18  C00D  F017         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13349  003E1C                     l8422:
 13350  003E1C  500A               	movf	___xxtofl@val^0,w,c
 13351  003E1E  100B               	iorwf	(___xxtofl@val+1)^0,w,c
 13352  003E20  100C               	iorwf	(___xxtofl@val+2)^0,w,c
 13353  003E22  100D               	iorwf	(___xxtofl@val+3)^0,w,c
 13354  003E24  A4D8               	btfss	status,2,c
 13355  003E26  EF17  F01F         	goto	u11231
 13356  003E2A  EF19  F01F         	goto	u11230
 13357  003E2E                     u11231:
 13358  003E2E  EF23  F01F         	goto	l8428
 13359  003E32                     u11230:
 13360  003E32  0E00               	movlw	0
 13361  003E34  6E0A               	movwf	?___xxtofl^0,c
 13362  003E36  0E00               	movlw	0
 13363  003E38  6E0B               	movwf	(?___xxtofl+1)^0,c
 13364  003E3A  0E00               	movlw	0
 13365  003E3C  6E0C               	movwf	(?___xxtofl+2)^0,c
 13366  003E3E  0E00               	movlw	0
 13367  003E40  6E0D               	movwf	(?___xxtofl+3)^0,c
 13368  003E42  EFB4  F01F         	goto	l1458
 13369  003E46                     l8428:
 13370  003E46  0E96               	movlw	150
 13371  003E48  6E13               	movwf	___xxtofl@exp^0,c
 13372  003E4A  EF2D  F01F         	goto	l8432
 13373  003E4E                     l8430:
 13374  003E4E  2A13               	incf	___xxtofl@exp^0,f,c
 13375  003E50  90D8               	bcf	status,0,c
 13376  003E52  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
 13377  003E54  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
 13378  003E56  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
 13379  003E58  3214               	rrcf	___xxtofl@arg^0,f,c
 13380  003E5A                     l8432:
 13381  003E5A  0E00               	movlw	0
 13382  003E5C  1414               	andwf	___xxtofl@arg^0,w,c
 13383  003E5E  6E0E               	movwf	??___xxtofl^0,c
 13384  003E60  0E00               	movlw	0
 13385  003E62  1415               	andwf	(___xxtofl@arg+1)^0,w,c
 13386  003E64  6E0F               	movwf	(??___xxtofl+1)^0,c
 13387  003E66  0E00               	movlw	0
 13388  003E68  1416               	andwf	(___xxtofl@arg+2)^0,w,c
 13389  003E6A  6E10               	movwf	(??___xxtofl+2)^0,c
 13390  003E6C  0EFE               	movlw	254
 13391  003E6E  1417               	andwf	(___xxtofl@arg+3)^0,w,c
 13392  003E70  6E11               	movwf	(??___xxtofl+3)^0,c
 13393  003E72  500E               	movf	??___xxtofl^0,w,c
 13394  003E74  100F               	iorwf	(??___xxtofl+1)^0,w,c
 13395  003E76  1010               	iorwf	(??___xxtofl+2)^0,w,c
 13396  003E78  1011               	iorwf	(??___xxtofl+3)^0,w,c
 13397  003E7A  A4D8               	btfss	status,2,c
 13398  003E7C  EF42  F01F         	goto	u11241
 13399  003E80  EF44  F01F         	goto	u11240
 13400  003E84                     u11241:
 13401  003E84  EF27  F01F         	goto	l8430
 13402  003E88                     u11240:
 13403  003E88  EF52  F01F         	goto	l1462
 13404  003E8C                     l8434:
 13405  003E8C  2A13               	incf	___xxtofl@exp^0,f,c
 13406  003E8E  0E01               	movlw	1
 13407  003E90  2614               	addwf	___xxtofl@arg^0,f,c
 13408  003E92  0E00               	movlw	0
 13409  003E94  2215               	addwfc	(___xxtofl@arg+1)^0,f,c
 13410  003E96  2216               	addwfc	(___xxtofl@arg+2)^0,f,c
 13411  003E98  2217               	addwfc	(___xxtofl@arg+3)^0,f,c
 13412  003E9A  90D8               	bcf	status,0,c
 13413  003E9C  3217               	rrcf	(___xxtofl@arg+3)^0,f,c
 13414  003E9E  3216               	rrcf	(___xxtofl@arg+2)^0,f,c
 13415  003EA0  3215               	rrcf	(___xxtofl@arg+1)^0,f,c
 13416  003EA2  3214               	rrcf	___xxtofl@arg^0,f,c
 13417  003EA4                     l1462:
 13418  003EA4  0E00               	movlw	0
 13419  003EA6  1414               	andwf	___xxtofl@arg^0,w,c
 13420  003EA8  6E0E               	movwf	??___xxtofl^0,c
 13421  003EAA  0E00               	movlw	0
 13422  003EAC  1415               	andwf	(___xxtofl@arg+1)^0,w,c
 13423  003EAE  6E0F               	movwf	(??___xxtofl+1)^0,c
 13424  003EB0  0E00               	movlw	0
 13425  003EB2  1416               	andwf	(___xxtofl@arg+2)^0,w,c
 13426  003EB4  6E10               	movwf	(??___xxtofl+2)^0,c
 13427  003EB6  0EFF               	movlw	255
 13428  003EB8  1417               	andwf	(___xxtofl@arg+3)^0,w,c
 13429  003EBA  6E11               	movwf	(??___xxtofl+3)^0,c
 13430  003EBC  500E               	movf	??___xxtofl^0,w,c
 13431  003EBE  100F               	iorwf	(??___xxtofl+1)^0,w,c
 13432  003EC0  1010               	iorwf	(??___xxtofl+2)^0,w,c
 13433  003EC2  1011               	iorwf	(??___xxtofl+3)^0,w,c
 13434  003EC4  A4D8               	btfss	status,2,c
 13435  003EC6  EF67  F01F         	goto	u11251
 13436  003ECA  EF69  F01F         	goto	u11250
 13437  003ECE                     u11251:
 13438  003ECE  EF46  F01F         	goto	l8434
 13439  003ED2                     u11250:
 13440  003ED2  EF71  F01F         	goto	l8442
 13441  003ED6                     l8440:
 13442  003ED6  0613               	decf	___xxtofl@exp^0,f,c
 13443  003ED8  90D8               	bcf	status,0,c
 13444  003EDA  3614               	rlcf	___xxtofl@arg^0,f,c
 13445  003EDC  3615               	rlcf	(___xxtofl@arg+1)^0,f,c
 13446  003EDE  3616               	rlcf	(___xxtofl@arg+2)^0,f,c
 13447  003EE0  3617               	rlcf	(___xxtofl@arg+3)^0,f,c
 13448  003EE2                     l8442:
 13449  003EE2  BE16               	btfsc	(___xxtofl@arg+2)^0,7,c
 13450  003EE4  EF76  F01F         	goto	u11261
 13451  003EE8  EF78  F01F         	goto	u11260
 13452  003EEC                     u11261:
 13453  003EEC  EF80  F01F         	goto	l1469
 13454  003EF0                     u11260:
 13455  003EF0  0E02               	movlw	2
 13456  003EF2  6013               	cpfslt	___xxtofl@exp^0,c
 13457  003EF4  EF7E  F01F         	goto	u11271
 13458  003EF8  EF80  F01F         	goto	u11270
 13459  003EFC                     u11271:
 13460  003EFC  EF6B  F01F         	goto	l8440
 13461  003F00                     u11270:
 13462  003F00                     l1469:
 13463  003F00  B013               	btfsc	___xxtofl@exp^0,0,c
 13464  003F02  EF85  F01F         	goto	u11281
 13465  003F06  EF87  F01F         	goto	u11280
 13466  003F0A                     u11281:
 13467  003F0A  EF88  F01F         	goto	l8448
 13468  003F0E                     u11280:
 13469  003F0E  9E16               	bcf	(___xxtofl@arg+2)^0,7,c
 13470  003F10                     l8448:
 13471  003F10  90D8               	bcf	status,0,c
 13472  003F12  3213               	rrcf	___xxtofl@exp^0,f,c
 13473  003F14  C013  F00E         	movff	___xxtofl@exp,??___xxtofl
 13474  003F18  6A0F               	clrf	(??___xxtofl+1)^0,c
 13475  003F1A  6A10               	clrf	(??___xxtofl+2)^0,c
 13476  003F1C  6A11               	clrf	(??___xxtofl+3)^0,c
 13477  003F1E  C00E  F011         	movff	??___xxtofl,??___xxtofl+3
 13478  003F22  6A10               	clrf	(??___xxtofl+2)^0,c
 13479  003F24  6A0F               	clrf	(??___xxtofl+1)^0,c
 13480  003F26  6A0E               	clrf	??___xxtofl^0,c
 13481  003F28  500E               	movf	??___xxtofl^0,w,c
 13482  003F2A  1214               	iorwf	___xxtofl@arg^0,f,c
 13483  003F2C  500F               	movf	(??___xxtofl+1)^0,w,c
 13484  003F2E  1215               	iorwf	(___xxtofl@arg+1)^0,f,c
 13485  003F30  5010               	movf	(??___xxtofl+2)^0,w,c
 13486  003F32  1216               	iorwf	(___xxtofl@arg+2)^0,f,c
 13487  003F34  5011               	movf	(??___xxtofl+3)^0,w,c
 13488  003F36  1217               	iorwf	(___xxtofl@arg+3)^0,f,c
 13489  003F38  5012               	movf	___xxtofl@sign^0,w,c
 13490  003F3A  B4D8               	btfsc	status,2,c
 13491  003F3C  EFA2  F01F         	goto	u11291
 13492  003F40  EFA4  F01F         	goto	u11290
 13493  003F44                     u11291:
 13494  003F44  EFAC  F01F         	goto	l8458
 13495  003F48                     u11290:
 13496  003F48  BE0D               	btfsc	(___xxtofl@val+3)^0,7,c
 13497  003F4A  EFAB  F01F         	goto	u11300
 13498  003F4E  EFA9  F01F         	goto	u11301
 13499  003F52                     u11301:
 13500  003F52  EFAC  F01F         	goto	l8458
 13501  003F56                     u11300:
 13502  003F56  8E17               	bsf	(___xxtofl@arg+3)^0,7,c
 13503  003F58                     l8458:
 13504  003F58  C014  F00A         	movff	___xxtofl@arg,?___xxtofl
 13505  003F5C  C015  F00B         	movff	___xxtofl@arg+1,?___xxtofl+1
 13506  003F60  C016  F00C         	movff	___xxtofl@arg+2,?___xxtofl+2
 13507  003F64  C017  F00D         	movff	___xxtofl@arg+3,?___xxtofl+3
 13508  003F68                     l1458:
 13509  003F68  0012               	return		;funcret
 13510  003F6A                     __end_of___xxtofl:
 13511                           	callstack 0
 13512                           
 13513 ;; *************** function ___flmul *****************
 13514 ;; Defined at:
 13515 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 13516 ;; Parameters:    Size  Location     Type
 13517 ;;  b               4   23[COMRAM] unsigned char 
 13518 ;;  a               4   27[COMRAM] unsigned char 
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;  prod            4   42[COMRAM] struct .
 13521 ;;  grs             4   37[COMRAM] unsigned long 
 13522 ;;  temp            2   46[COMRAM] struct .
 13523 ;;  bexp            1   41[COMRAM] unsigned char 
 13524 ;;  aexp            1   36[COMRAM] unsigned char 
 13525 ;;  sign            1   35[COMRAM] unsigned char 
 13526 ;; Return value:  Size  Location     Type
 13527 ;;                  4   23[COMRAM] unsigned char 
 13528 ;; Registers used:
 13529 ;;		wreg, status,2, status,0, prodl, prodh
 13530 ;; Tracked objects:
 13531 ;;		On entry : 0/0
 13532 ;;		On exit  : 0/0
 13533 ;;		Unchanged: 0/0
 13534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13535 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13536 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13537 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13538 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13539 ;;Total ram usage:       25 bytes
 13540 ;; Hardware stack levels used: 1
 13541 ;; Hardware stack levels required when called: 7
 13542 ;; This function calls:
 13543 ;;		Nothing
 13544 ;; This function is called by:
 13545 ;;		_left
 13546 ;;		_efgtoa
 13547 ;; This function uses a non-reentrant model
 13548 ;;
 13549                           
 13550                           	psect	text71
 13551  002D54                     __ptext71:
 13552                           	callstack 0
 13553  002D54                     ___flmul:
 13554                           	callstack 17
 13555  002D54  501B               	movf	(___flmul@b+3)^0,w,c
 13556  002D56  0B80               	andlw	128
 13557  002D58  6E24               	movwf	___flmul@sign^0,c
 13558  002D5A  501B               	movf	(___flmul@b+3)^0,w,c
 13559  002D5C  241B               	addwf	(___flmul@b+3)^0,w,c
 13560  002D5E  6E2A               	movwf	___flmul@bexp^0,c
 13561  002D60  AE1A               	btfss	(___flmul@b+2)^0,7,c
 13562  002D62  EFB5  F016         	goto	u9261
 13563  002D66  EFB7  F016         	goto	u9260
 13564  002D6A                     u9261:
 13565  002D6A  EFB8  F016         	goto	l7350
 13566  002D6E                     u9260:
 13567  002D6E  802A               	bsf	___flmul@bexp^0,0,c
 13568  002D70                     l7350:
 13569  002D70  502A               	movf	___flmul@bexp^0,w,c
 13570  002D72  B4D8               	btfsc	status,2,c
 13571  002D74  EFBE  F016         	goto	u9271
 13572  002D78  EFC0  F016         	goto	u9270
 13573  002D7C                     u9271:
 13574  002D7C  EFD3  F016         	goto	l7358
 13575  002D80                     u9270:
 13576  002D80  282A               	incf	___flmul@bexp^0,w,c
 13577  002D82  A4D8               	btfss	status,2,c
 13578  002D84  EFC6  F016         	goto	u9281
 13579  002D88  EFC8  F016         	goto	u9280
 13580  002D8C                     u9281:
 13581  002D8C  EFD0  F016         	goto	l7356
 13582  002D90                     u9280:
 13583  002D90  0E00               	movlw	0
 13584  002D92  6E18               	movwf	___flmul@b^0,c
 13585  002D94  0E00               	movlw	0
 13586  002D96  6E19               	movwf	(___flmul@b+1)^0,c
 13587  002D98  0E00               	movlw	0
 13588  002D9A  6E1A               	movwf	(___flmul@b+2)^0,c
 13589  002D9C  0E00               	movlw	0
 13590  002D9E  6E1B               	movwf	(___flmul@b+3)^0,c
 13591  002DA0                     l7356:
 13592  002DA0  8E1A               	bsf	(___flmul@b+2)^0,7,c
 13593  002DA2  EFDB  F016         	goto	l7360
 13594  002DA6                     l7358:
 13595  002DA6  0E00               	movlw	0
 13596  002DA8  6E18               	movwf	___flmul@b^0,c
 13597  002DAA  0E00               	movlw	0
 13598  002DAC  6E19               	movwf	(___flmul@b+1)^0,c
 13599  002DAE  0E00               	movlw	0
 13600  002DB0  6E1A               	movwf	(___flmul@b+2)^0,c
 13601  002DB2  0E00               	movlw	0
 13602  002DB4  6E1B               	movwf	(___flmul@b+3)^0,c
 13603  002DB6                     l7360:
 13604  002DB6  501F               	movf	(___flmul@a+3)^0,w,c
 13605  002DB8  0B80               	andlw	128
 13606  002DBA  1A24               	xorwf	___flmul@sign^0,f,c
 13607  002DBC  501F               	movf	(___flmul@a+3)^0,w,c
 13608  002DBE  241F               	addwf	(___flmul@a+3)^0,w,c
 13609  002DC0  6E25               	movwf	___flmul@aexp^0,c
 13610  002DC2  AE1E               	btfss	(___flmul@a+2)^0,7,c
 13611  002DC4  EFE6  F016         	goto	u9291
 13612  002DC8  EFE8  F016         	goto	u9290
 13613  002DCC                     u9291:
 13614  002DCC  EFE9  F016         	goto	l7368
 13615  002DD0                     u9290:
 13616  002DD0  8025               	bsf	___flmul@aexp^0,0,c
 13617  002DD2                     l7368:
 13618  002DD2  5025               	movf	___flmul@aexp^0,w,c
 13619  002DD4  B4D8               	btfsc	status,2,c
 13620  002DD6  EFEF  F016         	goto	u9301
 13621  002DDA  EFF1  F016         	goto	u9300
 13622  002DDE                     u9301:
 13623  002DDE  EF04  F017         	goto	l7376
 13624  002DE2                     u9300:
 13625  002DE2  2825               	incf	___flmul@aexp^0,w,c
 13626  002DE4  A4D8               	btfss	status,2,c
 13627  002DE6  EFF7  F016         	goto	u9311
 13628  002DEA  EFF9  F016         	goto	u9310
 13629  002DEE                     u9311:
 13630  002DEE  EF01  F017         	goto	l7374
 13631  002DF2                     u9310:
 13632  002DF2  0E00               	movlw	0
 13633  002DF4  6E1C               	movwf	___flmul@a^0,c
 13634  002DF6  0E00               	movlw	0
 13635  002DF8  6E1D               	movwf	(___flmul@a+1)^0,c
 13636  002DFA  0E00               	movlw	0
 13637  002DFC  6E1E               	movwf	(___flmul@a+2)^0,c
 13638  002DFE  0E00               	movlw	0
 13639  002E00  6E1F               	movwf	(___flmul@a+3)^0,c
 13640  002E02                     l7374:
 13641  002E02  8E1E               	bsf	(___flmul@a+2)^0,7,c
 13642  002E04  EF0C  F017         	goto	l1414
 13643  002E08                     l7376:
 13644  002E08  0E00               	movlw	0
 13645  002E0A  6E1C               	movwf	___flmul@a^0,c
 13646  002E0C  0E00               	movlw	0
 13647  002E0E  6E1D               	movwf	(___flmul@a+1)^0,c
 13648  002E10  0E00               	movlw	0
 13649  002E12  6E1E               	movwf	(___flmul@a+2)^0,c
 13650  002E14  0E00               	movlw	0
 13651  002E16  6E1F               	movwf	(___flmul@a+3)^0,c
 13652  002E18                     l1414:
 13653  002E18  5025               	movf	___flmul@aexp^0,w,c
 13654  002E1A  B4D8               	btfsc	status,2,c
 13655  002E1C  EF12  F017         	goto	u9321
 13656  002E20  EF14  F017         	goto	u9320
 13657  002E24                     u9321:
 13658  002E24  EF1C  F017         	goto	l7380
 13659  002E28                     u9320:
 13660  002E28  502A               	movf	___flmul@bexp^0,w,c
 13661  002E2A  A4D8               	btfss	status,2,c
 13662  002E2C  EF1A  F017         	goto	u9331
 13663  002E30  EF1C  F017         	goto	u9330
 13664  002E34                     u9331:
 13665  002E34  EF26  F017         	goto	l7384
 13666  002E38                     u9330:
 13667  002E38                     l7380:
 13668  002E38  0E00               	movlw	0
 13669  002E3A  6E18               	movwf	?___flmul^0,c
 13670  002E3C  0E00               	movlw	0
 13671  002E3E  6E19               	movwf	(?___flmul+1)^0,c
 13672  002E40  0E00               	movlw	0
 13673  002E42  6E1A               	movwf	(?___flmul+2)^0,c
 13674  002E44  0E00               	movlw	0
 13675  002E46  6E1B               	movwf	(?___flmul+3)^0,c
 13676  002E48  EFBE  F018         	goto	l1418
 13677  002E4C                     l7384:
 13678  002E4C  501E               	movf	(___flmul@a+2)^0,w,c
 13679  002E4E  0218               	mulwf	___flmul@b^0,c
 13680  002E50  CFF3 F02F          	movff	prodl,___flmul@temp
 13681  002E54  CFF4 F030          	movff	prodh,___flmul@temp+1
 13682  002E58  502F               	movf	___flmul@temp^0,w,c
 13683  002E5A  6E26               	movwf	___flmul@grs^0,c
 13684  002E5C  6A27               	clrf	(___flmul@grs+1)^0,c
 13685  002E5E  6A28               	clrf	(___flmul@grs+2)^0,c
 13686  002E60  6A29               	clrf	(___flmul@grs+3)^0,c
 13687  002E62  5030               	movf	(___flmul@temp+1)^0,w,c
 13688  002E64  6E2B               	movwf	___flmul@prod^0,c
 13689  002E66  6A2C               	clrf	(___flmul@prod+1)^0,c
 13690  002E68  6A2D               	clrf	(___flmul@prod+2)^0,c
 13691  002E6A  6A2E               	clrf	(___flmul@prod+3)^0,c
 13692  002E6C  501D               	movf	(___flmul@a+1)^0,w,c
 13693  002E6E  0219               	mulwf	(___flmul@b+1)^0,c
 13694  002E70  CFF3 F02F          	movff	prodl,___flmul@temp
 13695  002E74  CFF4 F030          	movff	prodh,___flmul@temp+1
 13696  002E78  502F               	movf	___flmul@temp^0,w,c
 13697  002E7A  2626               	addwf	___flmul@grs^0,f,c
 13698  002E7C  0E00               	movlw	0
 13699  002E7E  2227               	addwfc	(___flmul@grs+1)^0,f,c
 13700  002E80  2228               	addwfc	(___flmul@grs+2)^0,f,c
 13701  002E82  2229               	addwfc	(___flmul@grs+3)^0,f,c
 13702  002E84  5030               	movf	(___flmul@temp+1)^0,w,c
 13703  002E86  262B               	addwf	___flmul@prod^0,f,c
 13704  002E88  0E00               	movlw	0
 13705  002E8A  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13706  002E8C  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13707  002E8E  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13708  002E90  501C               	movf	___flmul@a^0,w,c
 13709  002E92  021A               	mulwf	(___flmul@b+2)^0,c
 13710  002E94  CFF3 F02F          	movff	prodl,___flmul@temp
 13711  002E98  CFF4 F030          	movff	prodh,___flmul@temp+1
 13712  002E9C  502F               	movf	___flmul@temp^0,w,c
 13713  002E9E  2626               	addwf	___flmul@grs^0,f,c
 13714  002EA0  0E00               	movlw	0
 13715  002EA2  2227               	addwfc	(___flmul@grs+1)^0,f,c
 13716  002EA4  2228               	addwfc	(___flmul@grs+2)^0,f,c
 13717  002EA6  2229               	addwfc	(___flmul@grs+3)^0,f,c
 13718  002EA8  5030               	movf	(___flmul@temp+1)^0,w,c
 13719  002EAA  262B               	addwf	___flmul@prod^0,f,c
 13720  002EAC  0E00               	movlw	0
 13721  002EAE  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13722  002EB0  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13723  002EB2  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13724  002EB4  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
 13725  002EB8  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
 13726  002EBC  C026  F027         	movff	___flmul@grs,___flmul@grs+1
 13727  002EC0  6A26               	clrf	___flmul@grs^0,c
 13728  002EC2  501C               	movf	___flmul@a^0,w,c
 13729  002EC4  0219               	mulwf	(___flmul@b+1)^0,c
 13730  002EC6  CFF3 F02F          	movff	prodl,___flmul@temp
 13731  002ECA  CFF4 F030          	movff	prodh,___flmul@temp+1
 13732  002ECE  502F               	movf	___flmul@temp^0,w,c
 13733  002ED0  2626               	addwf	___flmul@grs^0,f,c
 13734  002ED2  5030               	movf	(___flmul@temp+1)^0,w,c
 13735  002ED4  2227               	addwfc	(___flmul@grs+1)^0,f,c
 13736  002ED6  0E00               	movlw	0
 13737  002ED8  2228               	addwfc	(___flmul@grs+2)^0,f,c
 13738  002EDA  0E00               	movlw	0
 13739  002EDC  2229               	addwfc	(___flmul@grs+3)^0,f,c
 13740  002EDE  501D               	movf	(___flmul@a+1)^0,w,c
 13741  002EE0  0218               	mulwf	___flmul@b^0,c
 13742  002EE2  CFF3 F02F          	movff	prodl,___flmul@temp
 13743  002EE6  CFF4 F030          	movff	prodh,___flmul@temp+1
 13744  002EEA  502F               	movf	___flmul@temp^0,w,c
 13745  002EEC  2626               	addwf	___flmul@grs^0,f,c
 13746  002EEE  5030               	movf	(___flmul@temp+1)^0,w,c
 13747  002EF0  2227               	addwfc	(___flmul@grs+1)^0,f,c
 13748  002EF2  0E00               	movlw	0
 13749  002EF4  2228               	addwfc	(___flmul@grs+2)^0,f,c
 13750  002EF6  0E00               	movlw	0
 13751  002EF8  2229               	addwfc	(___flmul@grs+3)^0,f,c
 13752  002EFA  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
 13753  002EFE  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
 13754  002F02  C026  F027         	movff	___flmul@grs,___flmul@grs+1
 13755  002F06  6A26               	clrf	___flmul@grs^0,c
 13756  002F08  501C               	movf	___flmul@a^0,w,c
 13757  002F0A  0218               	mulwf	___flmul@b^0,c
 13758  002F0C  CFF3 F02F          	movff	prodl,___flmul@temp
 13759  002F10  CFF4 F030          	movff	prodh,___flmul@temp+1
 13760  002F14  502F               	movf	___flmul@temp^0,w,c
 13761  002F16  2626               	addwf	___flmul@grs^0,f,c
 13762  002F18  5030               	movf	(___flmul@temp+1)^0,w,c
 13763  002F1A  2227               	addwfc	(___flmul@grs+1)^0,f,c
 13764  002F1C  0E00               	movlw	0
 13765  002F1E  2228               	addwfc	(___flmul@grs+2)^0,f,c
 13766  002F20  0E00               	movlw	0
 13767  002F22  2229               	addwfc	(___flmul@grs+3)^0,f,c
 13768  002F24  501E               	movf	(___flmul@a+2)^0,w,c
 13769  002F26  0219               	mulwf	(___flmul@b+1)^0,c
 13770  002F28  CFF3 F02F          	movff	prodl,___flmul@temp
 13771  002F2C  CFF4 F030          	movff	prodh,___flmul@temp+1
 13772  002F30  502F               	movf	___flmul@temp^0,w,c
 13773  002F32  262B               	addwf	___flmul@prod^0,f,c
 13774  002F34  5030               	movf	(___flmul@temp+1)^0,w,c
 13775  002F36  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13776  002F38  0E00               	movlw	0
 13777  002F3A  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13778  002F3C  0E00               	movlw	0
 13779  002F3E  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13780  002F40  501D               	movf	(___flmul@a+1)^0,w,c
 13781  002F42  021A               	mulwf	(___flmul@b+2)^0,c
 13782  002F44  CFF3 F02F          	movff	prodl,___flmul@temp
 13783  002F48  CFF4 F030          	movff	prodh,___flmul@temp+1
 13784  002F4C  502F               	movf	___flmul@temp^0,w,c
 13785  002F4E  262B               	addwf	___flmul@prod^0,f,c
 13786  002F50  5030               	movf	(___flmul@temp+1)^0,w,c
 13787  002F52  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13788  002F54  0E00               	movlw	0
 13789  002F56  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13790  002F58  0E00               	movlw	0
 13791  002F5A  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13792  002F5C  501E               	movf	(___flmul@a+2)^0,w,c
 13793  002F5E  021A               	mulwf	(___flmul@b+2)^0,c
 13794  002F60  CFF3 F02F          	movff	prodl,___flmul@temp
 13795  002F64  CFF4 F030          	movff	prodh,___flmul@temp+1
 13796  002F68  502F               	movf	___flmul@temp^0,w,c
 13797  002F6A  6E20               	movwf	??___flmul^0,c
 13798  002F6C  5030               	movf	(___flmul@temp+1)^0,w,c
 13799  002F6E  6E21               	movwf	(??___flmul+1)^0,c
 13800  002F70  6A22               	clrf	(??___flmul+2)^0,c
 13801  002F72  6A23               	clrf	(??___flmul+3)^0,c
 13802  002F74  C022  F023         	movff	??___flmul+2,??___flmul+3
 13803  002F78  C021  F022         	movff	??___flmul+1,??___flmul+2
 13804  002F7C  C020  F021         	movff	??___flmul,??___flmul+1
 13805  002F80  6A20               	clrf	??___flmul^0,c
 13806  002F82  5020               	movf	??___flmul^0,w,c
 13807  002F84  262B               	addwf	___flmul@prod^0,f,c
 13808  002F86  5021               	movf	(??___flmul+1)^0,w,c
 13809  002F88  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13810  002F8A  5022               	movf	(??___flmul+2)^0,w,c
 13811  002F8C  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13812  002F8E  5023               	movf	(??___flmul+3)^0,w,c
 13813  002F90  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13814  002F92  C026  F020         	movff	___flmul@grs,??___flmul
 13815  002F96  C027  F021         	movff	___flmul@grs+1,??___flmul+1
 13816  002F9A  C028  F022         	movff	___flmul@grs+2,??___flmul+2
 13817  002F9E  C029  F023         	movff	___flmul@grs+3,??___flmul+3
 13818  002FA2  0E19               	movlw	25
 13819  002FA4  EFD9  F017         	goto	u9340
 13820  002FA8                     u9345:
 13821  002FA8  90D8               	bcf	status,0,c
 13822  002FAA  3223               	rrcf	(??___flmul+3)^0,f,c
 13823  002FAC  3222               	rrcf	(??___flmul+2)^0,f,c
 13824  002FAE  3221               	rrcf	(??___flmul+1)^0,f,c
 13825  002FB0  3220               	rrcf	??___flmul^0,f,c
 13826  002FB2                     u9340:
 13827  002FB2  2EE8               	decfsz	wreg,f,c
 13828  002FB4  EFD4  F017         	goto	u9345
 13829  002FB8  5020               	movf	??___flmul^0,w,c
 13830  002FBA  262B               	addwf	___flmul@prod^0,f,c
 13831  002FBC  5021               	movf	(??___flmul+1)^0,w,c
 13832  002FBE  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13833  002FC0  5022               	movf	(??___flmul+2)^0,w,c
 13834  002FC2  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13835  002FC4  5023               	movf	(??___flmul+3)^0,w,c
 13836  002FC6  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13837  002FC8  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
 13838  002FCC  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
 13839  002FD0  C026  F027         	movff	___flmul@grs,___flmul@grs+1
 13840  002FD4  6A26               	clrf	___flmul@grs^0,c
 13841  002FD6  5025               	movf	___flmul@aexp^0,w,c
 13842  002FD8  C02A  F020         	movff	___flmul@bexp,??___flmul
 13843  002FDC  6A21               	clrf	(??___flmul+1)^0,c
 13844  002FDE  2620               	addwf	??___flmul^0,f,c
 13845  002FE0  0E00               	movlw	0
 13846  002FE2  2221               	addwfc	(??___flmul+1)^0,f,c
 13847  002FE4  0E82               	movlw	130
 13848  002FE6  2420               	addwf	??___flmul^0,w,c
 13849  002FE8  6E2F               	movwf	___flmul@temp^0,c
 13850  002FEA  0EFF               	movlw	255
 13851  002FEC  2021               	addwfc	(??___flmul+1)^0,w,c
 13852  002FEE  6E30               	movwf	(___flmul@temp+1)^0,c
 13853  002FF0  EF0F  F018         	goto	l7432
 13854  002FF4                     l7426:
 13855  002FF4  90D8               	bcf	status,0,c
 13856  002FF6  362B               	rlcf	___flmul@prod^0,f,c
 13857  002FF8  362C               	rlcf	(___flmul@prod+1)^0,f,c
 13858  002FFA  362D               	rlcf	(___flmul@prod+2)^0,f,c
 13859  002FFC  362E               	rlcf	(___flmul@prod+3)^0,f,c
 13860  002FFE  AE29               	btfss	(___flmul@grs+3)^0,7,c
 13861  003000  EF04  F018         	goto	u9351
 13862  003004  EF06  F018         	goto	u9350
 13863  003008                     u9351:
 13864  003008  EF07  F018         	goto	l1421
 13865  00300C                     u9350:
 13866  00300C  802B               	bsf	___flmul@prod^0,0,c
 13867  00300E                     l1421:
 13868  00300E  90D8               	bcf	status,0,c
 13869  003010  3626               	rlcf	___flmul@grs^0,f,c
 13870  003012  3627               	rlcf	(___flmul@grs+1)^0,f,c
 13871  003014  3628               	rlcf	(___flmul@grs+2)^0,f,c
 13872  003016  3629               	rlcf	(___flmul@grs+3)^0,f,c
 13873  003018  062F               	decf	___flmul@temp^0,f,c
 13874  00301A  A0D8               	btfss	status,0,c
 13875  00301C  0630               	decf	(___flmul@temp+1)^0,f,c
 13876  00301E                     l7432:
 13877  00301E  AE2D               	btfss	(___flmul@prod+2)^0,7,c
 13878  003020  EF14  F018         	goto	u9361
 13879  003024  EF16  F018         	goto	u9360
 13880  003028                     u9361:
 13881  003028  EFFA  F017         	goto	l7426
 13882  00302C                     u9360:
 13883  00302C  0E00               	movlw	0
 13884  00302E  6E25               	movwf	___flmul@aexp^0,c
 13885  003030  AE29               	btfss	(___flmul@grs+3)^0,7,c
 13886  003032  EF1D  F018         	goto	u9371
 13887  003036  EF1F  F018         	goto	u9370
 13888  00303A                     u9371:
 13889  00303A  EF43  F018         	goto	l1423
 13890  00303E                     u9370:
 13891  00303E  0EFF               	movlw	255
 13892  003040  1426               	andwf	___flmul@grs^0,w,c
 13893  003042  6E20               	movwf	??___flmul^0,c
 13894  003044  0EFF               	movlw	255
 13895  003046  1427               	andwf	(___flmul@grs+1)^0,w,c
 13896  003048  6E21               	movwf	(??___flmul+1)^0,c
 13897  00304A  0EFF               	movlw	255
 13898  00304C  1428               	andwf	(___flmul@grs+2)^0,w,c
 13899  00304E  6E22               	movwf	(??___flmul+2)^0,c
 13900  003050  0E7F               	movlw	127
 13901  003052  1429               	andwf	(___flmul@grs+3)^0,w,c
 13902  003054  6E23               	movwf	(??___flmul+3)^0,c
 13903  003056  5020               	movf	??___flmul^0,w,c
 13904  003058  1021               	iorwf	(??___flmul+1)^0,w,c
 13905  00305A  1022               	iorwf	(??___flmul+2)^0,w,c
 13906  00305C  1023               	iorwf	(??___flmul+3)^0,w,c
 13907  00305E  B4D8               	btfsc	status,2,c
 13908  003060  EF34  F018         	goto	u9381
 13909  003064  EF36  F018         	goto	u9380
 13910  003068                     u9381:
 13911  003068  EF3A  F018         	goto	l1424
 13912  00306C                     u9380:
 13913  00306C                     l7440:
 13914  00306C  0E01               	movlw	1
 13915  00306E  6E25               	movwf	___flmul@aexp^0,c
 13916  003070  EF43  F018         	goto	l1423
 13917  003074                     l1424:
 13918  003074  A02B               	btfss	___flmul@prod^0,0,c
 13919  003076  EF3F  F018         	goto	u9391
 13920  00307A  EF41  F018         	goto	u9390
 13921  00307E                     u9391:
 13922  00307E  EF43  F018         	goto	l1423
 13923  003082                     u9390:
 13924  003082  EF36  F018         	goto	l7440
 13925  003086                     l1423:
 13926  003086  5025               	movf	___flmul@aexp^0,w,c
 13927  003088  B4D8               	btfsc	status,2,c
 13928  00308A  EF49  F018         	goto	u9401
 13929  00308E  EF4B  F018         	goto	u9400
 13930  003092                     u9401:
 13931  003092  EF6F  F018         	goto	l7452
 13932  003096                     u9400:
 13933  003096  0E01               	movlw	1
 13934  003098  262B               	addwf	___flmul@prod^0,f,c
 13935  00309A  0E00               	movlw	0
 13936  00309C  222C               	addwfc	(___flmul@prod+1)^0,f,c
 13937  00309E  222D               	addwfc	(___flmul@prod+2)^0,f,c
 13938  0030A0  222E               	addwfc	(___flmul@prod+3)^0,f,c
 13939  0030A2  A02E               	btfss	(___flmul@prod+3)^0,0,c
 13940  0030A4  EF56  F018         	goto	u9411
 13941  0030A8  EF58  F018         	goto	u9410
 13942  0030AC                     u9411:
 13943  0030AC  EF6F  F018         	goto	l7452
 13944  0030B0                     u9410:
 13945  0030B0  C02B  F020         	movff	___flmul@prod,??___flmul
 13946  0030B4  C02C  F021         	movff	___flmul@prod+1,??___flmul+1
 13947  0030B8  C02D  F022         	movff	___flmul@prod+2,??___flmul+2
 13948  0030BC  C02E  F023         	movff	___flmul@prod+3,??___flmul+3
 13949  0030C0  3423               	rlcf	(??___flmul+3)^0,w,c
 13950  0030C2  3223               	rrcf	(??___flmul+3)^0,f,c
 13951  0030C4  3222               	rrcf	(??___flmul+2)^0,f,c
 13952  0030C6  3221               	rrcf	(??___flmul+1)^0,f,c
 13953  0030C8  3220               	rrcf	??___flmul^0,f,c
 13954  0030CA  C020  F02B         	movff	??___flmul,___flmul@prod
 13955  0030CE  C021  F02C         	movff	??___flmul+1,___flmul@prod+1
 13956  0030D2  C022  F02D         	movff	??___flmul+2,___flmul@prod+2
 13957  0030D6  C023  F02E         	movff	??___flmul+3,___flmul@prod+3
 13958  0030DA  4A2F               	infsnz	___flmul@temp^0,f,c
 13959  0030DC  2A30               	incf	(___flmul@temp+1)^0,f,c
 13960  0030DE                     l7452:
 13961  0030DE  BE30               	btfsc	(___flmul@temp+1)^0,7,c
 13962  0030E0  EF7A  F018         	goto	u9421
 13963  0030E4  5030               	movf	(___flmul@temp+1)^0,w,c
 13964  0030E6  E108               	bnz	u9420
 13965  0030E8  282F               	incf	___flmul@temp^0,w,c
 13966  0030EA  A0D8               	btfss	status,0,c
 13967  0030EC  EF7A  F018         	goto	u9421
 13968  0030F0  EF7C  F018         	goto	u9420
 13969  0030F4                     u9421:
 13970  0030F4  EF86  F018         	goto	l7456
 13971  0030F8                     u9420:
 13972  0030F8  0E00               	movlw	0
 13973  0030FA  6E2B               	movwf	___flmul@prod^0,c
 13974  0030FC  0E00               	movlw	0
 13975  0030FE  6E2C               	movwf	(___flmul@prod+1)^0,c
 13976  003100  0E80               	movlw	128
 13977  003102  6E2D               	movwf	(___flmul@prod+2)^0,c
 13978  003104  0E7F               	movlw	127
 13979  003106  6E2E               	movwf	(___flmul@prod+3)^0,c
 13980  003108  EFB4  F018         	goto	l7468
 13981  00310C                     l7456:
 13982  00310C  BE30               	btfsc	(___flmul@temp+1)^0,7,c
 13983  00310E  EF93  F018         	goto	u9430
 13984  003112  5030               	movf	(___flmul@temp+1)^0,w,c
 13985  003114  E106               	bnz	u9431
 13986  003116  042F               	decf	___flmul@temp^0,w,c
 13987  003118  B0D8               	btfsc	status,0,c
 13988  00311A  EF91  F018         	goto	u9431
 13989  00311E  EF93  F018         	goto	u9430
 13990  003122                     u9431:
 13991  003122  EF9F  F018         	goto	l1431
 13992  003126                     u9430:
 13993  003126  0E00               	movlw	0
 13994  003128  6E2B               	movwf	___flmul@prod^0,c
 13995  00312A  0E00               	movlw	0
 13996  00312C  6E2C               	movwf	(___flmul@prod+1)^0,c
 13997  00312E  0E00               	movlw	0
 13998  003130  6E2D               	movwf	(___flmul@prod+2)^0,c
 13999  003132  0E00               	movlw	0
 14000  003134  6E2E               	movwf	(___flmul@prod+3)^0,c
 14001  003136  0E00               	movlw	0
 14002  003138  6E24               	movwf	___flmul@sign^0,c
 14003  00313A  EFB4  F018         	goto	l7468
 14004  00313E                     l1431:
 14005  00313E  C02F  F02A         	movff	___flmul@temp,___flmul@bexp
 14006  003142  0EFF               	movlw	255
 14007  003144  162B               	andwf	___flmul@prod^0,f,c
 14008  003146  0EFF               	movlw	255
 14009  003148  162C               	andwf	(___flmul@prod+1)^0,f,c
 14010  00314A  0E7F               	movlw	127
 14011  00314C  162D               	andwf	(___flmul@prod+2)^0,f,c
 14012  00314E  0E00               	movlw	0
 14013  003150  162E               	andwf	(___flmul@prod+3)^0,f,c
 14014  003152  A02A               	btfss	___flmul@bexp^0,0,c
 14015  003154  EFAE  F018         	goto	u9441
 14016  003158  EFB0  F018         	goto	u9440
 14017  00315C                     u9441:
 14018  00315C  EFB1  F018         	goto	l7466
 14019  003160                     u9440:
 14020  003160  8E2D               	bsf	(___flmul@prod+2)^0,7,c
 14021  003162                     l7466:
 14022  003162  90D8               	bcf	status,0,c
 14023  003164  302A               	rrcf	___flmul@bexp^0,w,c
 14024  003166  6E2E               	movwf	(___flmul@prod+3)^0,c
 14025  003168                     l7468:
 14026  003168  5024               	movf	___flmul@sign^0,w,c
 14027  00316A  122E               	iorwf	(___flmul@prod+3)^0,f,c
 14028  00316C  C02B  F018         	movff	___flmul@prod,?___flmul
 14029  003170  C02C  F019         	movff	___flmul@prod+1,?___flmul+1
 14030  003174  C02D  F01A         	movff	___flmul@prod+2,?___flmul+2
 14031  003178  C02E  F01B         	movff	___flmul@prod+3,?___flmul+3
 14032  00317C                     l1418:
 14033  00317C  0012               	return		;funcret
 14034  00317E                     __end_of___flmul:
 14035                           	callstack 0
 14036                           
 14037 ;; *************** function ___flge *****************
 14038 ;; Defined at:
 14039 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 14040 ;; Parameters:    Size  Location     Type
 14041 ;;  ff1             4   48[COMRAM] unsigned char 
 14042 ;;  ff2             4   52[COMRAM] unsigned char 
 14043 ;; Auto vars:     Size  Location     Type
 14044 ;;		None
 14045 ;; Return value:  Size  Location     Type
 14046 ;;		None               void
 14047 ;; Registers used:
 14048 ;;		wreg, status,2, status,0
 14049 ;; Tracked objects:
 14050 ;;		On entry : 0/0
 14051 ;;		On exit  : 0/0
 14052 ;;		Unchanged: 0/0
 14053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14054 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14056 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14057 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14058 ;;Total ram usage:       12 bytes
 14059 ;; Hardware stack levels used: 1
 14060 ;; Hardware stack levels required when called: 7
 14061 ;; This function calls:
 14062 ;;		Nothing
 14063 ;; This function is called by:
 14064 ;;		_colourcards_readRGBC
 14065 ;;		_left
 14066 ;;		_efgtoa
 14067 ;;		_colourcards_testingRGBC
 14068 ;; This function uses a non-reentrant model
 14069 ;;
 14070                           
 14071                           	psect	text72
 14072  004FCA                     __ptext72:
 14073                           	callstack 0
 14074  004FCA                     ___flge:
 14075                           	callstack 17
 14076  004FCA  0E00               	movlw	0
 14077  004FCC  1431               	andwf	___flge@ff1^0,w,c
 14078  004FCE  6E39               	movwf	??___flge^0,c
 14079  004FD0  0E00               	movlw	0
 14080  004FD2  1432               	andwf	(___flge@ff1+1)^0,w,c
 14081  004FD4  6E3A               	movwf	(??___flge+1)^0,c
 14082  004FD6  0E80               	movlw	128
 14083  004FD8  1433               	andwf	(___flge@ff1+2)^0,w,c
 14084  004FDA  6E3B               	movwf	(??___flge+2)^0,c
 14085  004FDC  0E7F               	movlw	127
 14086  004FDE  1434               	andwf	(___flge@ff1+3)^0,w,c
 14087  004FE0  6E3C               	movwf	(??___flge+3)^0,c
 14088  004FE2  5039               	movf	??___flge^0,w,c
 14089  004FE4  103A               	iorwf	(??___flge+1)^0,w,c
 14090  004FE6  103B               	iorwf	(??___flge+2)^0,w,c
 14091  004FE8  103C               	iorwf	(??___flge+3)^0,w,c
 14092  004FEA  A4D8               	btfss	status,2,c
 14093  004FEC  EFFA  F027         	goto	u9601
 14094  004FF0  EFFC  F027         	goto	u9600
 14095  004FF4                     u9601:
 14096  004FF4  EF04  F028         	goto	l7580
 14097  004FF8                     u9600:
 14098  004FF8  0E00               	movlw	0
 14099  004FFA  6E31               	movwf	___flge@ff1^0,c
 14100  004FFC  0E00               	movlw	0
 14101  004FFE  6E32               	movwf	(___flge@ff1+1)^0,c
 14102  005000  0E00               	movlw	0
 14103  005002  6E33               	movwf	(___flge@ff1+2)^0,c
 14104  005004  0E00               	movlw	0
 14105  005006  6E34               	movwf	(___flge@ff1+3)^0,c
 14106  005008                     l7580:
 14107  005008  0E00               	movlw	0
 14108  00500A  1435               	andwf	___flge@ff2^0,w,c
 14109  00500C  6E39               	movwf	??___flge^0,c
 14110  00500E  0E00               	movlw	0
 14111  005010  1436               	andwf	(___flge@ff2+1)^0,w,c
 14112  005012  6E3A               	movwf	(??___flge+1)^0,c
 14113  005014  0E80               	movlw	128
 14114  005016  1437               	andwf	(___flge@ff2+2)^0,w,c
 14115  005018  6E3B               	movwf	(??___flge+2)^0,c
 14116  00501A  0E7F               	movlw	127
 14117  00501C  1438               	andwf	(___flge@ff2+3)^0,w,c
 14118  00501E  6E3C               	movwf	(??___flge+3)^0,c
 14119  005020  5039               	movf	??___flge^0,w,c
 14120  005022  103A               	iorwf	(??___flge+1)^0,w,c
 14121  005024  103B               	iorwf	(??___flge+2)^0,w,c
 14122  005026  103C               	iorwf	(??___flge+3)^0,w,c
 14123  005028  A4D8               	btfss	status,2,c
 14124  00502A  EF19  F028         	goto	u9611
 14125  00502E  EF1B  F028         	goto	u9610
 14126  005032                     u9611:
 14127  005032  EF23  F028         	goto	l7584
 14128  005036                     u9610:
 14129  005036  0E00               	movlw	0
 14130  005038  6E35               	movwf	___flge@ff2^0,c
 14131  00503A  0E00               	movlw	0
 14132  00503C  6E36               	movwf	(___flge@ff2+1)^0,c
 14133  00503E  0E00               	movlw	0
 14134  005040  6E37               	movwf	(___flge@ff2+2)^0,c
 14135  005042  0E00               	movlw	0
 14136  005044  6E38               	movwf	(___flge@ff2+3)^0,c
 14137  005046                     l7584:
 14138  005046  AE34               	btfss	(___flge@ff1+3)^0,7,c
 14139  005048  EF28  F028         	goto	u9621
 14140  00504C  EF2A  F028         	goto	u9620
 14141  005050                     u9621:
 14142  005050  EF33  F028         	goto	l7588
 14143  005054                     u9620:
 14144  005054  6C31               	negf	___flge@ff1^0,c
 14145  005056  1E32               	comf	(___flge@ff1+1)^0,f,c
 14146  005058  B0D8               	btfsc	status,0,c
 14147  00505A  2A32               	incf	(___flge@ff1+1)^0,f,c
 14148  00505C  1E33               	comf	(___flge@ff1+2)^0,f,c
 14149  00505E  B0D8               	btfsc	status,0,c
 14150  005060  2A33               	incf	(___flge@ff1+2)^0,f,c
 14151  005062  0E80               	movlw	128
 14152  005064  5634               	subfwb	(___flge@ff1+3)^0,f,c
 14153  005066                     l7588:
 14154  005066  AE38               	btfss	(___flge@ff2+3)^0,7,c
 14155  005068  EF38  F028         	goto	u9631
 14156  00506C  EF3A  F028         	goto	u9630
 14157  005070                     u9631:
 14158  005070  EF43  F028         	goto	l1065
 14159  005074                     u9630:
 14160  005074  6C35               	negf	___flge@ff2^0,c
 14161  005076  1E36               	comf	(___flge@ff2+1)^0,f,c
 14162  005078  B0D8               	btfsc	status,0,c
 14163  00507A  2A36               	incf	(___flge@ff2+1)^0,f,c
 14164  00507C  1E37               	comf	(___flge@ff2+2)^0,f,c
 14165  00507E  B0D8               	btfsc	status,0,c
 14166  005080  2A37               	incf	(___flge@ff2+2)^0,f,c
 14167  005082  0E80               	movlw	128
 14168  005084  5638               	subfwb	(___flge@ff2+3)^0,f,c
 14169  005086                     l1065:
 14170  005086  0E00               	movlw	0
 14171  005088  1A31               	xorwf	___flge@ff1^0,f,c
 14172  00508A  0E00               	movlw	0
 14173  00508C  1A32               	xorwf	(___flge@ff1+1)^0,f,c
 14174  00508E  0E00               	movlw	0
 14175  005090  1A33               	xorwf	(___flge@ff1+2)^0,f,c
 14176  005092  0E80               	movlw	128
 14177  005094  1A34               	xorwf	(___flge@ff1+3)^0,f,c
 14178  005096  0E00               	movlw	0
 14179  005098  1A35               	xorwf	___flge@ff2^0,f,c
 14180  00509A  0E00               	movlw	0
 14181  00509C  1A36               	xorwf	(___flge@ff2+1)^0,f,c
 14182  00509E  0E00               	movlw	0
 14183  0050A0  1A37               	xorwf	(___flge@ff2+2)^0,f,c
 14184  0050A2  0E80               	movlw	128
 14185  0050A4  1A38               	xorwf	(___flge@ff2+3)^0,f,c
 14186  0050A6  5035               	movf	___flge@ff2^0,w,c
 14187  0050A8  5C31               	subwf	___flge@ff1^0,w,c
 14188  0050AA  5036               	movf	(___flge@ff2+1)^0,w,c
 14189  0050AC  5832               	subwfb	(___flge@ff1+1)^0,w,c
 14190  0050AE  5037               	movf	(___flge@ff2+2)^0,w,c
 14191  0050B0  5833               	subwfb	(___flge@ff1+2)^0,w,c
 14192  0050B2  5038               	movf	(___flge@ff2+3)^0,w,c
 14193  0050B4  5834               	subwfb	(___flge@ff1+3)^0,w,c
 14194  0050B6  B0D8               	btfsc	status,0,c
 14195  0050B8  EF60  F028         	goto	u9641
 14196  0050BC  EF62  F028         	goto	u9640
 14197  0050C0                     u9641:
 14198  0050C0  EF65  F028         	goto	l7594
 14199  0050C4                     u9640:
 14200  0050C4  90D8               	bcf	status,0,c
 14201  0050C6  EF66  F028         	goto	l1070
 14202  0050CA                     l7594:
 14203  0050CA  80D8               	bsf	status,0,c
 14204  0050CC                     l1070:
 14205  0050CC  0012               	return		;funcret
 14206  0050CE                     __end_of___flge:
 14207                           	callstack 0
 14208                           
 14209 ;; *************** function ___fladd *****************
 14210 ;; Defined at:
 14211 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 14212 ;; Parameters:    Size  Location     Type
 14213 ;;  b               4   48[COMRAM] unsigned char 
 14214 ;;  a               4   52[COMRAM] unsigned char 
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;  grs             1   63[COMRAM] unsigned char 
 14217 ;;  bexp            1   62[COMRAM] unsigned char 
 14218 ;;  aexp            1   61[COMRAM] unsigned char 
 14219 ;;  signs           1   60[COMRAM] unsigned char 
 14220 ;; Return value:  Size  Location     Type
 14221 ;;                  4   48[COMRAM] unsigned char 
 14222 ;; Registers used:
 14223 ;;		wreg, status,2, status,0
 14224 ;; Tracked objects:
 14225 ;;		On entry : 0/0
 14226 ;;		On exit  : 0/0
 14227 ;;		Unchanged: 0/0
 14228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14229 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14230 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14232 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14233 ;;Total ram usage:       16 bytes
 14234 ;; Hardware stack levels used: 1
 14235 ;; Hardware stack levels required when called: 7
 14236 ;; This function calls:
 14237 ;;		Nothing
 14238 ;; This function is called by:
 14239 ;;		_left
 14240 ;;		___flsub
 14241 ;;		_efgtoa
 14242 ;; This function uses a non-reentrant model
 14243 ;;
 14244                           
 14245                           	psect	text73
 14246  002894                     __ptext73:
 14247                           	callstack 0
 14248  002894                     ___fladd:
 14249                           	callstack 16
 14250  002894  5034               	movf	(___fladd@b+3)^0,w,c
 14251  002896  0B80               	andlw	128
 14252  002898  6E3D               	movwf	___fladd@signs^0,c
 14253  00289A  5034               	movf	(___fladd@b+3)^0,w,c
 14254  00289C  2434               	addwf	(___fladd@b+3)^0,w,c
 14255  00289E  6E3F               	movwf	___fladd@bexp^0,c
 14256  0028A0  AE33               	btfss	(___fladd@b+2)^0,7,c
 14257  0028A2  EF55  F014         	goto	u8461
 14258  0028A6  EF57  F014         	goto	u8460
 14259  0028AA                     u8461:
 14260  0028AA  EF58  F014         	goto	l6902
 14261  0028AE                     u8460:
 14262  0028AE  803F               	bsf	___fladd@bexp^0,0,c
 14263  0028B0                     l6902:
 14264  0028B0  503F               	movf	___fladd@bexp^0,w,c
 14265  0028B2  B4D8               	btfsc	status,2,c
 14266  0028B4  EF5E  F014         	goto	u8471
 14267  0028B8  EF60  F014         	goto	u8470
 14268  0028BC                     u8471:
 14269  0028BC  EF75  F014         	goto	l6912
 14270  0028C0                     u8470:
 14271  0028C0  283F               	incf	___fladd@bexp^0,w,c
 14272  0028C2  A4D8               	btfss	status,2,c
 14273  0028C4  EF66  F014         	goto	u8481
 14274  0028C8  EF68  F014         	goto	u8480
 14275  0028CC                     u8481:
 14276  0028CC  EF70  F014         	goto	l6908
 14277  0028D0                     u8480:
 14278  0028D0  0E00               	movlw	0
 14279  0028D2  6E31               	movwf	___fladd@b^0,c
 14280  0028D4  0E00               	movlw	0
 14281  0028D6  6E32               	movwf	(___fladd@b+1)^0,c
 14282  0028D8  0E00               	movlw	0
 14283  0028DA  6E33               	movwf	(___fladd@b+2)^0,c
 14284  0028DC  0E00               	movlw	0
 14285  0028DE  6E34               	movwf	(___fladd@b+3)^0,c
 14286  0028E0                     l6908:
 14287  0028E0  8E33               	bsf	(___fladd@b+2)^0,7,c
 14288  0028E2  0E00               	movlw	0
 14289  0028E4  6E34               	movwf	(___fladd@b+3)^0,c
 14290  0028E6  EF7D  F014         	goto	l6914
 14291  0028EA                     l6912:
 14292  0028EA  0E00               	movlw	0
 14293  0028EC  6E31               	movwf	___fladd@b^0,c
 14294  0028EE  0E00               	movlw	0
 14295  0028F0  6E32               	movwf	(___fladd@b+1)^0,c
 14296  0028F2  0E00               	movlw	0
 14297  0028F4  6E33               	movwf	(___fladd@b+2)^0,c
 14298  0028F6  0E00               	movlw	0
 14299  0028F8  6E34               	movwf	(___fladd@b+3)^0,c
 14300  0028FA                     l6914:
 14301  0028FA  5038               	movf	(___fladd@a+3)^0,w,c
 14302  0028FC  0B80               	andlw	128
 14303  0028FE  6E3E               	movwf	___fladd@aexp^0,c
 14304  002900  503D               	movf	___fladd@signs^0,w,c
 14305  002902  183E               	xorwf	___fladd@aexp^0,w,c
 14306  002904  B4D8               	btfsc	status,2,c
 14307  002906  EF87  F014         	goto	u8491
 14308  00290A  EF89  F014         	goto	u8490
 14309  00290E                     u8491:
 14310  00290E  EF8A  F014         	goto	l6920
 14311  002912                     u8490:
 14312  002912  8C3D               	bsf	___fladd@signs^0,6,c
 14313  002914                     l6920:
 14314  002914  5038               	movf	(___fladd@a+3)^0,w,c
 14315  002916  2438               	addwf	(___fladd@a+3)^0,w,c
 14316  002918  6E3E               	movwf	___fladd@aexp^0,c
 14317  00291A  AE37               	btfss	(___fladd@a+2)^0,7,c
 14318  00291C  EF92  F014         	goto	u8501
 14319  002920  EF94  F014         	goto	u8500
 14320  002924                     u8501:
 14321  002924  EF95  F014         	goto	l6926
 14322  002928                     u8500:
 14323  002928  803E               	bsf	___fladd@aexp^0,0,c
 14324  00292A                     l6926:
 14325  00292A  503E               	movf	___fladd@aexp^0,w,c
 14326  00292C  B4D8               	btfsc	status,2,c
 14327  00292E  EF9B  F014         	goto	u8511
 14328  002932  EF9D  F014         	goto	u8510
 14329  002936                     u8511:
 14330  002936  EFB2  F014         	goto	l6936
 14331  00293A                     u8510:
 14332  00293A  283E               	incf	___fladd@aexp^0,w,c
 14333  00293C  A4D8               	btfss	status,2,c
 14334  00293E  EFA3  F014         	goto	u8521
 14335  002942  EFA5  F014         	goto	u8520
 14336  002946                     u8521:
 14337  002946  EFAD  F014         	goto	l6932
 14338  00294A                     u8520:
 14339  00294A  0E00               	movlw	0
 14340  00294C  6E35               	movwf	___fladd@a^0,c
 14341  00294E  0E00               	movlw	0
 14342  002950  6E36               	movwf	(___fladd@a+1)^0,c
 14343  002952  0E00               	movlw	0
 14344  002954  6E37               	movwf	(___fladd@a+2)^0,c
 14345  002956  0E00               	movlw	0
 14346  002958  6E38               	movwf	(___fladd@a+3)^0,c
 14347  00295A                     l6932:
 14348  00295A  8E37               	bsf	(___fladd@a+2)^0,7,c
 14349  00295C  0E00               	movlw	0
 14350  00295E  6E38               	movwf	(___fladd@a+3)^0,c
 14351  002960  EFBA  F014         	goto	l6938
 14352  002964                     l6936:
 14353  002964  0E00               	movlw	0
 14354  002966  6E35               	movwf	___fladd@a^0,c
 14355  002968  0E00               	movlw	0
 14356  00296A  6E36               	movwf	(___fladd@a+1)^0,c
 14357  00296C  0E00               	movlw	0
 14358  00296E  6E37               	movwf	(___fladd@a+2)^0,c
 14359  002970  0E00               	movlw	0
 14360  002972  6E38               	movwf	(___fladd@a+3)^0,c
 14361  002974                     l6938:
 14362  002974  503F               	movf	___fladd@bexp^0,w,c
 14363  002976  5C3E               	subwf	___fladd@aexp^0,w,c
 14364  002978  B0D8               	btfsc	status,0,c
 14365  00297A  EFC1  F014         	goto	u8531
 14366  00297E  EFC3  F014         	goto	u8530
 14367  002982                     u8531:
 14368  002982  EFEA  F014         	goto	l6974
 14369  002986                     u8530:
 14370  002986  AC3D               	btfss	___fladd@signs^0,6,c
 14371  002988  EFC8  F014         	goto	u8541
 14372  00298C  EFCA  F014         	goto	u8540
 14373  002990                     u8541:
 14374  002990  EFCC  F014         	goto	l6944
 14375  002994                     u8540:
 14376  002994  0E80               	movlw	128
 14377  002996  1A3D               	xorwf	___fladd@signs^0,f,c
 14378  002998                     l6944:
 14379  002998  C03F  F040         	movff	___fladd@bexp,___fladd@grs
 14380  00299C  C03E  F03F         	movff	___fladd@aexp,___fladd@bexp
 14381  0029A0  C040  F03E         	movff	___fladd@grs,___fladd@aexp
 14382  0029A4  C031  F040         	movff	___fladd@b,___fladd@grs
 14383  0029A8  C035  F031         	movff	___fladd@a,___fladd@b
 14384  0029AC  C040  F035         	movff	___fladd@grs,___fladd@a
 14385  0029B0  C032  F040         	movff	___fladd@b+1,___fladd@grs
 14386  0029B4  C036  F032         	movff	___fladd@a+1,___fladd@b+1
 14387  0029B8  C040  F036         	movff	___fladd@grs,___fladd@a+1
 14388  0029BC  C033  F040         	movff	___fladd@b+2,___fladd@grs
 14389  0029C0  C037  F033         	movff	___fladd@a+2,___fladd@b+2
 14390  0029C4  C040  F037         	movff	___fladd@grs,___fladd@a+2
 14391  0029C8  C034  F040         	movff	___fladd@b+3,___fladd@grs
 14392  0029CC  C038  F034         	movff	___fladd@a+3,___fladd@b+3
 14393  0029D0  C040  F038         	movff	___fladd@grs,___fladd@a+3
 14394  0029D4                     l6974:
 14395  0029D4  0E00               	movlw	0
 14396  0029D6  6E40               	movwf	___fladd@grs^0,c
 14397  0029D8  503F               	movf	___fladd@bexp^0,w,c
 14398  0029DA  C03E  F039         	movff	___fladd@aexp,??___fladd
 14399  0029DE  6A3A               	clrf	(??___fladd+1)^0,c
 14400  0029E0  5E39               	subwf	??___fladd^0,f,c
 14401  0029E2  0E00               	movlw	0
 14402  0029E4  5A3A               	subwfb	(??___fladd+1)^0,f,c
 14403  0029E6  BE3A               	btfsc	(??___fladd+1)^0,7,c
 14404  0029E8  EFFF  F014         	goto	u8551
 14405  0029EC  503A               	movf	(??___fladd+1)^0,w,c
 14406  0029EE  E109               	bnz	u8550
 14407  0029F0  0E1A               	movlw	26
 14408  0029F2  5C39               	subwf	??___fladd^0,w,c
 14409  0029F4  A0D8               	btfss	status,0,c
 14410  0029F6  EFFF  F014         	goto	u8551
 14411  0029FA  EF01  F015         	goto	u8550
 14412  0029FE                     u8551:
 14413  0029FE  EF38  F015         	goto	l1329
 14414  002A02                     u8550:
 14415  002A02  5031               	movf	___fladd@b^0,w,c
 14416  002A04  1032               	iorwf	(___fladd@b+1)^0,w,c
 14417  002A06  1033               	iorwf	(___fladd@b+2)^0,w,c
 14418  002A08  1034               	iorwf	(___fladd@b+3)^0,w,c
 14419  002A0A  A4D8               	btfss	status,2,c
 14420  002A0C  EF0A  F015         	goto	u8561
 14421  002A10  EF0D  F015         	goto	u8560
 14422  002A14                     u8561:
 14423  002A14  0E01               	movlw	1
 14424  002A16  EF0E  F015         	goto	u8570
 14425  002A1A                     u8560:
 14426  002A1A  0E00               	movlw	0
 14427  002A1C                     u8570:
 14428  002A1C  6E40               	movwf	___fladd@grs^0,c
 14429  002A1E  0E00               	movlw	0
 14430  002A20  6E31               	movwf	___fladd@b^0,c
 14431  002A22  0E00               	movlw	0
 14432  002A24  6E32               	movwf	(___fladd@b+1)^0,c
 14433  002A26  0E00               	movlw	0
 14434  002A28  6E33               	movwf	(___fladd@b+2)^0,c
 14435  002A2A  0E00               	movlw	0
 14436  002A2C  6E34               	movwf	(___fladd@b+3)^0,c
 14437  002A2E  C03E  F03F         	movff	___fladd@aexp,___fladd@bexp
 14438  002A32  EF41  F015         	goto	l1328
 14439  002A36                     l1330:
 14440  002A36  A040               	btfss	___fladd@grs^0,0,c
 14441  002A38  EF20  F015         	goto	u8581
 14442  002A3C  EF22  F015         	goto	u8580
 14443  002A40                     u8581:
 14444  002A40  EF28  F015         	goto	l6986
 14445  002A44                     u8580:
 14446  002A44  90D8               	bcf	status,0,c
 14447  002A46  3040               	rrcf	___fladd@grs^0,w,c
 14448  002A48  0901               	iorlw	1
 14449  002A4A  6E40               	movwf	___fladd@grs^0,c
 14450  002A4C  EF2A  F015         	goto	l6988
 14451  002A50                     l6986:
 14452  002A50  90D8               	bcf	status,0,c
 14453  002A52  3240               	rrcf	___fladd@grs^0,f,c
 14454  002A54                     l6988:
 14455  002A54  A031               	btfss	___fladd@b^0,0,c
 14456  002A56  EF2F  F015         	goto	u8591
 14457  002A5A  EF31  F015         	goto	u8590
 14458  002A5E                     u8591:
 14459  002A5E  EF32  F015         	goto	l6992
 14460  002A62                     u8590:
 14461  002A62  8E40               	bsf	___fladd@grs^0,7,c
 14462  002A64                     l6992:
 14463  002A64  3434               	rlcf	(___fladd@b+3)^0,w,c
 14464  002A66  3234               	rrcf	(___fladd@b+3)^0,f,c
 14465  002A68  3233               	rrcf	(___fladd@b+2)^0,f,c
 14466  002A6A  3232               	rrcf	(___fladd@b+1)^0,f,c
 14467  002A6C  3231               	rrcf	___fladd@b^0,f,c
 14468  002A6E  2A3F               	incf	___fladd@bexp^0,f,c
 14469  002A70                     l1329:
 14470  002A70  503E               	movf	___fladd@aexp^0,w,c
 14471  002A72  5C3F               	subwf	___fladd@bexp^0,w,c
 14472  002A74  A0D8               	btfss	status,0,c
 14473  002A76  EF3F  F015         	goto	u8601
 14474  002A7A  EF41  F015         	goto	u8600
 14475  002A7E                     u8601:
 14476  002A7E  EF1B  F015         	goto	l1330
 14477  002A82                     u8600:
 14478  002A82                     l1328:
 14479  002A82  BC3D               	btfsc	___fladd@signs^0,6,c
 14480  002A84  EF46  F015         	goto	u8611
 14481  002A88  EF48  F015         	goto	u8610
 14482  002A8C                     u8611:
 14483  002A8C  EF88  F015         	goto	l7020
 14484  002A90                     u8610:
 14485  002A90  503F               	movf	___fladd@bexp^0,w,c
 14486  002A92  A4D8               	btfss	status,2,c
 14487  002A94  EF4E  F015         	goto	u8621
 14488  002A98  EF50  F015         	goto	u8620
 14489  002A9C                     u8621:
 14490  002A9C  EF5A  F015         	goto	l7002
 14491  002AA0                     u8620:
 14492  002AA0  0E00               	movlw	0
 14493  002AA2  6E31               	movwf	?___fladd^0,c
 14494  002AA4  0E00               	movlw	0
 14495  002AA6  6E32               	movwf	(?___fladd+1)^0,c
 14496  002AA8  0E00               	movlw	0
 14497  002AAA  6E33               	movwf	(?___fladd+2)^0,c
 14498  002AAC  0E00               	movlw	0
 14499  002AAE  6E34               	movwf	(?___fladd+3)^0,c
 14500  002AB0  EFA9  F016         	goto	l1337
 14501  002AB4                     l7002:
 14502  002AB4  5035               	movf	___fladd@a^0,w,c
 14503  002AB6  2631               	addwf	___fladd@b^0,f,c
 14504  002AB8  5036               	movf	(___fladd@a+1)^0,w,c
 14505  002ABA  2232               	addwfc	(___fladd@b+1)^0,f,c
 14506  002ABC  5037               	movf	(___fladd@a+2)^0,w,c
 14507  002ABE  2233               	addwfc	(___fladd@b+2)^0,f,c
 14508  002AC0  5038               	movf	(___fladd@a+3)^0,w,c
 14509  002AC2  2234               	addwfc	(___fladd@b+3)^0,f,c
 14510  002AC4  A034               	btfss	(___fladd@b+3)^0,0,c
 14511  002AC6  EF67  F015         	goto	u8631
 14512  002ACA  EF69  F015         	goto	u8630
 14513  002ACE                     u8631:
 14514  002ACE  EF15  F016         	goto	l7056
 14515  002AD2                     u8630:
 14516  002AD2  A040               	btfss	___fladd@grs^0,0,c
 14517  002AD4  EF6E  F015         	goto	u8641
 14518  002AD8  EF70  F015         	goto	u8640
 14519  002ADC                     u8641:
 14520  002ADC  EF76  F015         	goto	l7010
 14521  002AE0                     u8640:
 14522  002AE0  90D8               	bcf	status,0,c
 14523  002AE2  3040               	rrcf	___fladd@grs^0,w,c
 14524  002AE4  0901               	iorlw	1
 14525  002AE6  6E40               	movwf	___fladd@grs^0,c
 14526  002AE8  EF78  F015         	goto	l7012
 14527  002AEC                     l7010:
 14528  002AEC  90D8               	bcf	status,0,c
 14529  002AEE  3240               	rrcf	___fladd@grs^0,f,c
 14530  002AF0                     l7012:
 14531  002AF0  A031               	btfss	___fladd@b^0,0,c
 14532  002AF2  EF7D  F015         	goto	u8651
 14533  002AF6  EF7F  F015         	goto	u8650
 14534  002AFA                     u8651:
 14535  002AFA  EF80  F015         	goto	l7016
 14536  002AFE                     u8650:
 14537  002AFE  8E40               	bsf	___fladd@grs^0,7,c
 14538  002B00                     l7016:
 14539  002B00  3434               	rlcf	(___fladd@b+3)^0,w,c
 14540  002B02  3234               	rrcf	(___fladd@b+3)^0,f,c
 14541  002B04  3233               	rrcf	(___fladd@b+2)^0,f,c
 14542  002B06  3232               	rrcf	(___fladd@b+1)^0,f,c
 14543  002B08  3231               	rrcf	___fladd@b^0,f,c
 14544  002B0A  2A3F               	incf	___fladd@bexp^0,f,c
 14545  002B0C  EF15  F016         	goto	l7056
 14546  002B10                     l7020:
 14547  002B10  5035               	movf	___fladd@a^0,w,c
 14548  002B12  5C31               	subwf	___fladd@b^0,w,c
 14549  002B14  5036               	movf	(___fladd@a+1)^0,w,c
 14550  002B16  5832               	subwfb	(___fladd@b+1)^0,w,c
 14551  002B18  5037               	movf	(___fladd@a+2)^0,w,c
 14552  002B1A  5833               	subwfb	(___fladd@b+2)^0,w,c
 14553  002B1C  5034               	movf	(___fladd@b+3)^0,w,c
 14554  002B1E  0A80               	xorlw	128
 14555  002B20  6E39               	movwf	??___fladd^0,c
 14556  002B22  5038               	movf	(___fladd@a+3)^0,w,c
 14557  002B24  0A80               	xorlw	128
 14558  002B26  5839               	subwfb	??___fladd^0,w,c
 14559  002B28  B0D8               	btfsc	status,0,c
 14560  002B2A  EF99  F015         	goto	u8661
 14561  002B2E  EF9B  F015         	goto	u8660
 14562  002B32                     u8661:
 14563  002B32  EFC6  F015         	goto	l7030
 14564  002B36                     u8660:
 14565  002B36  5031               	movf	___fladd@b^0,w,c
 14566  002B38  5C35               	subwf	___fladd@a^0,w,c
 14567  002B3A  6E39               	movwf	??___fladd^0,c
 14568  002B3C  5032               	movf	(___fladd@b+1)^0,w,c
 14569  002B3E  5836               	subwfb	(___fladd@a+1)^0,w,c
 14570  002B40  6E3A               	movwf	(??___fladd+1)^0,c
 14571  002B42  5033               	movf	(___fladd@b+2)^0,w,c
 14572  002B44  5837               	subwfb	(___fladd@a+2)^0,w,c
 14573  002B46  6E3B               	movwf	(??___fladd+2)^0,c
 14574  002B48  5034               	movf	(___fladd@b+3)^0,w,c
 14575  002B4A  5838               	subwfb	(___fladd@a+3)^0,w,c
 14576  002B4C  6E3C               	movwf	(??___fladd+3)^0,c
 14577  002B4E  0EFF               	movlw	255
 14578  002B50  2439               	addwf	??___fladd^0,w,c
 14579  002B52  6E31               	movwf	___fladd@b^0,c
 14580  002B54  0EFF               	movlw	255
 14581  002B56  203A               	addwfc	(??___fladd+1)^0,w,c
 14582  002B58  6E32               	movwf	(___fladd@b+1)^0,c
 14583  002B5A  0EFF               	movlw	255
 14584  002B5C  203B               	addwfc	(??___fladd+2)^0,w,c
 14585  002B5E  6E33               	movwf	(___fladd@b+2)^0,c
 14586  002B60  0EFF               	movlw	255
 14587  002B62  203C               	addwfc	(??___fladd+3)^0,w,c
 14588  002B64  6E34               	movwf	(___fladd@b+3)^0,c
 14589  002B66  0E80               	movlw	128
 14590  002B68  1A3D               	xorwf	___fladd@signs^0,f,c
 14591  002B6A  6C40               	negf	___fladd@grs^0,c
 14592  002B6C  5040               	movf	___fladd@grs^0,w,c
 14593  002B6E  A4D8               	btfss	status,2,c
 14594  002B70  EFBC  F015         	goto	u8671
 14595  002B74  EFBE  F015         	goto	u8670
 14596  002B78                     u8671:
 14597  002B78  EFCE  F015         	goto	l1345
 14598  002B7C                     u8670:
 14599  002B7C  0E01               	movlw	1
 14600  002B7E  2631               	addwf	___fladd@b^0,f,c
 14601  002B80  0E00               	movlw	0
 14602  002B82  2232               	addwfc	(___fladd@b+1)^0,f,c
 14603  002B84  2233               	addwfc	(___fladd@b+2)^0,f,c
 14604  002B86  2234               	addwfc	(___fladd@b+3)^0,f,c
 14605  002B88  EFCE  F015         	goto	l1345
 14606  002B8C                     l7030:
 14607  002B8C  5035               	movf	___fladd@a^0,w,c
 14608  002B8E  5E31               	subwf	___fladd@b^0,f,c
 14609  002B90  5036               	movf	(___fladd@a+1)^0,w,c
 14610  002B92  5A32               	subwfb	(___fladd@b+1)^0,f,c
 14611  002B94  5037               	movf	(___fladd@a+2)^0,w,c
 14612  002B96  5A33               	subwfb	(___fladd@b+2)^0,f,c
 14613  002B98  5038               	movf	(___fladd@a+3)^0,w,c
 14614  002B9A  5A34               	subwfb	(___fladd@b+3)^0,f,c
 14615  002B9C                     l1345:
 14616  002B9C  5031               	movf	___fladd@b^0,w,c
 14617  002B9E  1032               	iorwf	(___fladd@b+1)^0,w,c
 14618  002BA0  1033               	iorwf	(___fladd@b+2)^0,w,c
 14619  002BA2  1034               	iorwf	(___fladd@b+3)^0,w,c
 14620  002BA4  A4D8               	btfss	status,2,c
 14621  002BA6  EFD7  F015         	goto	u8681
 14622  002BAA  EFD9  F015         	goto	u8680
 14623  002BAE                     u8681:
 14624  002BAE  EF0E  F016         	goto	l7054
 14625  002BB2                     u8680:
 14626  002BB2  5040               	movf	___fladd@grs^0,w,c
 14627  002BB4  A4D8               	btfss	status,2,c
 14628  002BB6  EFDF  F015         	goto	u8691
 14629  002BBA  EFE1  F015         	goto	u8690
 14630  002BBE                     u8691:
 14631  002BBE  EF0E  F016         	goto	l7054
 14632  002BC2                     u8690:
 14633  002BC2  0E00               	movlw	0
 14634  002BC4  6E31               	movwf	?___fladd^0,c
 14635  002BC6  0E00               	movlw	0
 14636  002BC8  6E32               	movwf	(?___fladd+1)^0,c
 14637  002BCA  0E00               	movlw	0
 14638  002BCC  6E33               	movwf	(?___fladd+2)^0,c
 14639  002BCE  0E00               	movlw	0
 14640  002BD0  6E34               	movwf	(?___fladd+3)^0,c
 14641  002BD2  EFA9  F016         	goto	l1337
 14642  002BD6                     l7038:
 14643  002BD6  90D8               	bcf	status,0,c
 14644  002BD8  3631               	rlcf	___fladd@b^0,f,c
 14645  002BDA  3632               	rlcf	(___fladd@b+1)^0,f,c
 14646  002BDC  3633               	rlcf	(___fladd@b+2)^0,f,c
 14647  002BDE  3634               	rlcf	(___fladd@b+3)^0,f,c
 14648  002BE0  AE40               	btfss	___fladd@grs^0,7,c
 14649  002BE2  EFF5  F015         	goto	u8701
 14650  002BE6  EFF7  F015         	goto	u8700
 14651  002BEA                     u8701:
 14652  002BEA  EFF8  F015         	goto	l7044
 14653  002BEE                     u8700:
 14654  002BEE  8031               	bsf	___fladd@b^0,0,c
 14655  002BF0                     l7044:
 14656  002BF0  A040               	btfss	___fladd@grs^0,0,c
 14657  002BF2  EFFD  F015         	goto	u8711
 14658  002BF6  EFFF  F015         	goto	u8710
 14659  002BFA                     u8711:
 14660  002BFA  EF03  F016         	goto	l7048
 14661  002BFE                     u8710:
 14662  002BFE  80D8               	bsf	status,0,c
 14663  002C00  3640               	rlcf	___fladd@grs^0,f,c
 14664  002C02  EF05  F016         	goto	l7050
 14665  002C06                     l7048:
 14666  002C06  90D8               	bcf	status,0,c
 14667  002C08  3640               	rlcf	___fladd@grs^0,f,c
 14668  002C0A                     l7050:
 14669  002C0A  503F               	movf	___fladd@bexp^0,w,c
 14670  002C0C  B4D8               	btfsc	status,2,c
 14671  002C0E  EF0B  F016         	goto	u8721
 14672  002C12  EF0D  F016         	goto	u8720
 14673  002C16                     u8721:
 14674  002C16  EF0E  F016         	goto	l7054
 14675  002C1A                     u8720:
 14676  002C1A  063F               	decf	___fladd@bexp^0,f,c
 14677  002C1C                     l7054:
 14678  002C1C  AE33               	btfss	(___fladd@b+2)^0,7,c
 14679  002C1E  EF13  F016         	goto	u8731
 14680  002C22  EF15  F016         	goto	u8730
 14681  002C26                     u8731:
 14682  002C26  EFEB  F015         	goto	l7038
 14683  002C2A                     u8730:
 14684  002C2A                     l7056:
 14685  002C2A  0E00               	movlw	0
 14686  002C2C  6E3E               	movwf	___fladd@aexp^0,c
 14687  002C2E  AE40               	btfss	___fladd@grs^0,7,c
 14688  002C30  EF1C  F016         	goto	u8741
 14689  002C34  EF1E  F016         	goto	u8740
 14690  002C38                     u8741:
 14691  002C38  EF36  F016         	goto	l1354
 14692  002C3C                     u8740:
 14693  002C3C  C040  F039         	movff	___fladd@grs,??___fladd
 14694  002C40  0E7F               	movlw	127
 14695  002C42  1639               	andwf	??___fladd^0,f,c
 14696  002C44  B4D8               	btfsc	status,2,c
 14697  002C46  EF27  F016         	goto	u8751
 14698  002C4A  EF29  F016         	goto	u8750
 14699  002C4E                     u8751:
 14700  002C4E  EF2D  F016         	goto	l1355
 14701  002C52                     u8750:
 14702  002C52                     l7062:
 14703  002C52  0E01               	movlw	1
 14704  002C54  6E3E               	movwf	___fladd@aexp^0,c
 14705  002C56  EF36  F016         	goto	l1354
 14706  002C5A                     l1355:
 14707  002C5A  A031               	btfss	___fladd@b^0,0,c
 14708  002C5C  EF32  F016         	goto	u8761
 14709  002C60  EF34  F016         	goto	u8760
 14710  002C64                     u8761:
 14711  002C64  EF36  F016         	goto	l1354
 14712  002C68                     u8760:
 14713  002C68  EF29  F016         	goto	l7062
 14714  002C6C                     l1354:
 14715  002C6C  503E               	movf	___fladd@aexp^0,w,c
 14716  002C6E  B4D8               	btfsc	status,2,c
 14717  002C70  EF3C  F016         	goto	u8771
 14718  002C74  EF3E  F016         	goto	u8770
 14719  002C78                     u8771:
 14720  002C78  EF69  F016         	goto	l7074
 14721  002C7C                     u8770:
 14722  002C7C  0E01               	movlw	1
 14723  002C7E  2631               	addwf	___fladd@b^0,f,c
 14724  002C80  0E00               	movlw	0
 14725  002C82  2232               	addwfc	(___fladd@b+1)^0,f,c
 14726  002C84  2233               	addwfc	(___fladd@b+2)^0,f,c
 14727  002C86  2234               	addwfc	(___fladd@b+3)^0,f,c
 14728  002C88  A034               	btfss	(___fladd@b+3)^0,0,c
 14729  002C8A  EF49  F016         	goto	u8781
 14730  002C8E  EF4B  F016         	goto	u8780
 14731  002C92                     u8781:
 14732  002C92  EF69  F016         	goto	l7074
 14733  002C96                     u8780:
 14734  002C96  C031  F039         	movff	___fladd@b,??___fladd
 14735  002C9A  C032  F03A         	movff	___fladd@b+1,??___fladd+1
 14736  002C9E  C033  F03B         	movff	___fladd@b+2,??___fladd+2
 14737  002CA2  C034  F03C         	movff	___fladd@b+3,??___fladd+3
 14738  002CA6  343C               	rlcf	(??___fladd+3)^0,w,c
 14739  002CA8  323C               	rrcf	(??___fladd+3)^0,f,c
 14740  002CAA  323B               	rrcf	(??___fladd+2)^0,f,c
 14741  002CAC  323A               	rrcf	(??___fladd+1)^0,f,c
 14742  002CAE  3239               	rrcf	??___fladd^0,f,c
 14743  002CB0  C039  F031         	movff	??___fladd,___fladd@b
 14744  002CB4  C03A  F032         	movff	??___fladd+1,___fladd@b+1
 14745  002CB8  C03B  F033         	movff	??___fladd+2,___fladd@b+2
 14746  002CBC  C03C  F034         	movff	??___fladd+3,___fladd@b+3
 14747  002CC0  283F               	incf	___fladd@bexp^0,w,c
 14748  002CC2  B4D8               	btfsc	status,2,c
 14749  002CC4  EF66  F016         	goto	u8791
 14750  002CC8  EF68  F016         	goto	u8790
 14751  002CCC                     u8791:
 14752  002CCC  EF69  F016         	goto	l7074
 14753  002CD0                     u8790:
 14754  002CD0  2A3F               	incf	___fladd@bexp^0,f,c
 14755  002CD2                     l7074:
 14756  002CD2  283F               	incf	___fladd@bexp^0,w,c
 14757  002CD4  B4D8               	btfsc	status,2,c
 14758  002CD6  EF6F  F016         	goto	u8801
 14759  002CDA  EF71  F016         	goto	u8800
 14760  002CDE                     u8801:
 14761  002CDE  EF79  F016         	goto	l7078
 14762  002CE2                     u8800:
 14763  002CE2  503F               	movf	___fladd@bexp^0,w,c
 14764  002CE4  A4D8               	btfss	status,2,c
 14765  002CE6  EF77  F016         	goto	u8811
 14766  002CEA  EF79  F016         	goto	u8810
 14767  002CEE                     u8811:
 14768  002CEE  EF8B  F016         	goto	l7082
 14769  002CF2                     u8810:
 14770  002CF2                     l7078:
 14771  002CF2  0E00               	movlw	0
 14772  002CF4  6E31               	movwf	___fladd@b^0,c
 14773  002CF6  0E00               	movlw	0
 14774  002CF8  6E32               	movwf	(___fladd@b+1)^0,c
 14775  002CFA  0E00               	movlw	0
 14776  002CFC  6E33               	movwf	(___fladd@b+2)^0,c
 14777  002CFE  0E00               	movlw	0
 14778  002D00  6E34               	movwf	(___fladd@b+3)^0,c
 14779  002D02  503F               	movf	___fladd@bexp^0,w,c
 14780  002D04  A4D8               	btfss	status,2,c
 14781  002D06  EF87  F016         	goto	u8821
 14782  002D0A  EF89  F016         	goto	u8820
 14783  002D0E                     u8821:
 14784  002D0E  EF8B  F016         	goto	l7082
 14785  002D12                     u8820:
 14786  002D12  0E00               	movlw	0
 14787  002D14  6E3D               	movwf	___fladd@signs^0,c
 14788  002D16                     l7082:
 14789  002D16  A03F               	btfss	___fladd@bexp^0,0,c
 14790  002D18  EF90  F016         	goto	u8831
 14791  002D1C  EF92  F016         	goto	u8830
 14792  002D20                     u8831:
 14793  002D20  EF95  F016         	goto	l7086
 14794  002D24                     u8830:
 14795  002D24  8E33               	bsf	(___fladd@b+2)^0,7,c
 14796  002D26  EF96  F016         	goto	l7088
 14797  002D2A                     l7086:
 14798  002D2A  9E33               	bcf	(___fladd@b+2)^0,7,c
 14799  002D2C                     l7088:
 14800  002D2C  90D8               	bcf	status,0,c
 14801  002D2E  303F               	rrcf	___fladd@bexp^0,w,c
 14802  002D30  6E34               	movwf	(___fladd@b+3)^0,c
 14803  002D32  AE3D               	btfss	___fladd@signs^0,7,c
 14804  002D34  EF9E  F016         	goto	u8841
 14805  002D38  EFA0  F016         	goto	u8840
 14806  002D3C                     u8841:
 14807  002D3C  EFA1  F016         	goto	l7094
 14808  002D40                     u8840:
 14809  002D40  8E34               	bsf	(___fladd@b+3)^0,7,c
 14810  002D42                     l7094:
 14811  002D42  C031  F031         	movff	___fladd@b,?___fladd
 14812  002D46  C032  F032         	movff	___fladd@b+1,?___fladd+1
 14813  002D4A  C033  F033         	movff	___fladd@b+2,?___fladd+2
 14814  002D4E  C034  F034         	movff	___fladd@b+3,?___fladd+3
 14815  002D52                     l1337:
 14816  002D52  0012               	return		;funcret
 14817  002D54                     __end_of___fladd:
 14818                           	callstack 0
 14819                           
 14820 ;; *************** function _stop *****************
 14821 ;; Defined at:
 14822 ;;		line 126 in file "DC_motors.c"
 14823 ;; Parameters:    Size  Location     Type
 14824 ;;  mL              2   34[COMRAM] PTR struct .
 14825 ;;		 -> main@motorL(9), 
 14826 ;;  mR              2   36[COMRAM] PTR struct .
 14827 ;;		 -> main@motorR(9), 
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;		None
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  1    wreg      void 
 14832 ;; Registers used:
 14833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/0
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14839 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14842 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14843 ;;Total ram usage:        6 bytes
 14844 ;; Hardware stack levels used: 1
 14845 ;; Hardware stack levels required when called: 9
 14846 ;; This function calls:
 14847 ;;		_DCmotors_setPWM
 14848 ;; This function is called by:
 14849 ;;		_main
 14850 ;;		_colourcards_readRGBC
 14851 ;;		_DCmotors_calibration
 14852 ;;		_DCmotors_testing
 14853 ;; This function uses a non-reentrant model
 14854 ;;
 14855                           
 14856                           	psect	text74
 14857  005848                     __ptext74:
 14858                           	callstack 0
 14859  005848                     _stop:
 14860                           	callstack 21
 14861  005848                     
 14862                           ;DC_motors.c: 126: void stop(DC_motor *mL, DC_motor *mR);DC_motors.c: 127: {;DC_motors.c
      +                          : 128:     LATDbits.LATD4 = 1;
 14863  005848  887C               	bsf	124,4,c	;volatile
 14864                           
 14865                           ;DC_motors.c: 130:     while((mL->power > 0) && (mR->power > 0)){
 14866  00584A  EF43  F02C         	goto	l8600
 14867  00584E                     l8592:
 14868                           
 14869                           ;DC_motors.c: 131:         mL->power -= 10;
 14870  00584E  C023  FFD9         	movff	stop@mL,fsr2l
 14871  005852  C024  FFDA         	movff	stop@mL+1,fsr2h
 14872  005856  0E0A               	movlw	10
 14873  005858  5EDF               	subwf	indf2,f,c
 14874                           
 14875                           ;DC_motors.c: 132:         mR->power -= 10;
 14876  00585A  C025  FFD9         	movff	stop@mR,fsr2l
 14877  00585E  C026  FFDA         	movff	stop@mR+1,fsr2h
 14878  005862  0E0A               	movlw	10
 14879  005864  5EDF               	subwf	indf2,f,c
 14880  005866                     
 14881                           ;DC_motors.c: 135:         DCmotors_setPWM(mL);
 14882  005866  C023  F018         	movff	stop@mL,DCmotors_setPWM@m
 14883  00586A  C024  F019         	movff	stop@mL+1,DCmotors_setPWM@m+1
 14884  00586E  ECF1  F01D         	call	_DCmotors_setPWM	;wreg free
 14885  005872                     
 14886                           ;DC_motors.c: 136:         DCmotors_setPWM(mR);
 14887  005872  C025  F018         	movff	stop@mR,DCmotors_setPWM@m
 14888  005876  C026  F019         	movff	stop@mR+1,DCmotors_setPWM@m+1
 14889  00587A  ECF1  F01D         	call	_DCmotors_setPWM	;wreg free
 14890  00587E                     
 14891                           ;DC_motors.c: 137:         _delay((unsigned long)((50)*(64000000/4000000.0)));
 14892  00587E  0EA0               	movlw	160
 14893  005880                     u12827:
 14894  005880  D000               	nop2	
 14895  005882  2EE8               	decfsz	wreg,f,c
 14896  005884  D7FD               	bra	u12827
 14897  005886                     l8600:
 14898                           
 14899                           ;DC_motors.c: 130:     while((mL->power > 0) && (mR->power > 0)){
 14900  005886  C023  FFD9         	movff	stop@mL,fsr2l
 14901  00588A  C024  FFDA         	movff	stop@mL+1,fsr2h
 14902  00588E  50DF               	movf	indf2,w,c
 14903  005890  B4D8               	btfsc	status,2,c
 14904  005892  EF4D  F02C         	goto	u11481
 14905  005896  EF4F  F02C         	goto	u11480
 14906  00589A                     u11481:
 14907  00589A  EF5B  F02C         	goto	l8604
 14908  00589E                     u11480:
 14909  00589E  C025  FFD9         	movff	stop@mR,fsr2l
 14910  0058A2  C026  FFDA         	movff	stop@mR+1,fsr2h
 14911  0058A6  50DF               	movf	indf2,w,c
 14912  0058A8  A4D8               	btfss	status,2,c
 14913  0058AA  EF59  F02C         	goto	u11491
 14914  0058AE  EF5B  F02C         	goto	u11490
 14915  0058B2                     u11491:
 14916  0058B2  EF27  F02C         	goto	l8592
 14917  0058B6                     u11490:
 14918  0058B6                     l8604:
 14919                           
 14920                           ;DC_motors.c: 139:     _delay((unsigned long)((500)*(64000000/4000.0)));
 14921  0058B6  0E29               	movlw	41
 14922  0058B8  6E28               	movwf	(??_stop+1)^0,c
 14923  0058BA  0E96               	movlw	150
 14924  0058BC  6E27               	movwf	??_stop^0,c
 14925  0058BE  0E7F               	movlw	127
 14926  0058C0                     u12837:
 14927  0058C0  2EE8               	decfsz	wreg,f,c
 14928  0058C2  D7FE               	bra	u12837
 14929  0058C4  2E27               	decfsz	??_stop^0,f,c
 14930  0058C6  D7FC               	bra	u12837
 14931  0058C8  2E28               	decfsz	(??_stop+1)^0,f,c
 14932  0058CA  D7FA               	bra	u12837
 14933  0058CC  F000               	nop	
 14934  0058CE                     
 14935                           ;DC_motors.c: 140:     LATDbits.LATD4 = 0;
 14936  0058CE  987C               	bcf	124,4,c	;volatile
 14937  0058D0  0012               	return		;funcret
 14938  0058D2                     __end_of_stop:
 14939                           	callstack 0
 14940                           
 14941 ;; *************** function _DCmotors_setPWM *****************
 14942 ;; Defined at:
 14943 ;;		line 51 in file "DC_motors.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;  m               2   23[COMRAM] PTR struct .
 14946 ;;		 -> main@motorR(9), main@motorL(9), 
 14947 ;; Auto vars:     Size  Location     Type
 14948 ;;  PWMduty         2   32[COMRAM] int 
 14949 ;; Return value:  Size  Location     Type
 14950 ;;                  1    wreg      void 
 14951 ;; Registers used:
 14952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14953 ;; Tracked objects:
 14954 ;;		On entry : 0/0
 14955 ;;		On exit  : 0/0
 14956 ;;		Unchanged: 0/0
 14957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14960 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14961 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14962 ;;Total ram usage:       11 bytes
 14963 ;; Hardware stack levels used: 1
 14964 ;; Hardware stack levels required when called: 8
 14965 ;; This function calls:
 14966 ;;		___awdiv
 14967 ;;		___wmul
 14968 ;; This function is called by:
 14969 ;;		_forward
 14970 ;;		_reverse
 14971 ;;		_stop
 14972 ;;		_left
 14973 ;;		_right
 14974 ;; This function uses a non-reentrant model
 14975 ;;
 14976                           
 14977                           	psect	text75
 14978  003BE2                     __ptext75:
 14979                           	callstack 0
 14980  003BE2                     _DCmotors_setPWM:
 14981                           	callstack 21
 14982  003BE2                     
 14983                           ;DC_motors.c: 51: void DCmotors_setPWM(DC_motor *m);DC_motors.c: 52: {;DC_motors.c: 53: 
      +                           int PWMduty;;DC_motors.c: 55:  if (m->direction){
 14984  003BE2  EE20 F001          	lfsr	2,1
 14985  003BE6  5018               	movf	DCmotors_setPWM@m^0,w,c
 14986  003BE8  26D9               	addwf	fsr2l,f,c
 14987  003BEA  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 14988  003BEC  22DA               	addwfc	fsr2h,f,c
 14989  003BEE  50DF               	movf	indf2,w,c
 14990  003BF0  B4D8               	btfsc	status,2,c
 14991  003BF2  EFFD  F01D         	goto	u11171
 14992  003BF6  EFFF  F01D         	goto	u11170
 14993  003BFA                     u11171:
 14994  003BFA  EF30  F01E         	goto	l8406
 14995  003BFE                     u11170:
 14996  003BFE                     
 14997                           ;DC_motors.c: 56:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
 14998  003BFE  C018  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 14999  003C02  C019  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 15000  003C06  50DF               	movf	indf2,w,c
 15001  003C08  6E1A               	movwf	??_DCmotors_setPWM^0,c
 15002  003C0A  501A               	movf	??_DCmotors_setPWM^0,w,c
 15003  003C0C  6E0A               	movwf	___wmul@multiplier^0,c
 15004  003C0E  6A0B               	clrf	(___wmul@multiplier+1)^0,c
 15005  003C10  EE20 F007          	lfsr	2,7
 15006  003C14  5018               	movf	DCmotors_setPWM@m^0,w,c
 15007  003C16  26D9               	addwf	fsr2l,f,c
 15008  003C18  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15009  003C1A  22DA               	addwfc	fsr2h,f,c
 15010  003C1C  CFDE F00C          	movff	postinc2,___wmul@multiplicand
 15011  003C20  CFDD F00D          	movff	postdec2,___wmul@multiplicand+1
 15012  003C24  ECA6  F030         	call	___wmul	;wreg free
 15013  003C28  C00A  F010         	movff	?___wmul,___awdiv@dividend
 15014  003C2C  C00B  F011         	movff	?___wmul+1,___awdiv@dividend+1
 15015  003C30  0E00               	movlw	0
 15016  003C32  6E13               	movwf	(___awdiv@divisor+1)^0,c
 15017  003C34  0E64               	movlw	100
 15018  003C36  6E12               	movwf	___awdiv@divisor^0,c
 15019  003C38  EC26  F02A         	call	___awdiv	;wreg free
 15020  003C3C  EE20 F007          	lfsr	2,7
 15021  003C40  5018               	movf	DCmotors_setPWM@m^0,w,c
 15022  003C42  26D9               	addwf	fsr2l,f,c
 15023  003C44  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15024  003C46  22DA               	addwfc	fsr2h,f,c
 15025  003C48  CFDE F01B          	movff	postinc2,??_DCmotors_setPWM+1
 15026  003C4C  CFDD F01C          	movff	postdec2,??_DCmotors_setPWM+2
 15027  003C50  5010               	movf	?___awdiv^0,w,c
 15028  003C52  5C1B               	subwf	(??_DCmotors_setPWM+1)^0,w,c
 15029  003C54  6E21               	movwf	DCmotors_setPWM@PWMduty^0,c
 15030  003C56  5011               	movf	(?___awdiv+1)^0,w,c
 15031  003C58  581C               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
 15032  003C5A  6E22               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
 15033                           
 15034                           ;DC_motors.c: 57:  } else {
 15035  003C5C  EF53  F01E         	goto	l8408
 15036  003C60                     l8406:
 15037                           
 15038                           ;DC_motors.c: 58:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 15039  003C60  C018  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 15040  003C64  C019  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 15041  003C68  50DF               	movf	indf2,w,c
 15042  003C6A  6E1A               	movwf	??_DCmotors_setPWM^0,c
 15043  003C6C  501A               	movf	??_DCmotors_setPWM^0,w,c
 15044  003C6E  6E0A               	movwf	___wmul@multiplier^0,c
 15045  003C70  6A0B               	clrf	(___wmul@multiplier+1)^0,c
 15046  003C72  EE20 F007          	lfsr	2,7
 15047  003C76  5018               	movf	DCmotors_setPWM@m^0,w,c
 15048  003C78  26D9               	addwf	fsr2l,f,c
 15049  003C7A  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15050  003C7C  22DA               	addwfc	fsr2h,f,c
 15051  003C7E  CFDE F00C          	movff	postinc2,___wmul@multiplicand
 15052  003C82  CFDD F00D          	movff	postdec2,___wmul@multiplicand+1
 15053  003C86  ECA6  F030         	call	___wmul	;wreg free
 15054  003C8A  C00A  F010         	movff	?___wmul,___awdiv@dividend
 15055  003C8E  C00B  F011         	movff	?___wmul+1,___awdiv@dividend+1
 15056  003C92  0E00               	movlw	0
 15057  003C94  6E13               	movwf	(___awdiv@divisor+1)^0,c
 15058  003C96  0E64               	movlw	100
 15059  003C98  6E12               	movwf	___awdiv@divisor^0,c
 15060  003C9A  EC26  F02A         	call	___awdiv	;wreg free
 15061  003C9E  C010  F021         	movff	?___awdiv,DCmotors_setPWM@PWMduty
 15062  003CA2  C011  F022         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
 15063  003CA6                     l8408:
 15064                           
 15065                           ;DC_motors.c: 61:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
 15066  003CA6  EE20 F002          	lfsr	2,2
 15067  003CAA  5018               	movf	DCmotors_setPWM@m^0,w,c
 15068  003CAC  26D9               	addwf	fsr2l,f,c
 15069  003CAE  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15070  003CB0  22DA               	addwfc	fsr2h,f,c
 15071  003CB2  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
 15072  003CB6  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
 15073  003CBA  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 15074  003CBE  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 15075  003CC2  C021  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
 15076  003CC6                     
 15077                           ;DC_motors.c: 63:  if (m->direction){
 15078  003CC6  EE20 F001          	lfsr	2,1
 15079  003CCA  5018               	movf	DCmotors_setPWM@m^0,w,c
 15080  003CCC  26D9               	addwf	fsr2l,f,c
 15081  003CCE  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15082  003CD0  22DA               	addwfc	fsr2h,f,c
 15083  003CD2  50DF               	movf	indf2,w,c
 15084  003CD4  B4D8               	btfsc	status,2,c
 15085  003CD6  EF6F  F01E         	goto	u11181
 15086  003CDA  EF71  F01E         	goto	u11180
 15087  003CDE                     u11181:
 15088  003CDE  EFA6  F01E         	goto	l8414
 15089  003CE2                     u11180:
 15090  003CE2                     
 15091                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
 15092  003CE2  EE20 F004          	lfsr	2,4
 15093  003CE6  5018               	movf	DCmotors_setPWM@m^0,w,c
 15094  003CE8  26D9               	addwf	fsr2l,f,c
 15095  003CEA  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15096  003CEC  22DA               	addwfc	fsr2h,f,c
 15097  003CEE  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
 15098  003CF2  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
 15099  003CF6  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 15100  003CFA  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 15101  003CFE  EE10 F004          	lfsr	1,4
 15102  003D02  5018               	movf	DCmotors_setPWM@m^0,w,c
 15103  003D04  26E1               	addwf	fsr1l,f,c
 15104  003D06  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15105  003D08  22E2               	addwfc	fsr1h,f,c
 15106  003D0A  CFE6 F01C          	movff	postinc1,??_DCmotors_setPWM+2
 15107  003D0E  CFE5 F01D          	movff	postdec1,??_DCmotors_setPWM+3
 15108  003D12  C01C  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 15109  003D16  C01D  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 15110  003D1A  50E7               	movf	indf1,w,c
 15111  003D1C  6E1E               	movwf	(??_DCmotors_setPWM+4)^0,c
 15112  003D1E  EE10 F006          	lfsr	1,6
 15113  003D22  5018               	movf	DCmotors_setPWM@m^0,w,c
 15114  003D24  26E1               	addwf	fsr1l,f,c
 15115  003D26  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15116  003D28  22E2               	addwfc	fsr1h,f,c
 15117  003D2A  50E7               	movf	indf1,w,c
 15118  003D2C  6E1F               	movwf	(??_DCmotors_setPWM+5)^0,c
 15119  003D2E  0E01               	movlw	1
 15120  003D30  6E20               	movwf	(??_DCmotors_setPWM+6)^0,c
 15121  003D32  2A1F               	incf	(??_DCmotors_setPWM+5)^0,f,c
 15122  003D34  EF9E  F01E         	goto	u11194
 15123  003D38                     u11195:
 15124  003D38  90D8               	bcf	status,0,c
 15125  003D3A  3620               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 15126  003D3C                     u11194:
 15127  003D3C  2E1F               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 15128  003D3E  EF9C  F01E         	goto	u11195
 15129  003D42  5020               	movf	(??_DCmotors_setPWM+6)^0,w,c
 15130  003D44  101E               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
 15131  003D46  6EDF               	movwf	indf2,c
 15132                           
 15133                           ;DC_motors.c: 65:  } else {
 15134  003D48  EFDA  F01E         	goto	l650
 15135  003D4C                     l8414:
 15136                           
 15137                           ;DC_motors.c: 66:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
 15138  003D4C  EE20 F004          	lfsr	2,4
 15139  003D50  5018               	movf	DCmotors_setPWM@m^0,w,c
 15140  003D52  26D9               	addwf	fsr2l,f,c
 15141  003D54  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15142  003D56  22DA               	addwfc	fsr2h,f,c
 15143  003D58  CFDE F01A          	movff	postinc2,??_DCmotors_setPWM
 15144  003D5C  CFDD F01B          	movff	postdec2,??_DCmotors_setPWM+1
 15145  003D60  C01A  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 15146  003D64  C01B  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 15147  003D68  EE10 F004          	lfsr	1,4
 15148  003D6C  5018               	movf	DCmotors_setPWM@m^0,w,c
 15149  003D6E  26E1               	addwf	fsr1l,f,c
 15150  003D70  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15151  003D72  22E2               	addwfc	fsr1h,f,c
 15152  003D74  CFE6 F01C          	movff	postinc1,??_DCmotors_setPWM+2
 15153  003D78  CFE5 F01D          	movff	postdec1,??_DCmotors_setPWM+3
 15154  003D7C  C01C  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 15155  003D80  C01D  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 15156  003D84  50E7               	movf	indf1,w,c
 15157  003D86  6E1E               	movwf	(??_DCmotors_setPWM+4)^0,c
 15158  003D88  EE10 F006          	lfsr	1,6
 15159  003D8C  5018               	movf	DCmotors_setPWM@m^0,w,c
 15160  003D8E  26E1               	addwf	fsr1l,f,c
 15161  003D90  5019               	movf	(DCmotors_setPWM@m+1)^0,w,c
 15162  003D92  22E2               	addwfc	fsr1h,f,c
 15163  003D94  50E7               	movf	indf1,w,c
 15164  003D96  6E1F               	movwf	(??_DCmotors_setPWM+5)^0,c
 15165  003D98  0E01               	movlw	1
 15166  003D9A  6E20               	movwf	(??_DCmotors_setPWM+6)^0,c
 15167  003D9C  2A1F               	incf	(??_DCmotors_setPWM+5)^0,f,c
 15168  003D9E  EFD3  F01E         	goto	u11204
 15169  003DA2                     u11205:
 15170  003DA2  90D8               	bcf	status,0,c
 15171  003DA4  3620               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 15172  003DA6                     u11204:
 15173  003DA6  2E1F               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 15174  003DA8  EFD1  F01E         	goto	u11205
 15175  003DAC  5020               	movf	(??_DCmotors_setPWM+6)^0,w,c
 15176  003DAE  0AFF               	xorlw	255
 15177  003DB0  141E               	andwf	(??_DCmotors_setPWM+4)^0,w,c
 15178  003DB2  6EDF               	movwf	indf2,c
 15179  003DB4                     l650:
 15180  003DB4  0012               	return		;funcret
 15181  003DB6                     __end_of_DCmotors_setPWM:
 15182                           	callstack 0
 15183                           
 15184 ;; *************** function ___wmul *****************
 15185 ;; Defined at:
 15186 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 15187 ;; Parameters:    Size  Location     Type
 15188 ;;  multiplier      2    9[COMRAM] unsigned int 
 15189 ;;  multiplicand    2   11[COMRAM] unsigned int 
 15190 ;; Auto vars:     Size  Location     Type
 15191 ;;  product         2   13[COMRAM] unsigned int 
 15192 ;; Return value:  Size  Location     Type
 15193 ;;                  2    9[COMRAM] unsigned int 
 15194 ;; Registers used:
 15195 ;;		wreg, status,2, status,0, prodl, prodh
 15196 ;; Tracked objects:
 15197 ;;		On entry : 0/0
 15198 ;;		On exit  : 0/0
 15199 ;;		Unchanged: 0/0
 15200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15204 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15205 ;;Total ram usage:        6 bytes
 15206 ;; Hardware stack levels used: 1
 15207 ;; Hardware stack levels required when called: 7
 15208 ;; This function calls:
 15209 ;;		Nothing
 15210 ;; This function is called by:
 15211 ;;		_DCmotors_setPWM
 15212 ;;		_atoi
 15213 ;; This function uses a non-reentrant model
 15214 ;;
 15215                           
 15216                           	psect	text76
 15217  00614C                     __ptext76:
 15218                           	callstack 0
 15219  00614C                     ___wmul:
 15220                           	callstack 21
 15221  00614C  500A               	movf	___wmul@multiplier^0,w,c
 15222  00614E  020C               	mulwf	___wmul@multiplicand^0,c
 15223  006150  CFF3 F00E          	movff	prodl,___wmul@product
 15224  006154  CFF4 F00F          	movff	prodh,___wmul@product+1
 15225  006158  500A               	movf	___wmul@multiplier^0,w,c
 15226  00615A  020D               	mulwf	(___wmul@multiplicand+1)^0,c
 15227  00615C  50F3               	movf	243,w,c
 15228  00615E  260F               	addwf	(___wmul@product+1)^0,f,c
 15229  006160  500B               	movf	(___wmul@multiplier+1)^0,w,c
 15230  006162  020C               	mulwf	___wmul@multiplicand^0,c
 15231  006164  50F3               	movf	243,w,c
 15232  006166  260F               	addwf	(___wmul@product+1)^0,f,c
 15233  006168  C00E  F00A         	movff	___wmul@product,?___wmul
 15234  00616C  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
 15235  006170  0012               	return		;funcret
 15236  006172                     __end_of___wmul:
 15237                           	callstack 0
 15238                           
 15239 ;; *************** function ___awdiv *****************
 15240 ;; Defined at:
 15241 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;  dividend        2   15[COMRAM] int 
 15244 ;;  divisor         2   17[COMRAM] int 
 15245 ;; Auto vars:     Size  Location     Type
 15246 ;;  quotient        2   21[COMRAM] int 
 15247 ;;  sign            1   20[COMRAM] unsigned char 
 15248 ;;  counter         1   19[COMRAM] unsigned char 
 15249 ;; Return value:  Size  Location     Type
 15250 ;;                  2   15[COMRAM] int 
 15251 ;; Registers used:
 15252 ;;		wreg, status,2, status,0
 15253 ;; Tracked objects:
 15254 ;;		On entry : 0/0
 15255 ;;		On exit  : 0/0
 15256 ;;		Unchanged: 0/0
 15257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15259 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15261 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15262 ;;Total ram usage:        8 bytes
 15263 ;; Hardware stack levels used: 1
 15264 ;; Hardware stack levels required when called: 7
 15265 ;; This function calls:
 15266 ;;		Nothing
 15267 ;; This function is called by:
 15268 ;;		_DCmotors_setPWM
 15269 ;;		_efgtoa
 15270 ;; This function uses a non-reentrant model
 15271 ;;
 15272                           
 15273                           	psect	text77
 15274  00544C                     __ptext77:
 15275                           	callstack 0
 15276  00544C                     ___awdiv:
 15277                           	callstack 21
 15278  00544C  0E00               	movlw	0
 15279  00544E  6E15               	movwf	___awdiv@sign^0,c
 15280  005450  BE13               	btfsc	(___awdiv@divisor+1)^0,7,c
 15281  005452  EF2F  F02A         	goto	u9450
 15282  005456  EF2D  F02A         	goto	u9451
 15283  00545A                     u9451:
 15284  00545A  EF35  F02A         	goto	l7488
 15285  00545E                     u9450:
 15286  00545E  6C12               	negf	___awdiv@divisor^0,c
 15287  005460  1E13               	comf	(___awdiv@divisor+1)^0,f,c
 15288  005462  B0D8               	btfsc	status,0,c
 15289  005464  2A13               	incf	(___awdiv@divisor+1)^0,f,c
 15290  005466  0E01               	movlw	1
 15291  005468  6E15               	movwf	___awdiv@sign^0,c
 15292  00546A                     l7488:
 15293  00546A  BE11               	btfsc	(___awdiv@dividend+1)^0,7,c
 15294  00546C  EF3C  F02A         	goto	u9460
 15295  005470  EF3A  F02A         	goto	u9461
 15296  005474                     u9461:
 15297  005474  EF42  F02A         	goto	l7494
 15298  005478                     u9460:
 15299  005478  6C10               	negf	___awdiv@dividend^0,c
 15300  00547A  1E11               	comf	(___awdiv@dividend+1)^0,f,c
 15301  00547C  B0D8               	btfsc	status,0,c
 15302  00547E  2A11               	incf	(___awdiv@dividend+1)^0,f,c
 15303  005480  0E01               	movlw	1
 15304  005482  1A15               	xorwf	___awdiv@sign^0,f,c
 15305  005484                     l7494:
 15306  005484  0E00               	movlw	0
 15307  005486  6E17               	movwf	(___awdiv@quotient+1)^0,c
 15308  005488  0E00               	movlw	0
 15309  00548A  6E16               	movwf	___awdiv@quotient^0,c
 15310  00548C  5012               	movf	___awdiv@divisor^0,w,c
 15311  00548E  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
 15312  005490  B4D8               	btfsc	status,2,c
 15313  005492  EF4D  F02A         	goto	u9471
 15314  005496  EF4F  F02A         	goto	u9470
 15315  00549A                     u9471:
 15316  00549A  EF77  F02A         	goto	l7516
 15317  00549E                     u9470:
 15318  00549E  0E01               	movlw	1
 15319  0054A0  6E14               	movwf	___awdiv@counter^0,c
 15320  0054A2  EF57  F02A         	goto	l7502
 15321  0054A6                     l7500:
 15322  0054A6  90D8               	bcf	status,0,c
 15323  0054A8  3612               	rlcf	___awdiv@divisor^0,f,c
 15324  0054AA  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
 15325  0054AC  2A14               	incf	___awdiv@counter^0,f,c
 15326  0054AE                     l7502:
 15327  0054AE  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
 15328  0054B0  EF5C  F02A         	goto	u9481
 15329  0054B4  EF5E  F02A         	goto	u9480
 15330  0054B8                     u9481:
 15331  0054B8  EF53  F02A         	goto	l7500
 15332  0054BC                     u9480:
 15333  0054BC                     l7504:
 15334  0054BC  90D8               	bcf	status,0,c
 15335  0054BE  3616               	rlcf	___awdiv@quotient^0,f,c
 15336  0054C0  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
 15337  0054C2  5012               	movf	___awdiv@divisor^0,w,c
 15338  0054C4  5C10               	subwf	___awdiv@dividend^0,w,c
 15339  0054C6  5013               	movf	(___awdiv@divisor+1)^0,w,c
 15340  0054C8  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
 15341  0054CA  A0D8               	btfss	status,0,c
 15342  0054CC  EF6A  F02A         	goto	u9491
 15343  0054D0  EF6C  F02A         	goto	u9490
 15344  0054D4                     u9491:
 15345  0054D4  EF71  F02A         	goto	l7512
 15346  0054D8                     u9490:
 15347  0054D8  5012               	movf	___awdiv@divisor^0,w,c
 15348  0054DA  5E10               	subwf	___awdiv@dividend^0,f,c
 15349  0054DC  5013               	movf	(___awdiv@divisor+1)^0,w,c
 15350  0054DE  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
 15351  0054E0  8016               	bsf	___awdiv@quotient^0,0,c
 15352  0054E2                     l7512:
 15353  0054E2  90D8               	bcf	status,0,c
 15354  0054E4  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
 15355  0054E6  3212               	rrcf	___awdiv@divisor^0,f,c
 15356  0054E8  2E14               	decfsz	___awdiv@counter^0,f,c
 15357  0054EA  EF5E  F02A         	goto	l7504
 15358  0054EE                     l7516:
 15359  0054EE  5015               	movf	___awdiv@sign^0,w,c
 15360  0054F0  B4D8               	btfsc	status,2,c
 15361  0054F2  EF7D  F02A         	goto	u9501
 15362  0054F6  EF7F  F02A         	goto	u9500
 15363  0054FA                     u9501:
 15364  0054FA  EF83  F02A         	goto	l7520
 15365  0054FE                     u9500:
 15366  0054FE  6C16               	negf	___awdiv@quotient^0,c
 15367  005500  1E17               	comf	(___awdiv@quotient+1)^0,f,c
 15368  005502  B0D8               	btfsc	status,0,c
 15369  005504  2A17               	incf	(___awdiv@quotient+1)^0,f,c
 15370  005506                     l7520:
 15371  005506  C016  F010         	movff	___awdiv@quotient,?___awdiv
 15372  00550A  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
 15373  00550E  0012               	return		;funcret
 15374  005510                     __end_of___awdiv:
 15375                           	callstack 0
 15376                           
 15377 ;; *************** function _adjdelay *****************
 15378 ;; Defined at:
 15379 ;;		line 255 in file "DC_motors.c"
 15380 ;; Parameters:    Size  Location     Type
 15381 ;;  mode            1    wreg     unsigned char 
 15382 ;; Auto vars:     Size  Location     Type
 15383 ;;  mode            1   12[COMRAM] unsigned char 
 15384 ;;  i               1   11[COMRAM] unsigned char 
 15385 ;; Return value:  Size  Location     Type
 15386 ;;                  1    wreg      void 
 15387 ;; Registers used:
 15388 ;;		wreg, status,2, status,0
 15389 ;; Tracked objects:
 15390 ;;		On entry : 0/0
 15391 ;;		On exit  : 0/0
 15392 ;;		Unchanged: 0/0
 15393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15398 ;;Total ram usage:        4 bytes
 15399 ;; Hardware stack levels used: 1
 15400 ;; Hardware stack levels required when called: 7
 15401 ;; This function calls:
 15402 ;;		Nothing
 15403 ;; This function is called by:
 15404 ;;		_DCmotors_calibration
 15405 ;; This function uses a non-reentrant model
 15406 ;;
 15407                           
 15408                           	psect	text78
 15409  004C6A                     __ptext78:
 15410                           	callstack 0
 15411  004C6A                     _adjdelay:
 15412                           	callstack 22
 15413                           
 15414                           ;incstack = 0
 15415                           ;adjdelay@mode stored from wreg
 15416  004C6A  6E0D               	movwf	adjdelay@mode^0,c
 15417  004C6C                     
 15418                           ;DC_motors.c: 255: void adjdelay(unsigned char mode);DC_motors.c: 256: {;DC_motors.c: 25
      +                          7:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 15419  004C6C  0E52               	movlw	82
 15420  004C6E  6E0B               	movwf	(??_adjdelay+1)^0,c
 15421  004C70  0E2B               	movlw	43
 15422  004C72  6E0A               	movwf	??_adjdelay^0,c
 15423  004C74  0E00               	movlw	0
 15424  004C76                     u12847:
 15425  004C76  2EE8               	decfsz	wreg,f,c
 15426  004C78  D7FE               	bra	u12847
 15427  004C7A  2E0A               	decfsz	??_adjdelay^0,f,c
 15428  004C7C  D7FC               	bra	u12847
 15429  004C7E  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
 15430  004C80  D7FA               	bra	u12847
 15431  004C82  D000               	nop2	
 15432  004C84                     
 15433                           ;DC_motors.c: 258:     unsigned char i;;DC_motors.c: 259:     for (i=0; i<10; i++) {
 15434  004C84  0E00               	movlw	0
 15435  004C86  6E0C               	movwf	adjdelay@i^0,c
 15436  004C88                     l732:
 15437                           
 15438                           ;DC_motors.c: 260:         if (!PORTFbits.RF2 && PORTFbits.RF3) {
 15439  004C88  B48E               	btfsc	142,2,c	;volatile
 15440  004C8A  EF49  F026         	goto	u11581
 15441  004C8E  EF4B  F026         	goto	u11580
 15442  004C92                     u11581:
 15443  004C92  EF7F  F026         	goto	l734
 15444  004C96                     u11580:
 15445  004C96  A68E               	btfss	142,3,c	;volatile
 15446  004C98  EF50  F026         	goto	u11591
 15447  004C9C  EF52  F026         	goto	u11590
 15448  004CA0                     u11591:
 15449  004CA0  EF7F  F026         	goto	l734
 15450  004CA4                     u11590:
 15451  004CA4                     
 15452                           ;DC_motors.c: 261:             LATDbits.LATD7 = 1;
 15453  004CA4  8E7C               	bsf	124,7,c	;volatile
 15454  004CA6                     
 15455                           ;DC_motors.c: 262:             if (mode==1) {turnright_delay+=5;}
 15456  004CA6  040D               	decf	adjdelay@mode^0,w,c
 15457  004CA8  A4D8               	btfss	status,2,c
 15458  004CAA  EF59  F026         	goto	u11601
 15459  004CAE  EF5B  F026         	goto	u11600
 15460  004CB2                     u11601:
 15461  004CB2  EF62  F026         	goto	l8760
 15462  004CB6                     u11600:
 15463  004CB6  0E05               	movlw	5
 15464  004CB8  0101               	movlb	1	; () banked
 15465  004CBA  27DF               	addwf	_turnright_delay& (0+255),f,b	;volatile
 15466  004CBC  0E00               	movlw	0
 15467  004CBE  23E0               	addwfc	(_turnright_delay+1)& (0+255),f,b	;volatile
 15468  004CC0  EF70  F026         	goto	l8764
 15469  004CC4                     l8760:
 15470  004CC4  0E02               	movlw	2
 15471  004CC6  180D               	xorwf	adjdelay@mode^0,w,c
 15472  004CC8  A4D8               	btfss	status,2,c
 15473  004CCA  EF69  F026         	goto	u11611
 15474  004CCE  EF6B  F026         	goto	u11610
 15475  004CD2                     u11611:
 15476  004CD2  EF70  F026         	goto	l8764
 15477  004CD6                     u11610:
 15478  004CD6  0E05               	movlw	5
 15479  004CD8  0101               	movlb	1	; () banked
 15480  004CDA  27E1               	addwf	_turnleft_delay& (0+255),f,b	;volatile
 15481  004CDC  0E00               	movlw	0
 15482  004CDE  23E2               	addwfc	(_turnleft_delay+1)& (0+255),f,b	;volatile
 15483  004CE0                     l8764:
 15484                           
 15485                           ;DC_motors.c: 264:             _delay((unsigned long)((800)*(64000000/4000.0)));
 15486  004CE0  0E41               	movlw	65
 15487  004CE2  6E0B               	movwf	(??_adjdelay+1)^0,c
 15488  004CE4  0EF0               	movlw	240
 15489  004CE6  6E0A               	movwf	??_adjdelay^0,c
 15490  004CE8  0E33               	movlw	51
 15491  004CEA                     u12857:
 15492  004CEA  2EE8               	decfsz	wreg,f,c
 15493  004CEC  D7FE               	bra	u12857
 15494  004CEE  2E0A               	decfsz	??_adjdelay^0,f,c
 15495  004CF0  D7FC               	bra	u12857
 15496  004CF2  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
 15497  004CF4  D7FA               	bra	u12857
 15498  004CF6  F000               	nop	
 15499  004CF8                     
 15500                           ;DC_motors.c: 265:             LATDbits.LATD7 = 0;
 15501  004CF8  9E7C               	bcf	124,7,c	;volatile
 15502                           
 15503                           ;DC_motors.c: 266:         } else if (!PORTFbits.RF3 && PORTFbits.RF2) {
 15504  004CFA  EFB8  F026         	goto	l8784
 15505  004CFE                     l734:
 15506  004CFE  B68E               	btfsc	142,3,c	;volatile
 15507  004D00  EF84  F026         	goto	u11621
 15508  004D04  EF86  F026         	goto	u11620
 15509  004D08                     u11621:
 15510  004D08  EFB8  F026         	goto	l8784
 15511  004D0C                     u11620:
 15512  004D0C  A48E               	btfss	142,2,c	;volatile
 15513  004D0E  EF8B  F026         	goto	u11631
 15514  004D12  EF8D  F026         	goto	u11630
 15515  004D16                     u11631:
 15516  004D16  EFB8  F026         	goto	l8784
 15517  004D1A                     u11630:
 15518  004D1A                     
 15519                           ;DC_motors.c: 267:             LATHbits.LATH3 = 1;
 15520  004D1A  8680               	bsf	128,3,c	;volatile
 15521  004D1C                     
 15522                           ;DC_motors.c: 268:             if (mode==1) {turnright_delay-=5;}
 15523  004D1C  040D               	decf	adjdelay@mode^0,w,c
 15524  004D1E  A4D8               	btfss	status,2,c
 15525  004D20  EF94  F026         	goto	u11641
 15526  004D24  EF96  F026         	goto	u11640
 15527  004D28                     u11641:
 15528  004D28  EF9D  F026         	goto	l8776
 15529  004D2C                     u11640:
 15530  004D2C  0E05               	movlw	5
 15531  004D2E  0101               	movlb	1	; () banked
 15532  004D30  5FDF               	subwf	_turnright_delay& (0+255),f,b	;volatile
 15533  004D32  0E00               	movlw	0
 15534  004D34  5BE0               	subwfb	(_turnright_delay+1)& (0+255),f,b	;volatile
 15535  004D36  EFAB  F026         	goto	l8780
 15536  004D3A                     l8776:
 15537  004D3A  0E02               	movlw	2
 15538  004D3C  180D               	xorwf	adjdelay@mode^0,w,c
 15539  004D3E  A4D8               	btfss	status,2,c
 15540  004D40  EFA4  F026         	goto	u11651
 15541  004D44  EFA6  F026         	goto	u11650
 15542  004D48                     u11651:
 15543  004D48  EFAB  F026         	goto	l8780
 15544  004D4C                     u11650:
 15545  004D4C  0E05               	movlw	5
 15546  004D4E  0101               	movlb	1	; () banked
 15547  004D50  5FE1               	subwf	_turnleft_delay& (0+255),f,b	;volatile
 15548  004D52  0E00               	movlw	0
 15549  004D54  5BE2               	subwfb	(_turnleft_delay+1)& (0+255),f,b	;volatile
 15550  004D56                     l8780:
 15551                           
 15552                           ;DC_motors.c: 270:             _delay((unsigned long)((800)*(64000000/4000.0)));
 15553  004D56  0E41               	movlw	65
 15554  004D58  6E0B               	movwf	(??_adjdelay+1)^0,c
 15555  004D5A  0EF0               	movlw	240
 15556  004D5C  6E0A               	movwf	??_adjdelay^0,c
 15557  004D5E  0E33               	movlw	51
 15558  004D60                     u12867:
 15559  004D60  2EE8               	decfsz	wreg,f,c
 15560  004D62  D7FE               	bra	u12867
 15561  004D64  2E0A               	decfsz	??_adjdelay^0,f,c
 15562  004D66  D7FC               	bra	u12867
 15563  004D68  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
 15564  004D6A  D7FA               	bra	u12867
 15565  004D6C  F000               	nop	
 15566  004D6E                     
 15567                           ;DC_motors.c: 271:             LATHbits.LATH3 = 0;
 15568  004D6E  9680               	bcf	128,3,c	;volatile
 15569  004D70                     l8784:
 15570                           
 15571                           ;DC_motors.c: 273:         _delay((unsigned long)((200)*(64000000/4000.0)));
 15572  004D70  0E11               	movlw	17
 15573  004D72  6E0B               	movwf	(??_adjdelay+1)^0,c
 15574  004D74  0E3C               	movlw	60
 15575  004D76  6E0A               	movwf	??_adjdelay^0,c
 15576  004D78  0ECB               	movlw	203
 15577  004D7A                     u12877:
 15578  004D7A  2EE8               	decfsz	wreg,f,c
 15579  004D7C  D7FE               	bra	u12877
 15580  004D7E  2E0A               	decfsz	??_adjdelay^0,f,c
 15581  004D80  D7FC               	bra	u12877
 15582  004D82  2E0B               	decfsz	(??_adjdelay+1)^0,f,c
 15583  004D84  D7FA               	bra	u12877
 15584  004D86  F000               	nop	
 15585  004D88                     
 15586                           ;DC_motors.c: 274:     }
 15587  004D88  2A0C               	incf	adjdelay@i^0,f,c
 15588  004D8A  0E09               	movlw	9
 15589  004D8C  640C               	cpfsgt	adjdelay@i^0,c
 15590  004D8E  EFCB  F026         	goto	u11661
 15591  004D92  EFCD  F026         	goto	u11660
 15592  004D96                     u11661:
 15593  004D96  EF44  F026         	goto	l732
 15594  004D9A                     u11660:
 15595  004D9A  0012               	return		;funcret
 15596  004D9C                     __end_of_adjdelay:
 15597                           	callstack 0
 15598                           
 15599 ;; *************** function _ADC_init *****************
 15600 ;; Defined at:
 15601 ;;		line 8 in file "ADC.c"
 15602 ;; Parameters:    Size  Location     Type
 15603 ;;		None
 15604 ;; Auto vars:     Size  Location     Type
 15605 ;;		None
 15606 ;; Return value:  Size  Location     Type
 15607 ;;                  1    wreg      void 
 15608 ;; Registers used:
 15609 ;;		wreg, status,2
 15610 ;; Tracked objects:
 15611 ;;		On entry : 0/0
 15612 ;;		On exit  : 0/0
 15613 ;;		Unchanged: 0/0
 15614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15619 ;;Total ram usage:        0 bytes
 15620 ;; Hardware stack levels used: 1
 15621 ;; Hardware stack levels required when called: 7
 15622 ;; This function calls:
 15623 ;;		Nothing
 15624 ;; This function is called by:
 15625 ;;		_main
 15626 ;; This function uses a non-reentrant model
 15627 ;;
 15628                           
 15629                           	psect	text79
 15630  006252                     __ptext79:
 15631                           	callstack 0
 15632  006252                     _ADC_init:
 15633                           	callstack 23
 15634  006252                     
 15635                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
 15636  006252  8C86               	bsf	134,6,c	;volatile
 15637                           
 15638                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
 15639  006254  010E               	movlb	14	; () banked
 15640  006256  8DB4               	bsf	180,6,b	;volatile
 15641                           
 15642                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
 15643  006258  010F               	movlb	15	; () banked
 15644  00625A  9958               	bcf	88,4,b	;volatile
 15645  00625C                     
 15646                           ; BSR set to: 15
 15647                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
 15648  00625C  0EFC               	movlw	-4
 15649  00625E  1758               	andwf	88,f,b	;volatile
 15650                           
 15651                           ;ADC.c: 16:     ADPCH=0b101110;
 15652  006260  0E2E               	movlw	46
 15653  006262  6F5F               	movwf	95,b	;volatile
 15654  006264                     
 15655                           ; BSR set to: 15
 15656                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
 15657  006264  9460               	bcf	96,2,c	;volatile
 15658  006266                     
 15659                           ; BSR set to: 15
 15660                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
 15661  006266  8860               	bsf	96,4,c	;volatile
 15662  006268                     
 15663                           ; BSR set to: 15
 15664                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
 15665  006268  8E60               	bsf	96,7,c	;volatile
 15666  00626A                     
 15667                           ; BSR set to: 15
 15668  00626A  0012               	return		;funcret
 15669  00626C                     __end_of_ADC_init:
 15670                           	callstack 0
 15671                           
 15672 ;; *************** function _LowISR *****************
 15673 ;; Defined at:
 15674 ;;		line 80 in file "interrupts.c"
 15675 ;; Parameters:    Size  Location     Type
 15676 ;;		None
 15677 ;; Auto vars:     Size  Location     Type
 15678 ;;		None
 15679 ;; Return value:  Size  Location     Type
 15680 ;;                  1    wreg      void 
 15681 ;; Registers used:
 15682 ;;		wreg, status,2
 15683 ;; Tracked objects:
 15684 ;;		On entry : 0/0
 15685 ;;		On exit  : 0/0
 15686 ;;		Unchanged: 0/0
 15687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15690 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15691 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15692 ;;Total ram usage:        3 bytes
 15693 ;; Hardware stack levels used: 1
 15694 ;; Hardware stack levels required when called: 6
 15695 ;; This function calls:
 15696 ;;		Nothing
 15697 ;; This function is called by:
 15698 ;;		Interrupt level 1
 15699 ;; This function uses a non-reentrant model
 15700 ;;
 15701                           
 15702                           	psect	intcodelo
 15703  000018                     __pintcodelo:
 15704                           	callstack 0
 15705  000018                     _LowISR:
 15706                           	callstack 14
 15707                           
 15708                           ; BSR set to: 15
 15709                           ;incstack = 0
 15710  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 15711  00001A  CFD8 F007          	movff	status,??_LowISR
 15712  00001E  CFE8 F008          	movff	wreg,??_LowISR+1
 15713  000022  CFE0 F009          	movff	bsr,??_LowISR+2
 15714  000026                     
 15715                           ;interrupts.c: 81:     if (PIR0bits.TMR0IF) {
 15716  000026  010E               	movlb	14	; () banked
 15717  000028  AB33               	btfss	51,5,b	;volatile
 15718  00002A  EF19  F000         	goto	i1u796_21
 15719  00002E  EF1B  F000         	goto	i1u796_20
 15720  000032                     i1u796_21:
 15721  000032  EF28  F000         	goto	i1l145
 15722  000036                     i1u796_20:
 15723  000036                     
 15724                           ; BSR set to: 14
 15725                           ;interrupts.c: 82:         overtime_flag = 1;
 15726  000036  0E01               	movlw	1
 15727  000038  0101               	movlb	1	; () banked
 15728  00003A  6FE5               	movwf	_overtime_flag& (0+255),b	;volatile
 15729                           
 15730                           ;interrupts.c: 83:         returnhome_flag = 1;
 15731  00003C  0E01               	movlw	1
 15732  00003E  0100               	movlb	0	; () banked
 15733  000040  6FF4               	movwf	_returnhome_flag& (0+255),b	;volatile
 15734                           
 15735                           ;interrupts.c: 84:         TMR0H=0b1011;
 15736  000042  0E0B               	movlw	11
 15737  000044  6ED4               	movwf	212,c	;volatile
 15738                           
 15739                           ;interrupts.c: 85:         TMR0L=0b11011011;
 15740  000046  0EDB               	movlw	219
 15741  000048  6ED3               	movwf	211,c	;volatile
 15742  00004A                     
 15743                           ; BSR set to: 0
 15744                           ;interrupts.c: 86:         PIR0bits.TMR0IF = 0;
 15745  00004A  010E               	movlb	14	; () banked
 15746  00004C  9B33               	bcf	51,5,b	;volatile
 15747  00004E                     
 15748                           ; BSR set to: 14
 15749                           ;interrupts.c: 87:         PIE0bits.TMR0IE = 0;
 15750  00004E  9B29               	bcf	41,5,b	;volatile
 15751  000050                     i1l145:
 15752                           
 15753                           ; BSR set to: 14
 15754  000050  C009  FFE0         	movff	??_LowISR+2,bsr
 15755  000054  C008  FFE8         	movff	??_LowISR+1,wreg
 15756  000058  C007  FFD8         	movff	??_LowISR,status
 15757  00005C  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 15758  00005E  0010               	retfie	
 15759  000060                     __end_of_LowISR:
 15760                           	callstack 0
 15761                           
 15762 ;; *************** function _HighISR *****************
 15763 ;; Defined at:
 15764 ;;		line 65 in file "interrupts.c"
 15765 ;; Parameters:    Size  Location     Type
 15766 ;;		None
 15767 ;; Auto vars:     Size  Location     Type
 15768 ;;		None
 15769 ;; Return value:  Size  Location     Type
 15770 ;;                  1    wreg      void 
 15771 ;; Registers used:
 15772 ;;		wreg, status,2, status,0, cstack
 15773 ;; Tracked objects:
 15774 ;;		On entry : 0/0
 15775 ;;		On exit  : 0/0
 15776 ;;		Unchanged: 0/0
 15777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15782 ;;Total ram usage:        1 bytes
 15783 ;; Hardware stack levels used: 1
 15784 ;; Hardware stack levels required when called: 5
 15785 ;; This function calls:
 15786 ;;		i2_interrupts_clear
 15787 ;; This function is called by:
 15788 ;;		Interrupt level 2
 15789 ;; This function uses a non-reentrant model
 15790 ;;
 15791                           
 15792                           	psect	intcode
 15793  000008                     __pintcode:
 15794                           	callstack 0
 15795  000008                     _HighISR:
 15796                           	callstack 14
 15797                           
 15798                           ; BSR set to: 14
 15799                           ;incstack = 0
 15800  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15801  00000A  EF7E  F02F         	goto	int_func
 15802                           
 15803                           	psect	intcode_body
 15804  005EFC                     __pintcode_body:
 15805                           	callstack 14
 15806  005EFC                     int_func:
 15807                           	callstack 14
 15808  005EFC                     
 15809                           ;interrupts.c: 66:     if (PIR0bits.INT1IF) {
 15810  005EFC  010E               	movlb	14	; () banked
 15811  005EFE  A333               	btfss	51,1,b	;volatile
 15812  005F00  EF84  F02F         	goto	i2u793_41
 15813  005F04  EF86  F02F         	goto	i2u793_40
 15814  005F08                     i2u793_41:
 15815  005F08  EF9E  F02F         	goto	i2l139
 15816  005F0C                     i2u793_40:
 15817  005F0C                     
 15818                           ; BSR set to: 14
 15819                           ;interrupts.c: 67:         colourcard_flag = 1;
 15820  005F0C  0E01               	movlw	1
 15821  005F0E  0101               	movlb	1	; () banked
 15822  005F10  6FE4               	movwf	_colourcard_flag& (0+255),b	;volatile
 15823  005F12                     
 15824                           ; BSR set to: 1
 15825                           ;interrupts.c: 68:         LATDbits.LATD7 = !LATDbits.LATD7;
 15826  005F12  AE7C               	btfss	124,7,c	;volatile
 15827  005F14  EF8E  F02F         	goto	i2u794_41
 15828  005F18  EF92  F02F         	goto	i2u794_40
 15829  005F1C                     i2u794_41:
 15830  005F1C  6A06               	clrf	??_HighISR^0,c
 15831  005F1E  2A06               	incf	??_HighISR^0,f,c
 15832  005F20  EF93  F02F         	goto	i2u795_48
 15833  005F24                     i2u794_40:
 15834  005F24  6A06               	clrf	??_HighISR^0,c
 15835  005F26                     i2u795_48:
 15836  005F26  3206               	rrcf	??_HighISR^0,f,c
 15837  005F28  3206               	rrcf	??_HighISR^0,f,c
 15838  005F2A  507C               	movf	124,w,c	;volatile
 15839  005F2C  1806               	xorwf	??_HighISR^0,w,c
 15840  005F2E  0B7F               	andlw	-129
 15841  005F30  1806               	xorwf	??_HighISR^0,w,c
 15842  005F32  6E7C               	movwf	124,c	;volatile
 15843  005F34                     
 15844                           ;interrupts.c: 69:         interrupts_clear();
 15845  005F34  EC36  F031         	call	i2_interrupts_clear	;wreg free
 15846  005F38                     
 15847                           ;interrupts.c: 70:         PIR0bits.INT1IF = 0;
 15848  005F38  010E               	movlb	14	; () banked
 15849  005F3A  9333               	bcf	51,1,b	;volatile
 15850  005F3C                     i2l139:
 15851                           
 15852                           ; BSR set to: 14
 15853  005F3C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15854  005F3E  0011               	retfie		f
 15855  005F40                     __end_of_HighISR:
 15856                           	callstack 0
 15857                           
 15858 ;; *************** function i2_interrupts_clear *****************
 15859 ;; Defined at:
 15860 ;;		line 37 in file "interrupts.c"
 15861 ;; Parameters:    Size  Location     Type
 15862 ;;		None
 15863 ;; Auto vars:     Size  Location     Type
 15864 ;;		None
 15865 ;; Return value:  Size  Location     Type
 15866 ;;                  1    wreg      void 
 15867 ;; Registers used:
 15868 ;;		wreg, status,2, status,0, cstack
 15869 ;; Tracked objects:
 15870 ;;		On entry : 0/0
 15871 ;;		On exit  : 0/0
 15872 ;;		Unchanged: 0/0
 15873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15878 ;;Total ram usage:        0 bytes
 15879 ;; Hardware stack levels used: 1
 15880 ;; Hardware stack levels required when called: 4
 15881 ;; This function calls:
 15882 ;;		i2_I2C_2_Master_Start
 15883 ;;		i2_I2C_2_Master_Stop
 15884 ;;		i2_I2C_2_Master_Write
 15885 ;;		i2_interrupts_colour
 15886 ;; This function is called by:
 15887 ;;		_HighISR
 15888 ;; This function uses a non-reentrant model
 15889 ;;
 15890                           
 15891                           	psect	text82
 15892  00626C                     __ptext82:
 15893                           	callstack 0
 15894  00626C                     i2_interrupts_clear:
 15895                           	callstack 14
 15896  00626C                     
 15897                           ;interrupts.c: 38:     I2C_2_Master_Start();
 15898  00626C  EC98  F031         	call	i2_I2C_2_Master_Start	;wreg free
 15899                           
 15900                           ;interrupts.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
 15901  006270  0E52               	movlw	82
 15902  006272  EC79  F031         	call	i2_I2C_2_Master_Write
 15903                           
 15904                           ;interrupts.c: 40:     I2C_2_Master_Write(0b11100110);
 15905  006276  0EE6               	movlw	230
 15906  006278  EC79  F031         	call	i2_I2C_2_Master_Write
 15907                           
 15908                           ;interrupts.c: 41:     I2C_2_Master_Stop();
 15909  00627C  EC93  F031         	call	i2_I2C_2_Master_Stop	;wreg free
 15910                           
 15911                           ;interrupts.c: 43:     interrupts_colour();
 15912  006280  EC12  F02F         	call	i2_interrupts_colour	;wreg free
 15913  006284  0012               	return		;funcret
 15914  006286                     __end_ofi2_interrupts_clear:
 15915                           	callstack 0
 15916                           
 15917 ;; *************** function i2_interrupts_colour *****************
 15918 ;; Defined at:
 15919 ;;		line 49 in file "interrupts.c"
 15920 ;; Parameters:    Size  Location     Type
 15921 ;;		None
 15922 ;; Auto vars:     Size  Location     Type
 15923 ;;		None
 15924 ;; Return value:  Size  Location     Type
 15925 ;;                  1    wreg      void 
 15926 ;; Registers used:
 15927 ;;		wreg, status,2, status,0, cstack
 15928 ;; Tracked objects:
 15929 ;;		On entry : 0/0
 15930 ;;		On exit  : 0/0
 15931 ;;		Unchanged: 0/0
 15932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15937 ;;Total ram usage:        1 bytes
 15938 ;; Hardware stack levels used: 1
 15939 ;; Hardware stack levels required when called: 3
 15940 ;; This function calls:
 15941 ;;		i2_colourclick_writetoaddr
 15942 ;; This function is called by:
 15943 ;;		i2_interrupts_clear
 15944 ;; This function uses a non-reentrant model
 15945 ;;
 15946                           
 15947                           	psect	text83
 15948  005E24                     __ptext83:
 15949                           	callstack 0
 15950  005E24                     i2_interrupts_colour:
 15951                           	callstack 14
 15952  005E24                     
 15953                           ;interrupts.c: 50:     colourclick_writetoaddr(0x00, 0b10011);
 15954  005E24  0E13               	movlw	19
 15955  005E26  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 15956  005E28  0E00               	movlw	0
 15957  005E2A  EC0C  F031         	call	i2_colourclick_writetoaddr
 15958  005E2E                     
 15959                           ;interrupts.c: 51:     _delay((unsigned long)((3)*(64000000/4000.0)));
 15960  005E2E  0E3F               	movlw	63
 15961  005E30  6E05               	movwf	??i2_interrupts_colour^0,c
 15962  005E32  0E55               	movlw	85
 15963  005E34                     i2u1288_47:
 15964  005E34  2EE8               	decfsz	wreg,f,c
 15965  005E36  D7FE               	bra	i2u1288_47
 15966  005E38  2E05               	decfsz	??i2_interrupts_colour^0,f,c
 15967  005E3A  D7FC               	bra	i2u1288_47
 15968  005E3C  F000               	nop	
 15969  005E3E                     
 15970                           ;interrupts.c: 52:     colourclick_writetoaddr(0x0C, 0b0100);
 15971  005E3E  0E04               	movlw	4
 15972  005E40  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 15973  005E42  0E0C               	movlw	12
 15974  005E44  EC0C  F031         	call	i2_colourclick_writetoaddr
 15975  005E48                     
 15976                           ;interrupts.c: 53:     colourclick_writetoaddr(0x04, (interrupts_lowerbound & 0x00FF));
 15977  005E48  C051  F003         	movff	_interrupts_lowerbound,i2colourclick_writetoaddr@value	;volatile
 15978  005E4C  0E04               	movlw	4
 15979  005E4E  EC0C  F031         	call	i2_colourclick_writetoaddr
 15980  005E52                     
 15981                           ;interrupts.c: 54:     colourclick_writetoaddr(0x05, (interrupts_lowerbound >> 8));
 15982  005E52  5052               	movf	(_interrupts_lowerbound+1)^0,w,c	;volatile
 15983  005E54  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 15984  005E56  0E05               	movlw	5
 15985  005E58  EC0C  F031         	call	i2_colourclick_writetoaddr
 15986  005E5C                     
 15987                           ;interrupts.c: 55:     colourclick_writetoaddr(0x06, (interrupts_upperbound & 0x00FF));
 15988  005E5C  C054  F003         	movff	_interrupts_upperbound,i2colourclick_writetoaddr@value	;volatile
 15989  005E60  0E06               	movlw	6
 15990  005E62  EC0C  F031         	call	i2_colourclick_writetoaddr
 15991  005E66                     
 15992                           ;interrupts.c: 56:     colourclick_writetoaddr(0x07, (interrupts_upperbound >> 8));
 15993  005E66  5055               	movf	(_interrupts_upperbound+1)^0,w,c	;volatile
 15994  005E68  6E03               	movwf	i2colourclick_writetoaddr@value^0,c
 15995  005E6A  0E07               	movlw	7
 15996  005E6C  EC0C  F031         	call	i2_colourclick_writetoaddr
 15997  005E70  0012               	return		;funcret
 15998  005E72                     __end_ofi2_interrupts_colour:
 15999                           	callstack 0
 16000                           
 16001 ;; *************** function i2_colourclick_writetoaddr *****************
 16002 ;; Defined at:
 16003 ;;		line 39 in file "colour_click.c"
 16004 ;; Parameters:    Size  Location     Type
 16005 ;;  address         1    wreg     unsigned char 
 16006 ;;  value           1    2[COMRAM] unsigned char 
 16007 ;; Auto vars:     Size  Location     Type
 16008 ;;  address         1    3[COMRAM] unsigned char 
 16009 ;; Return value:  Size  Location     Type
 16010 ;;                  1    wreg      void 
 16011 ;; Registers used:
 16012 ;;		wreg, status,2, status,0, cstack
 16013 ;; Tracked objects:
 16014 ;;		On entry : 0/0
 16015 ;;		On exit  : 0/0
 16016 ;;		Unchanged: 0/0
 16017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16018 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16022 ;;Total ram usage:        2 bytes
 16023 ;; Hardware stack levels used: 1
 16024 ;; Hardware stack levels required when called: 2
 16025 ;; This function calls:
 16026 ;;		i2_I2C_2_Master_Start
 16027 ;;		i2_I2C_2_Master_Stop
 16028 ;;		i2_I2C_2_Master_Write
 16029 ;; This function is called by:
 16030 ;;		i2_interrupts_colour
 16031 ;; This function uses a non-reentrant model
 16032 ;;
 16033                           
 16034                           	psect	text84
 16035  006218                     __ptext84:
 16036                           	callstack 0
 16037  006218                     i2_colourclick_writetoaddr:
 16038                           	callstack 14
 16039                           
 16040                           ;incstack = 0
 16041                           ;i2colourclick_writetoaddr@address stored from wreg
 16042  006218  6E04               	movwf	i2colourclick_writetoaddr@address^0,c
 16043  00621A                     
 16044                           ;colour_click.c: 39: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 40: {;colour_click.c: 41:     I2C_2_Master_Start();
 16045  00621A  EC98  F031         	call	i2_I2C_2_Master_Start	;wreg free
 16046                           
 16047                           ;colour_click.c: 42:     I2C_2_Master_Write(0x52 | 0x00);
 16048  00621E  0E52               	movlw	82
 16049  006220  EC79  F031         	call	i2_I2C_2_Master_Write
 16050                           
 16051                           ;colour_click.c: 43:     I2C_2_Master_Write(0x80 | address);
 16052  006224  5004               	movf	i2colourclick_writetoaddr@address^0,w,c
 16053  006226  0980               	iorlw	128
 16054  006228  EC79  F031         	call	i2_I2C_2_Master_Write
 16055                           
 16056                           ;colour_click.c: 44:     I2C_2_Master_Write(value);
 16057  00622C  5003               	movf	i2colourclick_writetoaddr@value^0,w,c
 16058  00622E  EC79  F031         	call	i2_I2C_2_Master_Write
 16059                           
 16060                           ;colour_click.c: 45:     I2C_2_Master_Stop();
 16061  006232  EC93  F031         	call	i2_I2C_2_Master_Stop	;wreg free
 16062  006236  0012               	return		;funcret
 16063  006238                     __end_ofi2_colourclick_writetoaddr:
 16064                           	callstack 0
 16065                           
 16066 ;; *************** function i2_I2C_2_Master_Write *****************
 16067 ;; Defined at:
 16068 ;;		line 69 in file "I2C.c"
 16069 ;; Parameters:    Size  Location     Type
 16070 ;;  data_byte       1    wreg     unsigned char 
 16071 ;; Auto vars:     Size  Location     Type
 16072 ;;  data_byte       1    1[COMRAM] unsigned char 
 16073 ;; Return value:  Size  Location     Type
 16074 ;;                  1    wreg      void 
 16075 ;; Registers used:
 16076 ;;		wreg, status,2, status,0, cstack
 16077 ;; Tracked objects:
 16078 ;;		On entry : 0/0
 16079 ;;		On exit  : 0/0
 16080 ;;		Unchanged: 0/0
 16081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16086 ;;Total ram usage:        1 bytes
 16087 ;; Hardware stack levels used: 1
 16088 ;; Hardware stack levels required when called: 1
 16089 ;; This function calls:
 16090 ;;		i2_I2C_2_Master_Idle
 16091 ;; This function is called by:
 16092 ;;		i2_interrupts_clear
 16093 ;;		i2_colourclick_writetoaddr
 16094 ;; This function uses a non-reentrant model
 16095 ;;
 16096                           
 16097                           	psect	text85
 16098  0062F2                     __ptext85:
 16099                           	callstack 0
 16100  0062F2                     i2_I2C_2_Master_Write:
 16101                           	callstack 14
 16102                           
 16103                           ;incstack = 0
 16104                           ;i2I2C_2_Master_Write@data_byte stored from wreg
 16105  0062F2  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
 16106  0062F4                     
 16107                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
 16108  0062F4  EC92  F030         	call	i2_I2C_2_Master_Idle	;wreg free
 16109  0062F8                     
 16110                           ;I2C.c: 72:   SSP2BUF = data_byte;
 16111  0062F8  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
 16112  0062FC  0012               	return		;funcret
 16113  0062FE                     __end_ofi2_I2C_2_Master_Write:
 16114                           	callstack 0
 16115                           
 16116 ;; *************** function i2_I2C_2_Master_Stop *****************
 16117 ;; Defined at:
 16118 ;;		line 59 in file "I2C.c"
 16119 ;; Parameters:    Size  Location     Type
 16120 ;;		None
 16121 ;; Auto vars:     Size  Location     Type
 16122 ;;		None
 16123 ;; Return value:  Size  Location     Type
 16124 ;;                  1    wreg      void 
 16125 ;; Registers used:
 16126 ;;		wreg, status,2, status,0, cstack
 16127 ;; Tracked objects:
 16128 ;;		On entry : 0/0
 16129 ;;		On exit  : 0/0
 16130 ;;		Unchanged: 0/0
 16131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16136 ;;Total ram usage:        0 bytes
 16137 ;; Hardware stack levels used: 1
 16138 ;; Hardware stack levels required when called: 1
 16139 ;; This function calls:
 16140 ;;		i2_I2C_2_Master_Idle
 16141 ;; This function is called by:
 16142 ;;		i2_interrupts_clear
 16143 ;;		i2_colourclick_writetoaddr
 16144 ;; This function uses a non-reentrant model
 16145 ;;
 16146                           
 16147                           	psect	text86
 16148  006326                     __ptext86:
 16149                           	callstack 0
 16150  006326                     i2_I2C_2_Master_Stop:
 16151                           	callstack 14
 16152  006326                     
 16153                           ;I2C.c: 61:   I2C_2_Master_Idle();
 16154  006326  EC92  F030         	call	i2_I2C_2_Master_Idle	;wreg free
 16155  00632A                     
 16156                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
 16157  00632A  010E               	movlb	14	; () banked
 16158  00632C  85DA               	bsf	218,2,b	;volatile
 16159  00632E                     
 16160                           ; BSR set to: 14
 16161  00632E  0012               	return		;funcret
 16162  006330                     __end_ofi2_I2C_2_Master_Stop:
 16163                           	callstack 0
 16164                           
 16165 ;; *************** function i2_I2C_2_Master_Start *****************
 16166 ;; Defined at:
 16167 ;;		line 39 in file "I2C.c"
 16168 ;; Parameters:    Size  Location     Type
 16169 ;;		None
 16170 ;; Auto vars:     Size  Location     Type
 16171 ;;		None
 16172 ;; Return value:  Size  Location     Type
 16173 ;;                  1    wreg      void 
 16174 ;; Registers used:
 16175 ;;		wreg, status,2, status,0, cstack
 16176 ;; Tracked objects:
 16177 ;;		On entry : 0/0
 16178 ;;		On exit  : 0/0
 16179 ;;		Unchanged: 0/0
 16180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16185 ;;Total ram usage:        0 bytes
 16186 ;; Hardware stack levels used: 1
 16187 ;; Hardware stack levels required when called: 1
 16188 ;; This function calls:
 16189 ;;		i2_I2C_2_Master_Idle
 16190 ;; This function is called by:
 16191 ;;		i2_interrupts_clear
 16192 ;;		i2_colourclick_writetoaddr
 16193 ;; This function uses a non-reentrant model
 16194 ;;
 16195                           
 16196                           	psect	text87
 16197  006330                     __ptext87:
 16198                           	callstack 0
 16199  006330                     i2_I2C_2_Master_Start:
 16200                           	callstack 14
 16201  006330                     
 16202                           ;I2C.c: 41:   I2C_2_Master_Idle();
 16203  006330  EC92  F030         	call	i2_I2C_2_Master_Idle	;wreg free
 16204  006334                     
 16205                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
 16206  006334  010E               	movlb	14	; () banked
 16207  006336  81DA               	bsf	218,0,b	;volatile
 16208  006338                     
 16209                           ; BSR set to: 14
 16210  006338  0012               	return		;funcret
 16211  00633A                     __end_ofi2_I2C_2_Master_Start:
 16212                           	callstack 0
 16213                           
 16214 ;; *************** function i2_I2C_2_Master_Idle *****************
 16215 ;; Defined at:
 16216 ;;		line 30 in file "I2C.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;		None
 16219 ;; Auto vars:     Size  Location     Type
 16220 ;;		None
 16221 ;; Return value:  Size  Location     Type
 16222 ;;                  1    wreg      void 
 16223 ;; Registers used:
 16224 ;;		wreg, status,2, status,0
 16225 ;; Tracked objects:
 16226 ;;		On entry : 0/0
 16227 ;;		On exit  : 0/0
 16228 ;;		Unchanged: 0/0
 16229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16234 ;;Total ram usage:        1 bytes
 16235 ;; Hardware stack levels used: 1
 16236 ;; This function calls:
 16237 ;;		Nothing
 16238 ;; This function is called by:
 16239 ;;		i2_I2C_2_Master_Start
 16240 ;;		i2_I2C_2_Master_Stop
 16241 ;;		i2_I2C_2_Master_Write
 16242 ;; This function uses a non-reentrant model
 16243 ;;
 16244                           
 16245                           	psect	text88
 16246  006124                     __ptext88:
 16247                           	callstack 0
 16248  006124                     i2_I2C_2_Master_Idle:
 16249                           	callstack 14
 16250  006124                     i2l476:
 16251  006124  010E               	movlb	14	; () banked
 16252  006126  B5D8               	btfsc	216,2,b	;volatile
 16253  006128  EF98  F030         	goto	i2u696_41
 16254  00612C  EF9A  F030         	goto	i2u696_40
 16255  006130                     i2u696_41:
 16256  006130  EF92  F030         	goto	i2l476
 16257  006134                     i2u696_40:
 16258  006134                     
 16259                           ; BSR set to: 14
 16260  006134  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
 16261  006138  0E1F               	movlw	31
 16262  00613A  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
 16263  00613C  A4D8               	btfss	status,2,c
 16264  00613E  EFA3  F030         	goto	i2u697_41
 16265  006142  EFA5  F030         	goto	i2u697_40
 16266  006146                     i2u697_41:
 16267  006146  EF92  F030         	goto	i2l476
 16268  00614A                     i2u697_40:
 16269  00614A                     
 16270                           ; BSR set to: 14
 16271  00614A  0012               	return		;funcret
 16272  00614C                     __end_ofi2_I2C_2_Master_Idle:
 16273                           	callstack 0
 16274                           
 16275                           	psect	rparam
 16276  0000                     
 16277                           	psect	temp
 16278  000056                     btemp:
 16279                           	callstack 0
 16280  000056                     	ds	1
 16281  0000                     int$flags	set	btemp
 16282  0000                     wtemp8	set	btemp+1
 16283  0000                     ttemp5	set	btemp+1
 16284  0000                     ttemp6	set	btemp+4
 16285  0000                     ttemp7	set	btemp+8
 16286                           
 16287                           	psect	idloc
 16288                           
 16289                           ;Config register IDLOC0 @ 0x200000
 16290                           ;	unspecified, using default values
 16291  200000                     	org	2097152
 16292  200000  0FFF               	dw	4095
 16293                           
 16294                           ;Config register IDLOC1 @ 0x200002
 16295                           ;	unspecified, using default values
 16296  200002                     	org	2097154
 16297  200002  0FFF               	dw	4095
 16298                           
 16299                           ;Config register IDLOC2 @ 0x200004
 16300                           ;	unspecified, using default values
 16301  200004                     	org	2097156
 16302  200004  0FFF               	dw	4095
 16303                           
 16304                           ;Config register IDLOC3 @ 0x200006
 16305                           ;	unspecified, using default values
 16306  200006                     	org	2097158
 16307  200006  0FFF               	dw	4095
 16308                           
 16309                           ;Config register IDLOC4 @ 0x200008
 16310                           ;	unspecified, using default values
 16311  200008                     	org	2097160
 16312  200008  0FFF               	dw	4095
 16313                           
 16314                           ;Config register IDLOC5 @ 0x20000A
 16315                           ;	unspecified, using default values
 16316  20000A                     	org	2097162
 16317  20000A  0FFF               	dw	4095
 16318                           
 16319                           ;Config register IDLOC6 @ 0x20000C
 16320                           ;	unspecified, using default values
 16321  20000C                     	org	2097164
 16322  20000C  0FFF               	dw	4095
 16323                           
 16324                           ;Config register IDLOC7 @ 0x20000E
 16325                           ;	unspecified, using default values
 16326  20000E                     	org	2097166
 16327  20000E  0FFF               	dw	4095
 16328                           
 16329                           	psect	config
 16330                           
 16331                           ;Config register CONFIG1L @ 0x300000
 16332                           ;	External Oscillator mode Selection bits
 16333                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 16334                           ;	Power-up default value for COSC bits
 16335                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 16336  300000                     	org	3145728
 16337  300000  AA                 	db	170
 16338                           
 16339                           ;Config register CONFIG1H @ 0x300001
 16340                           ;	unspecified, using default values
 16341                           ;	Clock Out Enable bit
 16342                           ;	CLKOUTEN = 0x1, unprogrammed default
 16343                           ;	Clock Switch Enable bit
 16344                           ;	CSWEN = 0x1, unprogrammed default
 16345                           ;	Fail-Safe Clock Monitor Enable bit
 16346                           ;	FCMEN = 0x1, unprogrammed default
 16347  300001                     	org	3145729
 16348  300001  FF                 	db	255
 16349                           
 16350                           ;Config register CONFIG2L @ 0x300002
 16351                           ;	unspecified, using default values
 16352                           ;	Master Clear Enable bit
 16353                           ;	MCLRE = 0x1, unprogrammed default
 16354                           ;	Power-up Timer Enable bit
 16355                           ;	PWRTE = 0x1, unprogrammed default
 16356                           ;	Low-power BOR enable bit
 16357                           ;	LPBOREN = 0x1, unprogrammed default
 16358                           ;	Brown-out Reset Enable bits
 16359                           ;	BOREN = 0x3, unprogrammed default
 16360  300002                     	org	3145730
 16361  300002  FF                 	db	255
 16362                           
 16363                           ;Config register CONFIG2H @ 0x300003
 16364                           ;	unspecified, using default values
 16365                           ;	Brown Out Reset Voltage selection bits
 16366                           ;	BORV = 0x3, unprogrammed default
 16367                           ;	ZCD Disable bit
 16368                           ;	ZCD = 0x1, unprogrammed default
 16369                           ;	PPSLOCK bit One-Way Set Enable bit
 16370                           ;	PPS1WAY = 0x1, unprogrammed default
 16371                           ;	Stack Full/Underflow Reset Enable bit
 16372                           ;	STVREN = 0x1, unprogrammed default
 16373                           ;	Debugger Enable bit
 16374                           ;	DEBUG = 0x1, unprogrammed default
 16375                           ;	Extended Instruction Set Enable bit
 16376                           ;	XINST = 0x1, unprogrammed default
 16377  300003                     	org	3145731
 16378  300003  FF                 	db	255
 16379                           
 16380                           ;Config register CONFIG3L @ 0x300004
 16381                           ;	WDT Period Select bits
 16382                           ;	WDTCPS = 0x1F, unprogrammed default
 16383                           ;	WDT operating mode
 16384                           ;	WDTE = OFF, WDT Disabled
 16385  300004                     	org	3145732
 16386  300004  9F                 	db	159
 16387                           
 16388                           ;Config register CONFIG3H @ 0x300005
 16389                           ;	unspecified, using default values
 16390                           ;	WDT Window Select bits
 16391                           ;	WDTCWS = 0x7, unprogrammed default
 16392                           ;	WDT input clock selector
 16393                           ;	WDTCCS = 0x7, unprogrammed default
 16394  300005                     	org	3145733
 16395  300005  FF                 	db	255
 16396                           
 16397                           ;Config register CONFIG4L @ 0x300006
 16398                           ;	unspecified, using default values
 16399                           ;	Write Protection Block 0
 16400                           ;	WRT0 = 0x1, unprogrammed default
 16401                           ;	Write Protection Block 1
 16402                           ;	WRT1 = 0x1, unprogrammed default
 16403                           ;	Write Protection Block 2
 16404                           ;	WRT2 = 0x1, unprogrammed default
 16405                           ;	Write Protection Block 3
 16406                           ;	WRT3 = 0x1, unprogrammed default
 16407                           ;	Write Protection Block 3
 16408                           ;	WRT4 = 0x1, unprogrammed default
 16409                           ;	Write Protection Block 3
 16410                           ;	WRT5 = 0x1, unprogrammed default
 16411                           ;	Write Protection Block 3
 16412                           ;	WRT6 = 0x1, unprogrammed default
 16413                           ;	Write Protection Block 3
 16414                           ;	WRT7 = 0x1, unprogrammed default
 16415  300006                     	org	3145734
 16416  300006  FF                 	db	255
 16417                           
 16418                           ;Config register CONFIG4H @ 0x300007
 16419                           ;	unspecified, using default values
 16420                           ;	Configuration Register Write Protection bit
 16421                           ;	WRTC = 0x1, unprogrammed default
 16422                           ;	Boot Block Write Protection bit
 16423                           ;	WRTB = 0x1, unprogrammed default
 16424                           ;	Data EEPROM Write Protection bit
 16425                           ;	WRTD = 0x1, unprogrammed default
 16426                           ;	Scanner Enable bit
 16427                           ;	SCANE = 0x1, unprogrammed default
 16428                           ;	Low Voltage Programming Enable bit
 16429                           ;	LVP = 0x1, unprogrammed default
 16430  300007                     	org	3145735
 16431  300007  FF                 	db	255
 16432                           
 16433                           ;Config register CONFIG5L @ 0x300008
 16434                           ;	unspecified, using default values
 16435                           ;	UserNVM Program Memory Code Protection bit
 16436                           ;	CP = 0x1, unprogrammed default
 16437                           ;	DataNVM Memory Code Protection bit
 16438                           ;	CPD = 0x1, unprogrammed default
 16439  300008                     	org	3145736
 16440  300008  FF                 	db	255
 16441                           
 16442                           ;Config register CONFIG5H @ 0x300009
 16443                           ;	unspecified, using default values
 16444  300009                     	org	3145737
 16445  300009  FF                 	db	255
 16446                           
 16447                           ;Config register CONFIG6L @ 0x30000A
 16448                           ;	unspecified, using default values
 16449                           ;	Table Read Protection Block 0
 16450                           ;	EBTR0 = 0x1, unprogrammed default
 16451                           ;	Table Read Protection Block 1
 16452                           ;	EBTR1 = 0x1, unprogrammed default
 16453                           ;	Table Read Protection Block 2
 16454                           ;	EBTR2 = 0x1, unprogrammed default
 16455                           ;	Table Read Protection Block 3
 16456                           ;	EBTR3 = 0x1, unprogrammed default
 16457                           ;	Table Read Protection Block 4
 16458                           ;	EBTR4 = 0x1, unprogrammed default
 16459                           ;	Table Read Protection Block 5
 16460                           ;	EBTR5 = 0x1, unprogrammed default
 16461                           ;	Table Read Protection Block 6
 16462                           ;	EBTR6 = 0x1, unprogrammed default
 16463                           ;	Table Read Protection Block 7
 16464                           ;	EBTR7 = 0x1, unprogrammed default
 16465  30000A                     	org	3145738
 16466  30000A  FF                 	db	255
 16467                           
 16468                           ;Config register CONFIG6H @ 0x30000B
 16469                           ;	unspecified, using default values
 16470                           ;	Boot Block Table Read Protection bit
 16471                           ;	EBTRB = 0x1, unprogrammed default
 16472  30000B                     	org	3145739
 16473  30000B  FF                 	db	255
 16474                           tosu	equ	0xFFF
 16475                           tosh	equ	0xFFE
 16476                           tosl	equ	0xFFD
 16477                           stkptr	equ	0xFFC
 16478                           pclatu	equ	0xFFB
 16479                           pclath	equ	0xFFA
 16480                           pcl	equ	0xFF9
 16481                           tblptru	equ	0xFF8
 16482                           tblptrh	equ	0xFF7
 16483                           tblptrl	equ	0xFF6
 16484                           tablat	equ	0xFF5
 16485                           prodh	equ	0xFF4
 16486                           prodl	equ	0xFF3
 16487                           indf0	equ	0xFEF
 16488                           postinc0	equ	0xFEE
 16489                           postdec0	equ	0xFED
 16490                           preinc0	equ	0xFEC
 16491                           plusw0	equ	0xFEB
 16492                           fsr0h	equ	0xFEA
 16493                           fsr0l	equ	0xFE9
 16494                           wreg	equ	0xFE8
 16495                           indf1	equ	0xFE7
 16496                           postinc1	equ	0xFE6
 16497                           postdec1	equ	0xFE5
 16498                           preinc1	equ	0xFE4
 16499                           plusw1	equ	0xFE3
 16500                           fsr1h	equ	0xFE2
 16501                           fsr1l	equ	0xFE1
 16502                           bsr	equ	0xFE0
 16503                           indf2	equ	0xFDF
 16504                           postinc2	equ	0xFDE
 16505                           postdec2	equ	0xFDD
 16506                           preinc2	equ	0xFDC
 16507                           plusw2	equ	0xFDB
 16508                           fsr2h	equ	0xFDA
 16509                           fsr2l	equ	0xFD9
 16510                           status	equ	0xFD8

Data Sizes:
    Strings     181
    Constant    0
    Data        7
    BSS         194
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    148     151
    BANK1           256    127     238
    BANK2           256     26     106
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), 
		 -> STR_8(CODE[6]), STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), 
		 -> STR_16(CODE[6]), STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), 
		 -> STR_8(CODE[6]), STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK1[100]), colourcards_testingRGBC@buf(COMRAM[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[5]), 
		 -> STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), STR_6(CODE[5]), 
		 -> STR_4(CODE[4]), STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), STR_14(CODE[5]), 
		 -> STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), STR_6(CODE[5]), 
		 -> STR_4(CODE[4]), STR_2(CODE[7]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_18(CODE[8]), STR_16(CODE[6]), 
		 -> STR_14(CODE[5]), STR_12(CODE[7]), STR_10(CODE[11]), STR_8(CODE[6]), 
		 -> STR_6(CODE[5]), STR_4(CODE[4]), STR_2(CODE[7]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_19(CODE[44]), STR_17(CODE[64]), STR_15(CODE[64]), STR_13(CODE[64]), 
		 -> STR_11(CODE[64]), STR_9(CODE[64]), STR_7(CODE[64]), STR_5(CODE[64]), 
		 -> STR_3(CODE[64]), STR_1(CODE[64]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK1[100]), colourcards_testingRGBC@buf(COMRAM[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2988_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK1[100]), colourcards_testingRGBC@buf(COMRAM[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK1[100]), colourcards_testingRGBC@buf(COMRAM[30]), 

    DCmotors_calibration@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    DCmotors_calibration@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), main@motorL(BANK2[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> colourclick_testing@buf(BANK1[100]), colourcards_testingRGBC@buf(COMRAM[30]), 

    colourclick_testing@current	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(BANK1[8]), 

    colourclick_testing@initial	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@initial(BANK1[8]), 

    colourclick_readRGBC2@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK2[8]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(BANK1[8]), colourclick_calibration@initial(BANK1[8]), colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK2[8]), 

    colourcards_normaliseRGBC@rel	PTR struct . size(2) Largest target is 12
		 -> colourcards_testingRGBC@rel(COMRAM[12]), colourcards_readRGBC@rel(BANK0[12]), 

    colourcards_normaliseRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> colourcards_testingRGBC@abs(COMRAM[8]), main@current(BANK2[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    colourcards_readRGBC@abs	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK2[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S24$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S24$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _interrupts_clear->_interrupts_colour
    _interrupts_colour->_colourclick_writetoaddr
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _sendStringSerial4->_sendCharSerial4
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _colourclick_readRGBC2->_colourclick_readRGBC
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colourcards_normaliseRGBC->___fldiv
    ___fldiv->___xxtofl
    _checkbatterylevel->_ADC_getval
    _turnright->_left
    _turnleft->_left
    _right->_DCmotors_setPWM
    _left->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fladd->___flmul
    _stop->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_interrupts_colour
    i2_interrupts_colour->i2_colourclick_writetoaddr
    i2_colourclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_colourclick_calibration
    _colourclick_calibration->_colourclick_testing
    _colourclick_testing->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _colourcards_readRGBC->_turnleft
    _colourcards_readRGBC->_turnright
    _DCmotors_calibration->_turnleft
    _DCmotors_calibration->_turnright
    _turnright->_left
    _turnleft->_left

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_colourclick_calibration
    _colourclick_calibration->_colourclick_testing

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0  233629
                                            146 BANK0      2     2      0
                                              0 BANK2     26    26      0
                           _ADC_init
               _DCmotors_calibration
                      _DCmotors_init
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                  _colourclickLEDs_C
            _colourclick_calibration
                   _colourclick_init
                            _forward
                    _interrupts_init
                               _stop
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     934
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0     934
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                  _interrupts_colour
 ---------------------------------------------------------------------------------
 (3) _interrupts_colour                                    1     1      0     903
                                             13 COMRAM     1     1      0
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     996
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colourclick_writetoaddr                              2     1      1     903
                                             11 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      93
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourclick_calibration                             19    19      0   64186
                                            144 BANK0      2     2      0
                                            110 BANK1     17    17      0
                  _colourclickLEDs_C
               _colourclick_readRGBC
                _colourclick_testing
 ---------------------------------------------------------------------------------
 (2) _colourclick_testing                                116   112      4   62066
                                            138 BANK0      6     2      4
                                              0 BANK1    110   110      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             36    10     26   61205
                                            104 BANK0     34     8     26
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   59069
                                             96 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           47    41      6   58521
                                             72 COMRAM     4     4      0
                                             68 BANK0     28    22      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                              9 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2732
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   40040
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             15 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                              9 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             48 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     517
                                              9 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4367
                                             64 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                              9 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                              9 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    7663
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    5397
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    2077
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             27 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              9 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              9 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1905
                                             16 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              9 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              9 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     276
                                             10 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      31
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                20    14      6   91676
                                             71 COMRAM     2     2      0
                                             16 BANK0     18    12      6
                             ___flge
          _colourcards_normaliseRGBC
               _colourclick_readRGBC
              _colourclick_readRGBC2
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4    3826
                                             34 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _forward                                              5     1      4    3826
                                             34 COMRAM     5     1      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC2                                5     2      3    2499
                                             22 COMRAM     5     2      3
                  _colourclickLEDs_C
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (2) _colourclick_readRGBC                                 2     0      2    1500
                                             20 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (3) _colourclick_readR                                    7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readG                                    7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readC                                    7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _colourclick_readB                                    7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      31
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      65
                                             10 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      93
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colourcards_normaliseRGBC                           12     8      4    6044
                                             48 COMRAM    12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    3263
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      68
                                             10 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      34
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      31
                                              9 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_calibration                                 6     2      4   63428
                                             71 COMRAM     4     0      4
                                             16 BANK0      2     2      0
                           _adjdelay
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6   28127
                                             10 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6   27317
                                             10 BANK0      6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                               12     6      6    3990
                                             34 COMRAM    12     6      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _left                                                17    11      6   21251
                                             64 COMRAM     7     1      6
                                              0 BANK0     10    10      0
                    _DCmotors_setPWM
                            ___fladd
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1286
                                              9 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3773
                                             23 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    8366
                                             48 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3802
                                             48 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    7364
                                             34 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    3038
                                             23 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     802
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     865
                                             15 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _adjdelay                                             4     4      0     192
                                              9 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _LowISR                                              3     3      0       0
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             1     1      0     244
                                              5 COMRAM     1     1      0
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (13) i2_interrupts_clear                                  0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                i2_interrupts_colour
 ---------------------------------------------------------------------------------
 (14) i2_interrupts_colour                                 1     1      0     222
                                              4 COMRAM     1     1      0
          i2_colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (15) i2_colourclick_writetoaddr                           2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (16) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (16) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (16) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (17) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_calibration
     _adjdelay
     _stop
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _turnleft
       _left
         _DCmotors_setPWM
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___xxtofl
       _right
         _DCmotors_setPWM
     _turnright
       _left
       _right
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_readRGBC
     ___flge
     _colourcards_normaliseRGBC
       ___fldiv
         ___xxtofl (ARG)
       ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _colourclick_readRGBC2
       _colourclickLEDs_C
       _colourclick_readRGBC
     _forward
       _DCmotors_setPWM
     _reverse
       _DCmotors_setPWM
     _stop
     _turnleft
     _turnright
   _colourclickLEDs_C
   _colourclick_calibration
     _colourclickLEDs_C
     _colourclick_readRGBC
     _colourclick_testing
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isdigit
             _isupper
             _stoa
               _fputc
               _strlen
             _strncmp
             _tolower
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
   _interrupts_init
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _interrupts_colour
         _colourclick_writetoaddr
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_interrupts_colour
       i2_colourclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     1A      6A      10       41.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     7F      EE       7       93.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     94      97       5       94.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     244       8        0.0%
DATA                 0      0     244       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 13 13:11:38 2021

      colourcards_normaliseRGBC@rel 0033         colourclick_readRGBC2@tmpval 0017  
                      ___fldiv@aexp 0030                        ___fldiv@bexp 002F  
                      ___fldiv@sign 0028                                  l71 44DA  
                                l75 44F6               __end_of_DCmotors_init 5D36  
                      ___awdiv@sign 0015                                  bsr 000FE0  
               ___wmul@multiplicand 000C                                 l130 6250  
                               l133 5E22                                 l127 6194  
                               l401 62AE                                 l402 62B4  
                               l235 2252                                 l341 61D6  
                               l350 5CE4                                 l238 22A6  
                               l431 62F0                                 l344 5BF4  
                               l440 62D8                                 l353 5C94  
                               l434 6324                                 l338 5FF8  
                               l347 5C44                                 l371 4C60  
                               l700 4EC0                                 l356 5A5A  
                               l364 49E4                                 l372 4B92  
                               l701 4EC2                                 l437 62CA  
                               l533 6216                                 l381 5380  
                               l446 61B6                                 l542 6288  
                               l374 4BA0                                 l711 5D84  
                               l279 472A                                 l551 60D0  
                               l367 4B32                                 l800 6170  
                               l545 629C                                 l369 4B40  
                               l473 60FA                                 l650 3DB4  
                               l706 5DD4                                 l714 49E6  
                               l482 6310                                 l378 4C68  
                               l643 5D34                                 l491 62E4  
                               l396 626A                                 l732 4C88  
                               l724 4B0C                                 l476 60FC  
                               l653 61F4                                 l485 631A  
                               l734 4CFE                                 l718 4A02  
                               l494 5F80                                 l743 4D9A  
                               l719 4A68                                 l399 62A0  
                               l655 61F6                                 l479 6122  
                               l663 5846                                 l671 57B8  
                               l488 6306                                 l729 4B30  
                               l690 3BE0                                 l914 442E  
                               l679 58D0                                 l927 488E  
                               l689 3BDE                                 l698 4EAA  
                               _abs 5F82                                 _pad 5510  
                      ___awmod@sign 000F                                 wreg 000FE8  
              ?_colourclick_testing 00EA                        ___flmul@aexp 0025  
                      ___flmul@bexp 002A                        ___flmul@sign 0024  
                      ___flmul@temp 002F               ?_colourclick_readRGBC 0015  
                      ___flmul@prod 002B                 __size_of_ADC_getval 0018  
                      ___fltol@exp1 0013                                l1031 550E  
                              ?_abs 001C                                l1044 5680  
                              l1070 50CC                                l1065 5086  
                              l1330 2A36                                l1074 6068  
                              l1059 572A                                l1421 300E  
                              l1414 2E18                                l1431 313E  
                              l1423 3086                                l1328 2A82  
                              l1424 3074                                l1345 2B9C  
                              l1337 2D52                                l1329 2A70  
                              l1521 5554                                l1097 4FC8  
                              l1354 2C6C                                l1418 317C  
                              l1370 5EB6                                l1355 2C5A  
                              l1524 5596                                l1532 35B6  
                              l1462 3EA4                                l1382 3516  
                              l1526 55D0                                l1534 35BE  
                              l1702 5936                                l1455 3E0C  
                              l1703 593E                                l1384 3376  
                              l1552 37F4                                l1616 16E4  
                              l1393 33BC                                l1721 5FC0  
                              l1713 51CA                                l1458 3F68  
                              l1570 1B10                                l1395 3434  
                              l1387 333A                                l1396 3422  
                              l1820 5BA4                                l1652 418E  
                              l1469 3F00                                l1805 5EFA  
                              l1718 5FB8                                l1814 59FC  
                              l1654 4196                                l1478 5B02  
                              l1663 4256                                l1752 410C  
                              l1808 6342                                l1664 429E  
                              l1824 52AC                                l1761 394A  
                              l1834 5996                                l1588 12A4  
                              l1668 42A6                                l1749 4104  
                              l1758 3A06                                l1782 6030  
                              l1839 599E                                l1695 2752  
                              l1687 2892                                l1768 60A0  
                              l1776 5B54                                l7010 2AEC  
                              l7002 2AB4                                l7012 2AF0  
                              l7004 2AC4                                l7020 2B10  
                              l7100 5EC4                                l1797 544A  
                              l7022 2B36                                l7030 2B8C  
                              l7014 2AFE                                l7006 2AD2  
                              l7102 5ED6                                l7110 5B66  
                              ?_pad 001A                                l7120 614C  
                              l7040 2BE0                                l7032 2BB2  
                              l7024 2B6A                                l7016 2B00  
                              l7008 2AE0                                l7200 484E  
                              l7104 5EDA                                l7112 5B98  
                              l8000 16D0                                l7122 6168  
                              l7050 2C0A                                l7042 2BEE  
                              l7034 2BC2                                l7026 2B6C  
                              l7018 2B0A                                l7210 3198  
                              l7130 42BA                                l7202 486E  
                              l7106 5B56                                l8010 1786  
                              l8002 16DC                                l7060 2C3C  
                              l7052 2C1A                                l7044 2BF0  
                              l7028 2B7C                                l7300 33CC  
                              l7220 31CC                                l7212 319A  
                              l7140 4310                                l7132 42DA  
                              l7108 5B62                                l7116 5FFA  
                              l8100 1A50                                l8020 17D0  
                              l8012 1798                                l8004 1700  
                              l7070 2C96                                l7062 2C52  
                              l7046 2BFE                                l7038 2BD6  
                              l7054 2C1C                                l7302 33DA  
                              l7230 31FE                                l7214 31AA  
                              l7222 31D4                                l7206 317E  
                              l7150 4364                                l7142 431C  
                              l7134 42DE                                l7126 42A8  
                              l8110 1A80                                l8102 1A5C  
                              l8030 1806                                l8022 17E0  
                              l8014 17A6                                l8006 1764  
                              l7080 2D12                                l7072 2CD0  
                              l7048 2C06                                l7056 2C2A  
                              l7400 2EC2                                l7312 3444  
                              l7320 348C                                l7304 33DE  
                              l7240 3232                                l7232 3200  
                              l7224 31E4                                l7216 31BA  
                              l7208 318A                                l9000 1DB2  
                              l8200 4082                                l7160 43D8  
                              l7152 4376                                l7144 433A  
                              l7136 42EC                                l7128 42AC  
                              l8120 1ADA                                l8104 1A64  
                              l8040 183A                                l8032 180A  
                              l8024 17E4                                l8008 1772  
                              l8016 17AE                                l7090 2D32  
                              l7082 2D16                                l7066 2C7C  
                              l7074 2CD2                                l7058 2C2E  
                              l7410 2F14                                l7402 2ECE  
                              l7330 34F6                                l7322 34A6  
                              l7314 3450                                l7306 33EC  
                              l7250 3278                                l7234 3210  
                              l7242 323A                                l7226 31EA  
                              l7218 31CA                                l7154 43A4  
                              l7146 4342                                l7162 43DE  
                              l7138 430C                                l7170 472C  
                              l8122 1AEA                                l8114 1AB4  
                              l8106 1A74                                l8050 18D8  
                              l8042 183E                                l8034 1810  
                              l8026 17EA                                l8018 17C2  
                              l8130 410E                                l7500 54A6  
                              l7092 2D40                                l7084 2D24  
                              l7076 2CE2                                l7068 2C88  
                              l7420 2F92                                l7412 2F24  
                              l7404 2EDE                                l7332 3504  
                              l7324 34BC                                l7316 345E  
                              l7308 341A                                l7260 32A0  
                              l7252 327C                                l7244 324A  
                              l7236 3220                                l7228 31F0  
                              l9020 1F1C                                l9012 1E82  
                              l9004 1DE8                                l8204 40C4  
                              l7164 43EE                                l7156 43C4  
                              l7148 4356                                l7180 4770  
                              l7172 4730                                l8124 1AF0  
                              l8116 1AC6                                l8108 1A7A  
                              l8060 1936                                l8028 17F6  
                              l8036 1816                                l8044 1844  
                              l8052 18DC                                l8140 4156  
                              l8132 4120                                l8220 5202  
                              l8300 249C                                l9100 44A4  
                              l7510 54E0                                l7502 54AE  
                              l7094 2D42                                l7086 2D2A  
                              l7078 2CF2                                l7430 300C  
                              l7422 2FC8                                l7414 2F40  
                              l7406 2EEA                                l7350 2D70  
                              l7334 350A                                l7326 34D6  
                              l7318 3488                                l7270 32EE  
                              l7246 3260                                l7238 3230  
                              l9022 1F4E                                l9006 1E1A  
                              l8206 40D6                                l7166 440E  
                              l7158 43C6                                l7190 47D8  
                              l7182 4790                                l7174 473E  
                              l8118 1AD2                                l8070 1974  
                              l8062 1946                                l8054 18FA  
                              l8046 189C                                l8038 1828  
                              l8150 41CC                                l8142 415E  
                              l8134 4128                                l8230 5286  
                              l8222 5210                                l8214 51CC  
                              l8302 24D2                                l9110 44BE  
                              l9102 44AC                                l7520 5506  
                              l7512 54E2                                l7504 54BC  
                              l7088 2D2C                                l7440 306C  
                              l7432 301E                                l7424 2FD6  
                              l7416 2F4C                                l7408 2EFA  
                              l7360 2DB6                                l7352 2D80  
                              l7344 2D54                                l7336 350C  
                              l7328 34F2                                l7280 3338  
                              l7272 32FE                                l7264 32B4  
                              l7248 3270                                l7256 3290  
                              l8240 62E0                                l9040 2082  
                              l9024 1F76                                l9032 1FC4  
                              l9008 1E4C                                l9016 1EB8  
                              l8400 6298                                l8208 40E8  
                              l7192 4806                                l7184 47AE  
                              l7176 475E                                l7600 6048  
                              l8080 19AA                                l8072 1984  
                              l8064 194A                                l8056 1916  
                              l8048 18D0                                l8160 4234  
                              l8152 41D0                                l8144 416C  
                              l8136 413A                                l8224 5228  
                              l8216 51F6                                l8320 260C  
                              l8312 25A2                                l8304 24FA  
                              l9120 44FE                                l9112 44C2  
                              l9104 44B0                                l7514 54E8  
                              l7506 54C2                                l8410 3CC6  
                              l8402 3BE2                                l7450 30DA  
                              l7434 302C                                l7426 2FF4  
                              l7418 2F68                                l7370 2DE2  
                              l7362 2DBC                                l7354 2D90  
                              l7346 2D60                                l7290 3386  
                              l7282 3344                                l7274 3306  
                              l7266 32CE                                l7258 32A0  
                              l8250 5F42                                l8234 6308  
                              l8242 62FE                                l9050 20EE  
                              l9042 209A                                l9034 1FF6  
                              l9026 1F8E                                l9018 1EEA  
                              l7194 4826                                l7186 47B6  
                              l7178 4762                                l7098 5EB8  
                              l7530 55EC                                l7602 6058  
                              l8090 1A06                                l8082 19B6  
                              l8074 198C                                l8066 195A  
                              l8058 1928                                l8170 4280  
                              l8162 4238                                l8154 41EE  
                              l8138 4142                                l8226 5248  
                              l8330 26DC                                l8314 25B4  
                              l8306 2522                                l9130 4556  
                              l9122 4518                                l9114 44C6  
                              l9106 44B4                                l7508 54D8  
                              l7516 54EE                                l8412 3CE2  
                              l8404 3BFE                                l6900 28AE  
                              l7460 3142                                l7444 3096  
                              l7452 30DE                                l7436 3030  
                              l7428 2FFE                                l7380 2E38  
                              l7372 2DF2                                l7364 2DC2  
                              l7356 2DA0                                l7348 2D6E  
                              l8420 3DD6                                l7292 339C  
                              l7284 3362                                l7276 3316  
                              l7268 32DE                                l8260 5F7E  
                              l8252 5F46                                l8236 630C  
                              l8244 6302                                l9052 2120  
                              l9060 2194                                l9036 2028  
                              l9028 1FAC                                l8500 60A2  
                              l8180 3FA6                                l8172 3F6A  
                              l7196 4838                                l7188 47CA  
                              l7540 5620                                l7532 55F0  
                              l7524 55D2                                l7620 4F2E  
                              l7612 4EEE                                l7700 59B0  
                              l8084 19BC                                l8092 1A0C  
                              l8076 199A                                l8068 196C  
                              l8156 41FA                                l8148 41B8  
                              l8228 525A                                l8332 26EE  
                              l8340 2766                                l8316 25CE  
                              l8324 2638                                l8308 256A  
                              l9132 4570                                l9124 451C  
                              l9116 44E8                                l9108 44BA  
                              l7518 54FE                                l8414 3D4C  
                              l8406 3C60                                l6910 28E2  
                              l6902 28B0                                l7470 316C  
                              l7462 3152                                l7454 30F8  
                              l7446 30A2                                l7438 303E  
                              l7390 2E78                                l7374 2E02  
                              l7366 2DD0                                l7358 2DA6  
                              l8430 3E4E                                l8422 3E1C  
                              l8510 3A72                                l7294 33A2  
                              l7286 3364                                l7278 332A  
                              l8254 5F4E                                l8246 6312  
                              l8238 62DC                                l9070 2212  
                              l9062 21AC                                l9054 2152  
                              l9038 205A                                l8502 60A6  
                              l8190 4000                                l8182 3FE0  
                              l8174 3F7E                                l7198 483E  
                              l7550 565A                                l7542 5628  
                              l7534 55FE                                l7526 55D6  
                              l7630 4F5E                                l7622 4F3C  
                              l7614 4F18                                l7606 4EC4  
                              l7702 5940                                l8094 1A1E  
                              l8086 19E2                                l8078 19A2  
                              l8166 4268                                l8158 4230  
                              l8350 280C                                l8342 278E  
                              l8334 2722                                l8326 2666  
                              l8318 25DC                                l8270 22F0  
                              l9134 45A8                                l9126 4530  
                              l9118 44F8                                l7480 544C  
                              l8408 3CA6                                l8600 5886  
                              l6920 2914                                l6904 28C0  
                              l6912 28EA                                l7464 3160  
                              l7456 310C                                l7448 30B0  
                              l7392 2E84                                l7384 2E4C  
                              l7376 2E08                                l7368 2DD2  
                              l8440 3ED6                                l8432 3E5A  
                              l8424 3E32                                l8416 3DB8  
                              l8520 3AF6                                l8512 3AB8  
                              l7296 33AC                                l7288 3374  
                              l8256 5F56                                l8248 6316  
                              l9080 2286                                l9072 2234  
                              l9064 21C0                                l9056 2184  
                              l9048 20BC                                l8504 60B4  
                              l8192 4008                                l8184 3FE4  
                              l8176 3F82                                l7800 3748  
                              l7544 5636                                l7552 5660  
                              l7536 5606                                l7528 55E4  
                              l7560 5682                                l7640 4F88  
                              l7632 4F68                                l7616 4F1A  
                              l7608 4EDA                                l7720 388E  
                              l7712 37F6                                l8096 1A38  
                              l8088 19FE                                l8168 427C  
                              l8360 284A                                l8352 281A  
                              l8344 27C4                                l8280 235A  
                              l8272 22F4                                l8264 22A8  
                              l9128 4542                                l7490 5478  
                              l7482 5450                                l8602 589E  
                              l6930 294A                                l6922 291A  
                              l6914 28FA                                l6906 28D0  
                              l7466 3162                                l7458 3126  
                              l7394 2E9C                                l7386 2E58  
                              l7378 2E28                                l8450 3F14  
                              l8442 3EE2                                l8434 3E8C  
                              l8418 3DC8                                l8530 3B3E  
                              l8522 3B02                                l8514 3AC8  
                              l7298 33BA                                l8610 45B6  
                              l8258 5F7C                                l9074 2246  
                              l9066 21E2                                l9058 218A  
                              l8506 60B8                                l8194 4010  
                              l8178 3F86                                l7650 5510  
                              l7810 3796                                l7802 3762  
                              l7554 5670                                l7546 564C  
                              l7538 5618                                l7570 5722  
                              l7562 56B0                                l7474 5E72  
                              l7642 4F98                                l7618 4F2A  
                              l7730 39AA                                l7714 3816  
                              l7706 5976                                l8098 1A3E  
                              l8354 282E                                l8290 240E  
                              l8282 2394                                l8274 231C  
                              l8266 22D0                                l9090 446C  
                              l7492 5480                                l7484 545E  
                              l8604 58B6                                l6940 2986  
                              l6932 295A                                l6924 2928  
                              l6916 2900                                l6908 28E0  
                              l7580 5008                                l7468 3168  
                              l7396 2EA8                                l7388 2E62  
                              l8452 3F38                                l8444 3EF0  
                              l8436 3E8E                                l8428 3E46  
                              l8540 3B94                                l8524 3B1A  
                              l8532 3B46                                l8516 3AD8  
                              l8508 3A08                                l8620 4662  
                              l8612 45C6                                l8380 5BF6  
                              l9076 224A                                l9068 21EE  
                              l7740 606A                                l8196 4048  
                              l8188 3FEA                                l7660 5560  
                              l7652 551E                                l7812 37A8  
                              l7804 3770                                l7556 5678  
                              l7548 5654                                l7572 5728  
                              l7564 56C0                                l7476 5E82  
                              l7644 4FA8                                l7628 4F54  
                              l7732 39BE                                l7724 38FE  
                              l7716 386C                                l7708 5988  
                              l7900 11D0                                l8348 27E4  
                              l8284 23B4                                l8276 2324  
                              l8292 2420                                l8268 22DE  
                              l8364 2858                                l8700 60D2  
                              l8372 61BA                                l9092 4474  
                              l7494 5484                                l7486 5466  
                              l8606 58CE                                l6950 29A4  
                              l6942 2994                                l6934 295C  
                              l6926 292A                                l6918 2912  
                              l7590 5074                                l7582 5036  
                              l7398 2EB4                                l8454 3F48  
                              l8446 3F0E                                l8438 3E9A  
                              l8542 3B9A                                l8534 3B5E  
                              l8526 3B26                                l8518 3ADE  
                              l8550 4DEC                                l8622 46C6  
                              l8614 45DA                                l8470 6198  
                              l8382 5C3C                                l8374 5BA6  
                              l8630 48BE                                l9078 2254  
                              l9086 22A2                                l7750 5B4A  
                              l7662 5574                                l7654 5532  
                              l7814 37B4                                l7806 3782  
                              l7566 56EE                                l7646 4FB8  
                              l7638 4F7C                                l7734 39E6  
                              l7726 393A                                l7718 3880  
                              l7910 1252                                l7902 1204  
                              l7830 0EE8                                l7822 0EB8  
                              l8366 2880                                l8358 283C  
                              l8294 2446                                l8286 23C2  
                              l8278 2332                                l8462 58D2  
                              l8710 60E8                                l8702 60DC  
                              l9094 4480                                l7496 548C  
                              l7488 546A                                l6960 29B8  
                              l6952 29A8                                l6944 2998  
                              l6928 293A                                l6936 2964  
                              l7592 50C4                                l7584 5046  
                              l7576 4FCA                                l8456 3F56  
                              l8448 3F10                                l8536 3B76  
                              l8528 3B32                                l8560 4E3A  
                              l8552 4DF2                                l8544 4D9C  
                              l8616 45EE                                l8392 5C46  
                              l8376 5BEC                                l8640 48FE  
                              l8632 48C0                                l8624 4890  
                              l7752 5B4E                                l7744 5B04  
                              l7672 5F82                                l7664 5578  
                              l7656 5540                                l7816 37BC  
                              l7808 3790                                l7760 3518  
                              l7568 56FE                                l7680 512C  
                              l7736 39F6                                l7728 396E  
                              l7912 1264                                l7920 12B0  
                              l7904 120C                                l7840 0F3E  
                              l7832 0F0C                                l7824 0EC2  
                              l8296 2456                                l8464 58DA  
                              l8720 52D4                                l8704 60E2  
                              l8712 62CC                                l8800 5FC2  
                              l8480 5E04                                l8472 5DD6  
                              l8608 6238                                l9096 4490  
                              l9088 4430                                l7498 549E  
                              l6970 29CC                                l6962 29BC  
                              l6954 29AC                                l6946 299C  
                              l6938 2974                                l7594 50CA  
                              l7586 5054                                l7578 4FF8  
                              l8458 3F58                                l8538 3B84  
                              l8570 4E8A                                l8562 4E46  
                              l8554 4E0A                                l8546 4DCC  
                              l8618 4602                                l8386 5C96  
                              l8394 5C8C                                l8650 4952  
                              l8634 48D8                                l8642 491A  
                              l8626 4896                                l7746 5B08  
                              l9290 4032                                l7674 5F9C  
                              l6890 53CE                                l6882 5382  
                              l7666 55A4                                l7658 554C  
                              l7818 37CC                                l7770 3590  
                              l7762 3538                                l7690 517E  
                              l7682 5154                                l7930 12F0  
                              l7914 1276                                l7906 123E  
                              l7850 0F6C                                l7842 0F50  
                              l7834 0F16                                l7826 0ED2  
                              l8298 248C                                l8466 58E8  
                              l8490 5AC4                                l8730 5368  
                              l8722 52E8                                l8706 60E4  
                              l8714 62D2                                l8810 5FF4  
                              l8802 5FC6                                l8482 5E0E  
                              l8474 5DE0                                l9098 4498  
                              l6980 2A1E                                l6972 29D0  
                              l6964 29C0                                l6956 29B0  
                              l6948 29A0                                l7588 5066  
                              l8572 4E96                                l8564 4E52  
                              l8556 4E16                                l8548 4DDC  
                              l8740 631C                                l8820 5D04  
                              l8812 5CE8                                l8732 629E  
                              l7756 60FC                                l8388 5CDC  
                              l8660 4984                                l8652 496A  
                              l8644 492C                                l8636 48E4  
                              l8628 48AE                                l8580 57F6  
                              l7748 5B1C                                l6892 5404  
                              l6884 5394                                l7668 55B8  
                              l7780 35EC                                l7772 35AA  
                              l7764 3560                                l7684 5160  
                              l7676 50CE                                l7940 134C  
                              l7932 1326                                l7916 127E  
                              l7908 124E                                l7860 0FE0  
                              l7844 0F5C                                l7852 0F72  
                              l7836 0F1E                                l7828 0EE0  
                              l8468 5916                                l8492 5ACC  
                              l8724 52FC                                l8716 52AE  
                              l8900 4C34                                l8708 60E6  
                              l8804 5FD0                                l8484 5E18  
                              l8476 5DF0                                l8590 5848  
                              l6990 2A62                                l6982 2A2E  
                              l6966 29C4                                l6958 29B4  
                              l6974 29D4                                l8574 4EA6  
                              l8558 4E2E                                l8566 4E5A  
                              l8910 49E6                                l8742 62B6  
                              l8830 5D0E                                l8822 5D06  
                              l8814 5CFC                                l8734 62B2  
                              l7758 610C                                l8486 59FE  
                              l8662 499C                                l8646 492E  
                              l8670 49C6                                l8638 48FC  
                              l8582 5802                                l8398 6288  
                              l6886 53A6                                l7790 368C  
                              l7782 35F4                                l7774 35C6  
                              l7766 3580                                l7598 6032  
                              l7694 51C2                                l7678 50EE  
                              l7950 1390                                l7942 135E  
                              l7934 132E                                l7926 12C2  
                              l7918 1298                                l7862 0FFC  
                              l7854 0F98                                l7870 1046  
                              l7846 0F64                                l7838 0F30  
                              l8494 5AD4                                l8726 5310  
                              l8718 52C4                                l8902 4C4A  
                              l8806 5FE0                                l8478 5DFA  
                              l8760 4CC4                                l8752 4C96  
                              l8744 4C6C                                l8592 584E  
                              l6992 2A64                                l6984 2A44  
                              l6976 29D8                                l6968 29C8  
                              l6896 2894                                l8568 4E72  
                              l8680 5D86                                l8920 4A76  
                              l8912 49F4                                l8840 5D2C  
                              l8832 5D10                                l8824 5D08  
                              l8816 5D00                                l8672 49CC  
                              l8664 49A8                                l8648 4946  
                              l8656 4970                                l8584 580E  
                              l8576 57BA                                l6888 53B0  
                              l7792 3692                                l7784 35FE  
                              l7776 35D8                                l7768 358E  
                              l7688 516C                                l7960 13DA  
                              l7952 13A8                                l7944 136C  
                              l7928 12D4                                l7936 1332  
                              l7880 10D0                                l7872 106C  
                              l7864 1014                                l7848 0F68  
                              l8496 5AF0                                l8488 5AB2  
                              l8728 535C                                l8904 4C4C  
                              l8808 5FEA                                l8770 4D1A  
                              l8762 4CD6                                l8754 4CA4  
                              l8746 4C84                                l8594 5866  
                              l6994 2A6E                                l6986 2A50  
                              l6978 2A02                                l6898 28A0  
                              l8682 5D98                                l8674 5D36  
                              l8930 4AA8                                l8922 4A84  
                              l8914 4A04                                l8738 62E6  
                              l8842 5D30                                l8834 5D1A  
                              l8826 5D0A                                l8818 5D02  
                              l8850 6206                                l8666 49C0  
                              l8658 4982                                l8578 57DE  
                              l8586 5816                                l8690 5768  
                              l7786 3604                                l7794 36F6  
                              l7778 35E6                                l7698 59A0  
                              l7962 13EE                                l7970 14E4  
                              l7954 13BA                                l7946 1370  
                              l7938 133A                                l7890 1106  
                              l7866 101E                                l7858 0FCE  
                              l8906 4C50                                l8780 4D56  
                              l8772 4D1C                                l8764 4CE0  
                              l8756 4CA6                                l8596 5872  
                              l6996 2A90                                l6988 2A54  
                              l8684 5DB8                                l8676 5D48  
                              l8940 4B28                                l8932 4AC0  
                              l8924 4A8A                                l8916 4A1C  
                              l8836 5D1C                                l8828 5D0C  
                              l8852 6210                                l8844 61F8  
                              l8860 61DE                                l8588 582E  
                              l8692 5774                                l7796 3710  
                              l7788 3686                                l7980 15B0  
                              l7972 1502                                l7964 1452  
                              l7948 1382                                l7956 13C2  
                              l7876 10A2                                l8908 4C62  
                              l8790 6252                                l8782 4D6E  
                              l8774 4D2C                                l8766 4CF8  
                              l8758 4CB6                                l8598 587E  
                              l6998 2AA0                                l8678 5D68  
                              l8942 4B2E                                l8934 4ADE  
                              l8926 4A8C                                l8918 4A3A  
                              l8838 5D28                                l8854 6212  
                              l8846 6202                                l8862 61EE  
                              l8694 5780                                l8686 572C  
                              l7798 372E                                l7990 1660  
                              l7982 15C0                                l7974 1536  
                              l7966 14AA                                l7958 13CA  
                              l7894 113C                                l7878 10B4  
                              l8870 4B4A                                l8950 6182  
                              l8792 625C                                l8776 4D3A  
                              l8768 4D0C                                l8784 4D70  
                              l8936 4AF8                                l8928 4AA6  
                              l8856 6214                                l8848 6204  
                              l8688 5750                                l8696 5788  
                              l7992 1694                                l7984 15D0  
                              l7976 1568                                l7968 14DE  
                              l7896 1170                                l7888 10EC  
                              l8872 4B64                                l8864 4B32  
                              l8960 618E                                l8952 6184  
                              l8944 6172                                l8794 6264  
                              l8786 4D88                                l8778 4D4C  
                              l8938 4B1A                                l8858 61D8  
                              l8698 57A0                                l8970 1B36  
                              l7994 16A8                                l7986 1604  
                              l7978 157E                                l7898 1176  
                              l8890 4BDC                                l8874 4B70  
                              l8866 4B42                                l8962 6190  
                              l8954 6186                                l8946 6178  
                              l8796 6266                                l8788 4D8A  
                              l8980 1C22                                l8972 1B68  
                              l7988 165A                                l7996 16AC  
                              l8892 4BE8                                l8884 4BA2  
                              l8876 4B8A                                l8868 4B48  
                              l8964 6192                                l8956 6188  
                              l8948 617E                                l8798 6268  
                              l8990 1CC6                                l8982 1C54  
                              l8974 1B9A                                l8966 1B12  
                              l7998 16BC                                l8894 4BFE  
                              l8886 4BAE                                l8878 4B8C  
                              l8958 618C                                STR_1 0E01  
                              l8992 1CF8                                l8984 1C5E  
                              l8976 1BCC                                l8968 1B16  
                              l8896 4C14                                l8888 4BC6  
                              STR_2 0E80                                l8994 1D2A  
                              l8978 1BF0                                l8898 4C1C  
                              STR_4 0EAF                                l8996 1D4E  
                              l8988 1C94                                l8998 1D80  
                              STR_8 0E94                        _BAUD4CONbits 000EE9  
                              _LATE 000F7D                                _LATG 000F7F  
                              _T2PR 000FBC                                u9000 47D8  
                              u9001 47D4                                u9010 4806  
                              u9011 4802                                u9100 32A0  
                              u9020 484E                                u9101 329C  
                              u9021 484A                                u9110 3316  
                              u9030 3198                                u9111 3312  
                              u9031 3194                                u9200 3430  
                              u9120 3338                                u9040 31AA  
                              u9201 342C                                u9121 3334  
                              u9041 31A6                                u9210 3444  
                              u9130 3362                                u9050 31BA  
                              u9211 3440                                u9131 335E  
                              u9051 31B6                                u8500 2928  
                              u9300 2DE2                                u9220 345E  
                              u9140 3386                                u9060 31FE  
                              u8420 5394                                u8501 2924  
                              u9301 2DDE                                u9221 345A  
                              u9141 3382                                u9061 31FA  
                              u8421 5390                                u8510 293A  
                              u9310 2DF2                                u9230 34A6  
                              u9150 339C                                u9070 3210  
                              u8430 53A6                                u8511 2936  
                              u9311 2DEE                                u9231 34A2  
                              u9151 3398                                u9071 320C  
                              u8431 53A2                                u8600 2A82  
                              u8520 294A                                u9400 3096  
                              u9320 2E28                                u9240 34D6  
                              u9160 33BA                                u9080 3220  
                              u8440 53CE                                u8601 2A7E  
                              u8521 2946                                u9401 3092  
                              u9321 2E24                                u9241 34D2  
                              u9161 33B6                                u9081 321C  
                              u8441 53CA                                u8610 2A90  
                              u8530 2986                                u9410 30B0  
                              u9330 2E38                                u9250 3504  
                              u9170 33DA                                u9090 3260  
                              u8450 5404                                u8611 2A8C  
                              u8531 2982                                u9411 30AC  
                              u9331 2E34                                u9251 3500  
                              u9171 33D6                                u9091 325C  
                              u8451 5400                                u9500 54FE  
                              u8700 2BEE                                u8620 2AA0  
                              u8540 2994                                u8460 28AE  
                              u9420 30F8                                u9340 2FB2  
                              u9260 2D6E                                u9180 33EC  
                              u9501 54FA                                u8701 2BEA  
                              u8621 2A9C                                u8541 2990  
                              u8461 28AA                                u9421 30F4  
                              u9261 2D6A                                u9181 33E8  
                              u8710 2BFE                                u8630 2AD2  
                              u8550 2A02                                u8470 28C0  
                              u9430 3126                                u9350 300C  
                              u9270 2D80                                u9190 341A  
                              u9510 55E4                                u8711 2BFA  
                              u8631 2ACE                                u8551 29FE  
                              u8471 28BC                                u9431 3122  
                              u9351 3008                                u9271 2D7C  
                              u9191 3416                                u9511 55E0  
                              u8800 2CE2                                u8720 2C1A  
                              u8640 2AE0                                u8560 2A1A  
                              u8480 28D0                                u9600 4FF8  
                              u9440 3160                                u9360 302C  
                              u9280 2D90                                u9520 55FE  
                              u8801 2CDE                                u8721 2C16  
                              u8641 2ADC                                u8561 2A14  
                              u8481 28CC                                u9601 4FF4  
                              u9441 315C                                u9361 3028  
                              u9345 2FA8                                u9281 2D8C  
                              u9521 55FA                                u9450 545E  
                              u8810 2CF2                                u8730 2C2A  
                              u8650 2AFE                                u8570 2A1C  
                              u8490 2912                                u9610 5036  
                              u9370 303E                                u9290 2DD0  
                              u9530 5618                                u9451 545A  
                              u8811 2CEE                                u8731 2C26  
                              u8651 2AFA                                u8491 290E  
                              u9611 5032                                u9371 303A  
                              u9291 2DCC                                u9531 5614  
                              u9460 5478                                u8820 2D12  
                              u8740 2C3C                                u8660 2B36  
                              u8580 2A44                                u9620 5054  
                              u9380 306C                                u8900 42BA  
                              u9540 5636                                u9700 4F78  
                              u9461 5474                                u8821 2D0E  
                              u8741 2C38                                u8661 2B32  
                              u8581 2A40                                u9621 5050  
                              u9381 3068                                u8901 42B6  
                              u9541 5632                                u9701 4F74  
                              u9470 549E                                u8830 2D24  
                              u8750 2C52                                u8670 2B7C  
                              u8590 2A62                                u9630 5074  
                              u9390 3082                                u8910 42EC  
                              u9550 564C                                u9710 4F98  
                              u9471 549A                                u8831 2D20  
                              u8751 2C4E                                u8671 2B78  
                              u8591 2A5E                                u9631 5070  
                              u9391 307E                                u8911 42E8  
                              u9551 5648                                u9711 4F94  
                              u9480 54BC                                u8840 2D40  
                              u8760 2C68                                u8680 2BB2  
                              u9640 50C4                                u9560 5670  
                              u9720 4FA8                                u9800 5154  
                              u9481 54B8                                u8841 2D3C  
                              u8761 2C64                                u8681 2BAE  
                              u9641 50C0                                u8921 4316  
                              u9561 566C                                u9721 4FA4  
                              u9801 5150                                u9490 54D8  
                              u8770 2C7C                                u8690 2BC2  
                              u8930 433A                                u8850 5EFA  
                              u9730 551E                                u9570 56B0  
                              u9650 6048                                u9810 517E  
                              u9491 54D4                                u8771 2C78  
                              u8691 2BBE                                u8931 4336  
                              u8851 5EF6                                u9731 551A  
                              u9571 56AC                                u9651 6044  
                              u9811 517A                                u8780 2C96  
                              u8940 4364                                u8860 5B88  
                              u9740 5540                                u9580 56EE  
                              u9660 4EDA                                u9900 383E  
                              u8781 2C92                                u8941 4360  
                              u9741 553C                                u9581 56EA  
                              u9661 4ED6                                u8790 2CD0  
                              u8950 43A4                                u8870 5B98  
                              u9750 5596                                u9590 5722  
                              u9670 4F0E                                u9830 51B8  
                              u9910 386C                                u8791 2CCC  
                              u8951 43A0                                u8871 5B94  
                              u9751 5592                                u9591 571E  
                              u9831 51B2                                u9911 3868  
                              u8960 43EE                                u9760 55A4  
                              u9680 4F3C                                u9840 51BA  
                              u9920 388E                                u8880 602A  
                              u8961 43EA                                u9761 55A0  
                              u9681 4F38                                u9825 5190  
                              u9921 388A                                u9905 3834  
                              u8881 6024                                u8970 473E  
                              u9770 5F9C                                u9690 4F50  
                              u9850 59EA                                u8890 602C  
                              u8971 473A                                u9771 5F98  
                              u8867 5B7E                                u9691 4F4C  
                              u9675 4F04                                u8980 4770  
                              u9780 510E                                u9940 38FA  
                              u9860 59FC                                u8981 476C  
                              u9941 38F6                                u9861 59F8  
                              u8990 47AE                                u9790 512C  
                              u9950 391E                                u9870 5970  
                              u8991 47AA                                u9791 5128  
                              u9935 38A2                                u9871 596A  
                              u9960 393A                                u9936 38AC  
                              u9880 5972                                u9785 5104  
                              u9961 3936                                u9937 38BC  
                              u9857 59E0                                u9970 398E  
                              u9890 5988                                u9955 3914  
                              u9891 5984                                u9980 39AA  
                              u9981 39A6                                u9990 39E6  
                              u9991 39E2                                u9975 3984  
                       main@current 0250             __end_of_interrupts_init 6196  
           __end_of_DCmotors_setPWM 3DB6                                abs@a 001C  
                              _dbuf 0200                                _atoi 3F6A  
                              _main 4430                                _dtoa 3518  
                              _left 3A08                                _prec 004D  
                              _nout 01D7                                pad@i 0021  
                              pad@p 001E                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 0023                                fsr2l 000FD9  
                              _stoa 410E                                btemp 0056  
                              _stop 5848                       ___fpclassifyf 50CE  
                              prodh 000FF4                                prodl 000FF3  
                              start 0060                    __end_of_ADC_init 626C  
                   ___fldiv@new_exp 0029                     __end_of_HighISR 5F40  
                      _tolower$3300 0016                        ___param_bank 000000  
            ?_colourclick_readRGBC2 0017                               ??_abs 001E  
                             ??_pad 0020              ??_clicker2buttons_init 000A  
                     ___fltol@sign1 0012                     __end_of___aodiv 4430  
                             ?_atoi 0011                     __end_of___fladd 2D54  
                             ?_main 0001                               ?_dtoa 0025  
                             ?_left 0041                     __end_of___aomod 4890  
                             _ADPCH 000F5F                     __end_of___fldiv 3518  
                   __end_of___awdiv 5510                     __end_of___flneg 606A  
                             STR_10 0E6D                               STR_20 0E9F  
                             STR_12 0E87                               STR_21 0EA7  
                             STR_30 0EB3                               STR_14 0E9A  
                             STR_24 0EA3                               STR_16 0E8E  
                             STR_25 0EAB                               STR_18 0E78  
                             STR_19 0E41                               STR_28 0EB3  
                   __end_of___awmod 5682                     __end_of___flmul 317E  
                   __end_of___flsub 5EB8                     __end_of___fltol 4FCA  
                             ?_stoa 0013                               u10000 609A  
                             u10001 6094                               u10010 609C  
                             u10020 5B1C                               u10100 35AA  
                             u10021 5B18                               u10101 35A6  
                             u10030 5B4A                               u10110 35D8  
                             ?_stop 0023                               u10031 5B46  
                             u10111 35D4                               u10040 610C  
                             u10200 37A8                               u10120 35E6  
                             u11000 231C                               u10041 6108  
                             u10201 37A4                               u10121 35E2  
                             u11001 2318                               u10050 6122  
                             u10130 3710                               u10210 0EE0  
                             u11010 235A                               u10051 611E  
                             u10131 370C                               u10211 0EDC  
                             u11011 2356                               u10140 372E  
                             u10060 3548                               u10300 109C  
                             u10220 0F30                               u11100 2666  
                             u11020 2406                               u10141 372A  
                             u10061 3542                               u10301 1096  
                             u10221 0F2C                               u11101 2662  
                             u11021 2400                               u10150 3748  
                             u10070 354A                               u10310 109E  
                             u10230 0F3E                               u11110 26D4  
                             u11030 2408                               u10151 3744  
                             u10231 0F3A                               u11111 26CE  
                             u12000 2152                               u10160 3762  
                             u10080 3560                               u10400 12D4  
                             u10320 10B4                               u10240 0F50  
                             u11120 26D6                               u11040 2420  
                             u12001 214E                               u10161 375E  
                             u10081 355C                               u10401 12D0  
                             u10321 10B0                               u10241 0F4C  
                             u11041 241C                               u11210 3DC8  
                             u12010 2212                               u10170 3770  
                             u10090 358E                               u10410 12F0  
                             u10330 1138                               u10250 0F98  
                             u11130 26EE                               u11050 2456  
                             u11211 3DC4                               u12011 220E  
                             u10171 376C                               u10091 358A  
                             u10411 12EC                               u10331 1134  
                             u10251 0F94                               u11131 26EA  
                             u11051 2452                               u11204 3DA6  
                             u11300 3F56                               u11220 3DD6  
                             u12020 2234                               u10180 3782  
                             u10500 1568                               u10420 1326  
                             u10340 11CC                               u10260 0FC8  
                             u11140 278E                               u11060 249C  
                             u11205 3DA2                               u11301 3F52  
                             u11221 3DD2                               u12021 2230  
                             u10181 377E                               u10501 1564  
                             u10421 1322                               u10341 11C8  
                             u10261 0FC2                               u11141 278A  
                             u11061 2498                               u11230 3E32  
                             u12030 2246                               u10190 3790  
                             u10510 15B0                               u10430 134C  
                             u10350 123E                               u10270 0FCA  
                             u11150 280C                               u11070 24FA  
                             u11310 5936                               u11231 3E2E  
                             u12031 2242                               u10191 378C  
                             u10511 15AC                               u10431 1348  
                             u10351 123A                               u11151 2808  
                             u11071 24F6                               u11311 5932  
                             u11240 3E88                               u11400 3BDE  
                             u12040 229A                               u11160 6298  
                             u10600 17C2                               u10520 15C0  
                             u10440 135E                               u10360 1264  
                             u10280 0FE0                               u11080 2522  
                             u11241 3E84                               u11401 3BDA  
                             u12041 2294                               u11161 6294  
                             u10601 17BE                               u10521 15BC  
                             u10441 135A                               u10361 1260  
                             u10281 0FDC                               u11081 251E  
                             u11170 3BFE                               u11250 3ED2  
                             u11410 4E0A                               u12050 229C  
                             u10610 17D0                               u10530 165A  
                             u10450 136C                               u10370 1276  
                             u10290 106C                               u11090 25B4  
                             u11171 3BFA                               u11251 3ECE  
                             u11411 4E06                               u10611 17CC  
                             u10531 1656                               u10451 1368  
                             u10371 1272                               u10291 1068  
                             u11091 25B0                               u11180 3CE2  
                             u11260 3EF0                               u11420 4E2E  
                             u11500 48BE                               u10700 1A38  
                             u10620 1828                               u10540 16A8  
                             u10460 1382                               u10380 1298  
                             u12060 44E8                     ___awdiv@divisor 0012  
                             u11181 3CDE                               u11261 3EEC  
                             u11421 4E2A                               u11325 61A0  
                             u11501 48BA                               u10701 1A34  
                             u10621 1824                               u10541 16A4  
                             u10461 137E                               u10381 1294  
                             u12061 44E4                               u11270 3F00  
                             u11430 4E72                               u11326 61A2  
                             u11510 492C                               u11350 60D0  
                             u10710 1A50                               u10630 18FA  
                             u10550 16D0                               u10470 1390  
                             u10390 12BE                               u12070 44F6  
                             u11271 3EFC                               u11431 4E6E  
                             u11335 61AA                               u11511 4928  
                             u11351 60CC                               u10711 1A4C  
                             u10631 18F6                               u10551 16CC  
                             u10471 138C                               u10391 12BA  
                             u12071 44F2                               u11600 4CB6  
                             u11280 3F0E                               u11360 3AF6  
                             u11440 4E8A                               u11336 61AC  
                             u11520 4982                               u10720 1AAE  
                             u10640 1916                               u10560 1772  
                             u10480 13BA                               u10800 41EE  
                             u12080 4542                               u11601 4CB2  
                             u11281 3F0A                               u11361 3AF2  
                             u11441 4E86                               u11345 61B4  
                             u11521 497E                               u10721 1AA8  
                             u10641 1912                               u10561 176E  
                             u10481 13B6                               u10801 41EA  
                             u12081 453E                               u11610 4CD6  
                             u11194 3D3C                               u11290 3F48  
                             u11370 3B1A                               u11450 4EC0  
                             u11530 5D48                               u11346 61B6  
                             u10730 1AB0                               u10650 1928  
                             u10570 1786                               u10490 1502  
                             u10810 421C                               u11611 4CD2  
                             u11195 3D38                               u11291 3F44  
                             u11371 3B16                               u11451 4EBC  
                             u11531 5D44                               u10651 1924  
                             u10571 1782                               u10491 14FE  
                             u11620 4D0C                               u11380 3B5E  
                             u11540 5D98                               u11460 582E  
                             u10900 40D6                               u10740 1AC6  
                             u10660 1936                               u10580 1798  
                             u10820 4256                               u11700 4BC6  
                             u11621 4D08                               u11381 3B5A  
                             u11541 5D94                               u11461 582A  
                             u10901 40D2                               u10741 1AC2  
                             u10661 1932                               u10581 1794  
                             u10821 4252                               u11701 4BC2  
                             u11630 4D1A                               u11390 3B76  
                             u11470 5846                               u11550 57A0  
                             u10910 40E8                               u10670 196C  
                             u10590 17A6                               u10830 4264  
                             u11710 4BDC                               u11631 4D16  
                             u11391 3B72                               u11471 5842  
                             u11551 579C                               u10911 40E4  
                             u10671 1968                               u10591 17A2  
                             u10831 4260                               u10751 4118  
                             u11711 4BD8                               u11640 4D2C  
                             u11480 589E                               u11800 4B28  
                             u11560 57B8                               u10680 199A  
                             u10840 429E                               u10760 413A  
                             u10920 51F6                               u11720 4BFE  
                             u11641 4D28                               u11481 589A  
                             u11801 4B24                               u11561 57B4  
                             u10681 1996                               u10841 429A  
                             u10817 4212                               u10761 4136  
                             u10921 51F2                               u11721 4BFA  
                             u11650 4D4C                               u11490 58B6  
                             u11570 62AE                               u11810 1B68  
                             u10850 3FA6                               u10690 1A1E  
                             u10770 416C                               u10930 5228  
                             u11730 4C14                               u11651 4D48  
                             u11491 58B2                               u11571 62AA  
                             u11811 1B64                               u10851 3FA2  
                             u10691 1A1A                               u10771 4168  
                             u10931 5224                               u11731 4C10  
                             u12507 4562                               u11660 4D9A  
                             u11580 4C96                               u11900 1E1A  
                             u11820 1B9A                               u10860 3FE0  
                             u10780 418A                               u10940 5248  
                             u11740 4C60                               u11661 4D96  
                             u11581 4C92                               u11901 1E16  
                             u11821 1B96                               u10861 3FDC  
                             u10781 4186                               u10941 5244  
                             u11741 4C5C                               u12517 459A  
                             u11590 4CA4                               u11750 49F4  
                             u11670 61EE                               u11910 1E4C  
                             u11830 1BCC                               u10870 3FFC  
                             u10790 41B4                               u10950 525A  
                             u11591 4CA0                               u11751 49F0  
                             u11671 61EA                               u12607 219E  
                             u11911 1E48                               u11831 1BC8  
                             u10871 3FF8                               u10791 41B0  
                             u10951 5256                               u12527 5DE6  
                             u11760 4A02                               u11920 1EEA  
                             u11840 1C22                               u10880 40BE  
                             u10960 5286                               u11680 4B40  
                             u11761 49FE                               u12617 21C6  
                             u11921 1EE6                               u11841 1C1E  
                             u10881 40B8                               u10961 5282  
                             u11681 4B3C                               u12537 5FD6  
                             u11770 4A76                               u10970 5F6A  
                             u11930 1F1C                               u11850 1CC6  
                             u10890 40C0                               u11690 4BA0  
                             u11771 4A72                               u10971 5F62  
                             u12707 498E                               u12627 5782  
                             u11931 1F18                               u11851 1CC2  
                             u11691 4B9C                               u12547 4B56  
                             u11780 4A84                               u11940 1F4E  
                             u11860 1CF8                               u11781 4A80  
                             u12717 49B2                               u12637 5810  
                             u11941 1F4A                               u11861 1CF4  
                             u12557 4B7C                               u11790 4B1A  
                             u11950 1FF6                               u11870 1D2A  
                             u10990 22D0                               u12807 3B40  
                             u11791 4B16                               u12727 49D6  
                             u12647 48A0                               u11951 1FF2  
                             u11871 1D26                               u10991 22CC  
                             u12567 4C28                               u11960 2028  
                             u11880 1D80                               u12817 3B8A  
                             u12737 4A10                               u12657 48CA  
                             u11961 2024                               u11881 1D7C  
                             u12577 5374                               u12497 450A  
                             u11970 205A                               u11890 1DB2  
                             u12827 5880                               u12747 4A46  
                             u12667 48EE                               u11971 2056  
                             u12587 1F80                               u11891 1DAE  
                             u10988 5F6C                               u11980 20EE  
                             u12837 58C0                               u12757 4A98  
                             u12677 4908                               u11981 20EA  
                             u12597 208C                               u11990 2120  
                             u12847 4C76                               u12767 4AB4  
                             u12687 4938                               u11991 211C  
                             u12857 4CEA                               u12777 4AEA  
                             u12697 495C                               u12867 4D60  
                             u12787 4E54                               u12877 4D7A  
                             u12797 4E9C                               i1l145 0050  
                             i2l130 6284                               i2l133 5E70  
                             i2l139 5F3C                               i2l341 6236  
                             i2l482 6338          ?i2_colourclick_writetoaddr 0003  
           _colourclick_writetoaddr 61B8                               i2l491 62FC  
                             i2l476 6124                               i2l479 614A  
                             i2l488 632E                     ___awdiv@counter 0014  
                      vfpfcnvrt@fmt 00A6                               _TMR0H 000FD4  
                             _TMR0L 000FD3               ??_colourclick_testing 00EE  
          __end_of_interrupts_clear 6252             __end_of_sendCharSerial4 629E  
        __end_of_I2C_2_Master_Start 6312          __end_of_I2C_2_Master_Write 62E6  
     __size_of_DCmotors_calibration 014C            ?_colourclick_calibration 0001  
                             _flags 004F                               _fputc 5382  
                   __end_of_forward 5848                               _fputs 5EB8  
                   __end_of_isdigit 60A2                colourclickLEDs_C@tog 000A  
                             _right 4D9C                               atoi@n 001E  
                             pad@fp 001A                               atoi@s 0011  
                             _width 01D9                               _putch 6342  
                             dtoa@d 0027                               dtoa@i 0047  
                 _clicker2LEDs_init 631C                               dtoa@n 003F  
                             dtoa@p 0039                               dtoa@s 003D  
                             dtoa@w 003B                               left@i 0068  
                   __end_of_isspace 5B56                     __end_of_isupper 6032  
                             tablat 000FF5                     __end_of_reverse 57BA  
                             plusw1 000FE3                               plusw2 000FDB  
            DCmotors_init@PWMperiod 000A                               stoa@i 001F  
                             stoa@l 0027                  ?_clicker2LEDs_init 0001  
                             stoa@p 0025                               stoa@s 0015  
                             stoa@w 0021                               ttemp5 0057  
                             ttemp6 005A                               ttemp7 005E  
                             status 000FD8                               wtemp8 0057  
                   __end_of_sprintf 5B04                      ?___fpclassifyf 000A  
                   __end_of_tolower 59A0                     __end_of_strncmp 52AE  
             _I2C_2_Master_RepStart 6312                     __initialization 5A5C  
               ??_clicker2LEDs_init 000A                        __end_of_atoi 410E  
                      __end_of_main 45B6                        __end_of_dtoa 37F6  
                      __end_of_left 3BE2                        __end_of_stoa 42A8  
                      __end_of_stop 58D2  __size_of_colourcards_normaliseRGBC 0176  
     __size_of_colourcards_readRGBC 0796                              ??_atoi 0013  
                            ??_main 00F2                              ??_dtoa 002F  
                            ??_left 0047                              ??_stoa 0017  
                            ??_stop 0027                       __activetblptr 000003  
      __size_ofi2_I2C_2_Master_Idle 0028   __end_ofi2_colourclick_writetoaddr 6238  
            ??_colourclick_readRGBC 0017        __size_ofi2_I2C_2_Master_Stop 000A  
         __end_of_clicker2LEDs_init 6326                     _colourcard_flag 01E4  
                            ?_fputc 000A                              ?_fputs 0013  
                            _ADRESH 000F64           __size_of_colourclick_init 0038  
                            ?_right 0023                    ___awdiv@dividend 0010  
                            ?_putch 0001                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                              i1l6680 0026  
                            i1l6682 0036                              i1l6684 004A  
                            i2l6310 5E48                              i1l6686 004E  
                            i2l6312 5E52                              i2l6304 5E24  
                            i2l6314 5E5C                              i2l6306 5E2E  
                            i2l6316 5E66                              i2l6308 5E3E  
                            i2l6088 621A                              i2l6620 626C  
                            i2l5870 6134                              i2l6670 5EFC  
                            i2l6672 5F0C                              i2l5970 6330  
                            i2l6674 5F12                              i2l5868 6124  
                            i2l5972 6334                              i2l5980 62F8  
                            i2l6676 5F34                              i2l5974 6326  
                            i2l6678 5F38                              i2l5976 632A  
                            i2l5978 62F4                    __end_of_adjdelay 4D9C  
                  ?_interrupts_init 0001                    ?_DCmotors_setPWM 0018  
                         ??_HighISR 0006                              _RX4PPS 000E15  
    i2colourclick_writetoaddr@value 0003                              _TX4REG 000EE4  
                  __end_of___xxtofl 3F6A        __size_ofi2_interrupts_colour 004E  
                            _LowISR 0018                        ??_ADC_getval 000A  
                      vfprintf@cfmt 00C6                              ___flge 4FCA  
                            ___fleq 5682              colourcards_readRGBC@mL 0072  
            colourcards_readRGBC@mR 0074                           ??___aodiv 001A  
                         ??___fladd 0039                           ??___aomod 001A  
                            ___wmul 614C                           ??___fldiv 0020  
                         ??___awdiv 0014                           ??___flneg 000E  
                         ??___awmod 000E                           ??___flmul 0020  
                         ??___flsub 0049                           ??___fltol 000E  
                            _efgtoa 0EB8                    ??_buggyLEDs_init 000A  
                i2_interrupts_clear 626C                              _floorf 37F6  
         ??_colourclick_writetoaddr 000D                              clear_0 5A82  
                            clear_1 5A8E                              clear_2 5AA2  
                  ___awdiv@quotient 0016                     ___awmod@divisor 000C  
                            isa$std 000001                     ___awmod@counter 000E  
 __end_of_colourcards_normaliseRGBC 472C                              pad@buf 001C  
                            dtoa@fp 0025                              left@mL 0041  
                            left@mR 0043                              _strcpy 59A0  
                            _strlen 5B56                              fputc@c 000A  
                            fputs@c 0017                              fputs@i 0018  
                            fputs@s 0013                           ??_forward 0027  
               ?i2_interrupts_clear 0001                           ??_isdigit 000C  
                   ___fpclassifyf@e 0012                     ___fpclassifyf@u 0014  
                   ___fpclassifyf@x 000A                              right@i 002D  
                      __mediumconst 0000                           ??_isspace 000C  
                            tblptrh 000FF7                           ??_isupper 000C  
                            tblptrl 000FF6                              tblptru 000FF8  
                         ?_ADC_init 0001                    ?_sendCharSerial4 0001  
                         ??_reverse 0027                              stoa@cp 0023  
                            stoa@fp 0013                              putch@c 0001  
                  __end_of_vfprintf 5940                              stop@mL 0023  
                            stop@mR 0025                           ??_sprintf 004D  
                         ??_tolower 0012                  __end_of_ADC_getval 62B6  
                      ?_USART4_init 0001                           ??_strncmp 0010  
                        ___flge@ff1 0031                          ___flge@ff2 0035  
                   ??___fpclassifyf 000E                        ___xxtofl@arg 0014  
                      ___xxtofl@exp 0013              colourclick_testing@buf 0100  
                      ___xxtofl@val 000A                          ___fleq@ff1 000A  
                        ___fleq@ff2 000E                    __end_of_turnleft 5DD6  
                        __accesstop 0060             __end_of__initialization 5AA8  
                        ___flneg@f1 000A              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                ??i2_interrupts_clear 0006  
                        ___fltol@f1 000A                      __pcstackCOMRAM 0001  
                      __pidataBANK1 633A                       __end_of_fputc 544C  
                     __end_of_fputs 5EFC                       __end_of_right 4EC4  
                     __end_of_putch 6344       checkbatterylevel@batterylevel 000B  
                        ??_ADC_init 000A          __size_of_clicker2LEDs_init 000A  
                           ??_fputc 000E                             ??_fputs 0017  
                           ??_right 0029       __size_of_colourclickLEDs_init 000E  
                           ??_putch 000A     __end_of_colourclick_writetoaddr 61D8  
                        __pbssBANK0 00F4                          __pbssBANK1 017F  
                        __pbssBANK2 0200                          __pnvCOMRAM 0054  
                 _checkbatterylevel 61D8             ??_colourclick_readRGBC2 001A  
     __size_ofi2_I2C_2_Master_Start 000A       __size_ofi2_I2C_2_Master_Write 000C  
                ?_checkbatterylevel 0001                             ?_LowISR 0001  
                      _T2CLKCONbits 000FBF                             ?___flge 0031  
                           ?___fleq 000A                             ?___wmul 000A  
                           ?_efgtoa 0060                 ??_checkbatterylevel 000B  
                           ?_floorf 0031                             ?_strcpy 000A  
                           ?_strlen 000A                           ?_adjdelay 0001  
                           _INT1PPS 000DF1         ??i2_colourclick_writetoaddr 0004  
                         ?___xxtofl 000A                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                   ?_interrupts_clear 0001  
                __size_of_vfpfcnvrt 05EC                             _PWM6DCH 000FA3  
                           _PWM7DCH 000FA0                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5                  ??_interrupts_clear 000F  
                  _colourclick_init 5FC2           __end_of_checkbatterylevel 61F8  
            __size_of_DCmotors_init 0050                             _HighISR 0008  
                         _ADREFbits 000F58                  _I2C_2_Master_Start 6308  
               i2_I2C_2_Master_Idle 6124                  _I2C_2_Master_Write 62DA  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 6326  
      __end_of_DCmotors_calibration 4B32                  __size_of_turnright 0050  
  __size_of_colourclick_calibration 0138                             __Lparam 0000  
                   __size_of_LowISR 0048             sendStringSerial4@string 000B  
                   __size_of___flge 0104                     __size_of___fleq 00AA  
                           ___aodiv 42A8                             ___fladd 2894  
                           ___aomod 472C                             ___fldiv 317E  
                           ___awdiv 544C                             ___flneg 6032  
           colourcards_readRGBC@abs 0070                             ___awmod 55D2  
                           ___flmul 2D54                             ___flsub 5E72  
                           ___fltol 4EC4             colourcards_readRGBC@rel 0076  
                   __size_of___wmul 0026                 ?_I2C_2_Master_Start 0001  
               ?_I2C_2_Master_Write 0001                           ?_vfprintf 00C0  
                      __psmallconst 0E00                     __size_of_efgtoa 0C5A  
       __end_of_colourclick_testing 5382                     __size_of_floorf 0212  
                           __pcinit 5A5C                             __ramtop 0E00  
                           __ptext0 4430                             __ptext1 6172  
                           __ptext2 6238                             __ptext3 5DD6  
                           __ptext4 5FC2                             __ptext5 61B8  
                           __ptext6 62CC                             __ptext7 60D2  
                           __ptext8 4B32                             __ptext9 52AE  
     __size_of_clicker2buttons_init 000C                           ?_turnleft 006A  
                        ??_adjdelay 000A                     __size_of_strcpy 005E  
                   __size_of_strlen 0050                 i2_interrupts_colour 5E24  
              ?i2_I2C_2_Master_Idle 0001                           _T2CONbits 000FBD  
                      __size_of_abs 0040                        __size_of_pad 00C2  
                           _forward 57BA                             _isdigit 606A  
                        ??___xxtofl 000E                ?i2_I2C_2_Master_Stop 0001  
                  ___awmod@dividend 000A                             _isspace 5B04  
                         _T2HLTbits 000FBE                             _isupper 5FFA  
                           efgtoa@c 0066                             efgtoa@d 0084  
                           efgtoa@e 009C                             efgtoa@f 0062  
                           efgtoa@g 0098                             efgtoa@h 008E  
                           efgtoa@i 0096                             efgtoa@l 0092  
                           efgtoa@m 007E                             efgtoa@n 009E  
                           efgtoa@p 0088                             efgtoa@t 0078  
                           efgtoa@u 00A0                             efgtoa@w 008A  
                           _reverse 572C                       _RxBufWriteCnt 00F6  
                           atoi@neg 0017                             _sprintf 5AB2  
                           _tolower 5940                ??_I2C_2_Master_Start 000B  
                           left@deg 0045                ??_I2C_2_Master_Write 000B  
                           _strncmp 51CC                      __pintcode_body 5EFC  
              end_of_initialization 5AA8        __end_of_colourcards_readRGBC 22A8  
                           floorf@e 003F                             floorf@m 003B  
                           floorf@u 0041                             floorf@x 0031  
                  ADC_getval@tmpval 000A                             fputc@fp 000C  
              __size_of_USART4_init 0020                             int_func 5EFC  
                           fputs@fp 0015           i2_colourclick_writetoaddr 6218  
              ?i2_interrupts_colour 0001                           i2u1288_47 5E34  
                           right@mL 0023                             right@mR 0025  
                      adjdelay@mode 000D                   __end_of_vfpfcnvrt 2894  
                        efgtoa@mode 008D                          efgtoa@sign 0086  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE      colourclick_calibration@current 0177  
    colourclick_calibration@initial 016F                          ??_vfprintf 004D  
      colourclick_writetoaddr@value 000C                             strcpy@d 0012  
                           strlen@a 000C                             strcpy@s 0010  
                           strlen@s 000A                       _DCmotors_init 5CE6  
                         _PORTFbits 000F8E                          ??_turnleft 0048  
             ??i2_I2C_2_Master_Idle 0001               ??i2_I2C_2_Master_Stop 0002  
                       ___fladd@grs 0040            colourclick_calibration@i 016E  
                     ___xxtofl@sign 0012                           _TRISAbits 000F81  
                         _TRISBbits 000F82                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                 __end_of_turnright 5D86                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                       ___fldiv@grs 002B                         ___fldiv@rem 0024  
     __size_of_colourclick_readRGBC 005E                   __size_of_ADC_init 001A  
           ??_I2C_2_Master_RepStart 000B                colourclick_readB@tmp 0013  
              colourclick_readC@tmp 0013          __size_of_checkbatterylevel 0020  
              colourclick_readG@tmp 0013                colourclick_readR@tmp 0013  
                       ___flmul@grs 0026               ??i2_interrupts_colour 0005  
                      _EUSART4RXbuf 01BB                        _EUSART4TXbuf 017F  
         sendCharSerial4@charToSend 000A                          main@motorL 0258  
                        main@motorR 0261                      __end_of_LowISR 0060  
          __size_of_interrupts_init 0024            __size_of_DCmotors_setPWM 01D4  
                    __end_of___flge 50CE          colourclick_readRGBC@tmpval 0015  
                    __end_of___fleq 572C                      ?_DCmotors_init 0001  
                       vfpfcnvrt@ap 00A8                         vfpfcnvrt@cp 00B2  
                       vfpfcnvrt@ct 00BC                         vfpfcnvrt@fp 00A4  
                       vfpfcnvrt@ll 00AA                      __end_of___wmul 6172  
                    __end_of_efgtoa 1B12                      __end_of_floorf 3A08  
                        floorf@F527 01CF          ?_colourcards_normaliseRGBC 0031  
                    __end_of_strcpy 59FE                      __end_of_strlen 5BA6  
              colourclick_testing@B 016A                colourclick_testing@C 016C  
              colourclick_testing@G 0168                colourclick_testing@R 0166  
               start_initialization 5A5C                         __end_of_abs 5FC2  
              _DCmotors_calibration 49E6                         __end_of_pad 55D2  
                     _TxBufWriteCnt 0053                    _unknowncard_flag 01E3  
                   _returnhome_flag 00F4            __size_of_sendCharSerial4 0018  
             __end_of___fpclassifyf 51CC             _colourclick_calibration 4B32  
       __size_ofi2_interrupts_clear 001A                            ??_LowISR 0007  
                      turnright@deg 006E      __size_of_colourclick_readRGBC2 0156  
     __end_of_colourclick_readRGBC2 49E6                         vfprintf@fmt 00C2  
          ?_colourclick_writetoaddr 000C          colourcards_normaliseRGBC@B 0039  
        colourcards_normaliseRGBC@C 003B          colourcards_normaliseRGBC@G 0037  
        colourcards_normaliseRGBC@R 0035                            ??___flge 0039  
                          ??___fleq 0012        __end_of_colourclickLEDs_init 62DA  
                          ??___wmul 000E            __end_of_colourclick_init 5FFA  
                          ??_efgtoa 0067                         __pdataBANK1 01E7  
     i2I2C_2_Master_Write@data_byte 0002                            ??_floorf 0035  
              _colourcards_readRGBC 1B12                            ??_strcpy 000E  
                          ??_strlen 000C        __end_ofi2_I2C_2_Master_Start 633A  
      __end_ofi2_I2C_2_Master_Write 62FE                           ___fladd@a 0035  
                         ___fladd@b 0031                           ___fldiv@a 001C  
                         ___fldiv@b 0018                           ___flmul@a 001C  
                         ___flmul@b 0018                         __pbssCOMRAM 004D  
                         ___flsub@a 0045                           ___flsub@b 0041  
                     __pcstackBANK0 0060                       __pcstackBANK1 0100  
                     __pcstackBANK2 0250                   __size_of_adjdelay 0132  
             ?_DCmotors_calibration 0048                    ___aodiv@dividend 000A  
           __size_of_buggyLEDs_init 0016                   __size_of___xxtofl 01B4  
                          ?_HighISR 0001                           _atoi$3206 0019  
                         _atoi$3207 001D                           _atoi$3208 001B  
         __size_of_interrupts_clear 001A                         _efgtoa$3133 0070  
                       _efgtoa$3128 006C                         _efgtoa$3137 0072  
                       _efgtoa$3129 006E                         _efgtoa$3138 0074  
                       _efgtoa$3139 0076                           _dtoa$3104 0037  
                       _clear_lower 01DD                           _left$3571 0064  
                       _clear_upper 01DB                           __pintcode 0008  
                   ??_DCmotors_init 000A                            ?___aodiv 000A  
                          ?___fladd 0031                            ?___aomod 000A  
                          ?___fldiv 0018                            ?___awdiv 0010  
                  ___aodiv@quotient 001C                            ?___flneg 000A  
                          ?___awmod 000A                            ?___flmul 0018  
                          ?___flsub 0041                            ?___fltol 000A  
__size_ofi2_colourclick_writetoaddr 0020               ?_colourcards_readRGBC 0070  
                       __pintcodelo 0018                           adjdelay@i 000C  
                        right@delay 002B                I2C_2_Master_Read@ack 000C  
                 __size_of_vfprintf 006E                   ??_interrupts_init 000F  
                 ??_DCmotors_setPWM 001A                I2C_2_Master_Read@tmp 000D  
             _interrupts_lowerbound 0051                         __smallconst 0E00  
                          ?_forward 0023                            ?_isdigit 000A  
                 _I2C_2_Master_Idle 60FC                   _I2C_2_Master_Init 60D2  
                 _I2C_2_Master_Read 5F40                   _I2C_2_Master_Stop 62FE  
                          ?_isspace 000A                   __size_of_turnleft 0050  
                          ?_isupper 000A                        _RxBufReadCnt 01E6  
                          _ADC_init 6252                            ?_reverse 0023  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                  ?_I2C_2_Master_Stop 0001  
                          ?_sprintf 00C8                            ?_tolower 0010  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
                          ?_strncmp 000A                      __size_of_right 0128  
                    __size_of_putch 0002           ??_colourclick_calibration 00F0  
      __end_of_clicker2buttons_init 62F2                   _sendStringSerial4 60A2  
               ??_I2C_2_Master_Idle 000A                 ??_I2C_2_Master_Init 000A  
               ??_I2C_2_Master_Read 000B                      ___wmul@product 000E  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 000B  
                          _LATCbits 000F7B                   _colourclickLEDs_C 6196  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                   _interrupts_colour 5DD6  
                ?_sendStringSerial4 000B                            _PIE4bits 000E2D  
                ?_colourclickLEDs_C 0001                            _PIR0bits 000E33  
                          _PIR4bits 000E37                  ?_interrupts_colour 0001  
                          i1u796_20 0036                            i1u796_21 0032  
                          i2u696_40 6134                            i2u696_41 6130  
                          i2u697_40 614A                            i2u793_40 5F0C  
                          i2u697_41 6146                            i2u793_41 5F08  
                          i2u794_40 5F24                            i2u794_41 5F1C  
                          i2u795_48 5F26                   ??_sendCharSerial4 000A  
                          _SSP2CON2 000EDA                 ??_sendStringSerial4 000D  
            DCmotors_setPWM@PWMduty 0021          colourclick_testing@ambient 0164  
                          _SSP2STAT 000ED8                 ??_colourclickLEDs_C 000A  
                 _colourclick_readB 5C96                   _colourclick_readC 5C46  
                 _colourclick_readG 5BF6                   _colourclick_readR 5BA6  
                         _vfpfcnvrt 22A8                 ??_interrupts_colour 000E  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 6124  
         __end_of_I2C_2_Master_Init 60FC           __end_of_I2C_2_Master_Read 5F82  
        colourclick_testing@current 00EC                   ___wmul@multiplier 000A  
        colourclick_testing@initial 00EA                  ?_colourclick_readB 000E  
                ?_colourclick_readC 000E                  ?_colourclick_readG 000E  
                ?_colourclick_readR 000E           __end_of_I2C_2_Master_Stop 6308  
             _interrupts_upperbound 0054         I2C_2_Master_Write@data_byte 000B  
            ??_DCmotors_calibration 0070        __size_of_colourclick_testing 00D4  
                         left@delay 0060                        _TxBufReadCnt 00F5  
                      _isspace$3237 0010                 ??_colourclick_readB 0010  
               ??_colourclick_readC 0010                 ??_colourclick_readG 0010  
               ??_colourclick_readR 0010                          vfpfcnvrt@c 00BF  
                        vfpfcnvrt@f 00B8                       ??_USART4_init 000A  
                         copy_data0 5A70           __end_of_sendStringSerial4 60D2  
       __size_of_I2C_2_Master_Start 000A                _colourclickLEDs_init 62CC  
       __size_of_I2C_2_Master_Write 000C                           _turnright 5D36  
         __end_of_colourclickLEDs_C 61B8                         turnleft@deg 006E  
    __size_of_I2C_2_Master_RepStart 000A           __end_of_interrupts_colour 5E24  
     __end_of_I2C_2_Master_RepStart 631C                    __size_of_HighISR 5F38  
              i2_I2C_2_Master_Start 6330                i2_I2C_2_Master_Write 62F2  
                          __Hrparam 0000                         turnright@mL 006A  
                       turnright@mR 006C                          _ADC_getval 629E  
      __end_of_colourclick_readRGBC 5A5C                          vfprintf@ap 00C4  
                          __Lrparam 0000                          vfprintf@fp 00C0  
         __end_of_colourclick_readB 5CE6           __end_of_colourclick_readC 5C96  
         __end_of_colourclick_readG 5C46           __end_of_colourclick_readR 5BF6  
                         forward@mL 0023                           forward@mR 0025  
            ??_colourcards_readRGBC 0048         __end_ofi2_I2C_2_Master_Idle 614C  
                  __size_of___aodiv 0188                    __size_of___fladd 04C0  
       __end_ofi2_I2C_2_Master_Stop 6330                    __size_of___aomod 0164  
                  __size_of___fldiv 039A                    __size_of___awdiv 00C4  
                  __size_of___flneg 0038                    __size_of___awmod 00B0  
                  __size_of___flmul 042A                    __size_of___flsub 0046  
                  __size_of___fltol 0106                          ?_vfpfcnvrt 00A4  
   __end_of_colourclick_calibration 4C6A                     ___aodiv@divisor 0012  
                   ___aodiv@counter 001A                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                            _adjdelay 4C6A  
                ___fpclassifyf@F465 01D3                          _ANSELFbits 000EB4  
       ??_colourcards_normaliseRGBC 0035                          sprintf@fmt 00CA  
                          ___xxtofl 3DB6                          _T0CON0bits 000FD5  
                        _T0CON1bits 000FD6              DCmotors_calibration@mL 0048  
            DCmotors_calibration@mR 004A                      _buggyLEDs_init 62B6  
                  __size_of_forward 008E                    __size_of_isdigit 0038  
                  __size_of_isspace 0052                            __ptext10 5AB2  
                          __ptext11 58D2                            __ptext20 50CE  
                          __ptext12 22A8                            __ptext21 4EC4  
                          __ptext13 51CC                            __ptext30 5382  
                          __ptext22 5E72                            __ptext14 410E  
                          __ptext31 6342                            __ptext23 6032  
                          __ptext15 0EB8                            __ptext40 1B12  
                          __ptext32 5F82                            __ptext24 5682  
                          __ptext16 5940                            __ptext41 572C  
                          __ptext33 472C                            __ptext25 55D2  
                          __ptext17 5FFA                            __ptext50 62FE  
                          __ptext42 57BA                            __ptext34 42A8  
                          __ptext26 3518                            __ptext18 59A0  
                          __ptext51 6308                            __ptext43 4890  
                          __ptext35 3F6A                            __ptext27 5510  
                          __ptext19 37F6                            __ptext60 61F8  
                          __ptext52 6312                            __ptext44 59FE  
                          __ptext36 5B04                            __ptext28 5B56  
                          __ptext61 5CE6                            __ptext53 5F40  
                          __ptext45 5BA6                            __ptext37 606A  
                          __ptext29 5EB8                            __ptext70 3DB6  
                          __ptext62 62E6                            __ptext54 60FC  
                          __ptext46 5BF6                            __ptext38 60A2  
                          __ptext71 2D54                            __ptext63 631C  
                          __ptext55 6196                            __ptext47 5C46  
                          __ptext39 6286                            __ptext72 4FCA  
                          __ptext64 62B6                            __ptext56 45B6  
                          __ptext48 5C96                            __ptext73 2894  
                          __ptext65 49E6                            __ptext57 317E  
                          __ptext49 62DA                            __ptext82 626C  
                          __ptext74 5848                            __ptext66 5D36  
                          __ptext58 61D8                            __ptext83 5E24  
                          __ptext75 3BE2                            __ptext67 5D86  
                          __ptext59 629E                            __ptext84 6218  
                          __ptext76 614C                            __ptext68 4D9C  
                          __ptext85 62F2                            __ptext77 544C  
                          __ptext69 3A08                            __ptext86 6326  
                          __ptext78 4C6A                            __ptext87 6330  
                          __ptext79 6252                            __ptext88 6124  
                  __size_of_isupper 0038                    __size_of_reverse 008E  
       __end_ofi2_interrupts_colour 5E72               ?_colourclickLEDs_init 0001  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
                  __size_of_sprintf 0052                    __size_of_tolower 0060  
                        ?_turnright 006A                          strcpy@dest 000A  
                  __size_of_strncmp 00E2                       __size_of_atoi 01A4  
                     __size_of_main 0186                       __size_of_dtoa 02DE  
                     __size_of_left 01DA                       __size_of_stoa 019A  
                     __size_of_stop 008A               ?i2_I2C_2_Master_Start 0001  
             ?i2_I2C_2_Master_Write 0001                 __end_of_USART4_init 6218  
                  _interrupts_clear 6238                           reverse@mL 0023  
                         reverse@mR 0025                     _turnright_delay 01DF  
                    _turnleft_delay 01E1                            efgtoa@fp 0060  
                          efgtoa@ne 007C                            efgtoa@pp 007A  
                          efgtoa@ou 0080                           stoa@F1163 01E7  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 0056                            _vfprintf 58D2  
                 ?_colourclick_init 0001                  ??_colourclick_init 000E  
        __size_of_I2C_2_Master_Idle 0028          __size_of_I2C_2_Master_Init 002A  
        __size_of_I2C_2_Master_Read 0042                    ___aomod@dividend 000A  
                  DCmotors_setPWM@m 0018                _clicker2buttons_init 62E6  
        __size_of_I2C_2_Master_Stop 000A                            _turnleft 5D86  
                        turnleft@mL 006A                          turnleft@mR 006C  
            __end_of_buggyLEDs_init 62CC                      _vfpfcnvrt$3164 00B4  
                    _vfpfcnvrt$3169 00B6                          _INTCONbits 000FF2  
  __size_of_colourclick_writetoaddr 0020      colourclick_writetoaddr@address 000D  
  i2colourclick_writetoaddr@address 0004                            isdigit@c 000A  
                       _PWM6CONbits 000FA4          __size_of_sendStringSerial4 0030  
                       _PWM7CONbits 000FA1                            intlevel1 0000  
                          intlevel2 0000          __size_of_colourclickLEDs_C 0022  
                         sprintf@ap 00E2          __size_of_interrupts_colour 004E  
        __end_ofi2_interrupts_clear 6286                            isspace@c 000A  
                          right@deg 0027           _colourcards_normaliseRGBC 45B6  
                         strcpy@src 000C                            isupper@c 000A  
                         strncmp@_l 000A                           strncmp@_r 000C  
                   _interrupts_init 6172                     _DCmotors_setPWM 3BE2  
                       ?_ADC_getval 0001                         efgtoa@nmode 008C  
        __size_of_colourclick_readB 0050          __size_of_colourclick_readC 0050  
        __size_of_colourclick_readG 0050          __size_of_colourclick_readR 0050  
             _colourclick_readRGBC2 4890                     ___aomod@divisor 0012  
                       ??_vfpfcnvrt 0049                            stoa@nuls 0018  
                   ___aomod@counter 001A               ?_clicker2buttons_init 0001  
         colourclick_readRGBC2@mode 0019                            sprintf@f 00E4  
                          tolower@c 0010                            sprintf@s 00C8  
                   ?_buggyLEDs_init 0001              __size_of___fpclassifyf 00FE  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                          strncmp@l 0011                            strncmp@n 000E  
                          strncmp@r 0013              ??_colourclickLEDs_init 000B  
              _colourclick_readRGBC 59FE                       ___fladd@signs 003D  
                       _USART4_init 61F8                          _TX4STAbits 000EE8  
                       ??_turnright 0048                        ___aodiv@sign 001B  
                   _sendCharSerial4 6286              ??i2_I2C_2_Master_Start 0002  
                     _overtime_flag 01E5                        ___fladd@aexp 003E  
            ??i2_I2C_2_Master_Write 0002                        ___fladd@bexp 003F  
                      ___aomod@sign 001B                 _colourclick_testing 52AE  
      colourcards_normaliseRGBC@abs 0031  
