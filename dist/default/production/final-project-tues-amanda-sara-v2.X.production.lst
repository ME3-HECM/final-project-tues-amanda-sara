

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 14:13:28 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 05/05/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F67K40 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     _INT1PPS	set	3569
    96  0000                     _PIE4bits	set	3629
    97  0000                     _TX4REG	set	3812
    98  0000                     _RC4REG	set	3811
    99  0000                     _PIR4bits	set	3639
   100  0000                     _RC4STAbits	set	3815
   101  0000                     _SP4BRGH	set	3814
   102  0000                     _SP4BRGL	set	3813
   103  0000                     _TX4STAbits	set	3816
   104  0000                     _BAUD4CONbits	set	3817
   105  0000                     _RX4PPS	set	3605
   106  0000                     _RC0PPS	set	3682
   107  0000                     _PIR0bits	set	3635
   108  0000                     _IPR0bits	set	3615
   109  0000                     _PIE0bits	set	3625
   110  0000                     _ANSELBbits	set	3738
   111  0000                     _ANSELFbits	set	3764
   112  0000                     _RC7PPS	set	3689
   113  0000                     _RE2PPS	set	3700
   114  0000                     _SSP2BUF	set	3797
   115  0000                     _SSP2CON2bits	set	3802
   116  0000                     _SSP2CON2	set	3802
   117  0000                     _SSP2STAT	set	3800
   118  0000                     _RD6PPS	set	3696
   119  0000                     _RD5PPS	set	3695
   120  0000                     _SSP2CLKPPS	set	3612
   121  0000                     _SSP2DATPPS	set	3613
   122  0000                     _ANSELDbits	set	3751
   123  0000                     _SSP2ADD	set	3798
   124  0000                     _SSP2CON1bits	set	3801
   125  0000                     _ADPCH	set	3935
   126  0000                     _ADREFbits	set	3928
   127  0000                     _LATAbits	set	3961
   128  0000                     _TRISAbits	set	3969
   129  0000                     _ADRESH	set	3940
   130  0000                     _ADCON0bits	set	3936
   131  0000                     _INTCONbits	set	4082
   132  0000                     _TRISBbits	set	3970
   133  0000                     _LATFbits	set	3966
   134  0000                     _TRISHbits	set	3976
   135  0000                     _TRISFbits	set	3974
   136  0000                     _PWM7CONbits	set	4001
   137  0000                     _PWM6CONbits	set	4004
   138  0000                     _LATGbits	set	3967
   139  0000                     _LATCbits	set	3963
   140  0000                     _LATEbits	set	3965
   141  0000                     _TRISGbits	set	3975
   142  0000                     _TRISCbits	set	3971
   143  0000                     _TRISEbits	set	3973
   144  0000                     _T2PR	set	4028
   145  0000                     _T2CLKCONbits	set	4031
   146  0000                     _T2HLTbits	set	4030
   147  0000                     _T2CONbits	set	4029
   148  0000                     _LATHbits	set	3968
   149  0000                     _LATDbits	set	3964
   150  0000                     _TRISDbits	set	3972
   151  0000                     _LATG	set	3967
   152  0000                     _PWM7DCH	set	4000
   153  0000                     _LATE	set	3965
   154  0000                     _PWM6DCH	set	4003
   155                           
   156                           ; #config settings
   157                           
   158                           	psect	cinit
   159  00198E                     __pcinit:
   160                           	callstack 0
   161  00198E                     start_initialization:
   162                           	callstack 0
   163  00198E                     __initialization:
   164                           	callstack 0
   165                           
   166                           ; Clear objects allocated to BANK0 (62 bytes)
   167  00198E  EE00  F060         	lfsr	0,__pbssBANK0
   168  001992  0E3E               	movlw	62
   169  001994                     clear_0:
   170  001994  6AEE               	clrf	postinc0,c
   171  001996  06E8               	decf	wreg,f,c
   172  001998  E1FD               	bnz	clear_0
   173                           
   174                           ; Clear objects allocated to COMRAM (29 bytes)
   175  00199A  EE00  F03B         	lfsr	0,__pbssCOMRAM
   176  00199E  0E1D               	movlw	29
   177  0019A0                     clear_1:
   178  0019A0  6AEE               	clrf	postinc0,c
   179  0019A2  06E8               	decf	wreg,f,c
   180  0019A4  E1FD               	bnz	clear_1
   181  0019A6                     end_of_initialization:
   182                           	callstack 0
   183  0019A6                     __end_of__initialization:
   184                           	callstack 0
   185  0019A6  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   186  0019A8  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   187  0019AA  0100               	movlb	0
   188  0019AC  EF46  F004         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	bssCOMRAM
   191  00003B                     __pbssCOMRAM:
   192                           	callstack 0
   193  00003B                     _EUSART4RXbuf:
   194                           	callstack 0
   195  00003B                     	ds	20
   196  00004F                     _clear_upper:
   197                           	callstack 0
   198  00004F                     	ds	2
   199  000051                     _clear_lower:
   200                           	callstack 0
   201  000051                     	ds	2
   202  000053                     _TxBufReadCnt:
   203                           	callstack 0
   204  000053                     	ds	1
   205  000054                     _TxBufWriteCnt:
   206                           	callstack 0
   207  000054                     	ds	1
   208  000055                     _RxBufReadCnt:
   209                           	callstack 0
   210  000055                     	ds	1
   211  000056                     _RxBufWriteCnt:
   212                           	callstack 0
   213  000056                     	ds	1
   214  000057                     _returnhome_flag:
   215                           	callstack 0
   216  000057                     	ds	1
   217                           
   218                           	psect	bssBANK0
   219  000060                     __pbssBANK0:
   220                           	callstack 0
   221  000060                     _EUSART4TXbuf:
   222                           	callstack 0
   223  000060                     	ds	60
   224  00009C                     _battery_flag:
   225                           	callstack 0
   226  00009C                     	ds	1
   227  00009D                     _card_flag:
   228                           	callstack 0
   229  00009D                     	ds	1
   230                           
   231                           	psect	cstackBANK0
   232  00009E                     __pcstackBANK0:
   233                           	callstack 0
   234  00009E                     read_card@R_rel:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x0
   238  00009E                     	ds	2
   239  0000A0                     read_card@G_rel:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x2
   243  0000A0                     	ds	2
   244  0000A2                     read_card@B_rel:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x4
   248  0000A2                     	ds	2
   249  0000A4                     main@battery:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x6
   253  0000A4                     	ds	1
   254  0000A5                     main@initial:
   255                           	callstack 0
   256                           
   257                           ; 8 bytes @ 0x7
   258  0000A5                     	ds	8
   259  0000AD                     main@current:
   260                           	callstack 0
   261                           
   262                           ; 8 bytes @ 0xF
   263  0000AD                     	ds	8
   264  0000B5                     main@motorL:
   265                           	callstack 0
   266                           
   267                           ; 9 bytes @ 0x17
   268  0000B5                     	ds	9
   269  0000BE                     main@motorR:
   270                           	callstack 0
   271                           
   272                           ; 9 bytes @ 0x20
   273  0000BE                     	ds	9
   274                           
   275                           	psect	cstackCOMRAM
   276  000001                     __pcstackCOMRAM:
   277                           	callstack 0
   278  000001                     ??i2_I2C_2_Master_Idle:
   279  000001                     
   280                           ; 1 bytes @ 0x0
   281  000001                     	ds	1
   282  000002                     i2I2C_2_Master_Write@data_byte:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x1
   286  000002                     	ds	1
   287  000003                     ??_HighISR:
   288  000003                     
   289                           ; 1 bytes @ 0x2
   290  000003                     	ds	1
   291  000004                     ??_LowISR:
   292                           
   293                           ; 1 bytes @ 0x3
   294  000004                     	ds	1
   295  000005                     ??_I2C_2_Master_Idle:
   296  000005                     ?___wmul:
   297                           	callstack 0
   298  000005                     ?___lwdiv:
   299                           	callstack 0
   300  000005                     ?___xxtofl:
   301                           	callstack 0
   302  000005                     DCmotors_init@PWMperiod:
   303                           	callstack 0
   304  000005                     ADC_getval@tmpval:
   305                           	callstack 0
   306  000005                     colorclick_toggleClearLED@toggle:
   307                           	callstack 0
   308  000005                     ___wmul@multiplier:
   309                           	callstack 0
   310  000005                     ___lwdiv@dividend:
   311                           	callstack 0
   312  000005                     ___xxtofl@val:
   313                           	callstack 0
   314                           
   315                           ; 4 bytes @ 0x4
   316  000005                     	ds	1
   317  000006                     ??_I2C_2_Master_Read:
   318  000006                     I2C_2_Master_Write@data_byte:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x5
   322  000006                     	ds	1
   323  000007                     I2C_2_Master_Read@ack:
   324                           	callstack 0
   325  000007                     colorclick_writetoaddr@value:
   326                           	callstack 0
   327  000007                     ___wmul@multiplicand:
   328                           	callstack 0
   329  000007                     ___lwdiv@divisor:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x6
   333  000007                     	ds	1
   334  000008                     I2C_2_Master_Read@tmp:
   335                           	callstack 0
   336  000008                     colorclick_writetoaddr@address:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x7
   340  000008                     	ds	1
   341  000009                     ??_colorclick_init:
   342  000009                     ??_interrupts_init:
   343  000009                     ??___xxtofl:
   344  000009                     ?_colorclick_readRed:
   345                           	callstack 0
   346  000009                     ?_colorclick_readGreen:
   347                           	callstack 0
   348  000009                     ?_colorclick_readBlue:
   349                           	callstack 0
   350  000009                     ?_colorclick_readClear:
   351                           	callstack 0
   352  000009                     ___lwdiv@counter:
   353                           	callstack 0
   354  000009                     ___wmul@product:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x8
   358  000009                     	ds	1
   359  00000A                     ___lwdiv@quotient:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x9
   363  00000A                     	ds	1
   364  00000B                     ??_colorclick_readRed:
   365  00000B                     ??_colorclick_readGreen:
   366  00000B                     ??_colorclick_readBlue:
   367  00000B                     ??_colorclick_readClear:
   368  00000B                     ?___awdiv:
   369                           	callstack 0
   370  00000B                     ___awdiv@dividend:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xA
   374  00000B                     	ds	2
   375  00000D                     ___xxtofl@sign:
   376                           	callstack 0
   377  00000D                     ___awdiv@divisor:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xC
   381  00000D                     	ds	1
   382  00000E                     ___xxtofl@exp:
   383                           	callstack 0
   384  00000E                     colorclick_readRed@tmp:
   385                           	callstack 0
   386  00000E                     colorclick_readGreen@tmp:
   387                           	callstack 0
   388  00000E                     colorclick_readBlue@tmp:
   389                           	callstack 0
   390  00000E                     colorclick_readClear@tmp:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0xD
   394  00000E                     	ds	1
   395  00000F                     ___awdiv@counter:
   396                           	callstack 0
   397  00000F                     ___xxtofl@arg:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0xE
   401  00000F                     	ds	1
   402  000010                     ?_colorclick_readColour:
   403                           	callstack 0
   404  000010                     ___awdiv@sign:
   405                           	callstack 0
   406  000010                     colorclick_readColour@current:
   407                           	callstack 0
   408                           
   409                           ; 8 bytes @ 0xF
   410  000010                     	ds	1
   411  000011                     ___awdiv@quotient:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x10
   415  000011                     	ds	2
   416  000013                     setMotorPWM@m:
   417                           	callstack 0
   418  000013                     ___flge@ff1:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0x12
   422  000013                     	ds	2
   423  000015                     ??_setMotorPWM:
   424                           
   425                           ; 1 bytes @ 0x14
   426  000015                     	ds	2
   427  000017                     ___flge@ff2:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x16
   431  000017                     	ds	1
   432  000018                     
   433                           ; 1 bytes @ 0x17
   434  000018                     	ds	3
   435  00001B                     ??___flge:
   436                           
   437                           ; 1 bytes @ 0x1A
   438  00001B                     	ds	1
   439  00001C                     setMotorPWM@PWMduty:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x1B
   443  00001C                     	ds	2
   444  00001E                     forward@mL:
   445                           	callstack 0
   446  00001E                     reverse@mL:
   447                           	callstack 0
   448  00001E                     stop@mL:
   449                           	callstack 0
   450  00001E                     turnLeft@mL:
   451                           	callstack 0
   452  00001E                     turnRight@mL:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x1D
   456  00001E                     	ds	2
   457  000020                     forward@mR:
   458                           	callstack 0
   459  000020                     reverse@mR:
   460                           	callstack 0
   461  000020                     stop@mR:
   462                           	callstack 0
   463  000020                     turnLeft@mR:
   464                           	callstack 0
   465  000020                     turnRight@mR:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x1F
   469  000020                     	ds	2
   470  000022                     ??_forward:
   471  000022                     ??_reverse:
   472  000022                     ??_stop:
   473  000022                     turnLeft@deg:
   474                           	callstack 0
   475  000022                     turnRight@deg:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x21
   479  000022                     	ds	1
   480  000023                     ??_turnLeft:
   481  000023                     ??_turnRight:
   482                           
   483                           ; 1 bytes @ 0x22
   484  000023                     	ds	2
   485  000025                     read_card@initial:
   486                           	callstack 0
   487                           
   488                           ; 8 bytes @ 0x24
   489  000025                     	ds	8
   490  00002D                     read_card@current:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0x2C
   494  00002D                     	ds	8
   495  000035                     read_card@mL:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x34
   499  000035                     	ds	2
   500  000037                     read_card@mR:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x36
   504  000037                     	ds	2
   505  000039                     ??_main:
   506                           
   507                           ; 1 bytes @ 0x38
   508  000039                     	ds	2
   509                           
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 7 in file "main.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  motorR          9   32[BANK0 ] struct .
   520 ;;  motorL          9   23[BANK0 ] struct .
   521 ;;  current         8   15[BANK0 ] struct .
   522 ;;  initial         8    7[BANK0 ] struct .
   523 ;;  PWMperiod       1    0        unsigned char 
   524 ;;  battery         1    6[BANK0 ] unsigned char 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   535 ;;      Locals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   537 ;;      Totals:         2      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   538 ;;Total ram usage:       37 bytes
   539 ;; Hardware stack levels required when called: 9
   540 ;; This function calls:
   541 ;;		_ADC_getval
   542 ;;		_ADC_init
   543 ;;		_DCmotors_init
   544 ;;		_USART4_init
   545 ;;		_colorclick_init
   546 ;;		_colorclick_readColour
   547 ;;		_forward
   548 ;;		_interrupts_init
   549 ;;		_read_card
   550 ;; This function is called by:
   551 ;;		Startup code after reset
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text0
   556  00088C                     __ptext0:
   557                           	callstack 0
   558  00088C                     _main:
   559                           	callstack 22
   560  00088C                     
   561                           ;main.c: 12:     card_flag = 0;
   562  00088C  0E00               	movlw	0
   563  00088E  0100               	movlb	0	; () banked
   564  000890  6F9D               	movwf	_card_flag& (0+255),b	;volatile
   565                           
   566                           ;main.c: 13:     battery_flag = 0;
   567  000892  0E00               	movlw	0
   568  000894  6F9C               	movwf	_battery_flag& (0+255),b	;volatile
   569                           
   570                           ;main.c: 14:     returnhome_flag = 0;
   571  000896  0E00               	movlw	0
   572  000898  6E57               	movwf	_returnhome_flag^0,c	;volatile
   573  00089A                     
   574                           ; BSR set to: 0
   575                           ;main.c: 15:     ADC_init();
   576  00089A  EC09  F00D         	call	_ADC_init	;wreg free
   577  00089E                     
   578                           ;main.c: 16:     colorclick_init();
   579  00089E  EC57  F00C         	call	_colorclick_init	;wreg free
   580  0008A2                     
   581                           ;main.c: 17:     interrupts_init();
   582  0008A2  ECF4  F00A         	call	_interrupts_init	;wreg free
   583  0008A6                     
   584                           ;main.c: 18:     DCmotors_init(PWMperiod);
   585  0008A6  0E63               	movlw	99
   586  0008A8  ECCA  F00B         	call	_DCmotors_init
   587  0008AC                     
   588                           ;main.c: 19:     USART4_init();
   589  0008AC  ECF9  F00C         	call	_USART4_init	;wreg free
   590  0008B0                     
   591                           ;main.c: 24:     DC_motor motorL;;main.c: 25:     motorL.power=0;
   592  0008B0  0E00               	movlw	0
   593  0008B2  0100               	movlb	0	; () banked
   594  0008B4  6FB5               	movwf	main@motorL& (0+255),b
   595  0008B6                     
   596                           ; BSR set to: 0
   597                           ;main.c: 26:     motorL.direction=1;
   598  0008B6  0E01               	movlw	1
   599  0008B8  6FB6               	movwf	(main@motorL+1)& (0+255),b
   600  0008BA                     
   601                           ; BSR set to: 0
   602                           ;main.c: 27:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   603  0008BA  0EA3               	movlw	163
   604  0008BC  6FB7               	movwf	(main@motorL+2)& (0+255),b
   605  0008BE  0E0F               	movlw	15
   606  0008C0  6FB8               	movwf	(main@motorL+3)& (0+255),b
   607  0008C2                     
   608                           ; BSR set to: 0
   609                           ;main.c: 28:     motorL.dir_LAT=(unsigned char *)(&LATE);
   610  0008C2  0E7D               	movlw	125
   611  0008C4  6FB9               	movwf	(main@motorL+4)& (0+255),b
   612  0008C6  0E0F               	movlw	15
   613  0008C8  6FBA               	movwf	(main@motorL+5)& (0+255),b
   614  0008CA                     
   615                           ; BSR set to: 0
   616                           ;main.c: 29:     motorL.dir_pin=4;
   617  0008CA  0E04               	movlw	4
   618  0008CC  6FBB               	movwf	(main@motorL+6)& (0+255),b
   619  0008CE                     
   620                           ; BSR set to: 0
   621                           ;main.c: 30:     motorL.PWMperiod=PWMperiod;
   622  0008CE  0E00               	movlw	0
   623  0008D0  6FBD               	movwf	(main@motorL+8)& (0+255),b
   624  0008D2  0E63               	movlw	99
   625  0008D4  6FBC               	movwf	(main@motorL+7)& (0+255),b
   626  0008D6                     
   627                           ; BSR set to: 0
   628                           ;main.c: 33:     DC_motor motorR;;main.c: 34:     motorR.power=0;
   629  0008D6  0E00               	movlw	0
   630  0008D8  6FBE               	movwf	main@motorR& (0+255),b
   631  0008DA                     
   632                           ; BSR set to: 0
   633                           ;main.c: 35:     motorR.direction=1;
   634  0008DA  0E01               	movlw	1
   635  0008DC  6FBF               	movwf	(main@motorR+1)& (0+255),b
   636  0008DE                     
   637                           ; BSR set to: 0
   638                           ;main.c: 36:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   639  0008DE  0EA0               	movlw	160
   640  0008E0  6FC0               	movwf	(main@motorR+2)& (0+255),b
   641  0008E2  0E0F               	movlw	15
   642  0008E4  6FC1               	movwf	(main@motorR+3)& (0+255),b
   643  0008E6                     
   644                           ; BSR set to: 0
   645                           ;main.c: 37:     motorR.dir_LAT=(unsigned char *)(&LATG);
   646  0008E6  0E7F               	movlw	127
   647  0008E8  6FC2               	movwf	(main@motorR+4)& (0+255),b
   648  0008EA  0E0F               	movlw	15
   649  0008EC  6FC3               	movwf	(main@motorR+5)& (0+255),b
   650  0008EE                     
   651                           ; BSR set to: 0
   652                           ;main.c: 38:     motorR.dir_pin=6;
   653  0008EE  0E06               	movlw	6
   654  0008F0  6FC4               	movwf	(main@motorR+6)& (0+255),b
   655  0008F2                     
   656                           ; BSR set to: 0
   657                           ;main.c: 39:     motorR.PWMperiod=PWMperiod;
   658  0008F2  0E00               	movlw	0
   659  0008F4  6FC6               	movwf	(main@motorR+8)& (0+255),b
   660  0008F6  0E63               	movlw	99
   661  0008F8  6FC5               	movwf	(main@motorR+7)& (0+255),b
   662  0008FA                     
   663                           ; BSR set to: 0
   664                           ;main.c: 48:     RGB_val initial;;main.c: 49:     initial = colorclick_readColour(initia
      +                          l);
   665  0008FA  EE20  F0A5         	lfsr	2,main@initial
   666  0008FE  EE00  F010         	lfsr	0,colorclick_readColour@current
   667  000902  0E07               	movlw	7
   668  000904                     u3211:
   669  000904  CFDB FFEB          	movff	plusw2,plusw0
   670  000908  06E8               	decf	wreg,f,c
   671  00090A  E2FC               	bc	u3211
   672  00090C  ECF2  F00B         	call	_colorclick_readColour	;wreg free
   673  000910  EE20  F0A5         	lfsr	2,main@initial
   674  000914  0E07               	movlw	7
   675  000916                     u3221:
   676  000916  CFEB FFDB          	movff	plusw0,plusw2
   677  00091A  06E8               	decf	wreg,f,c
   678  00091C  E2FC               	bc	u3221
   679  00091E                     
   680                           ;main.c: 50:     _delay((unsigned long)((100)*(64000000/4000.0)));
   681  00091E  0E09               	movlw	9
   682  000920  6E3A               	movwf	(??_main+1)^0,c
   683  000922  0E1E               	movlw	30
   684  000924  6E39               	movwf	??_main^0,c
   685  000926  0EE4               	movlw	228
   686  000928                     u3357:
   687  000928  2EE8               	decfsz	wreg,f,c
   688  00092A  D7FE               	bra	u3357
   689  00092C  2E39               	decfsz	??_main^0,f,c
   690  00092E  D7FC               	bra	u3357
   691  000930  2E3A               	decfsz	(??_main+1)^0,f,c
   692  000932  D7FA               	bra	u3357
   693  000934  D000               	nop2	
   694  000936                     
   695                           ;main.c: 99:     unsigned char battery = ADC_getval();
   696  000936  EC16  F00D         	call	_ADC_getval	;wreg free
   697  00093A  0100               	movlb	0	; () banked
   698  00093C  6FA4               	movwf	main@battery& (0+255),b
   699  00093E                     
   700                           ; BSR set to: 0
   701                           ;main.c: 100:     if (battery<100) {
   702  00093E  0E64               	movlw	100
   703  000940  61A4               	cpfslt	main@battery& (0+255),b
   704  000942  EFA5  F004         	goto	u3231
   705  000946  EFA7  F004         	goto	u3230
   706  00094A                     u3231:
   707  00094A  EFAB  F004         	goto	l3029
   708  00094E                     u3230:
   709  00094E                     
   710                           ; BSR set to: 0
   711                           ;main.c: 101:         LATDbits.LATD7 = 1;
   712  00094E  8E7C               	bsf	124,7,c	;volatile
   713                           
   714                           ;main.c: 102:         LATHbits.LATH3 = 1;
   715  000950  8680               	bsf	128,3,c	;volatile
   716                           
   717                           ;main.c: 103:     } else if (battery<200) {
   718  000952  EFB9  F004         	goto	l3033
   719  000956                     l3029:
   720                           
   721                           ; BSR set to: 0
   722  000956  0EC8               	movlw	200
   723  000958  61A4               	cpfslt	main@battery& (0+255),b
   724  00095A  EFB1  F004         	goto	u3241
   725  00095E  EFB3  F004         	goto	u3240
   726  000962                     u3241:
   727  000962  EFB7  F004         	goto	l111
   728  000966                     u3240:
   729  000966                     
   730                           ; BSR set to: 0
   731                           ;main.c: 104:         LATDbits.LATD7 = 1;
   732  000966  8E7C               	bsf	124,7,c	;volatile
   733                           
   734                           ;main.c: 105:         LATHbits.LATH3 = 0;
   735  000968  9680               	bcf	128,3,c	;volatile
   736                           
   737                           ;main.c: 106:     } else {
   738  00096A  EFB9  F004         	goto	l3033
   739  00096E                     l111:
   740                           
   741                           ; BSR set to: 0
   742                           ;main.c: 107:         LATDbits.LATD7 = 0;
   743  00096E  9E7C               	bcf	124,7,c	;volatile
   744                           
   745                           ;main.c: 108:         LATHbits.LATH3 = 0;
   746  000970  9680               	bcf	128,3,c	;volatile
   747  000972                     l3033:
   748                           
   749                           ; BSR set to: 0
   750                           ;main.c: 110:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   751  000972  0E52               	movlw	82
   752  000974  6E3A               	movwf	(??_main+1)^0,c
   753  000976  0E2B               	movlw	43
   754  000978  6E39               	movwf	??_main^0,c
   755  00097A  0E00               	movlw	0
   756  00097C                     u3367:
   757  00097C  2EE8               	decfsz	wreg,f,c
   758  00097E  D7FE               	bra	u3367
   759  000980  2E39               	decfsz	??_main^0,f,c
   760  000982  D7FC               	bra	u3367
   761  000984  2E3A               	decfsz	(??_main+1)^0,f,c
   762  000986  D7FA               	bra	u3367
   763  000988  D000               	nop2	
   764  00098A                     
   765                           ;main.c: 111:     forward(&motorL, &motorR);
   766  00098A  0EB5               	movlw	low main@motorL
   767  00098C  6E1E               	movwf	forward@mL^0,c
   768  00098E  0E00               	movlw	high main@motorL
   769  000990  6E1F               	movwf	(forward@mL+1)^0,c
   770  000992  0EBE               	movlw	low main@motorR
   771  000994  6E20               	movwf	forward@mR^0,c
   772  000996  0E00               	movlw	high main@motorR
   773  000998  6E21               	movwf	(forward@mR+1)^0,c
   774  00099A  EC22  F00A         	call	_forward	;wreg free
   775  00099E                     l3037:
   776                           
   777                           ;main.c: 134:         current = colorclick_readColour(current);
   778  00099E  EE20  F0AD         	lfsr	2,main@current
   779  0009A2  EE00  F010         	lfsr	0,colorclick_readColour@current
   780  0009A6  0E07               	movlw	7
   781  0009A8                     u3251:
   782  0009A8  CFDB FFEB          	movff	plusw2,plusw0
   783  0009AC  06E8               	decf	wreg,f,c
   784  0009AE  E2FC               	bc	u3251
   785  0009B0  ECF2  F00B         	call	_colorclick_readColour	;wreg free
   786  0009B4  EE20  F0AD         	lfsr	2,main@current
   787  0009B8  0E07               	movlw	7
   788  0009BA                     u3261:
   789  0009BA  CFEB FFDB          	movff	plusw0,plusw2
   790  0009BE  06E8               	decf	wreg,f,c
   791  0009C0  E2FC               	bc	u3261
   792  0009C2                     
   793                           ;main.c: 135:         read_card(initial, current, &motorL, &motorR);
   794  0009C2  EE20  F0A5         	lfsr	2,main@initial
   795  0009C6  EE00  F025         	lfsr	0,read_card@initial
   796  0009CA  0E07               	movlw	7
   797  0009CC                     u3271:
   798  0009CC  CFDB FFEB          	movff	plusw2,plusw0
   799  0009D0  06E8               	decf	wreg,f,c
   800  0009D2  E2FC               	bc	u3271
   801  0009D4  EE20  F0AD         	lfsr	2,main@current
   802  0009D8  EE00  F02D         	lfsr	0,read_card@current
   803  0009DC  0E07               	movlw	7
   804  0009DE                     u3281:
   805  0009DE  CFDB FFEB          	movff	plusw2,plusw0
   806  0009E2  06E8               	decf	wreg,f,c
   807  0009E4  E2FC               	bc	u3281
   808  0009E6  0EB5               	movlw	low main@motorL
   809  0009E8  6E35               	movwf	read_card@mL^0,c
   810  0009EA  0E00               	movlw	high main@motorL
   811  0009EC  6E36               	movwf	(read_card@mL+1)^0,c
   812  0009EE  0EBE               	movlw	low main@motorR
   813  0009F0  6E37               	movwf	read_card@mR^0,c
   814  0009F2  0E00               	movlw	high main@motorR
   815  0009F4  6E38               	movwf	(read_card@mR+1)^0,c
   816  0009F6  EC15  F000         	call	_read_card	;wreg free
   817  0009FA                     
   818                           ;main.c: 137:         if (card_flag==1) {
   819  0009FA  0100               	movlb	0	; () banked
   820  0009FC  059D               	decf	_card_flag& (0+255),w,b	;volatile
   821  0009FE  A4D8               	btfss	status,2,c
   822  000A00  EF04  F005         	goto	u3291
   823  000A04  EF06  F005         	goto	u3290
   824  000A08                     u3291:
   825  000A08  EF37  F005         	goto	l3049
   826  000A0C                     u3290:
   827  000A0C                     
   828                           ; BSR set to: 0
   829                           ;main.c: 138:             current = colorclick_readColour(current);
   830  000A0C  EE20  F0AD         	lfsr	2,main@current
   831  000A10  EE00  F010         	lfsr	0,colorclick_readColour@current
   832  000A14  0E07               	movlw	7
   833  000A16                     u3301:
   834  000A16  CFDB FFEB          	movff	plusw2,plusw0
   835  000A1A  06E8               	decf	wreg,f,c
   836  000A1C  E2FC               	bc	u3301
   837  000A1E  ECF2  F00B         	call	_colorclick_readColour	;wreg free
   838  000A22  EE20  F0AD         	lfsr	2,main@current
   839  000A26  0E07               	movlw	7
   840  000A28                     u3311:
   841  000A28  CFEB FFDB          	movff	plusw0,plusw2
   842  000A2C  06E8               	decf	wreg,f,c
   843  000A2E  E2FC               	bc	u3311
   844  000A30                     
   845                           ;main.c: 139:             read_card(initial, current, &motorL, &motorR);
   846  000A30  EE20  F0A5         	lfsr	2,main@initial
   847  000A34  EE00  F025         	lfsr	0,read_card@initial
   848  000A38  0E07               	movlw	7
   849  000A3A                     u3321:
   850  000A3A  CFDB FFEB          	movff	plusw2,plusw0
   851  000A3E  06E8               	decf	wreg,f,c
   852  000A40  E2FC               	bc	u3321
   853  000A42  EE20  F0AD         	lfsr	2,main@current
   854  000A46  EE00  F02D         	lfsr	0,read_card@current
   855  000A4A  0E07               	movlw	7
   856  000A4C                     u3331:
   857  000A4C  CFDB FFEB          	movff	plusw2,plusw0
   858  000A50  06E8               	decf	wreg,f,c
   859  000A52  E2FC               	bc	u3331
   860  000A54  0EB5               	movlw	low main@motorL
   861  000A56  6E35               	movwf	read_card@mL^0,c
   862  000A58  0E00               	movlw	high main@motorL
   863  000A5A  6E36               	movwf	(read_card@mL+1)^0,c
   864  000A5C  0EBE               	movlw	low main@motorR
   865  000A5E  6E37               	movwf	read_card@mR^0,c
   866  000A60  0E00               	movlw	high main@motorR
   867  000A62  6E38               	movwf	(read_card@mR+1)^0,c
   868  000A64  EC15  F000         	call	_read_card	;wreg free
   869  000A68                     
   870                           ;main.c: 140:             card_flag = 0;
   871  000A68  0E00               	movlw	0
   872  000A6A  0100               	movlb	0	; () banked
   873  000A6C  6F9D               	movwf	_card_flag& (0+255),b	;volatile
   874  000A6E                     l3049:
   875                           
   876                           ; BSR set to: 0
   877                           ;main.c: 143:         if (battery_flag==1) {
   878  000A6E  059C               	decf	_battery_flag& (0+255),w,b	;volatile
   879  000A70  A4D8               	btfss	status,2,c
   880  000A72  EF3D  F005         	goto	u3341
   881  000A76  EF3F  F005         	goto	u3340
   882  000A7A                     u3341:
   883  000A7A  EFCF  F004         	goto	l3037
   884  000A7E                     u3340:
   885  000A7E                     
   886                           ; BSR set to: 0
   887                           ;main.c: 144:             LATDbits.LATD7 = 1;
   888  000A7E  8E7C               	bsf	124,7,c	;volatile
   889                           
   890                           ;main.c: 145:             LATHbits.LATH3 = 1;
   891  000A80  8680               	bsf	128,3,c	;volatile
   892  000A82                     
   893                           ; BSR set to: 0
   894                           ;main.c: 146:             battery_flag = 0;
   895  000A82  0E00               	movlw	0
   896  000A84  6F9C               	movwf	_battery_flag& (0+255),b	;volatile
   897  000A86  EFCF  F004         	goto	l3037
   898  000A8A  EF13  F000         	goto	start
   899  000A8E                     __end_of_main:
   900                           	callstack 0
   901                           
   902 ;; *************** function _read_card *****************
   903 ;; Defined at:
   904 ;;		line 6 in file "color_card.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  initial         8   36[COMRAM] struct .
   907 ;;  current         8   44[COMRAM] struct .
   908 ;;  mL              2   52[COMRAM] PTR struct .
   909 ;;		 -> main@motorL(9), 
   910 ;;  mR              2   54[COMRAM] PTR struct .
   911 ;;		 -> main@motorR(9), 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  B_rel           2    4[BANK0 ] unsigned int 
   914 ;;  G_rel           2    2[BANK0 ] unsigned int 
   915 ;;  R_rel           2    0[BANK0 ] unsigned int 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   925 ;;      Params:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   926 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   928 ;;      Totals:        20       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   929 ;;Total ram usage:       26 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; Hardware stack levels required when called: 8
   932 ;; This function calls:
   933 ;;		___flge
   934 ;;		___lwdiv
   935 ;;		___xxtofl
   936 ;;		_reverse
   937 ;;		_stop
   938 ;;		_turnLeft
   939 ;;		_turnRight
   940 ;; This function is called by:
   941 ;;		_main
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text1
   946  00002A                     __ptext1:
   947                           	callstack 0
   948  00002A                     _read_card:
   949                           	callstack 22
   950  00002A                     
   951                           ;color_card.c: 8:     unsigned int R_rel = current.R/current.C;
   952  00002A  C02D  F005         	movff	read_card@current,___lwdiv@dividend
   953  00002E  C02E  F006         	movff	read_card@current+1,___lwdiv@dividend+1
   954  000032  C033  F007         	movff	read_card@current+6,___lwdiv@divisor
   955  000036  C034  F008         	movff	read_card@current+7,___lwdiv@divisor+1
   956  00003A  ECBA  F00A         	call	___lwdiv	;wreg free
   957  00003E  C005  F09E         	movff	?___lwdiv,read_card@R_rel
   958  000042  C006  F09F         	movff	?___lwdiv+1,read_card@R_rel+1
   959                           
   960                           ;color_card.c: 9:     unsigned int G_rel = current.G/current.C;
   961  000046  C02F  F005         	movff	read_card@current+2,___lwdiv@dividend
   962  00004A  C030  F006         	movff	read_card@current+3,___lwdiv@dividend+1
   963  00004E  C033  F007         	movff	read_card@current+6,___lwdiv@divisor
   964  000052  C034  F008         	movff	read_card@current+7,___lwdiv@divisor+1
   965  000056  ECBA  F00A         	call	___lwdiv	;wreg free
   966  00005A  C005  F0A0         	movff	?___lwdiv,read_card@G_rel
   967  00005E  C006  F0A1         	movff	?___lwdiv+1,read_card@G_rel+1
   968                           
   969                           ;color_card.c: 10:     unsigned int B_rel = current.B/current.C;
   970  000062  C031  F005         	movff	read_card@current+4,___lwdiv@dividend
   971  000066  C032  F006         	movff	read_card@current+5,___lwdiv@dividend+1
   972  00006A  C033  F007         	movff	read_card@current+6,___lwdiv@divisor
   973  00006E  C034  F008         	movff	read_card@current+7,___lwdiv@divisor+1
   974  000072  ECBA  F00A         	call	___lwdiv	;wreg free
   975  000076  C005  F0A2         	movff	?___lwdiv,read_card@B_rel
   976  00007A  C006  F0A3         	movff	?___lwdiv+1,read_card@B_rel+1
   977                           
   978                           ;color_card.c: 12:     if ((R_rel>0.54) && (G_rel<0.245) && (B_rel<0.18)) {
   979  00007E  0E71               	movlw	113
   980  000080  6E13               	movwf	___flge@ff1^0,c
   981  000082  0E3D               	movlw	61
   982  000084  6E14               	movwf	(___flge@ff1+1)^0,c
   983  000086  0E0A               	movlw	10
   984  000088  6E15               	movwf	(___flge@ff1+2)^0,c
   985  00008A  0E3F               	movlw	63
   986  00008C  6E16               	movwf	(___flge@ff1+3)^0,c
   987  00008E  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
   988  000092  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
   989  000096  6A07               	clrf	(___xxtofl@val+2)^0,c
   990  000098  6A08               	clrf	(___xxtofl@val+3)^0,c
   991  00009A  0E00               	movlw	0
   992  00009C  EC17  F008         	call	___xxtofl
   993  0000A0  C005  F017         	movff	?___xxtofl,___flge@ff2
   994  0000A4  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
   995  0000A8  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
   996  0000AC  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
   997  0000B0  ECF1  F008         	call	___flge	;wreg free
   998  0000B4  B0D8               	btfsc	status,0,c
   999  0000B6  EF5F  F000         	goto	u2971
  1000  0000BA  EF61  F000         	goto	u2970
  1001  0000BE                     u2971:
  1002  0000BE  EFBD  F000         	goto	l2921
  1003  0000C2                     u2970:
  1004  0000C2  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1005  0000C6  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1006  0000CA  6A07               	clrf	(___xxtofl@val+2)^0,c
  1007  0000CC  6A08               	clrf	(___xxtofl@val+3)^0,c
  1008  0000CE  0E00               	movlw	0
  1009  0000D0  EC17  F008         	call	___xxtofl
  1010  0000D4  C005  F013         	movff	?___xxtofl,___flge@ff1
  1011  0000D8  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1012  0000DC  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1013  0000E0  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1014  0000E4  0E48               	movlw	72
  1015  0000E6  6E17               	movwf	___flge@ff2^0,c
  1016  0000E8  0EE1               	movlw	225
  1017  0000EA  6E18               	movwf	(___flge@ff2+1)^0,c
  1018  0000EC  0E7A               	movlw	122
  1019  0000EE  6E19               	movwf	(___flge@ff2+2)^0,c
  1020  0000F0  0E3E               	movlw	62
  1021  0000F2  6E1A               	movwf	(___flge@ff2+3)^0,c
  1022  0000F4  ECF1  F008         	call	___flge	;wreg free
  1023  0000F8  B0D8               	btfsc	status,0,c
  1024  0000FA  EF81  F000         	goto	u2981
  1025  0000FE  EF83  F000         	goto	u2980
  1026  000102                     u2981:
  1027  000102  EFBD  F000         	goto	l2921
  1028  000106                     u2980:
  1029  000106  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1030  00010A  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1031  00010E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1032  000110  6A08               	clrf	(___xxtofl@val+3)^0,c
  1033  000112  0E00               	movlw	0
  1034  000114  EC17  F008         	call	___xxtofl
  1035  000118  C005  F013         	movff	?___xxtofl,___flge@ff1
  1036  00011C  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1037  000120  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1038  000124  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1039  000128  0EEC               	movlw	236
  1040  00012A  6E17               	movwf	___flge@ff2^0,c
  1041  00012C  0E51               	movlw	81
  1042  00012E  6E18               	movwf	(___flge@ff2+1)^0,c
  1043  000130  0E38               	movlw	56
  1044  000132  6E19               	movwf	(___flge@ff2+2)^0,c
  1045  000134  0E3E               	movlw	62
  1046  000136  6E1A               	movwf	(___flge@ff2+3)^0,c
  1047  000138  ECF1  F008         	call	___flge	;wreg free
  1048  00013C  B0D8               	btfsc	status,0,c
  1049  00013E  EFA3  F000         	goto	u2991
  1050  000142  EFA5  F000         	goto	u2990
  1051  000146                     u2991:
  1052  000146  EFBD  F000         	goto	l2921
  1053  00014A                     u2990:
  1054  00014A                     
  1055                           ;color_card.c: 14:         turnRight(mL, mR, 90);
  1056  00014A  C035  F01E         	movff	read_card@mL,turnRight@mL
  1057  00014E  C036  F01F         	movff	read_card@mL+1,turnRight@mL+1
  1058  000152  C037  F020         	movff	read_card@mR,turnRight@mR
  1059  000156  C038  F021         	movff	read_card@mR+1,turnRight@mR+1
  1060  00015A  0E5A               	movlw	90
  1061  00015C  6E22               	movwf	turnRight@deg^0,c
  1062  00015E  EC47  F005         	call	_turnRight	;wreg free
  1063                           
  1064                           ;color_card.c: 15:         stop(mL, mR);
  1065  000162  C035  F01E         	movff	read_card@mL,stop@mL
  1066  000166  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1067  00016A  C037  F020         	movff	read_card@mR,stop@mR
  1068  00016E  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1069  000172  EC6F  F00A         	call	_stop	;wreg free
  1070                           
  1071                           ;color_card.c: 17:     } else if ((R_rel<0.435) && (G_rel>0.31) && (B_rel>0.195)) {
  1072  000176  EF45  F004         	goto	l499
  1073  00017A                     l2921:
  1074  00017A  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1075  00017E  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1076  000182  6A07               	clrf	(___xxtofl@val+2)^0,c
  1077  000184  6A08               	clrf	(___xxtofl@val+3)^0,c
  1078  000186  0E00               	movlw	0
  1079  000188  EC17  F008         	call	___xxtofl
  1080  00018C  C005  F013         	movff	?___xxtofl,___flge@ff1
  1081  000190  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1082  000194  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1083  000198  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1084  00019C  0E52               	movlw	82
  1085  00019E  6E17               	movwf	___flge@ff2^0,c
  1086  0001A0  0EB8               	movlw	184
  1087  0001A2  6E18               	movwf	(___flge@ff2+1)^0,c
  1088  0001A4  0EDE               	movlw	222
  1089  0001A6  6E19               	movwf	(___flge@ff2+2)^0,c
  1090  0001A8  0E3E               	movlw	62
  1091  0001AA  6E1A               	movwf	(___flge@ff2+3)^0,c
  1092  0001AC  ECF1  F008         	call	___flge	;wreg free
  1093  0001B0  B0D8               	btfsc	status,0,c
  1094  0001B2  EFDD  F000         	goto	u3001
  1095  0001B6  EFDF  F000         	goto	u3000
  1096  0001BA                     u3001:
  1097  0001BA  EF3B  F001         	goto	l2929
  1098  0001BE                     u3000:
  1099  0001BE  0E52               	movlw	82
  1100  0001C0  6E13               	movwf	___flge@ff1^0,c
  1101  0001C2  0EB8               	movlw	184
  1102  0001C4  6E14               	movwf	(___flge@ff1+1)^0,c
  1103  0001C6  0E9E               	movlw	158
  1104  0001C8  6E15               	movwf	(___flge@ff1+2)^0,c
  1105  0001CA  0E3E               	movlw	62
  1106  0001CC  6E16               	movwf	(___flge@ff1+3)^0,c
  1107  0001CE  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1108  0001D2  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1109  0001D6  6A07               	clrf	(___xxtofl@val+2)^0,c
  1110  0001D8  6A08               	clrf	(___xxtofl@val+3)^0,c
  1111  0001DA  0E00               	movlw	0
  1112  0001DC  EC17  F008         	call	___xxtofl
  1113  0001E0  C005  F017         	movff	?___xxtofl,___flge@ff2
  1114  0001E4  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1115  0001E8  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1116  0001EC  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1117  0001F0  ECF1  F008         	call	___flge	;wreg free
  1118  0001F4  B0D8               	btfsc	status,0,c
  1119  0001F6  EFFF  F000         	goto	u3011
  1120  0001FA  EF01  F001         	goto	u3010
  1121  0001FE                     u3011:
  1122  0001FE  EF3B  F001         	goto	l2929
  1123  000202                     u3010:
  1124  000202  0E14               	movlw	20
  1125  000204  6E13               	movwf	___flge@ff1^0,c
  1126  000206  0EAE               	movlw	174
  1127  000208  6E14               	movwf	(___flge@ff1+1)^0,c
  1128  00020A  0E47               	movlw	71
  1129  00020C  6E15               	movwf	(___flge@ff1+2)^0,c
  1130  00020E  0E3E               	movlw	62
  1131  000210  6E16               	movwf	(___flge@ff1+3)^0,c
  1132  000212  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1133  000216  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1134  00021A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1135  00021C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1136  00021E  0E00               	movlw	0
  1137  000220  EC17  F008         	call	___xxtofl
  1138  000224  C005  F017         	movff	?___xxtofl,___flge@ff2
  1139  000228  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1140  00022C  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1141  000230  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1142  000234  ECF1  F008         	call	___flge	;wreg free
  1143  000238  B0D8               	btfsc	status,0,c
  1144  00023A  EF21  F001         	goto	u3021
  1145  00023E  EF23  F001         	goto	u3020
  1146  000242                     u3021:
  1147  000242  EF3B  F001         	goto	l2929
  1148  000246                     u3020:
  1149  000246                     
  1150                           ;color_card.c: 19:         turnLeft(mL, mR, 90);
  1151  000246  C035  F01E         	movff	read_card@mL,turnLeft@mL
  1152  00024A  C036  F01F         	movff	read_card@mL+1,turnLeft@mL+1
  1153  00024E  C037  F020         	movff	read_card@mR,turnLeft@mR
  1154  000252  C038  F021         	movff	read_card@mR+1,turnLeft@mR+1
  1155  000256  0E5A               	movlw	90
  1156  000258  6E22               	movwf	turnLeft@deg^0,c
  1157  00025A  EC3A  F006         	call	_turnLeft	;wreg free
  1158                           
  1159                           ;color_card.c: 20:         stop(mL, mR);
  1160  00025E  C035  F01E         	movff	read_card@mL,stop@mL
  1161  000262  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1162  000266  C037  F020         	movff	read_card@mR,stop@mR
  1163  00026A  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1164  00026E  EC6F  F00A         	call	_stop	;wreg free
  1165                           
  1166                           ;color_card.c: 22:     } else if ((R_rel<0.43) && (G_rel>0.30) && (B_rel>0.21)) {
  1167  000272  EF45  F004         	goto	l499
  1168  000276                     l2929:
  1169  000276  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1170  00027A  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1171  00027E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1172  000280  6A08               	clrf	(___xxtofl@val+3)^0,c
  1173  000282  0E00               	movlw	0
  1174  000284  EC17  F008         	call	___xxtofl
  1175  000288  C005  F013         	movff	?___xxtofl,___flge@ff1
  1176  00028C  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1177  000290  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1178  000294  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1179  000298  0EF6               	movlw	246
  1180  00029A  6E17               	movwf	___flge@ff2^0,c
  1181  00029C  0E28               	movlw	40
  1182  00029E  6E18               	movwf	(___flge@ff2+1)^0,c
  1183  0002A0  0EDC               	movlw	220
  1184  0002A2  6E19               	movwf	(___flge@ff2+2)^0,c
  1185  0002A4  0E3E               	movlw	62
  1186  0002A6  6E1A               	movwf	(___flge@ff2+3)^0,c
  1187  0002A8  ECF1  F008         	call	___flge	;wreg free
  1188  0002AC  B0D8               	btfsc	status,0,c
  1189  0002AE  EF5B  F001         	goto	u3031
  1190  0002B2  EF5D  F001         	goto	u3030
  1191  0002B6                     u3031:
  1192  0002B6  EFB9  F001         	goto	l2937
  1193  0002BA                     u3030:
  1194  0002BA  0E9A               	movlw	154
  1195  0002BC  6E13               	movwf	___flge@ff1^0,c
  1196  0002BE  0E99               	movlw	153
  1197  0002C0  6E14               	movwf	(___flge@ff1+1)^0,c
  1198  0002C2  0E99               	movlw	153
  1199  0002C4  6E15               	movwf	(___flge@ff1+2)^0,c
  1200  0002C6  0E3E               	movlw	62
  1201  0002C8  6E16               	movwf	(___flge@ff1+3)^0,c
  1202  0002CA  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1203  0002CE  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1204  0002D2  6A07               	clrf	(___xxtofl@val+2)^0,c
  1205  0002D4  6A08               	clrf	(___xxtofl@val+3)^0,c
  1206  0002D6  0E00               	movlw	0
  1207  0002D8  EC17  F008         	call	___xxtofl
  1208  0002DC  C005  F017         	movff	?___xxtofl,___flge@ff2
  1209  0002E0  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1210  0002E4  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1211  0002E8  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1212  0002EC  ECF1  F008         	call	___flge	;wreg free
  1213  0002F0  B0D8               	btfsc	status,0,c
  1214  0002F2  EF7D  F001         	goto	u3041
  1215  0002F6  EF7F  F001         	goto	u3040
  1216  0002FA                     u3041:
  1217  0002FA  EFB9  F001         	goto	l2937
  1218  0002FE                     u3040:
  1219  0002FE  0E3D               	movlw	61
  1220  000300  6E13               	movwf	___flge@ff1^0,c
  1221  000302  0E0A               	movlw	10
  1222  000304  6E14               	movwf	(___flge@ff1+1)^0,c
  1223  000306  0E57               	movlw	87
  1224  000308  6E15               	movwf	(___flge@ff1+2)^0,c
  1225  00030A  0E3E               	movlw	62
  1226  00030C  6E16               	movwf	(___flge@ff1+3)^0,c
  1227  00030E  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1228  000312  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1229  000316  6A07               	clrf	(___xxtofl@val+2)^0,c
  1230  000318  6A08               	clrf	(___xxtofl@val+3)^0,c
  1231  00031A  0E00               	movlw	0
  1232  00031C  EC17  F008         	call	___xxtofl
  1233  000320  C005  F017         	movff	?___xxtofl,___flge@ff2
  1234  000324  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1235  000328  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1236  00032C  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1237  000330  ECF1  F008         	call	___flge	;wreg free
  1238  000334  B0D8               	btfsc	status,0,c
  1239  000336  EF9F  F001         	goto	u3051
  1240  00033A  EFA1  F001         	goto	u3050
  1241  00033E                     u3051:
  1242  00033E  EFB9  F001         	goto	l2937
  1243  000342                     u3050:
  1244  000342                     l2935:
  1245                           
  1246                           ;color_card.c: 24:         turnRight(mL, mR, 180);
  1247  000342  C035  F01E         	movff	read_card@mL,turnRight@mL
  1248  000346  C036  F01F         	movff	read_card@mL+1,turnRight@mL+1
  1249  00034A  C037  F020         	movff	read_card@mR,turnRight@mR
  1250  00034E  C038  F021         	movff	read_card@mR+1,turnRight@mR+1
  1251  000352  0EB4               	movlw	180
  1252  000354  6E22               	movwf	turnRight@deg^0,c
  1253  000356  EC47  F005         	call	_turnRight	;wreg free
  1254                           
  1255                           ;color_card.c: 25:         stop(mL, mR);
  1256  00035A  C035  F01E         	movff	read_card@mL,stop@mL
  1257  00035E  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1258  000362  C037  F020         	movff	read_card@mR,stop@mR
  1259  000366  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1260  00036A  EC6F  F00A         	call	_stop	;wreg free
  1261                           
  1262                           ;color_card.c: 27:     } else if ((R_rel>0.49) && (G_rel>0.285) && (B_rel>0.18)) {
  1263  00036E  EF45  F004         	goto	l499
  1264  000372                     l2937:
  1265  000372  0E48               	movlw	72
  1266  000374  6E13               	movwf	___flge@ff1^0,c
  1267  000376  0EE1               	movlw	225
  1268  000378  6E14               	movwf	(___flge@ff1+1)^0,c
  1269  00037A  0EFA               	movlw	250
  1270  00037C  6E15               	movwf	(___flge@ff1+2)^0,c
  1271  00037E  0E3E               	movlw	62
  1272  000380  6E16               	movwf	(___flge@ff1+3)^0,c
  1273  000382  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1274  000386  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1275  00038A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1276  00038C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1277  00038E  0E00               	movlw	0
  1278  000390  EC17  F008         	call	___xxtofl
  1279  000394  C005  F017         	movff	?___xxtofl,___flge@ff2
  1280  000398  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1281  00039C  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1282  0003A0  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1283  0003A4  ECF1  F008         	call	___flge	;wreg free
  1284  0003A8  B0D8               	btfsc	status,0,c
  1285  0003AA  EFD9  F001         	goto	u3061
  1286  0003AE  EFDB  F001         	goto	u3060
  1287  0003B2                     u3061:
  1288  0003B2  EF41  F002         	goto	l2945
  1289  0003B6                     u3060:
  1290  0003B6  0E85               	movlw	133
  1291  0003B8  6E13               	movwf	___flge@ff1^0,c
  1292  0003BA  0EEB               	movlw	235
  1293  0003BC  6E14               	movwf	(___flge@ff1+1)^0,c
  1294  0003BE  0E91               	movlw	145
  1295  0003C0  6E15               	movwf	(___flge@ff1+2)^0,c
  1296  0003C2  0E3E               	movlw	62
  1297  0003C4  6E16               	movwf	(___flge@ff1+3)^0,c
  1298  0003C6  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1299  0003CA  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1300  0003CE  6A07               	clrf	(___xxtofl@val+2)^0,c
  1301  0003D0  6A08               	clrf	(___xxtofl@val+3)^0,c
  1302  0003D2  0E00               	movlw	0
  1303  0003D4  EC17  F008         	call	___xxtofl
  1304  0003D8  C005  F017         	movff	?___xxtofl,___flge@ff2
  1305  0003DC  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1306  0003E0  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1307  0003E4  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1308  0003E8  ECF1  F008         	call	___flge	;wreg free
  1309  0003EC  B0D8               	btfsc	status,0,c
  1310  0003EE  EFFB  F001         	goto	u3071
  1311  0003F2  EFFD  F001         	goto	u3070
  1312  0003F6                     u3071:
  1313  0003F6  EF41  F002         	goto	l2945
  1314  0003FA                     u3070:
  1315  0003FA  0EEC               	movlw	236
  1316  0003FC  6E13               	movwf	___flge@ff1^0,c
  1317  0003FE  0E51               	movlw	81
  1318  000400  6E14               	movwf	(___flge@ff1+1)^0,c
  1319  000402  0E38               	movlw	56
  1320  000404  6E15               	movwf	(___flge@ff1+2)^0,c
  1321  000406  0E3E               	movlw	62
  1322  000408  6E16               	movwf	(___flge@ff1+3)^0,c
  1323  00040A  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1324  00040E  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1325  000412  6A07               	clrf	(___xxtofl@val+2)^0,c
  1326  000414  6A08               	clrf	(___xxtofl@val+3)^0,c
  1327  000416  0E00               	movlw	0
  1328  000418  EC17  F008         	call	___xxtofl
  1329  00041C  C005  F017         	movff	?___xxtofl,___flge@ff2
  1330  000420  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1331  000424  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1332  000428  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1333  00042C  ECF1  F008         	call	___flge	;wreg free
  1334  000430  B0D8               	btfsc	status,0,c
  1335  000432  EF1D  F002         	goto	u3081
  1336  000436  EF1F  F002         	goto	u3080
  1337  00043A                     u3081:
  1338  00043A  EF41  F002         	goto	l2945
  1339  00043E                     u3080:
  1340  00043E                     
  1341                           ;color_card.c: 29:         reverse(mL, mR);
  1342  00043E  C035  F01E         	movff	read_card@mL,reverse@mL
  1343  000442  C036  F01F         	movff	read_card@mL+1,reverse@mL+1
  1344  000446  C037  F020         	movff	read_card@mR,reverse@mR
  1345  00044A  C038  F021         	movff	read_card@mR+1,reverse@mR+1
  1346  00044E  ECD5  F009         	call	_reverse	;wreg free
  1347                           
  1348                           ;color_card.c: 30:         turnRight(mL, mR, 90);
  1349  000452  C035  F01E         	movff	read_card@mL,turnRight@mL
  1350  000456  C036  F01F         	movff	read_card@mL+1,turnRight@mL+1
  1351  00045A  C037  F020         	movff	read_card@mR,turnRight@mR
  1352  00045E  C038  F021         	movff	read_card@mR+1,turnRight@mR+1
  1353  000462  0E5A               	movlw	90
  1354  000464  6E22               	movwf	turnRight@deg^0,c
  1355  000466  EC47  F005         	call	_turnRight	;wreg free
  1356                           
  1357                           ;color_card.c: 31:         stop(mL, mR);
  1358  00046A  C035  F01E         	movff	read_card@mL,stop@mL
  1359  00046E  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1360  000472  C037  F020         	movff	read_card@mR,stop@mR
  1361  000476  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1362  00047A  EC6F  F00A         	call	_stop	;wreg free
  1363                           
  1364                           ;color_card.c: 33:     } else if ((R_rel>0.49) && (G_rel<0.275) && (B_rel>0.195)) {
  1365  00047E  EF45  F004         	goto	l499
  1366  000482                     l2945:
  1367  000482  0E48               	movlw	72
  1368  000484  6E13               	movwf	___flge@ff1^0,c
  1369  000486  0EE1               	movlw	225
  1370  000488  6E14               	movwf	(___flge@ff1+1)^0,c
  1371  00048A  0EFA               	movlw	250
  1372  00048C  6E15               	movwf	(___flge@ff1+2)^0,c
  1373  00048E  0E3E               	movlw	62
  1374  000490  6E16               	movwf	(___flge@ff1+3)^0,c
  1375  000492  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1376  000496  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1377  00049A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1378  00049C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1379  00049E  0E00               	movlw	0
  1380  0004A0  EC17  F008         	call	___xxtofl
  1381  0004A4  C005  F017         	movff	?___xxtofl,___flge@ff2
  1382  0004A8  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1383  0004AC  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1384  0004B0  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1385  0004B4  ECF1  F008         	call	___flge	;wreg free
  1386  0004B8  B0D8               	btfsc	status,0,c
  1387  0004BA  EF61  F002         	goto	u3091
  1388  0004BE  EF63  F002         	goto	u3090
  1389  0004C2                     u3091:
  1390  0004C2  EFC9  F002         	goto	l2953
  1391  0004C6                     u3090:
  1392  0004C6  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1393  0004CA  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1394  0004CE  6A07               	clrf	(___xxtofl@val+2)^0,c
  1395  0004D0  6A08               	clrf	(___xxtofl@val+3)^0,c
  1396  0004D2  0E00               	movlw	0
  1397  0004D4  EC17  F008         	call	___xxtofl
  1398  0004D8  C005  F013         	movff	?___xxtofl,___flge@ff1
  1399  0004DC  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1400  0004E0  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1401  0004E4  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1402  0004E8  0ECD               	movlw	205
  1403  0004EA  6E17               	movwf	___flge@ff2^0,c
  1404  0004EC  0ECC               	movlw	204
  1405  0004EE  6E18               	movwf	(___flge@ff2+1)^0,c
  1406  0004F0  0E8C               	movlw	140
  1407  0004F2  6E19               	movwf	(___flge@ff2+2)^0,c
  1408  0004F4  0E3E               	movlw	62
  1409  0004F6  6E1A               	movwf	(___flge@ff2+3)^0,c
  1410  0004F8  ECF1  F008         	call	___flge	;wreg free
  1411  0004FC  B0D8               	btfsc	status,0,c
  1412  0004FE  EF83  F002         	goto	u3101
  1413  000502  EF85  F002         	goto	u3100
  1414  000506                     u3101:
  1415  000506  EFC9  F002         	goto	l2953
  1416  00050A                     u3100:
  1417  00050A  0E14               	movlw	20
  1418  00050C  6E13               	movwf	___flge@ff1^0,c
  1419  00050E  0EAE               	movlw	174
  1420  000510  6E14               	movwf	(___flge@ff1+1)^0,c
  1421  000512  0E47               	movlw	71
  1422  000514  6E15               	movwf	(___flge@ff1+2)^0,c
  1423  000516  0E3E               	movlw	62
  1424  000518  6E16               	movwf	(___flge@ff1+3)^0,c
  1425  00051A  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1426  00051E  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1427  000522  6A07               	clrf	(___xxtofl@val+2)^0,c
  1428  000524  6A08               	clrf	(___xxtofl@val+3)^0,c
  1429  000526  0E00               	movlw	0
  1430  000528  EC17  F008         	call	___xxtofl
  1431  00052C  C005  F017         	movff	?___xxtofl,___flge@ff2
  1432  000530  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1433  000534  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1434  000538  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1435  00053C  ECF1  F008         	call	___flge	;wreg free
  1436  000540  B0D8               	btfsc	status,0,c
  1437  000542  EFA5  F002         	goto	u3111
  1438  000546  EFA7  F002         	goto	u3110
  1439  00054A                     u3111:
  1440  00054A  EFC9  F002         	goto	l2953
  1441  00054E                     u3110:
  1442  00054E                     
  1443                           ;color_card.c: 35:         reverse(mL, mR);
  1444  00054E  C035  F01E         	movff	read_card@mL,reverse@mL
  1445  000552  C036  F01F         	movff	read_card@mL+1,reverse@mL+1
  1446  000556  C037  F020         	movff	read_card@mR,reverse@mR
  1447  00055A  C038  F021         	movff	read_card@mR+1,reverse@mR+1
  1448  00055E  ECD5  F009         	call	_reverse	;wreg free
  1449                           
  1450                           ;color_card.c: 36:         turnLeft(mL, mR, 90);
  1451  000562  C035  F01E         	movff	read_card@mL,turnLeft@mL
  1452  000566  C036  F01F         	movff	read_card@mL+1,turnLeft@mL+1
  1453  00056A  C037  F020         	movff	read_card@mR,turnLeft@mR
  1454  00056E  C038  F021         	movff	read_card@mR+1,turnLeft@mR+1
  1455  000572  0E5A               	movlw	90
  1456  000574  6E22               	movwf	turnLeft@deg^0,c
  1457  000576  EC3A  F006         	call	_turnLeft	;wreg free
  1458                           
  1459                           ;color_card.c: 37:         stop(mL, mR);
  1460  00057A  C035  F01E         	movff	read_card@mL,stop@mL
  1461  00057E  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1462  000582  C037  F020         	movff	read_card@mR,stop@mR
  1463  000586  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1464  00058A  EC6F  F00A         	call	_stop	;wreg free
  1465                           
  1466                           ;color_card.c: 39:     } else if ((R_rel>0.54) && (G_rel<0.24) && (B_rel<0.18)) {
  1467  00058E  EF45  F004         	goto	l499
  1468  000592                     l2953:
  1469  000592  0E71               	movlw	113
  1470  000594  6E13               	movwf	___flge@ff1^0,c
  1471  000596  0E3D               	movlw	61
  1472  000598  6E14               	movwf	(___flge@ff1+1)^0,c
  1473  00059A  0E0A               	movlw	10
  1474  00059C  6E15               	movwf	(___flge@ff1+2)^0,c
  1475  00059E  0E3F               	movlw	63
  1476  0005A0  6E16               	movwf	(___flge@ff1+3)^0,c
  1477  0005A2  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1478  0005A6  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1479  0005AA  6A07               	clrf	(___xxtofl@val+2)^0,c
  1480  0005AC  6A08               	clrf	(___xxtofl@val+3)^0,c
  1481  0005AE  0E00               	movlw	0
  1482  0005B0  EC17  F008         	call	___xxtofl
  1483  0005B4  C005  F017         	movff	?___xxtofl,___flge@ff2
  1484  0005B8  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1485  0005BC  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1486  0005C0  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1487  0005C4  ECF1  F008         	call	___flge	;wreg free
  1488  0005C8  B0D8               	btfsc	status,0,c
  1489  0005CA  EFE9  F002         	goto	u3121
  1490  0005CE  EFEB  F002         	goto	u3120
  1491  0005D2                     u3121:
  1492  0005D2  EF47  F003         	goto	l2961
  1493  0005D6                     u3120:
  1494  0005D6  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1495  0005DA  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1496  0005DE  6A07               	clrf	(___xxtofl@val+2)^0,c
  1497  0005E0  6A08               	clrf	(___xxtofl@val+3)^0,c
  1498  0005E2  0E00               	movlw	0
  1499  0005E4  EC17  F008         	call	___xxtofl
  1500  0005E8  C005  F013         	movff	?___xxtofl,___flge@ff1
  1501  0005EC  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1502  0005F0  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1503  0005F4  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1504  0005F8  0E8F               	movlw	143
  1505  0005FA  6E17               	movwf	___flge@ff2^0,c
  1506  0005FC  0EC2               	movlw	194
  1507  0005FE  6E18               	movwf	(___flge@ff2+1)^0,c
  1508  000600  0E75               	movlw	117
  1509  000602  6E19               	movwf	(___flge@ff2+2)^0,c
  1510  000604  0E3E               	movlw	62
  1511  000606  6E1A               	movwf	(___flge@ff2+3)^0,c
  1512  000608  ECF1  F008         	call	___flge	;wreg free
  1513  00060C  B0D8               	btfsc	status,0,c
  1514  00060E  EF0B  F003         	goto	u3131
  1515  000612  EF0D  F003         	goto	u3130
  1516  000616                     u3131:
  1517  000616  EF47  F003         	goto	l2961
  1518  00061A                     u3130:
  1519  00061A  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1520  00061E  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1521  000622  6A07               	clrf	(___xxtofl@val+2)^0,c
  1522  000624  6A08               	clrf	(___xxtofl@val+3)^0,c
  1523  000626  0E00               	movlw	0
  1524  000628  EC17  F008         	call	___xxtofl
  1525  00062C  C005  F013         	movff	?___xxtofl,___flge@ff1
  1526  000630  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1527  000634  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1528  000638  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1529  00063C  0EEC               	movlw	236
  1530  00063E  6E17               	movwf	___flge@ff2^0,c
  1531  000640  0E51               	movlw	81
  1532  000642  6E18               	movwf	(___flge@ff2+1)^0,c
  1533  000644  0E38               	movlw	56
  1534  000646  6E19               	movwf	(___flge@ff2+2)^0,c
  1535  000648  0E3E               	movlw	62
  1536  00064A  6E1A               	movwf	(___flge@ff2+3)^0,c
  1537  00064C  ECF1  F008         	call	___flge	;wreg free
  1538  000650  B0D8               	btfsc	status,0,c
  1539  000652  EF2D  F003         	goto	u3141
  1540  000656  EF2F  F003         	goto	u3140
  1541  00065A                     u3141:
  1542  00065A  EF47  F003         	goto	l2961
  1543  00065E                     u3140:
  1544  00065E                     
  1545                           ;color_card.c: 41:         turnRight(mL, mR, 135);
  1546  00065E  C035  F01E         	movff	read_card@mL,turnRight@mL
  1547  000662  C036  F01F         	movff	read_card@mL+1,turnRight@mL+1
  1548  000666  C037  F020         	movff	read_card@mR,turnRight@mR
  1549  00066A  C038  F021         	movff	read_card@mR+1,turnRight@mR+1
  1550  00066E  0E87               	movlw	135
  1551  000670  6E22               	movwf	turnRight@deg^0,c
  1552  000672  EC47  F005         	call	_turnRight	;wreg free
  1553                           
  1554                           ;color_card.c: 42:         stop(mL, mR);
  1555  000676  C035  F01E         	movff	read_card@mL,stop@mL
  1556  00067A  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1557  00067E  C037  F020         	movff	read_card@mR,stop@mR
  1558  000682  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1559  000686  EC6F  F00A         	call	_stop	;wreg free
  1560                           
  1561                           ;color_card.c: 44:     } else if ((R_rel<0.44) && (G_rel>0.305) && (B_rel>0.21)) {
  1562  00068A  EF45  F004         	goto	l499
  1563  00068E                     l2961:
  1564  00068E  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1565  000692  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1566  000696  6A07               	clrf	(___xxtofl@val+2)^0,c
  1567  000698  6A08               	clrf	(___xxtofl@val+3)^0,c
  1568  00069A  0E00               	movlw	0
  1569  00069C  EC17  F008         	call	___xxtofl
  1570  0006A0  C005  F013         	movff	?___xxtofl,___flge@ff1
  1571  0006A4  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1572  0006A8  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1573  0006AC  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1574  0006B0  0EAE               	movlw	174
  1575  0006B2  6E17               	movwf	___flge@ff2^0,c
  1576  0006B4  0E47               	movlw	71
  1577  0006B6  6E18               	movwf	(___flge@ff2+1)^0,c
  1578  0006B8  0EE1               	movlw	225
  1579  0006BA  6E19               	movwf	(___flge@ff2+2)^0,c
  1580  0006BC  0E3E               	movlw	62
  1581  0006BE  6E1A               	movwf	(___flge@ff2+3)^0,c
  1582  0006C0  ECF1  F008         	call	___flge	;wreg free
  1583  0006C4  B0D8               	btfsc	status,0,c
  1584  0006C6  EF67  F003         	goto	u3151
  1585  0006CA  EF69  F003         	goto	u3150
  1586  0006CE                     u3151:
  1587  0006CE  EFC5  F003         	goto	l2969
  1588  0006D2                     u3150:
  1589  0006D2  0EF6               	movlw	246
  1590  0006D4  6E13               	movwf	___flge@ff1^0,c
  1591  0006D6  0E28               	movlw	40
  1592  0006D8  6E14               	movwf	(___flge@ff1+1)^0,c
  1593  0006DA  0E9C               	movlw	156
  1594  0006DC  6E15               	movwf	(___flge@ff1+2)^0,c
  1595  0006DE  0E3E               	movlw	62
  1596  0006E0  6E16               	movwf	(___flge@ff1+3)^0,c
  1597  0006E2  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1598  0006E6  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1599  0006EA  6A07               	clrf	(___xxtofl@val+2)^0,c
  1600  0006EC  6A08               	clrf	(___xxtofl@val+3)^0,c
  1601  0006EE  0E00               	movlw	0
  1602  0006F0  EC17  F008         	call	___xxtofl
  1603  0006F4  C005  F017         	movff	?___xxtofl,___flge@ff2
  1604  0006F8  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1605  0006FC  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1606  000700  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1607  000704  ECF1  F008         	call	___flge	;wreg free
  1608  000708  B0D8               	btfsc	status,0,c
  1609  00070A  EF89  F003         	goto	u3161
  1610  00070E  EF8B  F003         	goto	u3160
  1611  000712                     u3161:
  1612  000712  EFC5  F003         	goto	l2969
  1613  000716                     u3160:
  1614  000716  0E3D               	movlw	61
  1615  000718  6E13               	movwf	___flge@ff1^0,c
  1616  00071A  0E0A               	movlw	10
  1617  00071C  6E14               	movwf	(___flge@ff1+1)^0,c
  1618  00071E  0E57               	movlw	87
  1619  000720  6E15               	movwf	(___flge@ff1+2)^0,c
  1620  000722  0E3E               	movlw	62
  1621  000724  6E16               	movwf	(___flge@ff1+3)^0,c
  1622  000726  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1623  00072A  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1624  00072E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1625  000730  6A08               	clrf	(___xxtofl@val+3)^0,c
  1626  000732  0E00               	movlw	0
  1627  000734  EC17  F008         	call	___xxtofl
  1628  000738  C005  F017         	movff	?___xxtofl,___flge@ff2
  1629  00073C  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1630  000740  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1631  000744  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1632  000748  ECF1  F008         	call	___flge	;wreg free
  1633  00074C  B0D8               	btfsc	status,0,c
  1634  00074E  EFAB  F003         	goto	u3171
  1635  000752  EFAD  F003         	goto	u3170
  1636  000756                     u3171:
  1637  000756  EFC5  F003         	goto	l2969
  1638  00075A                     u3170:
  1639  00075A                     
  1640                           ;color_card.c: 46:         turnLeft(mL, mR, 135);
  1641  00075A  C035  F01E         	movff	read_card@mL,turnLeft@mL
  1642  00075E  C036  F01F         	movff	read_card@mL+1,turnLeft@mL+1
  1643  000762  C037  F020         	movff	read_card@mR,turnLeft@mR
  1644  000766  C038  F021         	movff	read_card@mR+1,turnLeft@mR+1
  1645  00076A  0E87               	movlw	135
  1646  00076C  6E22               	movwf	turnLeft@deg^0,c
  1647  00076E  EC3A  F006         	call	_turnLeft	;wreg free
  1648                           
  1649                           ;color_card.c: 47:         stop(mL, mR);
  1650  000772  C035  F01E         	movff	read_card@mL,stop@mL
  1651  000776  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1652  00077A  C037  F020         	movff	read_card@mR,stop@mR
  1653  00077E  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1654  000782  EC6F  F00A         	call	_stop	;wreg free
  1655                           
  1656                           ;color_card.c: 49:     } else if ((R_rel<0.46) && (G_rel>0.295) && (B_rel>0.21)) {
  1657  000786  EF45  F004         	goto	l499
  1658  00078A                     l2969:
  1659  00078A  C09E  F005         	movff	read_card@R_rel,___xxtofl@val
  1660  00078E  C09F  F006         	movff	read_card@R_rel+1,___xxtofl@val+1
  1661  000792  6A07               	clrf	(___xxtofl@val+2)^0,c
  1662  000794  6A08               	clrf	(___xxtofl@val+3)^0,c
  1663  000796  0E00               	movlw	0
  1664  000798  EC17  F008         	call	___xxtofl
  1665  00079C  C005  F013         	movff	?___xxtofl,___flge@ff1
  1666  0007A0  C006  F014         	movff	?___xxtofl+1,___flge@ff1+1
  1667  0007A4  C007  F015         	movff	?___xxtofl+2,___flge@ff1+2
  1668  0007A8  C008  F016         	movff	?___xxtofl+3,___flge@ff1+3
  1669  0007AC  0E1F               	movlw	31
  1670  0007AE  6E17               	movwf	___flge@ff2^0,c
  1671  0007B0  0E85               	movlw	133
  1672  0007B2  6E18               	movwf	(___flge@ff2+1)^0,c
  1673  0007B4  0EEB               	movlw	235
  1674  0007B6  6E19               	movwf	(___flge@ff2+2)^0,c
  1675  0007B8  0E3E               	movlw	62
  1676  0007BA  6E1A               	movwf	(___flge@ff2+3)^0,c
  1677  0007BC  ECF1  F008         	call	___flge	;wreg free
  1678  0007C0  B0D8               	btfsc	status,0,c
  1679  0007C2  EFE5  F003         	goto	u3181
  1680  0007C6  EFE7  F003         	goto	u3180
  1681  0007CA                     u3181:
  1682  0007CA  EF2D  F004         	goto	l2977
  1683  0007CE                     u3180:
  1684  0007CE  0E3D               	movlw	61
  1685  0007D0  6E13               	movwf	___flge@ff1^0,c
  1686  0007D2  0E0A               	movlw	10
  1687  0007D4  6E14               	movwf	(___flge@ff1+1)^0,c
  1688  0007D6  0E97               	movlw	151
  1689  0007D8  6E15               	movwf	(___flge@ff1+2)^0,c
  1690  0007DA  0E3E               	movlw	62
  1691  0007DC  6E16               	movwf	(___flge@ff1+3)^0,c
  1692  0007DE  C0A0  F005         	movff	read_card@G_rel,___xxtofl@val
  1693  0007E2  C0A1  F006         	movff	read_card@G_rel+1,___xxtofl@val+1
  1694  0007E6  6A07               	clrf	(___xxtofl@val+2)^0,c
  1695  0007E8  6A08               	clrf	(___xxtofl@val+3)^0,c
  1696  0007EA  0E00               	movlw	0
  1697  0007EC  EC17  F008         	call	___xxtofl
  1698  0007F0  C005  F017         	movff	?___xxtofl,___flge@ff2
  1699  0007F4  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1700  0007F8  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1701  0007FC  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1702  000800  ECF1  F008         	call	___flge	;wreg free
  1703  000804  B0D8               	btfsc	status,0,c
  1704  000806  EF07  F004         	goto	u3191
  1705  00080A  EF09  F004         	goto	u3190
  1706  00080E                     u3191:
  1707  00080E  EF2D  F004         	goto	l2977
  1708  000812                     u3190:
  1709  000812  0E3D               	movlw	61
  1710  000814  6E13               	movwf	___flge@ff1^0,c
  1711  000816  0E0A               	movlw	10
  1712  000818  6E14               	movwf	(___flge@ff1+1)^0,c
  1713  00081A  0E57               	movlw	87
  1714  00081C  6E15               	movwf	(___flge@ff1+2)^0,c
  1715  00081E  0E3E               	movlw	62
  1716  000820  6E16               	movwf	(___flge@ff1+3)^0,c
  1717  000822  C0A2  F005         	movff	read_card@B_rel,___xxtofl@val
  1718  000826  C0A3  F006         	movff	read_card@B_rel+1,___xxtofl@val+1
  1719  00082A  6A07               	clrf	(___xxtofl@val+2)^0,c
  1720  00082C  6A08               	clrf	(___xxtofl@val+3)^0,c
  1721  00082E  0E00               	movlw	0
  1722  000830  EC17  F008         	call	___xxtofl
  1723  000834  C005  F017         	movff	?___xxtofl,___flge@ff2
  1724  000838  C006  F018         	movff	?___xxtofl+1,___flge@ff2+1
  1725  00083C  C007  F019         	movff	?___xxtofl+2,___flge@ff2+2
  1726  000840  C008  F01A         	movff	?___xxtofl+3,___flge@ff2+3
  1727  000844  ECF1  F008         	call	___flge	;wreg free
  1728  000848  B0D8               	btfsc	status,0,c
  1729  00084A  EF29  F004         	goto	u3201
  1730  00084E  EF2B  F004         	goto	u3200
  1731  000852                     u3201:
  1732  000852  EF2D  F004         	goto	l2977
  1733  000856                     u3200:
  1734  000856  EFA1  F001         	goto	l2935
  1735  00085A                     l2977:
  1736                           
  1737                           ;color_card.c: 56:         returnhome_flag = 1;
  1738  00085A  0E01               	movlw	1
  1739  00085C  6E57               	movwf	_returnhome_flag^0,c	;volatile
  1740  00085E                     
  1741                           ;color_card.c: 57:         turnRight(mL, mR, 180);
  1742  00085E  C035  F01E         	movff	read_card@mL,turnRight@mL
  1743  000862  C036  F01F         	movff	read_card@mL+1,turnRight@mL+1
  1744  000866  C037  F020         	movff	read_card@mR,turnRight@mR
  1745  00086A  C038  F021         	movff	read_card@mR+1,turnRight@mR+1
  1746  00086E  0EB4               	movlw	180
  1747  000870  6E22               	movwf	turnRight@deg^0,c
  1748  000872  EC47  F005         	call	_turnRight	;wreg free
  1749  000876                     
  1750                           ;color_card.c: 58:         stop(mL, mR);
  1751  000876  C035  F01E         	movff	read_card@mL,stop@mL
  1752  00087A  C036  F01F         	movff	read_card@mL+1,stop@mL+1
  1753  00087E  C037  F020         	movff	read_card@mR,stop@mR
  1754  000882  C038  F021         	movff	read_card@mR+1,stop@mR+1
  1755  000886  EC6F  F00A         	call	_stop	;wreg free
  1756  00088A                     l499:
  1757  00088A  0012               	return		;funcret
  1758  00088C                     __end_of_read_card:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _turnRight *****************
  1762 ;; Defined at:
  1763 ;;		line 246 in file "dc_motor.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  mL              2   29[COMRAM] PTR struct .
  1766 ;;		 -> main@motorL(9), 
  1767 ;;  mR              2   31[COMRAM] PTR struct .
  1768 ;;		 -> main@motorR(9), 
  1769 ;;  deg             1   33[COMRAM] unsigned char 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1781 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;Total ram usage:        7 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 7
  1788 ;; This function calls:
  1789 ;;		_setMotorPWM
  1790 ;; This function is called by:
  1791 ;;		_read_card
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text2
  1796  000A8E                     __ptext2:
  1797                           	callstack 0
  1798  000A8E                     _turnRight:
  1799                           	callstack 22
  1800  000A8E                     
  1801                           ;dc_motor.c: 246: void turnRight(DC_motor *mL, DC_motor *mR, unsigned char deg);dc_motor
      +                          .c: 247: {;dc_motor.c: 248:     if (returnhome_flag==0) {
  1802  000A8E  5057               	movf	_returnhome_flag^0,w,c	;volatile
  1803  000A90  A4D8               	btfss	status,2,c
  1804  000A92  EF4D  F005         	goto	u2641
  1805  000A96  EF4F  F005         	goto	u2640
  1806  000A9A                     u2641:
  1807  000A9A  EFC5  F005         	goto	l2791
  1808  000A9E                     u2640:
  1809  000A9E                     
  1810                           ;dc_motor.c: 250:         mL->direction = 1;
  1811  000A9E  EE20 F001          	lfsr	2,1
  1812  000AA2  501E               	movf	turnRight@mL^0,w,c
  1813  000AA4  26D9               	addwf	fsr2l,f,c
  1814  000AA6  501F               	movf	(turnRight@mL+1)^0,w,c
  1815  000AA8  22DA               	addwfc	fsr2h,f,c
  1816  000AAA  0E01               	movlw	1
  1817  000AAC  6EDF               	movwf	indf2,c
  1818                           
  1819                           ;dc_motor.c: 251:         mR->direction = 0;
  1820  000AAE  EE20 F001          	lfsr	2,1
  1821  000AB2  5020               	movf	turnRight@mR^0,w,c
  1822  000AB4  26D9               	addwf	fsr2l,f,c
  1823  000AB6  5021               	movf	(turnRight@mR+1)^0,w,c
  1824  000AB8  22DA               	addwfc	fsr2h,f,c
  1825  000ABA  0E00               	movlw	0
  1826  000ABC  6EDF               	movwf	indf2,c
  1827                           
  1828                           ;dc_motor.c: 254:         while(((mL->power)<50) || ((mR->power)<50)){
  1829  000ABE  EFAA  F005         	goto	l239
  1830  000AC2                     l2773:
  1831                           
  1832                           ;dc_motor.c: 256:             LATHbits.LATH0 = !LATHbits.LATH0;
  1833  000AC2  A080               	btfss	128,0,c	;volatile
  1834  000AC4  EF66  F005         	goto	u2651
  1835  000AC8  EF6A  F005         	goto	u2650
  1836  000ACC                     u2651:
  1837  000ACC  6A23               	clrf	??_turnRight^0,c
  1838  000ACE  2A23               	incf	??_turnRight^0,f,c
  1839  000AD0  EF6B  F005         	goto	u2668
  1840  000AD4                     u2650:
  1841  000AD4  6A23               	clrf	??_turnRight^0,c
  1842  000AD6                     u2668:
  1843  000AD6  5080               	movf	128,w,c	;volatile
  1844  000AD8  1823               	xorwf	??_turnRight^0,w,c
  1845  000ADA  0BFE               	andlw	-2
  1846  000ADC  1823               	xorwf	??_turnRight^0,w,c
  1847  000ADE  6E80               	movwf	128,c	;volatile
  1848  000AE0                     
  1849                           ;dc_motor.c: 259:             if (mL->power<50) {mL->power+=1;}
  1850  000AE0  C01E  FFD9         	movff	turnRight@mL,fsr2l
  1851  000AE4  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  1852  000AE8  0E32               	movlw	50
  1853  000AEA  60DF               	cpfslt	indf2,c
  1854  000AEC  EF7A  F005         	goto	u2671
  1855  000AF0  EF7C  F005         	goto	u2670
  1856  000AF4                     u2671:
  1857  000AF4  EF81  F005         	goto	l2779
  1858  000AF8                     u2670:
  1859  000AF8  C01E  FFD9         	movff	turnRight@mL,fsr2l
  1860  000AFC  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  1861  000B00  2ADF               	incf	indf2,f,c
  1862  000B02                     l2779:
  1863                           
  1864                           ;dc_motor.c: 260:             if (mR->power<50) {mR->power+=1;}
  1865  000B02  C020  FFD9         	movff	turnRight@mR,fsr2l
  1866  000B06  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  1867  000B0A  0E32               	movlw	50
  1868  000B0C  60DF               	cpfslt	indf2,c
  1869  000B0E  EF8B  F005         	goto	u2681
  1870  000B12  EF8D  F005         	goto	u2680
  1871  000B16                     u2681:
  1872  000B16  EF92  F005         	goto	l2783
  1873  000B1A                     u2680:
  1874  000B1A  C020  FFD9         	movff	turnRight@mR,fsr2l
  1875  000B1E  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  1876  000B22  2ADF               	incf	indf2,f,c
  1877  000B24                     l2783:
  1878                           
  1879                           ;dc_motor.c: 263:             setMotorPWM(mL);
  1880  000B24  C01E  F013         	movff	turnRight@mL,setMotorPWM@m
  1881  000B28  C01F  F014         	movff	turnRight@mL+1,setMotorPWM@m+1
  1882  000B2C  EC2D  F007         	call	_setMotorPWM	;wreg free
  1883  000B30                     
  1884                           ;dc_motor.c: 264:             setMotorPWM(mR);
  1885  000B30  C020  F013         	movff	turnRight@mR,setMotorPWM@m
  1886  000B34  C021  F014         	movff	turnRight@mR+1,setMotorPWM@m+1
  1887  000B38  EC2D  F007         	call	_setMotorPWM	;wreg free
  1888  000B3C                     
  1889                           ;dc_motor.c: 265:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1890  000B3C  0E09               	movlw	9
  1891  000B3E  6E24               	movwf	(??_turnRight+1)^0,c
  1892  000B40  0E1E               	movlw	30
  1893  000B42  6E23               	movwf	??_turnRight^0,c
  1894  000B44  0EE4               	movlw	228
  1895  000B46                     u3377:
  1896  000B46  2EE8               	decfsz	wreg,f,c
  1897  000B48  D7FE               	bra	u3377
  1898  000B4A  2E23               	decfsz	??_turnRight^0,f,c
  1899  000B4C  D7FC               	bra	u3377
  1900  000B4E  2E24               	decfsz	(??_turnRight+1)^0,f,c
  1901  000B50  D7FA               	bra	u3377
  1902  000B52  D000               	nop2	
  1903  000B54                     l239:
  1904                           
  1905                           ;dc_motor.c: 254:         while(((mL->power)<50) || ((mR->power)<50)){
  1906  000B54  C01E  FFD9         	movff	turnRight@mL,fsr2l
  1907  000B58  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  1908  000B5C  0E31               	movlw	49
  1909  000B5E  64DF               	cpfsgt	indf2,c
  1910  000B60  EFB4  F005         	goto	u2691
  1911  000B64  EFB6  F005         	goto	u2690
  1912  000B68                     u2691:
  1913  000B68  EF61  F005         	goto	l2773
  1914  000B6C                     u2690:
  1915  000B6C  C020  FFD9         	movff	turnRight@mR,fsr2l
  1916  000B70  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  1917  000B74  0E31               	movlw	49
  1918  000B76  64DF               	cpfsgt	indf2,c
  1919  000B78  EFC0  F005         	goto	u2701
  1920  000B7C  EFC2  F005         	goto	u2700
  1921  000B80                     u2701:
  1922  000B80  EF61  F005         	goto	l2773
  1923  000B84                     u2700:
  1924  000B84                     
  1925                           ;dc_motor.c: 268:         LATHbits.LATH0 = 0;
  1926  000B84  9080               	bcf	128,0,c	;volatile
  1927                           
  1928                           ;dc_motor.c: 270:     } else {
  1929  000B86  EF39  F006         	goto	l250
  1930  000B8A                     l2791:
  1931                           
  1932                           ;dc_motor.c: 272:         mL->direction = 0;
  1933  000B8A  EE20 F001          	lfsr	2,1
  1934  000B8E  501E               	movf	turnRight@mL^0,w,c
  1935  000B90  26D9               	addwf	fsr2l,f,c
  1936  000B92  501F               	movf	(turnRight@mL+1)^0,w,c
  1937  000B94  22DA               	addwfc	fsr2h,f,c
  1938  000B96  0E00               	movlw	0
  1939  000B98  6EDF               	movwf	indf2,c
  1940                           
  1941                           ;dc_motor.c: 273:         mR->direction = 1;
  1942  000B9A  EE20 F001          	lfsr	2,1
  1943  000B9E  5020               	movf	turnRight@mR^0,w,c
  1944  000BA0  26D9               	addwf	fsr2l,f,c
  1945  000BA2  5021               	movf	(turnRight@mR+1)^0,w,c
  1946  000BA4  22DA               	addwfc	fsr2h,f,c
  1947  000BA6  0E01               	movlw	1
  1948  000BA8  6EDF               	movwf	indf2,c
  1949                           
  1950                           ;dc_motor.c: 276:         while(((mL->power)<50) || ((mR->power)<50)){
  1951  000BAA  EF20  F006         	goto	l245
  1952  000BAE                     l2793:
  1953                           
  1954                           ;dc_motor.c: 278:             LATFbits.LATF0 = !LATFbits.LATF0;
  1955  000BAE  A07E               	btfss	126,0,c	;volatile
  1956  000BB0  EFDC  F005         	goto	u2711
  1957  000BB4  EFE0  F005         	goto	u2710
  1958  000BB8                     u2711:
  1959  000BB8  6A23               	clrf	??_turnRight^0,c
  1960  000BBA  2A23               	incf	??_turnRight^0,f,c
  1961  000BBC  EFE1  F005         	goto	u2728
  1962  000BC0                     u2710:
  1963  000BC0  6A23               	clrf	??_turnRight^0,c
  1964  000BC2                     u2728:
  1965  000BC2  507E               	movf	126,w,c	;volatile
  1966  000BC4  1823               	xorwf	??_turnRight^0,w,c
  1967  000BC6  0BFE               	andlw	-2
  1968  000BC8  1823               	xorwf	??_turnRight^0,w,c
  1969  000BCA  6E7E               	movwf	126,c	;volatile
  1970  000BCC                     
  1971                           ;dc_motor.c: 281:             if (mL->power<50) {mL->power+=1;}
  1972  000BCC  C01E  FFD9         	movff	turnRight@mL,fsr2l
  1973  000BD0  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  1974  000BD4  0E32               	movlw	50
  1975  000BD6  60DF               	cpfslt	indf2,c
  1976  000BD8  EFF0  F005         	goto	u2731
  1977  000BDC  EFF2  F005         	goto	u2730
  1978  000BE0                     u2731:
  1979  000BE0  EFF7  F005         	goto	l2799
  1980  000BE4                     u2730:
  1981  000BE4  C01E  FFD9         	movff	turnRight@mL,fsr2l
  1982  000BE8  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  1983  000BEC  2ADF               	incf	indf2,f,c
  1984  000BEE                     l2799:
  1985                           
  1986                           ;dc_motor.c: 282:             if (mR->power<50) {mR->power+=1;}
  1987  000BEE  C020  FFD9         	movff	turnRight@mR,fsr2l
  1988  000BF2  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  1989  000BF6  0E32               	movlw	50
  1990  000BF8  60DF               	cpfslt	indf2,c
  1991  000BFA  EF01  F006         	goto	u2741
  1992  000BFE  EF03  F006         	goto	u2740
  1993  000C02                     u2741:
  1994  000C02  EF08  F006         	goto	l2803
  1995  000C06                     u2740:
  1996  000C06  C020  FFD9         	movff	turnRight@mR,fsr2l
  1997  000C0A  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  1998  000C0E  2ADF               	incf	indf2,f,c
  1999  000C10                     l2803:
  2000                           
  2001                           ;dc_motor.c: 285:             setMotorPWM(mL);
  2002  000C10  C01E  F013         	movff	turnRight@mL,setMotorPWM@m
  2003  000C14  C01F  F014         	movff	turnRight@mL+1,setMotorPWM@m+1
  2004  000C18  EC2D  F007         	call	_setMotorPWM	;wreg free
  2005  000C1C                     
  2006                           ;dc_motor.c: 286:             setMotorPWM(mR);
  2007  000C1C  C020  F013         	movff	turnRight@mR,setMotorPWM@m
  2008  000C20  C021  F014         	movff	turnRight@mR+1,setMotorPWM@m+1
  2009  000C24  EC2D  F007         	call	_setMotorPWM	;wreg free
  2010  000C28                     
  2011                           ;dc_motor.c: 287:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2012  000C28  0E09               	movlw	9
  2013  000C2A  6E24               	movwf	(??_turnRight+1)^0,c
  2014  000C2C  0E1E               	movlw	30
  2015  000C2E  6E23               	movwf	??_turnRight^0,c
  2016  000C30  0EE4               	movlw	228
  2017  000C32                     u3387:
  2018  000C32  2EE8               	decfsz	wreg,f,c
  2019  000C34  D7FE               	bra	u3387
  2020  000C36  2E23               	decfsz	??_turnRight^0,f,c
  2021  000C38  D7FC               	bra	u3387
  2022  000C3A  2E24               	decfsz	(??_turnRight+1)^0,f,c
  2023  000C3C  D7FA               	bra	u3387
  2024  000C3E  D000               	nop2	
  2025  000C40                     l245:
  2026                           
  2027                           ;dc_motor.c: 276:         while(((mL->power)<50) || ((mR->power)<50)){
  2028  000C40  C01E  FFD9         	movff	turnRight@mL,fsr2l
  2029  000C44  C01F  FFDA         	movff	turnRight@mL+1,fsr2h
  2030  000C48  0E31               	movlw	49
  2031  000C4A  64DF               	cpfsgt	indf2,c
  2032  000C4C  EF2A  F006         	goto	u2751
  2033  000C50  EF2C  F006         	goto	u2750
  2034  000C54                     u2751:
  2035  000C54  EFD7  F005         	goto	l2793
  2036  000C58                     u2750:
  2037  000C58  C020  FFD9         	movff	turnRight@mR,fsr2l
  2038  000C5C  C021  FFDA         	movff	turnRight@mR+1,fsr2h
  2039  000C60  0E31               	movlw	49
  2040  000C62  64DF               	cpfsgt	indf2,c
  2041  000C64  EF36  F006         	goto	u2761
  2042  000C68  EF38  F006         	goto	u2760
  2043  000C6C                     u2761:
  2044  000C6C  EFD7  F005         	goto	l2793
  2045  000C70                     u2760:
  2046  000C70                     
  2047                           ;dc_motor.c: 290:         LATFbits.LATF0 = 0;
  2048  000C70  907E               	bcf	126,0,c	;volatile
  2049  000C72                     l250:
  2050  000C72  0012               	return		;funcret
  2051  000C74                     __end_of_turnRight:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function _turnLeft *****************
  2055 ;; Defined at:
  2056 ;;		line 194 in file "dc_motor.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  mL              2   29[COMRAM] PTR struct .
  2059 ;;		 -> main@motorL(9), 
  2060 ;;  mR              2   31[COMRAM] PTR struct .
  2061 ;;		 -> main@motorR(9), 
  2062 ;;  deg             1   33[COMRAM] unsigned char 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2074 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;Total ram usage:        7 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 7
  2081 ;; This function calls:
  2082 ;;		_setMotorPWM
  2083 ;; This function is called by:
  2084 ;;		_read_card
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text3
  2089  000C74                     __ptext3:
  2090                           	callstack 0
  2091  000C74                     _turnLeft:
  2092                           	callstack 22
  2093  000C74                     
  2094                           ;dc_motor.c: 194: void turnLeft(DC_motor *mL, DC_motor *mR, unsigned char deg);dc_motor.
      +                          c: 195: {;dc_motor.c: 196:     if (returnhome_flag==0) {
  2095  000C74  5057               	movf	_returnhome_flag^0,w,c	;volatile
  2096  000C76  A4D8               	btfss	status,2,c
  2097  000C78  EF40  F006         	goto	u2511
  2098  000C7C  EF42  F006         	goto	u2510
  2099  000C80                     u2511:
  2100  000C80  EFB8  F006         	goto	l2749
  2101  000C84                     u2510:
  2102  000C84                     
  2103                           ;dc_motor.c: 198:         mL->direction = 0;
  2104  000C84  EE20 F001          	lfsr	2,1
  2105  000C88  501E               	movf	turnLeft@mL^0,w,c
  2106  000C8A  26D9               	addwf	fsr2l,f,c
  2107  000C8C  501F               	movf	(turnLeft@mL+1)^0,w,c
  2108  000C8E  22DA               	addwfc	fsr2h,f,c
  2109  000C90  0E00               	movlw	0
  2110  000C92  6EDF               	movwf	indf2,c
  2111                           
  2112                           ;dc_motor.c: 199:         mR->direction = 1;
  2113  000C94  EE20 F001          	lfsr	2,1
  2114  000C98  5020               	movf	turnLeft@mR^0,w,c
  2115  000C9A  26D9               	addwf	fsr2l,f,c
  2116  000C9C  5021               	movf	(turnLeft@mR+1)^0,w,c
  2117  000C9E  22DA               	addwfc	fsr2h,f,c
  2118  000CA0  0E01               	movlw	1
  2119  000CA2  6EDF               	movwf	indf2,c
  2120                           
  2121                           ;dc_motor.c: 202:         while(((mL->power)<50) || ((mR->power)<50)){
  2122  000CA4  EF9D  F006         	goto	l224
  2123  000CA8                     l2731:
  2124                           
  2125                           ;dc_motor.c: 204:             LATFbits.LATF0 = !LATFbits.LATF0;
  2126  000CA8  A07E               	btfss	126,0,c	;volatile
  2127  000CAA  EF59  F006         	goto	u2521
  2128  000CAE  EF5D  F006         	goto	u2520
  2129  000CB2                     u2521:
  2130  000CB2  6A23               	clrf	??_turnLeft^0,c
  2131  000CB4  2A23               	incf	??_turnLeft^0,f,c
  2132  000CB6  EF5E  F006         	goto	u2538
  2133  000CBA                     u2520:
  2134  000CBA  6A23               	clrf	??_turnLeft^0,c
  2135  000CBC                     u2538:
  2136  000CBC  507E               	movf	126,w,c	;volatile
  2137  000CBE  1823               	xorwf	??_turnLeft^0,w,c
  2138  000CC0  0BFE               	andlw	-2
  2139  000CC2  1823               	xorwf	??_turnLeft^0,w,c
  2140  000CC4  6E7E               	movwf	126,c	;volatile
  2141  000CC6                     
  2142                           ;dc_motor.c: 207:             if (mL->power<50) {mL->power+=1;}
  2143  000CC6  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2144  000CCA  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2145  000CCE  0E32               	movlw	50
  2146  000CD0  60DF               	cpfslt	indf2,c
  2147  000CD2  EF6D  F006         	goto	u2541
  2148  000CD6  EF6F  F006         	goto	u2540
  2149  000CDA                     u2541:
  2150  000CDA  EF74  F006         	goto	l2737
  2151  000CDE                     u2540:
  2152  000CDE  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2153  000CE2  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2154  000CE6  2ADF               	incf	indf2,f,c
  2155  000CE8                     l2737:
  2156                           
  2157                           ;dc_motor.c: 208:             if (mR->power<50) {mR->power+=1;}
  2158  000CE8  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2159  000CEC  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2160  000CF0  0E32               	movlw	50
  2161  000CF2  60DF               	cpfslt	indf2,c
  2162  000CF4  EF7E  F006         	goto	u2551
  2163  000CF8  EF80  F006         	goto	u2550
  2164  000CFC                     u2551:
  2165  000CFC  EF85  F006         	goto	l2741
  2166  000D00                     u2550:
  2167  000D00  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2168  000D04  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2169  000D08  2ADF               	incf	indf2,f,c
  2170  000D0A                     l2741:
  2171                           
  2172                           ;dc_motor.c: 211:             setMotorPWM(mL);
  2173  000D0A  C01E  F013         	movff	turnLeft@mL,setMotorPWM@m
  2174  000D0E  C01F  F014         	movff	turnLeft@mL+1,setMotorPWM@m+1
  2175  000D12  EC2D  F007         	call	_setMotorPWM	;wreg free
  2176  000D16                     
  2177                           ;dc_motor.c: 212:             setMotorPWM(mR);
  2178  000D16  C020  F013         	movff	turnLeft@mR,setMotorPWM@m
  2179  000D1A  C021  F014         	movff	turnLeft@mR+1,setMotorPWM@m+1
  2180  000D1E  EC2D  F007         	call	_setMotorPWM	;wreg free
  2181  000D22                     
  2182                           ;dc_motor.c: 213:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2183  000D22  0E09               	movlw	9
  2184  000D24  6E24               	movwf	(??_turnLeft+1)^0,c
  2185  000D26  0E1E               	movlw	30
  2186  000D28  6E23               	movwf	??_turnLeft^0,c
  2187  000D2A  0EE4               	movlw	228
  2188  000D2C                     u3397:
  2189  000D2C  2EE8               	decfsz	wreg,f,c
  2190  000D2E  D7FE               	bra	u3397
  2191  000D30  2E23               	decfsz	??_turnLeft^0,f,c
  2192  000D32  D7FC               	bra	u3397
  2193  000D34  2E24               	decfsz	(??_turnLeft+1)^0,f,c
  2194  000D36  D7FA               	bra	u3397
  2195  000D38  D000               	nop2	
  2196  000D3A                     l224:
  2197                           
  2198                           ;dc_motor.c: 202:         while(((mL->power)<50) || ((mR->power)<50)){
  2199  000D3A  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2200  000D3E  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2201  000D42  0E31               	movlw	49
  2202  000D44  64DF               	cpfsgt	indf2,c
  2203  000D46  EFA7  F006         	goto	u2561
  2204  000D4A  EFA9  F006         	goto	u2560
  2205  000D4E                     u2561:
  2206  000D4E  EF54  F006         	goto	l2731
  2207  000D52                     u2560:
  2208  000D52  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2209  000D56  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2210  000D5A  0E31               	movlw	49
  2211  000D5C  64DF               	cpfsgt	indf2,c
  2212  000D5E  EFB3  F006         	goto	u2571
  2213  000D62  EFB5  F006         	goto	u2570
  2214  000D66                     u2571:
  2215  000D66  EF54  F006         	goto	l2731
  2216  000D6A                     u2570:
  2217  000D6A                     
  2218                           ;dc_motor.c: 216:         LATFbits.LATF0 = 0;
  2219  000D6A  907E               	bcf	126,0,c	;volatile
  2220                           
  2221                           ;dc_motor.c: 218:     } else {
  2222  000D6C  EF2C  F007         	goto	l235
  2223  000D70                     l2749:
  2224                           
  2225                           ;dc_motor.c: 220:         mL->direction = 1;
  2226  000D70  EE20 F001          	lfsr	2,1
  2227  000D74  501E               	movf	turnLeft@mL^0,w,c
  2228  000D76  26D9               	addwf	fsr2l,f,c
  2229  000D78  501F               	movf	(turnLeft@mL+1)^0,w,c
  2230  000D7A  22DA               	addwfc	fsr2h,f,c
  2231  000D7C  0E01               	movlw	1
  2232  000D7E  6EDF               	movwf	indf2,c
  2233                           
  2234                           ;dc_motor.c: 221:         mR->direction = 0;
  2235  000D80  EE20 F001          	lfsr	2,1
  2236  000D84  5020               	movf	turnLeft@mR^0,w,c
  2237  000D86  26D9               	addwf	fsr2l,f,c
  2238  000D88  5021               	movf	(turnLeft@mR+1)^0,w,c
  2239  000D8A  22DA               	addwfc	fsr2h,f,c
  2240  000D8C  0E00               	movlw	0
  2241  000D8E  6EDF               	movwf	indf2,c
  2242                           
  2243                           ;dc_motor.c: 224:         while(((mL->power)<50) || ((mR->power)<50)){
  2244  000D90  EF13  F007         	goto	l230
  2245  000D94                     l2751:
  2246                           
  2247                           ;dc_motor.c: 226:             LATHbits.LATH0 = !LATHbits.LATH0;
  2248  000D94  A080               	btfss	128,0,c	;volatile
  2249  000D96  EFCF  F006         	goto	u2581
  2250  000D9A  EFD3  F006         	goto	u2580
  2251  000D9E                     u2581:
  2252  000D9E  6A23               	clrf	??_turnLeft^0,c
  2253  000DA0  2A23               	incf	??_turnLeft^0,f,c
  2254  000DA2  EFD4  F006         	goto	u2598
  2255  000DA6                     u2580:
  2256  000DA6  6A23               	clrf	??_turnLeft^0,c
  2257  000DA8                     u2598:
  2258  000DA8  5080               	movf	128,w,c	;volatile
  2259  000DAA  1823               	xorwf	??_turnLeft^0,w,c
  2260  000DAC  0BFE               	andlw	-2
  2261  000DAE  1823               	xorwf	??_turnLeft^0,w,c
  2262  000DB0  6E80               	movwf	128,c	;volatile
  2263  000DB2                     
  2264                           ;dc_motor.c: 229:             if (mL->power<50) {mL->power+=1;}
  2265  000DB2  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2266  000DB6  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2267  000DBA  0E32               	movlw	50
  2268  000DBC  60DF               	cpfslt	indf2,c
  2269  000DBE  EFE3  F006         	goto	u2601
  2270  000DC2  EFE5  F006         	goto	u2600
  2271  000DC6                     u2601:
  2272  000DC6  EFEA  F006         	goto	l2757
  2273  000DCA                     u2600:
  2274  000DCA  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2275  000DCE  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2276  000DD2  2ADF               	incf	indf2,f,c
  2277  000DD4                     l2757:
  2278                           
  2279                           ;dc_motor.c: 230:             if (mR->power<50) {mR->power+=1;}
  2280  000DD4  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2281  000DD8  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2282  000DDC  0E32               	movlw	50
  2283  000DDE  60DF               	cpfslt	indf2,c
  2284  000DE0  EFF4  F006         	goto	u2611
  2285  000DE4  EFF6  F006         	goto	u2610
  2286  000DE8                     u2611:
  2287  000DE8  EFFB  F006         	goto	l2761
  2288  000DEC                     u2610:
  2289  000DEC  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2290  000DF0  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2291  000DF4  2ADF               	incf	indf2,f,c
  2292  000DF6                     l2761:
  2293                           
  2294                           ;dc_motor.c: 233:             setMotorPWM(mL);
  2295  000DF6  C01E  F013         	movff	turnLeft@mL,setMotorPWM@m
  2296  000DFA  C01F  F014         	movff	turnLeft@mL+1,setMotorPWM@m+1
  2297  000DFE  EC2D  F007         	call	_setMotorPWM	;wreg free
  2298  000E02                     
  2299                           ;dc_motor.c: 234:             setMotorPWM(mR);
  2300  000E02  C020  F013         	movff	turnLeft@mR,setMotorPWM@m
  2301  000E06  C021  F014         	movff	turnLeft@mR+1,setMotorPWM@m+1
  2302  000E0A  EC2D  F007         	call	_setMotorPWM	;wreg free
  2303  000E0E                     
  2304                           ;dc_motor.c: 235:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2305  000E0E  0E09               	movlw	9
  2306  000E10  6E24               	movwf	(??_turnLeft+1)^0,c
  2307  000E12  0E1E               	movlw	30
  2308  000E14  6E23               	movwf	??_turnLeft^0,c
  2309  000E16  0EE4               	movlw	228
  2310  000E18                     u3407:
  2311  000E18  2EE8               	decfsz	wreg,f,c
  2312  000E1A  D7FE               	bra	u3407
  2313  000E1C  2E23               	decfsz	??_turnLeft^0,f,c
  2314  000E1E  D7FC               	bra	u3407
  2315  000E20  2E24               	decfsz	(??_turnLeft+1)^0,f,c
  2316  000E22  D7FA               	bra	u3407
  2317  000E24  D000               	nop2	
  2318  000E26                     l230:
  2319                           
  2320                           ;dc_motor.c: 224:         while(((mL->power)<50) || ((mR->power)<50)){
  2321  000E26  C01E  FFD9         	movff	turnLeft@mL,fsr2l
  2322  000E2A  C01F  FFDA         	movff	turnLeft@mL+1,fsr2h
  2323  000E2E  0E31               	movlw	49
  2324  000E30  64DF               	cpfsgt	indf2,c
  2325  000E32  EF1D  F007         	goto	u2621
  2326  000E36  EF1F  F007         	goto	u2620
  2327  000E3A                     u2621:
  2328  000E3A  EFCA  F006         	goto	l2751
  2329  000E3E                     u2620:
  2330  000E3E  C020  FFD9         	movff	turnLeft@mR,fsr2l
  2331  000E42  C021  FFDA         	movff	turnLeft@mR+1,fsr2h
  2332  000E46  0E31               	movlw	49
  2333  000E48  64DF               	cpfsgt	indf2,c
  2334  000E4A  EF29  F007         	goto	u2631
  2335  000E4E  EF2B  F007         	goto	u2630
  2336  000E52                     u2631:
  2337  000E52  EFCA  F006         	goto	l2751
  2338  000E56                     u2630:
  2339  000E56                     
  2340                           ;dc_motor.c: 238:         LATHbits.LATH0 = 0;
  2341  000E56  9080               	bcf	128,0,c	;volatile
  2342  000E58                     l235:
  2343  000E58  0012               	return		;funcret
  2344  000E5A                     __end_of_turnLeft:
  2345                           	callstack 0
  2346                           
  2347 ;; *************** function _stop *****************
  2348 ;; Defined at:
  2349 ;;		line 172 in file "dc_motor.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  mL              2   29[COMRAM] PTR struct .
  2352 ;;		 -> main@motorL(9), 
  2353 ;;  mR              2   31[COMRAM] PTR struct .
  2354 ;;		 -> main@motorR(9), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;Total ram usage:        6 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 7
  2373 ;; This function calls:
  2374 ;;		_setMotorPWM
  2375 ;; This function is called by:
  2376 ;;		_read_card
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text4
  2381  0014DE                     __ptext4:
  2382                           	callstack 0
  2383  0014DE                     _stop:
  2384                           	callstack 22
  2385  0014DE                     
  2386                           ;dc_motor.c: 172: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 173: {;dc_motor.c: 1
      +                          74:     LATDbits.LATD4 = 1;
  2387  0014DE  887C               	bsf	124,4,c	;volatile
  2388                           
  2389                           ;dc_motor.c: 177:     while(((mL->power)!=0) && ((mR->power)!=0)){
  2390  0014E0  EFA0  F00A         	goto	l2723
  2391  0014E4                     l2715:
  2392                           
  2393                           ;dc_motor.c: 178:         mL->power = mL->power - 10;
  2394  0014E4  C01E  FFD9         	movff	stop@mL,fsr2l
  2395  0014E8  C01F  FFDA         	movff	stop@mL+1,fsr2h
  2396  0014EC  50DF               	movf	indf2,w,c
  2397  0014EE  0FF6               	addlw	246
  2398  0014F0  C01E  FFD9         	movff	stop@mL,fsr2l
  2399  0014F4  C01F  FFDA         	movff	stop@mL+1,fsr2h
  2400  0014F8  6EDF               	movwf	indf2,c
  2401                           
  2402                           ;dc_motor.c: 179:         mR->power = mR->power - 10;
  2403  0014FA  C020  FFD9         	movff	stop@mR,fsr2l
  2404  0014FE  C021  FFDA         	movff	stop@mR+1,fsr2h
  2405  001502  50DF               	movf	indf2,w,c
  2406  001504  0FF6               	addlw	246
  2407  001506  C020  FFD9         	movff	stop@mR,fsr2l
  2408  00150A  C021  FFDA         	movff	stop@mR+1,fsr2h
  2409  00150E  6EDF               	movwf	indf2,c
  2410  001510                     
  2411                           ;dc_motor.c: 182:         setMotorPWM(mL);
  2412  001510  C01E  F013         	movff	stop@mL,setMotorPWM@m
  2413  001514  C01F  F014         	movff	stop@mL+1,setMotorPWM@m+1
  2414  001518  EC2D  F007         	call	_setMotorPWM	;wreg free
  2415  00151C                     
  2416                           ;dc_motor.c: 183:         setMotorPWM(mR);
  2417  00151C  C020  F013         	movff	stop@mR,setMotorPWM@m
  2418  001520  C021  F014         	movff	stop@mR+1,setMotorPWM@m+1
  2419  001524  EC2D  F007         	call	_setMotorPWM	;wreg free
  2420  001528                     
  2421                           ;dc_motor.c: 184:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2422  001528  0E09               	movlw	9
  2423  00152A  6E23               	movwf	(??_stop+1)^0,c
  2424  00152C  0E1E               	movlw	30
  2425  00152E  6E22               	movwf	??_stop^0,c
  2426  001530  0EE4               	movlw	228
  2427  001532                     u3417:
  2428  001532  2EE8               	decfsz	wreg,f,c
  2429  001534  D7FE               	bra	u3417
  2430  001536  2E22               	decfsz	??_stop^0,f,c
  2431  001538  D7FC               	bra	u3417
  2432  00153A  2E23               	decfsz	(??_stop+1)^0,f,c
  2433  00153C  D7FA               	bra	u3417
  2434  00153E  D000               	nop2	
  2435  001540                     l2723:
  2436                           
  2437                           ;dc_motor.c: 177:     while(((mL->power)!=0) && ((mR->power)!=0)){
  2438  001540  C01E  FFD9         	movff	stop@mL,fsr2l
  2439  001544  C01F  FFDA         	movff	stop@mL+1,fsr2h
  2440  001548  50DF               	movf	indf2,w,c
  2441  00154A  B4D8               	btfsc	status,2,c
  2442  00154C  EFAA  F00A         	goto	u2491
  2443  001550  EFAC  F00A         	goto	u2490
  2444  001554                     u2491:
  2445  001554  EFB8  F00A         	goto	l219
  2446  001558                     u2490:
  2447  001558  C020  FFD9         	movff	stop@mR,fsr2l
  2448  00155C  C021  FFDA         	movff	stop@mR+1,fsr2h
  2449  001560  50DF               	movf	indf2,w,c
  2450  001562  A4D8               	btfss	status,2,c
  2451  001564  EFB6  F00A         	goto	u2501
  2452  001568  EFB8  F00A         	goto	u2500
  2453  00156C                     u2501:
  2454  00156C  EF72  F00A         	goto	l2715
  2455  001570                     u2500:
  2456  001570                     l219:
  2457                           
  2458                           ;dc_motor.c: 187:     LATDbits.LATD4 = 0;
  2459  001570  987C               	bcf	124,4,c	;volatile
  2460  001572  0012               	return		;funcret
  2461  001574                     __end_of_stop:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function _reverse *****************
  2465 ;; Defined at:
  2466 ;;		line 151 in file "dc_motor.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  mL              2   29[COMRAM] PTR struct .
  2469 ;;		 -> main@motorL(9), 
  2470 ;;  mR              2   31[COMRAM] PTR struct .
  2471 ;;		 -> main@motorR(9), 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;Total ram usage:        6 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 7
  2490 ;; This function calls:
  2491 ;;		_setMotorPWM
  2492 ;; This function is called by:
  2493 ;;		_read_card
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text5
  2498  0013AA                     __ptext5:
  2499                           	callstack 0
  2500  0013AA                     _reverse:
  2501                           	callstack 22
  2502  0013AA                     
  2503                           ;dc_motor.c: 151: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_motor.c
      +                          : 154:     mL->direction = 0;
  2504  0013AA  EE20 F001          	lfsr	2,1
  2505  0013AE  501E               	movf	reverse@mL^0,w,c
  2506  0013B0  26D9               	addwf	fsr2l,f,c
  2507  0013B2  501F               	movf	(reverse@mL+1)^0,w,c
  2508  0013B4  22DA               	addwfc	fsr2h,f,c
  2509  0013B6  0E00               	movlw	0
  2510  0013B8  6EDF               	movwf	indf2,c
  2511                           
  2512                           ;dc_motor.c: 155:     mR->direction = 0;
  2513  0013BA  EE20 F001          	lfsr	2,1
  2514  0013BE  5020               	movf	reverse@mR^0,w,c
  2515  0013C0  26D9               	addwf	fsr2l,f,c
  2516  0013C2  5021               	movf	(reverse@mR+1)^0,w,c
  2517  0013C4  22DA               	addwfc	fsr2h,f,c
  2518  0013C6  0E00               	movlw	0
  2519  0013C8  6EDF               	movwf	indf2,c
  2520                           
  2521                           ;dc_motor.c: 158:     while(((mL->power)<100) && ((mR->power)<100)){
  2522  0013CA  EF09  F00A         	goto	l207
  2523  0013CE                     l2703:
  2524                           
  2525                           ;dc_motor.c: 159:         mL->power+=1;
  2526  0013CE  C01E  FFD9         	movff	reverse@mL,fsr2l
  2527  0013D2  C01F  FFDA         	movff	reverse@mL+1,fsr2h
  2528  0013D6  2ADF               	incf	indf2,f,c
  2529                           
  2530                           ;dc_motor.c: 160:         mR->power+=1;
  2531  0013D8  C020  FFD9         	movff	reverse@mR,fsr2l
  2532  0013DC  C021  FFDA         	movff	reverse@mR+1,fsr2h
  2533  0013E0  2ADF               	incf	indf2,f,c
  2534  0013E2                     
  2535                           ;dc_motor.c: 162:         setMotorPWM(mL);
  2536  0013E2  C01E  F013         	movff	reverse@mL,setMotorPWM@m
  2537  0013E6  C01F  F014         	movff	reverse@mL+1,setMotorPWM@m+1
  2538  0013EA  EC2D  F007         	call	_setMotorPWM	;wreg free
  2539  0013EE                     
  2540                           ;dc_motor.c: 163:         setMotorPWM(mR);
  2541  0013EE  C020  F013         	movff	reverse@mR,setMotorPWM@m
  2542  0013F2  C021  F014         	movff	reverse@mR+1,setMotorPWM@m+1
  2543  0013F6  EC2D  F007         	call	_setMotorPWM	;wreg free
  2544  0013FA                     
  2545                           ;dc_motor.c: 164:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2546  0013FA  0E09               	movlw	9
  2547  0013FC  6E23               	movwf	(??_reverse+1)^0,c
  2548  0013FE  0E1E               	movlw	30
  2549  001400  6E22               	movwf	??_reverse^0,c
  2550  001402  0EE4               	movlw	228
  2551  001404                     u3427:
  2552  001404  2EE8               	decfsz	wreg,f,c
  2553  001406  D7FE               	bra	u3427
  2554  001408  2E22               	decfsz	??_reverse^0,f,c
  2555  00140A  D7FC               	bra	u3427
  2556  00140C  2E23               	decfsz	(??_reverse+1)^0,f,c
  2557  00140E  D7FA               	bra	u3427
  2558  001410  D000               	nop2	
  2559  001412                     l207:
  2560                           
  2561                           ;dc_motor.c: 158:     while(((mL->power)<100) && ((mR->power)<100)){
  2562  001412  C01E  FFD9         	movff	reverse@mL,fsr2l
  2563  001416  C01F  FFDA         	movff	reverse@mL+1,fsr2h
  2564  00141A  0E64               	movlw	100
  2565  00141C  60DF               	cpfslt	indf2,c
  2566  00141E  EF13  F00A         	goto	u2471
  2567  001422  EF15  F00A         	goto	u2470
  2568  001426                     u2471:
  2569  001426  EF21  F00A         	goto	l212
  2570  00142A                     u2470:
  2571  00142A  C020  FFD9         	movff	reverse@mR,fsr2l
  2572  00142E  C021  FFDA         	movff	reverse@mR+1,fsr2h
  2573  001432  0E63               	movlw	99
  2574  001434  64DF               	cpfsgt	indf2,c
  2575  001436  EF1F  F00A         	goto	u2481
  2576  00143A  EF21  F00A         	goto	u2480
  2577  00143E                     u2481:
  2578  00143E  EFE7  F009         	goto	l2703
  2579  001442                     u2480:
  2580  001442                     l212:
  2581  001442  0012               	return		;funcret
  2582  001444                     __end_of_reverse:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function ___xxtofl *****************
  2586 ;; Defined at:
  2587 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  sign            1    wreg     unsigned char 
  2590 ;;  val             4    4[COMRAM] long 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  sign            1   12[COMRAM] unsigned char 
  2593 ;;  arg             4   14[COMRAM] unsigned long 
  2594 ;;  exp             1   13[COMRAM] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  4    4[COMRAM] unsigned char 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2604 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2605 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;Total ram usage:       14 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 5
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_read_card
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text6
  2619  00102E                     __ptext6:
  2620                           	callstack 0
  2621  00102E                     ___xxtofl:
  2622                           	callstack 24
  2623                           
  2624                           ;incstack = 0
  2625                           ;___xxtofl@sign stored from wreg
  2626  00102E  6E0D               	movwf	___xxtofl@sign^0,c
  2627  001030  500D               	movf	___xxtofl@sign^0,w,c
  2628  001032  B4D8               	btfsc	status,2,c
  2629  001034  EF1E  F008         	goto	u2851
  2630  001038  EF20  F008         	goto	u2850
  2631  00103C                     u2851:
  2632  00103C  EF42  F008         	goto	l1157
  2633  001040                     u2850:
  2634  001040  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  2635  001042  EF27  F008         	goto	u2860
  2636  001046  EF25  F008         	goto	u2861
  2637  00104A                     u2861:
  2638  00104A  EF42  F008         	goto	l1157
  2639  00104E                     u2860:
  2640  00104E  C005  F009         	movff	___xxtofl@val,??___xxtofl
  2641  001052  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  2642  001056  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  2643  00105A  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  2644  00105E  1E09               	comf	??___xxtofl^0,f,c
  2645  001060  1E0A               	comf	(??___xxtofl+1)^0,f,c
  2646  001062  1E0B               	comf	(??___xxtofl+2)^0,f,c
  2647  001064  1E0C               	comf	(??___xxtofl+3)^0,f,c
  2648  001066  2A09               	incf	??___xxtofl^0,f,c
  2649  001068  0E00               	movlw	0
  2650  00106A  220A               	addwfc	(??___xxtofl+1)^0,f,c
  2651  00106C  220B               	addwfc	(??___xxtofl+2)^0,f,c
  2652  00106E  220C               	addwfc	(??___xxtofl+3)^0,f,c
  2653  001070  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  2654  001074  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  2655  001078  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  2656  00107C  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  2657  001080  EF4A  F008         	goto	l2861
  2658  001084                     l1157:
  2659  001084  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  2660  001088  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2661  00108C  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2662  001090  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2663  001094                     l2861:
  2664  001094  5005               	movf	___xxtofl@val^0,w,c
  2665  001096  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  2666  001098  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  2667  00109A  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  2668  00109C  A4D8               	btfss	status,2,c
  2669  00109E  EF53  F008         	goto	u2871
  2670  0010A2  EF55  F008         	goto	u2870
  2671  0010A6                     u2871:
  2672  0010A6  EF5F  F008         	goto	l2867
  2673  0010AA                     u2870:
  2674  0010AA  0E00               	movlw	0
  2675  0010AC  6E05               	movwf	?___xxtofl^0,c
  2676  0010AE  0E00               	movlw	0
  2677  0010B0  6E06               	movwf	(?___xxtofl+1)^0,c
  2678  0010B2  0E00               	movlw	0
  2679  0010B4  6E07               	movwf	(?___xxtofl+2)^0,c
  2680  0010B6  0E00               	movlw	0
  2681  0010B8  6E08               	movwf	(?___xxtofl+3)^0,c
  2682  0010BA  EFF0  F008         	goto	l1160
  2683  0010BE                     l2867:
  2684  0010BE  0E96               	movlw	150
  2685  0010C0  6E0E               	movwf	___xxtofl@exp^0,c
  2686  0010C2  EF69  F008         	goto	l2871
  2687  0010C6                     l2869:
  2688  0010C6  2A0E               	incf	___xxtofl@exp^0,f,c
  2689  0010C8  90D8               	bcf	status,0,c
  2690  0010CA  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2691  0010CC  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2692  0010CE  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2693  0010D0  320F               	rrcf	___xxtofl@arg^0,f,c
  2694  0010D2                     l2871:
  2695  0010D2  0E00               	movlw	0
  2696  0010D4  140F               	andwf	___xxtofl@arg^0,w,c
  2697  0010D6  6E09               	movwf	??___xxtofl^0,c
  2698  0010D8  0E00               	movlw	0
  2699  0010DA  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2700  0010DC  6E0A               	movwf	(??___xxtofl+1)^0,c
  2701  0010DE  0E00               	movlw	0
  2702  0010E0  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2703  0010E2  6E0B               	movwf	(??___xxtofl+2)^0,c
  2704  0010E4  0EFE               	movlw	254
  2705  0010E6  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2706  0010E8  6E0C               	movwf	(??___xxtofl+3)^0,c
  2707  0010EA  5009               	movf	??___xxtofl^0,w,c
  2708  0010EC  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2709  0010EE  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2710  0010F0  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2711  0010F2  A4D8               	btfss	status,2,c
  2712  0010F4  EF7E  F008         	goto	u2881
  2713  0010F8  EF80  F008         	goto	u2880
  2714  0010FC                     u2881:
  2715  0010FC  EF63  F008         	goto	l2869
  2716  001100                     u2880:
  2717  001100  EF8E  F008         	goto	l1164
  2718  001104                     l2873:
  2719  001104  2A0E               	incf	___xxtofl@exp^0,f,c
  2720  001106  0E01               	movlw	1
  2721  001108  260F               	addwf	___xxtofl@arg^0,f,c
  2722  00110A  0E00               	movlw	0
  2723  00110C  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  2724  00110E  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  2725  001110  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  2726  001112  90D8               	bcf	status,0,c
  2727  001114  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2728  001116  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2729  001118  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2730  00111A  320F               	rrcf	___xxtofl@arg^0,f,c
  2731  00111C                     l1164:
  2732  00111C  0E00               	movlw	0
  2733  00111E  140F               	andwf	___xxtofl@arg^0,w,c
  2734  001120  6E09               	movwf	??___xxtofl^0,c
  2735  001122  0E00               	movlw	0
  2736  001124  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2737  001126  6E0A               	movwf	(??___xxtofl+1)^0,c
  2738  001128  0E00               	movlw	0
  2739  00112A  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2740  00112C  6E0B               	movwf	(??___xxtofl+2)^0,c
  2741  00112E  0EFF               	movlw	255
  2742  001130  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2743  001132  6E0C               	movwf	(??___xxtofl+3)^0,c
  2744  001134  5009               	movf	??___xxtofl^0,w,c
  2745  001136  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2746  001138  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2747  00113A  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2748  00113C  A4D8               	btfss	status,2,c
  2749  00113E  EFA3  F008         	goto	u2891
  2750  001142  EFA5  F008         	goto	u2890
  2751  001146                     u2891:
  2752  001146  EF82  F008         	goto	l2873
  2753  00114A                     u2890:
  2754  00114A  EFAD  F008         	goto	l2881
  2755  00114E                     l2879:
  2756  00114E  060E               	decf	___xxtofl@exp^0,f,c
  2757  001150  90D8               	bcf	status,0,c
  2758  001152  360F               	rlcf	___xxtofl@arg^0,f,c
  2759  001154  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  2760  001156  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  2761  001158  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  2762  00115A                     l2881:
  2763  00115A  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  2764  00115C  EFB2  F008         	goto	u2901
  2765  001160  EFB4  F008         	goto	u2900
  2766  001164                     u2901:
  2767  001164  EFBC  F008         	goto	l1171
  2768  001168                     u2900:
  2769  001168  0E02               	movlw	2
  2770  00116A  600E               	cpfslt	___xxtofl@exp^0,c
  2771  00116C  EFBA  F008         	goto	u2911
  2772  001170  EFBC  F008         	goto	u2910
  2773  001174                     u2911:
  2774  001174  EFA7  F008         	goto	l2879
  2775  001178                     u2910:
  2776  001178                     l1171:
  2777  001178  B00E               	btfsc	___xxtofl@exp^0,0,c
  2778  00117A  EFC1  F008         	goto	u2921
  2779  00117E  EFC3  F008         	goto	u2920
  2780  001182                     u2921:
  2781  001182  EFC4  F008         	goto	l2887
  2782  001186                     u2920:
  2783  001186  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  2784  001188                     l2887:
  2785  001188  90D8               	bcf	status,0,c
  2786  00118A  320E               	rrcf	___xxtofl@exp^0,f,c
  2787  00118C  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  2788  001190  6A0A               	clrf	(??___xxtofl+1)^0,c
  2789  001192  6A0B               	clrf	(??___xxtofl+2)^0,c
  2790  001194  6A0C               	clrf	(??___xxtofl+3)^0,c
  2791  001196  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  2792  00119A  6A0B               	clrf	(??___xxtofl+2)^0,c
  2793  00119C  6A0A               	clrf	(??___xxtofl+1)^0,c
  2794  00119E  6A09               	clrf	??___xxtofl^0,c
  2795  0011A0  5009               	movf	??___xxtofl^0,w,c
  2796  0011A2  120F               	iorwf	___xxtofl@arg^0,f,c
  2797  0011A4  500A               	movf	(??___xxtofl+1)^0,w,c
  2798  0011A6  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  2799  0011A8  500B               	movf	(??___xxtofl+2)^0,w,c
  2800  0011AA  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  2801  0011AC  500C               	movf	(??___xxtofl+3)^0,w,c
  2802  0011AE  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  2803  0011B0  500D               	movf	___xxtofl@sign^0,w,c
  2804  0011B2  B4D8               	btfsc	status,2,c
  2805  0011B4  EFDE  F008         	goto	u2931
  2806  0011B8  EFE0  F008         	goto	u2930
  2807  0011BC                     u2931:
  2808  0011BC  EFE8  F008         	goto	l2897
  2809  0011C0                     u2930:
  2810  0011C0  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  2811  0011C2  EFE7  F008         	goto	u2940
  2812  0011C6  EFE5  F008         	goto	u2941
  2813  0011CA                     u2941:
  2814  0011CA  EFE8  F008         	goto	l2897
  2815  0011CE                     u2940:
  2816  0011CE  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  2817  0011D0                     l2897:
  2818  0011D0  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  2819  0011D4  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  2820  0011D8  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  2821  0011DC  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  2822  0011E0                     l1160:
  2823  0011E0  0012               	return		;funcret
  2824  0011E2                     __end_of___xxtofl:
  2825                           	callstack 0
  2826                           
  2827 ;; *************** function ___lwdiv *****************
  2828 ;; Defined at:
  2829 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  dividend        2    4[COMRAM] unsigned int 
  2832 ;;  divisor         2    6[COMRAM] unsigned int 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  quotient        2    9[COMRAM] unsigned int 
  2835 ;;  counter         1    8[COMRAM] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  2    4[COMRAM] unsigned int 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2846 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2848 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;Total ram usage:        7 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 5
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_read_card
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text7
  2860  001574                     __ptext7:
  2861                           	callstack 0
  2862  001574                     ___lwdiv:
  2863                           	callstack 24
  2864  001574  0E00               	movlw	0
  2865  001576  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  2866  001578  0E00               	movlw	0
  2867  00157A  6E0A               	movwf	___lwdiv@quotient^0,c
  2868  00157C  5007               	movf	___lwdiv@divisor^0,w,c
  2869  00157E  1008               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2870  001580  B4D8               	btfsc	status,2,c
  2871  001582  EFC5  F00A         	goto	u2821
  2872  001586  EFC7  F00A         	goto	u2820
  2873  00158A                     u2821:
  2874  00158A  EFEF  F00A         	goto	l993
  2875  00158E                     u2820:
  2876  00158E  0E01               	movlw	1
  2877  001590  6E09               	movwf	___lwdiv@counter^0,c
  2878  001592  EFCF  F00A         	goto	l2841
  2879  001596                     l2839:
  2880  001596  90D8               	bcf	status,0,c
  2881  001598  3607               	rlcf	___lwdiv@divisor^0,f,c
  2882  00159A  3608               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2883  00159C  2A09               	incf	___lwdiv@counter^0,f,c
  2884  00159E                     l2841:
  2885  00159E  AE08               	btfss	(___lwdiv@divisor+1)^0,7,c
  2886  0015A0  EFD4  F00A         	goto	u2831
  2887  0015A4  EFD6  F00A         	goto	u2830
  2888  0015A8                     u2831:
  2889  0015A8  EFCB  F00A         	goto	l2839
  2890  0015AC                     u2830:
  2891  0015AC                     l2843:
  2892  0015AC  90D8               	bcf	status,0,c
  2893  0015AE  360A               	rlcf	___lwdiv@quotient^0,f,c
  2894  0015B0  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2895  0015B2  5007               	movf	___lwdiv@divisor^0,w,c
  2896  0015B4  5C05               	subwf	___lwdiv@dividend^0,w,c
  2897  0015B6  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  2898  0015B8  5806               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2899  0015BA  A0D8               	btfss	status,0,c
  2900  0015BC  EFE2  F00A         	goto	u2841
  2901  0015C0  EFE4  F00A         	goto	u2840
  2902  0015C4                     u2841:
  2903  0015C4  EFE9  F00A         	goto	l2851
  2904  0015C8                     u2840:
  2905  0015C8  5007               	movf	___lwdiv@divisor^0,w,c
  2906  0015CA  5E05               	subwf	___lwdiv@dividend^0,f,c
  2907  0015CC  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  2908  0015CE  5A06               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2909  0015D0  800A               	bsf	___lwdiv@quotient^0,0,c
  2910  0015D2                     l2851:
  2911  0015D2  90D8               	bcf	status,0,c
  2912  0015D4  3208               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2913  0015D6  3207               	rrcf	___lwdiv@divisor^0,f,c
  2914  0015D8  2E09               	decfsz	___lwdiv@counter^0,f,c
  2915  0015DA  EFD6  F00A         	goto	l2843
  2916  0015DE                     l993:
  2917  0015DE  C00A  F005         	movff	___lwdiv@quotient,?___lwdiv
  2918  0015E2  C00B  F006         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2919  0015E6  0012               	return		;funcret
  2920  0015E8                     __end_of___lwdiv:
  2921                           	callstack 0
  2922                           
  2923 ;; *************** function ___flge *****************
  2924 ;; Defined at:
  2925 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  ff1             4   18[COMRAM] unsigned int 
  2928 ;;  ff2             4   22[COMRAM] unsigned int 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;		None               void
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2940 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;Total ram usage:       12 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 5
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_read_card
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text8
  2955  0011E2                     __ptext8:
  2956                           	callstack 0
  2957  0011E2                     ___flge:
  2958                           	callstack 24
  2959  0011E2  0E00               	movlw	0
  2960  0011E4  1413               	andwf	___flge@ff1^0,w,c
  2961  0011E6  6E1B               	movwf	??___flge^0,c
  2962  0011E8  0E00               	movlw	0
  2963  0011EA  1414               	andwf	(___flge@ff1+1)^0,w,c
  2964  0011EC  6E1C               	movwf	(??___flge+1)^0,c
  2965  0011EE  0E80               	movlw	128
  2966  0011F0  1415               	andwf	(___flge@ff1+2)^0,w,c
  2967  0011F2  6E1D               	movwf	(??___flge+2)^0,c
  2968  0011F4  0E7F               	movlw	127
  2969  0011F6  1416               	andwf	(___flge@ff1+3)^0,w,c
  2970  0011F8  6E1E               	movwf	(??___flge+3)^0,c
  2971  0011FA  501B               	movf	??___flge^0,w,c
  2972  0011FC  101C               	iorwf	(??___flge+1)^0,w,c
  2973  0011FE  101D               	iorwf	(??___flge+2)^0,w,c
  2974  001200  101E               	iorwf	(??___flge+3)^0,w,c
  2975  001202  A4D8               	btfss	status,2,c
  2976  001204  EF06  F009         	goto	u2771
  2977  001208  EF08  F009         	goto	u2770
  2978  00120C                     u2771:
  2979  00120C  EF10  F009         	goto	l2815
  2980  001210                     u2770:
  2981  001210  0E00               	movlw	0
  2982  001212  6E13               	movwf	___flge@ff1^0,c
  2983  001214  0E00               	movlw	0
  2984  001216  6E14               	movwf	(___flge@ff1+1)^0,c
  2985  001218  0E00               	movlw	0
  2986  00121A  6E15               	movwf	(___flge@ff1+2)^0,c
  2987  00121C  0E00               	movlw	0
  2988  00121E  6E16               	movwf	(___flge@ff1+3)^0,c
  2989  001220                     l2815:
  2990  001220  0E00               	movlw	0
  2991  001222  1417               	andwf	___flge@ff2^0,w,c
  2992  001224  6E1B               	movwf	??___flge^0,c
  2993  001226  0E00               	movlw	0
  2994  001228  1418               	andwf	(___flge@ff2+1)^0,w,c
  2995  00122A  6E1C               	movwf	(??___flge+1)^0,c
  2996  00122C  0E80               	movlw	128
  2997  00122E  1419               	andwf	(___flge@ff2+2)^0,w,c
  2998  001230  6E1D               	movwf	(??___flge+2)^0,c
  2999  001232  0E7F               	movlw	127
  3000  001234  141A               	andwf	(___flge@ff2+3)^0,w,c
  3001  001236  6E1E               	movwf	(??___flge+3)^0,c
  3002  001238  501B               	movf	??___flge^0,w,c
  3003  00123A  101C               	iorwf	(??___flge+1)^0,w,c
  3004  00123C  101D               	iorwf	(??___flge+2)^0,w,c
  3005  00123E  101E               	iorwf	(??___flge+3)^0,w,c
  3006  001240  A4D8               	btfss	status,2,c
  3007  001242  EF25  F009         	goto	u2781
  3008  001246  EF27  F009         	goto	u2780
  3009  00124A                     u2781:
  3010  00124A  EF2F  F009         	goto	l2819
  3011  00124E                     u2780:
  3012  00124E  0E00               	movlw	0
  3013  001250  6E17               	movwf	___flge@ff2^0,c
  3014  001252  0E00               	movlw	0
  3015  001254  6E18               	movwf	(___flge@ff2+1)^0,c
  3016  001256  0E00               	movlw	0
  3017  001258  6E19               	movwf	(___flge@ff2+2)^0,c
  3018  00125A  0E00               	movlw	0
  3019  00125C  6E1A               	movwf	(___flge@ff2+3)^0,c
  3020  00125E                     l2819:
  3021  00125E  AE16               	btfss	(___flge@ff1+3)^0,7,c
  3022  001260  EF34  F009         	goto	u2791
  3023  001264  EF36  F009         	goto	u2790
  3024  001268                     u2791:
  3025  001268  EF3F  F009         	goto	l2823
  3026  00126C                     u2790:
  3027  00126C  6C13               	negf	___flge@ff1^0,c
  3028  00126E  1E14               	comf	(___flge@ff1+1)^0,f,c
  3029  001270  B0D8               	btfsc	status,0,c
  3030  001272  2A14               	incf	(___flge@ff1+1)^0,f,c
  3031  001274  1E15               	comf	(___flge@ff1+2)^0,f,c
  3032  001276  B0D8               	btfsc	status,0,c
  3033  001278  2A15               	incf	(___flge@ff1+2)^0,f,c
  3034  00127A  0E80               	movlw	128
  3035  00127C  5616               	subfwb	(___flge@ff1+3)^0,f,c
  3036  00127E                     l2823:
  3037  00127E  AE1A               	btfss	(___flge@ff2+3)^0,7,c
  3038  001280  EF44  F009         	goto	u2801
  3039  001284  EF46  F009         	goto	u2800
  3040  001288                     u2801:
  3041  001288  EF4F  F009         	goto	l767
  3042  00128C                     u2800:
  3043  00128C  6C17               	negf	___flge@ff2^0,c
  3044  00128E  1E18               	comf	(___flge@ff2+1)^0,f,c
  3045  001290  B0D8               	btfsc	status,0,c
  3046  001292  2A18               	incf	(___flge@ff2+1)^0,f,c
  3047  001294  1E19               	comf	(___flge@ff2+2)^0,f,c
  3048  001296  B0D8               	btfsc	status,0,c
  3049  001298  2A19               	incf	(___flge@ff2+2)^0,f,c
  3050  00129A  0E80               	movlw	128
  3051  00129C  561A               	subfwb	(___flge@ff2+3)^0,f,c
  3052  00129E                     l767:
  3053  00129E  0E00               	movlw	0
  3054  0012A0  1A13               	xorwf	___flge@ff1^0,f,c
  3055  0012A2  0E00               	movlw	0
  3056  0012A4  1A14               	xorwf	(___flge@ff1+1)^0,f,c
  3057  0012A6  0E00               	movlw	0
  3058  0012A8  1A15               	xorwf	(___flge@ff1+2)^0,f,c
  3059  0012AA  0E80               	movlw	128
  3060  0012AC  1A16               	xorwf	(___flge@ff1+3)^0,f,c
  3061  0012AE  0E00               	movlw	0
  3062  0012B0  1A17               	xorwf	___flge@ff2^0,f,c
  3063  0012B2  0E00               	movlw	0
  3064  0012B4  1A18               	xorwf	(___flge@ff2+1)^0,f,c
  3065  0012B6  0E00               	movlw	0
  3066  0012B8  1A19               	xorwf	(___flge@ff2+2)^0,f,c
  3067  0012BA  0E80               	movlw	128
  3068  0012BC  1A1A               	xorwf	(___flge@ff2+3)^0,f,c
  3069  0012BE  5017               	movf	___flge@ff2^0,w,c
  3070  0012C0  5C13               	subwf	___flge@ff1^0,w,c
  3071  0012C2  5018               	movf	(___flge@ff2+1)^0,w,c
  3072  0012C4  5814               	subwfb	(___flge@ff1+1)^0,w,c
  3073  0012C6  5019               	movf	(___flge@ff2+2)^0,w,c
  3074  0012C8  5815               	subwfb	(___flge@ff1+2)^0,w,c
  3075  0012CA  501A               	movf	(___flge@ff2+3)^0,w,c
  3076  0012CC  5816               	subwfb	(___flge@ff1+3)^0,w,c
  3077  0012CE  B0D8               	btfsc	status,0,c
  3078  0012D0  EF6C  F009         	goto	u2811
  3079  0012D4  EF6E  F009         	goto	u2810
  3080  0012D8                     u2811:
  3081  0012D8  EF71  F009         	goto	l2829
  3082  0012DC                     u2810:
  3083  0012DC  90D8               	bcf	status,0,c
  3084  0012DE  EF72  F009         	goto	l772
  3085  0012E2                     l2829:
  3086  0012E2  80D8               	bsf	status,0,c
  3087  0012E4                     l772:
  3088  0012E4  0012               	return		;funcret
  3089  0012E6                     __end_of___flge:
  3090                           	callstack 0
  3091                           
  3092 ;; *************** function _interrupts_init *****************
  3093 ;; Defined at:
  3094 ;;		line 18 in file "interrupts.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3112 ;;Total ram usage:        1 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 8
  3115 ;; This function calls:
  3116 ;;		_colorclick_writetoaddr
  3117 ;;		_interrupts_clear
  3118 ;; This function is called by:
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text9
  3124  0015E8                     __ptext9:
  3125                           	callstack 0
  3126  0015E8                     _interrupts_init:
  3127                           	callstack 22
  3128  0015E8                     
  3129                           ;interrupts.c: 19:     TRISBbits.TRISB1 = 1;
  3130  0015E8  8282               	bsf	130,1,c	;volatile
  3131                           
  3132                           ;interrupts.c: 20:     ANSELBbits.ANSELB1 = 0;
  3133  0015EA  010E               	movlb	14	; () banked
  3134  0015EC  939A               	bcf	154,1,b	;volatile
  3135  0015EE                     
  3136                           ; BSR set to: 14
  3137                           ;interrupts.c: 21:     INT1PPS=0x09;
  3138  0015EE  0E09               	movlw	9
  3139  0015F0  010D               	movlb	13	; () banked
  3140  0015F2  6FF1               	movwf	241,b	;volatile
  3141  0015F4                     
  3142                           ; BSR set to: 13
  3143                           ;interrupts.c: 23:     PIE0bits.INT1IE = 1;
  3144  0015F4  010E               	movlb	14	; () banked
  3145  0015F6  8329               	bsf	41,1,b	;volatile
  3146  0015F8                     
  3147                           ; BSR set to: 14
  3148                           ;interrupts.c: 26:     IPR0bits.INT1IP = 1;
  3149  0015F8  831F               	bsf	31,1,b	;volatile
  3150  0015FA                     
  3151                           ; BSR set to: 14
  3152                           ;interrupts.c: 29:     interrupts_clear();
  3153  0015FA  EC22  F00D         	call	_interrupts_clear	;wreg free
  3154  0015FE                     
  3155                           ;interrupts.c: 30:     colorclick_writetoaddr(0x00, 0b10011);
  3156  0015FE  0E13               	movlw	19
  3157  001600  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3158  001602  0E00               	movlw	0
  3159  001604  ECE9  F00C         	call	_colorclick_writetoaddr
  3160  001608                     
  3161                           ;interrupts.c: 31:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3162  001608  0E3F               	movlw	63
  3163  00160A  6E09               	movwf	??_interrupts_init^0,c
  3164  00160C  0E55               	movlw	85
  3165  00160E                     u3437:
  3166  00160E  2EE8               	decfsz	wreg,f,c
  3167  001610  D7FE               	bra	u3437
  3168  001612  2E09               	decfsz	??_interrupts_init^0,f,c
  3169  001614  D7FC               	bra	u3437
  3170  001616  F000               	nop	
  3171  001618                     
  3172                           ;interrupts.c: 32:     colorclick_writetoaddr(0x0C, 0b0100);
  3173  001618  0E04               	movlw	4
  3174  00161A  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3175  00161C  0E0C               	movlw	12
  3176  00161E  ECE9  F00C         	call	_colorclick_writetoaddr
  3177  001622                     
  3178                           ;interrupts.c: 33:     colorclick_writetoaddr(0x04, 0x14);
  3179  001622  0E14               	movlw	20
  3180  001624  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3181  001626  0E04               	movlw	4
  3182  001628  ECE9  F00C         	call	_colorclick_writetoaddr
  3183  00162C                     
  3184                           ;interrupts.c: 34:     colorclick_writetoaddr(0x05, 0x05);
  3185  00162C  0E05               	movlw	5
  3186  00162E  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3187  001630  0E05               	movlw	5
  3188  001632  ECE9  F00C         	call	_colorclick_writetoaddr
  3189  001636                     
  3190                           ;interrupts.c: 35:     colorclick_writetoaddr(0x06, 0x6C);
  3191  001636  0E6C               	movlw	108
  3192  001638  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3193  00163A  0E06               	movlw	6
  3194  00163C  ECE9  F00C         	call	_colorclick_writetoaddr
  3195  001640                     
  3196                           ;interrupts.c: 36:     colorclick_writetoaddr(0x07, 0x07);
  3197  001640  0E07               	movlw	7
  3198  001642  6E07               	movwf	colorclick_writetoaddr@value^0,c
  3199  001644  0E07               	movlw	7
  3200  001646  ECE9  F00C         	call	_colorclick_writetoaddr
  3201  00164A                     
  3202                           ;interrupts.c: 38:     INTCONbits.IPEN = 1;
  3203  00164A  8AF2               	bsf	242,5,c	;volatile
  3204  00164C                     
  3205                           ;interrupts.c: 39:     INTCONbits.INT1EDG = 0;
  3206  00164C  92F2               	bcf	242,1,c	;volatile
  3207  00164E                     
  3208                           ;interrupts.c: 40:     INTCONbits.PEIE = 1;
  3209  00164E  8CF2               	bsf	242,6,c	;volatile
  3210  001650                     
  3211                           ;interrupts.c: 41:     INTCONbits.GIE = 1;
  3212  001650  8EF2               	bsf	242,7,c	;volatile
  3213  001652  0012               	return		;funcret
  3214  001654                     __end_of_interrupts_init:
  3215                           	callstack 0
  3216                           
  3217 ;; *************** function _interrupts_clear *****************
  3218 ;; Defined at:
  3219 ;;		line 47 in file "interrupts.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2, status,0, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3237 ;;Total ram usage:        0 bytes
  3238 ;; Hardware stack levels used: 1
  3239 ;; Hardware stack levels required when called: 7
  3240 ;; This function calls:
  3241 ;;		_I2C_2_Master_Start
  3242 ;;		_I2C_2_Master_Stop
  3243 ;;		_I2C_2_Master_Write
  3244 ;; This function is called by:
  3245 ;;		_interrupts_init
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text10
  3250  001A44                     __ptext10:
  3251                           	callstack 0
  3252  001A44                     _interrupts_clear:
  3253                           	callstack 22
  3254  001A44                     
  3255                           ;interrupts.c: 48:     I2C_2_Master_Start();
  3256  001A44  EC5F  F00D         	call	_I2C_2_Master_Start	;wreg free
  3257                           
  3258                           ;interrupts.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  3259  001A48  0E52               	movlw	82
  3260  001A4A  EC43  F00D         	call	_I2C_2_Master_Write
  3261                           
  3262                           ;interrupts.c: 50:     I2C_2_Master_Write(0b11100110);
  3263  001A4E  0EE6               	movlw	230
  3264  001A50  EC43  F00D         	call	_I2C_2_Master_Write
  3265                           
  3266                           ;interrupts.c: 51:     I2C_2_Master_Stop();
  3267  001A54  EC5A  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3268  001A58  0012               	return		;funcret
  3269  001A5A                     __end_of_interrupts_clear:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _forward *****************
  3273 ;; Defined at:
  3274 ;;		line 130 in file "dc_motor.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  mL              2   29[COMRAM] PTR struct .
  3277 ;;		 -> main@motorL(9), 
  3278 ;;  mR              2   31[COMRAM] PTR struct .
  3279 ;;		 -> main@motorR(9), 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;Total ram usage:        6 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 7
  3298 ;; This function calls:
  3299 ;;		_setMotorPWM
  3300 ;; This function is called by:
  3301 ;;		_main
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text11
  3306  001444                     __ptext11:
  3307                           	callstack 0
  3308  001444                     _forward:
  3309                           	callstack 23
  3310  001444                     
  3311                           ;dc_motor.c: 130: void forward(DC_motor *mL, DC_motor *mR);dc_motor.c: 131: {;dc_motor.c
      +                          : 133:     mL->direction = 1;
  3312  001444  EE20 F001          	lfsr	2,1
  3313  001448  501E               	movf	forward@mL^0,w,c
  3314  00144A  26D9               	addwf	fsr2l,f,c
  3315  00144C  501F               	movf	(forward@mL+1)^0,w,c
  3316  00144E  22DA               	addwfc	fsr2h,f,c
  3317  001450  0E01               	movlw	1
  3318  001452  6EDF               	movwf	indf2,c
  3319                           
  3320                           ;dc_motor.c: 134:     mR->direction = 1;
  3321  001454  EE20 F001          	lfsr	2,1
  3322  001458  5020               	movf	forward@mR^0,w,c
  3323  00145A  26D9               	addwf	fsr2l,f,c
  3324  00145C  5021               	movf	(forward@mR+1)^0,w,c
  3325  00145E  22DA               	addwfc	fsr2h,f,c
  3326  001460  0E01               	movlw	1
  3327  001462  6EDF               	movwf	indf2,c
  3328                           
  3329                           ;dc_motor.c: 137:     while(((mL->power)<100) && ((mR->power)<100)){
  3330  001464  EF56  F00A         	goto	l199
  3331  001468                     l2903:
  3332                           
  3333                           ;dc_motor.c: 138:         mL->power+=1;
  3334  001468  C01E  FFD9         	movff	forward@mL,fsr2l
  3335  00146C  C01F  FFDA         	movff	forward@mL+1,fsr2h
  3336  001470  2ADF               	incf	indf2,f,c
  3337                           
  3338                           ;dc_motor.c: 139:         mR->power+=1;
  3339  001472  C020  FFD9         	movff	forward@mR,fsr2l
  3340  001476  C021  FFDA         	movff	forward@mR+1,fsr2h
  3341  00147A  2ADF               	incf	indf2,f,c
  3342  00147C                     
  3343                           ;dc_motor.c: 141:         setMotorPWM(mL);
  3344  00147C  C01E  F013         	movff	forward@mL,setMotorPWM@m
  3345  001480  C01F  F014         	movff	forward@mL+1,setMotorPWM@m+1
  3346  001484  EC2D  F007         	call	_setMotorPWM	;wreg free
  3347  001488                     
  3348                           ;dc_motor.c: 142:         setMotorPWM(mR);
  3349  001488  C020  F013         	movff	forward@mR,setMotorPWM@m
  3350  00148C  C021  F014         	movff	forward@mR+1,setMotorPWM@m+1
  3351  001490  EC2D  F007         	call	_setMotorPWM	;wreg free
  3352  001494                     
  3353                           ;dc_motor.c: 143:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3354  001494  0E09               	movlw	9
  3355  001496  6E23               	movwf	(??_forward+1)^0,c
  3356  001498  0E1E               	movlw	30
  3357  00149A  6E22               	movwf	??_forward^0,c
  3358  00149C  0EE4               	movlw	228
  3359  00149E                     u3447:
  3360  00149E  2EE8               	decfsz	wreg,f,c
  3361  0014A0  D7FE               	bra	u3447
  3362  0014A2  2E22               	decfsz	??_forward^0,f,c
  3363  0014A4  D7FC               	bra	u3447
  3364  0014A6  2E23               	decfsz	(??_forward+1)^0,f,c
  3365  0014A8  D7FA               	bra	u3447
  3366  0014AA  D000               	nop2	
  3367  0014AC                     l199:
  3368                           
  3369                           ;dc_motor.c: 137:     while(((mL->power)<100) && ((mR->power)<100)){
  3370  0014AC  C01E  FFD9         	movff	forward@mL,fsr2l
  3371  0014B0  C01F  FFDA         	movff	forward@mL+1,fsr2h
  3372  0014B4  0E64               	movlw	100
  3373  0014B6  60DF               	cpfslt	indf2,c
  3374  0014B8  EF60  F00A         	goto	u2951
  3375  0014BC  EF62  F00A         	goto	u2950
  3376  0014C0                     u2951:
  3377  0014C0  EF6E  F00A         	goto	l204
  3378  0014C4                     u2950:
  3379  0014C4  C020  FFD9         	movff	forward@mR,fsr2l
  3380  0014C8  C021  FFDA         	movff	forward@mR+1,fsr2h
  3381  0014CC  0E63               	movlw	99
  3382  0014CE  64DF               	cpfsgt	indf2,c
  3383  0014D0  EF6C  F00A         	goto	u2961
  3384  0014D4  EF6E  F00A         	goto	u2960
  3385  0014D8                     u2961:
  3386  0014D8  EF34  F00A         	goto	l2903
  3387  0014DC                     u2960:
  3388  0014DC                     l204:
  3389  0014DC  0012               	return		;funcret
  3390  0014DE                     __end_of_forward:
  3391                           	callstack 0
  3392                           
  3393 ;; *************** function _setMotorPWM *****************
  3394 ;; Defined at:
  3395 ;;		line 52 in file "dc_motor.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  m               2   18[COMRAM] PTR struct .
  3398 ;;		 -> main@motorR(9), main@motorL(9), 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  PWMduty         2   27[COMRAM] int 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3411 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3414 ;;Total ram usage:       11 bytes
  3415 ;; Hardware stack levels used: 1
  3416 ;; Hardware stack levels required when called: 6
  3417 ;; This function calls:
  3418 ;;		___awdiv
  3419 ;;		___wmul
  3420 ;; This function is called by:
  3421 ;;		_forward
  3422 ;;		_reverse
  3423 ;;		_stop
  3424 ;;		_turnLeft
  3425 ;;		_turnRight
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text12
  3430  000E5A                     __ptext12:
  3431                           	callstack 0
  3432  000E5A                     _setMotorPWM:
  3433                           	callstack 22
  3434  000E5A                     
  3435                           ;dc_motor.c: 52: void setMotorPWM(DC_motor *m);dc_motor.c: 53: {;dc_motor.c: 54:  int PW
      +                          Mduty;;dc_motor.c: 56:  if (m->direction){
  3436  000E5A  EE20 F001          	lfsr	2,1
  3437  000E5E  5013               	movf	setMotorPWM@m^0,w,c
  3438  000E60  26D9               	addwf	fsr2l,f,c
  3439  000E62  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3440  000E64  22DA               	addwfc	fsr2h,f,c
  3441  000E66  50DF               	movf	indf2,w,c
  3442  000E68  B4D8               	btfsc	status,2,c
  3443  000E6A  EF39  F007         	goto	u2431
  3444  000E6E  EF3B  F007         	goto	u2430
  3445  000E72                     u2431:
  3446  000E72  EF6C  F007         	goto	l2691
  3447  000E76                     u2430:
  3448  000E76                     
  3449                           ;dc_motor.c: 57:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  3450  000E76  C013  FFD9         	movff	setMotorPWM@m,fsr2l
  3451  000E7A  C014  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3452  000E7E  50DF               	movf	indf2,w,c
  3453  000E80  6E15               	movwf	??_setMotorPWM^0,c
  3454  000E82  5015               	movf	??_setMotorPWM^0,w,c
  3455  000E84  6E05               	movwf	___wmul@multiplier^0,c
  3456  000E86  6A06               	clrf	(___wmul@multiplier+1)^0,c
  3457  000E88  EE20 F007          	lfsr	2,7
  3458  000E8C  5013               	movf	setMotorPWM@m^0,w,c
  3459  000E8E  26D9               	addwf	fsr2l,f,c
  3460  000E90  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3461  000E92  22DA               	addwfc	fsr2h,f,c
  3462  000E94  CFDE F007          	movff	postinc2,___wmul@multiplicand
  3463  000E98  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  3464  000E9C  ECB4  F00C         	call	___wmul	;wreg free
  3465  000EA0  C005  F00B         	movff	?___wmul,___awdiv@dividend
  3466  000EA4  C006  F00C         	movff	?___wmul+1,___awdiv@dividend+1
  3467  000EA8  0E00               	movlw	0
  3468  000EAA  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  3469  000EAC  0E64               	movlw	100
  3470  000EAE  6E0D               	movwf	___awdiv@divisor^0,c
  3471  000EB0  EC73  F009         	call	___awdiv	;wreg free
  3472  000EB4  EE20 F007          	lfsr	2,7
  3473  000EB8  5013               	movf	setMotorPWM@m^0,w,c
  3474  000EBA  26D9               	addwf	fsr2l,f,c
  3475  000EBC  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3476  000EBE  22DA               	addwfc	fsr2h,f,c
  3477  000EC0  CFDE F016          	movff	postinc2,??_setMotorPWM+1
  3478  000EC4  CFDD F017          	movff	postdec2,??_setMotorPWM+2
  3479  000EC8  500B               	movf	?___awdiv^0,w,c
  3480  000ECA  5C16               	subwf	(??_setMotorPWM+1)^0,w,c
  3481  000ECC  6E1C               	movwf	setMotorPWM@PWMduty^0,c
  3482  000ECE  500C               	movf	(?___awdiv+1)^0,w,c
  3483  000ED0  5817               	subwfb	(??_setMotorPWM+2)^0,w,c
  3484  000ED2  6E1D               	movwf	(setMotorPWM@PWMduty+1)^0,c
  3485                           
  3486                           ;dc_motor.c: 58:  } else {
  3487  000ED4  EF8F  F007         	goto	l2693
  3488  000ED8                     l2691:
  3489                           
  3490                           ;dc_motor.c: 59:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  3491  000ED8  C013  FFD9         	movff	setMotorPWM@m,fsr2l
  3492  000EDC  C014  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3493  000EE0  50DF               	movf	indf2,w,c
  3494  000EE2  6E15               	movwf	??_setMotorPWM^0,c
  3495  000EE4  5015               	movf	??_setMotorPWM^0,w,c
  3496  000EE6  6E05               	movwf	___wmul@multiplier^0,c
  3497  000EE8  6A06               	clrf	(___wmul@multiplier+1)^0,c
  3498  000EEA  EE20 F007          	lfsr	2,7
  3499  000EEE  5013               	movf	setMotorPWM@m^0,w,c
  3500  000EF0  26D9               	addwf	fsr2l,f,c
  3501  000EF2  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3502  000EF4  22DA               	addwfc	fsr2h,f,c
  3503  000EF6  CFDE F007          	movff	postinc2,___wmul@multiplicand
  3504  000EFA  CFDD F008          	movff	postdec2,___wmul@multiplicand+1
  3505  000EFE  ECB4  F00C         	call	___wmul	;wreg free
  3506  000F02  C005  F00B         	movff	?___wmul,___awdiv@dividend
  3507  000F06  C006  F00C         	movff	?___wmul+1,___awdiv@dividend+1
  3508  000F0A  0E00               	movlw	0
  3509  000F0C  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  3510  000F0E  0E64               	movlw	100
  3511  000F10  6E0D               	movwf	___awdiv@divisor^0,c
  3512  000F12  EC73  F009         	call	___awdiv	;wreg free
  3513  000F16  C00B  F01C         	movff	?___awdiv,setMotorPWM@PWMduty
  3514  000F1A  C00C  F01D         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  3515  000F1E                     l2693:
  3516                           
  3517                           ;dc_motor.c: 62:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  3518  000F1E  EE20 F002          	lfsr	2,2
  3519  000F22  5013               	movf	setMotorPWM@m^0,w,c
  3520  000F24  26D9               	addwf	fsr2l,f,c
  3521  000F26  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3522  000F28  22DA               	addwfc	fsr2h,f,c
  3523  000F2A  CFDE F015          	movff	postinc2,??_setMotorPWM
  3524  000F2E  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  3525  000F32  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  3526  000F36  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3527  000F3A  C01C  FFDF         	movff	setMotorPWM@PWMduty,indf2
  3528  000F3E                     
  3529                           ;dc_motor.c: 64:  if (m->direction){
  3530  000F3E  EE20 F001          	lfsr	2,1
  3531  000F42  5013               	movf	setMotorPWM@m^0,w,c
  3532  000F44  26D9               	addwf	fsr2l,f,c
  3533  000F46  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3534  000F48  22DA               	addwfc	fsr2h,f,c
  3535  000F4A  50DF               	movf	indf2,w,c
  3536  000F4C  B4D8               	btfsc	status,2,c
  3537  000F4E  EFAB  F007         	goto	u2441
  3538  000F52  EFAD  F007         	goto	u2440
  3539  000F56                     u2441:
  3540  000F56  EFE2  F007         	goto	l2699
  3541  000F5A                     u2440:
  3542  000F5A                     
  3543                           ;dc_motor.c: 65:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
  3544  000F5A  EE20 F004          	lfsr	2,4
  3545  000F5E  5013               	movf	setMotorPWM@m^0,w,c
  3546  000F60  26D9               	addwf	fsr2l,f,c
  3547  000F62  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3548  000F64  22DA               	addwfc	fsr2h,f,c
  3549  000F66  CFDE F015          	movff	postinc2,??_setMotorPWM
  3550  000F6A  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  3551  000F6E  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  3552  000F72  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3553  000F76  EE10 F004          	lfsr	1,4
  3554  000F7A  5013               	movf	setMotorPWM@m^0,w,c
  3555  000F7C  26E1               	addwf	fsr1l,f,c
  3556  000F7E  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3557  000F80  22E2               	addwfc	fsr1h,f,c
  3558  000F82  CFE6 F017          	movff	postinc1,??_setMotorPWM+2
  3559  000F86  CFE5 F018          	movff	postdec1,??_setMotorPWM+3
  3560  000F8A  C017  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3561  000F8E  C018  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3562  000F92  50E7               	movf	indf1,w,c
  3563  000F94  6E19               	movwf	(??_setMotorPWM+4)^0,c
  3564  000F96  EE10 F006          	lfsr	1,6
  3565  000F9A  5013               	movf	setMotorPWM@m^0,w,c
  3566  000F9C  26E1               	addwf	fsr1l,f,c
  3567  000F9E  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3568  000FA0  22E2               	addwfc	fsr1h,f,c
  3569  000FA2  50E7               	movf	indf1,w,c
  3570  000FA4  6E1A               	movwf	(??_setMotorPWM+5)^0,c
  3571  000FA6  0E01               	movlw	1
  3572  000FA8  6E1B               	movwf	(??_setMotorPWM+6)^0,c
  3573  000FAA  2A1A               	incf	(??_setMotorPWM+5)^0,f,c
  3574  000FAC  EFDA  F007         	goto	u2454
  3575  000FB0                     u2455:
  3576  000FB0  90D8               	bcf	status,0,c
  3577  000FB2  361B               	rlcf	(??_setMotorPWM+6)^0,f,c
  3578  000FB4                     u2454:
  3579  000FB4  2E1A               	decfsz	(??_setMotorPWM+5)^0,f,c
  3580  000FB6  EFD8  F007         	goto	u2455
  3581  000FBA  501B               	movf	(??_setMotorPWM+6)^0,w,c
  3582  000FBC  1019               	iorwf	(??_setMotorPWM+4)^0,w,c
  3583  000FBE  6EDF               	movwf	indf2,c
  3584                           
  3585                           ;dc_motor.c: 66:  } else {
  3586  000FC0  EF16  F008         	goto	l184
  3587  000FC4                     l2699:
  3588                           
  3589                           ;dc_motor.c: 67:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin))))
      +                          ;
  3590  000FC4  EE20 F004          	lfsr	2,4
  3591  000FC8  5013               	movf	setMotorPWM@m^0,w,c
  3592  000FCA  26D9               	addwf	fsr2l,f,c
  3593  000FCC  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3594  000FCE  22DA               	addwfc	fsr2h,f,c
  3595  000FD0  CFDE F015          	movff	postinc2,??_setMotorPWM
  3596  000FD4  CFDD F016          	movff	postdec2,??_setMotorPWM+1
  3597  000FD8  C015  FFD9         	movff	??_setMotorPWM,fsr2l
  3598  000FDC  C016  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3599  000FE0  EE10 F004          	lfsr	1,4
  3600  000FE4  5013               	movf	setMotorPWM@m^0,w,c
  3601  000FE6  26E1               	addwf	fsr1l,f,c
  3602  000FE8  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3603  000FEA  22E2               	addwfc	fsr1h,f,c
  3604  000FEC  CFE6 F017          	movff	postinc1,??_setMotorPWM+2
  3605  000FF0  CFE5 F018          	movff	postdec1,??_setMotorPWM+3
  3606  000FF4  C017  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3607  000FF8  C018  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3608  000FFC  50E7               	movf	indf1,w,c
  3609  000FFE  6E19               	movwf	(??_setMotorPWM+4)^0,c
  3610  001000  EE10 F006          	lfsr	1,6
  3611  001004  5013               	movf	setMotorPWM@m^0,w,c
  3612  001006  26E1               	addwf	fsr1l,f,c
  3613  001008  5014               	movf	(setMotorPWM@m+1)^0,w,c
  3614  00100A  22E2               	addwfc	fsr1h,f,c
  3615  00100C  50E7               	movf	indf1,w,c
  3616  00100E  6E1A               	movwf	(??_setMotorPWM+5)^0,c
  3617  001010  0E01               	movlw	1
  3618  001012  6E1B               	movwf	(??_setMotorPWM+6)^0,c
  3619  001014  2A1A               	incf	(??_setMotorPWM+5)^0,f,c
  3620  001016  EF0F  F008         	goto	u2464
  3621  00101A                     u2465:
  3622  00101A  90D8               	bcf	status,0,c
  3623  00101C  361B               	rlcf	(??_setMotorPWM+6)^0,f,c
  3624  00101E                     u2464:
  3625  00101E  2E1A               	decfsz	(??_setMotorPWM+5)^0,f,c
  3626  001020  EF0D  F008         	goto	u2465
  3627  001024  501B               	movf	(??_setMotorPWM+6)^0,w,c
  3628  001026  0AFF               	xorlw	255
  3629  001028  1419               	andwf	(??_setMotorPWM+4)^0,w,c
  3630  00102A  6EDF               	movwf	indf2,c
  3631  00102C                     l184:
  3632  00102C  0012               	return		;funcret
  3633  00102E                     __end_of_setMotorPWM:
  3634                           	callstack 0
  3635                           
  3636 ;; *************** function ___wmul *****************
  3637 ;; Defined at:
  3638 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  multiplier      2    4[COMRAM] unsigned int 
  3641 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  product         2    8[COMRAM] unsigned int 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  2    4[COMRAM] unsigned int 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0, prodl, prodh
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;Total ram usage:        6 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 5
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_setMotorPWM
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text13
  3668  001968                     __ptext13:
  3669                           	callstack 0
  3670  001968                     ___wmul:
  3671                           	callstack 22
  3672  001968  5005               	movf	___wmul@multiplier^0,w,c
  3673  00196A  0207               	mulwf	___wmul@multiplicand^0,c
  3674  00196C  CFF3 F009          	movff	prodl,___wmul@product
  3675  001970  CFF4 F00A          	movff	prodh,___wmul@product+1
  3676  001974  5005               	movf	___wmul@multiplier^0,w,c
  3677  001976  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  3678  001978  50F3               	movf	243,w,c
  3679  00197A  260A               	addwf	(___wmul@product+1)^0,f,c
  3680  00197C  5006               	movf	(___wmul@multiplier+1)^0,w,c
  3681  00197E  0207               	mulwf	___wmul@multiplicand^0,c
  3682  001980  50F3               	movf	243,w,c
  3683  001982  260A               	addwf	(___wmul@product+1)^0,f,c
  3684  001984  C009  F005         	movff	___wmul@product,?___wmul
  3685  001988  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3686  00198C  0012               	return		;funcret
  3687  00198E                     __end_of___wmul:
  3688                           	callstack 0
  3689                           
  3690 ;; *************** function ___awdiv *****************
  3691 ;; Defined at:
  3692 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  dividend        2   10[COMRAM] int 
  3695 ;;  divisor         2   12[COMRAM] int 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  quotient        2   16[COMRAM] int 
  3698 ;;  sign            1   15[COMRAM] unsigned char 
  3699 ;;  counter         1   14[COMRAM] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  2   10[COMRAM] int 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3709 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3710 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3713 ;;Total ram usage:        8 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 5
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_setMotorPWM
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text14
  3724  0012E6                     __ptext14:
  3725                           	callstack 0
  3726  0012E6                     ___awdiv:
  3727                           	callstack 22
  3728  0012E6  0E00               	movlw	0
  3729  0012E8  6E10               	movwf	___awdiv@sign^0,c
  3730  0012EA  BE0E               	btfsc	(___awdiv@divisor+1)^0,7,c
  3731  0012EC  EF7C  F009         	goto	u2370
  3732  0012F0  EF7A  F009         	goto	u2371
  3733  0012F4                     u2371:
  3734  0012F4  EF82  F009         	goto	l2651
  3735  0012F8                     u2370:
  3736  0012F8  6C0D               	negf	___awdiv@divisor^0,c
  3737  0012FA  1E0E               	comf	(___awdiv@divisor+1)^0,f,c
  3738  0012FC  B0D8               	btfsc	status,0,c
  3739  0012FE  2A0E               	incf	(___awdiv@divisor+1)^0,f,c
  3740  001300  0E01               	movlw	1
  3741  001302  6E10               	movwf	___awdiv@sign^0,c
  3742  001304                     l2651:
  3743  001304  BE0C               	btfsc	(___awdiv@dividend+1)^0,7,c
  3744  001306  EF89  F009         	goto	u2380
  3745  00130A  EF87  F009         	goto	u2381
  3746  00130E                     u2381:
  3747  00130E  EF8F  F009         	goto	l2657
  3748  001312                     u2380:
  3749  001312  6C0B               	negf	___awdiv@dividend^0,c
  3750  001314  1E0C               	comf	(___awdiv@dividend+1)^0,f,c
  3751  001316  B0D8               	btfsc	status,0,c
  3752  001318  2A0C               	incf	(___awdiv@dividend+1)^0,f,c
  3753  00131A  0E01               	movlw	1
  3754  00131C  1A10               	xorwf	___awdiv@sign^0,f,c
  3755  00131E                     l2657:
  3756  00131E  0E00               	movlw	0
  3757  001320  6E12               	movwf	(___awdiv@quotient+1)^0,c
  3758  001322  0E00               	movlw	0
  3759  001324  6E11               	movwf	___awdiv@quotient^0,c
  3760  001326  500D               	movf	___awdiv@divisor^0,w,c
  3761  001328  100E               	iorwf	(___awdiv@divisor+1)^0,w,c
  3762  00132A  B4D8               	btfsc	status,2,c
  3763  00132C  EF9A  F009         	goto	u2391
  3764  001330  EF9C  F009         	goto	u2390
  3765  001334                     u2391:
  3766  001334  EFC4  F009         	goto	l2679
  3767  001338                     u2390:
  3768  001338  0E01               	movlw	1
  3769  00133A  6E0F               	movwf	___awdiv@counter^0,c
  3770  00133C  EFA4  F009         	goto	l2665
  3771  001340                     l2663:
  3772  001340  90D8               	bcf	status,0,c
  3773  001342  360D               	rlcf	___awdiv@divisor^0,f,c
  3774  001344  360E               	rlcf	(___awdiv@divisor+1)^0,f,c
  3775  001346  2A0F               	incf	___awdiv@counter^0,f,c
  3776  001348                     l2665:
  3777  001348  AE0E               	btfss	(___awdiv@divisor+1)^0,7,c
  3778  00134A  EFA9  F009         	goto	u2401
  3779  00134E  EFAB  F009         	goto	u2400
  3780  001352                     u2401:
  3781  001352  EFA0  F009         	goto	l2663
  3782  001356                     u2400:
  3783  001356                     l2667:
  3784  001356  90D8               	bcf	status,0,c
  3785  001358  3611               	rlcf	___awdiv@quotient^0,f,c
  3786  00135A  3612               	rlcf	(___awdiv@quotient+1)^0,f,c
  3787  00135C  500D               	movf	___awdiv@divisor^0,w,c
  3788  00135E  5C0B               	subwf	___awdiv@dividend^0,w,c
  3789  001360  500E               	movf	(___awdiv@divisor+1)^0,w,c
  3790  001362  580C               	subwfb	(___awdiv@dividend+1)^0,w,c
  3791  001364  A0D8               	btfss	status,0,c
  3792  001366  EFB7  F009         	goto	u2411
  3793  00136A  EFB9  F009         	goto	u2410
  3794  00136E                     u2411:
  3795  00136E  EFBE  F009         	goto	l2675
  3796  001372                     u2410:
  3797  001372  500D               	movf	___awdiv@divisor^0,w,c
  3798  001374  5E0B               	subwf	___awdiv@dividend^0,f,c
  3799  001376  500E               	movf	(___awdiv@divisor+1)^0,w,c
  3800  001378  5A0C               	subwfb	(___awdiv@dividend+1)^0,f,c
  3801  00137A  8011               	bsf	___awdiv@quotient^0,0,c
  3802  00137C                     l2675:
  3803  00137C  90D8               	bcf	status,0,c
  3804  00137E  320E               	rrcf	(___awdiv@divisor+1)^0,f,c
  3805  001380  320D               	rrcf	___awdiv@divisor^0,f,c
  3806  001382  2E0F               	decfsz	___awdiv@counter^0,f,c
  3807  001384  EFAB  F009         	goto	l2667
  3808  001388                     l2679:
  3809  001388  5010               	movf	___awdiv@sign^0,w,c
  3810  00138A  B4D8               	btfsc	status,2,c
  3811  00138C  EFCA  F009         	goto	u2421
  3812  001390  EFCC  F009         	goto	u2420
  3813  001394                     u2421:
  3814  001394  EFD0  F009         	goto	l2683
  3815  001398                     u2420:
  3816  001398  6C11               	negf	___awdiv@quotient^0,c
  3817  00139A  1E12               	comf	(___awdiv@quotient+1)^0,f,c
  3818  00139C  B0D8               	btfsc	status,0,c
  3819  00139E  2A12               	incf	(___awdiv@quotient+1)^0,f,c
  3820  0013A0                     l2683:
  3821  0013A0  C011  F00B         	movff	___awdiv@quotient,?___awdiv
  3822  0013A4  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
  3823  0013A8  0012               	return		;funcret
  3824  0013AA                     __end_of___awdiv:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _colorclick_readColour *****************
  3828 ;; Defined at:
  3829 ;;		line 169 in file "color_click.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  current         8   15[COMRAM] struct .
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  8   15[COMRAM] struct .
  3836 ;; Registers used:
  3837 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3843 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;Total ram usage:        8 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 8
  3850 ;; This function calls:
  3851 ;;		_colorclick_readBlue
  3852 ;;		_colorclick_readClear
  3853 ;;		_colorclick_readGreen
  3854 ;;		_colorclick_readRed
  3855 ;; This function is called by:
  3856 ;;		_main
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text15
  3861  0017E4                     __ptext15:
  3862                           	callstack 0
  3863  0017E4                     _colorclick_readColour:
  3864                           	callstack 22
  3865  0017E4                     
  3866                           ;color_click.c: 169: RGB_val colorclick_readColour(RGB_val current);color_click.c: 170: 
      +                          {;color_click.c: 171:     current.R = colorclick_readRed();
  3867  0017E4  EC2A  F00B         	call	_colorclick_readRed	;wreg free
  3868  0017E8  C009  F010         	movff	?_colorclick_readRed,colorclick_readColour@current
  3869  0017EC  C00A  F011         	movff	?_colorclick_readRed+1,colorclick_readColour@current+1
  3870                           
  3871                           ;color_click.c: 172:     current.G = colorclick_readGreen();
  3872  0017F0  EC52  F00B         	call	_colorclick_readGreen	;wreg free
  3873  0017F4  C009  F012         	movff	?_colorclick_readGreen,colorclick_readColour@current+2
  3874  0017F8  C00A  F013         	movff	?_colorclick_readGreen+1,colorclick_readColour@current+3
  3875                           
  3876                           ;color_click.c: 173:     current.B = colorclick_readBlue();
  3877  0017FC  ECA2  F00B         	call	_colorclick_readBlue	;wreg free
  3878  001800  C009  F014         	movff	?_colorclick_readBlue,colorclick_readColour@current+4
  3879  001804  C00A  F015         	movff	?_colorclick_readBlue+1,colorclick_readColour@current+5
  3880                           
  3881                           ;color_click.c: 174:     current.C = colorclick_readClear();
  3882  001808  EC7A  F00B         	call	_colorclick_readClear	;wreg free
  3883  00180C  C009  F016         	movff	?_colorclick_readClear,colorclick_readColour@current+6
  3884  001810  C00A  F017         	movff	?_colorclick_readClear+1,colorclick_readColour@current+7
  3885  001814                     
  3886                           ;color_click.c: 176:     return current;
  3887  001814  EE20  F010         	lfsr	2,colorclick_readColour@current
  3888  001818  EE00  F010         	lfsr	0,?_colorclick_readColour
  3889  00181C  0E07               	movlw	7
  3890  00181E                     u1901:
  3891  00181E  CFDB FFEB          	movff	plusw2,plusw0
  3892  001822  06E8               	decf	wreg,f,c
  3893  001824  E2FC               	bc	u1901
  3894  001826  0012               	return		;funcret
  3895  001828                     __end_of_colorclick_readColour:
  3896                           	callstack 0
  3897                           
  3898 ;; *************** function _colorclick_readRed *****************
  3899 ;; Defined at:
  3900 ;;		line 94 in file "color_click.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  tmp             2   13[COMRAM] unsigned int 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  2    8[COMRAM] unsigned int 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;Total ram usage:        7 bytes
  3919 ;; Hardware stack levels used: 1
  3920 ;; Hardware stack levels required when called: 7
  3921 ;; This function calls:
  3922 ;;		_I2C_2_Master_Read
  3923 ;;		_I2C_2_Master_RepStart
  3924 ;;		_I2C_2_Master_Start
  3925 ;;		_I2C_2_Master_Stop
  3926 ;;		_I2C_2_Master_Write
  3927 ;; This function is called by:
  3928 ;;		_colorclick_readColour
  3929 ;;		_colorclick_readColourRGBCLED
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text16
  3934  001654                     __ptext16:
  3935                           	callstack 0
  3936  001654                     _colorclick_readRed:
  3937                           	callstack 22
  3938  001654                     
  3939                           ;color_click.c: 96:  unsigned int tmp;;color_click.c: 97:  I2C_2_Master_Start();
  3940  001654  EC5F  F00D         	call	_I2C_2_Master_Start	;wreg free
  3941                           
  3942                           ;color_click.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  3943  001658  0E52               	movlw	82
  3944  00165A  EC43  F00D         	call	_I2C_2_Master_Write
  3945                           
  3946                           ;color_click.c: 99:  I2C_2_Master_Write(0xA0 | 0x16);
  3947  00165E  0EB6               	movlw	182
  3948  001660  EC43  F00D         	call	_I2C_2_Master_Write
  3949                           
  3950                           ;color_click.c: 100:  I2C_2_Master_RepStart();
  3951  001664  EC55  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  3952                           
  3953                           ;color_click.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  3954  001668  0E53               	movlw	83
  3955  00166A  EC43  F00D         	call	_I2C_2_Master_Write
  3956                           
  3957                           ;color_click.c: 102:  tmp=I2C_2_Master_Read(1);
  3958  00166E  0E01               	movlw	1
  3959  001670  EC36  F00C         	call	_I2C_2_Master_Read
  3960  001674  6E0B               	movwf	??_colorclick_readRed^0,c
  3961  001676  500B               	movf	??_colorclick_readRed^0,w,c
  3962  001678  6E0E               	movwf	colorclick_readRed@tmp^0,c
  3963  00167A  6A0F               	clrf	(colorclick_readRed@tmp+1)^0,c
  3964                           
  3965                           ;color_click.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3966  00167C  0E00               	movlw	0
  3967  00167E  EC36  F00C         	call	_I2C_2_Master_Read
  3968  001682  6E0B               	movwf	??_colorclick_readRed^0,c
  3969  001684  500B               	movf	??_colorclick_readRed^0,w,c
  3970  001686  6E0D               	movwf	(??_colorclick_readRed+2)^0,c
  3971  001688  6A0C               	clrf	(??_colorclick_readRed+1)^0,c
  3972  00168A  500E               	movf	colorclick_readRed@tmp^0,w,c
  3973  00168C  100C               	iorwf	(??_colorclick_readRed+1)^0,w,c
  3974  00168E  6E0E               	movwf	colorclick_readRed@tmp^0,c
  3975  001690  500F               	movf	(colorclick_readRed@tmp+1)^0,w,c
  3976  001692  100D               	iorwf	(??_colorclick_readRed+2)^0,w,c
  3977  001694  6E0F               	movwf	(colorclick_readRed@tmp+1)^0,c
  3978                           
  3979                           ;color_click.c: 104:  I2C_2_Master_Stop();
  3980  001696  EC5A  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3981  00169A                     
  3982                           ;color_click.c: 105:  return tmp;
  3983  00169A  C00E  F009         	movff	colorclick_readRed@tmp,?_colorclick_readRed
  3984  00169E  C00F  F00A         	movff	colorclick_readRed@tmp+1,?_colorclick_readRed+1
  3985  0016A2  0012               	return		;funcret
  3986  0016A4                     __end_of_colorclick_readRed:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function _colorclick_readGreen *****************
  3990 ;; Defined at:
  3991 ;;		line 113 in file "color_click.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  tmp             2   13[COMRAM] unsigned int 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  2    8[COMRAM] unsigned int 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4006 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4007 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;Total ram usage:        7 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 7
  4012 ;; This function calls:
  4013 ;;		_I2C_2_Master_Read
  4014 ;;		_I2C_2_Master_RepStart
  4015 ;;		_I2C_2_Master_Start
  4016 ;;		_I2C_2_Master_Stop
  4017 ;;		_I2C_2_Master_Write
  4018 ;; This function is called by:
  4019 ;;		_colorclick_readColour
  4020 ;;		_colorclick_readColourRGBCLED
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text17
  4025  0016A4                     __ptext17:
  4026                           	callstack 0
  4027  0016A4                     _colorclick_readGreen:
  4028                           	callstack 22
  4029  0016A4                     
  4030                           ;color_click.c: 115:  unsigned int tmp;;color_click.c: 116:  I2C_2_Master_Start();
  4031  0016A4  EC5F  F00D         	call	_I2C_2_Master_Start	;wreg free
  4032                           
  4033                           ;color_click.c: 117:  I2C_2_Master_Write(0x52 | 0x00);
  4034  0016A8  0E52               	movlw	82
  4035  0016AA  EC43  F00D         	call	_I2C_2_Master_Write
  4036                           
  4037                           ;color_click.c: 118:  I2C_2_Master_Write(0xA0 | 0x18);
  4038  0016AE  0EB8               	movlw	184
  4039  0016B0  EC43  F00D         	call	_I2C_2_Master_Write
  4040                           
  4041                           ;color_click.c: 119:  I2C_2_Master_RepStart();
  4042  0016B4  EC55  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  4043                           
  4044                           ;color_click.c: 120:  I2C_2_Master_Write(0x52 | 0x01);
  4045  0016B8  0E53               	movlw	83
  4046  0016BA  EC43  F00D         	call	_I2C_2_Master_Write
  4047                           
  4048                           ;color_click.c: 121:  tmp=I2C_2_Master_Read(1);
  4049  0016BE  0E01               	movlw	1
  4050  0016C0  EC36  F00C         	call	_I2C_2_Master_Read
  4051  0016C4  6E0B               	movwf	??_colorclick_readGreen^0,c
  4052  0016C6  500B               	movf	??_colorclick_readGreen^0,w,c
  4053  0016C8  6E0E               	movwf	colorclick_readGreen@tmp^0,c
  4054  0016CA  6A0F               	clrf	(colorclick_readGreen@tmp+1)^0,c
  4055                           
  4056                           ;color_click.c: 122:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4057  0016CC  0E00               	movlw	0
  4058  0016CE  EC36  F00C         	call	_I2C_2_Master_Read
  4059  0016D2  6E0B               	movwf	??_colorclick_readGreen^0,c
  4060  0016D4  500B               	movf	??_colorclick_readGreen^0,w,c
  4061  0016D6  6E0D               	movwf	(??_colorclick_readGreen+2)^0,c
  4062  0016D8  6A0C               	clrf	(??_colorclick_readGreen+1)^0,c
  4063  0016DA  500E               	movf	colorclick_readGreen@tmp^0,w,c
  4064  0016DC  100C               	iorwf	(??_colorclick_readGreen+1)^0,w,c
  4065  0016DE  6E0E               	movwf	colorclick_readGreen@tmp^0,c
  4066  0016E0  500F               	movf	(colorclick_readGreen@tmp+1)^0,w,c
  4067  0016E2  100D               	iorwf	(??_colorclick_readGreen+2)^0,w,c
  4068  0016E4  6E0F               	movwf	(colorclick_readGreen@tmp+1)^0,c
  4069                           
  4070                           ;color_click.c: 123:  I2C_2_Master_Stop();
  4071  0016E6  EC5A  F00D         	call	_I2C_2_Master_Stop	;wreg free
  4072  0016EA                     
  4073                           ;color_click.c: 124:  return tmp;
  4074  0016EA  C00E  F009         	movff	colorclick_readGreen@tmp,?_colorclick_readGreen
  4075  0016EE  C00F  F00A         	movff	colorclick_readGreen@tmp+1,?_colorclick_readGreen+1
  4076  0016F2  0012               	return		;funcret
  4077  0016F4                     __end_of_colorclick_readGreen:
  4078                           	callstack 0
  4079                           
  4080 ;; *************** function _colorclick_readClear *****************
  4081 ;; Defined at:
  4082 ;;		line 151 in file "color_click.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  tmp             2   13[COMRAM] unsigned int 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  2    8[COMRAM] unsigned int 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;Total ram usage:        7 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; Hardware stack levels required when called: 7
  4103 ;; This function calls:
  4104 ;;		_I2C_2_Master_Read
  4105 ;;		_I2C_2_Master_RepStart
  4106 ;;		_I2C_2_Master_Start
  4107 ;;		_I2C_2_Master_Stop
  4108 ;;		_I2C_2_Master_Write
  4109 ;; This function is called by:
  4110 ;;		_colorclick_readColour
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text18
  4115  0016F4                     __ptext18:
  4116                           	callstack 0
  4117  0016F4                     _colorclick_readClear:
  4118                           	callstack 22
  4119  0016F4                     
  4120                           ;color_click.c: 153:  unsigned int tmp;;color_click.c: 154:  I2C_2_Master_Start();
  4121  0016F4  EC5F  F00D         	call	_I2C_2_Master_Start	;wreg free
  4122                           
  4123                           ;color_click.c: 155:  I2C_2_Master_Write(0x52 | 0x00);
  4124  0016F8  0E52               	movlw	82
  4125  0016FA  EC43  F00D         	call	_I2C_2_Master_Write
  4126                           
  4127                           ;color_click.c: 156:  I2C_2_Master_Write(0xA0 | 0x14);
  4128  0016FE  0EB4               	movlw	180
  4129  001700  EC43  F00D         	call	_I2C_2_Master_Write
  4130                           
  4131                           ;color_click.c: 157:  I2C_2_Master_RepStart();
  4132  001704  EC55  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  4133                           
  4134                           ;color_click.c: 158:  I2C_2_Master_Write(0x52 | 0x01);
  4135  001708  0E53               	movlw	83
  4136  00170A  EC43  F00D         	call	_I2C_2_Master_Write
  4137                           
  4138                           ;color_click.c: 159:  tmp=I2C_2_Master_Read(1);
  4139  00170E  0E01               	movlw	1
  4140  001710  EC36  F00C         	call	_I2C_2_Master_Read
  4141  001714  6E0B               	movwf	??_colorclick_readClear^0,c
  4142  001716  500B               	movf	??_colorclick_readClear^0,w,c
  4143  001718  6E0E               	movwf	colorclick_readClear@tmp^0,c
  4144  00171A  6A0F               	clrf	(colorclick_readClear@tmp+1)^0,c
  4145                           
  4146                           ;color_click.c: 160:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4147  00171C  0E00               	movlw	0
  4148  00171E  EC36  F00C         	call	_I2C_2_Master_Read
  4149  001722  6E0B               	movwf	??_colorclick_readClear^0,c
  4150  001724  500B               	movf	??_colorclick_readClear^0,w,c
  4151  001726  6E0D               	movwf	(??_colorclick_readClear+2)^0,c
  4152  001728  6A0C               	clrf	(??_colorclick_readClear+1)^0,c
  4153  00172A  500E               	movf	colorclick_readClear@tmp^0,w,c
  4154  00172C  100C               	iorwf	(??_colorclick_readClear+1)^0,w,c
  4155  00172E  6E0E               	movwf	colorclick_readClear@tmp^0,c
  4156  001730  500F               	movf	(colorclick_readClear@tmp+1)^0,w,c
  4157  001732  100D               	iorwf	(??_colorclick_readClear+2)^0,w,c
  4158  001734  6E0F               	movwf	(colorclick_readClear@tmp+1)^0,c
  4159                           
  4160                           ;color_click.c: 161:  I2C_2_Master_Stop();
  4161  001736  EC5A  F00D         	call	_I2C_2_Master_Stop	;wreg free
  4162  00173A                     
  4163                           ;color_click.c: 162:  return tmp;
  4164  00173A  C00E  F009         	movff	colorclick_readClear@tmp,?_colorclick_readClear
  4165  00173E  C00F  F00A         	movff	colorclick_readClear@tmp+1,?_colorclick_readClear+1
  4166  001742  0012               	return		;funcret
  4167  001744                     __end_of_colorclick_readClear:
  4168                           	callstack 0
  4169                           
  4170 ;; *************** function _colorclick_readBlue *****************
  4171 ;; Defined at:
  4172 ;;		line 132 in file "color_click.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  tmp             2   13[COMRAM] unsigned int 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  2    8[COMRAM] unsigned int 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;Total ram usage:        7 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; Hardware stack levels required when called: 7
  4193 ;; This function calls:
  4194 ;;		_I2C_2_Master_Read
  4195 ;;		_I2C_2_Master_RepStart
  4196 ;;		_I2C_2_Master_Start
  4197 ;;		_I2C_2_Master_Stop
  4198 ;;		_I2C_2_Master_Write
  4199 ;; This function is called by:
  4200 ;;		_colorclick_readColour
  4201 ;;		_colorclick_readColourRGBCLED
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text19
  4206  001744                     __ptext19:
  4207                           	callstack 0
  4208  001744                     _colorclick_readBlue:
  4209                           	callstack 22
  4210  001744                     
  4211                           ;color_click.c: 134:  unsigned int tmp;;color_click.c: 135:  I2C_2_Master_Start();
  4212  001744  EC5F  F00D         	call	_I2C_2_Master_Start	;wreg free
  4213                           
  4214                           ;color_click.c: 136:  I2C_2_Master_Write(0x52 | 0x00);
  4215  001748  0E52               	movlw	82
  4216  00174A  EC43  F00D         	call	_I2C_2_Master_Write
  4217                           
  4218                           ;color_click.c: 137:  I2C_2_Master_Write(0xA0 | 0x1A);
  4219  00174E  0EBA               	movlw	186
  4220  001750  EC43  F00D         	call	_I2C_2_Master_Write
  4221                           
  4222                           ;color_click.c: 138:  I2C_2_Master_RepStart();
  4223  001754  EC55  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  4224                           
  4225                           ;color_click.c: 139:  I2C_2_Master_Write(0x52 | 0x01);
  4226  001758  0E53               	movlw	83
  4227  00175A  EC43  F00D         	call	_I2C_2_Master_Write
  4228                           
  4229                           ;color_click.c: 140:  tmp=I2C_2_Master_Read(1);
  4230  00175E  0E01               	movlw	1
  4231  001760  EC36  F00C         	call	_I2C_2_Master_Read
  4232  001764  6E0B               	movwf	??_colorclick_readBlue^0,c
  4233  001766  500B               	movf	??_colorclick_readBlue^0,w,c
  4234  001768  6E0E               	movwf	colorclick_readBlue@tmp^0,c
  4235  00176A  6A0F               	clrf	(colorclick_readBlue@tmp+1)^0,c
  4236                           
  4237                           ;color_click.c: 141:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4238  00176C  0E00               	movlw	0
  4239  00176E  EC36  F00C         	call	_I2C_2_Master_Read
  4240  001772  6E0B               	movwf	??_colorclick_readBlue^0,c
  4241  001774  500B               	movf	??_colorclick_readBlue^0,w,c
  4242  001776  6E0D               	movwf	(??_colorclick_readBlue+2)^0,c
  4243  001778  6A0C               	clrf	(??_colorclick_readBlue+1)^0,c
  4244  00177A  500E               	movf	colorclick_readBlue@tmp^0,w,c
  4245  00177C  100C               	iorwf	(??_colorclick_readBlue+1)^0,w,c
  4246  00177E  6E0E               	movwf	colorclick_readBlue@tmp^0,c
  4247  001780  500F               	movf	(colorclick_readBlue@tmp+1)^0,w,c
  4248  001782  100D               	iorwf	(??_colorclick_readBlue+2)^0,w,c
  4249  001784  6E0F               	movwf	(colorclick_readBlue@tmp+1)^0,c
  4250                           
  4251                           ;color_click.c: 142:  I2C_2_Master_Stop();
  4252  001786  EC5A  F00D         	call	_I2C_2_Master_Stop	;wreg free
  4253  00178A                     
  4254                           ;color_click.c: 143:  return tmp;
  4255  00178A  C00E  F009         	movff	colorclick_readBlue@tmp,?_colorclick_readBlue
  4256  00178E  C00F  F00A         	movff	colorclick_readBlue@tmp+1,?_colorclick_readBlue+1
  4257  001792  0012               	return		;funcret
  4258  001794                     __end_of_colorclick_readBlue:
  4259                           	callstack 0
  4260                           
  4261 ;; *************** function _I2C_2_Master_RepStart *****************
  4262 ;; Defined at:
  4263 ;;		line 49 in file "i2c.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;		None
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;		None
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, status,2, status,0, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4281 ;;Total ram usage:        0 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; Hardware stack levels required when called: 6
  4284 ;; This function calls:
  4285 ;;		_I2C_2_Master_Idle
  4286 ;; This function is called by:
  4287 ;;		_colorclick_readRed
  4288 ;;		_colorclick_readGreen
  4289 ;;		_colorclick_readBlue
  4290 ;;		_colorclick_readClear
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text20
  4295  001AAA                     __ptext20:
  4296                           	callstack 0
  4297  001AAA                     _I2C_2_Master_RepStart:
  4298                           	callstack 22
  4299  001AAA                     
  4300                           ;i2c.c: 51:   I2C_2_Master_Idle();
  4301  001AAA  EC8C  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4302  001AAE                     
  4303                           ;i2c.c: 52:   SSP2CON2bits.RSEN = 1;
  4304  001AAE  010E               	movlb	14	; () banked
  4305  001AB0  83DA               	bsf	218,1,b	;volatile
  4306  001AB2                     
  4307                           ; BSR set to: 14
  4308  001AB2  0012               	return		;funcret
  4309  001AB4                     __end_of_I2C_2_Master_RepStart:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _I2C_2_Master_Read *****************
  4313 ;; Defined at:
  4314 ;;		line 79 in file "i2c.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  ack             1    wreg     unsigned char 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  ack             1    6[COMRAM] unsigned char 
  4319 ;;  tmp             1    7[COMRAM] unsigned char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      unsigned char 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0, cstack
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;Total ram usage:        3 bytes
  4334 ;; Hardware stack levels used: 1
  4335 ;; Hardware stack levels required when called: 6
  4336 ;; This function calls:
  4337 ;;		_I2C_2_Master_Idle
  4338 ;; This function is called by:
  4339 ;;		_colorclick_readRed
  4340 ;;		_colorclick_readGreen
  4341 ;;		_colorclick_readBlue
  4342 ;;		_colorclick_readClear
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text21
  4347  00186C                     __ptext21:
  4348                           	callstack 0
  4349  00186C                     _I2C_2_Master_Read:
  4350                           	callstack 22
  4351                           
  4352                           ; BSR set to: 14
  4353                           ;incstack = 0
  4354                           ;I2C_2_Master_Read@ack stored from wreg
  4355  00186C  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  4356  00186E                     
  4357                           ;i2c.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 80: {;i2c.c: 81:  
      +                           unsigned char tmp;;i2c.c: 82:   I2C_2_Master_Idle();
  4358  00186E  EC8C  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4359  001872                     
  4360                           ;i2c.c: 83:   SSP2CON2bits.RCEN = 1;
  4361  001872  010E               	movlb	14	; () banked
  4362  001874  87DA               	bsf	218,3,b	;volatile
  4363                           
  4364                           ;i2c.c: 84:   I2C_2_Master_Idle();
  4365  001876  EC8C  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4366  00187A                     
  4367                           ;i2c.c: 85:   tmp = SSP2BUF;
  4368  00187A  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4369                           
  4370                           ;i2c.c: 86:   I2C_2_Master_Idle();
  4371  00187E  EC8C  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4372  001882                     
  4373                           ;i2c.c: 87:   SSP2CON2bits.ACKDT = !ack;
  4374  001882  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  4375  001884  B4D8               	btfsc	status,2,c
  4376  001886  EF47  F00C         	goto	u1311
  4377  00188A  EF4B  F00C         	goto	u1310
  4378  00188E                     u1311:
  4379  00188E  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4380  001890  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  4381  001892  EF4C  F00C         	goto	u1328
  4382  001896                     u1310:
  4383  001896  6A06               	clrf	??_I2C_2_Master_Read^0,c
  4384  001898                     u1328:
  4385  001898  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  4386  00189A  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  4387  00189C  010E               	movlb	14	; () banked
  4388  00189E  51DA               	movf	218,w,b	;volatile
  4389  0018A0  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4390  0018A2  0BDF               	andlw	-33
  4391  0018A4  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  4392  0018A6  6FDA               	movwf	218,b	;volatile
  4393  0018A8                     
  4394                           ; BSR set to: 14
  4395                           ;i2c.c: 88:   SSP2CON2bits.ACKEN = 1;
  4396  0018A8  89DA               	bsf	218,4,b	;volatile
  4397  0018AA                     
  4398                           ; BSR set to: 14
  4399                           ;i2c.c: 89:   return tmp;
  4400  0018AA  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  4401  0018AC                     
  4402                           ; BSR set to: 14
  4403  0018AC  0012               	return		;funcret
  4404  0018AE                     __end_of_I2C_2_Master_Read:
  4405                           	callstack 0
  4406                           
  4407 ;; *************** function _colorclick_init *****************
  4408 ;; Defined at:
  4409 ;;		line 17 in file "color_click.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;Total ram usage:        1 bytes
  4428 ;; Hardware stack levels used: 1
  4429 ;; Hardware stack levels required when called: 8
  4430 ;; This function calls:
  4431 ;;		_I2C_2_Master_Init
  4432 ;;		_colorclick_toggleClearLED
  4433 ;;		_colorclick_writetoaddr
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text22
  4440  0018AE                     __ptext22:
  4441                           	callstack 0
  4442  0018AE                     _colorclick_init:
  4443                           	callstack 22
  4444  0018AE                     
  4445                           ;color_click.c: 20:     I2C_2_Master_Init();
  4446  0018AE  EC77  F00C         	call	_I2C_2_Master_Init	;wreg free
  4447  0018B2                     
  4448                           ;color_click.c: 23:   colorclick_writetoaddr(0x00, 0x01);
  4449  0018B2  0E01               	movlw	1
  4450  0018B4  6E07               	movwf	colorclick_writetoaddr@value^0,c
  4451  0018B6  0E00               	movlw	0
  4452  0018B8  ECE9  F00C         	call	_colorclick_writetoaddr
  4453  0018BC                     
  4454                           ;color_click.c: 24:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4455  0018BC  0E3F               	movlw	63
  4456  0018BE  6E09               	movwf	??_colorclick_init^0,c
  4457  0018C0  0E55               	movlw	85
  4458  0018C2                     u3457:
  4459  0018C2  2EE8               	decfsz	wreg,f,c
  4460  0018C4  D7FE               	bra	u3457
  4461  0018C6  2E09               	decfsz	??_colorclick_init^0,f,c
  4462  0018C8  D7FC               	bra	u3457
  4463  0018CA  F000               	nop	
  4464  0018CC                     
  4465                           ;color_click.c: 27:  colorclick_writetoaddr(0x00, 0x03);
  4466  0018CC  0E03               	movlw	3
  4467  0018CE  6E07               	movwf	colorclick_writetoaddr@value^0,c
  4468  0018D0  0E00               	movlw	0
  4469  0018D2  ECE9  F00C         	call	_colorclick_writetoaddr
  4470  0018D6                     
  4471                           ;color_click.c: 30:  colorclick_writetoaddr(0x01, 0xD5);
  4472  0018D6  0ED5               	movlw	213
  4473  0018D8  6E07               	movwf	colorclick_writetoaddr@value^0,c
  4474  0018DA  0E01               	movlw	1
  4475  0018DC  ECE9  F00C         	call	_colorclick_writetoaddr
  4476  0018E0                     
  4477                           ;color_click.c: 33:     TRISGbits.TRISG1 = 0;
  4478  0018E0  9287               	bcf	135,1,c	;volatile
  4479  0018E2                     
  4480                           ;color_click.c: 34:     TRISAbits.TRISA4 = 0;
  4481  0018E2  9881               	bcf	129,4,c	;volatile
  4482  0018E4                     
  4483                           ;color_click.c: 35:     TRISFbits.TRISF7 = 0;
  4484  0018E4  9E86               	bcf	134,7,c	;volatile
  4485  0018E6                     
  4486                           ;color_click.c: 38:     colorclick_toggleClearLED(0);
  4487  0018E6  0E00               	movlw	0
  4488  0018E8  ECD8  F00C         	call	_colorclick_toggleClearLED
  4489  0018EC  0012               	return		;funcret
  4490  0018EE                     __end_of_colorclick_init:
  4491                           	callstack 0
  4492                           
  4493 ;; *************** function _colorclick_writetoaddr *****************
  4494 ;; Defined at:
  4495 ;;		line 80 in file "color_click.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  address         1    wreg     unsigned char 
  4498 ;;  value           1    6[COMRAM] unsigned char 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  address         1    7[COMRAM] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4510 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4513 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4514 ;;Total ram usage:        2 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; Hardware stack levels required when called: 7
  4517 ;; This function calls:
  4518 ;;		_I2C_2_Master_Start
  4519 ;;		_I2C_2_Master_Stop
  4520 ;;		_I2C_2_Master_Write
  4521 ;; This function is called by:
  4522 ;;		_interrupts_init
  4523 ;;		_colorclick_init
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text23
  4528  0019D2                     __ptext23:
  4529                           	callstack 0
  4530  0019D2                     _colorclick_writetoaddr:
  4531                           	callstack 22
  4532                           
  4533                           ;incstack = 0
  4534                           ;colorclick_writetoaddr@address stored from wreg
  4535  0019D2  6E08               	movwf	colorclick_writetoaddr@address^0,c
  4536  0019D4                     
  4537                           ;color_click.c: 80: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           81: {;color_click.c: 82:     I2C_2_Master_Start();
  4538  0019D4  EC5F  F00D         	call	_I2C_2_Master_Start	;wreg free
  4539                           
  4540                           ;color_click.c: 83:     I2C_2_Master_Write(0x52 | 0x00);
  4541  0019D8  0E52               	movlw	82
  4542  0019DA  EC43  F00D         	call	_I2C_2_Master_Write
  4543                           
  4544                           ;color_click.c: 84:     I2C_2_Master_Write(0x80 | address);
  4545  0019DE  5008               	movf	colorclick_writetoaddr@address^0,w,c
  4546  0019E0  0980               	iorlw	128
  4547  0019E2  EC43  F00D         	call	_I2C_2_Master_Write
  4548                           
  4549                           ;color_click.c: 85:     I2C_2_Master_Write(value);
  4550  0019E6  5007               	movf	colorclick_writetoaddr@value^0,w,c
  4551  0019E8  EC43  F00D         	call	_I2C_2_Master_Write
  4552                           
  4553                           ;color_click.c: 86:     I2C_2_Master_Stop();
  4554  0019EC  EC5A  F00D         	call	_I2C_2_Master_Stop	;wreg free
  4555  0019F0  0012               	return		;funcret
  4556  0019F2                     __end_of_colorclick_writetoaddr:
  4557                           	callstack 0
  4558                           
  4559 ;; *************** function _I2C_2_Master_Write *****************
  4560 ;; Defined at:
  4561 ;;		line 69 in file "i2c.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  data_byte       1    wreg     unsigned char 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  data_byte       1    5[COMRAM] unsigned char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;Total ram usage:        1 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 6
  4582 ;; This function calls:
  4583 ;;		_I2C_2_Master_Idle
  4584 ;; This function is called by:
  4585 ;;		_interrupts_clear
  4586 ;;		_colorclick_writetoaddr
  4587 ;;		_colorclick_readRed
  4588 ;;		_colorclick_readGreen
  4589 ;;		_colorclick_readBlue
  4590 ;;		_colorclick_readClear
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           	psect	text24
  4595  001A86                     __ptext24:
  4596                           	callstack 0
  4597  001A86                     _I2C_2_Master_Write:
  4598                           	callstack 22
  4599                           
  4600                           ;incstack = 0
  4601                           ;I2C_2_Master_Write@data_byte stored from wreg
  4602  001A86  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  4603  001A88                     
  4604                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  4605  001A88  EC8C  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4606  001A8C                     
  4607                           ;i2c.c: 72:   SSP2BUF = data_byte;
  4608  001A8C  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4609  001A90  0012               	return		;funcret
  4610  001A92                     __end_of_I2C_2_Master_Write:
  4611                           	callstack 0
  4612                           
  4613 ;; *************** function _I2C_2_Master_Stop *****************
  4614 ;; Defined at:
  4615 ;;		line 59 in file "i2c.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; Hardware stack levels required when called: 6
  4636 ;; This function calls:
  4637 ;;		_I2C_2_Master_Idle
  4638 ;; This function is called by:
  4639 ;;		_interrupts_clear
  4640 ;;		_colorclick_writetoaddr
  4641 ;;		_colorclick_readRed
  4642 ;;		_colorclick_readGreen
  4643 ;;		_colorclick_readBlue
  4644 ;;		_colorclick_readClear
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text25
  4649  001AB4                     __ptext25:
  4650                           	callstack 0
  4651  001AB4                     _I2C_2_Master_Stop:
  4652                           	callstack 22
  4653  001AB4                     
  4654                           ;i2c.c: 61:   I2C_2_Master_Idle();
  4655  001AB4  EC8C  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4656  001AB8                     
  4657                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  4658  001AB8  010E               	movlb	14	; () banked
  4659  001ABA  85DA               	bsf	218,2,b	;volatile
  4660  001ABC                     
  4661                           ; BSR set to: 14
  4662  001ABC  0012               	return		;funcret
  4663  001ABE                     __end_of_I2C_2_Master_Stop:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _I2C_2_Master_Start *****************
  4667 ;; Defined at:
  4668 ;;		line 39 in file "i2c.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 6
  4689 ;; This function calls:
  4690 ;;		_I2C_2_Master_Idle
  4691 ;; This function is called by:
  4692 ;;		_interrupts_clear
  4693 ;;		_colorclick_writetoaddr
  4694 ;;		_colorclick_readRed
  4695 ;;		_colorclick_readGreen
  4696 ;;		_colorclick_readBlue
  4697 ;;		_colorclick_readClear
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text26
  4702  001ABE                     __ptext26:
  4703                           	callstack 0
  4704  001ABE                     _I2C_2_Master_Start:
  4705                           	callstack 22
  4706  001ABE                     
  4707                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4708  001ABE  EC8C  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4709  001AC2                     
  4710                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  4711  001AC2  010E               	movlb	14	; () banked
  4712  001AC4  81DA               	bsf	218,0,b	;volatile
  4713  001AC6                     
  4714                           ; BSR set to: 14
  4715  001AC6  0012               	return		;funcret
  4716  001AC8                     __end_of_I2C_2_Master_Start:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _I2C_2_Master_Idle *****************
  4720 ;; Defined at:
  4721 ;;		line 30 in file "i2c.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      void 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;Total ram usage:        1 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; Hardware stack levels required when called: 5
  4742 ;; This function calls:
  4743 ;;		Nothing
  4744 ;; This function is called by:
  4745 ;;		_I2C_2_Master_Start
  4746 ;;		_I2C_2_Master_RepStart
  4747 ;;		_I2C_2_Master_Stop
  4748 ;;		_I2C_2_Master_Write
  4749 ;;		_I2C_2_Master_Read
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text27
  4754  001918                     __ptext27:
  4755                           	callstack 0
  4756  001918                     _I2C_2_Master_Idle:
  4757                           	callstack 22
  4758  001918                     l30:
  4759  001918  010E               	movlb	14	; () banked
  4760  00191A  B5D8               	btfsc	216,2,b	;volatile
  4761  00191C  EF92  F00C         	goto	u1231
  4762  001920  EF94  F00C         	goto	u1230
  4763  001924                     u1231:
  4764  001924  EF8C  F00C         	goto	l30
  4765  001928                     u1230:
  4766  001928                     
  4767                           ; BSR set to: 14
  4768  001928  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4769  00192C  0E1F               	movlw	31
  4770  00192E  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  4771  001930  A4D8               	btfss	status,2,c
  4772  001932  EF9D  F00C         	goto	u1241
  4773  001936  EF9F  F00C         	goto	u1240
  4774  00193A                     u1241:
  4775  00193A  EF8C  F00C         	goto	l30
  4776  00193E                     u1240:
  4777  00193E                     
  4778                           ; BSR set to: 14
  4779  00193E  0012               	return		;funcret
  4780  001940                     __end_of_I2C_2_Master_Idle:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function _colorclick_toggleClearLED *****************
  4784 ;; Defined at:
  4785 ;;		line 67 in file "color_click.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  toggle          1    wreg     unsigned char 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  toggle          1    4[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;Total ram usage:        1 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 5
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_colorclick_init
  4810 ;;		_colorclick_readColourRGBCLED
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text28
  4815  0019B0                     __ptext28:
  4816                           	callstack 0
  4817  0019B0                     _colorclick_toggleClearLED:
  4818                           	callstack 24
  4819                           
  4820                           ; BSR set to: 14
  4821                           ;incstack = 0
  4822                           ;colorclick_toggleClearLED@toggle stored from wreg
  4823  0019B0  6E05               	movwf	colorclick_toggleClearLED@toggle^0,c
  4824  0019B2                     
  4825                           ;color_click.c: 67: void colorclick_toggleClearLED(unsigned char toggle);color_click.c: 
      +                          68: {;color_click.c: 69:     LATGbits.LATG1 = toggle;
  4826  0019B2  B005               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  4827  0019B4  D002               	bra	u1695
  4828  0019B6  927F               	bcf	127,1,c	;volatile
  4829  0019B8  D001               	bra	u1696
  4830  0019BA                     u1695:
  4831  0019BA  827F               	bsf	127,1,c	;volatile
  4832  0019BC                     u1696:
  4833                           
  4834                           ;color_click.c: 70:     LATFbits.LATF7 = toggle;
  4835  0019BC  B005               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  4836  0019BE  D002               	bra	u1705
  4837  0019C0  9E7E               	bcf	126,7,c	;volatile
  4838  0019C2  D001               	bra	u1706
  4839  0019C4                     u1705:
  4840  0019C4  8E7E               	bsf	126,7,c	;volatile
  4841  0019C6                     u1706:
  4842                           
  4843                           ;color_click.c: 71:     LATAbits.LATA4 = toggle;
  4844  0019C6  B005               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  4845  0019C8  D002               	bra	u1715
  4846  0019CA  9879               	bcf	121,4,c	;volatile
  4847  0019CC  D001               	bra	u1716
  4848  0019CE                     u1715:
  4849  0019CE  8879               	bsf	121,4,c	;volatile
  4850  0019D0                     u1716:
  4851  0019D0  0012               	return		;funcret
  4852  0019D2                     __end_of_colorclick_toggleClearLED:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function _I2C_2_Master_Init *****************
  4856 ;; Defined at:
  4857 ;;		line 8 in file "i2c.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      void 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4875 ;;Total ram usage:        0 bytes
  4876 ;; Hardware stack levels used: 1
  4877 ;; Hardware stack levels required when called: 5
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_colorclick_init
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text29
  4886  0018EE                     __ptext29:
  4887                           	callstack 0
  4888  0018EE                     _I2C_2_Master_Init:
  4889                           	callstack 24
  4890  0018EE                     
  4891                           ;i2c.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  4892  0018EE  010E               	movlb	14	; () banked
  4893  0018F0  51D9               	movf	217,w,b	;volatile
  4894  0018F2  0BF0               	andlw	-16
  4895  0018F4  0908               	iorlw	8
  4896  0018F6  6FD9               	movwf	217,b	;volatile
  4897  0018F8                     
  4898                           ; BSR set to: 14
  4899                           ;i2c.c: 12:   SSP2CON1bits.SSPEN = 1;
  4900  0018F8  8BD9               	bsf	217,5,b	;volatile
  4901                           
  4902                           ;i2c.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  4903  0018FA  0E9F               	movlw	159
  4904  0018FC  6FD6               	movwf	214,b	;volatile
  4905  0018FE                     
  4906                           ; BSR set to: 14
  4907                           ;i2c.c: 16:   TRISDbits.TRISD5 = 1;
  4908  0018FE  8A84               	bsf	132,5,c	;volatile
  4909  001900                     
  4910                           ; BSR set to: 14
  4911                           ;i2c.c: 17:   TRISDbits.TRISD6 = 1;
  4912  001900  8C84               	bsf	132,6,c	;volatile
  4913  001902                     
  4914                           ; BSR set to: 14
  4915                           ;i2c.c: 18:   ANSELDbits.ANSELD5=0;
  4916  001902  9BA7               	bcf	167,5,b	;volatile
  4917  001904                     
  4918                           ; BSR set to: 14
  4919                           ;i2c.c: 19:   ANSELDbits.ANSELD6=0;
  4920  001904  9DA7               	bcf	167,6,b	;volatile
  4921                           
  4922                           ;i2c.c: 20:   SSP2DATPPS=0x1D;
  4923  001906  0E1D               	movlw	29
  4924  001908  6F1D               	movwf	29,b	;volatile
  4925                           
  4926                           ;i2c.c: 21:   SSP2CLKPPS=0x1E;
  4927  00190A  0E1E               	movlw	30
  4928  00190C  6F1C               	movwf	28,b	;volatile
  4929                           
  4930                           ;i2c.c: 22:   RD5PPS=0x1C;
  4931  00190E  0E1C               	movlw	28
  4932  001910  6F6F               	movwf	111,b	;volatile
  4933                           
  4934                           ;i2c.c: 23:   RD6PPS=0x1B;
  4935  001912  0E1B               	movlw	27
  4936  001914  6F70               	movwf	112,b	;volatile
  4937  001916                     
  4938                           ; BSR set to: 14
  4939  001916  0012               	return		;funcret
  4940  001918                     __end_of_I2C_2_Master_Init:
  4941                           	callstack 0
  4942                           
  4943 ;; *************** function _USART4_init *****************
  4944 ;; Defined at:
  4945 ;;		line 7 in file "serial.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4963 ;;Total ram usage:        0 bytes
  4964 ;; Hardware stack levels used: 1
  4965 ;; Hardware stack levels required when called: 5
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_main
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text30
  4974  0019F2                     __ptext30:
  4975                           	callstack 0
  4976  0019F2                     _USART4_init:
  4977                           	callstack 25
  4978  0019F2                     
  4979                           ;serial.c: 10:     RC0PPS = 0x12;
  4980  0019F2  0E12               	movlw	18
  4981  0019F4  010E               	movlb	14	; () banked
  4982  0019F6  6F62               	movwf	98,b	;volatile
  4983                           
  4984                           ;serial.c: 11:     RX4PPS = 0x11;
  4985  0019F8  0E11               	movlw	17
  4986  0019FA  6F15               	movwf	21,b	;volatile
  4987  0019FC                     
  4988                           ; BSR set to: 14
  4989                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  4990  0019FC  8283               	bsf	131,1,c	;volatile
  4991  0019FE                     
  4992                           ; BSR set to: 14
  4993                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  4994  0019FE  97E9               	bcf	233,3,b	;volatile
  4995  001A00                     
  4996                           ; BSR set to: 14
  4997                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  4998  001A00  95E8               	bcf	232,2,b	;volatile
  4999                           
  5000                           ;serial.c: 16:     SP4BRGL = 51;
  5001  001A02  0E33               	movlw	51
  5002  001A04  6FE5               	movwf	229,b	;volatile
  5003                           
  5004                           ;serial.c: 17:     SP4BRGH = 0;
  5005  001A06  0E00               	movlw	0
  5006  001A08  6FE6               	movwf	230,b	;volatile
  5007  001A0A                     
  5008                           ; BSR set to: 14
  5009                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  5010  001A0A  89E7               	bsf	231,4,b	;volatile
  5011  001A0C                     
  5012                           ; BSR set to: 14
  5013                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  5014  001A0C  8BE8               	bsf	232,5,b	;volatile
  5015  001A0E                     
  5016                           ; BSR set to: 14
  5017                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  5018  001A0E  8FE7               	bsf	231,7,b	;volatile
  5019  001A10                     
  5020                           ; BSR set to: 14
  5021  001A10  0012               	return		;funcret
  5022  001A12                     __end_of_USART4_init:
  5023                           	callstack 0
  5024                           
  5025 ;; *************** function _DCmotors_init *****************
  5026 ;; Defined at:
  5027 ;;		line 11 in file "dc_motor.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  PWMperiod       1    wreg     unsigned char 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  PWMperiod       1    4[COMRAM] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;Total ram usage:        1 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; Hardware stack levels required when called: 6
  5048 ;; This function calls:
  5049 ;;		_buggyLEDs_init
  5050 ;;		_clicker2LEDs_init
  5051 ;;		_clicker2buttons_init
  5052 ;; This function is called by:
  5053 ;;		_main
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text31
  5058  001794                     __ptext31:
  5059                           	callstack 0
  5060  001794                     _DCmotors_init:
  5061                           	callstack 24
  5062                           
  5063                           ; BSR set to: 14
  5064                           ;incstack = 0
  5065                           ;DCmotors_init@PWMperiod stored from wreg
  5066  001794  6E05               	movwf	DCmotors_init@PWMperiod^0,c
  5067  001796                     
  5068                           ;dc_motor.c: 11: void DCmotors_init(unsigned char PWMperiod);dc_motor.c: 12: {;dc_motor.
      +                          c: 14:     T2CONbits.CKPS=0b100;
  5069  001796  50BD               	movf	189,w,c	;volatile
  5070  001798  0B8F               	andlw	-113
  5071  00179A  0940               	iorlw	64
  5072  00179C  6EBD               	movwf	189,c	;volatile
  5073                           
  5074                           ;dc_motor.c: 15:     T2HLTbits.MODE=0b00000;
  5075  00179E  0EE0               	movlw	-32
  5076  0017A0  16BE               	andwf	190,f,c	;volatile
  5077                           
  5078                           ;dc_motor.c: 16:     T2CLKCONbits.CS=0b0001;
  5079  0017A2  50BF               	movf	191,w,c	;volatile
  5080  0017A4  0BF0               	andlw	-16
  5081  0017A6  0901               	iorlw	1
  5082  0017A8  6EBF               	movwf	191,c	;volatile
  5083  0017AA                     
  5084                           ;dc_motor.c: 19:     T2PR=PWMperiod;
  5085  0017AA  C005  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  5086  0017AE                     
  5087                           ;dc_motor.c: 20:     T2CONbits.ON=1;
  5088  0017AE  8EBD               	bsf	189,7,c	;volatile
  5089  0017B0                     
  5090                           ;dc_motor.c: 23:     TRISEbits.TRISE2=0;
  5091  0017B0  9485               	bcf	133,2,c	;volatile
  5092  0017B2                     
  5093                           ;dc_motor.c: 24:     TRISEbits.TRISE4=0;
  5094  0017B2  9885               	bcf	133,4,c	;volatile
  5095  0017B4                     
  5096                           ;dc_motor.c: 25:     TRISCbits.TRISC7=0;
  5097  0017B4  9E83               	bcf	131,7,c	;volatile
  5098  0017B6                     
  5099                           ;dc_motor.c: 26:     TRISGbits.TRISG6=0;
  5100  0017B6  9C87               	bcf	135,6,c	;volatile
  5101  0017B8                     
  5102                           ;dc_motor.c: 28:     LATEbits.LATE2=0;
  5103  0017B8  947D               	bcf	125,2,c	;volatile
  5104  0017BA                     
  5105                           ;dc_motor.c: 29:     LATEbits.LATE4=0;
  5106  0017BA  987D               	bcf	125,4,c	;volatile
  5107  0017BC                     
  5108                           ;dc_motor.c: 30:     LATCbits.LATC7=0;
  5109  0017BC  9E7B               	bcf	123,7,c	;volatile
  5110  0017BE                     
  5111                           ;dc_motor.c: 31:     LATGbits.LATG6=0;
  5112  0017BE  9C7F               	bcf	127,6,c	;volatile
  5113                           
  5114                           ;dc_motor.c: 33:     PWM6DCH=0;
  5115  0017C0  0E00               	movlw	0
  5116  0017C2  6EA3               	movwf	163,c	;volatile
  5117                           
  5118                           ;dc_motor.c: 34:     PWM7DCH=0;
  5119  0017C4  0E00               	movlw	0
  5120  0017C6  6EA0               	movwf	160,c	;volatile
  5121  0017C8                     
  5122                           ;dc_motor.c: 36:     PWM6CONbits.EN = 1;
  5123  0017C8  8EA4               	bsf	164,7,c	;volatile
  5124  0017CA                     
  5125                           ;dc_motor.c: 37:     PWM7CONbits.EN = 1;
  5126  0017CA  8EA1               	bsf	161,7,c	;volatile
  5127                           
  5128                           ;dc_motor.c: 39:     RE2PPS=0x0A;
  5129  0017CC  0E0A               	movlw	10
  5130  0017CE  010E               	movlb	14	; () banked
  5131  0017D0  6F74               	movwf	116,b	;volatile
  5132                           
  5133                           ;dc_motor.c: 40:     RC7PPS=0x0B;
  5134  0017D2  0E0B               	movlw	11
  5135  0017D4  6F69               	movwf	105,b	;volatile
  5136  0017D6                     
  5137                           ; BSR set to: 14
  5138                           ;dc_motor.c: 43:     clicker2buttons_init();
  5139  0017D6  EC49  F00D         	call	_clicker2buttons_init	;wreg free
  5140  0017DA                     
  5141                           ;dc_motor.c: 44:     clicker2LEDs_init();
  5142  0017DA  EC64  F00D         	call	_clicker2LEDs_init	;wreg free
  5143  0017DE                     
  5144                           ;dc_motor.c: 45:     buggyLEDs_init();
  5145  0017DE  EC2D  F00D         	call	_buggyLEDs_init	;wreg free
  5146  0017E2  0012               	return		;funcret
  5147  0017E4                     __end_of_DCmotors_init:
  5148                           	callstack 0
  5149                           
  5150 ;; *************** function _clicker2buttons_init *****************
  5151 ;; Defined at:
  5152 ;;		line 74 in file "dc_motor.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		None
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;Total ram usage:        0 bytes
  5171 ;; Hardware stack levels used: 1
  5172 ;; Hardware stack levels required when called: 5
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_DCmotors_init
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text32
  5181  001A92                     __ptext32:
  5182                           	callstack 0
  5183  001A92                     _clicker2buttons_init:
  5184                           	callstack 24
  5185  001A92                     
  5186                           ;dc_motor.c: 77:     TRISFbits.TRISF2=1;
  5187  001A92  8486               	bsf	134,2,c	;volatile
  5188                           
  5189                           ;dc_motor.c: 78:     TRISFbits.TRISF3=1;
  5190  001A94  8686               	bsf	134,3,c	;volatile
  5191                           
  5192                           ;dc_motor.c: 79:     ANSELFbits.ANSELF2=0;
  5193  001A96  010E               	movlb	14	; () banked
  5194  001A98  95B4               	bcf	180,2,b	;volatile
  5195                           
  5196                           ;dc_motor.c: 80:     ANSELFbits.ANSELF3=0;
  5197  001A9A  97B4               	bcf	180,3,b	;volatile
  5198  001A9C                     
  5199                           ; BSR set to: 14
  5200  001A9C  0012               	return		;funcret
  5201  001A9E                     __end_of_clicker2buttons_init:
  5202                           	callstack 0
  5203                           
  5204 ;; *************** function _clicker2LEDs_init *****************
  5205 ;; Defined at:
  5206 ;;		line 86 in file "dc_motor.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		None
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5224 ;;Total ram usage:        0 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; Hardware stack levels required when called: 5
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_DCmotors_init
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text33
  5235  001AC8                     __ptext33:
  5236                           	callstack 0
  5237  001AC8                     _clicker2LEDs_init:
  5238                           	callstack 24
  5239  001AC8                     
  5240                           ;dc_motor.c: 88:     TRISDbits.TRISD7 = 0;
  5241  001AC8  9E84               	bcf	132,7,c	;volatile
  5242                           
  5243                           ;dc_motor.c: 89:     TRISHbits.TRISH3 = 0;
  5244  001ACA  9688               	bcf	136,3,c	;volatile
  5245                           
  5246                           ;dc_motor.c: 91:     LATDbits.LATD7 = 0;
  5247  001ACC  9E7C               	bcf	124,7,c	;volatile
  5248                           
  5249                           ;dc_motor.c: 92:     LATHbits.LATH3 = 0;
  5250  001ACE  9680               	bcf	128,3,c	;volatile
  5251  001AD0  0012               	return		;funcret
  5252  001AD2                     __end_of_clicker2LEDs_init:
  5253                           	callstack 0
  5254                           
  5255 ;; *************** function _buggyLEDs_init *****************
  5256 ;; Defined at:
  5257 ;;		line 98 in file "dc_motor.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;		None
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;		None
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		None
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5275 ;;Total ram usage:        0 bytes
  5276 ;; Hardware stack levels used: 1
  5277 ;; Hardware stack levels required when called: 5
  5278 ;; This function calls:
  5279 ;;		Nothing
  5280 ;; This function is called by:
  5281 ;;		_DCmotors_init
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text34
  5286  001A5A                     __ptext34:
  5287                           	callstack 0
  5288  001A5A                     _buggyLEDs_init:
  5289                           	callstack 24
  5290  001A5A                     
  5291                           ;dc_motor.c: 100:     TRISHbits.TRISH1 = 0;
  5292  001A5A  9288               	bcf	136,1,c	;volatile
  5293                           
  5294                           ;dc_motor.c: 101:     TRISDbits.TRISD3 = 0;
  5295  001A5C  9684               	bcf	132,3,c	;volatile
  5296                           
  5297                           ;dc_motor.c: 102:     TRISDbits.TRISD4 = 0;
  5298  001A5E  9884               	bcf	132,4,c	;volatile
  5299                           
  5300                           ;dc_motor.c: 103:     TRISFbits.TRISF0 = 0;
  5301  001A60  9086               	bcf	134,0,c	;volatile
  5302                           
  5303                           ;dc_motor.c: 104:     TRISHbits.TRISH0 = 0;
  5304  001A62  9088               	bcf	136,0,c	;volatile
  5305                           
  5306                           ;dc_motor.c: 106:     LATHbits.LATH1 = 0;
  5307  001A64  9280               	bcf	128,1,c	;volatile
  5308                           
  5309                           ;dc_motor.c: 107:     LATDbits.LATD3 = 0;
  5310  001A66  967C               	bcf	124,3,c	;volatile
  5311                           
  5312                           ;dc_motor.c: 108:     LATDbits.LATD4 = 0;
  5313  001A68  987C               	bcf	124,4,c	;volatile
  5314                           
  5315                           ;dc_motor.c: 109:     LATFbits.LATF0 = 0;
  5316  001A6A  907E               	bcf	126,0,c	;volatile
  5317                           
  5318                           ;dc_motor.c: 110:     LATHbits.LATH0 = 0;
  5319  001A6C  9080               	bcf	128,0,c	;volatile
  5320  001A6E  0012               	return		;funcret
  5321  001A70                     __end_of_buggyLEDs_init:
  5322                           	callstack 0
  5323                           
  5324 ;; *************** function _ADC_init *****************
  5325 ;; Defined at:
  5326 ;;		line 8 in file "ADC.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;		None
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      void 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;Total ram usage:        0 bytes
  5345 ;; Hardware stack levels used: 1
  5346 ;; Hardware stack levels required when called: 5
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_main
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           	psect	text35
  5355  001A12                     __ptext35:
  5356                           	callstack 0
  5357  001A12                     _ADC_init:
  5358                           	callstack 25
  5359  001A12                     
  5360                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  5361  001A12  8C86               	bsf	134,6,c	;volatile
  5362                           
  5363                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  5364  001A14  010E               	movlb	14	; () banked
  5365  001A16  8DB4               	bsf	180,6,b	;volatile
  5366                           
  5367                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  5368  001A18  010F               	movlb	15	; () banked
  5369  001A1A  9958               	bcf	88,4,b	;volatile
  5370  001A1C                     
  5371                           ; BSR set to: 15
  5372                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  5373  001A1C  0EFC               	movlw	-4
  5374  001A1E  1758               	andwf	88,f,b	;volatile
  5375                           
  5376                           ;ADC.c: 16:     ADPCH=0b101110;
  5377  001A20  0E2E               	movlw	46
  5378  001A22  6F5F               	movwf	95,b	;volatile
  5379  001A24                     
  5380                           ; BSR set to: 15
  5381                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  5382  001A24  9460               	bcf	96,2,c	;volatile
  5383  001A26                     
  5384                           ; BSR set to: 15
  5385                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  5386  001A26  8860               	bsf	96,4,c	;volatile
  5387  001A28                     
  5388                           ; BSR set to: 15
  5389                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  5390  001A28  8E60               	bsf	96,7,c	;volatile
  5391  001A2A                     
  5392                           ; BSR set to: 15
  5393  001A2A  0012               	return		;funcret
  5394  001A2C                     __end_of_ADC_init:
  5395                           	callstack 0
  5396                           
  5397 ;; *************** function _ADC_getval *****************
  5398 ;; Defined at:
  5399 ;;		line 26 in file "ADC.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;		None
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;  tmpval          1    4[COMRAM] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      unsigned char 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5417 ;;Total ram usage:        1 bytes
  5418 ;; Hardware stack levels used: 1
  5419 ;; Hardware stack levels required when called: 5
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_main
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text36
  5428  001A2C                     __ptext36:
  5429                           	callstack 0
  5430  001A2C                     _ADC_getval:
  5431                           	callstack 25
  5432  001A2C                     
  5433                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
  5434  001A2C  8060               	bsf	96,0,c	;volatile
  5435  001A2E                     l317:
  5436  001A2E  B060               	btfsc	96,0,c	;volatile
  5437  001A30  EF1C  F00D         	goto	u1911
  5438  001A34  EF1E  F00D         	goto	u1910
  5439  001A38                     u1911:
  5440  001A38  EF17  F00D         	goto	l317
  5441  001A3C                     u1910:
  5442  001A3C                     
  5443                           ;ADC.c: 31:     tmpval = ADRESH;
  5444  001A3C  CF64 F005          	movff	3940,ADC_getval@tmpval	;volatile
  5445  001A40                     
  5446                           ;ADC.c: 34:     return tmpval;
  5447  001A40  5005               	movf	ADC_getval@tmpval^0,w,c
  5448  001A42  0012               	return		;funcret
  5449  001A44                     __end_of_ADC_getval:
  5450                           	callstack 0
  5451                           
  5452 ;; *************** function _LowISR *****************
  5453 ;; Defined at:
  5454 ;;		line 75 in file "interrupts.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;		None
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		None
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;Total ram usage:        1 bytes
  5473 ;; Hardware stack levels used: 1
  5474 ;; Hardware stack levels required when called: 4
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		Interrupt level 1
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           	psect	intcodelo
  5483  000018                     __pintcodelo:
  5484                           	callstack 0
  5485  000018                     _LowISR:
  5486                           	callstack 22
  5487                           
  5488                           ;incstack = 0
  5489  000018  8058               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5490  00001A  CFE0 F004          	movff	bsr,??_LowISR
  5491  00001E  C004  FFE0         	movff	??_LowISR,bsr
  5492  000022  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5493  000024  0010               	retfie	
  5494  000026                     __end_of_LowISR:
  5495                           	callstack 0
  5496                           
  5497 ;; *************** function _HighISR *****************
  5498 ;; Defined at:
  5499 ;;		line 60 in file "interrupts.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;		None
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;		None
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  1    wreg      void 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5517 ;;Total ram usage:        1 bytes
  5518 ;; Hardware stack levels used: 1
  5519 ;; Hardware stack levels required when called: 3
  5520 ;; This function calls:
  5521 ;;		i2_interrupts_clear
  5522 ;; This function is called by:
  5523 ;;		Interrupt level 2
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           	psect	intcode
  5528  000008                     __pintcode:
  5529                           	callstack 0
  5530  000008                     _HighISR:
  5531                           	callstack 22
  5532                           
  5533                           ;incstack = 0
  5534  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5535  00000A  EF14  F00C         	goto	int_func
  5536                           
  5537                           	psect	intcode_body
  5538  001828                     __pintcode_body:
  5539                           	callstack 22
  5540  001828                     int_func:
  5541                           	callstack 22
  5542  001828                     
  5543                           ;interrupts.c: 61:     if (PIR0bits.INT1IF) {
  5544  001828  010E               	movlb	14	; () banked
  5545  00182A  A333               	btfss	51,1,b	;volatile
  5546  00182C  EF1A  F00C         	goto	i2u232_41
  5547  001830  EF1C  F00C         	goto	i2u232_40
  5548  001834                     i2u232_41:
  5549  001834  EF34  F00C         	goto	i2l294
  5550  001838                     i2u232_40:
  5551  001838                     
  5552                           ; BSR set to: 14
  5553                           ;interrupts.c: 62:         card_flag = 1;
  5554  001838  0E01               	movlw	1
  5555  00183A  0100               	movlb	0	; () banked
  5556  00183C  6F9D               	movwf	_card_flag& (0+255),b	;volatile
  5557  00183E                     
  5558                           ; BSR set to: 0
  5559                           ;interrupts.c: 63:         LATDbits.LATD7 = !LATDbits.LATD7;
  5560  00183E  AE7C               	btfss	124,7,c	;volatile
  5561  001840  EF24  F00C         	goto	i2u233_41
  5562  001844  EF28  F00C         	goto	i2u233_40
  5563  001848                     i2u233_41:
  5564  001848  6A03               	clrf	??_HighISR^0,c
  5565  00184A  2A03               	incf	??_HighISR^0,f,c
  5566  00184C  EF29  F00C         	goto	i2u234_48
  5567  001850                     i2u233_40:
  5568  001850  6A03               	clrf	??_HighISR^0,c
  5569  001852                     i2u234_48:
  5570  001852  3203               	rrcf	??_HighISR^0,f,c
  5571  001854  3203               	rrcf	??_HighISR^0,f,c
  5572  001856  507C               	movf	124,w,c	;volatile
  5573  001858  1803               	xorwf	??_HighISR^0,w,c
  5574  00185A  0B7F               	andlw	-129
  5575  00185C  1803               	xorwf	??_HighISR^0,w,c
  5576  00185E  6E7C               	movwf	124,c	;volatile
  5577  001860                     
  5578                           ;interrupts.c: 64:         interrupts_clear();
  5579  001860  EC38  F00D         	call	i2_interrupts_clear	;wreg free
  5580  001864                     
  5581                           ;interrupts.c: 65:         PIR0bits.INT1IF = 0;
  5582  001864  010E               	movlb	14	; () banked
  5583  001866  9333               	bcf	51,1,b	;volatile
  5584  001868                     i2l294:
  5585                           
  5586                           ; BSR set to: 14
  5587  001868  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5588  00186A  0011               	retfie		f
  5589  00186C                     __end_of_HighISR:
  5590                           	callstack 0
  5591                           
  5592 ;; *************** function i2_interrupts_clear *****************
  5593 ;; Defined at:
  5594 ;;		line 47 in file "interrupts.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;		None
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      void 
  5601 ;; Registers used:
  5602 ;;		wreg, status,2, status,0, cstack
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5612 ;;Total ram usage:        0 bytes
  5613 ;; Hardware stack levels used: 1
  5614 ;; Hardware stack levels required when called: 2
  5615 ;; This function calls:
  5616 ;;		i2_I2C_2_Master_Start
  5617 ;;		i2_I2C_2_Master_Stop
  5618 ;;		i2_I2C_2_Master_Write
  5619 ;; This function is called by:
  5620 ;;		_HighISR
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text39
  5625  001A70                     __ptext39:
  5626                           	callstack 0
  5627  001A70                     i2_interrupts_clear:
  5628                           	callstack 22
  5629  001A70                     
  5630                           ;interrupts.c: 48:     I2C_2_Master_Start();
  5631  001A70  EC6E  F00D         	call	i2_I2C_2_Master_Start	;wreg free
  5632                           
  5633                           ;interrupts.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  5634  001A74  0E52               	movlw	82
  5635  001A76  EC4F  F00D         	call	i2_I2C_2_Master_Write
  5636                           
  5637                           ;interrupts.c: 50:     I2C_2_Master_Write(0b11100110);
  5638  001A7A  0EE6               	movlw	230
  5639  001A7C  EC4F  F00D         	call	i2_I2C_2_Master_Write
  5640                           
  5641                           ;interrupts.c: 51:     I2C_2_Master_Stop();
  5642  001A80  EC69  F00D         	call	i2_I2C_2_Master_Stop	;wreg free
  5643  001A84  0012               	return		;funcret
  5644  001A86                     __end_ofi2_interrupts_clear:
  5645                           	callstack 0
  5646                           
  5647 ;; *************** function i2_I2C_2_Master_Write *****************
  5648 ;; Defined at:
  5649 ;;		line 69 in file "i2c.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  data_byte       1    wreg     unsigned char 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  data_byte       1    1[COMRAM] unsigned char 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5667 ;;Total ram usage:        1 bytes
  5668 ;; Hardware stack levels used: 1
  5669 ;; Hardware stack levels required when called: 1
  5670 ;; This function calls:
  5671 ;;		i2_I2C_2_Master_Idle
  5672 ;; This function is called by:
  5673 ;;		i2_interrupts_clear
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text40
  5678  001A9E                     __ptext40:
  5679                           	callstack 0
  5680  001A9E                     i2_I2C_2_Master_Write:
  5681                           	callstack 22
  5682                           
  5683                           ;incstack = 0
  5684                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  5685  001A9E  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  5686  001AA0                     
  5687                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  5688  001AA0  ECA0  F00C         	call	i2_I2C_2_Master_Idle	;wreg free
  5689  001AA4                     
  5690                           ;i2c.c: 72:   SSP2BUF = data_byte;
  5691  001AA4  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  5692  001AA8  0012               	return		;funcret
  5693  001AAA                     __end_ofi2_I2C_2_Master_Write:
  5694                           	callstack 0
  5695                           
  5696 ;; *************** function i2_I2C_2_Master_Stop *****************
  5697 ;; Defined at:
  5698 ;;		line 59 in file "i2c.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;		None
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, status,0, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5716 ;;Total ram usage:        0 bytes
  5717 ;; Hardware stack levels used: 1
  5718 ;; Hardware stack levels required when called: 1
  5719 ;; This function calls:
  5720 ;;		i2_I2C_2_Master_Idle
  5721 ;; This function is called by:
  5722 ;;		i2_interrupts_clear
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           	psect	text41
  5727  001AD2                     __ptext41:
  5728                           	callstack 0
  5729  001AD2                     i2_I2C_2_Master_Stop:
  5730                           	callstack 22
  5731  001AD2                     
  5732                           ;i2c.c: 61:   I2C_2_Master_Idle();
  5733  001AD2  ECA0  F00C         	call	i2_I2C_2_Master_Idle	;wreg free
  5734  001AD6                     
  5735                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  5736  001AD6  010E               	movlb	14	; () banked
  5737  001AD8  85DA               	bsf	218,2,b	;volatile
  5738  001ADA                     
  5739                           ; BSR set to: 14
  5740  001ADA  0012               	return		;funcret
  5741  001ADC                     __end_ofi2_I2C_2_Master_Stop:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function i2_I2C_2_Master_Start *****************
  5745 ;; Defined at:
  5746 ;;		line 39 in file "i2c.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0, cstack
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; Hardware stack levels required when called: 1
  5767 ;; This function calls:
  5768 ;;		i2_I2C_2_Master_Idle
  5769 ;; This function is called by:
  5770 ;;		i2_interrupts_clear
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text42
  5775  001ADC                     __ptext42:
  5776                           	callstack 0
  5777  001ADC                     i2_I2C_2_Master_Start:
  5778                           	callstack 22
  5779  001ADC                     
  5780                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5781  001ADC  ECA0  F00C         	call	i2_I2C_2_Master_Idle	;wreg free
  5782  001AE0                     
  5783                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  5784  001AE0  010E               	movlb	14	; () banked
  5785  001AE2  81DA               	bsf	218,0,b	;volatile
  5786  001AE4                     
  5787                           ; BSR set to: 14
  5788  001AE4  0012               	return		;funcret
  5789  001AE6                     __end_ofi2_I2C_2_Master_Start:
  5790                           	callstack 0
  5791                           
  5792 ;; *************** function i2_I2C_2_Master_Idle *****************
  5793 ;; Defined at:
  5794 ;;		line 30 in file "i2c.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5812 ;;Total ram usage:        1 bytes
  5813 ;; Hardware stack levels used: 1
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		i2_I2C_2_Master_Start
  5818 ;;		i2_I2C_2_Master_Stop
  5819 ;;		i2_I2C_2_Master_Write
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text43
  5824  001940                     __ptext43:
  5825                           	callstack 0
  5826  001940                     i2_I2C_2_Master_Idle:
  5827                           	callstack 22
  5828  001940                     i2l30:
  5829  001940  010E               	movlb	14	; () banked
  5830  001942  B5D8               	btfsc	216,2,b	;volatile
  5831  001944  EFA6  F00C         	goto	i2u137_41
  5832  001948  EFA8  F00C         	goto	i2u137_40
  5833  00194C                     i2u137_41:
  5834  00194C  EFA0  F00C         	goto	i2l30
  5835  001950                     i2u137_40:
  5836  001950                     
  5837                           ; BSR set to: 14
  5838  001950  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5839  001954  0E1F               	movlw	31
  5840  001956  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5841  001958  A4D8               	btfss	status,2,c
  5842  00195A  EFB1  F00C         	goto	i2u138_41
  5843  00195E  EFB3  F00C         	goto	i2u138_40
  5844  001962                     i2u138_41:
  5845  001962  EFA0  F00C         	goto	i2l30
  5846  001966                     i2u138_40:
  5847  001966                     
  5848                           ; BSR set to: 14
  5849  001966  0012               	return		;funcret
  5850  001968                     __end_ofi2_I2C_2_Master_Idle:
  5851                           	callstack 0
  5852  0000                     
  5853                           	psect	rparam
  5854  0000                     
  5855                           	psect	temp
  5856  000058                     btemp:
  5857                           	callstack 0
  5858  000058                     	ds	1
  5859  0000                     int$flags	set	btemp
  5860  0000                     wtemp8	set	btemp+1
  5861  0000                     ttemp5	set	btemp+1
  5862  0000                     ttemp6	set	btemp+4
  5863  0000                     ttemp7	set	btemp+8
  5864                           
  5865                           	psect	idloc
  5866                           
  5867                           ;Config register IDLOC0 @ 0x200000
  5868                           ;	unspecified, using default values
  5869  200000                     	org	2097152
  5870  200000  0FFF               	dw	4095
  5871                           
  5872                           ;Config register IDLOC1 @ 0x200002
  5873                           ;	unspecified, using default values
  5874  200002                     	org	2097154
  5875  200002  0FFF               	dw	4095
  5876                           
  5877                           ;Config register IDLOC2 @ 0x200004
  5878                           ;	unspecified, using default values
  5879  200004                     	org	2097156
  5880  200004  0FFF               	dw	4095
  5881                           
  5882                           ;Config register IDLOC3 @ 0x200006
  5883                           ;	unspecified, using default values
  5884  200006                     	org	2097158
  5885  200006  0FFF               	dw	4095
  5886                           
  5887                           ;Config register IDLOC4 @ 0x200008
  5888                           ;	unspecified, using default values
  5889  200008                     	org	2097160
  5890  200008  0FFF               	dw	4095
  5891                           
  5892                           ;Config register IDLOC5 @ 0x20000A
  5893                           ;	unspecified, using default values
  5894  20000A                     	org	2097162
  5895  20000A  0FFF               	dw	4095
  5896                           
  5897                           ;Config register IDLOC6 @ 0x20000C
  5898                           ;	unspecified, using default values
  5899  20000C                     	org	2097164
  5900  20000C  0FFF               	dw	4095
  5901                           
  5902                           ;Config register IDLOC7 @ 0x20000E
  5903                           ;	unspecified, using default values
  5904  20000E                     	org	2097166
  5905  20000E  0FFF               	dw	4095
  5906                           
  5907                           	psect	config
  5908                           
  5909                           ;Config register CONFIG1L @ 0x300000
  5910                           ;	External Oscillator mode Selection bits
  5911                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5912                           ;	Power-up default value for COSC bits
  5913                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5914  300000                     	org	3145728
  5915  300000  AA                 	db	170
  5916                           
  5917                           ;Config register CONFIG1H @ 0x300001
  5918                           ;	unspecified, using default values
  5919                           ;	Clock Out Enable bit
  5920                           ;	CLKOUTEN = 0x1, unprogrammed default
  5921                           ;	Clock Switch Enable bit
  5922                           ;	CSWEN = 0x1, unprogrammed default
  5923                           ;	Fail-Safe Clock Monitor Enable bit
  5924                           ;	FCMEN = 0x1, unprogrammed default
  5925  300001                     	org	3145729
  5926  300001  FF                 	db	255
  5927                           
  5928                           ;Config register CONFIG2L @ 0x300002
  5929                           ;	unspecified, using default values
  5930                           ;	Master Clear Enable bit
  5931                           ;	MCLRE = 0x1, unprogrammed default
  5932                           ;	Power-up Timer Enable bit
  5933                           ;	PWRTE = 0x1, unprogrammed default
  5934                           ;	Low-power BOR enable bit
  5935                           ;	LPBOREN = 0x1, unprogrammed default
  5936                           ;	Brown-out Reset Enable bits
  5937                           ;	BOREN = 0x3, unprogrammed default
  5938  300002                     	org	3145730
  5939  300002  FF                 	db	255
  5940                           
  5941                           ;Config register CONFIG2H @ 0x300003
  5942                           ;	unspecified, using default values
  5943                           ;	Brown Out Reset Voltage selection bits
  5944                           ;	BORV = 0x3, unprogrammed default
  5945                           ;	ZCD Disable bit
  5946                           ;	ZCD = 0x1, unprogrammed default
  5947                           ;	PPSLOCK bit One-Way Set Enable bit
  5948                           ;	PPS1WAY = 0x1, unprogrammed default
  5949                           ;	Stack Full/Underflow Reset Enable bit
  5950                           ;	STVREN = 0x1, unprogrammed default
  5951                           ;	Debugger Enable bit
  5952                           ;	DEBUG = 0x1, unprogrammed default
  5953                           ;	Extended Instruction Set Enable bit
  5954                           ;	XINST = 0x1, unprogrammed default
  5955  300003                     	org	3145731
  5956  300003  FF                 	db	255
  5957                           
  5958                           ;Config register CONFIG3L @ 0x300004
  5959                           ;	WDT Period Select bits
  5960                           ;	WDTCPS = 0x1F, unprogrammed default
  5961                           ;	WDT operating mode
  5962                           ;	WDTE = OFF, WDT Disabled
  5963  300004                     	org	3145732
  5964  300004  9F                 	db	159
  5965                           
  5966                           ;Config register CONFIG3H @ 0x300005
  5967                           ;	unspecified, using default values
  5968                           ;	WDT Window Select bits
  5969                           ;	WDTCWS = 0x7, unprogrammed default
  5970                           ;	WDT input clock selector
  5971                           ;	WDTCCS = 0x7, unprogrammed default
  5972  300005                     	org	3145733
  5973  300005  FF                 	db	255
  5974                           
  5975                           ;Config register CONFIG4L @ 0x300006
  5976                           ;	unspecified, using default values
  5977                           ;	Write Protection Block 0
  5978                           ;	WRT0 = 0x1, unprogrammed default
  5979                           ;	Write Protection Block 1
  5980                           ;	WRT1 = 0x1, unprogrammed default
  5981                           ;	Write Protection Block 2
  5982                           ;	WRT2 = 0x1, unprogrammed default
  5983                           ;	Write Protection Block 3
  5984                           ;	WRT3 = 0x1, unprogrammed default
  5985                           ;	Write Protection Block 3
  5986                           ;	WRT4 = 0x1, unprogrammed default
  5987                           ;	Write Protection Block 3
  5988                           ;	WRT5 = 0x1, unprogrammed default
  5989                           ;	Write Protection Block 3
  5990                           ;	WRT6 = 0x1, unprogrammed default
  5991                           ;	Write Protection Block 3
  5992                           ;	WRT7 = 0x1, unprogrammed default
  5993  300006                     	org	3145734
  5994  300006  FF                 	db	255
  5995                           
  5996                           ;Config register CONFIG4H @ 0x300007
  5997                           ;	unspecified, using default values
  5998                           ;	Configuration Register Write Protection bit
  5999                           ;	WRTC = 0x1, unprogrammed default
  6000                           ;	Boot Block Write Protection bit
  6001                           ;	WRTB = 0x1, unprogrammed default
  6002                           ;	Data EEPROM Write Protection bit
  6003                           ;	WRTD = 0x1, unprogrammed default
  6004                           ;	Scanner Enable bit
  6005                           ;	SCANE = 0x1, unprogrammed default
  6006                           ;	Low Voltage Programming Enable bit
  6007                           ;	LVP = 0x1, unprogrammed default
  6008  300007                     	org	3145735
  6009  300007  FF                 	db	255
  6010                           
  6011                           ;Config register CONFIG5L @ 0x300008
  6012                           ;	unspecified, using default values
  6013                           ;	UserNVM Program Memory Code Protection bit
  6014                           ;	CP = 0x1, unprogrammed default
  6015                           ;	DataNVM Memory Code Protection bit
  6016                           ;	CPD = 0x1, unprogrammed default
  6017  300008                     	org	3145736
  6018  300008  FF                 	db	255
  6019                           
  6020                           ;Config register CONFIG5H @ 0x300009
  6021                           ;	unspecified, using default values
  6022  300009                     	org	3145737
  6023  300009  FF                 	db	255
  6024                           
  6025                           ;Config register CONFIG6L @ 0x30000A
  6026                           ;	unspecified, using default values
  6027                           ;	Table Read Protection Block 0
  6028                           ;	EBTR0 = 0x1, unprogrammed default
  6029                           ;	Table Read Protection Block 1
  6030                           ;	EBTR1 = 0x1, unprogrammed default
  6031                           ;	Table Read Protection Block 2
  6032                           ;	EBTR2 = 0x1, unprogrammed default
  6033                           ;	Table Read Protection Block 3
  6034                           ;	EBTR3 = 0x1, unprogrammed default
  6035                           ;	Table Read Protection Block 4
  6036                           ;	EBTR4 = 0x1, unprogrammed default
  6037                           ;	Table Read Protection Block 5
  6038                           ;	EBTR5 = 0x1, unprogrammed default
  6039                           ;	Table Read Protection Block 6
  6040                           ;	EBTR6 = 0x1, unprogrammed default
  6041                           ;	Table Read Protection Block 7
  6042                           ;	EBTR7 = 0x1, unprogrammed default
  6043  30000A                     	org	3145738
  6044  30000A  FF                 	db	255
  6045                           
  6046                           ;Config register CONFIG6H @ 0x30000B
  6047                           ;	unspecified, using default values
  6048                           ;	Boot Block Table Read Protection bit
  6049                           ;	EBTRB = 0x1, unprogrammed default
  6050  30000B                     	org	3145739
  6051  30000B  FF                 	db	255
  6052                           tosu	equ	0xFFF
  6053                           tosh	equ	0xFFE
  6054                           tosl	equ	0xFFD
  6055                           stkptr	equ	0xFFC
  6056                           pclatu	equ	0xFFB
  6057                           pclath	equ	0xFFA
  6058                           pcl	equ	0xFF9
  6059                           tblptru	equ	0xFF8
  6060                           tblptrh	equ	0xFF7
  6061                           tblptrl	equ	0xFF6
  6062                           tablat	equ	0xFF5
  6063                           prodh	equ	0xFF4
  6064                           prodl	equ	0xFF3
  6065                           indf0	equ	0xFEF
  6066                           postinc0	equ	0xFEE
  6067                           postdec0	equ	0xFED
  6068                           preinc0	equ	0xFEC
  6069                           plusw0	equ	0xFEB
  6070                           fsr0h	equ	0xFEA
  6071                           fsr0l	equ	0xFE9
  6072                           wreg	equ	0xFE8
  6073                           indf1	equ	0xFE7
  6074                           postinc1	equ	0xFE6
  6075                           postdec1	equ	0xFE5
  6076                           preinc1	equ	0xFE4
  6077                           plusw1	equ	0xFE3
  6078                           fsr1h	equ	0xFE2
  6079                           fsr1l	equ	0xFE1
  6080                           bsr	equ	0xFE0
  6081                           indf2	equ	0xFDF
  6082                           postinc2	equ	0xFDE
  6083                           postdec2	equ	0xFDD
  6084                           preinc2	equ	0xFDC
  6085                           plusw2	equ	0xFDB
  6086                           fsr2h	equ	0xFDA
  6087                           fsr2l	equ	0xFD9
  6088                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      87
    BANK0           160     41     103
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    read_card@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    read_card@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S260$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S260$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_read_card
    _read_card->_turnLeft
    _read_card->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _reverse->_setMotorPWM
    ___flge->___xxtofl
    _interrupts_init->_colorclick_writetoaddr
    _interrupts_clear->_I2C_2_Master_Write
    _forward->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _colorclick_readColour->_colorclick_readBlue
    _colorclick_readColour->_colorclick_readClear
    _colorclick_readColour->_colorclick_readGreen
    _colorclick_readColour->_colorclick_readRed
    _colorclick_readRed->_I2C_2_Master_Read
    _colorclick_readGreen->_I2C_2_Master_Read
    _colorclick_readClear->_I2C_2_Master_Read
    _colorclick_readBlue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colorclick_init->_colorclick_writetoaddr
    _colorclick_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_read_card

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   35600
                                             56 COMRAM     2     2      0
                                              6 BANK0     35    35      0
                         _ADC_getval
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                    _colorclick_init
              _colorclick_readColour
                            _forward
                    _interrupts_init
                          _read_card
 ---------------------------------------------------------------------------------
 (1) _read_card                                           26     6     20   28615
                                             36 COMRAM    20     0     20
                                              0 BANK0      6     6      0
                             ___flge
                            ___lwdiv
                           ___xxtofl
                            _reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            7     2      5    5128
                                             29 COMRAM     7     2      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                             7     2      5    4318
                                             29 COMRAM     7     2      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4756
                                             29 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              6     2      4    3496
                                             29 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    2636
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     781
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    4586
                                             18 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      1     1      0     772
                                              8 COMRAM     1     1      0
             _colorclick_writetoaddr
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0      22
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _forward                                              6     2      4    3316
                                             29 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2888
                                             18 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     472
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     685
                                             10 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _colorclick_readColour                                8     0      8     775
                                             15 COMRAM     8     0      8
                _colorclick_readBlue
               _colorclick_readClear
               _colorclick_readGreen
                 _colorclick_readRed
 ---------------------------------------------------------------------------------
 (2) _colorclick_readRed                                   7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readGreen                                 7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readClear                                 7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readBlue                                  7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _colorclick_init                                      1     1      0     816
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
          _colorclick_toggleClearLED
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colorclick_writetoaddr                               2     1      1     750
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colorclick_toggleClearLED                            1     1      0      66
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              4 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           1     1      0      23
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _LowISR                                               1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              1     1      0      22
                                              2 COMRAM     1     1      0
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (7) i2_interrupts_clear                                   0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (8) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (8) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (8) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Idle                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _colorclick_init
     _I2C_2_Master_Init
     _colorclick_toggleClearLED
     _colorclick_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colorclick_readColour
     _colorclick_readBlue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readClear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readGreen
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readRed
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _interrupts_init
     _colorclick_writetoaddr
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _read_card
     ___flge
       ___xxtofl (ARG)
     ___lwdiv
     ___xxtofl
     _reverse
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      67       5       64.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      57       1       92.6%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BE       8        0.0%
DATA                 0      0      BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 14:13:28 2021

        __end_of_colorclick_readRed 16A4         __end_of_colorclick_readBlue 1794  
      __end_of_colorclick_readClear 1744        __end_of_colorclick_readGreen 16F4  
                                l30 1918                                  l33 193E  
                                l42 1ABC                                  l27 1916  
                                l36 1AC6                                  l45 1A90  
                                l39 1AB2                                  l48 18AC  
             __end_of_DCmotors_init 17E4                        ___awdiv@sign 0010  
                                bsr 000FE0                 ___wmul@multiplicand 0007  
    __size_of_colorclick_readColour 0044       __end_of_colorclick_readColour 1828  
            _colorclick_writetoaddr 19D2                                 l111 096E  
                               l204 14DC                                 l212 1442  
                               l220 1572                                 l230 0E26  
                               l207 1412                                 l320 1A42  
                               l224 0D3A                                 l314 1A2A  
                               l234 0E56                                 l250 0C72  
                               l219 1570                                 l235 0E58  
                               l243 0B84                                 l228 0D6A  
                               l317 1A2E                                 l245 0C40  
                               l190 1AD0                                 l502 198C  
                               l319 1A3C                                 l239 0B54  
                               l184 102C                                 l193 1A6E  
                               l177 17E2                                 l249 0C70  
                               l187 1A9C                                 l443 18EC  
                               l452 19F0                                 l461 1792  
                               l285 1652                                 l359 1A10  
                               l455 16A2                                 l199 14AC  
                               l464 1742                                 l288 1A58  
                               l449 19D0                                 l458 16F2  
                               l467 1826                                 l733 13A8  
                               l499 088A                                 l772 12E4  
                               l767 129E                                 l993 15DE  
                               wreg 000FE8                         main@battery 00A4  
               __size_of_ADC_getval 0018                     _colorclick_init 18AE  
                              l1000 15E6                                l2001 1AB8  
                              l2003 1A88                                l2011 187A  
                              l2005 1A8C                                l2013 1882  
                              l2015 18A8                                l2007 186E  
                              l1160 11E0                                l2041 18F8  
                              l2017 18AA                                l2009 1872  
                              l3001 08C2                                l2051 1A92  
                              l2043 18FE                                l1171 1178  
                              l3011 08DE                                l3003 08CA  
                              l1164 111C                                l2301 1A1C  
                              l2053 1AC8                                l2045 1900  
                              l1157 1084                                l3021 091E  
                              l3013 08E6                                l3005 08CE  
                              l2303 1A24                                l2055 1A5A  
                              l2047 1902                                l2039 18EE  
                              l2311 18B2                                l3031 0966  
                              l3023 0936                                l3015 08EE  
                              l3007 08D6                                l2305 1A26  
                              l2401 1A0C                                l2049 1904  
                              l2321 18E2                                l2313 18BC  
                              l3041 09FA                                l3033 0972  
                              l3025 093E                                l3017 08F2  
                              l3009 08DA                                l2411 1A2C  
                              l2307 1A28                                l2403 1A0E  
                              l2171 19B2                                l2323 18E4  
                              l2315 18CC                                l2331 15F4  
                              l3051 0A7E                                l3043 0A0C  
                              l3035 098A                                l3027 094E  
                              l3019 08FA                                l2413 1A40  
                              l2325 18E6                                l2317 18D6  
                              l2309 18AE                                l2181 16EA  
                              l2173 1654                                l2405 17E4  
                              l2341 1618                                l2333 15F8  
                              l3053 0A82                                l3045 0A30  
                              l3037 099E                                l3029 0956  
                              l2319 18E0                                l2191 16F4  
                              l2175 169A                                l2407 1814  
                              l2167 1A44                                l2351 164A  
                              l2343 1622                                l2335 15FA  
                              l2327 15E8                                l3047 0A68  
                              l3039 09C2                                l2361 17AA  
                              l2169 19D4                                l2185 1744  
                              l2193 173A                                l2353 164C  
                              l2345 162C                                l2337 15FE  
                              l2329 15EE                                l3049 0A6E  
                              l2371 17B6                                l2363 17AE  
                              l2187 178A                                l2179 16A4  
                              l2355 164E                                l2347 1636  
                              l2339 1608                                l2381 17C8  
                              l2373 17B8                                l2365 17B0  
                              l2357 1650                                l2349 1640  
                              l2701 13AA                                l2383 17CA  
                              l2375 17BA                                l2367 17B2  
                              l2359 1796                                l2391 19F2  
                              l2711 142A                                l2703 13CE  
                              l2385 17D6                                l2377 17BC  
                              l2369 17B4                                l2393 19FC  
                              l2705 13E2                                l2721 1528  
                              l2713 14DE                                l2801 0C06  
                              l2299 1A12                                l2387 17DA  
                              l2379 17BE                                l2395 19FE  
                              l2651 1304                                l2643 12E6  
                              l2811 11E2                                l2707 13EE  
                              l2715 14E4                                l2723 1540  
                              l2731 0CA8                                l2803 0C10  
                              l2389 17DE                                l2397 1A00  
                              l2661 1338                                l2653 1312  
                              l2645 12EA                                l2637 1968  
                              l2901 1444                                l2821 126C  
                              l2813 1210                                l2709 13FA  
                              l2725 1558                                l2717 1510  
                              l2741 0D0A                                l2733 0CC6  
                              l2805 0C1C                                l2399 1A0A  
                              l2671 1372                                l2663 1340  
                              l2655 131A                                l2647 12F8  
                              l2639 1984                                l2911 14C4  
                              l2903 1468                                l2823 127E  
                              l2815 1220                                l2719 151C  
                              l2751 0D94                                l2743 0D16  
                              l2735 0CDE                                l2727 0C74  
                              l2807 0C28                                l1937 1918  
                              l2681 1398                                l2673 137A  
                              l2665 1348                                l2657 131E  
                              l2649 1300                                l2905 147C  
                              l2825 128C                                l2817 124E  
                              l2841 159E                                l2833 1574  
                              l2761 0DF6                                l2753 0DB2  
                              l2745 0D22                                l2737 0CE8  
                              l2729 0C84                                l2809 0C58  
                              l2921 017A                                l2913 002A  
                              l1939 1928                                l2683 13A0  
                              l2675 137C                                l2667 1356  
                              l2659 1326                                l2691 0ED8  
                              l2907 1488                                l2827 12DC  
                              l2819 125E                                l2851 15D2  
                              l2843 15AC                                l2835 157C  
                              l2763 0E02                                l2755 0DCA  
                              l2747 0D52                                l2739 0D00  
                              l2771 0A9E                                l2931 02BA  
                              l2923 01BE                                l2915 00C2  
                              l2677 1382                                l2669 135C  
                              l2693 0F1E                                l2909 1494  
                              l2829 12E2                                l2853 15D8  
                              l2845 15B2                                l2837 158E  
                              l2861 1094                                l2765 0E0E  
                              l2757 0DD4                                l2749 0D70  
                              l2781 0B1A                                l2773 0AC2  
                              l2941 03FA                                l2933 02FE  
                              l2925 0202                                l2917 0106  
                              l1991 1ABE                                l2679 1388  
                              l2695 0F3E                                l2687 0E5A  
                              l2847 15C8                                l2839 1596  
                              l2871 10D2                                l2863 10AA  
                              l2855 1030                                l2767 0E3E  
                              l2759 0DEC                                l2783 0B24  
                              l2775 0AE0                                l2791 0B8A  
                              l2951 054E                                l2943 043E  
                              l2935 0342                                l2927 0246  
                              l2919 014A                                l1993 1AC2  
                              l2697 0F5A                                l2689 0E76  
                              l2849 15D0                                l2881 115A  
                              l2873 1104                                l2857 1040  
                              l2793 0BAE                                l2785 0B30  
                              l2777 0AF8                                l2769 0A8E  
                              l2961 068E                                l2953 0592  
                              l2945 0482                                l2937 0372  
                              l2929 0276                                l1995 1AAA  
                              l2699 0FC4                                l2891 11B0  
                              l2883 1168                                l2875 1106  
                              l2867 10BE                                l2859 104E  
                              l2795 0BCC                                l2787 0B3C  
                              l2779 0B02                                l2971 07CE  
                              l2963 06D2                                l2955 05D6  
                              l2947 04C6                                l2939 03B6  
                              l1997 1AAE                                l2893 11C0  
                              l2885 1186                                l2877 1112  
                              l2869 10C6                                l2797 0BE4  
                              l2789 0B6C                                l2981 0876  
                              l2973 0812                                l2965 0716  
                              l2957 061A                                l2949 050A  
                              l1999 1AB4                                l2895 11CE  
                              l2887 1188                                l2879 114E  
                              l2799 0BEE                                l2967 075A  
                              l2959 065E                                l2991 08A6  
                              l2983 088C                                l2897 11D0  
                              l2889 118C                                l2977 085A  
                              l2969 078A                                l2993 08AC  
                              l2985 089A                                l2979 085E  
                              l2995 08B0                                l2987 089E  
                              l2997 08B6                                l2989 08A2  
                              l2999 08BA                                u1230 1928  
                              u1310 1896                                u1231 1924  
                              u1311 188E                                u1240 193E  
                              u3000 01BE                                u1241 193A  
                              u3001 01BA                                u3010 0202  
                              u3011 01FE                                u3100 050A  
                              u3020 0246                                u3101 0506  
                              u3021 0242                                u3110 054E  
                              u3030 02BA                                u3111 054A  
                              u3031 02B6                                u1328 1898  
                              u2400 1356                                u3200 0856  
                              u3120 05D6                                u3040 02FE  
                      _BAUD4CONbits 000EE9                                u2401 1352  
                              u3201 0852                                u3121 05D2  
                              u3041 02FA                                _LATE 000F7D  
                              u2410 1372                                u3130 061A  
                              u3050 0342                                u2411 136E  
                              u3131 0616                                u3051 033E  
                              u3211 0904                                _LATG 000F7F  
                              u2420 1398                                u2500 1570  
                              u3140 065E                                u3060 03B6  
                              u2421 1394                                u2501 156C  
                              u3141 065A                                u3061 03B2  
                              u3301 0A16                                u3221 0916  
                              u2430 0E76                                u2510 0C84  
                              u3150 06D2                                u3070 03FA  
                              u3230 094E                                u2431 0E72  
                              u2511 0C80                                u3151 06CE  
                              u3071 03F6                                u3311 0A28  
                              u3231 094A                                u2440 0F5A  
                              u2600 0DCA                                u2520 0CBA  
                              u3160 0716                                u3080 043E  
                              u3240 0966                                u1705 19C4  
                              u2441 0F56                                u2601 0DC6  
                              u2521 0CB2                                u3161 0712  
                              u3081 043A                                u3321 0A3A  
                              u3241 0962                                u1706 19C6  
                              u2370 12F8                                u2610 0DEC  
                              u3170 075A                                u3090 04C6  
                              _T2PR 000FBC                                u1715 19CE  
                              u2371 12F4                                u2611 0DE8  
                              u3171 0756                                u3091 04C2  
                              u3331 0A4C                                u3251 09A8  
                              u1716 19D0                                u2380 1312  
                              u2620 0E3E                                u2540 0CDE  
                              u2700 0B84                                u3180 07CE  
                              u3340 0A7E                                u1901 181E  
                              u2381 130E                                u2621 0E3A  
                              u2541 0CDA                                u2701 0B80  
                              u3181 07CA                                u3341 0A7A  
                              u3261 09BA                                u1910 1A3C  
                              u2390 1338                                u2454 0FB4  
                              u2470 142A                                u2630 0E56  
                              u2550 0D00                                u2710 0BC0  
                              u3190 0812                                u1911 1A38  
                              u2391 1334                                u2455 0FB0  
                              u2471 1426                                u2631 0E52  
                              u3407 0E18                                u2551 0CFC  
                              u2711 0BB8                                u3191 080E  
                              u3271 09CC                                u2464 101E  
                              u2800 128C                                u2480 1442  
                              u2560 0D52                                u2640 0A9E  
                              u2465 101A                                u2801 1288  
                              u2481 143E                                u3417 1532  
                              u2561 0D4E                                u2641 0A9A  
                              u3281 09DE                                u2810 12DC  
                              u2490 1558                                u2570 0D6A  
                              u2538 0CBC                                u2730 0BE4  
                              u2650 0AD4                                u3290 0A0C  
                              u2811 12D8                                u3427 1404  
                              u2491 1554                                u2571 0D66  
                              u2731 0BE0                                u2651 0ACC  
                              u3291 0A08                                u2820 158E  
                              u2900 1168                                u2580 0DA6  
                              u2740 0C06                                u3437 160E  
                              u2821 158A                                u2901 1164  
                              u2581 0D9E                                u2741 0C02  
                              u3357 0928                                u2830 15AC  
                              u2910 1178                                u2750 0C58  
                              u2670 0AF8                                u1695 19BA  
                              u3447 149E                                u2831 15A8  
                              u2911 1174                                u2751 0C54  
                              u2671 0AF4                                u3367 097C  
                              u1696 19BC                                u2840 15C8  
                              u2920 1186                                u2760 0C70  
                              u2728 0BC2                                u2680 0B1A  
                              u3457 18C2                                u2841 15C4  
                              u2921 1182                                u2761 0C6C  
                              u3377 0B46                                u2681 0B16  
                              u2770 1210                                u2930 11C0  
                              u2850 1040                                u2690 0B6C  
                              u2771 120C                                u2931 11BC  
                              u2851 103C                                u3387 0C32  
                              u2691 0B68                                u2780 124E  
                              u2940 11CE                                u2860 104E  
                              u2668 0AD6                                u2781 124A  
                              u2941 11CA                                u2861 104A  
                              u3397 0D2C                                u2950 14C4  
                              u2790 126C                                u2870 10AA  
                              u2598 0DA8                                u2951 14C0  
                              u2791 1268                                u2871 10A6  
                              u2960 14DC                                u2880 1100  
                              u2961 14D8                                u2881 10FC  
                              u2890 114A                                u2970 00C2  
                              u2891 1146                                u2971 00BE  
                              u2980 0106                                u2981 0102  
                              i2l30 1940                                u2990 014A  
                              u2991 0146                                i2l33 1966  
                              i2l42 1ADA                                i2l36 1AE4  
                              i2l45 1AA8       colorclick_writetoaddr@address 0008  
                       main@current 00AD                         main@initial 00A5  
 __end_of_colorclick_toggleClearLED 19D2             __end_of_interrupts_init 1654  
                              _main 088C                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 0058  
                              _stop 14DE                                prodh 000FF4  
                              prodl 000FF3                                start 0026  
                  __end_of_ADC_init 1A2C                     __end_of_HighISR 186C  
                      ___param_bank 000000              ??_clicker2buttons_init 0005  
                             ?_main 0001                               _ADPCH 000F5F  
                   __end_of___awdiv 13AA                               ?_stop 001E  
                   ___awdiv@divisor 000D                     __end_of___lwdiv 15E8  
                             i1l299 001E                               i2l294 1868  
                             i2l288 1A84                     ___awdiv@counter 000F  
          __end_of_interrupts_clear 1A5A          __end_of_I2C_2_Master_Start 1AC8  
        __end_of_I2C_2_Master_Write 1A92                     __end_of_forward 14DE  
                 _clicker2LEDs_init 1AC8                     __end_of_reverse 1444  
                             plusw0 000FEB                               plusw2 000FDB  
            DCmotors_init@PWMperiod 0005                  ?_clicker2LEDs_init 0001  
                             ttemp5 0059                               ttemp6 005C  
                             ttemp7 0060                               status 000FD8  
                             wtemp8 0059               _I2C_2_Master_RepStart 1AAA  
                   __initialization 198E                 ??_clicker2LEDs_init 0005  
                      __end_of_main 0A8E                        __end_of_stop 1574  
                            ??_main 0039             __end_of_colorclick_init 18EE  
                            ??_stop 0022                       __activetblptr 000000  
      __size_ofi2_I2C_2_Master_Idle 0028        __size_ofi2_I2C_2_Master_Stop 000A  
         __end_of_clicker2LEDs_init 1AD2                        ?_setMotorPWM 0013  
                            _ADRESH 000F64                    ___awdiv@dividend 000B  
              _colorclick_readClear 16F4                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                              i2l2035 1940  
                            i2l2037 1950                              i2l2291 1AD2  
                            i2l2293 1AD6                              i2l2287 1ADC  
                            i2l2295 1AA0                _colorclick_readGreen 16A4  
                            i2l2289 1AE0                              i2l2297 1AA4  
                            i2l2581 1864                              i2l2573 1828  
                            i2l2575 1838                              i2l2577 183E  
                            i2l2499 1A70                              i2l2579 1860  
                  ?_interrupts_init 0001                           ??_HighISR 0003  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                  __end_of___xxtofl 11E2                              _LowISR 0018  
                      ??_ADC_getval 0005                    read_card@current 002D  
                  read_card@initial 0025                              ___flge 11E2  
                            ___wmul 1968                           ??___awdiv 000F  
                         ??___lwdiv 0009                    ??_buggyLEDs_init 0005  
                i2_interrupts_clear 1A70                              clear_0 1994  
                            clear_1 19A0                    ___awdiv@quotient 0011  
                            isa$std 000001                         read_card@mL 0035  
                       read_card@mR 0037                           ??_forward 0022  
               ?i2_interrupts_clear 0001     colorclick_toggleClearLED@toggle 0005  
                         ?_ADC_init 0001                           ??_reverse 0022  
                            stop@mL 001E                              stop@mR 0020  
                __end_of_ADC_getval 1A44                        ?_USART4_init 0001  
             ?_colorclick_readClear 0009               ?_colorclick_readGreen 0009  
                  __end_of_turnLeft 0E5A                          ___flge@ff1 0013  
                        ___flge@ff2 0017                        ___xxtofl@arg 000F  
                      ___xxtofl@exp 000E                        ___xxtofl@val 0005  
                        __accesstop 0060             __end_of__initialization 19A6  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
              ??i2_interrupts_clear 0003                      __pcstackCOMRAM 0001  
           ?_colorclick_writetoaddr 0007                    ?_colorclick_init 0001  
                _colorclick_readRed 1654                          ??_ADC_init 0005  
        __size_of_clicker2LEDs_init 000A                 ?_colorclick_readRed 0009  
                        __pbssBANK0 0060                        _battery_flag 009C  
     __size_ofi2_I2C_2_Master_Start 000A                  __size_of_read_card 0862  
     __size_ofi2_I2C_2_Master_Write 000C                             ?_LowISR 0001  
                      _T2CLKCONbits 000FBF      __end_of_colorclick_writetoaddr 19F2  
                           ?___flge 0013                             ?___wmul 0005  
              ??_colorclick_readRed 000B        __size_of_colorclick_readBlue 0050  
                           _INT1PPS 000DF1               _colorclick_readColour 17E4  
                         ?___xxtofl 0005                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                   ?_interrupts_clear 0001  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6              ??_colorclick_readClear 000B  
                           _SSP2BUF 000ED5              ??_colorclick_readGreen 000B  
                ??_interrupts_clear 0007                __size_of_setMotorPWM 01D4  
            __size_of_DCmotors_init 0050                             _HighISR 0008  
        ?_colorclick_toggleClearLED 0001                  __size_of_turnRight 01E6  
                         _ADREFbits 000F58                  _I2C_2_Master_Start 1ABE  
               i2_I2C_2_Master_Idle 1940                  _I2C_2_Master_Write 1A86  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 1AD2  
                           __Lparam 0000                     __size_of_LowISR 000E  
                   __size_of___flge 0104                             ___awdiv 12E6  
                   __size_of___wmul 0026                 ?_I2C_2_Master_Start 0001  
                           ___lwdiv 1574                 ?_I2C_2_Master_Write 0001  
                           __pcinit 198E             colorclick_readClear@tmp 000E  
                           __ramtop 0E00                           ?_turnLeft 001E  
                           __ptext0 088C                             __ptext1 002A  
                           __ptext2 0A8E                             __ptext3 0C74  
                           __ptext4 14DE                             __ptext5 13AA  
                           __ptext6 102E                             __ptext7 1574  
                           __ptext8 11E2                             __ptext9 15E8  
     __size_of_clicker2buttons_init 000C                ?i2_I2C_2_Master_Idle 0001  
                         _T2CONbits 000FBD                             _forward 1444  
                        ??___xxtofl 0009                   __end_of_read_card 088C  
              ?i2_I2C_2_Master_Stop 0001                           _T2HLTbits 000FBE  
                           _reverse 13AA                       _RxBufWriteCnt 0056  
              ??_I2C_2_Master_Start 0006                ??_I2C_2_Master_Write 0006  
                    __pintcode_body 1828                end_of_initialization 19A6  
                setMotorPWM@PWMduty 001C                    ADC_getval@tmpval 0005  
           colorclick_readGreen@tmp 000E                __size_of_USART4_init 0020  
                           int_func 1828                        turnRight@deg 0022  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                       _DCmotors_init 1794  
                        ??_turnLeft 0023              ?_colorclick_readColour 0010  
             ??i2_I2C_2_Master_Idle 0001                   __end_of_turnRight 0C74  
             ??i2_I2C_2_Master_Stop 0002                       ___xxtofl@sign 000D  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 0006  
                      _EUSART4RXbuf 003B                        _EUSART4TXbuf 0060  
                        main@motorL 00B5                          main@motorR 00BE  
                    __end_of_LowISR 0026            __size_of_interrupts_init 006C  
                    __end_of___flge 12E6                      ?_DCmotors_init 0001  
                    __end_of___wmul 198E                 start_initialization 198E  
                     _TxBufWriteCnt 0054                     _returnhome_flag 0057  
               _colorclick_readBlue 1744         __size_ofi2_interrupts_clear 0016  
                          ??_LowISR 0004                            ??___flge 001B  
                          ??___wmul 0009       i2I2C_2_Master_Write@data_byte 0002  
      __end_ofi2_I2C_2_Master_Start 1AE6                ?_colorclick_readBlue 0009  
      __end_ofi2_I2C_2_Master_Write 1AAA                         __pbssCOMRAM 003B  
                     __pcstackBANK0 009E             __size_of_buggyLEDs_init 0016  
                 __size_of___xxtofl 01B4            __size_of_colorclick_init 0040  
                          ?_HighISR 0001                           _card_flag 009D  
       ??_colorclick_toggleClearLED 0005           __size_of_interrupts_clear 0016  
                  ___lwdiv@dividend 0005                         _clear_lower 0051  
                       _clear_upper 004F                           __pintcode 0008  
                   ??_DCmotors_init 0005                            ?___awdiv 000B  
                          ?___lwdiv 0005         __size_of_colorclick_readRed 0050  
                       __pintcodelo 0018               ??_colorclick_readBlue 000B  
              I2C_2_Master_Read@ack 0007                   ??_interrupts_init 0009  
              I2C_2_Master_Read@tmp 0008                            ?_forward 001E  
                 __size_of_turnLeft 01E6                   _I2C_2_Master_Idle 1918  
                 _I2C_2_Master_Init 18EE                   _I2C_2_Master_Read 186C  
                 _I2C_2_Master_Stop 1AB4                        _RxBufReadCnt 0055  
                          _ADC_init 1A12                            ?_reverse 001E  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0015  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 000A  
                         _read_card 002A       __size_of_colorclick_readClear 0050  
            colorclick_readBlue@tmp 000E                         turnLeft@deg 0022  
     __size_of_colorclick_readGreen 0050        __end_of_clicker2buttons_init 1A9E  
               ??_I2C_2_Master_Idle 0005                 ??_I2C_2_Master_Init 0005  
               ??_I2C_2_Master_Read 0006                      ___wmul@product 0009  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0006  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F         colorclick_writetoaddr@value 0007  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                            _PIE4bits 000E2D  
                       turnRight@mL 001E                         turnRight@mR 0020  
                          i2u232_40 1838                            i2u232_41 1834  
                          i2u137_40 1950                            i2u233_40 1850  
                          i2u137_41 194C                            i2u233_41 1848  
                          i2u138_40 1966                            i2u138_41 1962  
                          i2u234_48 1852                            _PIR0bits 000E33  
                          _PIR4bits 000E37                            _SSP2CON2 000EDA  
                          _SSP2STAT 000ED8             ??_colorclick_readColour 0018  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 1940  
         _colorclick_toggleClearLED 19B0           __end_of_I2C_2_Master_Init 1918  
         __end_of_I2C_2_Master_Read 18AE                   ___wmul@multiplier 0005  
         __end_of_I2C_2_Master_Stop 1ABE                        setMotorPWM@m 0013  
       I2C_2_Master_Write@data_byte 0006                        _TxBufReadCnt 0053  
                         _turnRight 0A8E                       ??_USART4_init 0005  
                        ?_read_card 0025         __size_of_I2C_2_Master_Start 000A  
       __size_of_I2C_2_Master_Write 000C        colorclick_readColour@current 0010  
    __size_of_I2C_2_Master_RepStart 000A       __end_of_I2C_2_Master_RepStart 1AB4  
          ??_colorclick_writetoaddr 0008                 __end_of_setMotorPWM 102E  
                    read_card@B_rel 00A2                    __size_of_HighISR 1864  
                    read_card@G_rel 00A0                i2_I2C_2_Master_Start 1ADC  
                    read_card@R_rel 009E                   ??_colorclick_init 0009  
              i2_I2C_2_Master_Write 1A9E                            __Hrparam 0000  
                        _ADC_getval 1A2C                            __Lrparam 0000  
                         forward@mL 001E                           forward@mR 0020  
       __end_ofi2_I2C_2_Master_Idle 1968         __end_ofi2_I2C_2_Master_Stop 1ADC  
                  __size_of___awdiv 00C4                    __size_of___lwdiv 0074  
                        _ANSELBbits 000E9A                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                            ___xxtofl 102E  
                    _buggyLEDs_init 1A5A                    __size_of_forward 009A  
                   ___lwdiv@divisor 0007                     ___lwdiv@counter 0009  
                        ?_turnRight 001E                            __ptext10 1A44  
                          __ptext11 1444                            __ptext20 1AAA  
                          __ptext12 0E5A                            __ptext21 186C  
                          __ptext13 1968                            __ptext30 19F2  
                          __ptext22 18AE                            __ptext14 12E6  
                          __ptext31 1794                            __ptext23 19D2  
                          __ptext15 17E4                            __ptext40 1A9E  
                          __ptext32 1A92                            __ptext24 1A86  
                          __ptext16 1654                            __ptext41 1AD2  
                          __ptext33 1AC8                            __ptext25 1AB4  
                          __ptext17 16A4                            __ptext42 1ADC  
                          __ptext34 1A5A                            __ptext26 1ABE  
                          __ptext18 16F4                            __ptext43 1940  
                          __ptext35 1A12                            __ptext27 1918  
                          __ptext19 1744                            __ptext36 1A2C  
                          __ptext28 19B0                            __ptext29 18EE  
                          __ptext39 1A70                    __size_of_reverse 009A  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
                     __size_of_main 0202                       __size_of_stop 0096  
                        turnLeft@mL 001E                          turnLeft@mR 0020  
             ?i2_I2C_2_Master_Start 0001               ?i2_I2C_2_Master_Write 0001  
               __end_of_USART4_init 1A12                    _interrupts_clear 1A44  
             colorclick_readRed@tmp 000E                           reverse@mL 001E  
                         reverse@mR 0020                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 0058  
                          _turnLeft 0C74          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
              _clicker2buttons_init 1A92          __size_of_I2C_2_Master_Stop 000A  
            __end_of_buggyLEDs_init 1A70                          _INTCONbits 000FF2  
                       _setMotorPWM 0E5A                         ??_read_card 0039  
                       _PWM6CONbits 000FA4                         _PWM7CONbits 000FA1  
                          intlevel1 0000                            intlevel2 0000  
        __end_ofi2_interrupts_clear 1A86     __size_of_colorclick_writetoaddr 0020  
                   _interrupts_init 15E8                         ?_ADC_getval 0001  
             ?_clicker2buttons_init 0001                     ?_buggyLEDs_init 0001  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                       ??_turnRight 0023  __size_of_colorclick_toggleClearLED 0022  
                       _USART4_init 19F2                          _TX4STAbits 000EE8  
            ??i2_I2C_2_Master_Start 0002              ??i2_I2C_2_Master_Write 0002  
