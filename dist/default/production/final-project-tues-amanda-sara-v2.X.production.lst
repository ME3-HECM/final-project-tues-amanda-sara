

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 12:10:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.20
    96                           ; Generated 05/05/2020 GMT
    97                           ; 
    98                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F67K40 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	nvBANK0
   131  0000FB                     __pnvBANK0:
   132                           	callstack 0
   133  0000FB                     _interrupts_upper:
   134                           	callstack 0
   135  0000FB                     	ds	2
   136  0000FD                     _DCmotors_upper:
   137                           	callstack 0
   138  0000FD                     	ds	1
   139  0000FE                     _DCmotors_lower:
   140                           	callstack 0
   141  0000FE                     	ds	1
   142  0000                     _CM1CON1bits	set	3793
   143  0000                     _CM1CON0bits	set	3792
   144  0000                     _CM1PCHbits	set	3795
   145  0000                     _CM1NCHbits	set	3794
   146  0000                     _DAC1CON1bits	set	3783
   147  0000                     _DAC1CON0bits	set	3782
   148  0000                     _RC7PPS	set	3689
   149  0000                     _RE2PPS	set	3700
   150  0000                     _PIE4bits	set	3629
   151  0000                     _TX4REG	set	3812
   152  0000                     _RC4REG	set	3811
   153  0000                     _PIR4bits	set	3639
   154  0000                     _RC4STAbits	set	3815
   155  0000                     _SP4BRGH	set	3814
   156  0000                     _SP4BRGL	set	3813
   157  0000                     _TX4STAbits	set	3816
   158  0000                     _BAUD4CONbits	set	3817
   159  0000                     _RX4PPS	set	3605
   160  0000                     _RC0PPS	set	3682
   161  0000                     _SSP2BUF	set	3797
   162  0000                     _SSP2CON2bits	set	3802
   163  0000                     _SSP2CON2	set	3802
   164  0000                     _SSP2STAT	set	3800
   165  0000                     _RD6PPS	set	3696
   166  0000                     _RD5PPS	set	3695
   167  0000                     _SSP2CLKPPS	set	3612
   168  0000                     _SSP2DATPPS	set	3613
   169  0000                     _ANSELDbits	set	3751
   170  0000                     _SSP2ADD	set	3798
   171  0000                     _SSP2CON1bits	set	3801
   172  0000                     _ANSELFbits	set	3764
   173  0000                     _PIR0bits	set	3635
   174  0000                     _PIE0bits	set	3625
   175  0000                     _ADPCH	set	3935
   176  0000                     _ADREFbits	set	3928
   177  0000                     _PWM7CONbits	set	4001
   178  0000                     _PWM6CONbits	set	4004
   179  0000                     _LATCbits	set	3963
   180  0000                     _LATEbits	set	3965
   181  0000                     _TRISEbits	set	3973
   182  0000                     _T2PR	set	4028
   183  0000                     _T2CLKCONbits	set	4031
   184  0000                     _T2HLTbits	set	4030
   185  0000                     _T2CONbits	set	4029
   186  0000                     _TRISCbits	set	3971
   187  0000                     _TRISAbits	set	3969
   188  0000                     _TRISGbits	set	3975
   189  0000                     _TRISHbits	set	3976
   190  0000                     _TRISDbits	set	3972
   191  0000                     _ADRESH	set	3940
   192  0000                     _ADCON0bits	set	3936
   193  0000                     _TRISFbits	set	3974
   194  0000                     _LATFbits	set	3966
   195  0000                     _LATAbits	set	3961
   196  0000                     _LATGbits	set	3967
   197  0000                     _INTCONbits	set	4082
   198  0000                     _LATHbits	set	3968
   199  0000                     _LATDbits	set	3964
   200  0000                     _PORTFbits	set	3982
   201  0000                     _LATG	set	3967
   202  0000                     _PWM7DCH	set	4000
   203  0000                     _LATE	set	3965
   204  0000                     _PWM6DCH	set	4003
   205                           
   206                           	psect	smallconst
   207  000E00                     __psmallconst:
   208                           	callstack 0
   209  000E00  00                 	db	0
   210  000E01                     STR_1:
   211                           
   212                           ; BSR set to: 15
   213  000E01  52                 	db	82	;'R'
   214  000E02  47                 	db	71	;'G'
   215  000E03  42                 	db	66	;'B'
   216  000E04  43                 	db	67	;'C'
   217  000E05  3A                 	db	58	;':'
   218  000E06  20                 	db	32
   219  000E07  25                 	db	37
   220  000E08  69                 	db	105	;'i'
   221  000E09  20                 	db	32
   222  000E0A  25                 	db	37
   223  000E0B  69                 	db	105	;'i'
   224  000E0C  20                 	db	32
   225  000E0D  25                 	db	37
   226  000E0E  69                 	db	105	;'i'
   227  000E0F  20                 	db	32
   228  000E10  25                 	db	37
   229  000E11  69                 	db	105	;'i'
   230  000E12  20                 	db	32
   231  000E13  20                 	db	32
   232  000E14  20                 	db	32
   233  000E15  20                 	db	32
   234  000E16  20                 	db	32
   235  000E17  52                 	db	82	;'R'
   236  000E18  47                 	db	71	;'G'
   237  000E19  42                 	db	66	;'B'
   238  000E1A  43                 	db	67	;'C'
   239  000E1B  5F                 	db	95	;'_'
   240  000E1C  72                 	db	114	;'r'
   241  000E1D  65                 	db	101	;'e'
   242  000E1E  6C                 	db	108	;'l'
   243  000E1F  3A                 	db	58	;':'
   244  000E20  20                 	db	32
   245  000E21  25                 	db	37
   246  000E22  2E                 	db	46
   247  000E23  33                 	db	51	;'3'
   248  000E24  66                 	db	102	;'f'
   249  000E25  20                 	db	32
   250  000E26  25                 	db	37
   251  000E27  2E                 	db	46
   252  000E28  33                 	db	51	;'3'
   253  000E29  66                 	db	102	;'f'
   254  000E2A  20                 	db	32
   255  000E2B  25                 	db	37
   256  000E2C  2E                 	db	46
   257  000E2D  33                 	db	51	;'3'
   258  000E2E  66                 	db	102	;'f'
   259  000E2F  20                 	db	32
   260  000E30  25                 	db	37
   261  000E31  2E                 	db	46
   262  000E32  33                 	db	51	;'3'
   263  000E33  66                 	db	102	;'f'
   264  000E34  0A                 	db	10
   265  000E35  0D                 	db	13
   266  000E36  00                 	db	0
   267  000E37                     STR_2:
   268                           
   269                           ; BSR set to: 15
   270  000E37  49                 	db	73	;'I'
   271  000E38  4E                 	db	78	;'N'
   272  000E39  46                 	db	70	;'F'
   273  000E3A  00                 	db	0
   274  000E3B                     STR_6:
   275                           
   276                           ; BSR set to: 15
   277  000E3B  4E                 	db	78	;'N'
   278  000E3C  41                 	db	65	;'A'
   279  000E3D  4E                 	db	78	;'N'
   280  000E3E  00                 	db	0
   281  000E3F                     STR_3:
   282                           
   283                           ; BSR set to: 15
   284  000E3F  69                 	db	105	;'i'
   285  000E40  6E                 	db	110	;'n'
   286  000E41  66                 	db	102	;'f'
   287  000E42  00                 	db	0
   288  000E43                     STR_7:
   289                           
   290                           ; BSR set to: 15
   291  000E43  6E                 	db	110	;'n'
   292  000E44  61                 	db	97	;'a'
   293  000E45  6E                 	db	110	;'n'
   294  000E46  00                 	db	0
   295  000E47                     STR_10:
   296                           
   297                           ; BSR set to: 15
   298  000E47  6C                 	db	108	;'l'
   299  000E48  66                 	db	102	;'f'
   300  000E49  00                 	db	0
   301  000E4A  00                 	db	0	; dummy byte at the end
   302  0000                     
   303                           ; #config settings
   304                           
   305                           	psect	cinit
   306  005C22                     __pcinit:
   307                           	callstack 0
   308  005C22                     start_initialization:
   309                           	callstack 0
   310  005C22                     __initialization:
   311                           	callstack 0
   312                           
   313                           ; Clear objects allocated to BANK2 (60 bytes)
   314  005C22  EE02  F000         	lfsr	0,__pbssBANK2
   315  005C26  0E3C               	movlw	60
   316  005C28                     clear_0:
   317  005C28  6AEE               	clrf	postinc0,c
   318  005C2A  06E8               	decf	wreg,f,c
   319  005C2C  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to BANK1 (110 bytes)
   322  005C2E  EE01  F07C         	lfsr	0,__pbssBANK1
   323  005C32  0E6E               	movlw	110
   324  005C34                     clear_1:
   325  005C34  6AEE               	clrf	postinc0,c
   326  005C36  06E8               	decf	wreg,f,c
   327  005C38  E1FD               	bnz	clear_1
   328                           
   329                           ; Clear objects allocated to BANK0 (17 bytes)
   330  005C3A  EE00  F0EA         	lfsr	0,__pbssBANK0
   331  005C3E  0E11               	movlw	17
   332  005C40                     clear_2:
   333  005C40  6AEE               	clrf	postinc0,c
   334  005C42  06E8               	decf	wreg,f,c
   335  005C44  E1FD               	bnz	clear_2
   336                           
   337                           ; Clear objects allocated to COMRAM (2 bytes)
   338  005C46  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   339  005C48  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   340  005C4A                     end_of_initialization:
   341                           	callstack 0
   342  005C4A                     __end_of__initialization:
   343                           	callstack 0
   344  005C4A  0100               	movlb	0
   345  005C4C  EF2A  F023         	goto	_main	;jump to C main() function
   346                           
   347                           	psect	bssCOMRAM
   348  00005E                     __pbssCOMRAM:
   349                           	callstack 0
   350  00005E                     _TxBufReadCnt:
   351                           	callstack 0
   352  00005E                     	ds	1
   353  00005F                     _TxBufWriteCnt:
   354                           	callstack 0
   355  00005F                     	ds	1
   356                           
   357                           	psect	bssBANK0
   358  0000EA                     __pbssBANK0:
   359                           	callstack 0
   360  0000EA                     _nout:
   361                           	callstack 0
   362  0000EA                     	ds	2
   363  0000EC                     _width:
   364                           	callstack 0
   365  0000EC                     	ds	2
   366  0000EE                     _prec:
   367                           	callstack 0
   368  0000EE                     	ds	2
   369  0000F0                     _flags:
   370                           	callstack 0
   371  0000F0                     	ds	2
   372  0000F2                     _clear_lower:
   373                           	callstack 0
   374  0000F2                     	ds	2
   375  0000F4                     _interrupts_lower:
   376                           	callstack 0
   377  0000F4                     	ds	2
   378  0000F6                     _returnhome_flag:
   379                           	callstack 0
   380  0000F6                     	ds	1
   381  0000F7                     _unknowncard_flag:
   382                           	callstack 0
   383  0000F7                     	ds	1
   384  0000F8                     _colourcard_flag:
   385                           	callstack 0
   386  0000F8                     	ds	1
   387  0000F9                     _RxBufReadCnt:
   388                           	callstack 0
   389  0000F9                     	ds	1
   390  0000FA                     _RxBufWriteCnt:
   391                           	callstack 0
   392  0000FA                     	ds	1
   393                           
   394                           	psect	bssBANK1
   395  00017C                     __pbssBANK1:
   396                           	callstack 0
   397  00017C                     _EUSART4RXbuf:
   398                           	callstack 0
   399  00017C                     	ds	20
   400  000190                     floorf@F527:
   401                           	callstack 0
   402  000190                     	ds	4
   403  000194                     ___fpclassifyf@F465:
   404                           	callstack 0
   405  000194                     	ds	4
   406  000198                     _clear_upper:
   407                           	callstack 0
   408  000198                     	ds	2
   409  00019A                     _dbuf:
   410                           	callstack 0
   411  00019A                     	ds	80
   412                           
   413                           	psect	bssBANK2
   414  000200                     __pbssBANK2:
   415                           	callstack 0
   416  000200                     _EUSART4TXbuf:
   417                           	callstack 0
   418  000200                     	ds	60
   419                           
   420                           	psect	cstackBANK1
   421  000100                     __pcstackBANK1:
   422                           	callstack 0
   423  000100                     colourcards_testing@buf:
   424                           	callstack 0
   425                           
   426                           ; 100 bytes @ 0x0
   427  000100                     	ds	100
   428  000164                     colourcards_testing@R_rel:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0x64
   432  000164                     	ds	4
   433  000168                     colourcards_testing@G_rel:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0x68
   437  000168                     	ds	4
   438  00016C                     colourcards_testing@B_rel:
   439                           	callstack 0
   440                           
   441                           ; 4 bytes @ 0x6C
   442  00016C                     	ds	4
   443  000170                     colourcards_testing@C_rel:
   444                           	callstack 0
   445                           
   446                           ; 4 bytes @ 0x70
   447  000170                     	ds	4
   448  000174                     colourcards_testing@current:
   449                           	callstack 0
   450                           
   451                           ; 8 bytes @ 0x74
   452  000174                     	ds	8
   453                           
   454                           	psect	cstackBANK0
   455  000060                     __pcstackBANK0:
   456                           	callstack 0
   457  000060                     _efgtoa$2948:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x0
   461  000060                     	ds	2
   462  000062                     _efgtoa$2949:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x2
   466  000062                     	ds	2
   467  000064                     _efgtoa$2953:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x4
   471  000064                     	ds	2
   472  000066                     _efgtoa$2957:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x6
   476  000066                     	ds	2
   477  000068                     _efgtoa$2958:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x8
   481  000068                     	ds	2
   482  00006A                     _efgtoa$2959:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0xA
   486  00006A                     	ds	2
   487  00006C                     efgtoa@t:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0xC
   491  00006C                     	ds	2
   492  00006E                     efgtoa@pp:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0xE
   496  00006E                     	ds	2
   497  000070                     efgtoa@ne:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x10
   501  000070                     	ds	2
   502  000072                     efgtoa@m:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x12
   506  000072                     	ds	2
   507  000074                     efgtoa@ou:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x14
   511  000074                     	ds	4
   512  000078                     efgtoa@d:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x18
   516  000078                     	ds	2
   517  00007A                     efgtoa@sign:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x1A
   521  00007A                     	ds	2
   522  00007C                     efgtoa@p:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1C
   526  00007C                     	ds	2
   527  00007E                     efgtoa@w:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x1E
   531  00007E                     	ds	2
   532  000080                     efgtoa@nmode:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x20
   536  000080                     	ds	1
   537  000081                     efgtoa@mode:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x21
   541  000081                     	ds	1
   542  000082                     efgtoa@h:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x22
   546  000082                     	ds	4
   547  000086                     efgtoa@l:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x26
   551  000086                     	ds	4
   552  00008A                     efgtoa@i:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x2A
   556  00008A                     	ds	2
   557  00008C                     efgtoa@g:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x2C
   561  00008C                     	ds	4
   562  000090                     efgtoa@e:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x30
   566  000090                     	ds	2
   567  000092                     efgtoa@n:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x32
   571  000092                     	ds	2
   572  000094                     efgtoa@u:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x34
   576  000094                     	ds	4
   577  000098                     vfpfcnvrt@ll:
   578                           	callstack 0
   579                           
   580                           ; 8 bytes @ 0x38
   581  000098                     	ds	8
   582  0000A0                     _vfpfcnvrt$2973:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x40
   586  0000A0                     	ds	2
   587  0000A2                     _vfpfcnvrt$2978:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x42
   591  0000A2                     	ds	2
   592  0000A4                     vfpfcnvrt@f:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x44
   596  0000A4                     	ds	4
   597  0000A8                     vfpfcnvrt@ct:
   598                           	callstack 0
   599                           
   600                           ; 3 bytes @ 0x48
   601  0000A8                     	ds	3
   602  0000AB                     vfpfcnvrt@c:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x4B
   606  0000AB                     	ds	1
   607  0000AC                     ?_sprintf:
   608                           	callstack 0
   609  0000AC                     sprintf@s:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x4C
   613  0000AC                     	ds	2
   614  0000AE                     sprintf@fmt:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x4E
   618  0000AE                     	ds	26
   619  0000C8                     sprintf@ap:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x68
   623  0000C8                     	ds	2
   624  0000CA                     sprintf@f:
   625                           	callstack 0
   626                           
   627                           ; 6 bytes @ 0x6A
   628  0000CA                     	ds	6
   629  0000D0                     main@current:
   630                           	callstack 0
   631                           
   632                           ; 8 bytes @ 0x70
   633  0000D0                     	ds	8
   634  0000D8                     main@motorL:
   635                           	callstack 0
   636                           
   637                           ; 9 bytes @ 0x78
   638  0000D8                     	ds	9
   639  0000E1                     main@motorR:
   640                           	callstack 0
   641                           
   642                           ; 9 bytes @ 0x81
   643  0000E1                     	ds	9
   644                           
   645                           	psect	cstackCOMRAM
   646  000001                     __pcstackCOMRAM:
   647                           	callstack 0
   648  000001                     ??_DCmotors_adjustval:
   649  000001                     ??_I2C_2_Master_Idle:
   650  000001                     ?_strlen:
   651                           	callstack 0
   652  000001                     ?___fpclassifyf:
   653                           	callstack 0
   654  000001                     ?_isupper:
   655                           	callstack 0
   656  000001                     ?_isdigit:
   657                           	callstack 0
   658  000001                     ?_strncmp:
   659                           	callstack 0
   660  000001                     ?_isspace:
   661                           	callstack 0
   662  000001                     ?___wmul:
   663                           	callstack 0
   664  000001                     ?___awmod:
   665                           	callstack 0
   666  000001                     ?___fladd:
   667                           	callstack 0
   668  000001                     ?___flmul:
   669                           	callstack 0
   670  000001                     ?___flneg:
   671                           	callstack 0
   672  000001                     ?___fltol:
   673                           	callstack 0
   674  000001                     ?___xxtofl:
   675                           	callstack 0
   676  000001                     ?___aodiv:
   677                           	callstack 0
   678  000001                     ?___aomod:
   679                           	callstack 0
   680  000001                     ADC_getval@tmpval:
   681                           	callstack 0
   682  000001                     colourclickLEDs_C@tog:
   683                           	callstack 0
   684  000001                     sendCharSerial4@charToSend:
   685                           	callstack 0
   686  000001                     DCmotors_init@PWMperiod:
   687                           	callstack 0
   688  000001                     ___wmul@multiplier:
   689                           	callstack 0
   690  000001                     ___awmod@dividend:
   691                           	callstack 0
   692  000001                     isdigit@c:
   693                           	callstack 0
   694  000001                     isspace@c:
   695                           	callstack 0
   696  000001                     isupper@c:
   697                           	callstack 0
   698  000001                     fputc@c:
   699                           	callstack 0
   700  000001                     strcpy@dest:
   701                           	callstack 0
   702  000001                     strlen@s:
   703                           	callstack 0
   704  000001                     strncmp@_l:
   705                           	callstack 0
   706  000001                     ___fleq@ff1:
   707                           	callstack 0
   708  000001                     ___flneg@f1:
   709                           	callstack 0
   710  000001                     ___fltol@f1:
   711                           	callstack 0
   712  000001                     ___fladd@b:
   713                           	callstack 0
   714  000001                     ___flmul@b:
   715                           	callstack 0
   716  000001                     ___xxtofl@val:
   717                           	callstack 0
   718  000001                     ___fpclassifyf@x:
   719                           	callstack 0
   720  000001                     ___aodiv@dividend:
   721                           	callstack 0
   722  000001                     ___aomod@dividend:
   723                           	callstack 0
   724                           
   725                           ; 8 bytes @ 0x0
   726  000001                     	ds	1
   727  000002                     ??_I2C_2_Master_Read:
   728  000002                     I2C_2_Master_Write@data_byte:
   729                           	callstack 0
   730  000002                     checkbatterylevel@batterylevel:
   731                           	callstack 0
   732  000002                     sendStringSerial4@string:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x1
   736  000002                     	ds	1
   737  000003                     ??_isupper:
   738  000003                     ??_isdigit:
   739  000003                     ??_isspace:
   740  000003                     colourclick_writetoaddr@value:
   741                           	callstack 0
   742  000003                     I2C_2_Master_Read@ack:
   743                           	callstack 0
   744  000003                     DCmotors_adjustval@i:
   745                           	callstack 0
   746  000003                     ___wmul@multiplicand:
   747                           	callstack 0
   748  000003                     ___awmod@divisor:
   749                           	callstack 0
   750  000003                     fputc@fp:
   751                           	callstack 0
   752  000003                     strcpy@src:
   753                           	callstack 0
   754  000003                     strlen@a:
   755                           	callstack 0
   756  000003                     strncmp@_r:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x2
   760  000003                     	ds	1
   761  000004                     colourclick_writetoaddr@address:
   762                           	callstack 0
   763  000004                     I2C_2_Master_Read@tmp:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x3
   767  000004                     	ds	1
   768  000005                     ??_colourclick_init:
   769  000005                     ??_fputc:
   770  000005                     ??___fpclassifyf:
   771  000005                     ??_strcpy:
   772  000005                     ??___fltol:
   773  000005                     ??___xxtofl:
   774  000005                     ?_colourclick_readR:
   775                           	callstack 0
   776  000005                     ?_colourclick_readG:
   777                           	callstack 0
   778  000005                     ?_colourclick_readB:
   779                           	callstack 0
   780  000005                     ?_colourclick_readC:
   781                           	callstack 0
   782  000005                     ___awmod@counter:
   783                           	callstack 0
   784  000005                     ___wmul@product:
   785                           	callstack 0
   786  000005                     strncmp@n:
   787                           	callstack 0
   788  000005                     ___fleq@ff2:
   789                           	callstack 0
   790  000005                     ___fladd@a:
   791                           	callstack 0
   792  000005                     ___flmul@a:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x4
   796  000005                     	ds	1
   797  000006                     ___awmod@sign:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x5
   801  000006                     	ds	1
   802  000007                     ??_strncmp:
   803  000007                     ??_colourclick_readR:
   804  000007                     ??_colourclick_readG:
   805  000007                     ??_colourclick_readB:
   806  000007                     ??_colourclick_readC:
   807  000007                     ?_tolower:
   808                           	callstack 0
   809  000007                     ?___awdiv:
   810                           	callstack 0
   811  000007                     _isspace$3045:
   812                           	callstack 0
   813  000007                     ___awdiv@dividend:
   814                           	callstack 0
   815  000007                     strcpy@s:
   816                           	callstack 0
   817  000007                     tolower@c:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x6
   821  000007                     	ds	1
   822  000008                     ?_atoi:
   823                           	callstack 0
   824  000008                     atoi@s:
   825                           	callstack 0
   826  000008                     strncmp@l:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x7
   830  000008                     	ds	1
   831  000009                     ??___fladd:
   832  000009                     ??___flmul:
   833  000009                     ??_tolower:
   834  000009                     ??___fleq:
   835  000009                     ___fltol@sign1:
   836                           	callstack 0
   837  000009                     ___xxtofl@sign:
   838                           	callstack 0
   839  000009                     ___awdiv@divisor:
   840                           	callstack 0
   841  000009                     ___fpclassifyf@e:
   842                           	callstack 0
   843  000009                     strcpy@d:
   844                           	callstack 0
   845  000009                     ___aodiv@divisor:
   846                           	callstack 0
   847  000009                     ___aomod@divisor:
   848                           	callstack 0
   849                           
   850                           ; 8 bytes @ 0x8
   851  000009                     	ds	1
   852  00000A                     ??_atoi:
   853  00000A                     ___fltol@exp1:
   854                           	callstack 0
   855  00000A                     ___xxtofl@exp:
   856                           	callstack 0
   857  00000A                     colourclick_readR@tmp:
   858                           	callstack 0
   859  00000A                     colourclick_readG@tmp:
   860                           	callstack 0
   861  00000A                     colourclick_readB@tmp:
   862                           	callstack 0
   863  00000A                     colourclick_readC@tmp:
   864                           	callstack 0
   865  00000A                     fputs@s:
   866                           	callstack 0
   867  00000A                     strncmp@r:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x9
   871  00000A                     	ds	1
   872  00000B                     ___awdiv@counter:
   873                           	callstack 0
   874  00000B                     ___xxtofl@arg:
   875                           	callstack 0
   876  00000B                     ___fpclassifyf@u:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0xA
   880  00000B                     	ds	1
   881  00000C                     ___awdiv@sign:
   882                           	callstack 0
   883  00000C                     colourclick_readRGBC@tmpval:
   884                           	callstack 0
   885  00000C                     fputs@fp:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0xB
   889  00000C                     	ds	1
   890  00000D                     ___fladd@signs:
   891                           	callstack 0
   892  00000D                     ___flmul@sign:
   893                           	callstack 0
   894  00000D                     ___awdiv@quotient:
   895                           	callstack 0
   896  00000D                     _tolower$3109:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0xC
   900  00000D                     	ds	1
   901  00000E                     ??_colourclick_calibration:
   902  00000E                     ___fladd@aexp:
   903                           	callstack 0
   904  00000E                     fputs@c:
   905                           	callstack 0
   906  00000E                     atoi@neg:
   907                           	callstack 0
   908  00000E                     ___flmul@grs:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0xD
   912  00000E                     	ds	1
   913  00000F                     ?___fldiv:
   914                           	callstack 0
   915  00000F                     ___fladd@bexp:
   916                           	callstack 0
   917  00000F                     DCmotors_setPWM@m:
   918                           	callstack 0
   919  00000F                     fputs@i:
   920                           	callstack 0
   921  00000F                     ___fldiv@b:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0xE
   925  00000F                     	ds	1
   926  000010                     colourclick_calibration@i:
   927                           	callstack 0
   928  000010                     ___fladd@grs:
   929                           	callstack 0
   930  000010                     _atoi$3014:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0xF
   934  000010                     	ds	1
   935  000011                     ??_DCmotors_setPWM:
   936  000011                     ?_pad:
   937                           	callstack 0
   938  000011                     ___aodiv@counter:
   939                           	callstack 0
   940  000011                     ___aomod@counter:
   941                           	callstack 0
   942  000011                     pad@fp:
   943                           	callstack 0
   944  000011                     colourclick_calibration@initial:
   945                           	callstack 0
   946                           
   947                           ; 8 bytes @ 0x10
   948  000011                     	ds	1
   949  000012                     ___aodiv@sign:
   950                           	callstack 0
   951  000012                     ___aomod@sign:
   952                           	callstack 0
   953  000012                     ___flmul@aexp:
   954                           	callstack 0
   955  000012                     _atoi$3016:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x11
   959  000012                     	ds	1
   960  000013                     ?_abs:
   961                           	callstack 0
   962  000013                     ___flmul@bexp:
   963                           	callstack 0
   964  000013                     pad@buf:
   965                           	callstack 0
   966  000013                     abs@a:
   967                           	callstack 0
   968  000013                     ___fldiv@a:
   969                           	callstack 0
   970  000013                     ___aodiv@quotient:
   971                           	callstack 0
   972                           
   973                           ; 8 bytes @ 0x12
   974  000013                     	ds	1
   975  000014                     _atoi$3015:
   976                           	callstack 0
   977  000014                     ___flmul@prod:
   978                           	callstack 0
   979                           
   980                           ; 4 bytes @ 0x13
   981  000014                     	ds	1
   982  000015                     ??_abs:
   983  000015                     pad@p:
   984                           	callstack 0
   985  000015                     atoi@n:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x14
   989  000015                     	ds	2
   990  000017                     ??___fldiv:
   991  000017                     ??_pad:
   992                           
   993                           ; 1 bytes @ 0x16
   994  000017                     	ds	1
   995  000018                     DCmotors_setPWM@PWMduty:
   996                           	callstack 0
   997  000018                     ___flmul@temp:
   998                           	callstack 0
   999  000018                     pad@i:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x17
  1003  000018                     	ds	1
  1004  000019                     colourclick_calibration@current:
  1005                           	callstack 0
  1006                           
  1007                           ; 8 bytes @ 0x18
  1008  000019                     	ds	1
  1009  00001A                     ?___flsub:
  1010                           	callstack 0
  1011  00001A                     forward@mL:
  1012                           	callstack 0
  1013  00001A                     reverse@mL:
  1014                           	callstack 0
  1015  00001A                     stop@mL:
  1016                           	callstack 0
  1017  00001A                     left@mL:
  1018                           	callstack 0
  1019  00001A                     right@mL:
  1020                           	callstack 0
  1021  00001A                     pad@w:
  1022                           	callstack 0
  1023  00001A                     ___flge@ff1:
  1024                           	callstack 0
  1025  00001A                     ___flsub@b:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x19
  1029  00001A                     	ds	1
  1030  00001B                     ___fldiv@rem:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0x1A
  1034  00001B                     	ds	1
  1035  00001C                     ?_dtoa:
  1036                           	callstack 0
  1037  00001C                     forward@mR:
  1038                           	callstack 0
  1039  00001C                     reverse@mR:
  1040                           	callstack 0
  1041  00001C                     stop@mR:
  1042                           	callstack 0
  1043  00001C                     left@mR:
  1044                           	callstack 0
  1045  00001C                     right@mR:
  1046                           	callstack 0
  1047  00001C                     dtoa@fp:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x1B
  1051  00001C                     	ds	2
  1052  00001E                     ??_forward:
  1053  00001E                     ??_reverse:
  1054  00001E                     ??_stop:
  1055  00001E                     left@deg:
  1056                           	callstack 0
  1057  00001E                     right@deg:
  1058                           	callstack 0
  1059  00001E                     ___flge@ff2:
  1060                           	callstack 0
  1061  00001E                     ___flsub@a:
  1062                           	callstack 0
  1063  00001E                     dtoa@d:
  1064                           	callstack 0
  1065                           
  1066                           ; 8 bytes @ 0x1D
  1067  00001E                     	ds	1
  1068  00001F                     ___fldiv@sign:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x1E
  1072  00001F                     	ds	1
  1073  000020                     ??_left:
  1074  000020                     ??_right:
  1075  000020                     ___fldiv@new_exp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x1F
  1079  000020                     	ds	2
  1080  000022                     ??___flge:
  1081  000022                     turnleft@mL:
  1082                           	callstack 0
  1083  000022                     turnright@mL:
  1084                           	callstack 0
  1085  000022                     ___fldiv@grs:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x21
  1089  000022                     	ds	2
  1090  000024                     turnleft@mR:
  1091                           	callstack 0
  1092  000024                     turnright@mR:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x23
  1096  000024                     	ds	2
  1097  000026                     ??_dtoa:
  1098  000026                     ___fldiv@bexp:
  1099                           	callstack 0
  1100  000026                     turnleft@deg:
  1101                           	callstack 0
  1102  000026                     turnright@deg:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x25
  1106  000026                     	ds	1
  1107  000027                     ___fldiv@aexp:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x26
  1111  000027                     	ds	1
  1112  000028                     ?_floorf:
  1113                           	callstack 0
  1114  000028                     colourcards_readRGBC@tmpval:
  1115                           	callstack 0
  1116  000028                     DCmotors_calibration@mL:
  1117                           	callstack 0
  1118  000028                     DCmotors_testing@mL:
  1119                           	callstack 0
  1120  000028                     floorf@x:
  1121                           	callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x27
  1124  000028                     	ds	2
  1125  00002A                     colourcards_readRGBC@mL:
  1126                           	callstack 0
  1127  00002A                     DCmotors_calibration@mR:
  1128                           	callstack 0
  1129  00002A                     DCmotors_testing@mR:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x29
  1133  00002A                     	ds	2
  1134  00002C                     ??_DCmotors_calibration:
  1135  00002C                     ??_DCmotors_testing:
  1136  00002C                     ??_floorf:
  1137  00002C                     colourcards_readRGBC@mR:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x2B
  1141  00002C                     	ds	2
  1142  00002E                     ??_colourcards_readRGBC:
  1143  00002E                     _dtoa$2924:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x2D
  1147  00002E                     	ds	2
  1148  000030                     dtoa@p:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x2F
  1152  000030                     	ds	2
  1153  000032                     dtoa@w:
  1154                           	callstack 0
  1155  000032                     colourcards_readRGBC@R_rel:
  1156                           	callstack 0
  1157  000032                     floorf@m:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x31
  1161  000032                     	ds	2
  1162  000034                     dtoa@s:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x33
  1166  000034                     	ds	2
  1167  000036                     floorf@e:
  1168                           	callstack 0
  1169  000036                     colourcards_readRGBC@G_rel:
  1170                           	callstack 0
  1171  000036                     dtoa@n:
  1172                           	callstack 0
  1173                           
  1174                           ; 8 bytes @ 0x35
  1175  000036                     	ds	2
  1176  000038                     floorf@u:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x37
  1180  000038                     	ds	2
  1181  00003A                     colourcards_readRGBC@B_rel:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x39
  1185  00003A                     	ds	2
  1186  00003C                     ?_efgtoa:
  1187                           	callstack 0
  1188  00003C                     efgtoa@fp:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x3B
  1192  00003C                     	ds	2
  1193  00003E                     dtoa@i:
  1194                           	callstack 0
  1195  00003E                     efgtoa@f:
  1196                           	callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x3D
  1199  00003E                     	ds	4
  1200  000042                     efgtoa@c:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x41
  1204  000042                     	ds	1
  1205  000043                     ??_efgtoa:
  1206                           
  1207                           ; 1 bytes @ 0x42
  1208  000043                     	ds	5
  1209  000048                     ?_vfpfcnvrt:
  1210                           	callstack 0
  1211  000048                     vfpfcnvrt@fp:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x47
  1215  000048                     	ds	2
  1216  00004A                     vfpfcnvrt@fmt:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x49
  1220  00004A                     	ds	2
  1221  00004C                     vfpfcnvrt@ap:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x4B
  1225  00004C                     	ds	2
  1226  00004E                     ??_vfpfcnvrt:
  1227                           
  1228                           ; 1 bytes @ 0x4D
  1229  00004E                     	ds	4
  1230  000052                     ?_vfprintf:
  1231                           	callstack 0
  1232  000052                     vfprintf@fp:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x51
  1236  000052                     	ds	2
  1237  000054                     vfprintf@fmt:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x53
  1241  000054                     	ds	2
  1242  000056                     vfprintf@ap:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x55
  1246  000056                     	ds	2
  1247  000058                     vfprintf@cfmt:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x57
  1251  000058                     	ds	2
  1252  00005A                     ??_colourcards_testing:
  1253  00005A                     
  1254                           ; 1 bytes @ 0x59
  1255  00005A                     	ds	2
  1256  00005C                     ??_main:
  1257                           
  1258                           ; 1 bytes @ 0x5B
  1259  00005C                     	ds	2
  1260                           
  1261 ;;
  1262 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1263 ;;
  1264 ;; *************** function _main *****************
  1265 ;; Defined at:
  1266 ;;		line 7 in file "main.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  motorR          9  129[BANK0 ] struct .
  1271 ;;  motorL          9  120[BANK0 ] struct .
  1272 ;;  current         8  112[BANK0 ] struct .
  1273 ;;  PWMperiod       1    0        unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1284 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1286 ;;      Totals:         2      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1287 ;;Total ram usage:       28 bytes
  1288 ;; Hardware stack levels required when called: 9
  1289 ;; This function calls:
  1290 ;;		_ADC_init
  1291 ;;		_DCmotors_calibration
  1292 ;;		_DCmotors_init
  1293 ;;		_DCmotors_testing
  1294 ;;		_USART4_init
  1295 ;;		_checkbatterylevel
  1296 ;;		_colourcards_readRGBC
  1297 ;;		_colourcards_testing
  1298 ;;		_colourclickLEDs_C
  1299 ;;		_colourclick_calibration
  1300 ;;		_colourclick_init
  1301 ;;		_colourclick_readRGBC
  1302 ;;		_forward
  1303 ;; This function is called by:
  1304 ;;		Startup code after reset
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text0
  1309  004654                     __ptext0:
  1310                           	callstack 0
  1311  004654                     _main:
  1312                           	callstack 22
  1313  004654                     
  1314                           ;main.c: 12:     interrupts_lower = 0;
  1315  004654  0E00               	movlw	0
  1316  004656  0100               	movlb	0	; () banked
  1317  004658  6FF5               	movwf	(_interrupts_lower+1)& (0+255),b	;volatile
  1318  00465A  0E00               	movlw	0
  1319  00465C  6FF4               	movwf	_interrupts_lower& (0+255),b	;volatile
  1320  00465E                     
  1321                           ; BSR set to: 0
  1322                           ;main.c: 13:     interrupts_upper = 65535;
  1323  00465E  69FB               	setf	_interrupts_upper& (0+255),b	;volatile
  1324  004660  69FC               	setf	(_interrupts_upper+1)& (0+255),b	;volatile
  1325                           
  1326                           ;main.c: 14:     DCmotors_lower = 50;
  1327  004662  0E32               	movlw	50
  1328  004664  6FFE               	movwf	_DCmotors_lower& (0+255),b	;volatile
  1329                           
  1330                           ;main.c: 15:     DCmotors_upper = 50;
  1331  004666  0E32               	movlw	50
  1332  004668  6FFD               	movwf	_DCmotors_upper& (0+255),b	;volatile
  1333                           
  1334                           ;main.c: 16:     colourcard_flag = 0;
  1335  00466A  0E00               	movlw	0
  1336  00466C  6FF8               	movwf	_colourcard_flag& (0+255),b	;volatile
  1337                           
  1338                           ;main.c: 17:     unknowncard_flag = 0;
  1339  00466E  0E00               	movlw	0
  1340  004670  6FF7               	movwf	_unknowncard_flag& (0+255),b	;volatile
  1341                           
  1342                           ;main.c: 18:     returnhome_flag = 0;
  1343  004672  0E00               	movlw	0
  1344  004674  6FF6               	movwf	_returnhome_flag& (0+255),b	;volatile
  1345  004676                     
  1346                           ; BSR set to: 0
  1347                           ;main.c: 20:     ADC_init();
  1348  004676  ECA5  F02E         	call	_ADC_init	;wreg free
  1349  00467A                     
  1350                           ;main.c: 21:     colourclick_init();
  1351  00467A  EC6E  F02D         	call	_colourclick_init	;wreg free
  1352  00467E                     
  1353                           ;main.c: 22:     DCmotors_init(PWMperiod);
  1354  00467E  0E63               	movlw	99
  1355  004680  EC70  F02C         	call	_DCmotors_init
  1356  004684                     
  1357                           ;main.c: 23:     USART4_init();
  1358  004684  EC95  F02E         	call	_USART4_init	;wreg free
  1359  004688                     
  1360                           ;main.c: 24:     checkbatterylevel();
  1361  004688  EC85  F02E         	call	_checkbatterylevel	;wreg free
  1362  00468C                     
  1363                           ;main.c: 26:     DC_motor motorL;;main.c: 27:     motorL.power=0;
  1364  00468C  0E00               	movlw	0
  1365  00468E  0100               	movlb	0	; () banked
  1366  004690  6FD8               	movwf	main@motorL& (0+255),b
  1367  004692                     
  1368                           ; BSR set to: 0
  1369                           ;main.c: 28:     motorL.direction=1;
  1370  004692  0E01               	movlw	1
  1371  004694  6FD9               	movwf	(main@motorL+1)& (0+255),b
  1372  004696                     
  1373                           ; BSR set to: 0
  1374                           ;main.c: 29:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
  1375  004696  0EA3               	movlw	163
  1376  004698  6FDA               	movwf	(main@motorL+2)& (0+255),b
  1377  00469A  0E0F               	movlw	15
  1378  00469C  6FDB               	movwf	(main@motorL+3)& (0+255),b
  1379  00469E                     
  1380                           ; BSR set to: 0
  1381                           ;main.c: 30:     motorL.dir_LAT=(unsigned char *)(&LATE);
  1382  00469E  0E7D               	movlw	125
  1383  0046A0  6FDC               	movwf	(main@motorL+4)& (0+255),b
  1384  0046A2  0E0F               	movlw	15
  1385  0046A4  6FDD               	movwf	(main@motorL+5)& (0+255),b
  1386  0046A6                     
  1387                           ; BSR set to: 0
  1388                           ;main.c: 31:     motorL.dir_pin=4;
  1389  0046A6  0E04               	movlw	4
  1390  0046A8  6FDE               	movwf	(main@motorL+6)& (0+255),b
  1391  0046AA                     
  1392                           ; BSR set to: 0
  1393                           ;main.c: 32:     motorL.PWMperiod=PWMperiod;
  1394  0046AA  0E00               	movlw	0
  1395  0046AC  6FE0               	movwf	(main@motorL+8)& (0+255),b
  1396  0046AE  0E63               	movlw	99
  1397  0046B0  6FDF               	movwf	(main@motorL+7)& (0+255),b
  1398  0046B2                     
  1399                           ; BSR set to: 0
  1400                           ;main.c: 34:     DC_motor motorR;;main.c: 35:     motorR.power=0;
  1401  0046B2  0E00               	movlw	0
  1402  0046B4  6FE1               	movwf	main@motorR& (0+255),b
  1403  0046B6                     
  1404                           ; BSR set to: 0
  1405                           ;main.c: 36:     motorR.direction=1;
  1406  0046B6  0E01               	movlw	1
  1407  0046B8  6FE2               	movwf	(main@motorR+1)& (0+255),b
  1408  0046BA                     
  1409                           ; BSR set to: 0
  1410                           ;main.c: 37:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
  1411  0046BA  0EA0               	movlw	160
  1412  0046BC  6FE3               	movwf	(main@motorR+2)& (0+255),b
  1413  0046BE  0E0F               	movlw	15
  1414  0046C0  6FE4               	movwf	(main@motorR+3)& (0+255),b
  1415  0046C2                     
  1416                           ; BSR set to: 0
  1417                           ;main.c: 38:     motorR.dir_LAT=(unsigned char *)(&LATG);
  1418  0046C2  0E7F               	movlw	127
  1419  0046C4  6FE5               	movwf	(main@motorR+4)& (0+255),b
  1420  0046C6  0E0F               	movlw	15
  1421  0046C8  6FE6               	movwf	(main@motorR+5)& (0+255),b
  1422  0046CA                     
  1423                           ; BSR set to: 0
  1424                           ;main.c: 39:     motorR.dir_pin=6;
  1425  0046CA  0E06               	movlw	6
  1426  0046CC  6FE7               	movwf	(main@motorR+6)& (0+255),b
  1427  0046CE                     
  1428                           ; BSR set to: 0
  1429                           ;main.c: 40:     motorR.PWMperiod=PWMperiod;
  1430  0046CE  0E00               	movlw	0
  1431  0046D0  6FE9               	movwf	(main@motorR+8)& (0+255),b
  1432  0046D2  0E63               	movlw	99
  1433  0046D4  6FE8               	movwf	(main@motorR+7)& (0+255),b
  1434  0046D6                     
  1435                           ; BSR set to: 0
  1436                           ;main.c: 45:     colourclick_calibration();
  1437  0046D6  ECD2  F026         	call	_colourclick_calibration	;wreg free
  1438  0046DA                     
  1439                           ;main.c: 50:     DCmotors_calibration(&motorL, &motorR);
  1440  0046DA  0ED8               	movlw	low main@motorL
  1441  0046DC  6E28               	movwf	DCmotors_calibration@mL^0,c
  1442  0046DE  0E00               	movlw	high main@motorL
  1443  0046E0  6E29               	movwf	(DCmotors_calibration@mL+1)^0,c
  1444  0046E2  0EE1               	movlw	low main@motorR
  1445  0046E4  6E2A               	movwf	DCmotors_calibration@mR^0,c
  1446  0046E6  0E00               	movlw	high main@motorR
  1447  0046E8  6E2B               	movwf	(DCmotors_calibration@mR+1)^0,c
  1448  0046EA  ECCF  F023         	call	_DCmotors_calibration	;wreg free
  1449  0046EE                     l71:
  1450  0046EE  A48E               	btfss	142,2,c	;volatile
  1451  0046F0  EF7C  F023         	goto	u7141
  1452  0046F4  EF7E  F023         	goto	u7140
  1453  0046F8                     u7141:
  1454  0046F8  EF85  F023         	goto	l75
  1455  0046FC                     u7140:
  1456  0046FC  B68E               	btfsc	142,3,c	;volatile
  1457  0046FE  EF83  F023         	goto	u7151
  1458  004702  EF85  F023         	goto	u7150
  1459  004706                     u7151:
  1460  004706  EF77  F023         	goto	l71
  1461  00470A                     u7150:
  1462  00470A                     l75:
  1463                           
  1464                           ;main.c: 56:     LATDbits.LATD3 = 1;
  1465  00470A  867C               	bsf	124,3,c	;volatile
  1466  00470C                     
  1467                           ;main.c: 57:     colourclickLEDs_C(1);
  1468  00470C  0E01               	movlw	1
  1469  00470E  EC64  F02E         	call	_colourclickLEDs_C
  1470  004712                     
  1471                           ;main.c: 58:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1472  004712  0E52               	movlw	82
  1473  004714  6E5D               	movwf	(??_main+1)^0,c
  1474  004716  0E2B               	movlw	43
  1475  004718  6E5C               	movwf	??_main^0,c
  1476  00471A  0E00               	movlw	0
  1477  00471C                     u7217:
  1478  00471C  2EE8               	decfsz	wreg,f,c
  1479  00471E  D7FE               	bra	u7217
  1480  004720  2E5C               	decfsz	??_main^0,f,c
  1481  004722  D7FC               	bra	u7217
  1482  004724  2E5D               	decfsz	(??_main+1)^0,f,c
  1483  004726  D7FA               	bra	u7217
  1484  004728  D000               	nop2	
  1485  00472A                     
  1486                           ;main.c: 60:     forward(&motorL, &motorR);
  1487  00472A  0ED8               	movlw	low main@motorL
  1488  00472C  6E1A               	movwf	forward@mL^0,c
  1489  00472E  0E00               	movlw	high main@motorL
  1490  004730  6E1B               	movwf	(forward@mL+1)^0,c
  1491  004732  0EE1               	movlw	low main@motorR
  1492  004734  6E1C               	movwf	forward@mR^0,c
  1493  004736  0E00               	movlw	high main@motorR
  1494  004738  6E1D               	movwf	(forward@mR+1)^0,c
  1495  00473A  EC31  F02A         	call	_forward	;wreg free
  1496  00473E                     l5930:
  1497                           
  1498                           ;main.c: 70:         colourcards_testing();
  1499  00473E  EC18  F01E         	call	_colourcards_testing	;wreg free
  1500  004742                     
  1501                           ;main.c: 71:         DCmotors_testing(&motorL, &motorR);
  1502  004742  0ED8               	movlw	low main@motorL
  1503  004744  6E28               	movwf	DCmotors_testing@mL^0,c
  1504  004746  0E00               	movlw	high main@motorL
  1505  004748  6E29               	movwf	(DCmotors_testing@mL+1)^0,c
  1506  00474A  0EE1               	movlw	low main@motorR
  1507  00474C  6E2A               	movwf	DCmotors_testing@mR^0,c
  1508  00474E  0E00               	movlw	high main@motorR
  1509  004750  6E2B               	movwf	(DCmotors_testing@mR+1)^0,c
  1510  004752  ECF4  F01B         	call	_DCmotors_testing	;wreg free
  1511  004756                     
  1512                           ;main.c: 76:         if (colourcard_flag==1) {
  1513  004756  0100               	movlb	0	; () banked
  1514  004758  05F8               	decf	_colourcard_flag& (0+255),w,b	;volatile
  1515  00475A  A4D8               	btfss	status,2,c
  1516  00475C  EFB2  F023         	goto	u7161
  1517  004760  EFB4  F023         	goto	u7160
  1518  004764                     u7161:
  1519  004764  EF9F  F023         	goto	l5930
  1520  004768                     u7160:
  1521  004768                     
  1522                           ; BSR set to: 0
  1523                           ;main.c: 77:             colourclick_readRGBC(&current);
  1524  004768  0ED0               	movlw	low main@current
  1525  00476A  6E0C               	movwf	colourclick_readRGBC@tmpval^0,c
  1526  00476C  0E00               	movlw	high main@current
  1527  00476E  6E0D               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  1528  004770  EC4F  F02B         	call	_colourclick_readRGBC	;wreg free
  1529  004774                     
  1530                           ;main.c: 78:             colourcards_readRGBC(&current, &motorL, &motorR);
  1531  004774  0ED0               	movlw	low main@current
  1532  004776  6E28               	movwf	colourcards_readRGBC@tmpval^0,c
  1533  004778  0E00               	movlw	high main@current
  1534  00477A  6E29               	movwf	(colourcards_readRGBC@tmpval+1)^0,c
  1535  00477C  0ED8               	movlw	low main@motorL
  1536  00477E  6E2A               	movwf	colourcards_readRGBC@mL^0,c
  1537  004780  0E00               	movlw	high main@motorL
  1538  004782  6E2B               	movwf	(colourcards_readRGBC@mL+1)^0,c
  1539  004784  0EE1               	movlw	low main@motorR
  1540  004786  6E2C               	movwf	colourcards_readRGBC@mR^0,c
  1541  004788  0E00               	movlw	high main@motorR
  1542  00478A  6E2D               	movwf	(colourcards_readRGBC@mR+1)^0,c
  1543  00478C  EC52  F00D         	call	_colourcards_readRGBC	;wreg free
  1544  004790                     
  1545                           ;main.c: 79:             colourcard_flag = 0;
  1546  004790  0E00               	movlw	0
  1547  004792  0100               	movlb	0	; () banked
  1548  004794  6FF8               	movwf	_colourcard_flag& (0+255),b	;volatile
  1549  004796  EF9F  F023         	goto	l5930
  1550  00479A  EF00  F000         	goto	start
  1551  00479E                     __end_of_main:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _colourclick_init *****************
  1555 ;; Defined at:
  1556 ;;		line 18 in file "colour_click.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;Total ram usage:        1 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 3
  1577 ;; This function calls:
  1578 ;;		_I2C_2_Master_Init
  1579 ;;		_colourclickLEDs_init
  1580 ;;		_colourclick_writetoaddr
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text1
  1587  005ADC                     __ptext1:
  1588                           	callstack 0
  1589  005ADC                     _colourclick_init:
  1590                           	callstack 27
  1591  005ADC                     
  1592                           ;colour_click.c: 21:     I2C_2_Master_Init();
  1593  005ADC  EC28  F02E         	call	_I2C_2_Master_Init	;wreg free
  1594  005AE0                     
  1595                           ;colour_click.c: 24:   colourclick_writetoaddr(0x00, 0x01);
  1596  005AE0  0E01               	movlw	1
  1597  005AE2  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1598  005AE4  0E00               	movlw	0
  1599  005AE6  EC75  F02E         	call	_colourclick_writetoaddr
  1600  005AEA                     
  1601                           ;colour_click.c: 25:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1602  005AEA  0E3F               	movlw	63
  1603  005AEC  6E05               	movwf	??_colourclick_init^0,c
  1604  005AEE  0E55               	movlw	85
  1605  005AF0                     u7227:
  1606  005AF0  2EE8               	decfsz	wreg,f,c
  1607  005AF2  D7FE               	bra	u7227
  1608  005AF4  2E05               	decfsz	??_colourclick_init^0,f,c
  1609  005AF6  D7FC               	bra	u7227
  1610  005AF8  F000               	nop	
  1611  005AFA                     
  1612                           ;colour_click.c: 28:  colourclick_writetoaddr(0x00, 0x03);
  1613  005AFA  0E03               	movlw	3
  1614  005AFC  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1615  005AFE  0E00               	movlw	0
  1616  005B00  EC75  F02E         	call	_colourclick_writetoaddr
  1617  005B04                     
  1618                           ;colour_click.c: 31:  colourclick_writetoaddr(0x01, 0xD5);
  1619  005B04  0ED5               	movlw	213
  1620  005B06  6E03               	movwf	colourclick_writetoaddr@value^0,c
  1621  005B08  0E01               	movlw	1
  1622  005B0A  EC75  F02E         	call	_colourclick_writetoaddr
  1623  005B0E                     
  1624                           ;colour_click.c: 33:     colourclickLEDs_init();
  1625  005B0E  ECD5  F02E         	call	_colourclickLEDs_init	;wreg free
  1626  005B12  0012               	return		;funcret
  1627  005B14                     __end_of_colourclick_init:
  1628                           	callstack 0
  1629                           
  1630 ;; *************** function _colourclick_writetoaddr *****************
  1631 ;; Defined at:
  1632 ;;		line 42 in file "colour_click.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  address         1    wreg     unsigned char 
  1635 ;;  value           1    2[COMRAM] unsigned char 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  address         1    3[COMRAM] unsigned char 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1647 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1651 ;;Total ram usage:        2 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 2
  1654 ;; This function calls:
  1655 ;;		_I2C_2_Master_Start
  1656 ;;		_I2C_2_Master_Stop
  1657 ;;		_I2C_2_Master_Write
  1658 ;; This function is called by:
  1659 ;;		_colourclick_init
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text2
  1664  005CEA                     __ptext2:
  1665                           	callstack 0
  1666  005CEA                     _colourclick_writetoaddr:
  1667                           	callstack 27
  1668                           
  1669                           ;incstack = 0
  1670                           ;colourclick_writetoaddr@address stored from wreg
  1671  005CEA  6E04               	movwf	colourclick_writetoaddr@address^0,c
  1672  005CEC                     
  1673                           ;colour_click.c: 42: void colourclick_writetoaddr(char address, char value);colour_click
      +                          .c: 43: {;colour_click.c: 44:     I2C_2_Master_Start();
  1674  005CEC  ECED  F02E         	call	_I2C_2_Master_Start	;wreg free
  1675                           
  1676                           ;colour_click.c: 45:     I2C_2_Master_Write(0x52 | 0x00);
  1677  005CF0  0E52               	movlw	82
  1678  005CF2  ECDC  F02E         	call	_I2C_2_Master_Write
  1679                           
  1680                           ;colour_click.c: 46:     I2C_2_Master_Write(0x80 | address);
  1681  005CF6  5004               	movf	colourclick_writetoaddr@address^0,w,c
  1682  005CF8  0980               	iorlw	128
  1683  005CFA  ECDC  F02E         	call	_I2C_2_Master_Write
  1684                           
  1685                           ;colour_click.c: 47:     I2C_2_Master_Write(value);
  1686  005CFE  5003               	movf	colourclick_writetoaddr@value^0,w,c
  1687  005D00  ECDC  F02E         	call	_I2C_2_Master_Write
  1688                           
  1689                           ;colour_click.c: 48:     I2C_2_Master_Stop();
  1690  005D04  ECE8  F02E         	call	_I2C_2_Master_Stop	;wreg free
  1691  005D08  0012               	return		;funcret
  1692  005D0A                     __end_of_colourclick_writetoaddr:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _colourclickLEDs_init *****************
  1696 ;; Defined at:
  1697 ;;		line 49 in file "buttons_n_LEDs.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 1
  1718 ;; This function calls:
  1719 ;;		_colourclickLEDs_C
  1720 ;; This function is called by:
  1721 ;;		_colourclick_init
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text3
  1726  005DAA                     __ptext3:
  1727                           	callstack 0
  1728  005DAA                     _colourclickLEDs_init:
  1729                           	callstack 28
  1730  005DAA                     
  1731                           ;buttons_n_LEDs.c: 52:     TRISGbits.TRISG1 = 0;
  1732  005DAA  9287               	bcf	135,1,c	;volatile
  1733                           
  1734                           ;buttons_n_LEDs.c: 53:     TRISAbits.TRISA4 = 0;
  1735  005DAC  9881               	bcf	129,4,c	;volatile
  1736                           
  1737                           ;buttons_n_LEDs.c: 54:     TRISFbits.TRISF7 = 0;
  1738  005DAE  9E86               	bcf	134,7,c	;volatile
  1739  005DB0                     
  1740                           ;buttons_n_LEDs.c: 57:     colourclickLEDs_C(0);
  1741  005DB0  0E00               	movlw	0
  1742  005DB2  EC64  F02E         	call	_colourclickLEDs_C
  1743  005DB6  0012               	return		;funcret
  1744  005DB8                     __end_of_colourclickLEDs_init:
  1745                           	callstack 0
  1746                           
  1747 ;; *************** function _colourclickLEDs_C *****************
  1748 ;; Defined at:
  1749 ;;		line 84 in file "buttons_n_LEDs.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  tog             1    wreg     unsigned char 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  tog             1    0[COMRAM] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1767 ;;Total ram usage:        1 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;;		_colourclickLEDs_init
  1774 ;;		_colourclick_readRGBC2
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text4
  1779  005CC8                     __ptext4:
  1780                           	callstack 0
  1781  005CC8                     _colourclickLEDs_C:
  1782                           	callstack 28
  1783                           
  1784                           ;incstack = 0
  1785                           ;colourclickLEDs_C@tog stored from wreg
  1786  005CC8  6E01               	movwf	colourclickLEDs_C@tog^0,c
  1787  005CCA                     
  1788                           ;buttons_n_LEDs.c: 84: void colourclickLEDs_C(unsigned char tog);buttons_n_LEDs.c: 85: {
      +                          ;buttons_n_LEDs.c: 86:     LATGbits.LATG1 = tog;
  1789  005CCA  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1790  005CCC  D002               	bra	u6295
  1791  005CCE  927F               	bcf	127,1,c	;volatile
  1792  005CD0  D001               	bra	u6296
  1793  005CD2                     u6295:
  1794  005CD2  827F               	bsf	127,1,c	;volatile
  1795  005CD4                     u6296:
  1796                           
  1797                           ;buttons_n_LEDs.c: 87:     LATAbits.LATA4 = tog;
  1798  005CD4  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1799  005CD6  D002               	bra	u6305
  1800  005CD8  9879               	bcf	121,4,c	;volatile
  1801  005CDA  D001               	bra	u6306
  1802  005CDC                     u6305:
  1803  005CDC  8879               	bsf	121,4,c	;volatile
  1804  005CDE                     u6306:
  1805                           
  1806                           ;buttons_n_LEDs.c: 88:     LATFbits.LATF7 = tog;
  1807  005CDE  B001               	btfsc	colourclickLEDs_C@tog^0,0,c
  1808  005CE0  D002               	bra	u6315
  1809  005CE2  9E7E               	bcf	126,7,c	;volatile
  1810  005CE4  D001               	bra	u6316
  1811  005CE6                     u6315:
  1812  005CE6  8E7E               	bsf	126,7,c	;volatile
  1813  005CE8                     u6316:
  1814  005CE8  0012               	return		;funcret
  1815  005CEA                     __end_of_colourclickLEDs_C:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function _I2C_2_Master_Init *****************
  1819 ;; Defined at:
  1820 ;;		line 8 in file "I2C.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_colourclick_init
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text5
  1848  005C50                     __ptext5:
  1849                           	callstack 0
  1850  005C50                     _I2C_2_Master_Init:
  1851                           	callstack 29
  1852  005C50                     
  1853                           ;I2C.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  1854  005C50  010E               	movlb	14	; () banked
  1855  005C52  51D9               	movf	217,w,b	;volatile
  1856  005C54  0BF0               	andlw	-16
  1857  005C56  0908               	iorlw	8
  1858  005C58  6FD9               	movwf	217,b	;volatile
  1859  005C5A                     
  1860                           ; BSR set to: 14
  1861                           ;I2C.c: 12:   SSP2CON1bits.SSPEN = 1;
  1862  005C5A  8BD9               	bsf	217,5,b	;volatile
  1863                           
  1864                           ;I2C.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  1865  005C5C  0E9F               	movlw	159
  1866  005C5E  6FD6               	movwf	214,b	;volatile
  1867  005C60                     
  1868                           ; BSR set to: 14
  1869                           ;I2C.c: 16:   TRISDbits.TRISD5 = 1;
  1870  005C60  8A84               	bsf	132,5,c	;volatile
  1871  005C62                     
  1872                           ; BSR set to: 14
  1873                           ;I2C.c: 17:   TRISDbits.TRISD6 = 1;
  1874  005C62  8C84               	bsf	132,6,c	;volatile
  1875  005C64                     
  1876                           ; BSR set to: 14
  1877                           ;I2C.c: 18:   ANSELDbits.ANSELD5=0;
  1878  005C64  9BA7               	bcf	167,5,b	;volatile
  1879  005C66                     
  1880                           ; BSR set to: 14
  1881                           ;I2C.c: 19:   ANSELDbits.ANSELD6=0;
  1882  005C66  9DA7               	bcf	167,6,b	;volatile
  1883                           
  1884                           ;I2C.c: 20:   SSP2DATPPS=0x1D;
  1885  005C68  0E1D               	movlw	29
  1886  005C6A  6F1D               	movwf	29,b	;volatile
  1887                           
  1888                           ;I2C.c: 21:   SSP2CLKPPS=0x1E;
  1889  005C6C  0E1E               	movlw	30
  1890  005C6E  6F1C               	movwf	28,b	;volatile
  1891                           
  1892                           ;I2C.c: 22:   RD5PPS=0x1C;
  1893  005C70  0E1C               	movlw	28
  1894  005C72  6F6F               	movwf	111,b	;volatile
  1895                           
  1896                           ;I2C.c: 23:   RD6PPS=0x1B;
  1897  005C74  0E1B               	movlw	27
  1898  005C76  6F70               	movwf	112,b	;volatile
  1899  005C78                     
  1900                           ; BSR set to: 14
  1901  005C78  0012               	return		;funcret
  1902  005C7A                     __end_of_I2C_2_Master_Init:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function _colourclick_calibration *****************
  1906 ;; Defined at:
  1907 ;;		line 171 in file "colour_click.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  current         8   24[COMRAM] struct .
  1912 ;;  initial         8   16[COMRAM] struct .
  1913 ;;  i               1   15[COMRAM] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;Total ram usage:       19 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 4
  1930 ;; This function calls:
  1931 ;;		_colourclick_readRGBC
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text6
  1938  004DA4                     __ptext6:
  1939                           	callstack 0
  1940  004DA4                     _colourclick_calibration:
  1941                           	callstack 26
  1942  004DA4                     l234:
  1943  004DA4  B48E               	btfsc	142,2,c	;volatile
  1944  004DA6  EFD7  F026         	goto	u6701
  1945  004DAA  EFD9  F026         	goto	u6700
  1946  004DAE                     u6701:
  1947  004DAE  EFD2  F026         	goto	l234
  1948  004DB2                     u6700:
  1949  004DB2                     
  1950                           ;colour_click.c: 174:     LATDbits.LATD7 = 1;
  1951  004DB2  8E7C               	bsf	124,7,c	;volatile
  1952  004DB4                     
  1953                           ;colour_click.c: 175:     colourclick_readRGBC(&initial);
  1954  004DB4  0E11               	movlw	low colourclick_calibration@initial
  1955  004DB6  6E0C               	movwf	colourclick_readRGBC@tmpval^0,c
  1956  004DB8  0E00               	movlw	high colourclick_calibration@initial
  1957  004DBA  6E0D               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  1958  004DBC  EC4F  F02B         	call	_colourclick_readRGBC	;wreg free
  1959  004DC0                     
  1960                           ;colour_click.c: 176:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1961  004DC0  0E09               	movlw	9
  1962  004DC2  6E0F               	movwf	(??_colourclick_calibration+1)^0,c
  1963  004DC4  0E1E               	movlw	30
  1964  004DC6  6E0E               	movwf	??_colourclick_calibration^0,c
  1965  004DC8  0EE4               	movlw	228
  1966  004DCA                     u7237:
  1967  004DCA  2EE8               	decfsz	wreg,f,c
  1968  004DCC  D7FE               	bra	u7237
  1969  004DCE  2E0E               	decfsz	??_colourclick_calibration^0,f,c
  1970  004DD0  D7FC               	bra	u7237
  1971  004DD2  2E0F               	decfsz	(??_colourclick_calibration+1)^0,f,c
  1972  004DD4  D7FA               	bra	u7237
  1973  004DD6  D000               	nop2	
  1974  004DD8                     
  1975                           ;colour_click.c: 177:     LATDbits.LATD7 = 0;
  1976  004DD8  9E7C               	bcf	124,7,c	;volatile
  1977  004DDA                     
  1978                           ;colour_click.c: 179:     unsigned char i;;colour_click.c: 180:     RGBC_val current;;co
      +                          lour_click.c: 181:     for (i=0; i<10; i++) {
  1979  004DDA  0E00               	movlw	0
  1980  004DDC  6E10               	movwf	colourclick_calibration@i^0,c
  1981  004DDE                     l239:
  1982  004DDE  B48E               	btfsc	142,2,c	;volatile
  1983  004DE0  EFF4  F026         	goto	u6711
  1984  004DE4  EFF6  F026         	goto	u6710
  1985  004DE8                     u6711:
  1986  004DE8  EFEF  F026         	goto	l239
  1987  004DEC                     u6710:
  1988  004DEC                     
  1989                           ;colour_click.c: 183:         LATDbits.LATD7 = 1;
  1990  004DEC  8E7C               	bsf	124,7,c	;volatile
  1991  004DEE                     
  1992                           ;colour_click.c: 184:         colourclick_readRGBC(&current);
  1993  004DEE  0E19               	movlw	low colourclick_calibration@current
  1994  004DF0  6E0C               	movwf	colourclick_readRGBC@tmpval^0,c
  1995  004DF2  0E00               	movlw	high colourclick_calibration@current
  1996  004DF4  6E0D               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  1997  004DF6  EC4F  F02B         	call	_colourclick_readRGBC	;wreg free
  1998  004DFA                     
  1999                           ;colour_click.c: 185:         if ((current.C<initial.C) && (current.C>interrupts_lower))
      +                           {
  2000  004DFA  5017               	movf	(colourclick_calibration@initial+6)^0,w,c
  2001  004DFC  5C1F               	subwf	(colourclick_calibration@current+6)^0,w,c
  2002  004DFE  5018               	movf	(colourclick_calibration@initial+7)^0,w,c
  2003  004E00  5820               	subwfb	(colourclick_calibration@current+7)^0,w,c
  2004  004E02  B0D8               	btfsc	status,0,c
  2005  004E04  EF06  F027         	goto	u6721
  2006  004E08  EF08  F027         	goto	u6720
  2007  004E0C                     u6721:
  2008  004E0C  EF1A  F027         	goto	l5670
  2009  004E10                     u6720:
  2010  004E10  501F               	movf	(colourclick_calibration@current+6)^0,w,c
  2011  004E12  0100               	movlb	0	; () banked
  2012  004E14  5DF4               	subwf	_interrupts_lower& (0+255),w,b	;volatile
  2013  004E16  5020               	movf	(colourclick_calibration@current+7)^0,w,c
  2014  004E18  59F5               	subwfb	(_interrupts_lower+1)& (0+255),w,b	;volatile
  2015  004E1A  B0D8               	btfsc	status,0,c
  2016  004E1C  EF12  F027         	goto	u6731
  2017  004E20  EF14  F027         	goto	u6730
  2018  004E24                     u6731:
  2019  004E24  EF1A  F027         	goto	l5670
  2020  004E28                     u6730:
  2021  004E28                     
  2022                           ; BSR set to: 0
  2023                           ;colour_click.c: 186:             interrupts_lower = current.C;
  2024  004E28  C01F  F0F4         	movff	colourclick_calibration@current+6,_interrupts_lower	;volatile
  2025  004E2C  C020  F0F5         	movff	colourclick_calibration@current+7,_interrupts_lower+1	;volatile
  2026                           
  2027                           ;colour_click.c: 187:         } else if ((current.C>initial.C) && (current.C<interrupts_
      +                          upper)) {
  2028  004E30  EF35  F027         	goto	l5676
  2029  004E34                     l5670:
  2030  004E34  501F               	movf	(colourclick_calibration@current+6)^0,w,c
  2031  004E36  5C17               	subwf	(colourclick_calibration@initial+6)^0,w,c
  2032  004E38  5020               	movf	(colourclick_calibration@current+7)^0,w,c
  2033  004E3A  5818               	subwfb	(colourclick_calibration@initial+7)^0,w,c
  2034  004E3C  B0D8               	btfsc	status,0,c
  2035  004E3E  EF23  F027         	goto	u6741
  2036  004E42  EF25  F027         	goto	u6740
  2037  004E46                     u6741:
  2038  004E46  EF35  F027         	goto	l5676
  2039  004E4A                     u6740:
  2040  004E4A  0100               	movlb	0	; () banked
  2041  004E4C  51FB               	movf	_interrupts_upper& (0+255),w,b	;volatile
  2042  004E4E  5C1F               	subwf	(colourclick_calibration@current+6)^0,w,c
  2043  004E50  51FC               	movf	(_interrupts_upper+1)& (0+255),w,b	;volatile
  2044  004E52  5820               	subwfb	(colourclick_calibration@current+7)^0,w,c
  2045  004E54  B0D8               	btfsc	status,0,c
  2046  004E56  EF2F  F027         	goto	u6751
  2047  004E5A  EF31  F027         	goto	u6750
  2048  004E5E                     u6751:
  2049  004E5E  EF35  F027         	goto	l5676
  2050  004E62                     u6750:
  2051  004E62                     
  2052                           ; BSR set to: 0
  2053                           ;colour_click.c: 188:             interrupts_upper = current.C;
  2054  004E62  C01F  F0FB         	movff	colourclick_calibration@current+6,_interrupts_upper	;volatile
  2055  004E66  C020  F0FC         	movff	colourclick_calibration@current+7,_interrupts_upper+1	;volatile
  2056  004E6A                     l5676:
  2057                           
  2058                           ;colour_click.c: 190:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2059  004E6A  0E09               	movlw	9
  2060  004E6C  6E0F               	movwf	(??_colourclick_calibration+1)^0,c
  2061  004E6E  0E1E               	movlw	30
  2062  004E70  6E0E               	movwf	??_colourclick_calibration^0,c
  2063  004E72  0EE4               	movlw	228
  2064  004E74                     u7247:
  2065  004E74  2EE8               	decfsz	wreg,f,c
  2066  004E76  D7FE               	bra	u7247
  2067  004E78  2E0E               	decfsz	??_colourclick_calibration^0,f,c
  2068  004E7A  D7FC               	bra	u7247
  2069  004E7C  2E0F               	decfsz	(??_colourclick_calibration+1)^0,f,c
  2070  004E7E  D7FA               	bra	u7247
  2071  004E80  D000               	nop2	
  2072  004E82                     
  2073                           ;colour_click.c: 191:         LATDbits.LATD7 = 0;
  2074  004E82  9E7C               	bcf	124,7,c	;volatile
  2075  004E84                     
  2076                           ;colour_click.c: 192:     }
  2077  004E84  2A10               	incf	colourclick_calibration@i^0,f,c
  2078  004E86  0E09               	movlw	9
  2079  004E88  6410               	cpfsgt	colourclick_calibration@i^0,c
  2080  004E8A  EF49  F027         	goto	u6761
  2081  004E8E  EF4B  F027         	goto	u6760
  2082  004E92                     u6761:
  2083  004E92  EFEF  F026         	goto	l239
  2084  004E96                     u6760:
  2085  004E96  0012               	return		;funcret
  2086  004E98                     __end_of_colourclick_calibration:
  2087                           	callstack 0
  2088                           
  2089 ;; *************** function _colourcards_testing *****************
  2090 ;; Defined at:
  2091 ;;		line 103 in file "colour_cards.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  buf           100    0[BANK1 ] unsigned char [100]
  2096 ;;  current         8  116[BANK1 ] struct .
  2097 ;;  C_rel           4  112[BANK1 ] float 
  2098 ;;  B_rel           4  108[BANK1 ] float 
  2099 ;;  G_rel           4  104[BANK1 ] float 
  2100 ;;  R_rel           4  100[BANK1 ] float 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2111 ;;      Locals:         0       0     124       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;      Totals:         2       0     124       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;Total ram usage:      126 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 8
  2117 ;; This function calls:
  2118 ;;		___fldiv
  2119 ;;		___xxtofl
  2120 ;;		_colourclick_readRGBC
  2121 ;;		_sendStringSerial4
  2122 ;;		_sprintf
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text7
  2129  003C30                     __ptext7:
  2130                           	callstack 0
  2131  003C30                     _colourcards_testing:
  2132                           	callstack 22
  2133  003C30                     
  2134                           ;colour_cards.c: 105:     INTCONbits.GIE = 0;
  2135  003C30  9EF2               	bcf	242,7,c	;volatile
  2136  003C32                     
  2137                           ;colour_cards.c: 107:     RGBC_val current;;colour_cards.c: 108:     colourclick_readRGB
      +                          C(&current);
  2138  003C32  0E74               	movlw	low colourcards_testing@current
  2139  003C34  6E0C               	movwf	colourclick_readRGBC@tmpval^0,c
  2140  003C36  0E01               	movlw	high colourcards_testing@current
  2141  003C38  6E0D               	movwf	(colourclick_readRGBC@tmpval+1)^0,c
  2142  003C3A  EC4F  F02B         	call	_colourclick_readRGBC	;wreg free
  2143  003C3E                     
  2144                           ;colour_cards.c: 109:     char buf[100];;colour_cards.c: 110:     float R_rel = (float)c
      +                          urrent.R / (float)current.C;
  2145  003C3E  C174  F001         	movff	colourcards_testing@current,___xxtofl@val
  2146  003C42  C175  F002         	movff	colourcards_testing@current+1,___xxtofl@val+1
  2147  003C46  6A03               	clrf	(___xxtofl@val+2)^0,c
  2148  003C48  6A04               	clrf	(___xxtofl@val+3)^0,c
  2149  003C4A  0E00               	movlw	0
  2150  003C4C  EC08  F020         	call	___xxtofl
  2151  003C50  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2152  003C54  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2153  003C58  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2154  003C5C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2155  003C60  C17A  F001         	movff	colourcards_testing@current+6,___xxtofl@val
  2156  003C64  C17B  F002         	movff	colourcards_testing@current+7,___xxtofl@val+1
  2157  003C68  6A03               	clrf	(___xxtofl@val+2)^0,c
  2158  003C6A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2159  003C6C  0E00               	movlw	0
  2160  003C6E  EC08  F020         	call	___xxtofl
  2161  003C72  C001  F013         	movff	?___xxtofl,___fldiv@a
  2162  003C76  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2163  003C7A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2164  003C7E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2165  003C82  ECB5  F018         	call	___fldiv	;wreg free
  2166  003C86  C00F  F164         	movff	?___fldiv,colourcards_testing@R_rel
  2167  003C8A  C010  F165         	movff	?___fldiv+1,colourcards_testing@R_rel+1
  2168  003C8E  C011  F166         	movff	?___fldiv+2,colourcards_testing@R_rel+2
  2169  003C92  C012  F167         	movff	?___fldiv+3,colourcards_testing@R_rel+3
  2170  003C96                     
  2171                           ;colour_cards.c: 111:     float G_rel = (float)current.G / (float)current.C;
  2172  003C96  C176  F001         	movff	colourcards_testing@current+2,___xxtofl@val
  2173  003C9A  C177  F002         	movff	colourcards_testing@current+3,___xxtofl@val+1
  2174  003C9E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2175  003CA0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2176  003CA2  0E00               	movlw	0
  2177  003CA4  EC08  F020         	call	___xxtofl
  2178  003CA8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2179  003CAC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2180  003CB0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2181  003CB4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2182  003CB8  C17A  F001         	movff	colourcards_testing@current+6,___xxtofl@val
  2183  003CBC  C17B  F002         	movff	colourcards_testing@current+7,___xxtofl@val+1
  2184  003CC0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2185  003CC2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2186  003CC4  0E00               	movlw	0
  2187  003CC6  EC08  F020         	call	___xxtofl
  2188  003CCA  C001  F013         	movff	?___xxtofl,___fldiv@a
  2189  003CCE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2190  003CD2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2191  003CD6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2192  003CDA  ECB5  F018         	call	___fldiv	;wreg free
  2193  003CDE  C00F  F168         	movff	?___fldiv,colourcards_testing@G_rel
  2194  003CE2  C010  F169         	movff	?___fldiv+1,colourcards_testing@G_rel+1
  2195  003CE6  C011  F16A         	movff	?___fldiv+2,colourcards_testing@G_rel+2
  2196  003CEA  C012  F16B         	movff	?___fldiv+3,colourcards_testing@G_rel+3
  2197  003CEE                     
  2198                           ;colour_cards.c: 112:     float B_rel = (float)current.B / (float)current.C;
  2199  003CEE  C178  F001         	movff	colourcards_testing@current+4,___xxtofl@val
  2200  003CF2  C179  F002         	movff	colourcards_testing@current+5,___xxtofl@val+1
  2201  003CF6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2202  003CF8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2203  003CFA  0E00               	movlw	0
  2204  003CFC  EC08  F020         	call	___xxtofl
  2205  003D00  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2206  003D04  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2207  003D08  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2208  003D0C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2209  003D10  C17A  F001         	movff	colourcards_testing@current+6,___xxtofl@val
  2210  003D14  C17B  F002         	movff	colourcards_testing@current+7,___xxtofl@val+1
  2211  003D18  6A03               	clrf	(___xxtofl@val+2)^0,c
  2212  003D1A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2213  003D1C  0E00               	movlw	0
  2214  003D1E  EC08  F020         	call	___xxtofl
  2215  003D22  C001  F013         	movff	?___xxtofl,___fldiv@a
  2216  003D26  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2217  003D2A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2218  003D2E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2219  003D32  ECB5  F018         	call	___fldiv	;wreg free
  2220  003D36  C00F  F16C         	movff	?___fldiv,colourcards_testing@B_rel
  2221  003D3A  C010  F16D         	movff	?___fldiv+1,colourcards_testing@B_rel+1
  2222  003D3E  C011  F16E         	movff	?___fldiv+2,colourcards_testing@B_rel+2
  2223  003D42  C012  F16F         	movff	?___fldiv+3,colourcards_testing@B_rel+3
  2224  003D46                     
  2225                           ;colour_cards.c: 113:     float C_rel = (float)current.C / (float)current.C;
  2226  003D46  C17A  F001         	movff	colourcards_testing@current+6,___xxtofl@val
  2227  003D4A  C17B  F002         	movff	colourcards_testing@current+7,___xxtofl@val+1
  2228  003D4E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2229  003D50  6A04               	clrf	(___xxtofl@val+3)^0,c
  2230  003D52  0E00               	movlw	0
  2231  003D54  EC08  F020         	call	___xxtofl
  2232  003D58  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2233  003D5C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2234  003D60  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2235  003D64  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2236  003D68  C17A  F001         	movff	colourcards_testing@current+6,___xxtofl@val
  2237  003D6C  C17B  F002         	movff	colourcards_testing@current+7,___xxtofl@val+1
  2238  003D70  6A03               	clrf	(___xxtofl@val+2)^0,c
  2239  003D72  6A04               	clrf	(___xxtofl@val+3)^0,c
  2240  003D74  0E00               	movlw	0
  2241  003D76  EC08  F020         	call	___xxtofl
  2242  003D7A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2243  003D7E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2244  003D82  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2245  003D86  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2246  003D8A  ECB5  F018         	call	___fldiv	;wreg free
  2247  003D8E  C00F  F170         	movff	?___fldiv,colourcards_testing@C_rel
  2248  003D92  C010  F171         	movff	?___fldiv+1,colourcards_testing@C_rel+1
  2249  003D96  C011  F172         	movff	?___fldiv+2,colourcards_testing@C_rel+2
  2250  003D9A  C012  F173         	movff	?___fldiv+3,colourcards_testing@C_rel+3
  2251  003D9E                     
  2252                           ;colour_cards.c: 114:     sprintf(buf,"RGBC: %i %i %i %i     RGBC_rel: %.3f %.3f %.3f %.
      +                          3f\n\r", current.R, current.G, current.B, current.C, R_rel, G_rel, B_rel, C_rel);
  2253  003D9E  0E00               	movlw	low colourcards_testing@buf
  2254  003DA0  0100               	movlb	0	; () banked
  2255  003DA2  6FAC               	movwf	sprintf@s& (0+255),b
  2256  003DA4  0E01               	movlw	high colourcards_testing@buf
  2257  003DA6  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  2258  003DA8  0E01               	movlw	low STR_1
  2259  003DAA  6FAE               	movwf	sprintf@fmt& (0+255),b
  2260  003DAC  0E0E               	movlw	high STR_1
  2261  003DAE  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  2262  003DB0  C174  F0B0         	movff	colourcards_testing@current,?_sprintf+4
  2263  003DB4  C175  F0B1         	movff	colourcards_testing@current+1,?_sprintf+5
  2264  003DB8  C176  F0B2         	movff	colourcards_testing@current+2,?_sprintf+6
  2265  003DBC  C177  F0B3         	movff	colourcards_testing@current+3,?_sprintf+7
  2266  003DC0  C178  F0B4         	movff	colourcards_testing@current+4,?_sprintf+8
  2267  003DC4  C179  F0B5         	movff	colourcards_testing@current+5,?_sprintf+9
  2268  003DC8  C17A  F0B6         	movff	colourcards_testing@current+6,?_sprintf+10
  2269  003DCC  C17B  F0B7         	movff	colourcards_testing@current+7,?_sprintf+11
  2270  003DD0  C164  F0B8         	movff	colourcards_testing@R_rel,?_sprintf+12
  2271  003DD4  C165  F0B9         	movff	colourcards_testing@R_rel+1,?_sprintf+13
  2272  003DD8  C166  F0BA         	movff	colourcards_testing@R_rel+2,?_sprintf+14
  2273  003DDC  C167  F0BB         	movff	colourcards_testing@R_rel+3,?_sprintf+15
  2274  003DE0  C168  F0BC         	movff	colourcards_testing@G_rel,?_sprintf+16
  2275  003DE4  C169  F0BD         	movff	colourcards_testing@G_rel+1,?_sprintf+17
  2276  003DE8  C16A  F0BE         	movff	colourcards_testing@G_rel+2,?_sprintf+18
  2277  003DEC  C16B  F0BF         	movff	colourcards_testing@G_rel+3,?_sprintf+19
  2278  003DF0  C16C  F0C0         	movff	colourcards_testing@B_rel,?_sprintf+20
  2279  003DF4  C16D  F0C1         	movff	colourcards_testing@B_rel+1,?_sprintf+21
  2280  003DF8  C16E  F0C2         	movff	colourcards_testing@B_rel+2,?_sprintf+22
  2281  003DFC  C16F  F0C3         	movff	colourcards_testing@B_rel+3,?_sprintf+23
  2282  003E00  C170  F0C4         	movff	colourcards_testing@C_rel,?_sprintf+24
  2283  003E04  C171  F0C5         	movff	colourcards_testing@C_rel+1,?_sprintf+25
  2284  003E08  C172  F0C6         	movff	colourcards_testing@C_rel+2,?_sprintf+26
  2285  003E0C  C173  F0C7         	movff	colourcards_testing@C_rel+3,?_sprintf+27
  2286  003E10  EC7E  F02B         	call	_sprintf	;wreg free
  2287  003E14                     
  2288                           ;colour_cards.c: 116:     sendStringSerial4(buf);
  2289  003E14  0E00               	movlw	low colourcards_testing@buf
  2290  003E16  6E02               	movwf	sendStringSerial4@string^0,c
  2291  003E18  0E01               	movlw	high colourcards_testing@buf
  2292  003E1A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2293  003E1C  ECF9  F02D         	call	_sendStringSerial4	;wreg free
  2294  003E20                     
  2295                           ;colour_cards.c: 117:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2296  003E20  0E29               	movlw	41
  2297  003E22  6E5B               	movwf	(??_colourcards_testing+1)^0,c
  2298  003E24  0E96               	movlw	150
  2299  003E26  6E5A               	movwf	??_colourcards_testing^0,c
  2300  003E28  0E7F               	movlw	127
  2301  003E2A                     u7257:
  2302  003E2A  2EE8               	decfsz	wreg,f,c
  2303  003E2C  D7FE               	bra	u7257
  2304  003E2E  2E5A               	decfsz	??_colourcards_testing^0,f,c
  2305  003E30  D7FC               	bra	u7257
  2306  003E32  2E5B               	decfsz	(??_colourcards_testing+1)^0,f,c
  2307  003E34  D7FA               	bra	u7257
  2308  003E36  F000               	nop	
  2309  003E38                     
  2310                           ;colour_cards.c: 119:     INTCONbits.GIE = 1;
  2311  003E38  8EF2               	bsf	242,7,c	;volatile
  2312  003E3A  0012               	return		;funcret
  2313  003E3C                     __end_of_colourcards_testing:
  2314                           	callstack 0
  2315                           
  2316 ;; *************** function _sprintf *****************
  2317 ;; Defined at:
  2318 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  s               2   76[BANK0 ] PTR unsigned char 
  2321 ;;		 -> colourcards_testing@buf(100), 
  2322 ;;  fmt             2   78[BANK0 ] PTR const unsigned char 
  2323 ;;		 -> STR_1(54), 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  f               6  106[BANK0 ] struct _IO_FILE
  2326 ;;  ap              2  104[BANK0 ] PTR void [1]
  2327 ;;		 -> ?_sprintf(2), 
  2328 ;;  ret             2    0        int 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  2   76[BANK0 ] int 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2338 ;;      Params:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2339 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2341 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;Total ram usage:       36 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 7
  2345 ;; This function calls:
  2346 ;;		_vfprintf
  2347 ;; This function is called by:
  2348 ;;		_colourcards_testing
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text8
  2353  0056FC                     __ptext8:
  2354                           	callstack 0
  2355  0056FC                     _sprintf:
  2356                           	callstack 22
  2357  0056FC  0EB0               	movlw	low (?_sprintf+4)
  2358  0056FE  0100               	movlb	0	; () banked
  2359  005700  6FC8               	movwf	sprintf@ap& (0+255),b
  2360  005702  0E00               	movlw	high (?_sprintf+4)
  2361  005704  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  2362  005706  C0AC  F0CA         	movff	sprintf@s,sprintf@f
  2363  00570A  C0AD  F0CB         	movff	sprintf@s+1,sprintf@f+1
  2364  00570E                     
  2365                           ; BSR set to: 0
  2366  00570E  0E00               	movlw	0
  2367  005710  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  2368  005712  0E00               	movlw	0
  2369  005714  6FCC               	movwf	(sprintf@f+2)& (0+255),b
  2370  005716                     
  2371                           ; BSR set to: 0
  2372  005716  0E00               	movlw	0
  2373  005718  6FCF               	movwf	(sprintf@f+5)& (0+255),b
  2374  00571A  0E00               	movlw	0
  2375  00571C  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  2376  00571E                     
  2377                           ; BSR set to: 0
  2378  00571E  0ECA               	movlw	low sprintf@f
  2379  005720  6E52               	movwf	vfprintf@fp^0,c
  2380  005722  0E00               	movlw	high sprintf@f
  2381  005724  6E53               	movwf	(vfprintf@fp+1)^0,c
  2382  005726  C0AE  F054         	movff	sprintf@fmt,vfprintf@fmt
  2383  00572A  C0AF  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2384  00572E  0EC8               	movlw	low sprintf@ap
  2385  005730  6E56               	movwf	vfprintf@ap^0,c
  2386  005732  0E00               	movlw	high sprintf@ap
  2387  005734  6E57               	movwf	(vfprintf@ap+1)^0,c
  2388  005736  ECBD  F02A         	call	_vfprintf	;wreg free
  2389  00573A  0100               	movlb	0	; () banked
  2390  00573C  51CC               	movf	(sprintf@f+2)& (0+255),w,b
  2391  00573E  25AC               	addwf	sprintf@s& (0+255),w,b
  2392  005740  6ED9               	movwf	fsr2l,c
  2393  005742  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  2394  005744  21AD               	addwfc	(sprintf@s+1)& (0+255),w,b
  2395  005746  6EDA               	movwf	fsr2h,c
  2396  005748  0E00               	movlw	0
  2397  00574A  6EDF               	movwf	indf2,c
  2398  00574C                     
  2399                           ; BSR set to: 0
  2400  00574C  0012               	return		;funcret
  2401  00574E                     __end_of_sprintf:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _vfprintf *****************
  2405 ;; Defined at:
  2406 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  2409 ;;		 -> sprintf@f(6), 
  2410 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  2411 ;;		 -> STR_1(54), 
  2412 ;;  ap              2   85[COMRAM] PTR PTR void 
  2413 ;;		 -> sprintf@ap(2), 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  2416 ;;		 -> STR_1(54), 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  2   81[COMRAM] int 
  2419 ;; Registers used:
  2420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2426 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2429 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2430 ;;Total ram usage:        8 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 6
  2433 ;; This function calls:
  2434 ;;		_vfpfcnvrt
  2435 ;; This function is called by:
  2436 ;;		_sprintf
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text9
  2441  00557A                     __ptext9:
  2442                           	callstack 0
  2443  00557A                     _vfprintf:
  2444                           	callstack 22
  2445  00557A                     
  2446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2447  00557A  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  2448  00557E  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2449  005582                     
  2450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2451  005582  0E00               	movlw	0
  2452  005584  0100               	movlb	0	; () banked
  2453  005586  6FEB               	movwf	(_nout+1)& (0+255),b
  2454  005588  0E00               	movlw	0
  2455  00558A  6FEA               	movwf	_nout& (0+255),b
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2458  00558C  EFDB  F02A         	goto	l5394
  2459  005590                     l5392:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2463  005590  C052  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  2464  005594  C053  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2465  005598  0E58               	movlw	low vfprintf@cfmt
  2466  00559A  6E4A               	movwf	vfpfcnvrt@fmt^0,c
  2467  00559C  0E00               	movlw	high vfprintf@cfmt
  2468  00559E  6E4B               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2469  0055A0  C056  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  2470  0055A4  C057  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2471  0055A8  EC8B  F011         	call	_vfpfcnvrt	;wreg free
  2472  0055AC  5048               	movf	?_vfpfcnvrt^0,w,c
  2473  0055AE  0100               	movlb	0	; () banked
  2474  0055B0  27EA               	addwf	_nout& (0+255),f,b
  2475  0055B2  5049               	movf	(?_vfpfcnvrt+1)^0,w,c
  2476  0055B4  23EB               	addwfc	(_nout+1)& (0+255),f,b
  2477  0055B6                     l5394:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2481  0055B6  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  2482  0055BA  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2483  0055BE                     	if	0	;tblptru may be non-zero
  2484  0055BE                     	endif
  2485  0055BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2486  0055BE  0E00               	movlw	low (__mediumconst shr (0+16))
  2487  0055C0  6EF8               	movwf	tblptru,c
  2488  0055C2                     	endif
  2489  0055C2  0008               	tblrd		*
  2490  0055C4  50F5               	movf	tablat,w,c
  2491  0055C6  0900               	iorlw	0
  2492  0055C8  A4D8               	btfss	status,2,c
  2493  0055CA  EFE9  F02A         	goto	u6451
  2494  0055CE  EFEB  F02A         	goto	u6450
  2495  0055D2                     u6451:
  2496  0055D2  EFC8  F02A         	goto	l5392
  2497  0055D6                     u6450:
  2498  0055D6                     
  2499                           ; BSR set to: 0
  2500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2501  0055D6  C0EA  F052         	movff	_nout,?_vfprintf
  2502  0055DA  C0EB  F053         	movff	_nout+1,?_vfprintf+1
  2503  0055DE                     
  2504                           ; BSR set to: 0
  2505  0055DE  0012               	return		;funcret
  2506  0055E0                     __end_of_vfprintf:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function _vfpfcnvrt *****************
  2510 ;; Defined at:
  2511 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  2514 ;;		 -> sprintf@f(6), 
  2515 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
  2516 ;;		 -> vfprintf@cfmt(2), 
  2517 ;;  ap              2   75[COMRAM] PTR PTR void 
  2518 ;;		 -> sprintf@ap(2), 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  ll              8   56[BANK0 ] long long 
  2521 ;;  llu             8    0        unsigned long long 
  2522 ;;  f               4   68[BANK0 ] unsigned long long 
  2523 ;;  ct              3   72[BANK0 ] unsigned char [3]
  2524 ;;  vp              3    0        PTR void 
  2525 ;;  cp              3    0        PTR unsigned char 
  2526 ;;  i               2    0        int 
  2527 ;;  done            2    0        int 
  2528 ;;  c               1   75[BANK0 ] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  2   71[COMRAM] int 
  2531 ;; Registers used:
  2532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2538 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2541 ;;      Totals:        10      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2542 ;;Total ram usage:       30 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; Hardware stack levels required when called: 5
  2545 ;; This function calls:
  2546 ;;		_atoi
  2547 ;;		_dtoa
  2548 ;;		_efgtoa
  2549 ;;		_fputc
  2550 ;;		_isdigit
  2551 ;;		_isupper
  2552 ;;		_strncmp
  2553 ;;		_tolower
  2554 ;; This function is called by:
  2555 ;;		_vfprintf
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text10
  2560  002316                     __ptext10:
  2561                           	callstack 0
  2562  002316                     _vfpfcnvrt:
  2563                           	callstack 22
  2564  002316                     
  2565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2566  002316  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2567  00231A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2568  00231E  CFDE FFF6          	movff	postinc2,tblptrl
  2569  002322  CFDD FFF7          	movff	postdec2,tblptrh
  2570  002326                     	if	0	;tblptru may be non-zero
  2571  002326                     	endif
  2572  002326                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2573  002326  0E00               	movlw	low (__mediumconst shr (0+16))
  2574  002328  6EF8               	movwf	tblptru,c
  2575  00232A                     	endif
  2576  00232A  0008               	tblrd		*
  2577  00232C  50F5               	movf	tablat,w,c
  2578  00232E  0A25               	xorlw	37
  2579  002330  A4D8               	btfss	status,2,c
  2580  002332  EF9D  F011         	goto	u6131
  2581  002336  EF9F  F011         	goto	u6130
  2582  00233A                     u6131:
  2583  00233A  EF22  F014         	goto	l5310
  2584  00233E                     u6130:
  2585  00233E                     
  2586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2587  00233E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2588  002342  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2589  002346  2ADE               	incf	postinc2,f,c
  2590  002348  0E00               	movlw	0
  2591  00234A  22DD               	addwfc	postdec2,f,c
  2592  00234C                     
  2593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2594  00234C  0E00               	movlw	0
  2595  00234E  0100               	movlb	0	; () banked
  2596  002350  6FED               	movwf	(_width+1)& (0+255),b
  2597  002352  0E00               	movlw	0
  2598  002354  6FEC               	movwf	_width& (0+255),b
  2599  002356  C0EC  F0F0         	movff	_width,_flags
  2600  00235A  C0ED  F0F1         	movff	_width+1,_flags+1
  2601  00235E                     
  2602                           ; BSR set to: 0
  2603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2604  00235E  69EE               	setf	_prec& (0+255),b
  2605  002360  69EF               	setf	(_prec+1)& (0+255),b
  2606  002362                     
  2607                           ; BSR set to: 0
  2608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2609  002362  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2610  002366  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2611  00236A  CFDE FFF6          	movff	postinc2,tblptrl
  2612  00236E  CFDD FFF7          	movff	postdec2,tblptrh
  2613  002372                     	if	0	;tblptru may be non-zero
  2614  002372                     	endif
  2615  002372                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2616  002372  0E00               	movlw	low (__mediumconst shr (0+16))
  2617  002374  6EF8               	movwf	tblptru,c
  2618  002376                     	endif
  2619  002376  0008               	tblrd		*
  2620  002378  50F5               	movf	tablat,w,c
  2621  00237A  0A2E               	xorlw	46
  2622  00237C  A4D8               	btfss	status,2,c
  2623  00237E  EFC3  F011         	goto	u6141
  2624  002382  EFC5  F011         	goto	u6140
  2625  002386                     u6141:
  2626  002386  EF47  F012         	goto	l5246
  2627  00238A                     u6140:
  2628  00238A                     
  2629                           ; BSR set to: 0
  2630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2631  00238A  0E00               	movlw	0
  2632  00238C  6FEF               	movwf	(_prec+1)& (0+255),b
  2633  00238E  0E00               	movlw	0
  2634  002390  6FEE               	movwf	_prec& (0+255),b
  2635  002392                     
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2638  002392  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2639  002396  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2640  00239A  2ADE               	incf	postinc2,f,c
  2641  00239C  0E00               	movlw	0
  2642  00239E  22DD               	addwfc	postdec2,f,c
  2643  0023A0                     
  2644                           ; BSR set to: 0
  2645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2646  0023A0  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2647  0023A4  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2648  0023A8  CFDE FFF6          	movff	postinc2,tblptrl
  2649  0023AC  CFDD FFF7          	movff	postdec2,tblptrh
  2650  0023B0                     	if	0	;tblptru may be non-zero
  2651  0023B0                     	endif
  2652  0023B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2653  0023B0  0E00               	movlw	low (__mediumconst shr (0+16))
  2654  0023B2  6EF8               	movwf	tblptru,c
  2655  0023B4                     	endif
  2656  0023B4  0008               	tblrd		*
  2657  0023B6  50F5               	movf	tablat,w,c
  2658  0023B8  0A2A               	xorlw	42
  2659  0023BA  A4D8               	btfss	status,2,c
  2660  0023BC  EFE2  F011         	goto	u6151
  2661  0023C0  EFE4  F011         	goto	u6150
  2662  0023C4                     u6151:
  2663  0023C4  EF01  F012         	goto	l5236
  2664  0023C8                     u6150:
  2665  0023C8                     
  2666                           ; BSR set to: 0
  2667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2668  0023C8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2669  0023CC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2670  0023D0  2ADE               	incf	postinc2,f,c
  2671  0023D2  0E00               	movlw	0
  2672  0023D4  22DD               	addwfc	postdec2,f,c
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2675  0023D6  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2676  0023DA  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2677  0023DE  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  2678  0023E2  0E02               	movlw	2
  2679  0023E4  26DE               	addwf	postinc2,f,c
  2680  0023E6  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  2681  0023EA  0E00               	movlw	0
  2682  0023EC  22DD               	addwfc	postdec2,f,c
  2683  0023EE  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2684  0023F2  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2685  0023F6  CFDE F0EE          	movff	postinc2,_prec
  2686  0023FA  CFDD F0EF          	movff	postdec2,_prec+1
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2689  0023FE  EF47  F012         	goto	l5246
  2690  002402                     l5236:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2694  002402  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2695  002406  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2696  00240A  CFDE F008          	movff	postinc2,atoi@s
  2697  00240E  CFDD F009          	movff	postdec2,atoi@s+1
  2698  002412  ECE2  F020         	call	_atoi	;wreg free
  2699  002416  C008  F0EE         	movff	?_atoi,_prec
  2700  00241A  C009  F0EF         	movff	?_atoi+1,_prec+1
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2703  00241E  EF18  F012         	goto	l5240
  2704  002422                     l5238:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2708  002422  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2709  002426  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2710  00242A  2ADE               	incf	postinc2,f,c
  2711  00242C  0E00               	movlw	0
  2712  00242E  22DD               	addwfc	postdec2,f,c
  2713  002430                     l5240:
  2714  002430  0ED0               	movlw	208
  2715  002432  6E4E               	movwf	??_vfpfcnvrt^0,c
  2716  002434  0EFF               	movlw	255
  2717  002436  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  2718  002438  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2719  00243C  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2720  002440  CFDE FFF6          	movff	postinc2,tblptrl
  2721  002444  CFDD FFF7          	movff	postdec2,tblptrh
  2722  002448                     	if	0	;tblptru may be non-zero
  2723  002448                     	endif
  2724  002448                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2725  002448  0E00               	movlw	low (__mediumconst shr (0+16))
  2726  00244A  6EF8               	movwf	tblptru,c
  2727  00244C                     	endif
  2728  00244C  0008               	tblrd		*
  2729  00244E  50F5               	movf	tablat,w,c
  2730  002450  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  2731  002452  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  2732  002454  504E               	movf	??_vfpfcnvrt^0,w,c
  2733  002456  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2734  002458  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2735  00245A  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2736  00245C  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  2737  00245E  E10A               	bnz	u6160
  2738  002460  0E0A               	movlw	10
  2739  002462  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2740  002464  A0D8               	btfss	status,0,c
  2741  002466  EF37  F012         	goto	u6161
  2742  00246A  EF3A  F012         	goto	u6160
  2743  00246E                     u6161:
  2744  00246E  0E01               	movlw	1
  2745  002470  EF3B  F012         	goto	u6170
  2746  002474                     u6160:
  2747  002474  0E00               	movlw	0
  2748  002476                     u6170:
  2749  002476  0100               	movlb	0	; () banked
  2750  002478  6FA0               	movwf	_vfpfcnvrt$2973& (0+255),b
  2751  00247A  6BA1               	clrf	(_vfpfcnvrt$2973+1)& (0+255),b
  2752  00247C                     
  2753                           ; BSR set to: 0
  2754  00247C  51A0               	movf	_vfpfcnvrt$2973& (0+255),w,b
  2755  00247E  11A1               	iorwf	(_vfpfcnvrt$2973+1)& (0+255),w,b
  2756  002480  A4D8               	btfss	status,2,c
  2757  002482  EF45  F012         	goto	u6181
  2758  002486  EF47  F012         	goto	u6180
  2759  00248A                     u6181:
  2760  00248A  EF11  F012         	goto	l5238
  2761  00248E                     u6180:
  2762  00248E                     l5246:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2766  00248E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2767  002492  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2768  002496  CFDE FFF6          	movff	postinc2,tblptrl
  2769  00249A  CFDD FFF7          	movff	postdec2,tblptrh
  2770  00249E                     	if	0	;tblptru may be non-zero
  2771  00249E                     	endif
  2772  00249E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2773  00249E  0E00               	movlw	low (__mediumconst shr (0+16))
  2774  0024A0  6EF8               	movwf	tblptru,c
  2775  0024A2                     	endif
  2776  0024A2  0008               	tblrd		*
  2777  0024A4  50F5               	movf	tablat,w,c
  2778  0024A6  6E07               	movwf	tolower@c^0,c
  2779  0024A8  6A08               	clrf	(tolower@c+1)^0,c
  2780  0024AA  ECF0  F02A         	call	_tolower	;wreg free
  2781  0024AE  5007               	movf	?_tolower^0,w,c
  2782  0024B0  0100               	movlb	0	; () banked
  2783  0024B2  6FA8               	movwf	vfpfcnvrt@ct& (0+255),b
  2784  0024B4                     
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2787  0024B4  51A8               	movf	vfpfcnvrt@ct& (0+255),w,b
  2788  0024B6  B4D8               	btfsc	status,2,c
  2789  0024B8  EF60  F012         	goto	u6191
  2790  0024BC  EF62  F012         	goto	u6190
  2791  0024C0                     u6191:
  2792  0024C0  EFA0  F012         	goto	l5256
  2793  0024C4                     u6190:
  2794  0024C4                     
  2795                           ; BSR set to: 0
  2796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2797  0024C4  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2798  0024C8  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2799  0024CC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  2800  0024D0  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  2801  0024D4  0E01               	movlw	1
  2802  0024D6  264E               	addwf	??_vfpfcnvrt^0,f,c
  2803  0024D8  0E00               	movlw	0
  2804  0024DA  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2805  0024DC  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2806  0024E0  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2807  0024E4                     	if	0	;tblptru may be non-zero
  2808  0024E4                     	endif
  2809  0024E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2810  0024E4  0E00               	movlw	low (__mediumconst shr (0+16))
  2811  0024E6  6EF8               	movwf	tblptru,c
  2812  0024E8                     	endif
  2813  0024E8  0008               	tblrd		*
  2814  0024EA  50F5               	movf	tablat,w,c
  2815  0024EC  6E07               	movwf	tolower@c^0,c
  2816  0024EE  6A08               	clrf	(tolower@c+1)^0,c
  2817  0024F0  ECF0  F02A         	call	_tolower	;wreg free
  2818  0024F4  5007               	movf	?_tolower^0,w,c
  2819  0024F6  0100               	movlb	0	; () banked
  2820  0024F8  6FA9               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2821  0024FA                     
  2822                           ; BSR set to: 0
  2823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2824  0024FA  51A9               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2825  0024FC  B4D8               	btfsc	status,2,c
  2826  0024FE  EF83  F012         	goto	u6201
  2827  002502  EF85  F012         	goto	u6200
  2828  002506                     u6201:
  2829  002506  EFA0  F012         	goto	l5256
  2830  00250A                     u6200:
  2831  00250A                     
  2832                           ; BSR set to: 0
  2833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2834  00250A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2835  00250E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2836  002512  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  2837  002516  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  2838  00251A  0E02               	movlw	2
  2839  00251C  264E               	addwf	??_vfpfcnvrt^0,f,c
  2840  00251E  0E00               	movlw	0
  2841  002520  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2842  002522  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2843  002526  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2844  00252A                     	if	0	;tblptru may be non-zero
  2845  00252A                     	endif
  2846  00252A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2847  00252A  0E00               	movlw	low (__mediumconst shr (0+16))
  2848  00252C  6EF8               	movwf	tblptru,c
  2849  00252E                     	endif
  2850  00252E  0008               	tblrd		*
  2851  002530  50F5               	movf	tablat,w,c
  2852  002532  6E07               	movwf	tolower@c^0,c
  2853  002534  6A08               	clrf	(tolower@c+1)^0,c
  2854  002536  ECF0  F02A         	call	_tolower	;wreg free
  2855  00253A  5007               	movf	?_tolower^0,w,c
  2856  00253C  0100               	movlb	0	; () banked
  2857  00253E  6FAA               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2858  002540                     l5256:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2862  002540  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2863  002544  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2864  002548  CFDE FFF6          	movff	postinc2,tblptrl
  2865  00254C  CFDD FFF7          	movff	postdec2,tblptrh
  2866  002550                     	if	0	;tblptru may be non-zero
  2867  002550                     	endif
  2868  002550                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2869  002550  0E00               	movlw	low (__mediumconst shr (0+16))
  2870  002552  6EF8               	movwf	tblptru,c
  2871  002554                     	endif
  2872  002554  0008               	tblrd		*
  2873  002556  50F5               	movf	tablat,w,c
  2874  002558  0A64               	xorlw	100
  2875  00255A  B4D8               	btfsc	status,2,c
  2876  00255C  EFB2  F012         	goto	u6211
  2877  002560  EFB4  F012         	goto	u6210
  2878  002564                     u6211:
  2879  002564  EFC8  F012         	goto	l5260
  2880  002568                     u6210:
  2881  002568                     
  2882                           ; BSR set to: 0
  2883  002568  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2884  00256C  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2885  002570  CFDE FFF6          	movff	postinc2,tblptrl
  2886  002574  CFDD FFF7          	movff	postdec2,tblptrh
  2887  002578                     	if	0	;tblptru may be non-zero
  2888  002578                     	endif
  2889  002578                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2890  002578  0E00               	movlw	low (__mediumconst shr (0+16))
  2891  00257A  6EF8               	movwf	tblptru,c
  2892  00257C                     	endif
  2893  00257C  0008               	tblrd		*
  2894  00257E  50F5               	movf	tablat,w,c
  2895  002580  0A69               	xorlw	105
  2896  002582  A4D8               	btfss	status,2,c
  2897  002584  EFC6  F012         	goto	u6221
  2898  002588  EFC8  F012         	goto	u6220
  2899  00258C                     u6221:
  2900  00258C  EF08  F013         	goto	l5266
  2901  002590                     u6220:
  2902  002590                     l5260:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2906  002590  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2907  002594  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2908  002598  2ADE               	incf	postinc2,f,c
  2909  00259A  0E00               	movlw	0
  2910  00259C  22DD               	addwfc	postdec2,f,c
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2913  00259E  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2914  0025A2  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2915  0025A6  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  2916  0025AA  0E02               	movlw	2
  2917  0025AC  26DE               	addwf	postinc2,f,c
  2918  0025AE  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  2919  0025B2  0E00               	movlw	0
  2920  0025B4  22DD               	addwfc	postdec2,f,c
  2921  0025B6  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2922  0025BA  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2923  0025BE  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  2924  0025C2  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  2925  0025C6  0E00               	movlw	0
  2926  0025C8  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2927  0025CA  0EFF               	movlw	-1
  2928  0025CC  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2929  0025CE  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2930  0025D0  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2931  0025D2  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2932  0025D4  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2933  0025D6  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2934  0025D8                     
  2935                           ; BSR set to: 0
  2936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2937  0025D8  C048  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2938  0025DC  C049  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2939  0025E0  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2940  0025E4  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2941  0025E8  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2942  0025EC  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2943  0025F0  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2944  0025F4  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2945  0025F8  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2946  0025FC  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2947  002600  EC82  F01A         	call	_dtoa	;wreg free
  2948  002604  C01C  F048         	movff	?_dtoa,?_vfpfcnvrt
  2949  002608  C01D  F049         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2950  00260C  EF3F  F014         	goto	l1490
  2951  002610                     l5266:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2955  002610  0E66               	movlw	102
  2956  002612  19A8               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2957  002614  A4D8               	btfss	status,2,c
  2958  002616  EF0F  F013         	goto	u6231
  2959  00261A  EF11  F013         	goto	u6230
  2960  00261E                     u6231:
  2961  00261E  EF53  F013         	goto	l5278
  2962  002622                     u6230:
  2963  002622                     
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2966  002622  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2967  002626  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2968  00262A  CFDE FFF6          	movff	postinc2,tblptrl
  2969  00262E  CFDD FFF7          	movff	postdec2,tblptrh
  2970  002632                     	if	0	;tblptru may be non-zero
  2971  002632                     	endif
  2972  002632                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2973  002632  0E00               	movlw	low (__mediumconst shr (0+16))
  2974  002634  6EF8               	movwf	tblptru,c
  2975  002636                     	endif
  2976  002636  0008               	tblrd		*
  2977  002638  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  2978  00263C                     
  2979                           ; BSR set to: 0
  2980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2981  00263C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2982  002640  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2983  002644  2ADE               	incf	postinc2,f,c
  2984  002646  0E00               	movlw	0
  2985  002648  22DD               	addwfc	postdec2,f,c
  2986  00264A                     
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2989  00264A  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2990  00264E  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2991  002652  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  2992  002656  0E04               	movlw	4
  2993  002658  26DE               	addwf	postinc2,f,c
  2994  00265A  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  2995  00265E  0E00               	movlw	0
  2996  002660  22DD               	addwfc	postdec2,f,c
  2997  002662  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2998  002666  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2999  00266A  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  3000  00266E  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  3001  002672  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  3002  002676  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  3003  00267A                     l5274:
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3007  00267A  C048  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  3008  00267E  C049  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3009  002682  C0A4  F03E         	movff	vfpfcnvrt@f,efgtoa@f
  3010  002686  C0A5  F03F         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3011  00268A  C0A6  F040         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3012  00268E  C0A7  F041         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3013  002692  C0AB  F042         	movff	vfpfcnvrt@c,efgtoa@c
  3014  002696  EC26  F007         	call	_efgtoa	;wreg free
  3015  00269A  C03C  F048         	movff	?_efgtoa,?_vfpfcnvrt
  3016  00269E  C03D  F049         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3017  0026A2  EF3F  F014         	goto	l1490
  3018  0026A6                     l5278:
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3022  0026A6  0EA8               	movlw	low vfpfcnvrt@ct
  3023  0026A8  6E01               	movwf	strncmp@_l^0,c
  3024  0026AA  0E00               	movlw	high vfpfcnvrt@ct
  3025  0026AC  6E02               	movwf	(strncmp@_l+1)^0,c
  3026  0026AE  0E47               	movlw	low STR_10
  3027  0026B0  6E03               	movwf	strncmp@_r^0,c
  3028  0026B2  0E0E               	movlw	high STR_10
  3029  0026B4  6E04               	movwf	(strncmp@_r+1)^0,c
  3030  0026B6  0E00               	movlw	0
  3031  0026B8  6E06               	movwf	(strncmp@n+1)^0,c
  3032  0026BA  0E02               	movlw	2
  3033  0026BC  6E05               	movwf	strncmp@n^0,c
  3034  0026BE  EC4C  F027         	call	_strncmp	;wreg free
  3035  0026C2  5001               	movf	?_strncmp^0,w,c
  3036  0026C4  1002               	iorwf	(?_strncmp+1)^0,w,c
  3037  0026C6  A4D8               	btfss	status,2,c
  3038  0026C8  EF68  F013         	goto	u6241
  3039  0026CC  EF6A  F013         	goto	u6240
  3040  0026D0                     u6241:
  3041  0026D0  EFEA  F013         	goto	l5294
  3042  0026D4                     u6240:
  3043  0026D4                     
  3044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3045  0026D4  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3046  0026D8  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3047  0026DC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  3048  0026E0  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  3049  0026E4  0E01               	movlw	1
  3050  0026E6  264E               	addwf	??_vfpfcnvrt^0,f,c
  3051  0026E8  0E00               	movlw	0
  3052  0026EA  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3053  0026EC  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3054  0026F0  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3055  0026F4                     	if	0	;tblptru may be non-zero
  3056  0026F4                     	endif
  3057  0026F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3058  0026F4  0E00               	movlw	low (__mediumconst shr (0+16))
  3059  0026F6  6EF8               	movwf	tblptru,c
  3060  0026F8                     	endif
  3061  0026F8  0008               	tblrd		*
  3062  0026FA  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  3063  0026FE  0EBF               	movlw	191
  3064  002700  6E4E               	movwf	??_vfpfcnvrt^0,c
  3065  002702  0EFF               	movlw	255
  3066  002704  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  3067  002706  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3068  00270A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3069  00270E  CFDE FFF6          	movff	postinc2,tblptrl
  3070  002712  CFDD FFF7          	movff	postdec2,tblptrh
  3071  002716                     	if	0	;tblptru may be non-zero
  3072  002716                     	endif
  3073  002716                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3074  002716  0E00               	movlw	low (__mediumconst shr (0+16))
  3075  002718  6EF8               	movwf	tblptru,c
  3076  00271A                     	endif
  3077  00271A  0008               	tblrd		*
  3078  00271C  50F5               	movf	tablat,w,c
  3079  00271E  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  3080  002720  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  3081  002722  504E               	movf	??_vfpfcnvrt^0,w,c
  3082  002724  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3083  002726  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  3084  002728  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3085  00272A  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  3086  00272C  E10A               	bnz	u6250
  3087  00272E  0E1A               	movlw	26
  3088  002730  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3089  002732  A0D8               	btfss	status,0,c
  3090  002734  EF9E  F013         	goto	u6251
  3091  002738  EFA1  F013         	goto	u6250
  3092  00273C                     u6251:
  3093  00273C  0E01               	movlw	1
  3094  00273E  EFA2  F013         	goto	u6260
  3095  002742                     u6250:
  3096  002742  0E00               	movlw	0
  3097  002744                     u6260:
  3098  002744  0100               	movlb	0	; () banked
  3099  002746  6FA2               	movwf	_vfpfcnvrt$2978& (0+255),b
  3100  002748  6BA3               	clrf	(_vfpfcnvrt$2978+1)& (0+255),b
  3101  00274A                     
  3102                           ; BSR set to: 0
  3103  00274A  51A2               	movf	_vfpfcnvrt$2978& (0+255),w,b
  3104  00274C  11A3               	iorwf	(_vfpfcnvrt$2978+1)& (0+255),w,b
  3105  00274E  B4D8               	btfsc	status,2,c
  3106  002750  EFAC  F013         	goto	u6271
  3107  002754  EFAE  F013         	goto	u6270
  3108  002758                     u6271:
  3109  002758  EFC8  F013         	goto	l5288
  3110  00275C                     u6270:
  3111  00275C                     
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3114  00275C  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3115  002760  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3116  002764  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  3117  002768  0E04               	movlw	4
  3118  00276A  26DE               	addwf	postinc2,f,c
  3119  00276C  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  3120  002770  0E00               	movlw	0
  3121  002772  22DD               	addwfc	postdec2,f,c
  3122  002774  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3123  002778  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3124  00277C  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  3125  002780  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  3126  002784  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  3127  002788  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  3128                           
  3129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3130  00278C  EFE0  F013         	goto	l1498
  3131  002790                     l5288:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3135  002790  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3136  002794  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3137  002798  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  3138  00279C  0E04               	movlw	4
  3139  00279E  26DE               	addwf	postinc2,f,c
  3140  0027A0  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  3141  0027A4  0E00               	movlw	0
  3142  0027A6  22DD               	addwfc	postdec2,f,c
  3143  0027A8  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3144  0027AC  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3145  0027B0  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  3146  0027B4  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  3147  0027B8  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  3148  0027BC  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  3149  0027C0                     l1498:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3153  0027C0  0E02               	movlw	2
  3154  0027C2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3155  0027C6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3156  0027CA  26DE               	addwf	postinc2,f,c
  3157  0027CC  0E00               	movlw	0
  3158  0027CE  22DD               	addwfc	postdec2,f,c
  3159  0027D0  EF3D  F013         	goto	l5274
  3160  0027D4                     l5294:
  3161                           
  3162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3163  0027D4  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3164  0027D8  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3165  0027DC  CFDE FFF6          	movff	postinc2,tblptrl
  3166  0027E0  CFDD FFF7          	movff	postdec2,tblptrh
  3167  0027E4                     	if	0	;tblptru may be non-zero
  3168  0027E4                     	endif
  3169  0027E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3170  0027E4  0E00               	movlw	low (__mediumconst shr (0+16))
  3171  0027E6  6EF8               	movwf	tblptru,c
  3172  0027E8                     	endif
  3173  0027E8  0008               	tblrd		*
  3174  0027EA  50F5               	movf	tablat,w,c
  3175  0027EC  0A25               	xorlw	37
  3176  0027EE  A4D8               	btfss	status,2,c
  3177  0027F0  EFFC  F013         	goto	u6281
  3178  0027F4  EFFE  F013         	goto	u6280
  3179  0027F8                     u6281:
  3180  0027F8  EF15  F014         	goto	l5304
  3181  0027FC                     u6280:
  3182  0027FC                     
  3183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3184  0027FC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3185  002800  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3186  002804  2ADE               	incf	postinc2,f,c
  3187  002806  0E00               	movlw	0
  3188  002808  22DD               	addwfc	postdec2,f,c
  3189  00280A                     
  3190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3191  00280A  0E00               	movlw	0
  3192  00280C  6E02               	movwf	(fputc@c+1)^0,c
  3193  00280E  0E25               	movlw	37
  3194  002810  6E01               	movwf	fputc@c^0,c
  3195  002812  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3196  002816  C049  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3197  00281A  ECBD  F027         	call	_fputc	;wreg free
  3198  00281E                     l5300:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3201  00281E  0E00               	movlw	0
  3202  002820  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  3203  002822  0E01               	movlw	1
  3204  002824  6E48               	movwf	?_vfpfcnvrt^0,c
  3205  002826  EF3F  F014         	goto	l1490
  3206  00282A                     l5304:
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3209  00282A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3210  00282E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3211  002832  2ADE               	incf	postinc2,f,c
  3212  002834  0E00               	movlw	0
  3213  002836  22DD               	addwfc	postdec2,f,c
  3214  002838                     
  3215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3216  002838  0E00               	movlw	0
  3217  00283A  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  3218  00283C  0E00               	movlw	0
  3219  00283E  6E48               	movwf	?_vfpfcnvrt^0,c
  3220  002840  EF3F  F014         	goto	l1490
  3221  002844                     l5310:
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3224  002844  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3225  002848  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3226  00284C  CFDE FFF6          	movff	postinc2,tblptrl
  3227  002850  CFDD FFF7          	movff	postdec2,tblptrh
  3228  002854                     	if	0	;tblptru may be non-zero
  3229  002854                     	endif
  3230  002854                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3231  002854  0E00               	movlw	low (__mediumconst shr (0+16))
  3232  002856  6EF8               	movwf	tblptru,c
  3233  002858                     	endif
  3234  002858  0008               	tblrd		*
  3235  00285A  50F5               	movf	tablat,w,c
  3236  00285C  6E01               	movwf	fputc@c^0,c
  3237  00285E  6A02               	clrf	(fputc@c+1)^0,c
  3238  002860  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3239  002864  C049  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3240  002868  ECBD  F027         	call	_fputc	;wreg free
  3241  00286C                     
  3242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3243  00286C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3244  002870  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3245  002874  2ADE               	incf	postinc2,f,c
  3246  002876  0E00               	movlw	0
  3247  002878  22DD               	addwfc	postdec2,f,c
  3248  00287A  EF0F  F014         	goto	l5300
  3249  00287E                     l1490:
  3250  00287E  0012               	return		;funcret
  3251  002880                     __end_of_vfpfcnvrt:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _strncmp *****************
  3255 ;; Defined at:
  3256 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3259 ;;		 -> vfpfcnvrt@ct(3), 
  3260 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3261 ;;		 -> STR_12(3), 
  3262 ;;  n               2    4[COMRAM] unsigned int 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3265 ;;		 -> STR_12(3), 
  3266 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3267 ;;		 -> vfpfcnvrt@ct(3), 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  2    0[COMRAM] int 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3277 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3280 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3281 ;;Total ram usage:       11 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_vfpfcnvrt
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text11
  3291  004E98                     __ptext11:
  3292                           	callstack 0
  3293  004E98                     _strncmp:
  3294                           	callstack 26
  3295  004E98  C001  F008         	movff	strncmp@_l,strncmp@l
  3296  004E9C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3297  004EA0  C003  F00A         	movff	strncmp@_r,strncmp@r
  3298  004EA4  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3299  004EA8  0605               	decf	strncmp@n^0,f,c
  3300  004EAA  A0D8               	btfss	status,0,c
  3301  004EAC  0606               	decf	(strncmp@n+1)^0,f,c
  3302  004EAE  2805               	incf	strncmp@n^0,w,c
  3303  004EB0  E106               	bnz	u6021
  3304  004EB2  2806               	incf	(strncmp@n+1)^0,w,c
  3305  004EB4  A4D8               	btfss	status,2,c
  3306  004EB6  EF5F  F027         	goto	u6021
  3307  004EBA  EF61  F027         	goto	u6020
  3308  004EBE                     u6021:
  3309  004EBE  EF6E  F027         	goto	l5162
  3310  004EC2                     u6020:
  3311  004EC2  0E00               	movlw	0
  3312  004EC4  6E02               	movwf	(?_strncmp+1)^0,c
  3313  004EC6  0E00               	movlw	0
  3314  004EC8  6E01               	movwf	?_strncmp^0,c
  3315  004ECA  EFBC  F027         	goto	l1626
  3316  004ECE                     l5160:
  3317  004ECE  4A08               	infsnz	strncmp@l^0,f,c
  3318  004ED0  2A09               	incf	(strncmp@l+1)^0,f,c
  3319  004ED2  4A0A               	infsnz	strncmp@r^0,f,c
  3320  004ED4  2A0B               	incf	(strncmp@r+1)^0,f,c
  3321  004ED6  0605               	decf	strncmp@n^0,f,c
  3322  004ED8  A0D8               	btfss	status,0,c
  3323  004EDA  0606               	decf	(strncmp@n+1)^0,f,c
  3324  004EDC                     l5162:
  3325  004EDC  C008  FFD9         	movff	strncmp@l,fsr2l
  3326  004EE0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3327  004EE4  50DF               	movf	indf2,w,c
  3328  004EE6  B4D8               	btfsc	status,2,c
  3329  004EE8  EF78  F027         	goto	u6031
  3330  004EEC  EF7A  F027         	goto	u6030
  3331  004EF0                     u6031:
  3332  004EF0  EFA9  F027         	goto	l5170
  3333  004EF4                     u6030:
  3334  004EF4  C00A  FFF6         	movff	strncmp@r,tblptrl
  3335  004EF8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3336  004EFC                     	if	0	;tblptru may be non-zero
  3337  004EFC                     	endif
  3338  004EFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3339  004EFC  0E00               	movlw	low (__mediumconst shr (0+16))
  3340  004EFE  6EF8               	movwf	tblptru,c
  3341  004F00                     	endif
  3342  004F00  0008               	tblrd		*
  3343  004F02  50F5               	movf	tablat,w,c
  3344  004F04  0900               	iorlw	0
  3345  004F06  B4D8               	btfsc	status,2,c
  3346  004F08  EF88  F027         	goto	u6041
  3347  004F0C  EF8A  F027         	goto	u6040
  3348  004F10                     u6041:
  3349  004F10  EFA9  F027         	goto	l5170
  3350  004F14                     u6040:
  3351  004F14  5005               	movf	strncmp@n^0,w,c
  3352  004F16  1006               	iorwf	(strncmp@n+1)^0,w,c
  3353  004F18  B4D8               	btfsc	status,2,c
  3354  004F1A  EF91  F027         	goto	u6051
  3355  004F1E  EF93  F027         	goto	u6050
  3356  004F22                     u6051:
  3357  004F22  EFA9  F027         	goto	l5170
  3358  004F26                     u6050:
  3359  004F26  C008  FFD9         	movff	strncmp@l,fsr2l
  3360  004F2A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3361  004F2E  50DF               	movf	indf2,w,c
  3362  004F30  6E07               	movwf	??_strncmp^0,c
  3363  004F32  C00A  FFF6         	movff	strncmp@r,tblptrl
  3364  004F36  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3365  004F3A                     	if	0	;tblptru may be non-zero
  3366  004F3A                     	endif
  3367  004F3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3368  004F3A  0E00               	movlw	low (__mediumconst shr (0+16))
  3369  004F3C  6EF8               	movwf	tblptru,c
  3370  004F3E                     	endif
  3371  004F3E  0008               	tblrd		*
  3372  004F40  50F5               	movf	tablat,w,c
  3373  004F42  1807               	xorwf	??_strncmp^0,w,c
  3374  004F44  B4D8               	btfsc	status,2,c
  3375  004F46  EFA7  F027         	goto	u6061
  3376  004F4A  EFA9  F027         	goto	u6060
  3377  004F4E                     u6061:
  3378  004F4E  EF67  F027         	goto	l5160
  3379  004F52                     u6060:
  3380  004F52                     l5170:
  3381  004F52  C008  FFD9         	movff	strncmp@l,fsr2l
  3382  004F56  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3383  004F5A  50DF               	movf	indf2,w,c
  3384  004F5C  6E07               	movwf	??_strncmp^0,c
  3385  004F5E  C00A  FFF6         	movff	strncmp@r,tblptrl
  3386  004F62  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3387  004F66                     	if	0	;tblptru may be non-zero
  3388  004F66                     	endif
  3389  004F66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3390  004F66  0E00               	movlw	low (__mediumconst shr (0+16))
  3391  004F68  6EF8               	movwf	tblptru,c
  3392  004F6A                     	endif
  3393  004F6A  0008               	tblrd		*
  3394  004F6C  50F5               	movf	tablat,w,c
  3395  004F6E  5C07               	subwf	??_strncmp^0,w,c
  3396  004F70  6E01               	movwf	?_strncmp^0,c
  3397  004F72  6A02               	clrf	(?_strncmp+1)^0,c
  3398  004F74  A0D8               	btfss	status,0,c
  3399  004F76  0602               	decf	(?_strncmp+1)^0,f,c
  3400  004F78                     l1626:
  3401  004F78  0012               	return		;funcret
  3402  004F7A                     __end_of_strncmp:
  3403                           	callstack 0
  3404                           
  3405 ;; *************** function _efgtoa *****************
  3406 ;; Defined at:
  3407 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  3410 ;;		 -> sprintf@f(6), 
  3411 ;;  f               4   61[COMRAM] PTR struct _IO_FILE
  3412 ;;  c               1   65[COMRAM] unsigned char 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  u               4   52[BANK0 ] unsigned char 
  3415 ;;  g               4   44[BANK0 ] unsigned char 
  3416 ;;  l               4   38[BANK0 ] unsigned char 
  3417 ;;  h               4   34[BANK0 ] unsigned char 
  3418 ;;  ou              4   20[BANK0 ] unsigned char 
  3419 ;;  n               2   50[BANK0 ] int 
  3420 ;;  e               2   48[BANK0 ] int 
  3421 ;;  i               2   42[BANK0 ] int 
  3422 ;;  w               2   30[BANK0 ] int 
  3423 ;;  p               2   28[BANK0 ] int 
  3424 ;;  sign            2   26[BANK0 ] int 
  3425 ;;  d               2   24[BANK0 ] int 
  3426 ;;  m               2   18[BANK0 ] int 
  3427 ;;  ne              2   16[BANK0 ] int 
  3428 ;;  pp              2   14[BANK0 ] int 
  3429 ;;  t               2   12[BANK0 ] int 
  3430 ;;  mode            1   33[BANK0 ] unsigned char 
  3431 ;;  nmode           1   32[BANK0 ] unsigned char 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  2   59[COMRAM] int 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3441 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;Total ram usage:       68 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 4
  3448 ;; This function calls:
  3449 ;;		___awdiv
  3450 ;;		___awmod
  3451 ;;		___fladd
  3452 ;;		___fldiv
  3453 ;;		___fleq
  3454 ;;		___flge
  3455 ;;		___flmul
  3456 ;;		___flneg
  3457 ;;		___flsub
  3458 ;;		___fltol
  3459 ;;		___fpclassifyf
  3460 ;;		_floorf
  3461 ;;		_isupper
  3462 ;;		_pad
  3463 ;;		_strcpy
  3464 ;;		_tolower
  3465 ;; This function is called by:
  3466 ;;		_vfpfcnvrt
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text12
  3471  000E4C                     __ptext12:
  3472                           	callstack 0
  3473  000E4C                     _efgtoa:
  3474                           	callstack 22
  3475  000E4C                     
  3476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3477  000E4C  0E00               	movlw	0
  3478  000E4E  0100               	movlb	0	; () banked
  3479  000E50  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3480  000E52  0E00               	movlw	0
  3481  000E54  6F7A               	movwf	efgtoa@sign& (0+255),b
  3482  000E56                     
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3485  000E56  C03E  F08C         	movff	efgtoa@f,efgtoa@g
  3486  000E5A  C03F  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  3487  000E5E  C040  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  3488  000E62  C041  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  3489  000E66                     
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3492  000E66  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3493  000E68  EF3A  F007         	goto	u5410
  3494  000E6C  EF38  F007         	goto	u5411
  3495  000E70                     u5411:
  3496  000E70  EF50  F007         	goto	l4814
  3497  000E74                     u5410:
  3498  000E74                     
  3499                           ; BSR set to: 0
  3500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3501  000E74  0E00               	movlw	0
  3502  000E76  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3503  000E78  0E01               	movlw	1
  3504  000E7A  6F7A               	movwf	efgtoa@sign& (0+255),b
  3505  000E7C                     
  3506                           ; BSR set to: 0
  3507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3508  000E7C  C08C  F001         	movff	efgtoa@g,___flneg@f1
  3509  000E80  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3510  000E84  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3511  000E88  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3512  000E8C  ECA6  F02D         	call	___flneg	;wreg free
  3513  000E90  C001  F08C         	movff	?___flneg,efgtoa@g
  3514  000E94  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  3515  000E98  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  3516  000E9C  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  3517  000EA0                     l4814:
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3520  000EA0  0E00               	movlw	0
  3521  000EA2  0100               	movlb	0	; () banked
  3522  000EA4  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  3523  000EA6  0E00               	movlw	0
  3524  000EA8  6F92               	movwf	efgtoa@n& (0+255),b
  3525  000EAA                     
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3528  000EAA  C0EC  F07E         	movff	_width,efgtoa@w
  3529  000EAE  C0ED  F07F         	movff	_width+1,efgtoa@w+1
  3530  000EB2                     
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3533  000EB2  517A               	movf	efgtoa@sign& (0+255),w,b
  3534  000EB4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3535  000EB6  A4D8               	btfss	status,2,c
  3536  000EB8  EF60  F007         	goto	u5421
  3537  000EBC  EF62  F007         	goto	u5420
  3538  000EC0                     u5421:
  3539  000EC0  EF69  F007         	goto	l4822
  3540  000EC4                     u5420:
  3541  000EC4                     
  3542                           ; BSR set to: 0
  3543  000EC4  A5F0               	btfss	_flags& (0+255),2,b
  3544  000EC6  EF67  F007         	goto	u5431
  3545  000ECA  EF69  F007         	goto	u5430
  3546  000ECE                     u5431:
  3547  000ECE  EF83  F007         	goto	l4834
  3548  000ED2                     u5430:
  3549  000ED2                     l4822:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3553  000ED2  517A               	movf	efgtoa@sign& (0+255),w,b
  3554  000ED4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3555  000ED6  A4D8               	btfss	status,2,c
  3556  000ED8  EF70  F007         	goto	u5441
  3557  000EDC  EF72  F007         	goto	u5440
  3558  000EE0                     u5441:
  3559  000EE0  EF78  F007         	goto	l4826
  3560  000EE4                     u5440:
  3561  000EE4                     
  3562                           ; BSR set to: 0
  3563  000EE4  0E00               	movlw	0
  3564  000EE6  6F61               	movwf	(_efgtoa$2948+1)& (0+255),b
  3565  000EE8  0E2B               	movlw	43
  3566  000EEA  6F60               	movwf	_efgtoa$2948& (0+255),b
  3567  000EEC  EF7C  F007         	goto	l4828
  3568  000EF0                     l4826:
  3569                           
  3570                           ; BSR set to: 0
  3571  000EF0  0E00               	movlw	0
  3572  000EF2  6F61               	movwf	(_efgtoa$2948+1)& (0+255),b
  3573  000EF4  0E2D               	movlw	45
  3574  000EF6  6F60               	movwf	_efgtoa$2948& (0+255),b
  3575  000EF8                     l4828:
  3576                           
  3577                           ; BSR set to: 0
  3578  000EF8  C060  F19A         	movff	_efgtoa$2948,_dbuf
  3579  000EFC                     
  3580                           ; BSR set to: 0
  3581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3582  000EFC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3583  000EFE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3584  000F00                     
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3587  000F00  077E               	decf	efgtoa@w& (0+255),f,b
  3588  000F02  A0D8               	btfss	status,0,c
  3589  000F04  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3590  000F06                     l4834:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3594  000F06  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3595  000F0A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3596  000F0E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3597  000F12  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3598  000F16  EC5D  F025         	call	___fpclassifyf	;wreg free
  3599  000F1A  0401               	decf	?___fpclassifyf^0,w,c
  3600  000F1C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3601  000F1E  A4D8               	btfss	status,2,c
  3602  000F20  EF94  F007         	goto	u5451
  3603  000F24  EF96  F007         	goto	u5450
  3604  000F28                     u5451:
  3605  000F28  EFED  F007         	goto	l4852
  3606  000F2C                     u5450:
  3607  000F2C  0EBF               	movlw	191
  3608  000F2E  6E43               	movwf	??_efgtoa^0,c
  3609  000F30  0EFF               	movlw	255
  3610  000F32  6E44               	movwf	(??_efgtoa+1)^0,c
  3611  000F34  5042               	movf	efgtoa@c^0,w,c
  3612  000F36  6E45               	movwf	(??_efgtoa+2)^0,c
  3613  000F38  6A46               	clrf	(??_efgtoa+3)^0,c
  3614  000F3A  5043               	movf	??_efgtoa^0,w,c
  3615  000F3C  2645               	addwf	(??_efgtoa+2)^0,f,c
  3616  000F3E  5044               	movf	(??_efgtoa+1)^0,w,c
  3617  000F40  2246               	addwfc	(??_efgtoa+3)^0,f,c
  3618  000F42  5046               	movf	(??_efgtoa+3)^0,w,c
  3619  000F44  E10A               	bnz	u5460
  3620  000F46  0E1A               	movlw	26
  3621  000F48  5C45               	subwf	(??_efgtoa+2)^0,w,c
  3622  000F4A  A0D8               	btfss	status,0,c
  3623  000F4C  EFAA  F007         	goto	u5461
  3624  000F50  EFAD  F007         	goto	u5460
  3625  000F54                     u5461:
  3626  000F54  0E01               	movlw	1
  3627  000F56  EFAE  F007         	goto	u5470
  3628  000F5A                     u5460:
  3629  000F5A  0E00               	movlw	0
  3630  000F5C                     u5470:
  3631  000F5C  0100               	movlb	0	; () banked
  3632  000F5E  6F62               	movwf	_efgtoa$2949& (0+255),b
  3633  000F60  6B63               	clrf	(_efgtoa$2949+1)& (0+255),b
  3634  000F62                     
  3635                           ; BSR set to: 0
  3636  000F62  5162               	movf	_efgtoa$2949& (0+255),w,b
  3637  000F64  1163               	iorwf	(_efgtoa$2949+1)& (0+255),w,b
  3638  000F66  B4D8               	btfsc	status,2,c
  3639  000F68  EFB8  F007         	goto	u5481
  3640  000F6C  EFBA  F007         	goto	u5480
  3641  000F70                     u5481:
  3642  000F70  EFC8  F007         	goto	l4844
  3643  000F74                     u5480:
  3644  000F74                     
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3647  000F74  0E9A               	movlw	low _dbuf
  3648  000F76  2592               	addwf	efgtoa@n& (0+255),w,b
  3649  000F78  6E01               	movwf	strcpy@dest^0,c
  3650  000F7A  0E01               	movlw	high _dbuf
  3651  000F7C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3652  000F7E  6E02               	movwf	(strcpy@dest+1)^0,c
  3653  000F80  0E37               	movlw	low STR_2
  3654  000F82  6E03               	movwf	strcpy@src^0,c
  3655  000F84  0E0E               	movlw	high STR_2
  3656  000F86  6E04               	movwf	(strcpy@src+1)^0,c
  3657  000F88  EC20  F02B         	call	_strcpy	;wreg free
  3658                           
  3659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3660  000F8C  EFD4  F007         	goto	l4846
  3661  000F90                     l4844:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3665  000F90  0E9A               	movlw	low _dbuf
  3666  000F92  2592               	addwf	efgtoa@n& (0+255),w,b
  3667  000F94  6E01               	movwf	strcpy@dest^0,c
  3668  000F96  0E01               	movlw	high _dbuf
  3669  000F98  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3670  000F9A  6E02               	movwf	(strcpy@dest+1)^0,c
  3671  000F9C  0E3F               	movlw	low STR_3
  3672  000F9E  6E03               	movwf	strcpy@src^0,c
  3673  000FA0  0E0E               	movlw	high STR_3
  3674  000FA2  6E04               	movwf	(strcpy@src+1)^0,c
  3675  000FA4  EC20  F02B         	call	_strcpy	;wreg free
  3676  000FA8                     l4846:
  3677                           
  3678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3679  000FA8  0100               	movlb	0	; () banked
  3680  000FAA  0EFD               	movlw	253
  3681  000FAC  277E               	addwf	efgtoa@w& (0+255),f,b
  3682  000FAE  0EFF               	movlw	255
  3683  000FB0  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3684  000FB2                     l4848:
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3687  000FB2  C03C  F011         	movff	efgtoa@fp,pad@fp
  3688  000FB6  C03D  F012         	movff	efgtoa@fp+1,pad@fp+1
  3689  000FBA  0E9A               	movlw	low _dbuf
  3690  000FBC  6E13               	movwf	pad@buf^0,c
  3691  000FBE  0E01               	movlw	high _dbuf
  3692  000FC0  6E14               	movwf	(pad@buf+1)^0,c
  3693  000FC2  C07E  F015         	movff	efgtoa@w,pad@p
  3694  000FC6  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  3695  000FCA  EC22  F028         	call	_pad	;wreg free
  3696  000FCE  C011  F03C         	movff	?_pad,?_efgtoa
  3697  000FD2  C012  F03D         	movff	?_pad+1,?_efgtoa+1
  3698  000FD6  EF51  F00D         	goto	l1396
  3699  000FDA                     l4852:
  3700                           
  3701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3702  000FDA  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3703  000FDE  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3704  000FE2  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3705  000FE6  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3706  000FEA  EC5D  F025         	call	___fpclassifyf	;wreg free
  3707  000FEE  5001               	movf	?___fpclassifyf^0,w,c
  3708  000FF0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3709  000FF2  A4D8               	btfss	status,2,c
  3710  000FF4  EFFE  F007         	goto	u5491
  3711  000FF8  EF00  F008         	goto	u5490
  3712  000FFC                     u5491:
  3713  000FFC  EF40  F008         	goto	l4870
  3714  001000                     u5490:
  3715  001000  0EBF               	movlw	191
  3716  001002  6E43               	movwf	??_efgtoa^0,c
  3717  001004  0EFF               	movlw	255
  3718  001006  6E44               	movwf	(??_efgtoa+1)^0,c
  3719  001008  5042               	movf	efgtoa@c^0,w,c
  3720  00100A  6E45               	movwf	(??_efgtoa+2)^0,c
  3721  00100C  6A46               	clrf	(??_efgtoa+3)^0,c
  3722  00100E  5043               	movf	??_efgtoa^0,w,c
  3723  001010  2645               	addwf	(??_efgtoa+2)^0,f,c
  3724  001012  5044               	movf	(??_efgtoa+1)^0,w,c
  3725  001014  2246               	addwfc	(??_efgtoa+3)^0,f,c
  3726  001016  5046               	movf	(??_efgtoa+3)^0,w,c
  3727  001018  E10A               	bnz	u5500
  3728  00101A  0E1A               	movlw	26
  3729  00101C  5C45               	subwf	(??_efgtoa+2)^0,w,c
  3730  00101E  A0D8               	btfss	status,0,c
  3731  001020  EF14  F008         	goto	u5501
  3732  001024  EF17  F008         	goto	u5500
  3733  001028                     u5501:
  3734  001028  0E01               	movlw	1
  3735  00102A  EF18  F008         	goto	u5510
  3736  00102E                     u5500:
  3737  00102E  0E00               	movlw	0
  3738  001030                     u5510:
  3739  001030  0100               	movlb	0	; () banked
  3740  001032  6F64               	movwf	_efgtoa$2953& (0+255),b
  3741  001034  6B65               	clrf	(_efgtoa$2953+1)& (0+255),b
  3742  001036                     
  3743                           ; BSR set to: 0
  3744  001036  5164               	movf	_efgtoa$2953& (0+255),w,b
  3745  001038  1165               	iorwf	(_efgtoa$2953+1)& (0+255),w,b
  3746  00103A  B4D8               	btfsc	status,2,c
  3747  00103C  EF22  F008         	goto	u5521
  3748  001040  EF24  F008         	goto	u5520
  3749  001044                     u5521:
  3750  001044  EF32  F008         	goto	l4862
  3751  001048                     u5520:
  3752  001048                     
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3755  001048  0E9A               	movlw	low _dbuf
  3756  00104A  2592               	addwf	efgtoa@n& (0+255),w,b
  3757  00104C  6E01               	movwf	strcpy@dest^0,c
  3758  00104E  0E01               	movlw	high _dbuf
  3759  001050  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3760  001052  6E02               	movwf	(strcpy@dest+1)^0,c
  3761  001054  0E3B               	movlw	low STR_6
  3762  001056  6E03               	movwf	strcpy@src^0,c
  3763  001058  0E0E               	movlw	high STR_6
  3764  00105A  6E04               	movwf	(strcpy@src+1)^0,c
  3765  00105C  EC20  F02B         	call	_strcpy	;wreg free
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3768  001060  EFD4  F007         	goto	l4846
  3769  001064                     l4862:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3773  001064  0E9A               	movlw	low _dbuf
  3774  001066  2592               	addwf	efgtoa@n& (0+255),w,b
  3775  001068  6E01               	movwf	strcpy@dest^0,c
  3776  00106A  0E01               	movlw	high _dbuf
  3777  00106C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3778  00106E  6E02               	movwf	(strcpy@dest+1)^0,c
  3779  001070  0E43               	movlw	low STR_7
  3780  001072  6E03               	movwf	strcpy@src^0,c
  3781  001074  0E0E               	movlw	high STR_7
  3782  001076  6E04               	movwf	(strcpy@src+1)^0,c
  3783  001078  EC20  F02B         	call	_strcpy	;wreg free
  3784  00107C  EFD4  F007         	goto	l4846
  3785  001080                     l4870:
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3788  001080  0E00               	movlw	0
  3789  001082  0100               	movlb	0	; () banked
  3790  001084  6F94               	movwf	efgtoa@u& (0+255),b
  3791  001086  0E00               	movlw	0
  3792  001088  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3793  00108A  0E80               	movlw	128
  3794  00108C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3795  00108E  0E3F               	movlw	63
  3796  001090  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3799  001092  0E00               	movlw	0
  3800  001094  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3801  001096  0E00               	movlw	0
  3802  001098  6F90               	movwf	efgtoa@e& (0+255),b
  3803  00109A                     
  3804                           ; BSR set to: 0
  3805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3806  00109A  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3807  00109E  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3808  0010A2  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3809  0010A6  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3810  0010AA  0E00               	movlw	0
  3811  0010AC  6E05               	movwf	___fleq@ff2^0,c
  3812  0010AE  0E00               	movlw	0
  3813  0010B0  6E06               	movwf	(___fleq@ff2+1)^0,c
  3814  0010B2  0E00               	movlw	0
  3815  0010B4  6E07               	movwf	(___fleq@ff2+2)^0,c
  3816  0010B6  0E00               	movlw	0
  3817  0010B8  6E08               	movwf	(___fleq@ff2+3)^0,c
  3818  0010BA  EC3F  F029         	call	___fleq	;wreg free
  3819  0010BE  B0D8               	btfsc	status,0,c
  3820  0010C0  EF64  F008         	goto	u5531
  3821  0010C4  EF66  F008         	goto	u5530
  3822  0010C8                     u5531:
  3823  0010C8  EFE9  F008         	goto	l4888
  3824  0010CC                     u5530:
  3825  0010CC  EF85  F008         	goto	l4880
  3826  0010D0                     l4876:
  3827                           
  3828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3829  0010D0  C094  F001         	movff	efgtoa@u,___flmul@b
  3830  0010D4  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3831  0010D8  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3832  0010DC  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3833  0010E0  0E00               	movlw	0
  3834  0010E2  6E05               	movwf	___flmul@a^0,c
  3835  0010E4  0E00               	movlw	0
  3836  0010E6  6E06               	movwf	(___flmul@a+1)^0,c
  3837  0010E8  0E20               	movlw	32
  3838  0010EA  6E07               	movwf	(___flmul@a+2)^0,c
  3839  0010EC  0E41               	movlw	65
  3840  0010EE  6E08               	movwf	(___flmul@a+3)^0,c
  3841  0010F0  ECA0  F016         	call	___flmul	;wreg free
  3842  0010F4  C001  F094         	movff	?___flmul,efgtoa@u
  3843  0010F8  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  3844  0010FC  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  3845  001100  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  3846  001104                     
  3847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3848  001104  0100               	movlb	0	; () banked
  3849  001106  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3850  001108  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3851  00110A                     l4880:
  3852                           
  3853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3854  00110A  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3855  00110E  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3856  001112  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3857  001116  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3858  00111A  0E00               	movlw	0
  3859  00111C  6E05               	movwf	___flmul@a^0,c
  3860  00111E  0E00               	movlw	0
  3861  001120  6E06               	movwf	(___flmul@a+1)^0,c
  3862  001122  0E20               	movlw	32
  3863  001124  6E07               	movwf	(___flmul@a+2)^0,c
  3864  001126  0E41               	movlw	65
  3865  001128  6E08               	movwf	(___flmul@a+3)^0,c
  3866  00112A  C094  F001         	movff	efgtoa@u,___flmul@b
  3867  00112E  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3868  001132  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3869  001136  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3870  00113A  ECA0  F016         	call	___flmul	;wreg free
  3871  00113E  C001  F01E         	movff	?___flmul,___flge@ff2
  3872  001142  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3873  001146  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3874  00114A  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3875  00114E  ECDB  F024         	call	___flge	;wreg free
  3876  001152  B0D8               	btfsc	status,0,c
  3877  001154  EFAE  F008         	goto	u5541
  3878  001158  EFB0  F008         	goto	u5540
  3879  00115C                     u5541:
  3880  00115C  EF68  F008         	goto	l4876
  3881  001160                     u5540:
  3882  001160  EFD0  F008         	goto	l4886
  3883  001164                     l4882:
  3884                           
  3885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3886  001164  C094  F00F         	movff	efgtoa@u,___fldiv@b
  3887  001168  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3888  00116C  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3889  001170  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3890  001174  0E00               	movlw	0
  3891  001176  6E13               	movwf	___fldiv@a^0,c
  3892  001178  0E00               	movlw	0
  3893  00117A  6E14               	movwf	(___fldiv@a+1)^0,c
  3894  00117C  0E20               	movlw	32
  3895  00117E  6E15               	movwf	(___fldiv@a+2)^0,c
  3896  001180  0E41               	movlw	65
  3897  001182  6E16               	movwf	(___fldiv@a+3)^0,c
  3898  001184  ECB5  F018         	call	___fldiv	;wreg free
  3899  001188  C00F  F094         	movff	?___fldiv,efgtoa@u
  3900  00118C  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  3901  001190  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  3902  001194  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  3903  001198                     
  3904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3905  001198  0100               	movlb	0	; () banked
  3906  00119A  0790               	decf	efgtoa@e& (0+255),f,b
  3907  00119C  A0D8               	btfss	status,0,c
  3908  00119E  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3909  0011A0                     l4886:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3912  0011A0  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3913  0011A4  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3914  0011A8  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3915  0011AC  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3916  0011B0  C094  F01E         	movff	efgtoa@u,___flge@ff2
  3917  0011B4  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3918  0011B8  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3919  0011BC  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3920  0011C0  ECDB  F024         	call	___flge	;wreg free
  3921  0011C4  A0D8               	btfss	status,0,c
  3922  0011C6  EFE7  F008         	goto	u5551
  3923  0011CA  EFE9  F008         	goto	u5550
  3924  0011CE                     u5551:
  3925  0011CE  EFB2  F008         	goto	l4882
  3926  0011D2                     u5550:
  3927  0011D2                     l4888:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3930  0011D2  C042  F007         	movff	efgtoa@c,tolower@c
  3931  0011D6  6A08               	clrf	(tolower@c+1)^0,c
  3932  0011D8  ECF0  F02A         	call	_tolower	;wreg free
  3933  0011DC  5007               	movf	?_tolower^0,w,c
  3934  0011DE  0100               	movlb	0	; () banked
  3935  0011E0  6F81               	movwf	efgtoa@mode& (0+255),b
  3936  0011E2                     
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3939  0011E2  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3940  0011E6                     
  3941                           ; BSR set to: 0
  3942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3943  0011E6  0E67               	movlw	103
  3944  0011E8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3945  0011EA  A4D8               	btfss	status,2,c
  3946  0011EC  EFFA  F008         	goto	u5561
  3947  0011F0  EFFC  F008         	goto	u5560
  3948  0011F4                     u5561:
  3949  0011F4  EF22  F009         	goto	l4902
  3950  0011F8                     u5560:
  3951  0011F8                     
  3952                           ; BSR set to: 0
  3953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3954  0011F8  51EE               	movf	_prec& (0+255),w,b
  3955  0011FA  11EF               	iorwf	(_prec+1)& (0+255),w,b
  3956  0011FC  A4D8               	btfss	status,2,c
  3957  0011FE  EF03  F009         	goto	u5571
  3958  001202  EF05  F009         	goto	u5570
  3959  001206                     u5571:
  3960  001206  EF09  F009         	goto	l4898
  3961  00120A                     u5570:
  3962  00120A                     
  3963                           ; BSR set to: 0
  3964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3965  00120A  0E00               	movlw	0
  3966  00120C  6FEF               	movwf	(_prec+1)& (0+255),b
  3967  00120E  0E01               	movlw	1
  3968  001210  6FEE               	movwf	_prec& (0+255),b
  3969  001212                     l4898:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3973  001212  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  3974  001214  EF16  F009         	goto	u5580
  3975  001218  51EF               	movf	(_prec+1)& (0+255),w,b
  3976  00121A  E106               	bnz	u5581
  3977  00121C  05EE               	decf	_prec& (0+255),w,b
  3978  00121E  B0D8               	btfsc	status,0,c
  3979  001220  EF14  F009         	goto	u5581
  3980  001224  EF16  F009         	goto	u5580
  3981  001228                     u5581:
  3982  001228  EF1C  F009         	goto	l1414
  3983  00122C                     u5580:
  3984  00122C                     l4900:
  3985                           
  3986                           ; BSR set to: 0
  3987  00122C  0E00               	movlw	0
  3988  00122E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3989  001230  0E06               	movlw	6
  3990  001232  6F7C               	movwf	efgtoa@p& (0+255),b
  3991  001234  EF2B  F009         	goto	l4908
  3992  001238                     l1414:
  3993                           
  3994                           ; BSR set to: 0
  3995  001238  C0EE  F07C         	movff	_prec,efgtoa@p
  3996  00123C  C0EF  F07D         	movff	_prec+1,efgtoa@p+1
  3997  001240  EF2B  F009         	goto	l4908
  3998  001244                     l4902:
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4002  001244  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  4003  001246  EF27  F009         	goto	u5591
  4004  00124A  EF29  F009         	goto	u5590
  4005  00124E                     u5591:
  4006  00124E  EF16  F009         	goto	l4900
  4007  001252                     u5590:
  4008  001252  EF1C  F009         	goto	l1414
  4009  001256                     l4908:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4013  001256  0E67               	movlw	103
  4014  001258  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4015  00125A  A4D8               	btfss	status,2,c
  4016  00125C  EF32  F009         	goto	u5601
  4017  001260  EF34  F009         	goto	u5600
  4018  001264                     u5601:
  4019  001264  EF63  F009         	goto	l4918
  4020  001268                     u5600:
  4021  001268                     
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4024  001268  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4025  00126A  EF42  F009         	goto	u5610
  4026  00126E  0EFC               	movlw	252
  4027  001270  5D90               	subwf	efgtoa@e& (0+255),w,b
  4028  001272  0EFF               	movlw	255
  4029  001274  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4030  001276  A0D8               	btfss	status,0,c
  4031  001278  EF40  F009         	goto	u5611
  4032  00127C  EF42  F009         	goto	u5610
  4033  001280                     u5611:
  4034  001280  EF61  F009         	goto	l4916
  4035  001284                     u5610:
  4036  001284                     
  4037                           ; BSR set to: 0
  4038  001284  0EFF               	movlw	255
  4039  001286  6E43               	movwf	??_efgtoa^0,c
  4040  001288  0EFF               	movlw	255
  4041  00128A  6E44               	movwf	(??_efgtoa+1)^0,c
  4042  00128C  C07C  F045         	movff	efgtoa@p,??_efgtoa+2
  4043  001290  C07D  F046         	movff	efgtoa@p+1,??_efgtoa+3
  4044  001294  5043               	movf	??_efgtoa^0,w,c
  4045  001296  2645               	addwf	(??_efgtoa+2)^0,f,c
  4046  001298  5044               	movf	(??_efgtoa+1)^0,w,c
  4047  00129A  2246               	addwfc	(??_efgtoa+3)^0,f,c
  4048  00129C  5190               	movf	efgtoa@e& (0+255),w,b
  4049  00129E  5C45               	subwf	(??_efgtoa+2)^0,w,c
  4050  0012A0  5046               	movf	(??_efgtoa+3)^0,w,c
  4051  0012A2  0A80               	xorlw	128
  4052  0012A4  6E47               	movwf	(??_efgtoa+4)^0,c
  4053  0012A6  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4054  0012A8  0A80               	xorlw	128
  4055  0012AA  5847               	subwfb	(??_efgtoa+4)^0,w,c
  4056  0012AC  A0D8               	btfss	status,0,c
  4057  0012AE  EF5B  F009         	goto	u5621
  4058  0012B2  EF5D  F009         	goto	u5620
  4059  0012B6                     u5621:
  4060  0012B6  EF61  F009         	goto	l4916
  4061  0012BA                     u5620:
  4062  0012BA                     
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4065  0012BA  0E66               	movlw	102
  4066  0012BC  6F80               	movwf	efgtoa@nmode& (0+255),b
  4067                           
  4068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4069  0012BE  EF63  F009         	goto	l4918
  4070  0012C2                     l4916:
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4074  0012C2  0E65               	movlw	101
  4075  0012C4  6F80               	movwf	efgtoa@nmode& (0+255),b
  4076  0012C6                     l4918:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4080  0012C6  C07C  F072         	movff	efgtoa@p,efgtoa@m
  4081  0012CA  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  4082  0012CE                     
  4083                           ; BSR set to: 0
  4084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4085  0012CE  0E67               	movlw	103
  4086  0012D0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4087  0012D2  A4D8               	btfss	status,2,c
  4088  0012D4  EF6E  F009         	goto	u5631
  4089  0012D8  EF70  F009         	goto	u5630
  4090  0012DC                     u5631:
  4091  0012DC  EF80  F009         	goto	l4926
  4092  0012E0                     u5630:
  4093  0012E0                     
  4094                           ; BSR set to: 0
  4095  0012E0  0E66               	movlw	102
  4096  0012E2  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4097  0012E4  A4D8               	btfss	status,2,c
  4098  0012E6  EF77  F009         	goto	u5641
  4099  0012EA  EF79  F009         	goto	u5640
  4100  0012EE                     u5641:
  4101  0012EE  EF82  F009         	goto	l4928
  4102  0012F2                     u5640:
  4103  0012F2                     
  4104                           ; BSR set to: 0
  4105  0012F2  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4106  0012F4  EF80  F009         	goto	u5650
  4107  0012F8  EF7E  F009         	goto	u5651
  4108  0012FC                     u5651:
  4109  0012FC  EF82  F009         	goto	l4928
  4110  001300                     u5650:
  4111  001300                     l4926:
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4115  001300  4B72               	infsnz	efgtoa@m& (0+255),f,b
  4116  001302  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  4117  001304                     l4928:
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4121  001304  0E66               	movlw	102
  4122  001306  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4123  001308  A4D8               	btfss	status,2,c
  4124  00130A  EF89  F009         	goto	u5661
  4125  00130E  EF8B  F009         	goto	u5660
  4126  001312                     u5661:
  4127  001312  EFAB  F009         	goto	l4938
  4128  001316                     u5660:
  4129  001316                     
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4132  001316  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4133  001318  EF92  F009         	goto	u5670
  4134  00131C  EF90  F009         	goto	u5671
  4135  001320                     u5671:
  4136  001320  EF9E  F009         	goto	l4934
  4137  001324                     u5670:
  4138  001324                     
  4139                           ; BSR set to: 0
  4140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4141  001324  0E00               	movlw	0
  4142  001326  6F94               	movwf	efgtoa@u& (0+255),b
  4143  001328  0E00               	movlw	0
  4144  00132A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4145  00132C  0E80               	movlw	128
  4146  00132E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4147  001330  0E3F               	movlw	63
  4148  001332  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4149                           
  4150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4151  001334  0E00               	movlw	0
  4152  001336  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4153  001338  0E00               	movlw	0
  4154  00133A  6F90               	movwf	efgtoa@e& (0+255),b
  4155  00133C                     l4934:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4159  00133C  0E67               	movlw	103
  4160  00133E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4161  001340  B4D8               	btfsc	status,2,c
  4162  001342  EFA5  F009         	goto	u5681
  4163  001346  EFA7  F009         	goto	u5680
  4164  00134A                     u5681:
  4165  00134A  EFAB  F009         	goto	l4938
  4166  00134E                     u5680:
  4167  00134E                     
  4168                           ; BSR set to: 0
  4169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4170  00134E  5190               	movf	efgtoa@e& (0+255),w,b
  4171  001350  2772               	addwf	efgtoa@m& (0+255),f,b
  4172  001352  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4173  001354  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4174  001356                     l4938:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4178  001356  0E00               	movlw	0
  4179  001358  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4180  00135A  0E00               	movlw	0
  4181  00135C  6F8A               	movwf	efgtoa@i& (0+255),b
  4182  00135E                     
  4183                           ; BSR set to: 0
  4184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4185  00135E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  4186  001362  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4187  001366  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4188  00136A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4189  00136E                     
  4190                           ; BSR set to: 0
  4191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4192  00136E  C094  F074         	movff	efgtoa@u,efgtoa@ou
  4193  001372  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  4194  001376  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  4195  00137A  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  4196                           
  4197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4198  00137E  EF3C  F00A         	goto	l4952
  4199  001382                     l4944:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4203  001382  C082  F00F         	movff	efgtoa@h,___fldiv@b
  4204  001386  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  4205  00138A  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  4206  00138E  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  4207  001392  C094  F013         	movff	efgtoa@u,___fldiv@a
  4208  001396  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  4209  00139A  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  4210  00139E  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  4211  0013A2  ECB5  F018         	call	___fldiv	;wreg free
  4212  0013A6  C00F  F028         	movff	?___fldiv,floorf@x
  4213  0013AA  C010  F029         	movff	?___fldiv+1,floorf@x+1
  4214  0013AE  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  4215  0013B2  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  4216  0013B6  EC0F  F01D         	call	_floorf	;wreg free
  4217  0013BA  C028  F086         	movff	?_floorf,efgtoa@l
  4218  0013BE  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  4219  0013C2  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  4220  0013C6  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  4221                           
  4222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4223  0013CA  C086  F001         	movff	efgtoa@l,___fltol@f1
  4224  0013CE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4225  0013D2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4226  0013D6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4227  0013DA  EC58  F024         	call	___fltol	;wreg free
  4228  0013DE  C001  F078         	movff	?___fltol,efgtoa@d
  4229  0013E2  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4230  0013E6                     
  4231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4232  0013E6  C082  F01A         	movff	efgtoa@h,___flsub@b
  4233  0013EA  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4234  0013EE  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4235  0013F2  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4236  0013F6  C094  F005         	movff	efgtoa@u,___flmul@a
  4237  0013FA  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4238  0013FE  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4239  001402  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4240  001406  C086  F001         	movff	efgtoa@l,___flmul@b
  4241  00140A  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4242  00140E  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4243  001412  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4244  001416  ECA0  F016         	call	___flmul	;wreg free
  4245  00141A  C001  F01E         	movff	?___flmul,___flsub@a
  4246  00141E  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4247  001422  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4248  001426  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4249  00142A  ECE8  F02C         	call	___flsub	;wreg free
  4250  00142E  C01A  F082         	movff	?___flsub,efgtoa@h
  4251  001432  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4252  001436  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4253  00143A  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4254  00143E                     
  4255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4256  00143E  C094  F00F         	movff	efgtoa@u,___fldiv@b
  4257  001442  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  4258  001446  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  4259  00144A  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  4260  00144E  0E00               	movlw	0
  4261  001450  6E13               	movwf	___fldiv@a^0,c
  4262  001452  0E00               	movlw	0
  4263  001454  6E14               	movwf	(___fldiv@a+1)^0,c
  4264  001456  0E20               	movlw	32
  4265  001458  6E15               	movwf	(___fldiv@a+2)^0,c
  4266  00145A  0E41               	movlw	65
  4267  00145C  6E16               	movwf	(___fldiv@a+3)^0,c
  4268  00145E  ECB5  F018         	call	___fldiv	;wreg free
  4269  001462  C00F  F094         	movff	?___fldiv,efgtoa@u
  4270  001466  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  4271  00146A  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  4272  00146E  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  4273  001472                     
  4274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4275  001472  0100               	movlb	0	; () banked
  4276  001474  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4277  001476  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4278  001478                     l4952:
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4282  001478  5172               	movf	efgtoa@m& (0+255),w,b
  4283  00147A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4284  00147C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4285  00147E  0A80               	xorlw	128
  4286  001480  6E43               	movwf	??_efgtoa^0,c
  4287  001482  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4288  001484  0A80               	xorlw	128
  4289  001486  5843               	subwfb	??_efgtoa^0,w,c
  4290  001488  A0D8               	btfss	status,0,c
  4291  00148A  EF49  F00A         	goto	u5691
  4292  00148E  EF4B  F00A         	goto	u5690
  4293  001492                     u5691:
  4294  001492  EFC1  F009         	goto	l4944
  4295  001496                     u5690:
  4296  001496                     
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4299  001496  C094  F001         	movff	efgtoa@u,___flmul@b
  4300  00149A  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4301  00149E  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4302  0014A2  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4303  0014A6  0E00               	movlw	0
  4304  0014A8  6E05               	movwf	___flmul@a^0,c
  4305  0014AA  0E00               	movlw	0
  4306  0014AC  6E06               	movwf	(___flmul@a+1)^0,c
  4307  0014AE  0EA0               	movlw	160
  4308  0014B0  6E07               	movwf	(___flmul@a+2)^0,c
  4309  0014B2  0E40               	movlw	64
  4310  0014B4  6E08               	movwf	(___flmul@a+3)^0,c
  4311  0014B6  ECA0  F016         	call	___flmul	;wreg free
  4312  0014BA  C001  F086         	movff	?___flmul,efgtoa@l
  4313  0014BE  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  4314  0014C2  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  4315  0014C6  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  4316  0014CA                     
  4317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4318  0014CA  C082  F01A         	movff	efgtoa@h,___flge@ff1
  4319  0014CE  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4320  0014D2  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4321  0014D6  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4322  0014DA  C086  F01E         	movff	efgtoa@l,___flge@ff2
  4323  0014DE  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4324  0014E2  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4325  0014E6  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4326  0014EA  ECDB  F024         	call	___flge	;wreg free
  4327  0014EE  B0D8               	btfsc	status,0,c
  4328  0014F0  EF7C  F00A         	goto	u5701
  4329  0014F4  EF7E  F00A         	goto	u5700
  4330  0014F8                     u5701:
  4331  0014F8  EF89  F00A         	goto	l4960
  4332  0014FC                     u5700:
  4333  0014FC                     
  4334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4335  0014FC  0E00               	movlw	0
  4336  0014FE  0100               	movlb	0	; () banked
  4337  001500  6F86               	movwf	efgtoa@l& (0+255),b
  4338  001502  0E00               	movlw	0
  4339  001504  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4340  001506  0E00               	movlw	0
  4341  001508  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4342  00150A  0E00               	movlw	0
  4343  00150C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4344                           
  4345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4346  00150E  EFB2  F00A         	goto	l4966
  4347  001512                     l4960:
  4348                           
  4349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4350  001512  C082  F001         	movff	efgtoa@h,___fleq@ff1
  4351  001516  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4352  00151A  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4353  00151E  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4354  001522  C086  F005         	movff	efgtoa@l,___fleq@ff2
  4355  001526  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4356  00152A  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4357  00152E  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4358  001532  EC3F  F029         	call	___fleq	;wreg free
  4359  001536  A0D8               	btfss	status,0,c
  4360  001538  EFA0  F00A         	goto	u5711
  4361  00153C  EFA2  F00A         	goto	u5710
  4362  001540                     u5711:
  4363  001540  EFB2  F00A         	goto	l4966
  4364  001544                     u5710:
  4365  001544  0100               	movlb	0	; () banked
  4366  001546  B178               	btfsc	efgtoa@d& (0+255),0,b
  4367  001548  EFA8  F00A         	goto	u5721
  4368  00154C  EFAA  F00A         	goto	u5720
  4369  001550                     u5721:
  4370  001550  EFB2  F00A         	goto	l4966
  4371  001554                     u5720:
  4372  001554                     
  4373                           ; BSR set to: 0
  4374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4375  001554  0E00               	movlw	0
  4376  001556  6F86               	movwf	efgtoa@l& (0+255),b
  4377  001558  0E00               	movlw	0
  4378  00155A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4379  00155C  0E00               	movlw	0
  4380  00155E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4381  001560  0E00               	movlw	0
  4382  001562  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4383  001564                     l4966:
  4384                           
  4385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4386  001564  C08C  F001         	movff	efgtoa@g,___fladd@b
  4387  001568  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  4388  00156C  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  4389  001570  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  4390  001574  C086  F005         	movff	efgtoa@l,___fladd@a
  4391  001578  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4392  00157C  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4393  001580  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4394  001584  EC40  F014         	call	___fladd	;wreg free
  4395  001588  C001  F082         	movff	?___fladd,efgtoa@h
  4396  00158C  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4397  001590  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4398  001594  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4399  001598                     
  4400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4401  001598  C082  F01A         	movff	efgtoa@h,___flge@ff1
  4402  00159C  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4403  0015A0  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4404  0015A4  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4405  0015A8  0E00               	movlw	0
  4406  0015AA  6E05               	movwf	___flmul@a^0,c
  4407  0015AC  0E00               	movlw	0
  4408  0015AE  6E06               	movwf	(___flmul@a+1)^0,c
  4409  0015B0  0E20               	movlw	32
  4410  0015B2  6E07               	movwf	(___flmul@a+2)^0,c
  4411  0015B4  0E41               	movlw	65
  4412  0015B6  6E08               	movwf	(___flmul@a+3)^0,c
  4413  0015B8  C074  F001         	movff	efgtoa@ou,___flmul@b
  4414  0015BC  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4415  0015C0  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4416  0015C4  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4417  0015C8  ECA0  F016         	call	___flmul	;wreg free
  4418  0015CC  C001  F01E         	movff	?___flmul,___flge@ff2
  4419  0015D0  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4420  0015D4  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4421  0015D8  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4422  0015DC  ECDB  F024         	call	___flge	;wreg free
  4423  0015E0  A0D8               	btfss	status,0,c
  4424  0015E2  EFF5  F00A         	goto	u5731
  4425  0015E6  EFF7  F00A         	goto	u5730
  4426  0015EA                     u5731:
  4427  0015EA  EF20  F00B         	goto	l4978
  4428  0015EE                     u5730:
  4429  0015EE                     
  4430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4431  0015EE  0100               	movlb	0	; () banked
  4432  0015F0  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4433  0015F2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4434  0015F4                     
  4435                           ; BSR set to: 0
  4436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4437  0015F4  C074  F001         	movff	efgtoa@ou,___flmul@b
  4438  0015F8  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4439  0015FC  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4440  001600  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4441  001604  0E00               	movlw	0
  4442  001606  6E05               	movwf	___flmul@a^0,c
  4443  001608  0E00               	movlw	0
  4444  00160A  6E06               	movwf	(___flmul@a+1)^0,c
  4445  00160C  0E20               	movlw	32
  4446  00160E  6E07               	movwf	(___flmul@a+2)^0,c
  4447  001610  0E41               	movlw	65
  4448  001612  6E08               	movwf	(___flmul@a+3)^0,c
  4449  001614  ECA0  F016         	call	___flmul	;wreg free
  4450  001618  C001  F074         	movff	?___flmul,efgtoa@ou
  4451  00161C  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  4452  001620  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  4453  001624  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  4454  001628                     
  4455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4456  001628  0E66               	movlw	102
  4457  00162A  0100               	movlb	0	; () banked
  4458  00162C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4459  00162E  A4D8               	btfss	status,2,c
  4460  001630  EF1C  F00B         	goto	u5741
  4461  001634  EF1E  F00B         	goto	u5740
  4462  001638                     u5741:
  4463  001638  EF20  F00B         	goto	l4978
  4464  00163C                     u5740:
  4465  00163C                     
  4466                           ; BSR set to: 0
  4467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4468  00163C  4B72               	infsnz	efgtoa@m& (0+255),f,b
  4469  00163E  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  4470  001640                     l4978:
  4471                           
  4472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4473  001640  C074  F094         	movff	efgtoa@ou,efgtoa@u
  4474  001644  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  4475  001648  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  4476  00164C  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  4477  001650                     
  4478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4479  001650  0E65               	movlw	101
  4480  001652  0100               	movlb	0	; () banked
  4481  001654  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4482  001656  B4D8               	btfsc	status,2,c
  4483  001658  EF30  F00B         	goto	u5751
  4484  00165C  EF32  F00B         	goto	u5750
  4485  001660                     u5751:
  4486  001660  EF38  F00B         	goto	l4984
  4487  001664                     u5750:
  4488  001664                     
  4489                           ; BSR set to: 0
  4490  001664  C090  F070         	movff	efgtoa@e,efgtoa@ne
  4491  001668  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  4492  00166C  EF3C  F00B         	goto	l1442
  4493  001670                     l4984:
  4494                           
  4495                           ; BSR set to: 0
  4496  001670  0E00               	movlw	0
  4497  001672  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  4498  001674  0E00               	movlw	0
  4499  001676  6F70               	movwf	efgtoa@ne& (0+255),b
  4500  001678                     l1442:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4504  001678  0E00               	movlw	0
  4505  00167A  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4506  00167C  0E00               	movlw	0
  4507  00167E  6F6E               	movwf	efgtoa@pp& (0+255),b
  4508                           
  4509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4510  001680  0E00               	movlw	0
  4511  001682  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  4512  001684  0E00               	movlw	0
  4513  001686  6F6C               	movwf	efgtoa@t& (0+255),b
  4514                           
  4515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4516  001688  0E00               	movlw	0
  4517  00168A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4518  00168C  0E00               	movlw	0
  4519  00168E  6F8A               	movwf	efgtoa@i& (0+255),b
  4520                           
  4521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4522  001690  EF37  F00C         	goto	l5034
  4523  001694                     l4986:
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4527  001694  C082  F00F         	movff	efgtoa@h,___fldiv@b
  4528  001698  C083  F010         	movff	efgtoa@h+1,___fldiv@b+1
  4529  00169C  C084  F011         	movff	efgtoa@h+2,___fldiv@b+2
  4530  0016A0  C085  F012         	movff	efgtoa@h+3,___fldiv@b+3
  4531  0016A4  C094  F013         	movff	efgtoa@u,___fldiv@a
  4532  0016A8  C095  F014         	movff	efgtoa@u+1,___fldiv@a+1
  4533  0016AC  C096  F015         	movff	efgtoa@u+2,___fldiv@a+2
  4534  0016B0  C097  F016         	movff	efgtoa@u+3,___fldiv@a+3
  4535  0016B4  ECB5  F018         	call	___fldiv	;wreg free
  4536  0016B8  C00F  F028         	movff	?___fldiv,floorf@x
  4537  0016BC  C010  F029         	movff	?___fldiv+1,floorf@x+1
  4538  0016C0  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  4539  0016C4  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  4540  0016C8  EC0F  F01D         	call	_floorf	;wreg free
  4541  0016CC  C028  F086         	movff	?_floorf,efgtoa@l
  4542  0016D0  C029  F087         	movff	?_floorf+1,efgtoa@l+1
  4543  0016D4  C02A  F088         	movff	?_floorf+2,efgtoa@l+2
  4544  0016D8  C02B  F089         	movff	?_floorf+3,efgtoa@l+3
  4545                           
  4546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4547  0016DC  C086  F001         	movff	efgtoa@l,___fltol@f1
  4548  0016E0  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4549  0016E4  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4550  0016E8  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4551  0016EC  EC58  F024         	call	___fltol	;wreg free
  4552  0016F0  C001  F078         	movff	?___fltol,efgtoa@d
  4553  0016F4  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4554  0016F8                     
  4555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4556  0016F8  0100               	movlb	0	; () banked
  4557  0016FA  B9F0               	btfsc	_flags& (0+255),4,b
  4558  0016FC  EF82  F00B         	goto	u5761
  4559  001700  EF84  F00B         	goto	u5760
  4560  001704                     u5761:
  4561  001704  EFA1  F00B         	goto	l4998
  4562  001708                     u5760:
  4563  001708                     
  4564                           ; BSR set to: 0
  4565  001708  5178               	movf	efgtoa@d& (0+255),w,b
  4566  00170A  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4567  00170C  A4D8               	btfss	status,2,c
  4568  00170E  EF8B  F00B         	goto	u5771
  4569  001712  EF8D  F00B         	goto	u5770
  4570  001716                     u5771:
  4571  001716  EFA1  F00B         	goto	l4998
  4572  00171A                     u5770:
  4573  00171A                     
  4574                           ; BSR set to: 0
  4575  00171A  0E67               	movlw	103
  4576  00171C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4577  00171E  A4D8               	btfss	status,2,c
  4578  001720  EF94  F00B         	goto	u5781
  4579  001724  EF96  F00B         	goto	u5780
  4580  001728                     u5781:
  4581  001728  EFA1  F00B         	goto	l4998
  4582  00172C                     u5780:
  4583  00172C                     
  4584                           ; BSR set to: 0
  4585  00172C  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4586  00172E  EF9D  F00B         	goto	u5790
  4587  001732  EF9B  F00B         	goto	u5791
  4588  001736                     u5791:
  4589  001736  EFA1  F00B         	goto	l4998
  4590  00173A                     u5790:
  4591  00173A                     
  4592                           ; BSR set to: 0
  4593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4594  00173A  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  4595  00173C  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  4596                           
  4597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4598  00173E  EFEB  F00B         	goto	l5026
  4599  001742                     l4998:
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4603  001742  516E               	movf	efgtoa@pp& (0+255),w,b
  4604  001744  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4605  001746  A4D8               	btfss	status,2,c
  4606  001748  EFA8  F00B         	goto	u5801
  4607  00174C  EFAA  F00B         	goto	u5800
  4608  001750                     u5801:
  4609  001750  EFD4  F00B         	goto	l5018
  4610  001754                     u5800:
  4611  001754                     
  4612                           ; BSR set to: 0
  4613  001754  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4614  001756  EFB1  F00B         	goto	u5810
  4615  00175A  EFAF  F00B         	goto	u5811
  4616  00175E                     u5811:
  4617  00175E  EFD4  F00B         	goto	l5018
  4618  001762                     u5810:
  4619  001762                     
  4620                           ; BSR set to: 0
  4621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4622  001762  0E9A               	movlw	low _dbuf
  4623  001764  2592               	addwf	efgtoa@n& (0+255),w,b
  4624  001766  6ED9               	movwf	fsr2l,c
  4625  001768  0E01               	movlw	high _dbuf
  4626  00176A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4627  00176C  6EDA               	movwf	fsr2h,c
  4628  00176E  0E2E               	movlw	46
  4629  001770  6EDF               	movwf	indf2,c
  4630  001772                     
  4631                           ; BSR set to: 0
  4632  001772  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4633  001774  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4634  001776                     
  4635                           ; BSR set to: 0
  4636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4637  001776  077E               	decf	efgtoa@w& (0+255),f,b
  4638  001778  A0D8               	btfss	status,0,c
  4639  00177A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4640  00177C                     
  4641                           ; BSR set to: 0
  4642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4643  00177C  0E00               	movlw	0
  4644  00177E  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4645  001780  0E01               	movlw	1
  4646  001782  6F6E               	movwf	efgtoa@pp& (0+255),b
  4647  001784  EFD4  F00B         	goto	l5018
  4648  001788                     l5010:
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4652  001788  0E9A               	movlw	low _dbuf
  4653  00178A  2592               	addwf	efgtoa@n& (0+255),w,b
  4654  00178C  6ED9               	movwf	fsr2l,c
  4655  00178E  0E01               	movlw	high _dbuf
  4656  001790  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4657  001792  6EDA               	movwf	fsr2h,c
  4658  001794  0E30               	movlw	48
  4659  001796  6EDF               	movwf	indf2,c
  4660  001798                     
  4661                           ; BSR set to: 0
  4662  001798  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4663  00179A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4664  00179C                     
  4665                           ; BSR set to: 0
  4666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4667  00179C  077E               	decf	efgtoa@w& (0+255),f,b
  4668  00179E  A0D8               	btfss	status,0,c
  4669  0017A0  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4670  0017A2                     
  4671                           ; BSR set to: 0
  4672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4673  0017A2  076C               	decf	efgtoa@t& (0+255),f,b
  4674  0017A4  A0D8               	btfss	status,0,c
  4675  0017A6  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  4676  0017A8                     l5018:
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4680  0017A8  516C               	movf	efgtoa@t& (0+255),w,b
  4681  0017AA  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4682  0017AC  A4D8               	btfss	status,2,c
  4683  0017AE  EFDB  F00B         	goto	u5821
  4684  0017B2  EFDD  F00B         	goto	u5820
  4685  0017B6                     u5821:
  4686  0017B6  EFC4  F00B         	goto	l5010
  4687  0017BA                     u5820:
  4688  0017BA                     
  4689                           ; BSR set to: 0
  4690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4691  0017BA  0E9A               	movlw	low _dbuf
  4692  0017BC  2592               	addwf	efgtoa@n& (0+255),w,b
  4693  0017BE  6ED9               	movwf	fsr2l,c
  4694  0017C0  0E01               	movlw	high _dbuf
  4695  0017C2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4696  0017C4  6EDA               	movwf	fsr2h,c
  4697  0017C6  5178               	movf	efgtoa@d& (0+255),w,b
  4698  0017C8  0F30               	addlw	48
  4699  0017CA  6EDF               	movwf	indf2,c
  4700  0017CC                     
  4701                           ; BSR set to: 0
  4702  0017CC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4703  0017CE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4704  0017D0                     
  4705                           ; BSR set to: 0
  4706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4707  0017D0  077E               	decf	efgtoa@w& (0+255),f,b
  4708  0017D2  A0D8               	btfss	status,0,c
  4709  0017D4  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4710  0017D6                     l5026:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4714  0017D6  C082  F01A         	movff	efgtoa@h,___flsub@b
  4715  0017DA  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4716  0017DE  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4717  0017E2  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4718  0017E6  C094  F005         	movff	efgtoa@u,___flmul@a
  4719  0017EA  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  4720  0017EE  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  4721  0017F2  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  4722  0017F6  C086  F001         	movff	efgtoa@l,___flmul@b
  4723  0017FA  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  4724  0017FE  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  4725  001802  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  4726  001806  ECA0  F016         	call	___flmul	;wreg free
  4727  00180A  C001  F01E         	movff	?___flmul,___flsub@a
  4728  00180E  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4729  001812  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4730  001816  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4731  00181A  ECE8  F02C         	call	___flsub	;wreg free
  4732  00181E  C01A  F082         	movff	?___flsub,efgtoa@h
  4733  001822  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  4734  001826  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  4735  00182A  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  4736  00182E                     
  4737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4738  00182E  C094  F00F         	movff	efgtoa@u,___fldiv@b
  4739  001832  C095  F010         	movff	efgtoa@u+1,___fldiv@b+1
  4740  001836  C096  F011         	movff	efgtoa@u+2,___fldiv@b+2
  4741  00183A  C097  F012         	movff	efgtoa@u+3,___fldiv@b+3
  4742  00183E  0E00               	movlw	0
  4743  001840  6E13               	movwf	___fldiv@a^0,c
  4744  001842  0E00               	movlw	0
  4745  001844  6E14               	movwf	(___fldiv@a+1)^0,c
  4746  001846  0E20               	movlw	32
  4747  001848  6E15               	movwf	(___fldiv@a+2)^0,c
  4748  00184A  0E41               	movlw	65
  4749  00184C  6E16               	movwf	(___fldiv@a+3)^0,c
  4750  00184E  ECB5  F018         	call	___fldiv	;wreg free
  4751  001852  C00F  F094         	movff	?___fldiv,efgtoa@u
  4752  001856  C010  F095         	movff	?___fldiv+1,efgtoa@u+1
  4753  00185A  C011  F096         	movff	?___fldiv+2,efgtoa@u+2
  4754  00185E  C012  F097         	movff	?___fldiv+3,efgtoa@u+3
  4755  001862                     
  4756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4757  001862  0100               	movlb	0	; () banked
  4758  001864  0770               	decf	efgtoa@ne& (0+255),f,b
  4759  001866  A0D8               	btfss	status,0,c
  4760  001868  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  4761  00186A                     
  4762                           ; BSR set to: 0
  4763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4764  00186A  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4765  00186C  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4766  00186E                     l5034:
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4770  00186E  5172               	movf	efgtoa@m& (0+255),w,b
  4771  001870  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4772  001872  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4773  001874  0A80               	xorlw	128
  4774  001876  6E43               	movwf	??_efgtoa^0,c
  4775  001878  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4776  00187A  0A80               	xorlw	128
  4777  00187C  5843               	subwfb	??_efgtoa^0,w,c
  4778  00187E  B0D8               	btfsc	status,0,c
  4779  001880  EF44  F00C         	goto	u5831
  4780  001884  EF46  F00C         	goto	u5830
  4781  001888                     u5831:
  4782  001888  EF54  F00C         	goto	l5038
  4783  00188C                     u5830:
  4784  00188C                     
  4785                           ; BSR set to: 0
  4786  00188C  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4787  00188E  EF52  F00C         	goto	u5841
  4788  001892  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4789  001894  E109               	bnz	u5840
  4790  001896  0E4B               	movlw	75
  4791  001898  5D92               	subwf	efgtoa@n& (0+255),w,b
  4792  00189A  A0D8               	btfss	status,0,c
  4793  00189C  EF52  F00C         	goto	u5841
  4794  0018A0  EF54  F00C         	goto	u5840
  4795  0018A4                     u5841:
  4796  0018A4  EF4A  F00B         	goto	l4986
  4797  0018A8                     u5840:
  4798  0018A8                     l5038:
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4802  0018A8  516E               	movf	efgtoa@pp& (0+255),w,b
  4803  0018AA  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4804  0018AC  A4D8               	btfss	status,2,c
  4805  0018AE  EF5B  F00C         	goto	u5851
  4806  0018B2  EF5D  F00C         	goto	u5850
  4807  0018B6                     u5851:
  4808  0018B6  EF6E  F00C         	goto	l5046
  4809  0018BA                     u5850:
  4810  0018BA                     
  4811                           ; BSR set to: 0
  4812  0018BA  A9F0               	btfss	_flags& (0+255),4,b
  4813  0018BC  EF62  F00C         	goto	u5861
  4814  0018C0  EF64  F00C         	goto	u5860
  4815  0018C4                     u5861:
  4816  0018C4  EF6E  F00C         	goto	l5046
  4817  0018C8                     u5860:
  4818  0018C8                     
  4819                           ; BSR set to: 0
  4820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4821  0018C8  0E9A               	movlw	low _dbuf
  4822  0018CA  2592               	addwf	efgtoa@n& (0+255),w,b
  4823  0018CC  6ED9               	movwf	fsr2l,c
  4824  0018CE  0E01               	movlw	high _dbuf
  4825  0018D0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4826  0018D2  6EDA               	movwf	fsr2h,c
  4827  0018D4  0E2E               	movlw	46
  4828  0018D6  6EDF               	movwf	indf2,c
  4829  0018D8                     
  4830                           ; BSR set to: 0
  4831  0018D8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4832  0018DA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4833  0018DC                     l5046:
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4837  0018DC  0E9A               	movlw	low _dbuf
  4838  0018DE  2592               	addwf	efgtoa@n& (0+255),w,b
  4839  0018E0  6ED9               	movwf	fsr2l,c
  4840  0018E2  0E01               	movlw	high _dbuf
  4841  0018E4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4842  0018E6  6EDA               	movwf	fsr2h,c
  4843  0018E8  0E00               	movlw	0
  4844  0018EA  6EDF               	movwf	indf2,c
  4845  0018EC                     
  4846                           ; BSR set to: 0
  4847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4848  0018EC  0E65               	movlw	101
  4849  0018EE  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4850  0018F0  A4D8               	btfss	status,2,c
  4851  0018F2  EF7D  F00C         	goto	u5871
  4852  0018F6  EF7F  F00C         	goto	u5870
  4853  0018FA                     u5871:
  4854  0018FA  EFD9  F007         	goto	l4848
  4855  0018FE                     u5870:
  4856  0018FE                     
  4857                           ; BSR set to: 0
  4858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4859  0018FE  0E00               	movlw	0
  4860  001900  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4861  001902  0E4F               	movlw	79
  4862  001904  6F8A               	movwf	efgtoa@i& (0+255),b
  4863  001906                     
  4864                           ; BSR set to: 0
  4865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4866  001906  0E9A               	movlw	low _dbuf
  4867  001908  258A               	addwf	efgtoa@i& (0+255),w,b
  4868  00190A  6ED9               	movwf	fsr2l,c
  4869  00190C  0E01               	movlw	high _dbuf
  4870  00190E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4871  001910  6EDA               	movwf	fsr2h,c
  4872  001912  0E00               	movlw	0
  4873  001914  6EDF               	movwf	indf2,c
  4874  001916                     
  4875                           ; BSR set to: 0
  4876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4877  001916  0E00               	movlw	0
  4878  001918  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4879  00191A  0E00               	movlw	0
  4880  00191C  6F7A               	movwf	efgtoa@sign& (0+255),b
  4881  00191E                     
  4882                           ; BSR set to: 0
  4883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4884  00191E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4885  001920  EF96  F00C         	goto	u5880
  4886  001924  EF94  F00C         	goto	u5881
  4887  001928                     u5881:
  4888  001928  EF9E  F00C         	goto	l5062
  4889  00192C                     u5880:
  4890  00192C                     
  4891                           ; BSR set to: 0
  4892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4893  00192C  0E00               	movlw	0
  4894  00192E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4895  001930  0E01               	movlw	1
  4896  001932  6F7A               	movwf	efgtoa@sign& (0+255),b
  4897  001934                     
  4898                           ; BSR set to: 0
  4899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4900  001934  6D90               	negf	efgtoa@e& (0+255),b
  4901  001936  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4902  001938  B0D8               	btfsc	status,0,c
  4903  00193A  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4904  00193C                     l5062:
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4908  00193C  0E00               	movlw	0
  4909  00193E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4910  001940  0E02               	movlw	2
  4911  001942  6F7C               	movwf	efgtoa@p& (0+255),b
  4912                           
  4913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4914  001944  EFCF  F00C         	goto	l5074
  4915  001948                     l5064:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4919  001948  078A               	decf	efgtoa@i& (0+255),f,b
  4920  00194A  A0D8               	btfss	status,0,c
  4921  00194C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4922  00194E                     
  4923                           ; BSR set to: 0
  4924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4925  00194E  0E9A               	movlw	low _dbuf
  4926  001950  258A               	addwf	efgtoa@i& (0+255),w,b
  4927  001952  6ED9               	movwf	fsr2l,c
  4928  001954  0E01               	movlw	high _dbuf
  4929  001956  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4930  001958  6EDA               	movwf	fsr2h,c
  4931  00195A  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4932  00195E  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4933  001962  0E00               	movlw	0
  4934  001964  6E04               	movwf	(___awmod@divisor+1)^0,c
  4935  001966  0E0A               	movlw	10
  4936  001968  6E03               	movwf	___awmod@divisor^0,c
  4937  00196A  ECE7  F028         	call	___awmod	;wreg free
  4938  00196E  5001               	movf	?___awmod^0,w,c
  4939  001970  0F30               	addlw	48
  4940  001972  6EDF               	movwf	indf2,c
  4941  001974                     
  4942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4943  001974  C090  F007         	movff	efgtoa@e,___awdiv@dividend
  4944  001978  C091  F008         	movff	efgtoa@e+1,___awdiv@dividend+1
  4945  00197C  0E00               	movlw	0
  4946  00197E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4947  001980  0E0A               	movlw	10
  4948  001982  6E09               	movwf	___awdiv@divisor^0,c
  4949  001984  EC85  F028         	call	___awdiv	;wreg free
  4950  001988  C007  F090         	movff	?___awdiv,efgtoa@e
  4951  00198C  C008  F091         	movff	?___awdiv+1,efgtoa@e+1
  4952  001990                     
  4953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4954  001990  0100               	movlb	0	; () banked
  4955  001992  077C               	decf	efgtoa@p& (0+255),f,b
  4956  001994  A0D8               	btfss	status,0,c
  4957  001996  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4958  001998                     
  4959                           ; BSR set to: 0
  4960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4961  001998  077E               	decf	efgtoa@w& (0+255),f,b
  4962  00199A  A0D8               	btfss	status,0,c
  4963  00199C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4964  00199E                     l5074:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4968  00199E  5190               	movf	efgtoa@e& (0+255),w,b
  4969  0019A0  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4970  0019A2  A4D8               	btfss	status,2,c
  4971  0019A4  EFD6  F00C         	goto	u5891
  4972  0019A8  EFD8  F00C         	goto	u5890
  4973  0019AC                     u5891:
  4974  0019AC  EFA4  F00C         	goto	l5064
  4975  0019B0                     u5890:
  4976  0019B0                     
  4977                           ; BSR set to: 0
  4978  0019B0  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4979  0019B2  EFE5  F00C         	goto	u5900
  4980  0019B6  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4981  0019B8  E106               	bnz	u5901
  4982  0019BA  057C               	decf	efgtoa@p& (0+255),w,b
  4983  0019BC  B0D8               	btfsc	status,0,c
  4984  0019BE  EFE3  F00C         	goto	u5901
  4985  0019C2  EFE5  F00C         	goto	u5900
  4986  0019C6                     u5901:
  4987  0019C6  EFA4  F00C         	goto	l5064
  4988  0019CA                     u5900:
  4989  0019CA                     
  4990                           ; BSR set to: 0
  4991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4992  0019CA  078A               	decf	efgtoa@i& (0+255),f,b
  4993  0019CC  A0D8               	btfss	status,0,c
  4994  0019CE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4995  0019D0                     
  4996                           ; BSR set to: 0
  4997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4998  0019D0  517A               	movf	efgtoa@sign& (0+255),w,b
  4999  0019D2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5000  0019D4  A4D8               	btfss	status,2,c
  5001  0019D6  EFEF  F00C         	goto	u5911
  5002  0019DA  EFF1  F00C         	goto	u5910
  5003  0019DE                     u5911:
  5004  0019DE  EFF7  F00C         	goto	l5084
  5005  0019E2                     u5910:
  5006  0019E2                     
  5007                           ; BSR set to: 0
  5008  0019E2  0E00               	movlw	0
  5009  0019E4  6F67               	movwf	(_efgtoa$2957+1)& (0+255),b
  5010  0019E6  0E2B               	movlw	43
  5011  0019E8  6F66               	movwf	_efgtoa$2957& (0+255),b
  5012  0019EA  EFFB  F00C         	goto	l5086
  5013  0019EE                     l5084:
  5014                           
  5015                           ; BSR set to: 0
  5016  0019EE  0E00               	movlw	0
  5017  0019F0  6F67               	movwf	(_efgtoa$2957+1)& (0+255),b
  5018  0019F2  0E2D               	movlw	45
  5019  0019F4  6F66               	movwf	_efgtoa$2957& (0+255),b
  5020  0019F6                     l5086:
  5021                           
  5022                           ; BSR set to: 0
  5023  0019F6  0E9A               	movlw	low _dbuf
  5024  0019F8  258A               	addwf	efgtoa@i& (0+255),w,b
  5025  0019FA  6ED9               	movwf	fsr2l,c
  5026  0019FC  0E01               	movlw	high _dbuf
  5027  0019FE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5028  001A00  6EDA               	movwf	fsr2h,c
  5029  001A02  C066  FFDF         	movff	_efgtoa$2957,indf2
  5030  001A06                     
  5031                           ; BSR set to: 0
  5032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5033  001A06  077E               	decf	efgtoa@w& (0+255),f,b
  5034  001A08  A0D8               	btfss	status,0,c
  5035  001A0A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5036  001A0C                     
  5037                           ; BSR set to: 0
  5038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5039  001A0C  078A               	decf	efgtoa@i& (0+255),f,b
  5040  001A0E  A0D8               	btfss	status,0,c
  5041  001A10  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5042  001A12                     
  5043                           ; BSR set to: 0
  5044  001A12  0EBF               	movlw	191
  5045  001A14  6E43               	movwf	??_efgtoa^0,c
  5046  001A16  0EFF               	movlw	255
  5047  001A18  6E44               	movwf	(??_efgtoa+1)^0,c
  5048  001A1A  5042               	movf	efgtoa@c^0,w,c
  5049  001A1C  6E45               	movwf	(??_efgtoa+2)^0,c
  5050  001A1E  6A46               	clrf	(??_efgtoa+3)^0,c
  5051  001A20  5043               	movf	??_efgtoa^0,w,c
  5052  001A22  2645               	addwf	(??_efgtoa+2)^0,f,c
  5053  001A24  5044               	movf	(??_efgtoa+1)^0,w,c
  5054  001A26  2246               	addwfc	(??_efgtoa+3)^0,f,c
  5055  001A28  5046               	movf	(??_efgtoa+3)^0,w,c
  5056  001A2A  E10A               	bnz	u5920
  5057  001A2C  0E1A               	movlw	26
  5058  001A2E  5C45               	subwf	(??_efgtoa+2)^0,w,c
  5059  001A30  A0D8               	btfss	status,0,c
  5060  001A32  EF1D  F00D         	goto	u5921
  5061  001A36  EF20  F00D         	goto	u5920
  5062  001A3A                     u5921:
  5063  001A3A  0E01               	movlw	1
  5064  001A3C  EF21  F00D         	goto	u5930
  5065  001A40                     u5920:
  5066  001A40  0E00               	movlw	0
  5067  001A42                     u5930:
  5068  001A42  6F6A               	movwf	_efgtoa$2959& (0+255),b
  5069  001A44  6B6B               	clrf	(_efgtoa$2959+1)& (0+255),b
  5070  001A46                     
  5071                           ; BSR set to: 0
  5072  001A46  516A               	movf	_efgtoa$2959& (0+255),w,b
  5073  001A48  116B               	iorwf	(_efgtoa$2959+1)& (0+255),w,b
  5074  001A4A  A4D8               	btfss	status,2,c
  5075  001A4C  EF2A  F00D         	goto	u5941
  5076  001A50  EF2C  F00D         	goto	u5940
  5077  001A54                     u5941:
  5078  001A54  EF32  F00D         	goto	l5100
  5079  001A58                     u5940:
  5080  001A58                     
  5081                           ; BSR set to: 0
  5082  001A58  0E00               	movlw	0
  5083  001A5A  6F69               	movwf	(_efgtoa$2958+1)& (0+255),b
  5084  001A5C  0E65               	movlw	101
  5085  001A5E  6F68               	movwf	_efgtoa$2958& (0+255),b
  5086  001A60  EF36  F00D         	goto	l5102
  5087  001A64                     l5100:
  5088                           
  5089                           ; BSR set to: 0
  5090  001A64  0E00               	movlw	0
  5091  001A66  6F69               	movwf	(_efgtoa$2958+1)& (0+255),b
  5092  001A68  0E45               	movlw	69
  5093  001A6A  6F68               	movwf	_efgtoa$2958& (0+255),b
  5094  001A6C                     l5102:
  5095                           
  5096                           ; BSR set to: 0
  5097  001A6C  0E9A               	movlw	low _dbuf
  5098  001A6E  258A               	addwf	efgtoa@i& (0+255),w,b
  5099  001A70  6ED9               	movwf	fsr2l,c
  5100  001A72  0E01               	movlw	high _dbuf
  5101  001A74  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5102  001A76  6EDA               	movwf	fsr2h,c
  5103  001A78  C068  FFDF         	movff	_efgtoa$2958,indf2
  5104  001A7C                     
  5105                           ; BSR set to: 0
  5106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5107  001A7C  077E               	decf	efgtoa@w& (0+255),f,b
  5108  001A7E  A0D8               	btfss	status,0,c
  5109  001A80  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5110  001A82                     
  5111                           ; BSR set to: 0
  5112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5113  001A82  0E9A               	movlw	low _dbuf
  5114  001A84  2592               	addwf	efgtoa@n& (0+255),w,b
  5115  001A86  6E01               	movwf	strcpy@dest^0,c
  5116  001A88  0E01               	movlw	high _dbuf
  5117  001A8A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5118  001A8C  6E02               	movwf	(strcpy@dest+1)^0,c
  5119  001A8E  0E9A               	movlw	low _dbuf
  5120  001A90  258A               	addwf	efgtoa@i& (0+255),w,b
  5121  001A92  6E03               	movwf	strcpy@src^0,c
  5122  001A94  0E01               	movlw	high _dbuf
  5123  001A96  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5124  001A98  6E04               	movwf	(strcpy@src+1)^0,c
  5125  001A9A  EC20  F02B         	call	_strcpy	;wreg free
  5126  001A9E  EFD9  F007         	goto	l4848
  5127  001AA2                     l1396:
  5128  001AA2  0012               	return		;funcret
  5129  001AA4                     __end_of_efgtoa:
  5130                           	callstack 0
  5131                           
  5132 ;; *************** function _tolower *****************
  5133 ;; Defined at:
  5134 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;  c               2    6[COMRAM] int 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;		None
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  2    6[COMRAM] int 
  5141 ;; Registers used:
  5142 ;;		wreg, status,2, status,0
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5152 ;;Total ram usage:        8 bytes
  5153 ;; Hardware stack levels used: 1
  5154 ;; Hardware stack levels required when called: 1
  5155 ;; This function calls:
  5156 ;;		_isupper
  5157 ;; This function is called by:
  5158 ;;		_efgtoa
  5159 ;;		_vfpfcnvrt
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text13
  5164  0055E0                     __ptext13:
  5165                           	callstack 0
  5166  0055E0                     _tolower:
  5167                           	callstack 25
  5168  0055E0  0EBF               	movlw	191
  5169  0055E2  6E09               	movwf	??_tolower^0,c
  5170  0055E4  0EFF               	movlw	255
  5171  0055E6  6E0A               	movwf	(??_tolower+1)^0,c
  5172  0055E8  C007  F00B         	movff	tolower@c,??_tolower+2
  5173  0055EC  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5174  0055F0  5009               	movf	??_tolower^0,w,c
  5175  0055F2  260B               	addwf	(??_tolower+2)^0,f,c
  5176  0055F4  500A               	movf	(??_tolower+1)^0,w,c
  5177  0055F6  220C               	addwfc	(??_tolower+3)^0,f,c
  5178  0055F8  500C               	movf	(??_tolower+3)^0,w,c
  5179  0055FA  E10A               	bnz	u5070
  5180  0055FC  0E1A               	movlw	26
  5181  0055FE  5C0B               	subwf	(??_tolower+2)^0,w,c
  5182  005600  A0D8               	btfss	status,0,c
  5183  005602  EF05  F02B         	goto	u5071
  5184  005606  EF08  F02B         	goto	u5070
  5185  00560A                     u5071:
  5186  00560A  0E01               	movlw	1
  5187  00560C  EF09  F02B         	goto	u5080
  5188  005610                     u5070:
  5189  005610  0E00               	movlw	0
  5190  005612                     u5080:
  5191  005612  6E0D               	movwf	_tolower$3109^0,c
  5192  005614  6A0E               	clrf	(_tolower$3109+1)^0,c
  5193  005616  500D               	movf	_tolower$3109^0,w,c
  5194  005618  100E               	iorwf	(_tolower$3109+1)^0,w,c
  5195  00561A  B4D8               	btfsc	status,2,c
  5196  00561C  EF12  F02B         	goto	u5091
  5197  005620  EF14  F02B         	goto	u5090
  5198  005624                     u5091:
  5199  005624  EF1B  F02B         	goto	l1636
  5200  005628                     u5090:
  5201  005628  0E20               	movlw	32
  5202  00562A  1007               	iorwf	tolower@c^0,w,c
  5203  00562C  6E07               	movwf	?_tolower^0,c
  5204  00562E  5008               	movf	(tolower@c+1)^0,w,c
  5205  005630  6E08               	movwf	(?_tolower+1)^0,c
  5206  005632  EF1F  F02B         	goto	l1641
  5207  005636                     l1636:
  5208  005636  C007  F007         	movff	tolower@c,?_tolower
  5209  00563A  C008  F008         	movff	tolower@c+1,?_tolower+1
  5210  00563E                     l1641:
  5211  00563E  0012               	return		;funcret
  5212  005640                     __end_of_tolower:
  5213                           	callstack 0
  5214                           
  5215 ;; *************** function _isupper *****************
  5216 ;; Defined at:
  5217 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  c               2    0[COMRAM] int 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  2    0[COMRAM] int 
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5234 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5235 ;;Total ram usage:        6 bytes
  5236 ;; Hardware stack levels used: 1
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_efgtoa
  5241 ;;		_vfpfcnvrt
  5242 ;;		_tolower
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text14
  5247  005B14                     __ptext14:
  5248                           	callstack 0
  5249  005B14                     _isupper:
  5250                           	callstack 25
  5251  005B14  0EBF               	movlw	191
  5252  005B16  6E03               	movwf	??_isupper^0,c
  5253  005B18  0EFF               	movlw	255
  5254  005B1A  6E04               	movwf	(??_isupper+1)^0,c
  5255  005B1C  C001  F005         	movff	isupper@c,??_isupper+2
  5256  005B20  C002  F006         	movff	isupper@c+1,??_isupper+3
  5257  005B24  5003               	movf	??_isupper^0,w,c
  5258  005B26  2605               	addwf	(??_isupper+2)^0,f,c
  5259  005B28  5004               	movf	(??_isupper+1)^0,w,c
  5260  005B2A  2206               	addwfc	(??_isupper+3)^0,f,c
  5261  005B2C  5006               	movf	(??_isupper+3)^0,w,c
  5262  005B2E  E10A               	bnz	u4080
  5263  005B30  0E1A               	movlw	26
  5264  005B32  5C05               	subwf	(??_isupper+2)^0,w,c
  5265  005B34  A0D8               	btfss	status,0,c
  5266  005B36  EF9F  F02D         	goto	u4081
  5267  005B3A  EFA2  F02D         	goto	u4080
  5268  005B3E                     u4081:
  5269  005B3E  0E01               	movlw	1
  5270  005B40  EFA3  F02D         	goto	u4090
  5271  005B44                     u4080:
  5272  005B44  0E00               	movlw	0
  5273  005B46                     u4090:
  5274  005B46  6E01               	movwf	?_isupper^0,c
  5275  005B48  6A02               	clrf	(?_isupper+1)^0,c
  5276  005B4A  0012               	return		;funcret
  5277  005B4C                     __end_of_isupper:
  5278                           	callstack 0
  5279                           
  5280 ;; *************** function _strcpy *****************
  5281 ;; Defined at:
  5282 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5285 ;;		 -> dbuf(80), 
  5286 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5287 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  5288 ;;		 -> dbuf(80), 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  d               2    8[COMRAM] PTR unsigned char 
  5291 ;;		 -> dbuf(80), 
  5292 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5293 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  5294 ;;		 -> dbuf(80), 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  2    0[COMRAM] PTR unsigned char 
  5297 ;; Registers used:
  5298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5305 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5307 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5308 ;;Total ram usage:       10 bytes
  5309 ;; Hardware stack levels used: 1
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		_efgtoa
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text15
  5318  005640                     __ptext15:
  5319                           	callstack 0
  5320  005640                     _strcpy:
  5321                           	callstack 25
  5322  005640  C003  F007         	movff	strcpy@src,strcpy@s
  5323  005644  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5324  005648  C001  F009         	movff	strcpy@dest,strcpy@d
  5325  00564C  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5326  005650                     l4682:
  5327  005650  5007               	movf	strcpy@s^0,w,c
  5328  005652  6E05               	movwf	??_strcpy^0,c
  5329  005654  5008               	movf	(strcpy@s+1)^0,w,c
  5330  005656  6E06               	movwf	(??_strcpy+1)^0,c
  5331  005658  4A07               	infsnz	strcpy@s^0,f,c
  5332  00565A  2A08               	incf	(strcpy@s+1)^0,f,c
  5333  00565C  C005  FFF6         	movff	??_strcpy,tblptrl
  5334  005660  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5335  005664  0E00               	movlw	low (__smallconst shr (0+16))
  5336  005666  6EF8               	movwf	tblptru,c
  5337  005668  C009  FFD9         	movff	strcpy@d,fsr2l
  5338  00566C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5339  005670  4A09               	infsnz	strcpy@d^0,f,c
  5340  005672  2A0A               	incf	(strcpy@d+1)^0,f,c
  5341  005674  0E0D               	movlw	(high __ramtop+-1)
  5342  005676  64F7               	cpfsgt	tblptrh,c
  5343  005678  D003               	bra	u5057
  5344  00567A  0008               	tblrd		*
  5345  00567C  50F5               	movf	tablat,w,c
  5346  00567E  D005               	bra	u5050
  5347  005680                     u5057:
  5348  005680  CFF6 FFE1          	movff	tblptrl,fsr1l
  5349  005684  CFF7 FFE2          	movff	tblptrh,fsr1h
  5350  005688  50E7               	movf	indf1,w,c
  5351  00568A                     u5050:
  5352  00568A  6EDF               	movwf	indf2,c
  5353  00568C  50DF               	movf	indf2,w,c
  5354  00568E  A4D8               	btfss	status,2,c
  5355  005690  EF4C  F02B         	goto	u5061
  5356  005694  EF4E  F02B         	goto	u5060
  5357  005698                     u5061:
  5358  005698  EF28  F02B         	goto	l4682
  5359  00569C                     u5060:
  5360  00569C  0012               	return		;funcret
  5361  00569E                     __end_of_strcpy:
  5362                           	callstack 0
  5363                           
  5364 ;; *************** function _floorf *****************
  5365 ;; Defined at:
  5366 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  x               4   39[COMRAM] float 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  u               4   55[COMRAM] struct .
  5371 ;;  m               4   49[COMRAM] unsigned long 
  5372 ;;  e               2   53[COMRAM] int 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  4   39[COMRAM] float 
  5375 ;; Registers used:
  5376 ;;		wreg, status,2, status,0
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5383 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5384 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5385 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5386 ;;Total ram usage:       20 bytes
  5387 ;; Hardware stack levels used: 1
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_efgtoa
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text16
  5396  003A1E                     __ptext16:
  5397                           	callstack 0
  5398  003A1E                     _floorf:
  5399                           	callstack 25
  5400  003A1E  C190  F038         	movff	floorf@F527,floorf@u
  5401  003A22  C191  F039         	movff	floorf@F527+1,floorf@u+1
  5402  003A26  C192  F03A         	movff	floorf@F527+2,floorf@u+2
  5403  003A2A  C193  F03B         	movff	floorf@F527+3,floorf@u+3
  5404  003A2E  C028  F038         	movff	floorf@x,floorf@u
  5405  003A32  C029  F039         	movff	floorf@x+1,floorf@u+1
  5406  003A36  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  5407  003A3A  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  5408  003A3E  0E81               	movlw	129
  5409  003A40  6E2C               	movwf	??_floorf^0,c
  5410  003A42  0EFF               	movlw	255
  5411  003A44  6E2D               	movwf	(??_floorf+1)^0,c
  5412  003A46  C038  F02E         	movff	floorf@u,??_floorf+2
  5413  003A4A  C039  F02F         	movff	floorf@u+1,??_floorf+3
  5414  003A4E  C03A  F030         	movff	floorf@u+2,??_floorf+4
  5415  003A52  C03B  F031         	movff	floorf@u+3,??_floorf+5
  5416  003A56  0E18               	movlw	24
  5417  003A58  EF33  F01D         	goto	u5100
  5418  003A5C                     u5105:
  5419  003A5C  90D8               	bcf	status,0,c
  5420  003A5E  3231               	rrcf	(??_floorf+5)^0,f,c
  5421  003A60  3230               	rrcf	(??_floorf+4)^0,f,c
  5422  003A62  322F               	rrcf	(??_floorf+3)^0,f,c
  5423  003A64  322E               	rrcf	(??_floorf+2)^0,f,c
  5424  003A66                     u5100:
  5425  003A66  2EE8               	decfsz	wreg,f,c
  5426  003A68  EF2E  F01D         	goto	u5105
  5427  003A6C  502E               	movf	(??_floorf+2)^0,w,c
  5428  003A6E  242C               	addwf	??_floorf^0,w,c
  5429  003A70  6E36               	movwf	floorf@e^0,c
  5430  003A72  0E00               	movlw	0
  5431  003A74  202D               	addwfc	(??_floorf+1)^0,w,c
  5432  003A76  6E37               	movwf	(floorf@e+1)^0,c
  5433  003A78  BE37               	btfsc	(floorf@e+1)^0,7,c
  5434  003A7A  EF48  F01D         	goto	u5111
  5435  003A7E  5037               	movf	(floorf@e+1)^0,w,c
  5436  003A80  E109               	bnz	u5110
  5437  003A82  0E17               	movlw	23
  5438  003A84  5C36               	subwf	floorf@e^0,w,c
  5439  003A86  A0D8               	btfss	status,0,c
  5440  003A88  EF48  F01D         	goto	u5111
  5441  003A8C  EF4A  F01D         	goto	u5110
  5442  003A90                     u5111:
  5443  003A90  EF54  F01D         	goto	l4700
  5444  003A94                     u5110:
  5445  003A94                     l4698:
  5446  003A94  C028  F028         	movff	floorf@x,?_floorf
  5447  003A98  C029  F029         	movff	floorf@x+1,?_floorf+1
  5448  003A9C  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  5449  003AA0  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  5450  003AA4  EF17  F01E         	goto	l1560
  5451  003AA8                     l4700:
  5452  003AA8  BE37               	btfsc	(floorf@e+1)^0,7,c
  5453  003AAA  EF59  F01D         	goto	u5121
  5454  003AAE  EF5B  F01D         	goto	u5120
  5455  003AB2                     u5121:
  5456  003AB2  EFCB  F01D         	goto	l4710
  5457  003AB6                     u5120:
  5458  003AB6  C036  F02C         	movff	floorf@e,??_floorf
  5459  003ABA  0EFF               	movlw	255
  5460  003ABC  6E2D               	movwf	(??_floorf+1)^0,c
  5461  003ABE  0EFF               	movlw	255
  5462  003AC0  6E2E               	movwf	(??_floorf+2)^0,c
  5463  003AC2  0E7F               	movlw	127
  5464  003AC4  6E2F               	movwf	(??_floorf+3)^0,c
  5465  003AC6  0E00               	movlw	0
  5466  003AC8  6E30               	movwf	(??_floorf+4)^0,c
  5467  003ACA                     u5135:
  5468  003ACA  662C               	tstfsz	??_floorf^0,c
  5469  003ACC  EF6A  F01D         	goto	u5136
  5470  003AD0  EF72  F01D         	goto	u5137
  5471  003AD4                     u5136:
  5472  003AD4  3430               	rlcf	(??_floorf+4)^0,w,c
  5473  003AD6  3230               	rrcf	(??_floorf+4)^0,f,c
  5474  003AD8  322F               	rrcf	(??_floorf+3)^0,f,c
  5475  003ADA  322E               	rrcf	(??_floorf+2)^0,f,c
  5476  003ADC  322D               	rrcf	(??_floorf+1)^0,f,c
  5477  003ADE  2E2C               	decfsz	??_floorf^0,f,c
  5478  003AE0  EF65  F01D         	goto	u5135
  5479  003AE4                     u5137:
  5480  003AE4  C02D  F032         	movff	??_floorf+1,floorf@m
  5481  003AE8  C02E  F033         	movff	??_floorf+2,floorf@m+1
  5482  003AEC  C02F  F034         	movff	??_floorf+3,floorf@m+2
  5483  003AF0  C030  F035         	movff	??_floorf+4,floorf@m+3
  5484  003AF4  5032               	movf	floorf@m^0,w,c
  5485  003AF6  1438               	andwf	floorf@u^0,w,c
  5486  003AF8  6E2C               	movwf	??_floorf^0,c
  5487  003AFA  5033               	movf	(floorf@m+1)^0,w,c
  5488  003AFC  1439               	andwf	(floorf@u+1)^0,w,c
  5489  003AFE  6E2D               	movwf	(??_floorf+1)^0,c
  5490  003B00  5034               	movf	(floorf@m+2)^0,w,c
  5491  003B02  143A               	andwf	(floorf@u+2)^0,w,c
  5492  003B04  6E2E               	movwf	(??_floorf+2)^0,c
  5493  003B06  5035               	movf	(floorf@m+3)^0,w,c
  5494  003B08  143B               	andwf	(floorf@u+3)^0,w,c
  5495  003B0A  6E2F               	movwf	(??_floorf+3)^0,c
  5496  003B0C  502C               	movf	??_floorf^0,w,c
  5497  003B0E  102D               	iorwf	(??_floorf+1)^0,w,c
  5498  003B10  102E               	iorwf	(??_floorf+2)^0,w,c
  5499  003B12  102F               	iorwf	(??_floorf+3)^0,w,c
  5500  003B14  A4D8               	btfss	status,2,c
  5501  003B16  EF8F  F01D         	goto	u5141
  5502  003B1A  EF91  F01D         	goto	u5140
  5503  003B1E                     u5141:
  5504  003B1E  EF93  F01D         	goto	l4706
  5505  003B22                     u5140:
  5506  003B22  EF4A  F01D         	goto	l4698
  5507  003B26                     l4706:
  5508  003B26  C038  F02C         	movff	floorf@u,??_floorf
  5509  003B2A  C039  F02D         	movff	floorf@u+1,??_floorf+1
  5510  003B2E  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  5511  003B32  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  5512  003B36  0E20               	movlw	32
  5513  003B38  EFA3  F01D         	goto	u5150
  5514  003B3C                     u5155:
  5515  003B3C  90D8               	bcf	status,0,c
  5516  003B3E  322F               	rrcf	(??_floorf+3)^0,f,c
  5517  003B40  322E               	rrcf	(??_floorf+2)^0,f,c
  5518  003B42  322D               	rrcf	(??_floorf+1)^0,f,c
  5519  003B44  322C               	rrcf	??_floorf^0,f,c
  5520  003B46                     u5150:
  5521  003B46  2EE8               	decfsz	wreg,f,c
  5522  003B48  EF9E  F01D         	goto	u5155
  5523  003B4C  502C               	movf	??_floorf^0,w,c
  5524  003B4E  102D               	iorwf	(??_floorf+1)^0,w,c
  5525  003B50  102E               	iorwf	(??_floorf+2)^0,w,c
  5526  003B52  102F               	iorwf	(??_floorf+3)^0,w,c
  5527  003B54  B4D8               	btfsc	status,2,c
  5528  003B56  EFAF  F01D         	goto	u5161
  5529  003B5A  EFB1  F01D         	goto	u5160
  5530  003B5E                     u5161:
  5531  003B5E  EFB9  F01D         	goto	l1563
  5532  003B62                     u5160:
  5533  003B62  5032               	movf	floorf@m^0,w,c
  5534  003B64  2638               	addwf	floorf@u^0,f,c
  5535  003B66  5033               	movf	(floorf@m+1)^0,w,c
  5536  003B68  2239               	addwfc	(floorf@u+1)^0,f,c
  5537  003B6A  5034               	movf	(floorf@m+2)^0,w,c
  5538  003B6C  223A               	addwfc	(floorf@u+2)^0,f,c
  5539  003B6E  5035               	movf	(floorf@m+3)^0,w,c
  5540  003B70  223B               	addwfc	(floorf@u+3)^0,f,c
  5541  003B72                     l1563:
  5542  003B72  1C32               	comf	floorf@m^0,w,c
  5543  003B74  6E2C               	movwf	??_floorf^0,c
  5544  003B76  1C33               	comf	(floorf@m+1)^0,w,c
  5545  003B78  6E2D               	movwf	(??_floorf+1)^0,c
  5546  003B7A  1C34               	comf	(floorf@m+2)^0,w,c
  5547  003B7C  6E2E               	movwf	(??_floorf+2)^0,c
  5548  003B7E  1C35               	comf	(floorf@m+3)^0,w,c
  5549  003B80  6E2F               	movwf	(??_floorf+3)^0,c
  5550  003B82  502C               	movf	??_floorf^0,w,c
  5551  003B84  1638               	andwf	floorf@u^0,f,c
  5552  003B86  502D               	movf	(??_floorf+1)^0,w,c
  5553  003B88  1639               	andwf	(floorf@u+1)^0,f,c
  5554  003B8A  502E               	movf	(??_floorf+2)^0,w,c
  5555  003B8C  163A               	andwf	(floorf@u+2)^0,f,c
  5556  003B8E  502F               	movf	(??_floorf+3)^0,w,c
  5557  003B90  163B               	andwf	(floorf@u+3)^0,f,c
  5558  003B92  EF0F  F01E         	goto	l4718
  5559  003B96                     l4710:
  5560  003B96  C038  F02C         	movff	floorf@u,??_floorf
  5561  003B9A  C039  F02D         	movff	floorf@u+1,??_floorf+1
  5562  003B9E  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  5563  003BA2  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  5564  003BA6  0E20               	movlw	32
  5565  003BA8  EFDB  F01D         	goto	u5170
  5566  003BAC                     u5175:
  5567  003BAC  90D8               	bcf	status,0,c
  5568  003BAE  322F               	rrcf	(??_floorf+3)^0,f,c
  5569  003BB0  322E               	rrcf	(??_floorf+2)^0,f,c
  5570  003BB2  322D               	rrcf	(??_floorf+1)^0,f,c
  5571  003BB4  322C               	rrcf	??_floorf^0,f,c
  5572  003BB6                     u5170:
  5573  003BB6  2EE8               	decfsz	wreg,f,c
  5574  003BB8  EFD6  F01D         	goto	u5175
  5575  003BBC  502C               	movf	??_floorf^0,w,c
  5576  003BBE  102D               	iorwf	(??_floorf+1)^0,w,c
  5577  003BC0  102E               	iorwf	(??_floorf+2)^0,w,c
  5578  003BC2  102F               	iorwf	(??_floorf+3)^0,w,c
  5579  003BC4  A4D8               	btfss	status,2,c
  5580  003BC6  EFE7  F01D         	goto	u5181
  5581  003BCA  EFE9  F01D         	goto	u5180
  5582  003BCE                     u5181:
  5583  003BCE  EFF3  F01D         	goto	l4714
  5584  003BD2                     u5180:
  5585  003BD2  0E00               	movlw	0
  5586  003BD4  6E38               	movwf	floorf@u^0,c
  5587  003BD6  0E00               	movlw	0
  5588  003BD8  6E39               	movwf	(floorf@u+1)^0,c
  5589  003BDA  0E00               	movlw	0
  5590  003BDC  6E3A               	movwf	(floorf@u+2)^0,c
  5591  003BDE  0E00               	movlw	0
  5592  003BE0  6E3B               	movwf	(floorf@u+3)^0,c
  5593  003BE2  EF0F  F01E         	goto	l4718
  5594  003BE6                     l4714:
  5595  003BE6  90D8               	bcf	status,0,c
  5596  003BE8  3438               	rlcf	floorf@u^0,w,c
  5597  003BEA  6E2C               	movwf	??_floorf^0,c
  5598  003BEC  3439               	rlcf	(floorf@u+1)^0,w,c
  5599  003BEE  6E2D               	movwf	(??_floorf+1)^0,c
  5600  003BF0  343A               	rlcf	(floorf@u+2)^0,w,c
  5601  003BF2  6E2E               	movwf	(??_floorf+2)^0,c
  5602  003BF4  343B               	rlcf	(floorf@u+3)^0,w,c
  5603  003BF6  6E2F               	movwf	(??_floorf+3)^0,c
  5604  003BF8  502C               	movf	??_floorf^0,w,c
  5605  003BFA  102D               	iorwf	(??_floorf+1)^0,w,c
  5606  003BFC  102E               	iorwf	(??_floorf+2)^0,w,c
  5607  003BFE  102F               	iorwf	(??_floorf+3)^0,w,c
  5608  003C00  B4D8               	btfsc	status,2,c
  5609  003C02  EF05  F01E         	goto	u5191
  5610  003C06  EF07  F01E         	goto	u5190
  5611  003C0A                     u5191:
  5612  003C0A  EF0F  F01E         	goto	l4718
  5613  003C0E                     u5190:
  5614  003C0E  0E00               	movlw	0
  5615  003C10  6E38               	movwf	floorf@u^0,c
  5616  003C12  0E00               	movlw	0
  5617  003C14  6E39               	movwf	(floorf@u+1)^0,c
  5618  003C16  0E80               	movlw	128
  5619  003C18  6E3A               	movwf	(floorf@u+2)^0,c
  5620  003C1A  0EBF               	movlw	191
  5621  003C1C  6E3B               	movwf	(floorf@u+3)^0,c
  5622  003C1E                     l4718:
  5623  003C1E  C038  F028         	movff	floorf@u,?_floorf
  5624  003C22  C039  F029         	movff	floorf@u+1,?_floorf+1
  5625  003C26  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  5626  003C2A  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  5627  003C2E                     l1560:
  5628  003C2E  0012               	return		;funcret
  5629  003C30                     __end_of_floorf:
  5630                           	callstack 0
  5631                           
  5632 ;; *************** function ___fpclassifyf *****************
  5633 ;; Defined at:
  5634 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  x               4    0[COMRAM] float 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  u               4   10[COMRAM] struct .
  5639 ;;  e               2    8[COMRAM] int 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  2    0[COMRAM] int 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5650 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5651 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5652 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5653 ;;Total ram usage:       14 bytes
  5654 ;; Hardware stack levels used: 1
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_efgtoa
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text17
  5663  004ABA                     __ptext17:
  5664                           	callstack 0
  5665  004ABA                     ___fpclassifyf:
  5666                           	callstack 25
  5667  004ABA  C194  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5668  004ABE  C195  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5669  004AC2  C196  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5670  004AC6  C197  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5671  004ACA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5672  004ACE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5673  004AD2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5674  004AD6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5675  004ADA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5676  004ADE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5677  004AE2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5678  004AE6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5679  004AEA  0E18               	movlw	24
  5680  004AEC  EF7D  F025         	goto	u4980
  5681  004AF0                     u4985:
  5682  004AF0  90D8               	bcf	status,0,c
  5683  004AF2  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5684  004AF4  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5685  004AF6  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5686  004AF8  3205               	rrcf	??___fpclassifyf^0,f,c
  5687  004AFA                     u4980:
  5688  004AFA  2EE8               	decfsz	wreg,f,c
  5689  004AFC  EF78  F025         	goto	u4985
  5690  004B00  5005               	movf	??___fpclassifyf^0,w,c
  5691  004B02  6E09               	movwf	___fpclassifyf@e^0,c
  5692  004B04  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5693  004B06  5009               	movf	___fpclassifyf@e^0,w,c
  5694  004B08  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5695  004B0A  A4D8               	btfss	status,2,c
  5696  004B0C  EF8A  F025         	goto	u4991
  5697  004B10  EF8C  F025         	goto	u4990
  5698  004B14                     u4991:
  5699  004B14  EFAC  F025         	goto	l4670
  5700  004B18                     u4990:
  5701  004B18  90D8               	bcf	status,0,c
  5702  004B1A  340B               	rlcf	___fpclassifyf@u^0,w,c
  5703  004B1C  6E05               	movwf	??___fpclassifyf^0,c
  5704  004B1E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5705  004B20  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5706  004B22  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5707  004B24  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5708  004B26  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5709  004B28  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5710  004B2A  5005               	movf	??___fpclassifyf^0,w,c
  5711  004B2C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5712  004B2E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5713  004B30  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5714  004B32  A4D8               	btfss	status,2,c
  5715  004B34  EF9E  F025         	goto	u5001
  5716  004B38  EFA0  F025         	goto	u5000
  5717  004B3C                     u5001:
  5718  004B3C  EFA6  F025         	goto	l4666
  5719  004B40                     u5000:
  5720  004B40  0E00               	movlw	0
  5721  004B42  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5722  004B44  0E02               	movlw	2
  5723  004B46  6E01               	movwf	?___fpclassifyf^0,c
  5724  004B48  EFDB  F025         	goto	l1515
  5725  004B4C                     l4666:
  5726  004B4C  0E00               	movlw	0
  5727  004B4E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5728  004B50  0E03               	movlw	3
  5729  004B52  6E01               	movwf	?___fpclassifyf^0,c
  5730  004B54  EFDB  F025         	goto	l1515
  5731  004B58                     l4670:
  5732  004B58  2809               	incf	___fpclassifyf@e^0,w,c
  5733  004B5A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5734  004B5C  A4D8               	btfss	status,2,c
  5735  004B5E  EFB3  F025         	goto	u5011
  5736  004B62  EFB5  F025         	goto	u5010
  5737  004B66                     u5011:
  5738  004B66  EFD7  F025         	goto	l4676
  5739  004B6A                     u5010:
  5740  004B6A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5741  004B6E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5742  004B72  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5743  004B76  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5744  004B7A  0E09               	movlw	9
  5745  004B7C                     u5025:
  5746  004B7C  90D8               	bcf	status,0,c
  5747  004B7E  3605               	rlcf	??___fpclassifyf^0,f,c
  5748  004B80  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5749  004B82  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5750  004B84  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5751  004B86  2EE8               	decfsz	wreg,f,c
  5752  004B88  EFBE  F025         	goto	u5025
  5753  004B8C  5005               	movf	??___fpclassifyf^0,w,c
  5754  004B8E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5755  004B90  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5756  004B92  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5757  004B94  B4D8               	btfsc	status,2,c
  5758  004B96  EFCF  F025         	goto	u5031
  5759  004B9A  EFD2  F025         	goto	u5030
  5760  004B9E                     u5031:
  5761  004B9E  0E01               	movlw	1
  5762  004BA0  EFD3  F025         	goto	u5040
  5763  004BA4                     u5030:
  5764  004BA4  0E00               	movlw	0
  5765  004BA6                     u5040:
  5766  004BA6  6E01               	movwf	?___fpclassifyf^0,c
  5767  004BA8  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5768  004BAA  EFDB  F025         	goto	l1515
  5769  004BAE                     l4676:
  5770  004BAE  0E00               	movlw	0
  5771  004BB0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5772  004BB2  0E04               	movlw	4
  5773  004BB4  6E01               	movwf	?___fpclassifyf^0,c
  5774  004BB6                     l1515:
  5775  004BB6  0012               	return		;funcret
  5776  004BB8                     __end_of___fpclassifyf:
  5777                           	callstack 0
  5778                           
  5779 ;; *************** function ___fltol *****************
  5780 ;; Defined at:
  5781 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  f1              4    0[COMRAM] int 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  exp1            1    9[COMRAM] unsigned char 
  5786 ;;  sign1           1    8[COMRAM] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  4    0[COMRAM] long 
  5789 ;; Registers used:
  5790 ;;		wreg, status,2, status,0
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5798 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5799 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5800 ;;Total ram usage:       10 bytes
  5801 ;; Hardware stack levels used: 1
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		_efgtoa
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text18
  5810  0048B0                     __ptext18:
  5811                           	callstack 0
  5812  0048B0                     ___fltol:
  5813                           	callstack 25
  5814  0048B0  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5815  0048B2  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5816  0048B4  6E0A               	movwf	___fltol@exp1^0,c
  5817  0048B6  500A               	movf	___fltol@exp1^0,w,c
  5818  0048B8  A4D8               	btfss	status,2,c
  5819  0048BA  EF61  F024         	goto	u4861
  5820  0048BE  EF63  F024         	goto	u4860
  5821  0048C2                     u4861:
  5822  0048C2  EF6D  F024         	goto	l4594
  5823  0048C6                     u4860:
  5824  0048C6                     l4590:
  5825  0048C6  0E00               	movlw	0
  5826  0048C8  6E01               	movwf	?___fltol^0,c
  5827  0048CA  0E00               	movlw	0
  5828  0048CC  6E02               	movwf	(?___fltol+1)^0,c
  5829  0048CE  0E00               	movlw	0
  5830  0048D0  6E03               	movwf	(?___fltol+2)^0,c
  5831  0048D2  0E00               	movlw	0
  5832  0048D4  6E04               	movwf	(?___fltol+3)^0,c
  5833  0048D6  EFDA  F024         	goto	l923
  5834  0048DA                     l4594:
  5835  0048DA  C001  F005         	movff	___fltol@f1,??___fltol
  5836  0048DE  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5837  0048E2  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5838  0048E6  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5839  0048EA  0E20               	movlw	32
  5840  0048EC  EF7D  F024         	goto	u4870
  5841  0048F0                     u4875:
  5842  0048F0  90D8               	bcf	status,0,c
  5843  0048F2  3208               	rrcf	(??___fltol+3)^0,f,c
  5844  0048F4  3207               	rrcf	(??___fltol+2)^0,f,c
  5845  0048F6  3206               	rrcf	(??___fltol+1)^0,f,c
  5846  0048F8  3205               	rrcf	??___fltol^0,f,c
  5847  0048FA                     u4870:
  5848  0048FA  2EE8               	decfsz	wreg,f,c
  5849  0048FC  EF78  F024         	goto	u4875
  5850  004900  5005               	movf	??___fltol^0,w,c
  5851  004902  6E09               	movwf	___fltol@sign1^0,c
  5852  004904  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5853  004906  0EFF               	movlw	255
  5854  004908  1601               	andwf	___fltol@f1^0,f,c
  5855  00490A  0EFF               	movlw	255
  5856  00490C  1602               	andwf	(___fltol@f1+1)^0,f,c
  5857  00490E  0EFF               	movlw	255
  5858  004910  1603               	andwf	(___fltol@f1+2)^0,f,c
  5859  004912  0E00               	movlw	0
  5860  004914  1604               	andwf	(___fltol@f1+3)^0,f,c
  5861  004916  0E96               	movlw	150
  5862  004918  5E0A               	subwf	___fltol@exp1^0,f,c
  5863  00491A  BE0A               	btfsc	___fltol@exp1^0,7,c
  5864  00491C  EF94  F024         	goto	u4880
  5865  004920  EF92  F024         	goto	u4881
  5866  004924                     u4881:
  5867  004924  EFAA  F024         	goto	l4614
  5868  004928                     u4880:
  5869  004928  500A               	movf	___fltol@exp1^0,w,c
  5870  00492A  0A80               	xorlw	128
  5871  00492C  0F97               	addlw	151
  5872  00492E  B0D8               	btfsc	status,0,c
  5873  004930  EF9C  F024         	goto	u4891
  5874  004934  EF9E  F024         	goto	u4890
  5875  004938                     u4891:
  5876  004938  EFA0  F024         	goto	l4610
  5877  00493C                     u4890:
  5878  00493C  EF63  F024         	goto	l4590
  5879  004940                     l4610:
  5880  004940  90D8               	bcf	status,0,c
  5881  004942  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5882  004944  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5883  004946  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5884  004948  3201               	rrcf	___fltol@f1^0,f,c
  5885  00494A  3E0A               	incfsz	___fltol@exp1^0,f,c
  5886  00494C  EFA0  F024         	goto	l4610
  5887  004950  EFC2  F024         	goto	l4624
  5888  004954                     l4614:
  5889  004954  0E1F               	movlw	31
  5890  004956  640A               	cpfsgt	___fltol@exp1^0,c
  5891  004958  EFB0  F024         	goto	u4901
  5892  00495C  EFB2  F024         	goto	u4900
  5893  004960                     u4901:
  5894  004960  EFBA  F024         	goto	l4622
  5895  004964                     u4900:
  5896  004964  EF63  F024         	goto	l4590
  5897  004968                     l4620:
  5898  004968  90D8               	bcf	status,0,c
  5899  00496A  3601               	rlcf	___fltol@f1^0,f,c
  5900  00496C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5901  00496E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5902  004970  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5903  004972  060A               	decf	___fltol@exp1^0,f,c
  5904  004974                     l4622:
  5905  004974  500A               	movf	___fltol@exp1^0,w,c
  5906  004976  A4D8               	btfss	status,2,c
  5907  004978  EFC0  F024         	goto	u4911
  5908  00497C  EFC2  F024         	goto	u4910
  5909  004980                     u4911:
  5910  004980  EFB4  F024         	goto	l4620
  5911  004984                     u4910:
  5912  004984                     l4624:
  5913  004984  5009               	movf	___fltol@sign1^0,w,c
  5914  004986  B4D8               	btfsc	status,2,c
  5915  004988  EFC8  F024         	goto	u4921
  5916  00498C  EFCA  F024         	goto	u4920
  5917  004990                     u4921:
  5918  004990  EFD2  F024         	goto	l4628
  5919  004994                     u4920:
  5920  004994  1E04               	comf	(___fltol@f1+3)^0,f,c
  5921  004996  1E03               	comf	(___fltol@f1+2)^0,f,c
  5922  004998  1E02               	comf	(___fltol@f1+1)^0,f,c
  5923  00499A  6C01               	negf	___fltol@f1^0,c
  5924  00499C  0E00               	movlw	0
  5925  00499E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5926  0049A0  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5927  0049A2  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5928  0049A4                     l4628:
  5929  0049A4  C001  F001         	movff	___fltol@f1,?___fltol
  5930  0049A8  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5931  0049AC  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5932  0049B0  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5933  0049B4                     l923:
  5934  0049B4  0012               	return		;funcret
  5935  0049B6                     __end_of___fltol:
  5936                           	callstack 0
  5937                           
  5938 ;; *************** function ___flsub *****************
  5939 ;; Defined at:
  5940 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  b               4   25[COMRAM] long 
  5943 ;;  a               4   29[COMRAM] long 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;		None
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  4   25[COMRAM] long 
  5948 ;; Registers used:
  5949 ;;		wreg, status,2, status,0, cstack
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5955 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5958 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5959 ;;Total ram usage:        8 bytes
  5960 ;; Hardware stack levels used: 1
  5961 ;; Hardware stack levels required when called: 1
  5962 ;; This function calls:
  5963 ;;		___fladd
  5964 ;; This function is called by:
  5965 ;;		_efgtoa
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text19
  5970  0059D0                     __ptext19:
  5971                           	callstack 0
  5972  0059D0                     ___flsub:
  5973                           	callstack 24
  5974  0059D0  0E00               	movlw	0
  5975  0059D2  1A1E               	xorwf	___flsub@a^0,f,c
  5976  0059D4  0E00               	movlw	0
  5977  0059D6  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5978  0059D8  0E00               	movlw	0
  5979  0059DA  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5980  0059DC  0E80               	movlw	128
  5981  0059DE  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5982  0059E0  C01A  F001         	movff	___flsub@b,___fladd@b
  5983  0059E4  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5984  0059E8  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5985  0059EC  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5986  0059F0  C01E  F005         	movff	___flsub@a,___fladd@a
  5987  0059F4  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5988  0059F8  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5989  0059FC  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5990  005A00  EC40  F014         	call	___fladd	;wreg free
  5991  005A04  C001  F01A         	movff	?___fladd,?___flsub
  5992  005A08  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5993  005A0C  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5994  005A10  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5995  005A14  0012               	return		;funcret
  5996  005A16                     __end_of___flsub:
  5997                           	callstack 0
  5998                           
  5999 ;; *************** function ___fladd *****************
  6000 ;; Defined at:
  6001 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;  b               4    0[COMRAM] long 
  6004 ;;  a               4    4[COMRAM] long 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  grs             1   15[COMRAM] unsigned char 
  6007 ;;  bexp            1   14[COMRAM] unsigned char 
  6008 ;;  aexp            1   13[COMRAM] unsigned char 
  6009 ;;  signs           1   12[COMRAM] unsigned char 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  4    0[COMRAM] unsigned char 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6019 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6022 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6023 ;;Total ram usage:       16 bytes
  6024 ;; Hardware stack levels used: 1
  6025 ;; This function calls:
  6026 ;;		Nothing
  6027 ;; This function is called by:
  6028 ;;		___flsub
  6029 ;;		_efgtoa
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text20
  6034  002880                     __ptext20:
  6035                           	callstack 0
  6036  002880                     ___fladd:
  6037                           	callstack 24
  6038  002880  5004               	movf	(___fladd@b+3)^0,w,c
  6039  002882  0B80               	andlw	128
  6040  002884  6E0D               	movwf	___fladd@signs^0,c
  6041  002886  5004               	movf	(___fladd@b+3)^0,w,c
  6042  002888  2404               	addwf	(___fladd@b+3)^0,w,c
  6043  00288A  6E0F               	movwf	___fladd@bexp^0,c
  6044  00288C  AE03               	btfss	(___fladd@b+2)^0,7,c
  6045  00288E  EF4B  F014         	goto	u3671
  6046  002892  EF4D  F014         	goto	u3670
  6047  002896                     u3671:
  6048  002896  EF4E  F014         	goto	l3884
  6049  00289A                     u3670:
  6050  00289A  800F               	bsf	___fladd@bexp^0,0,c
  6051  00289C                     l3884:
  6052  00289C  500F               	movf	___fladd@bexp^0,w,c
  6053  00289E  B4D8               	btfsc	status,2,c
  6054  0028A0  EF54  F014         	goto	u3681
  6055  0028A4  EF56  F014         	goto	u3680
  6056  0028A8                     u3681:
  6057  0028A8  EF6B  F014         	goto	l3894
  6058  0028AC                     u3680:
  6059  0028AC  280F               	incf	___fladd@bexp^0,w,c
  6060  0028AE  A4D8               	btfss	status,2,c
  6061  0028B0  EF5C  F014         	goto	u3691
  6062  0028B4  EF5E  F014         	goto	u3690
  6063  0028B8                     u3691:
  6064  0028B8  EF66  F014         	goto	l3890
  6065  0028BC                     u3690:
  6066  0028BC  0E00               	movlw	0
  6067  0028BE  6E01               	movwf	___fladd@b^0,c
  6068  0028C0  0E00               	movlw	0
  6069  0028C2  6E02               	movwf	(___fladd@b+1)^0,c
  6070  0028C4  0E00               	movlw	0
  6071  0028C6  6E03               	movwf	(___fladd@b+2)^0,c
  6072  0028C8  0E00               	movlw	0
  6073  0028CA  6E04               	movwf	(___fladd@b+3)^0,c
  6074  0028CC                     l3890:
  6075  0028CC  8E03               	bsf	(___fladd@b+2)^0,7,c
  6076  0028CE  0E00               	movlw	0
  6077  0028D0  6E04               	movwf	(___fladd@b+3)^0,c
  6078  0028D2  EF73  F014         	goto	l3896
  6079  0028D6                     l3894:
  6080  0028D6  0E00               	movlw	0
  6081  0028D8  6E01               	movwf	___fladd@b^0,c
  6082  0028DA  0E00               	movlw	0
  6083  0028DC  6E02               	movwf	(___fladd@b+1)^0,c
  6084  0028DE  0E00               	movlw	0
  6085  0028E0  6E03               	movwf	(___fladd@b+2)^0,c
  6086  0028E2  0E00               	movlw	0
  6087  0028E4  6E04               	movwf	(___fladd@b+3)^0,c
  6088  0028E6                     l3896:
  6089  0028E6  5008               	movf	(___fladd@a+3)^0,w,c
  6090  0028E8  0B80               	andlw	128
  6091  0028EA  6E0E               	movwf	___fladd@aexp^0,c
  6092  0028EC  500D               	movf	___fladd@signs^0,w,c
  6093  0028EE  180E               	xorwf	___fladd@aexp^0,w,c
  6094  0028F0  B4D8               	btfsc	status,2,c
  6095  0028F2  EF7D  F014         	goto	u3701
  6096  0028F6  EF7F  F014         	goto	u3700
  6097  0028FA                     u3701:
  6098  0028FA  EF80  F014         	goto	l3902
  6099  0028FE                     u3700:
  6100  0028FE  8C0D               	bsf	___fladd@signs^0,6,c
  6101  002900                     l3902:
  6102  002900  5008               	movf	(___fladd@a+3)^0,w,c
  6103  002902  2408               	addwf	(___fladd@a+3)^0,w,c
  6104  002904  6E0E               	movwf	___fladd@aexp^0,c
  6105  002906  AE07               	btfss	(___fladd@a+2)^0,7,c
  6106  002908  EF88  F014         	goto	u3711
  6107  00290C  EF8A  F014         	goto	u3710
  6108  002910                     u3711:
  6109  002910  EF8B  F014         	goto	l3908
  6110  002914                     u3710:
  6111  002914  800E               	bsf	___fladd@aexp^0,0,c
  6112  002916                     l3908:
  6113  002916  500E               	movf	___fladd@aexp^0,w,c
  6114  002918  B4D8               	btfsc	status,2,c
  6115  00291A  EF91  F014         	goto	u3721
  6116  00291E  EF93  F014         	goto	u3720
  6117  002922                     u3721:
  6118  002922  EFA8  F014         	goto	l3918
  6119  002926                     u3720:
  6120  002926  280E               	incf	___fladd@aexp^0,w,c
  6121  002928  A4D8               	btfss	status,2,c
  6122  00292A  EF99  F014         	goto	u3731
  6123  00292E  EF9B  F014         	goto	u3730
  6124  002932                     u3731:
  6125  002932  EFA3  F014         	goto	l3914
  6126  002936                     u3730:
  6127  002936  0E00               	movlw	0
  6128  002938  6E05               	movwf	___fladd@a^0,c
  6129  00293A  0E00               	movlw	0
  6130  00293C  6E06               	movwf	(___fladd@a+1)^0,c
  6131  00293E  0E00               	movlw	0
  6132  002940  6E07               	movwf	(___fladd@a+2)^0,c
  6133  002942  0E00               	movlw	0
  6134  002944  6E08               	movwf	(___fladd@a+3)^0,c
  6135  002946                     l3914:
  6136  002946  8E07               	bsf	(___fladd@a+2)^0,7,c
  6137  002948  0E00               	movlw	0
  6138  00294A  6E08               	movwf	(___fladd@a+3)^0,c
  6139  00294C  EFB0  F014         	goto	l3920
  6140  002950                     l3918:
  6141  002950  0E00               	movlw	0
  6142  002952  6E05               	movwf	___fladd@a^0,c
  6143  002954  0E00               	movlw	0
  6144  002956  6E06               	movwf	(___fladd@a+1)^0,c
  6145  002958  0E00               	movlw	0
  6146  00295A  6E07               	movwf	(___fladd@a+2)^0,c
  6147  00295C  0E00               	movlw	0
  6148  00295E  6E08               	movwf	(___fladd@a+3)^0,c
  6149  002960                     l3920:
  6150  002960  500F               	movf	___fladd@bexp^0,w,c
  6151  002962  5C0E               	subwf	___fladd@aexp^0,w,c
  6152  002964  B0D8               	btfsc	status,0,c
  6153  002966  EFB7  F014         	goto	u3741
  6154  00296A  EFB9  F014         	goto	u3740
  6155  00296E                     u3741:
  6156  00296E  EFE0  F014         	goto	l3956
  6157  002972                     u3740:
  6158  002972  AC0D               	btfss	___fladd@signs^0,6,c
  6159  002974  EFBE  F014         	goto	u3751
  6160  002978  EFC0  F014         	goto	u3750
  6161  00297C                     u3751:
  6162  00297C  EFC2  F014         	goto	l3926
  6163  002980                     u3750:
  6164  002980  0E80               	movlw	128
  6165  002982  1A0D               	xorwf	___fladd@signs^0,f,c
  6166  002984                     l3926:
  6167  002984  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6168  002988  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6169  00298C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6170  002990  C001  F010         	movff	___fladd@b,___fladd@grs
  6171  002994  C005  F001         	movff	___fladd@a,___fladd@b
  6172  002998  C010  F005         	movff	___fladd@grs,___fladd@a
  6173  00299C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6174  0029A0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6175  0029A4  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6176  0029A8  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6177  0029AC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6178  0029B0  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6179  0029B4  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6180  0029B8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6181  0029BC  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6182  0029C0                     l3956:
  6183  0029C0  0E00               	movlw	0
  6184  0029C2  6E10               	movwf	___fladd@grs^0,c
  6185  0029C4  500F               	movf	___fladd@bexp^0,w,c
  6186  0029C6  C00E  F009         	movff	___fladd@aexp,??___fladd
  6187  0029CA  6A0A               	clrf	(??___fladd+1)^0,c
  6188  0029CC  5E09               	subwf	??___fladd^0,f,c
  6189  0029CE  0E00               	movlw	0
  6190  0029D0  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6191  0029D2  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6192  0029D4  EFF5  F014         	goto	u3761
  6193  0029D8  500A               	movf	(??___fladd+1)^0,w,c
  6194  0029DA  E109               	bnz	u3760
  6195  0029DC  0E1A               	movlw	26
  6196  0029DE  5C09               	subwf	??___fladd^0,w,c
  6197  0029E0  A0D8               	btfss	status,0,c
  6198  0029E2  EFF5  F014         	goto	u3761
  6199  0029E6  EFF7  F014         	goto	u3760
  6200  0029EA                     u3761:
  6201  0029EA  EF2E  F015         	goto	l1155
  6202  0029EE                     u3760:
  6203  0029EE  5001               	movf	___fladd@b^0,w,c
  6204  0029F0  1002               	iorwf	(___fladd@b+1)^0,w,c
  6205  0029F2  1003               	iorwf	(___fladd@b+2)^0,w,c
  6206  0029F4  1004               	iorwf	(___fladd@b+3)^0,w,c
  6207  0029F6  A4D8               	btfss	status,2,c
  6208  0029F8  EF00  F015         	goto	u3771
  6209  0029FC  EF03  F015         	goto	u3770
  6210  002A00                     u3771:
  6211  002A00  0E01               	movlw	1
  6212  002A02  EF04  F015         	goto	u3780
  6213  002A06                     u3770:
  6214  002A06  0E00               	movlw	0
  6215  002A08                     u3780:
  6216  002A08  6E10               	movwf	___fladd@grs^0,c
  6217  002A0A  0E00               	movlw	0
  6218  002A0C  6E01               	movwf	___fladd@b^0,c
  6219  002A0E  0E00               	movlw	0
  6220  002A10  6E02               	movwf	(___fladd@b+1)^0,c
  6221  002A12  0E00               	movlw	0
  6222  002A14  6E03               	movwf	(___fladd@b+2)^0,c
  6223  002A16  0E00               	movlw	0
  6224  002A18  6E04               	movwf	(___fladd@b+3)^0,c
  6225  002A1A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6226  002A1E  EF37  F015         	goto	l1154
  6227  002A22                     l1156:
  6228  002A22  A010               	btfss	___fladd@grs^0,0,c
  6229  002A24  EF16  F015         	goto	u3791
  6230  002A28  EF18  F015         	goto	u3790
  6231  002A2C                     u3791:
  6232  002A2C  EF1E  F015         	goto	l3968
  6233  002A30                     u3790:
  6234  002A30  90D8               	bcf	status,0,c
  6235  002A32  3010               	rrcf	___fladd@grs^0,w,c
  6236  002A34  0901               	iorlw	1
  6237  002A36  6E10               	movwf	___fladd@grs^0,c
  6238  002A38  EF20  F015         	goto	l3970
  6239  002A3C                     l3968:
  6240  002A3C  90D8               	bcf	status,0,c
  6241  002A3E  3210               	rrcf	___fladd@grs^0,f,c
  6242  002A40                     l3970:
  6243  002A40  A001               	btfss	___fladd@b^0,0,c
  6244  002A42  EF25  F015         	goto	u3801
  6245  002A46  EF27  F015         	goto	u3800
  6246  002A4A                     u3801:
  6247  002A4A  EF28  F015         	goto	l3974
  6248  002A4E                     u3800:
  6249  002A4E  8E10               	bsf	___fladd@grs^0,7,c
  6250  002A50                     l3974:
  6251  002A50  3404               	rlcf	(___fladd@b+3)^0,w,c
  6252  002A52  3204               	rrcf	(___fladd@b+3)^0,f,c
  6253  002A54  3203               	rrcf	(___fladd@b+2)^0,f,c
  6254  002A56  3202               	rrcf	(___fladd@b+1)^0,f,c
  6255  002A58  3201               	rrcf	___fladd@b^0,f,c
  6256  002A5A  2A0F               	incf	___fladd@bexp^0,f,c
  6257  002A5C                     l1155:
  6258  002A5C  500E               	movf	___fladd@aexp^0,w,c
  6259  002A5E  5C0F               	subwf	___fladd@bexp^0,w,c
  6260  002A60  A0D8               	btfss	status,0,c
  6261  002A62  EF35  F015         	goto	u3811
  6262  002A66  EF37  F015         	goto	u3810
  6263  002A6A                     u3811:
  6264  002A6A  EF11  F015         	goto	l1156
  6265  002A6E                     u3810:
  6266  002A6E                     l1154:
  6267  002A6E  BC0D               	btfsc	___fladd@signs^0,6,c
  6268  002A70  EF3C  F015         	goto	u3821
  6269  002A74  EF3E  F015         	goto	u3820
  6270  002A78                     u3821:
  6271  002A78  EF7E  F015         	goto	l4002
  6272  002A7C                     u3820:
  6273  002A7C  500F               	movf	___fladd@bexp^0,w,c
  6274  002A7E  A4D8               	btfss	status,2,c
  6275  002A80  EF44  F015         	goto	u3831
  6276  002A84  EF46  F015         	goto	u3830
  6277  002A88                     u3831:
  6278  002A88  EF50  F015         	goto	l3984
  6279  002A8C                     u3830:
  6280  002A8C  0E00               	movlw	0
  6281  002A8E  6E01               	movwf	?___fladd^0,c
  6282  002A90  0E00               	movlw	0
  6283  002A92  6E02               	movwf	(?___fladd+1)^0,c
  6284  002A94  0E00               	movlw	0
  6285  002A96  6E03               	movwf	(?___fladd+2)^0,c
  6286  002A98  0E00               	movlw	0
  6287  002A9A  6E04               	movwf	(?___fladd+3)^0,c
  6288  002A9C  EF9F  F016         	goto	l1163
  6289  002AA0                     l3984:
  6290  002AA0  5005               	movf	___fladd@a^0,w,c
  6291  002AA2  2601               	addwf	___fladd@b^0,f,c
  6292  002AA4  5006               	movf	(___fladd@a+1)^0,w,c
  6293  002AA6  2202               	addwfc	(___fladd@b+1)^0,f,c
  6294  002AA8  5007               	movf	(___fladd@a+2)^0,w,c
  6295  002AAA  2203               	addwfc	(___fladd@b+2)^0,f,c
  6296  002AAC  5008               	movf	(___fladd@a+3)^0,w,c
  6297  002AAE  2204               	addwfc	(___fladd@b+3)^0,f,c
  6298  002AB0  A004               	btfss	(___fladd@b+3)^0,0,c
  6299  002AB2  EF5D  F015         	goto	u3841
  6300  002AB6  EF5F  F015         	goto	u3840
  6301  002ABA                     u3841:
  6302  002ABA  EF0B  F016         	goto	l4038
  6303  002ABE                     u3840:
  6304  002ABE  A010               	btfss	___fladd@grs^0,0,c
  6305  002AC0  EF64  F015         	goto	u3851
  6306  002AC4  EF66  F015         	goto	u3850
  6307  002AC8                     u3851:
  6308  002AC8  EF6C  F015         	goto	l3992
  6309  002ACC                     u3850:
  6310  002ACC  90D8               	bcf	status,0,c
  6311  002ACE  3010               	rrcf	___fladd@grs^0,w,c
  6312  002AD0  0901               	iorlw	1
  6313  002AD2  6E10               	movwf	___fladd@grs^0,c
  6314  002AD4  EF6E  F015         	goto	l3994
  6315  002AD8                     l3992:
  6316  002AD8  90D8               	bcf	status,0,c
  6317  002ADA  3210               	rrcf	___fladd@grs^0,f,c
  6318  002ADC                     l3994:
  6319  002ADC  A001               	btfss	___fladd@b^0,0,c
  6320  002ADE  EF73  F015         	goto	u3861
  6321  002AE2  EF75  F015         	goto	u3860
  6322  002AE6                     u3861:
  6323  002AE6  EF76  F015         	goto	l3998
  6324  002AEA                     u3860:
  6325  002AEA  8E10               	bsf	___fladd@grs^0,7,c
  6326  002AEC                     l3998:
  6327  002AEC  3404               	rlcf	(___fladd@b+3)^0,w,c
  6328  002AEE  3204               	rrcf	(___fladd@b+3)^0,f,c
  6329  002AF0  3203               	rrcf	(___fladd@b+2)^0,f,c
  6330  002AF2  3202               	rrcf	(___fladd@b+1)^0,f,c
  6331  002AF4  3201               	rrcf	___fladd@b^0,f,c
  6332  002AF6  2A0F               	incf	___fladd@bexp^0,f,c
  6333  002AF8  EF0B  F016         	goto	l4038
  6334  002AFC                     l4002:
  6335  002AFC  5005               	movf	___fladd@a^0,w,c
  6336  002AFE  5C01               	subwf	___fladd@b^0,w,c
  6337  002B00  5006               	movf	(___fladd@a+1)^0,w,c
  6338  002B02  5802               	subwfb	(___fladd@b+1)^0,w,c
  6339  002B04  5007               	movf	(___fladd@a+2)^0,w,c
  6340  002B06  5803               	subwfb	(___fladd@b+2)^0,w,c
  6341  002B08  5004               	movf	(___fladd@b+3)^0,w,c
  6342  002B0A  0A80               	xorlw	128
  6343  002B0C  6E09               	movwf	??___fladd^0,c
  6344  002B0E  5008               	movf	(___fladd@a+3)^0,w,c
  6345  002B10  0A80               	xorlw	128
  6346  002B12  5809               	subwfb	??___fladd^0,w,c
  6347  002B14  B0D8               	btfsc	status,0,c
  6348  002B16  EF8F  F015         	goto	u3871
  6349  002B1A  EF91  F015         	goto	u3870
  6350  002B1E                     u3871:
  6351  002B1E  EFBC  F015         	goto	l4012
  6352  002B22                     u3870:
  6353  002B22  5001               	movf	___fladd@b^0,w,c
  6354  002B24  5C05               	subwf	___fladd@a^0,w,c
  6355  002B26  6E09               	movwf	??___fladd^0,c
  6356  002B28  5002               	movf	(___fladd@b+1)^0,w,c
  6357  002B2A  5806               	subwfb	(___fladd@a+1)^0,w,c
  6358  002B2C  6E0A               	movwf	(??___fladd+1)^0,c
  6359  002B2E  5003               	movf	(___fladd@b+2)^0,w,c
  6360  002B30  5807               	subwfb	(___fladd@a+2)^0,w,c
  6361  002B32  6E0B               	movwf	(??___fladd+2)^0,c
  6362  002B34  5004               	movf	(___fladd@b+3)^0,w,c
  6363  002B36  5808               	subwfb	(___fladd@a+3)^0,w,c
  6364  002B38  6E0C               	movwf	(??___fladd+3)^0,c
  6365  002B3A  0EFF               	movlw	255
  6366  002B3C  2409               	addwf	??___fladd^0,w,c
  6367  002B3E  6E01               	movwf	___fladd@b^0,c
  6368  002B40  0EFF               	movlw	255
  6369  002B42  200A               	addwfc	(??___fladd+1)^0,w,c
  6370  002B44  6E02               	movwf	(___fladd@b+1)^0,c
  6371  002B46  0EFF               	movlw	255
  6372  002B48  200B               	addwfc	(??___fladd+2)^0,w,c
  6373  002B4A  6E03               	movwf	(___fladd@b+2)^0,c
  6374  002B4C  0EFF               	movlw	255
  6375  002B4E  200C               	addwfc	(??___fladd+3)^0,w,c
  6376  002B50  6E04               	movwf	(___fladd@b+3)^0,c
  6377  002B52  0E80               	movlw	128
  6378  002B54  1A0D               	xorwf	___fladd@signs^0,f,c
  6379  002B56  6C10               	negf	___fladd@grs^0,c
  6380  002B58  5010               	movf	___fladd@grs^0,w,c
  6381  002B5A  A4D8               	btfss	status,2,c
  6382  002B5C  EFB2  F015         	goto	u3881
  6383  002B60  EFB4  F015         	goto	u3880
  6384  002B64                     u3881:
  6385  002B64  EFC4  F015         	goto	l1171
  6386  002B68                     u3880:
  6387  002B68  0E01               	movlw	1
  6388  002B6A  2601               	addwf	___fladd@b^0,f,c
  6389  002B6C  0E00               	movlw	0
  6390  002B6E  2202               	addwfc	(___fladd@b+1)^0,f,c
  6391  002B70  2203               	addwfc	(___fladd@b+2)^0,f,c
  6392  002B72  2204               	addwfc	(___fladd@b+3)^0,f,c
  6393  002B74  EFC4  F015         	goto	l1171
  6394  002B78                     l4012:
  6395  002B78  5005               	movf	___fladd@a^0,w,c
  6396  002B7A  5E01               	subwf	___fladd@b^0,f,c
  6397  002B7C  5006               	movf	(___fladd@a+1)^0,w,c
  6398  002B7E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6399  002B80  5007               	movf	(___fladd@a+2)^0,w,c
  6400  002B82  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6401  002B84  5008               	movf	(___fladd@a+3)^0,w,c
  6402  002B86  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6403  002B88                     l1171:
  6404  002B88  5001               	movf	___fladd@b^0,w,c
  6405  002B8A  1002               	iorwf	(___fladd@b+1)^0,w,c
  6406  002B8C  1003               	iorwf	(___fladd@b+2)^0,w,c
  6407  002B8E  1004               	iorwf	(___fladd@b+3)^0,w,c
  6408  002B90  A4D8               	btfss	status,2,c
  6409  002B92  EFCD  F015         	goto	u3891
  6410  002B96  EFCF  F015         	goto	u3890
  6411  002B9A                     u3891:
  6412  002B9A  EF04  F016         	goto	l4036
  6413  002B9E                     u3890:
  6414  002B9E  5010               	movf	___fladd@grs^0,w,c
  6415  002BA0  A4D8               	btfss	status,2,c
  6416  002BA2  EFD5  F015         	goto	u3901
  6417  002BA6  EFD7  F015         	goto	u3900
  6418  002BAA                     u3901:
  6419  002BAA  EF04  F016         	goto	l4036
  6420  002BAE                     u3900:
  6421  002BAE  0E00               	movlw	0
  6422  002BB0  6E01               	movwf	?___fladd^0,c
  6423  002BB2  0E00               	movlw	0
  6424  002BB4  6E02               	movwf	(?___fladd+1)^0,c
  6425  002BB6  0E00               	movlw	0
  6426  002BB8  6E03               	movwf	(?___fladd+2)^0,c
  6427  002BBA  0E00               	movlw	0
  6428  002BBC  6E04               	movwf	(?___fladd+3)^0,c
  6429  002BBE  EF9F  F016         	goto	l1163
  6430  002BC2                     l4020:
  6431  002BC2  90D8               	bcf	status,0,c
  6432  002BC4  3601               	rlcf	___fladd@b^0,f,c
  6433  002BC6  3602               	rlcf	(___fladd@b+1)^0,f,c
  6434  002BC8  3603               	rlcf	(___fladd@b+2)^0,f,c
  6435  002BCA  3604               	rlcf	(___fladd@b+3)^0,f,c
  6436  002BCC  AE10               	btfss	___fladd@grs^0,7,c
  6437  002BCE  EFEB  F015         	goto	u3911
  6438  002BD2  EFED  F015         	goto	u3910
  6439  002BD6                     u3911:
  6440  002BD6  EFEE  F015         	goto	l4026
  6441  002BDA                     u3910:
  6442  002BDA  8001               	bsf	___fladd@b^0,0,c
  6443  002BDC                     l4026:
  6444  002BDC  A010               	btfss	___fladd@grs^0,0,c
  6445  002BDE  EFF3  F015         	goto	u3921
  6446  002BE2  EFF5  F015         	goto	u3920
  6447  002BE6                     u3921:
  6448  002BE6  EFF9  F015         	goto	l4030
  6449  002BEA                     u3920:
  6450  002BEA  80D8               	bsf	status,0,c
  6451  002BEC  3610               	rlcf	___fladd@grs^0,f,c
  6452  002BEE  EFFB  F015         	goto	l4032
  6453  002BF2                     l4030:
  6454  002BF2  90D8               	bcf	status,0,c
  6455  002BF4  3610               	rlcf	___fladd@grs^0,f,c
  6456  002BF6                     l4032:
  6457  002BF6  500F               	movf	___fladd@bexp^0,w,c
  6458  002BF8  B4D8               	btfsc	status,2,c
  6459  002BFA  EF01  F016         	goto	u3931
  6460  002BFE  EF03  F016         	goto	u3930
  6461  002C02                     u3931:
  6462  002C02  EF04  F016         	goto	l4036
  6463  002C06                     u3930:
  6464  002C06  060F               	decf	___fladd@bexp^0,f,c
  6465  002C08                     l4036:
  6466  002C08  AE03               	btfss	(___fladd@b+2)^0,7,c
  6467  002C0A  EF09  F016         	goto	u3941
  6468  002C0E  EF0B  F016         	goto	u3940
  6469  002C12                     u3941:
  6470  002C12  EFE1  F015         	goto	l4020
  6471  002C16                     u3940:
  6472  002C16                     l4038:
  6473  002C16  0E00               	movlw	0
  6474  002C18  6E0E               	movwf	___fladd@aexp^0,c
  6475  002C1A  AE10               	btfss	___fladd@grs^0,7,c
  6476  002C1C  EF12  F016         	goto	u3951
  6477  002C20  EF14  F016         	goto	u3950
  6478  002C24                     u3951:
  6479  002C24  EF2C  F016         	goto	l1180
  6480  002C28                     u3950:
  6481  002C28  C010  F009         	movff	___fladd@grs,??___fladd
  6482  002C2C  0E7F               	movlw	127
  6483  002C2E  1609               	andwf	??___fladd^0,f,c
  6484  002C30  B4D8               	btfsc	status,2,c
  6485  002C32  EF1D  F016         	goto	u3961
  6486  002C36  EF1F  F016         	goto	u3960
  6487  002C3A                     u3961:
  6488  002C3A  EF23  F016         	goto	l1181
  6489  002C3E                     u3960:
  6490  002C3E                     l4044:
  6491  002C3E  0E01               	movlw	1
  6492  002C40  6E0E               	movwf	___fladd@aexp^0,c
  6493  002C42  EF2C  F016         	goto	l1180
  6494  002C46                     l1181:
  6495  002C46  A001               	btfss	___fladd@b^0,0,c
  6496  002C48  EF28  F016         	goto	u3971
  6497  002C4C  EF2A  F016         	goto	u3970
  6498  002C50                     u3971:
  6499  002C50  EF2C  F016         	goto	l1180
  6500  002C54                     u3970:
  6501  002C54  EF1F  F016         	goto	l4044
  6502  002C58                     l1180:
  6503  002C58  500E               	movf	___fladd@aexp^0,w,c
  6504  002C5A  B4D8               	btfsc	status,2,c
  6505  002C5C  EF32  F016         	goto	u3981
  6506  002C60  EF34  F016         	goto	u3980
  6507  002C64                     u3981:
  6508  002C64  EF5F  F016         	goto	l4056
  6509  002C68                     u3980:
  6510  002C68  0E01               	movlw	1
  6511  002C6A  2601               	addwf	___fladd@b^0,f,c
  6512  002C6C  0E00               	movlw	0
  6513  002C6E  2202               	addwfc	(___fladd@b+1)^0,f,c
  6514  002C70  2203               	addwfc	(___fladd@b+2)^0,f,c
  6515  002C72  2204               	addwfc	(___fladd@b+3)^0,f,c
  6516  002C74  A004               	btfss	(___fladd@b+3)^0,0,c
  6517  002C76  EF3F  F016         	goto	u3991
  6518  002C7A  EF41  F016         	goto	u3990
  6519  002C7E                     u3991:
  6520  002C7E  EF5F  F016         	goto	l4056
  6521  002C82                     u3990:
  6522  002C82  C001  F009         	movff	___fladd@b,??___fladd
  6523  002C86  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6524  002C8A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6525  002C8E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6526  002C92  340C               	rlcf	(??___fladd+3)^0,w,c
  6527  002C94  320C               	rrcf	(??___fladd+3)^0,f,c
  6528  002C96  320B               	rrcf	(??___fladd+2)^0,f,c
  6529  002C98  320A               	rrcf	(??___fladd+1)^0,f,c
  6530  002C9A  3209               	rrcf	??___fladd^0,f,c
  6531  002C9C  C009  F001         	movff	??___fladd,___fladd@b
  6532  002CA0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6533  002CA4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6534  002CA8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6535  002CAC  280F               	incf	___fladd@bexp^0,w,c
  6536  002CAE  B4D8               	btfsc	status,2,c
  6537  002CB0  EF5C  F016         	goto	u4001
  6538  002CB4  EF5E  F016         	goto	u4000
  6539  002CB8                     u4001:
  6540  002CB8  EF5F  F016         	goto	l4056
  6541  002CBC                     u4000:
  6542  002CBC  2A0F               	incf	___fladd@bexp^0,f,c
  6543  002CBE                     l4056:
  6544  002CBE  280F               	incf	___fladd@bexp^0,w,c
  6545  002CC0  B4D8               	btfsc	status,2,c
  6546  002CC2  EF65  F016         	goto	u4011
  6547  002CC6  EF67  F016         	goto	u4010
  6548  002CCA                     u4011:
  6549  002CCA  EF6F  F016         	goto	l4060
  6550  002CCE                     u4010:
  6551  002CCE  500F               	movf	___fladd@bexp^0,w,c
  6552  002CD0  A4D8               	btfss	status,2,c
  6553  002CD2  EF6D  F016         	goto	u4021
  6554  002CD6  EF6F  F016         	goto	u4020
  6555  002CDA                     u4021:
  6556  002CDA  EF81  F016         	goto	l4064
  6557  002CDE                     u4020:
  6558  002CDE                     l4060:
  6559  002CDE  0E00               	movlw	0
  6560  002CE0  6E01               	movwf	___fladd@b^0,c
  6561  002CE2  0E00               	movlw	0
  6562  002CE4  6E02               	movwf	(___fladd@b+1)^0,c
  6563  002CE6  0E00               	movlw	0
  6564  002CE8  6E03               	movwf	(___fladd@b+2)^0,c
  6565  002CEA  0E00               	movlw	0
  6566  002CEC  6E04               	movwf	(___fladd@b+3)^0,c
  6567  002CEE  500F               	movf	___fladd@bexp^0,w,c
  6568  002CF0  A4D8               	btfss	status,2,c
  6569  002CF2  EF7D  F016         	goto	u4031
  6570  002CF6  EF7F  F016         	goto	u4030
  6571  002CFA                     u4031:
  6572  002CFA  EF81  F016         	goto	l4064
  6573  002CFE                     u4030:
  6574  002CFE  0E00               	movlw	0
  6575  002D00  6E0D               	movwf	___fladd@signs^0,c
  6576  002D02                     l4064:
  6577  002D02  A00F               	btfss	___fladd@bexp^0,0,c
  6578  002D04  EF86  F016         	goto	u4041
  6579  002D08  EF88  F016         	goto	u4040
  6580  002D0C                     u4041:
  6581  002D0C  EF8B  F016         	goto	l4068
  6582  002D10                     u4040:
  6583  002D10  8E03               	bsf	(___fladd@b+2)^0,7,c
  6584  002D12  EF8C  F016         	goto	l4070
  6585  002D16                     l4068:
  6586  002D16  9E03               	bcf	(___fladd@b+2)^0,7,c
  6587  002D18                     l4070:
  6588  002D18  90D8               	bcf	status,0,c
  6589  002D1A  300F               	rrcf	___fladd@bexp^0,w,c
  6590  002D1C  6E04               	movwf	(___fladd@b+3)^0,c
  6591  002D1E  AE0D               	btfss	___fladd@signs^0,7,c
  6592  002D20  EF94  F016         	goto	u4051
  6593  002D24  EF96  F016         	goto	u4050
  6594  002D28                     u4051:
  6595  002D28  EF97  F016         	goto	l4076
  6596  002D2C                     u4050:
  6597  002D2C  8E04               	bsf	(___fladd@b+3)^0,7,c
  6598  002D2E                     l4076:
  6599  002D2E  C001  F001         	movff	___fladd@b,?___fladd
  6600  002D32  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6601  002D36  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6602  002D3A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6603  002D3E                     l1163:
  6604  002D3E  0012               	return		;funcret
  6605  002D40                     __end_of___fladd:
  6606                           	callstack 0
  6607                           
  6608 ;; *************** function ___flneg *****************
  6609 ;; Defined at:
  6610 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  f1              4    0[COMRAM] unsigned char 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;		None
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  4    0[COMRAM] unsigned char 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;Total ram usage:        4 bytes
  6629 ;; Hardware stack levels used: 1
  6630 ;; This function calls:
  6631 ;;		Nothing
  6632 ;; This function is called by:
  6633 ;;		_efgtoa
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text21
  6638  005B4C                     __ptext21:
  6639                           	callstack 0
  6640  005B4C                     ___flneg:
  6641                           	callstack 25
  6642  005B4C  5001               	movf	___flneg@f1^0,w,c
  6643  005B4E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6644  005B50  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6645  005B52  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6646  005B54  B4D8               	btfsc	status,2,c
  6647  005B56  EFAF  F02D         	goto	u4851
  6648  005B5A  EFB1  F02D         	goto	u4850
  6649  005B5E                     u4851:
  6650  005B5E  EFB9  F02D         	goto	l4584
  6651  005B62                     u4850:
  6652  005B62  0E00               	movlw	0
  6653  005B64  1A01               	xorwf	___flneg@f1^0,f,c
  6654  005B66  0E00               	movlw	0
  6655  005B68  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6656  005B6A  0E00               	movlw	0
  6657  005B6C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6658  005B6E  0E80               	movlw	128
  6659  005B70  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6660  005B72                     l4584:
  6661  005B72  C001  F001         	movff	___flneg@f1,?___flneg
  6662  005B76  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6663  005B7A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6664  005B7E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6665  005B82  0012               	return		;funcret
  6666  005B84                     __end_of___flneg:
  6667                           	callstack 0
  6668                           
  6669 ;; *************** function ___flmul *****************
  6670 ;; Defined at:
  6671 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  b               4    0[COMRAM] unsigned char 
  6674 ;;  a               4    4[COMRAM] unsigned char 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  prod            4   19[COMRAM] struct .
  6677 ;;  grs             4   13[COMRAM] unsigned long 
  6678 ;;  temp            2   23[COMRAM] struct .
  6679 ;;  bexp            1   18[COMRAM] unsigned char 
  6680 ;;  aexp            1   17[COMRAM] unsigned char 
  6681 ;;  sign            1   12[COMRAM] unsigned char 
  6682 ;; Return value:  Size  Location     Type
  6683 ;;                  4    0[COMRAM] unsigned char 
  6684 ;; Registers used:
  6685 ;;		wreg, status,2, status,0, prodl, prodh
  6686 ;; Tracked objects:
  6687 ;;		On entry : 0/0
  6688 ;;		On exit  : 0/0
  6689 ;;		Unchanged: 0/0
  6690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6691 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6692 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6693 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6694 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6695 ;;Total ram usage:       25 bytes
  6696 ;; Hardware stack levels used: 1
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_efgtoa
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text22
  6705  002D40                     __ptext22:
  6706                           	callstack 0
  6707  002D40                     ___flmul:
  6708                           	callstack 25
  6709  002D40  5004               	movf	(___flmul@b+3)^0,w,c
  6710  002D42  0B80               	andlw	128
  6711  002D44  6E0D               	movwf	___flmul@sign^0,c
  6712  002D46  5004               	movf	(___flmul@b+3)^0,w,c
  6713  002D48  2404               	addwf	(___flmul@b+3)^0,w,c
  6714  002D4A  6E13               	movwf	___flmul@bexp^0,c
  6715  002D4C  AE03               	btfss	(___flmul@b+2)^0,7,c
  6716  002D4E  EFAB  F016         	goto	u4461
  6717  002D52  EFAD  F016         	goto	u4460
  6718  002D56                     u4461:
  6719  002D56  EFAE  F016         	goto	l4332
  6720  002D5A                     u4460:
  6721  002D5A  8013               	bsf	___flmul@bexp^0,0,c
  6722  002D5C                     l4332:
  6723  002D5C  5013               	movf	___flmul@bexp^0,w,c
  6724  002D5E  B4D8               	btfsc	status,2,c
  6725  002D60  EFB4  F016         	goto	u4471
  6726  002D64  EFB6  F016         	goto	u4470
  6727  002D68                     u4471:
  6728  002D68  EFC9  F016         	goto	l4340
  6729  002D6C                     u4470:
  6730  002D6C  2813               	incf	___flmul@bexp^0,w,c
  6731  002D6E  A4D8               	btfss	status,2,c
  6732  002D70  EFBC  F016         	goto	u4481
  6733  002D74  EFBE  F016         	goto	u4480
  6734  002D78                     u4481:
  6735  002D78  EFC6  F016         	goto	l4338
  6736  002D7C                     u4480:
  6737  002D7C  0E00               	movlw	0
  6738  002D7E  6E01               	movwf	___flmul@b^0,c
  6739  002D80  0E00               	movlw	0
  6740  002D82  6E02               	movwf	(___flmul@b+1)^0,c
  6741  002D84  0E00               	movlw	0
  6742  002D86  6E03               	movwf	(___flmul@b+2)^0,c
  6743  002D88  0E00               	movlw	0
  6744  002D8A  6E04               	movwf	(___flmul@b+3)^0,c
  6745  002D8C                     l4338:
  6746  002D8C  8E03               	bsf	(___flmul@b+2)^0,7,c
  6747  002D8E  EFD1  F016         	goto	l4342
  6748  002D92                     l4340:
  6749  002D92  0E00               	movlw	0
  6750  002D94  6E01               	movwf	___flmul@b^0,c
  6751  002D96  0E00               	movlw	0
  6752  002D98  6E02               	movwf	(___flmul@b+1)^0,c
  6753  002D9A  0E00               	movlw	0
  6754  002D9C  6E03               	movwf	(___flmul@b+2)^0,c
  6755  002D9E  0E00               	movlw	0
  6756  002DA0  6E04               	movwf	(___flmul@b+3)^0,c
  6757  002DA2                     l4342:
  6758  002DA2  5008               	movf	(___flmul@a+3)^0,w,c
  6759  002DA4  0B80               	andlw	128
  6760  002DA6  1A0D               	xorwf	___flmul@sign^0,f,c
  6761  002DA8  5008               	movf	(___flmul@a+3)^0,w,c
  6762  002DAA  2408               	addwf	(___flmul@a+3)^0,w,c
  6763  002DAC  6E12               	movwf	___flmul@aexp^0,c
  6764  002DAE  AE07               	btfss	(___flmul@a+2)^0,7,c
  6765  002DB0  EFDC  F016         	goto	u4491
  6766  002DB4  EFDE  F016         	goto	u4490
  6767  002DB8                     u4491:
  6768  002DB8  EFDF  F016         	goto	l4350
  6769  002DBC                     u4490:
  6770  002DBC  8012               	bsf	___flmul@aexp^0,0,c
  6771  002DBE                     l4350:
  6772  002DBE  5012               	movf	___flmul@aexp^0,w,c
  6773  002DC0  B4D8               	btfsc	status,2,c
  6774  002DC2  EFE5  F016         	goto	u4501
  6775  002DC6  EFE7  F016         	goto	u4500
  6776  002DCA                     u4501:
  6777  002DCA  EFFA  F016         	goto	l4358
  6778  002DCE                     u4500:
  6779  002DCE  2812               	incf	___flmul@aexp^0,w,c
  6780  002DD0  A4D8               	btfss	status,2,c
  6781  002DD2  EFED  F016         	goto	u4511
  6782  002DD6  EFEF  F016         	goto	u4510
  6783  002DDA                     u4511:
  6784  002DDA  EFF7  F016         	goto	l4356
  6785  002DDE                     u4510:
  6786  002DDE  0E00               	movlw	0
  6787  002DE0  6E05               	movwf	___flmul@a^0,c
  6788  002DE2  0E00               	movlw	0
  6789  002DE4  6E06               	movwf	(___flmul@a+1)^0,c
  6790  002DE6  0E00               	movlw	0
  6791  002DE8  6E07               	movwf	(___flmul@a+2)^0,c
  6792  002DEA  0E00               	movlw	0
  6793  002DEC  6E08               	movwf	(___flmul@a+3)^0,c
  6794  002DEE                     l4356:
  6795  002DEE  8E07               	bsf	(___flmul@a+2)^0,7,c
  6796  002DF0  EF02  F017         	goto	l1240
  6797  002DF4                     l4358:
  6798  002DF4  0E00               	movlw	0
  6799  002DF6  6E05               	movwf	___flmul@a^0,c
  6800  002DF8  0E00               	movlw	0
  6801  002DFA  6E06               	movwf	(___flmul@a+1)^0,c
  6802  002DFC  0E00               	movlw	0
  6803  002DFE  6E07               	movwf	(___flmul@a+2)^0,c
  6804  002E00  0E00               	movlw	0
  6805  002E02  6E08               	movwf	(___flmul@a+3)^0,c
  6806  002E04                     l1240:
  6807  002E04  5012               	movf	___flmul@aexp^0,w,c
  6808  002E06  B4D8               	btfsc	status,2,c
  6809  002E08  EF08  F017         	goto	u4521
  6810  002E0C  EF0A  F017         	goto	u4520
  6811  002E10                     u4521:
  6812  002E10  EF12  F017         	goto	l4362
  6813  002E14                     u4520:
  6814  002E14  5013               	movf	___flmul@bexp^0,w,c
  6815  002E16  A4D8               	btfss	status,2,c
  6816  002E18  EF10  F017         	goto	u4531
  6817  002E1C  EF12  F017         	goto	u4530
  6818  002E20                     u4531:
  6819  002E20  EF1C  F017         	goto	l4366
  6820  002E24                     u4530:
  6821  002E24                     l4362:
  6822  002E24  0E00               	movlw	0
  6823  002E26  6E01               	movwf	?___flmul^0,c
  6824  002E28  0E00               	movlw	0
  6825  002E2A  6E02               	movwf	(?___flmul+1)^0,c
  6826  002E2C  0E00               	movlw	0
  6827  002E2E  6E03               	movwf	(?___flmul+2)^0,c
  6828  002E30  0E00               	movlw	0
  6829  002E32  6E04               	movwf	(?___flmul+3)^0,c
  6830  002E34  EFB4  F018         	goto	l1244
  6831  002E38                     l4366:
  6832  002E38  5007               	movf	(___flmul@a+2)^0,w,c
  6833  002E3A  0201               	mulwf	___flmul@b^0,c
  6834  002E3C  CFF3 F018          	movff	prodl,___flmul@temp
  6835  002E40  CFF4 F019          	movff	prodh,___flmul@temp+1
  6836  002E44  5018               	movf	___flmul@temp^0,w,c
  6837  002E46  6E0E               	movwf	___flmul@grs^0,c
  6838  002E48  6A0F               	clrf	(___flmul@grs+1)^0,c
  6839  002E4A  6A10               	clrf	(___flmul@grs+2)^0,c
  6840  002E4C  6A11               	clrf	(___flmul@grs+3)^0,c
  6841  002E4E  5019               	movf	(___flmul@temp+1)^0,w,c
  6842  002E50  6E14               	movwf	___flmul@prod^0,c
  6843  002E52  6A15               	clrf	(___flmul@prod+1)^0,c
  6844  002E54  6A16               	clrf	(___flmul@prod+2)^0,c
  6845  002E56  6A17               	clrf	(___flmul@prod+3)^0,c
  6846  002E58  5006               	movf	(___flmul@a+1)^0,w,c
  6847  002E5A  0202               	mulwf	(___flmul@b+1)^0,c
  6848  002E5C  CFF3 F018          	movff	prodl,___flmul@temp
  6849  002E60  CFF4 F019          	movff	prodh,___flmul@temp+1
  6850  002E64  5018               	movf	___flmul@temp^0,w,c
  6851  002E66  260E               	addwf	___flmul@grs^0,f,c
  6852  002E68  0E00               	movlw	0
  6853  002E6A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6854  002E6C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6855  002E6E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6856  002E70  5019               	movf	(___flmul@temp+1)^0,w,c
  6857  002E72  2614               	addwf	___flmul@prod^0,f,c
  6858  002E74  0E00               	movlw	0
  6859  002E76  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6860  002E78  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6861  002E7A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6862  002E7C  5005               	movf	___flmul@a^0,w,c
  6863  002E7E  0203               	mulwf	(___flmul@b+2)^0,c
  6864  002E80  CFF3 F018          	movff	prodl,___flmul@temp
  6865  002E84  CFF4 F019          	movff	prodh,___flmul@temp+1
  6866  002E88  5018               	movf	___flmul@temp^0,w,c
  6867  002E8A  260E               	addwf	___flmul@grs^0,f,c
  6868  002E8C  0E00               	movlw	0
  6869  002E8E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6870  002E90  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6871  002E92  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6872  002E94  5019               	movf	(___flmul@temp+1)^0,w,c
  6873  002E96  2614               	addwf	___flmul@prod^0,f,c
  6874  002E98  0E00               	movlw	0
  6875  002E9A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6876  002E9C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6877  002E9E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6878  002EA0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6879  002EA4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6880  002EA8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6881  002EAC  6A0E               	clrf	___flmul@grs^0,c
  6882  002EAE  5005               	movf	___flmul@a^0,w,c
  6883  002EB0  0202               	mulwf	(___flmul@b+1)^0,c
  6884  002EB2  CFF3 F018          	movff	prodl,___flmul@temp
  6885  002EB6  CFF4 F019          	movff	prodh,___flmul@temp+1
  6886  002EBA  5018               	movf	___flmul@temp^0,w,c
  6887  002EBC  260E               	addwf	___flmul@grs^0,f,c
  6888  002EBE  5019               	movf	(___flmul@temp+1)^0,w,c
  6889  002EC0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6890  002EC2  0E00               	movlw	0
  6891  002EC4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6892  002EC6  0E00               	movlw	0
  6893  002EC8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6894  002ECA  5006               	movf	(___flmul@a+1)^0,w,c
  6895  002ECC  0201               	mulwf	___flmul@b^0,c
  6896  002ECE  CFF3 F018          	movff	prodl,___flmul@temp
  6897  002ED2  CFF4 F019          	movff	prodh,___flmul@temp+1
  6898  002ED6  5018               	movf	___flmul@temp^0,w,c
  6899  002ED8  260E               	addwf	___flmul@grs^0,f,c
  6900  002EDA  5019               	movf	(___flmul@temp+1)^0,w,c
  6901  002EDC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6902  002EDE  0E00               	movlw	0
  6903  002EE0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6904  002EE2  0E00               	movlw	0
  6905  002EE4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6906  002EE6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6907  002EEA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6908  002EEE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6909  002EF2  6A0E               	clrf	___flmul@grs^0,c
  6910  002EF4  5005               	movf	___flmul@a^0,w,c
  6911  002EF6  0201               	mulwf	___flmul@b^0,c
  6912  002EF8  CFF3 F018          	movff	prodl,___flmul@temp
  6913  002EFC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6914  002F00  5018               	movf	___flmul@temp^0,w,c
  6915  002F02  260E               	addwf	___flmul@grs^0,f,c
  6916  002F04  5019               	movf	(___flmul@temp+1)^0,w,c
  6917  002F06  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6918  002F08  0E00               	movlw	0
  6919  002F0A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6920  002F0C  0E00               	movlw	0
  6921  002F0E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6922  002F10  5007               	movf	(___flmul@a+2)^0,w,c
  6923  002F12  0202               	mulwf	(___flmul@b+1)^0,c
  6924  002F14  CFF3 F018          	movff	prodl,___flmul@temp
  6925  002F18  CFF4 F019          	movff	prodh,___flmul@temp+1
  6926  002F1C  5018               	movf	___flmul@temp^0,w,c
  6927  002F1E  2614               	addwf	___flmul@prod^0,f,c
  6928  002F20  5019               	movf	(___flmul@temp+1)^0,w,c
  6929  002F22  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6930  002F24  0E00               	movlw	0
  6931  002F26  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6932  002F28  0E00               	movlw	0
  6933  002F2A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6934  002F2C  5006               	movf	(___flmul@a+1)^0,w,c
  6935  002F2E  0203               	mulwf	(___flmul@b+2)^0,c
  6936  002F30  CFF3 F018          	movff	prodl,___flmul@temp
  6937  002F34  CFF4 F019          	movff	prodh,___flmul@temp+1
  6938  002F38  5018               	movf	___flmul@temp^0,w,c
  6939  002F3A  2614               	addwf	___flmul@prod^0,f,c
  6940  002F3C  5019               	movf	(___flmul@temp+1)^0,w,c
  6941  002F3E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6942  002F40  0E00               	movlw	0
  6943  002F42  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6944  002F44  0E00               	movlw	0
  6945  002F46  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6946  002F48  5007               	movf	(___flmul@a+2)^0,w,c
  6947  002F4A  0203               	mulwf	(___flmul@b+2)^0,c
  6948  002F4C  CFF3 F018          	movff	prodl,___flmul@temp
  6949  002F50  CFF4 F019          	movff	prodh,___flmul@temp+1
  6950  002F54  5018               	movf	___flmul@temp^0,w,c
  6951  002F56  6E09               	movwf	??___flmul^0,c
  6952  002F58  5019               	movf	(___flmul@temp+1)^0,w,c
  6953  002F5A  6E0A               	movwf	(??___flmul+1)^0,c
  6954  002F5C  6A0B               	clrf	(??___flmul+2)^0,c
  6955  002F5E  6A0C               	clrf	(??___flmul+3)^0,c
  6956  002F60  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6957  002F64  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6958  002F68  C009  F00A         	movff	??___flmul,??___flmul+1
  6959  002F6C  6A09               	clrf	??___flmul^0,c
  6960  002F6E  5009               	movf	??___flmul^0,w,c
  6961  002F70  2614               	addwf	___flmul@prod^0,f,c
  6962  002F72  500A               	movf	(??___flmul+1)^0,w,c
  6963  002F74  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6964  002F76  500B               	movf	(??___flmul+2)^0,w,c
  6965  002F78  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6966  002F7A  500C               	movf	(??___flmul+3)^0,w,c
  6967  002F7C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6968  002F7E  C00E  F009         	movff	___flmul@grs,??___flmul
  6969  002F82  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6970  002F86  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6971  002F8A  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6972  002F8E  0E19               	movlw	25
  6973  002F90  EFCF  F017         	goto	u4540
  6974  002F94                     u4545:
  6975  002F94  90D8               	bcf	status,0,c
  6976  002F96  320C               	rrcf	(??___flmul+3)^0,f,c
  6977  002F98  320B               	rrcf	(??___flmul+2)^0,f,c
  6978  002F9A  320A               	rrcf	(??___flmul+1)^0,f,c
  6979  002F9C  3209               	rrcf	??___flmul^0,f,c
  6980  002F9E                     u4540:
  6981  002F9E  2EE8               	decfsz	wreg,f,c
  6982  002FA0  EFCA  F017         	goto	u4545
  6983  002FA4  5009               	movf	??___flmul^0,w,c
  6984  002FA6  2614               	addwf	___flmul@prod^0,f,c
  6985  002FA8  500A               	movf	(??___flmul+1)^0,w,c
  6986  002FAA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6987  002FAC  500B               	movf	(??___flmul+2)^0,w,c
  6988  002FAE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6989  002FB0  500C               	movf	(??___flmul+3)^0,w,c
  6990  002FB2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6991  002FB4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6992  002FB8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6993  002FBC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6994  002FC0  6A0E               	clrf	___flmul@grs^0,c
  6995  002FC2  5012               	movf	___flmul@aexp^0,w,c
  6996  002FC4  C013  F009         	movff	___flmul@bexp,??___flmul
  6997  002FC8  6A0A               	clrf	(??___flmul+1)^0,c
  6998  002FCA  2609               	addwf	??___flmul^0,f,c
  6999  002FCC  0E00               	movlw	0
  7000  002FCE  220A               	addwfc	(??___flmul+1)^0,f,c
  7001  002FD0  0E82               	movlw	130
  7002  002FD2  2409               	addwf	??___flmul^0,w,c
  7003  002FD4  6E18               	movwf	___flmul@temp^0,c
  7004  002FD6  0EFF               	movlw	255
  7005  002FD8  200A               	addwfc	(??___flmul+1)^0,w,c
  7006  002FDA  6E19               	movwf	(___flmul@temp+1)^0,c
  7007  002FDC  EF05  F018         	goto	l4414
  7008  002FE0                     l4408:
  7009  002FE0  90D8               	bcf	status,0,c
  7010  002FE2  3614               	rlcf	___flmul@prod^0,f,c
  7011  002FE4  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7012  002FE6  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7013  002FE8  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7014  002FEA  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7015  002FEC  EFFA  F017         	goto	u4551
  7016  002FF0  EFFC  F017         	goto	u4550
  7017  002FF4                     u4551:
  7018  002FF4  EFFD  F017         	goto	l1247
  7019  002FF8                     u4550:
  7020  002FF8  8014               	bsf	___flmul@prod^0,0,c
  7021  002FFA                     l1247:
  7022  002FFA  90D8               	bcf	status,0,c
  7023  002FFC  360E               	rlcf	___flmul@grs^0,f,c
  7024  002FFE  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7025  003000  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7026  003002  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7027  003004  0618               	decf	___flmul@temp^0,f,c
  7028  003006  A0D8               	btfss	status,0,c
  7029  003008  0619               	decf	(___flmul@temp+1)^0,f,c
  7030  00300A                     l4414:
  7031  00300A  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7032  00300C  EF0A  F018         	goto	u4561
  7033  003010  EF0C  F018         	goto	u4560
  7034  003014                     u4561:
  7035  003014  EFF0  F017         	goto	l4408
  7036  003018                     u4560:
  7037  003018  0E00               	movlw	0
  7038  00301A  6E12               	movwf	___flmul@aexp^0,c
  7039  00301C  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7040  00301E  EF13  F018         	goto	u4571
  7041  003022  EF15  F018         	goto	u4570
  7042  003026                     u4571:
  7043  003026  EF39  F018         	goto	l1249
  7044  00302A                     u4570:
  7045  00302A  0EFF               	movlw	255
  7046  00302C  140E               	andwf	___flmul@grs^0,w,c
  7047  00302E  6E09               	movwf	??___flmul^0,c
  7048  003030  0EFF               	movlw	255
  7049  003032  140F               	andwf	(___flmul@grs+1)^0,w,c
  7050  003034  6E0A               	movwf	(??___flmul+1)^0,c
  7051  003036  0EFF               	movlw	255
  7052  003038  1410               	andwf	(___flmul@grs+2)^0,w,c
  7053  00303A  6E0B               	movwf	(??___flmul+2)^0,c
  7054  00303C  0E7F               	movlw	127
  7055  00303E  1411               	andwf	(___flmul@grs+3)^0,w,c
  7056  003040  6E0C               	movwf	(??___flmul+3)^0,c
  7057  003042  5009               	movf	??___flmul^0,w,c
  7058  003044  100A               	iorwf	(??___flmul+1)^0,w,c
  7059  003046  100B               	iorwf	(??___flmul+2)^0,w,c
  7060  003048  100C               	iorwf	(??___flmul+3)^0,w,c
  7061  00304A  B4D8               	btfsc	status,2,c
  7062  00304C  EF2A  F018         	goto	u4581
  7063  003050  EF2C  F018         	goto	u4580
  7064  003054                     u4581:
  7065  003054  EF30  F018         	goto	l1250
  7066  003058                     u4580:
  7067  003058                     l4422:
  7068  003058  0E01               	movlw	1
  7069  00305A  6E12               	movwf	___flmul@aexp^0,c
  7070  00305C  EF39  F018         	goto	l1249
  7071  003060                     l1250:
  7072  003060  A014               	btfss	___flmul@prod^0,0,c
  7073  003062  EF35  F018         	goto	u4591
  7074  003066  EF37  F018         	goto	u4590
  7075  00306A                     u4591:
  7076  00306A  EF39  F018         	goto	l1249
  7077  00306E                     u4590:
  7078  00306E  EF2C  F018         	goto	l4422
  7079  003072                     l1249:
  7080  003072  5012               	movf	___flmul@aexp^0,w,c
  7081  003074  B4D8               	btfsc	status,2,c
  7082  003076  EF3F  F018         	goto	u4601
  7083  00307A  EF41  F018         	goto	u4600
  7084  00307E                     u4601:
  7085  00307E  EF65  F018         	goto	l4434
  7086  003082                     u4600:
  7087  003082  0E01               	movlw	1
  7088  003084  2614               	addwf	___flmul@prod^0,f,c
  7089  003086  0E00               	movlw	0
  7090  003088  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7091  00308A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7092  00308C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7093  00308E  A017               	btfss	(___flmul@prod+3)^0,0,c
  7094  003090  EF4C  F018         	goto	u4611
  7095  003094  EF4E  F018         	goto	u4610
  7096  003098                     u4611:
  7097  003098  EF65  F018         	goto	l4434
  7098  00309C                     u4610:
  7099  00309C  C014  F009         	movff	___flmul@prod,??___flmul
  7100  0030A0  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7101  0030A4  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7102  0030A8  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7103  0030AC  340C               	rlcf	(??___flmul+3)^0,w,c
  7104  0030AE  320C               	rrcf	(??___flmul+3)^0,f,c
  7105  0030B0  320B               	rrcf	(??___flmul+2)^0,f,c
  7106  0030B2  320A               	rrcf	(??___flmul+1)^0,f,c
  7107  0030B4  3209               	rrcf	??___flmul^0,f,c
  7108  0030B6  C009  F014         	movff	??___flmul,___flmul@prod
  7109  0030BA  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7110  0030BE  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7111  0030C2  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7112  0030C6  4A18               	infsnz	___flmul@temp^0,f,c
  7113  0030C8  2A19               	incf	(___flmul@temp+1)^0,f,c
  7114  0030CA                     l4434:
  7115  0030CA  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7116  0030CC  EF70  F018         	goto	u4621
  7117  0030D0  5019               	movf	(___flmul@temp+1)^0,w,c
  7118  0030D2  E108               	bnz	u4620
  7119  0030D4  2818               	incf	___flmul@temp^0,w,c
  7120  0030D6  A0D8               	btfss	status,0,c
  7121  0030D8  EF70  F018         	goto	u4621
  7122  0030DC  EF72  F018         	goto	u4620
  7123  0030E0                     u4621:
  7124  0030E0  EF7C  F018         	goto	l4438
  7125  0030E4                     u4620:
  7126  0030E4  0E00               	movlw	0
  7127  0030E6  6E14               	movwf	___flmul@prod^0,c
  7128  0030E8  0E00               	movlw	0
  7129  0030EA  6E15               	movwf	(___flmul@prod+1)^0,c
  7130  0030EC  0E80               	movlw	128
  7131  0030EE  6E16               	movwf	(___flmul@prod+2)^0,c
  7132  0030F0  0E7F               	movlw	127
  7133  0030F2  6E17               	movwf	(___flmul@prod+3)^0,c
  7134  0030F4  EFAA  F018         	goto	l4450
  7135  0030F8                     l4438:
  7136  0030F8  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7137  0030FA  EF89  F018         	goto	u4630
  7138  0030FE  5019               	movf	(___flmul@temp+1)^0,w,c
  7139  003100  E106               	bnz	u4631
  7140  003102  0418               	decf	___flmul@temp^0,w,c
  7141  003104  B0D8               	btfsc	status,0,c
  7142  003106  EF87  F018         	goto	u4631
  7143  00310A  EF89  F018         	goto	u4630
  7144  00310E                     u4631:
  7145  00310E  EF95  F018         	goto	l1257
  7146  003112                     u4630:
  7147  003112  0E00               	movlw	0
  7148  003114  6E14               	movwf	___flmul@prod^0,c
  7149  003116  0E00               	movlw	0
  7150  003118  6E15               	movwf	(___flmul@prod+1)^0,c
  7151  00311A  0E00               	movlw	0
  7152  00311C  6E16               	movwf	(___flmul@prod+2)^0,c
  7153  00311E  0E00               	movlw	0
  7154  003120  6E17               	movwf	(___flmul@prod+3)^0,c
  7155  003122  0E00               	movlw	0
  7156  003124  6E0D               	movwf	___flmul@sign^0,c
  7157  003126  EFAA  F018         	goto	l4450
  7158  00312A                     l1257:
  7159  00312A  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7160  00312E  0EFF               	movlw	255
  7161  003130  1614               	andwf	___flmul@prod^0,f,c
  7162  003132  0EFF               	movlw	255
  7163  003134  1615               	andwf	(___flmul@prod+1)^0,f,c
  7164  003136  0E7F               	movlw	127
  7165  003138  1616               	andwf	(___flmul@prod+2)^0,f,c
  7166  00313A  0E00               	movlw	0
  7167  00313C  1617               	andwf	(___flmul@prod+3)^0,f,c
  7168  00313E  A013               	btfss	___flmul@bexp^0,0,c
  7169  003140  EFA4  F018         	goto	u4641
  7170  003144  EFA6  F018         	goto	u4640
  7171  003148                     u4641:
  7172  003148  EFA7  F018         	goto	l4448
  7173  00314C                     u4640:
  7174  00314C  8E16               	bsf	(___flmul@prod+2)^0,7,c
  7175  00314E                     l4448:
  7176  00314E  90D8               	bcf	status,0,c
  7177  003150  3013               	rrcf	___flmul@bexp^0,w,c
  7178  003152  6E17               	movwf	(___flmul@prod+3)^0,c
  7179  003154                     l4450:
  7180  003154  500D               	movf	___flmul@sign^0,w,c
  7181  003156  1217               	iorwf	(___flmul@prod+3)^0,f,c
  7182  003158  C014  F001         	movff	___flmul@prod,?___flmul
  7183  00315C  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7184  003160  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7185  003164  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7186  003168                     l1244:
  7187  003168  0012               	return		;funcret
  7188  00316A                     __end_of___flmul:
  7189                           	callstack 0
  7190                           
  7191 ;; *************** function ___fleq *****************
  7192 ;; Defined at:
  7193 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  ff1             4    0[COMRAM] unsigned char 
  7196 ;;  ff2             4    4[COMRAM] unsigned char 
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;		None
  7199 ;; Return value:  Size  Location     Type
  7200 ;;		None               void
  7201 ;; Registers used:
  7202 ;;		wreg, status,2, status,0
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7208 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7210 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7211 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7212 ;;Total ram usage:       12 bytes
  7213 ;; Hardware stack levels used: 1
  7214 ;; This function calls:
  7215 ;;		Nothing
  7216 ;; This function is called by:
  7217 ;;		_efgtoa
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text23
  7222  00527E                     __ptext23:
  7223                           	callstack 0
  7224  00527E                     ___fleq:
  7225                           	callstack 25
  7226  00527E  0E00               	movlw	0
  7227  005280  1401               	andwf	___fleq@ff1^0,w,c
  7228  005282  6E09               	movwf	??___fleq^0,c
  7229  005284  0E00               	movlw	0
  7230  005286  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7231  005288  6E0A               	movwf	(??___fleq+1)^0,c
  7232  00528A  0E80               	movlw	128
  7233  00528C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7234  00528E  6E0B               	movwf	(??___fleq+2)^0,c
  7235  005290  0E7F               	movlw	127
  7236  005292  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7237  005294  6E0C               	movwf	(??___fleq+3)^0,c
  7238  005296  5009               	movf	??___fleq^0,w,c
  7239  005298  100A               	iorwf	(??___fleq+1)^0,w,c
  7240  00529A  100B               	iorwf	(??___fleq+2)^0,w,c
  7241  00529C  100C               	iorwf	(??___fleq+3)^0,w,c
  7242  00529E  A4D8               	btfss	status,2,c
  7243  0052A0  EF54  F029         	goto	u4771
  7244  0052A4  EF56  F029         	goto	u4770
  7245  0052A8                     u4771:
  7246  0052A8  EF5E  F029         	goto	l4546
  7247  0052AC                     u4770:
  7248  0052AC  0E00               	movlw	0
  7249  0052AE  6E01               	movwf	___fleq@ff1^0,c
  7250  0052B0  0E00               	movlw	0
  7251  0052B2  6E02               	movwf	(___fleq@ff1+1)^0,c
  7252  0052B4  0E00               	movlw	0
  7253  0052B6  6E03               	movwf	(___fleq@ff1+2)^0,c
  7254  0052B8  0E00               	movlw	0
  7255  0052BA  6E04               	movwf	(___fleq@ff1+3)^0,c
  7256  0052BC                     l4546:
  7257  0052BC  0E00               	movlw	0
  7258  0052BE  1405               	andwf	___fleq@ff2^0,w,c
  7259  0052C0  6E09               	movwf	??___fleq^0,c
  7260  0052C2  0E00               	movlw	0
  7261  0052C4  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7262  0052C6  6E0A               	movwf	(??___fleq+1)^0,c
  7263  0052C8  0E80               	movlw	128
  7264  0052CA  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7265  0052CC  6E0B               	movwf	(??___fleq+2)^0,c
  7266  0052CE  0E7F               	movlw	127
  7267  0052D0  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7268  0052D2  6E0C               	movwf	(??___fleq+3)^0,c
  7269  0052D4  5009               	movf	??___fleq^0,w,c
  7270  0052D6  100A               	iorwf	(??___fleq+1)^0,w,c
  7271  0052D8  100B               	iorwf	(??___fleq+2)^0,w,c
  7272  0052DA  100C               	iorwf	(??___fleq+3)^0,w,c
  7273  0052DC  A4D8               	btfss	status,2,c
  7274  0052DE  EF73  F029         	goto	u4781
  7275  0052E2  EF75  F029         	goto	u4780
  7276  0052E6                     u4781:
  7277  0052E6  EF7D  F029         	goto	l4550
  7278  0052EA                     u4780:
  7279  0052EA  0E00               	movlw	0
  7280  0052EC  6E05               	movwf	___fleq@ff2^0,c
  7281  0052EE  0E00               	movlw	0
  7282  0052F0  6E06               	movwf	(___fleq@ff2+1)^0,c
  7283  0052F2  0E00               	movlw	0
  7284  0052F4  6E07               	movwf	(___fleq@ff2+2)^0,c
  7285  0052F6  0E00               	movlw	0
  7286  0052F8  6E08               	movwf	(___fleq@ff2+3)^0,c
  7287  0052FA                     l4550:
  7288  0052FA  5005               	movf	___fleq@ff2^0,w,c
  7289  0052FC  1801               	xorwf	___fleq@ff1^0,w,c
  7290  0052FE  E10F               	bnz	u4790
  7291  005300  5006               	movf	(___fleq@ff2+1)^0,w,c
  7292  005302  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7293  005304  E10C               	bnz	u4790
  7294  005306  5007               	movf	(___fleq@ff2+2)^0,w,c
  7295  005308  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7296  00530A  E109               	bnz	u4790
  7297  00530C  5008               	movf	(___fleq@ff2+3)^0,w,c
  7298  00530E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7299  005310  B4D8               	btfsc	status,2,c
  7300  005312  EF8D  F029         	goto	u4791
  7301  005316  EF8F  F029         	goto	u4790
  7302  00531A                     u4791:
  7303  00531A  EF92  F029         	goto	l4554
  7304  00531E                     u4790:
  7305  00531E  90D8               	bcf	status,0,c
  7306  005320  EF93  F029         	goto	l885
  7307  005324                     l4554:
  7308  005324  80D8               	bsf	status,0,c
  7309  005326                     l885:
  7310  005326  0012               	return		;funcret
  7311  005328                     __end_of___fleq:
  7312                           	callstack 0
  7313                           
  7314 ;; *************** function ___awmod *****************
  7315 ;; Defined at:
  7316 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  dividend        2    0[COMRAM] int 
  7319 ;;  divisor         2    2[COMRAM] int 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  sign            1    5[COMRAM] unsigned char 
  7322 ;;  counter         1    4[COMRAM] unsigned char 
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  2    0[COMRAM] int 
  7325 ;; Registers used:
  7326 ;;		wreg, status,2, status,0
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7332 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7336 ;;Total ram usage:        6 bytes
  7337 ;; Hardware stack levels used: 1
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_efgtoa
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text24
  7346  0051CE                     __ptext24:
  7347                           	callstack 0
  7348  0051CE                     ___awmod:
  7349                           	callstack 25
  7350  0051CE  0E00               	movlw	0
  7351  0051D0  6E06               	movwf	___awmod@sign^0,c
  7352  0051D2  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7353  0051D4  EFF0  F028         	goto	u4710
  7354  0051D8  EFEE  F028         	goto	u4711
  7355  0051DC                     u4711:
  7356  0051DC  EFF6  F028         	goto	l4514
  7357  0051E0                     u4710:
  7358  0051E0  6C01               	negf	___awmod@dividend^0,c
  7359  0051E2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7360  0051E4  B0D8               	btfsc	status,0,c
  7361  0051E6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7362  0051E8  0E01               	movlw	1
  7363  0051EA  6E06               	movwf	___awmod@sign^0,c
  7364  0051EC                     l4514:
  7365  0051EC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7366  0051EE  EFFD  F028         	goto	u4720
  7367  0051F2  EFFB  F028         	goto	u4721
  7368  0051F6                     u4721:
  7369  0051F6  EF01  F029         	goto	l4518
  7370  0051FA                     u4720:
  7371  0051FA  6C03               	negf	___awmod@divisor^0,c
  7372  0051FC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7373  0051FE  B0D8               	btfsc	status,0,c
  7374  005200  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7375  005202                     l4518:
  7376  005202  5003               	movf	___awmod@divisor^0,w,c
  7377  005204  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7378  005206  B4D8               	btfsc	status,2,c
  7379  005208  EF08  F029         	goto	u4731
  7380  00520C  EF0A  F029         	goto	u4730
  7381  005210                     u4731:
  7382  005210  EF2E  F029         	goto	l4534
  7383  005214                     u4730:
  7384  005214  0E01               	movlw	1
  7385  005216  6E05               	movwf	___awmod@counter^0,c
  7386  005218  EF12  F029         	goto	l4524
  7387  00521C                     l4522:
  7388  00521C  90D8               	bcf	status,0,c
  7389  00521E  3603               	rlcf	___awmod@divisor^0,f,c
  7390  005220  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7391  005222  2A05               	incf	___awmod@counter^0,f,c
  7392  005224                     l4524:
  7393  005224  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7394  005226  EF17  F029         	goto	u4741
  7395  00522A  EF19  F029         	goto	u4740
  7396  00522E                     u4741:
  7397  00522E  EF0E  F029         	goto	l4522
  7398  005232                     u4740:
  7399  005232                     l4526:
  7400  005232  5003               	movf	___awmod@divisor^0,w,c
  7401  005234  5C01               	subwf	___awmod@dividend^0,w,c
  7402  005236  5004               	movf	(___awmod@divisor+1)^0,w,c
  7403  005238  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7404  00523A  A0D8               	btfss	status,0,c
  7405  00523C  EF22  F029         	goto	u4751
  7406  005240  EF24  F029         	goto	u4750
  7407  005244                     u4751:
  7408  005244  EF28  F029         	goto	l4530
  7409  005248                     u4750:
  7410  005248  5003               	movf	___awmod@divisor^0,w,c
  7411  00524A  5E01               	subwf	___awmod@dividend^0,f,c
  7412  00524C  5004               	movf	(___awmod@divisor+1)^0,w,c
  7413  00524E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7414  005250                     l4530:
  7415  005250  90D8               	bcf	status,0,c
  7416  005252  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7417  005254  3203               	rrcf	___awmod@divisor^0,f,c
  7418  005256  2E05               	decfsz	___awmod@counter^0,f,c
  7419  005258  EF19  F029         	goto	l4526
  7420  00525C                     l4534:
  7421  00525C  5006               	movf	___awmod@sign^0,w,c
  7422  00525E  B4D8               	btfsc	status,2,c
  7423  005260  EF34  F029         	goto	u4761
  7424  005264  EF36  F029         	goto	u4760
  7425  005268                     u4761:
  7426  005268  EF3A  F029         	goto	l4538
  7427  00526C                     u4760:
  7428  00526C  6C01               	negf	___awmod@dividend^0,c
  7429  00526E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7430  005270  B0D8               	btfsc	status,0,c
  7431  005272  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7432  005274                     l4538:
  7433  005274  C001  F001         	movff	___awmod@dividend,?___awmod
  7434  005278  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7435  00527C  0012               	return		;funcret
  7436  00527E                     __end_of___awmod:
  7437                           	callstack 0
  7438                           
  7439 ;; *************** function _dtoa *****************
  7440 ;; Defined at:
  7441 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7444 ;;		 -> sprintf@f(6), 
  7445 ;;  d               8   29[COMRAM] long long 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;  n               8   53[COMRAM] long long 
  7448 ;;  i               2   61[COMRAM] int 
  7449 ;;  s               2   51[COMRAM] int 
  7450 ;;  w               2   49[COMRAM] int 
  7451 ;;  p               2   47[COMRAM] int 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  2   27[COMRAM] int 
  7454 ;; Registers used:
  7455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7461 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7463 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7464 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7465 ;;Total ram usage:       36 bytes
  7466 ;; Hardware stack levels used: 1
  7467 ;; Hardware stack levels required when called: 4
  7468 ;; This function calls:
  7469 ;;		___aodiv
  7470 ;;		___aomod
  7471 ;;		_abs
  7472 ;;		_pad
  7473 ;; This function is called by:
  7474 ;;		_vfpfcnvrt
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text25
  7479  003504                     __ptext25:
  7480                           	callstack 0
  7481  003504                     _dtoa:
  7482                           	callstack 22
  7483  003504                     
  7484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7485  003504  C01E  F036         	movff	dtoa@d,dtoa@n
  7486  003508  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7487  00350C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7488  003510  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7489  003514  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7490  003518  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7491  00351C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7492  003520  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7493  003524                     
  7494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7495  003524  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7496  003526  EF97  F01A         	goto	u5261
  7497  00352A  EF9A  F01A         	goto	u5260
  7498  00352E                     u5261:
  7499  00352E  0E01               	movlw	1
  7500  003530  EF9B  F01A         	goto	u5270
  7501  003534                     u5260:
  7502  003534  0E00               	movlw	0
  7503  003536                     u5270:
  7504  003536  6E34               	movwf	dtoa@s^0,c
  7505  003538  6A35               	clrf	(dtoa@s+1)^0,c
  7506                           
  7507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7508  00353A  5034               	movf	dtoa@s^0,w,c
  7509  00353C  1035               	iorwf	(dtoa@s+1)^0,w,c
  7510  00353E  B4D8               	btfsc	status,2,c
  7511  003540  EFA4  F01A         	goto	u5281
  7512  003544  EFA6  F01A         	goto	u5280
  7513  003548                     u5281:
  7514  003548  EFB6  F01A         	goto	l4748
  7515  00354C                     u5280:
  7516  00354C                     
  7517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7518  00354C  1E3D               	comf	(dtoa@n+7)^0,f,c
  7519  00354E  1E3C               	comf	(dtoa@n+6)^0,f,c
  7520  003550  1E3B               	comf	(dtoa@n+5)^0,f,c
  7521  003552  1E3A               	comf	(dtoa@n+4)^0,f,c
  7522  003554  1E39               	comf	(dtoa@n+3)^0,f,c
  7523  003556  1E38               	comf	(dtoa@n+2)^0,f,c
  7524  003558  1E37               	comf	(dtoa@n+1)^0,f,c
  7525  00355A  6C36               	negf	dtoa@n^0,c
  7526  00355C  0E00               	movlw	0
  7527  00355E  2237               	addwfc	(dtoa@n+1)^0,f,c
  7528  003560  2238               	addwfc	(dtoa@n+2)^0,f,c
  7529  003562  2239               	addwfc	(dtoa@n+3)^0,f,c
  7530  003564  223A               	addwfc	(dtoa@n+4)^0,f,c
  7531  003566  223B               	addwfc	(dtoa@n+5)^0,f,c
  7532  003568  223C               	addwfc	(dtoa@n+6)^0,f,c
  7533  00356A  223D               	addwfc	(dtoa@n+7)^0,f,c
  7534  00356C                     l4748:
  7535                           
  7536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7537  00356C  0100               	movlb	0	; () banked
  7538  00356E  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  7539  003570  EFBC  F01A         	goto	u5291
  7540  003574  EFBE  F01A         	goto	u5290
  7541  003578                     u5291:
  7542  003578  EFBF  F01A         	goto	l4752
  7543  00357C                     u5290:
  7544  00357C                     
  7545                           ; BSR set to: 0
  7546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7547  00357C  93F0               	bcf	_flags& (0+255),1,b
  7548  00357E                     l4752:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7552  00357E  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  7553  003580  EFCC  F01A         	goto	u5300
  7554  003584  51EF               	movf	(_prec+1)& (0+255),w,b
  7555  003586  E106               	bnz	u5301
  7556  003588  05EE               	decf	_prec& (0+255),w,b
  7557  00358A  B0D8               	btfsc	status,0,c
  7558  00358C  EFCA  F01A         	goto	u5301
  7559  003590  EFCC  F01A         	goto	u5300
  7560  003594                     u5301:
  7561  003594  EFD2  F01A         	goto	l1358
  7562  003598                     u5300:
  7563  003598                     
  7564                           ; BSR set to: 0
  7565  003598  0E00               	movlw	0
  7566  00359A  6E31               	movwf	(dtoa@p+1)^0,c
  7567  00359C  0E01               	movlw	1
  7568  00359E  6E30               	movwf	dtoa@p^0,c
  7569  0035A0  EFD6  F01A         	goto	l1360
  7570  0035A4                     l1358:
  7571                           
  7572                           ; BSR set to: 0
  7573  0035A4  C0EE  F030         	movff	_prec,dtoa@p
  7574  0035A8  C0EF  F031         	movff	_prec+1,dtoa@p+1
  7575  0035AC                     l1360:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7579  0035AC  C0EC  F032         	movff	_width,dtoa@w
  7580  0035B0  C0ED  F033         	movff	_width+1,dtoa@w+1
  7581  0035B4                     
  7582                           ; BSR set to: 0
  7583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7584  0035B4  5034               	movf	dtoa@s^0,w,c
  7585  0035B6  1035               	iorwf	(dtoa@s+1)^0,w,c
  7586  0035B8  A4D8               	btfss	status,2,c
  7587  0035BA  EFE1  F01A         	goto	u5311
  7588  0035BE  EFE3  F01A         	goto	u5310
  7589  0035C2                     u5311:
  7590  0035C2  EFEA  F01A         	goto	l4760
  7591  0035C6                     u5310:
  7592  0035C6                     
  7593                           ; BSR set to: 0
  7594  0035C6  A5F0               	btfss	_flags& (0+255),2,b
  7595  0035C8  EFE8  F01A         	goto	u5321
  7596  0035CC  EFEA  F01A         	goto	u5320
  7597  0035D0                     u5321:
  7598  0035D0  EFED  F01A         	goto	l4762
  7599  0035D4                     u5320:
  7600  0035D4                     l4760:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7604  0035D4  0632               	decf	dtoa@w^0,f,c
  7605  0035D6  A0D8               	btfss	status,0,c
  7606  0035D8  0633               	decf	(dtoa@w+1)^0,f,c
  7607  0035DA                     l4762:
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7611  0035DA  0E00               	movlw	0
  7612  0035DC  6E3F               	movwf	(dtoa@i+1)^0,c
  7613  0035DE  0E4F               	movlw	79
  7614  0035E0  6E3E               	movwf	dtoa@i^0,c
  7615  0035E2                     
  7616                           ; BSR set to: 0
  7617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7618  0035E2  0E00               	movlw	0
  7619  0035E4  0101               	movlb	1	; () banked
  7620  0035E6  6FE9               	movwf	(_dbuf+79)& (0+255),b
  7621                           
  7622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7623  0035E8  EF72  F01B         	goto	l4776
  7624  0035EC                     l4766:
  7625                           
  7626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7627  0035EC  063E               	decf	dtoa@i^0,f,c
  7628  0035EE  A0D8               	btfss	status,0,c
  7629  0035F0  063F               	decf	(dtoa@i+1)^0,f,c
  7630  0035F2                     
  7631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7632  0035F2  0E9A               	movlw	low _dbuf
  7633  0035F4  243E               	addwf	dtoa@i^0,w,c
  7634  0035F6  6ED9               	movwf	fsr2l,c
  7635  0035F8  0E01               	movlw	high _dbuf
  7636  0035FA  203F               	addwfc	(dtoa@i+1)^0,w,c
  7637  0035FC  6EDA               	movwf	fsr2h,c
  7638  0035FE  C036  F001         	movff	dtoa@n,___aomod@dividend
  7639  003602  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7640  003606  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7641  00360A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7642  00360E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7643  003612  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7644  003616  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7645  00361A  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7646  00361E  0E0A               	movlw	10
  7647  003620  6E09               	movwf	___aomod@divisor^0,c
  7648  003622  0E00               	movlw	0
  7649  003624  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7650  003626  0E00               	movlw	0
  7651  003628  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7652  00362A  0E00               	movlw	0
  7653  00362C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7654  00362E  0E00               	movlw	0
  7655  003630  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7656  003632  0E00               	movlw	0
  7657  003634  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7658  003636  0E00               	movlw	0
  7659  003638  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7660  00363A  0E00               	movlw	0
  7661  00363C  6E10               	movwf	(___aomod@divisor+7)^0,c
  7662  00363E  EC78  F022         	call	___aomod	;wreg free
  7663  003642  C001  F026         	movff	?___aomod,??_dtoa
  7664  003646  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7665  00364A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7666  00364E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7667  003652  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7668  003656  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7669  00365A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7670  00365E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7671  003662  C026  F013         	movff	??_dtoa,abs@a
  7672  003666  C028  F014         	movff	??_dtoa+2,abs@a+1
  7673  00366A  EC4E  F02D         	call	_abs	;wreg free
  7674  00366E  5013               	movf	?_abs^0,w,c
  7675  003670  0F30               	addlw	48
  7676  003672  6EDF               	movwf	indf2,c
  7677  003674                     
  7678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7679  003674  0630               	decf	dtoa@p^0,f,c
  7680  003676  A0D8               	btfss	status,0,c
  7681  003678  0631               	decf	(dtoa@p+1)^0,f,c
  7682  00367A                     
  7683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7684  00367A  0632               	decf	dtoa@w^0,f,c
  7685  00367C  A0D8               	btfss	status,0,c
  7686  00367E  0633               	decf	(dtoa@w+1)^0,f,c
  7687  003680                     
  7688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7689  003680  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7690  003684  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7691  003688  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7692  00368C  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7693  003690  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7694  003694  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7695  003698  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7696  00369C  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7697  0036A0  0E0A               	movlw	10
  7698  0036A2  6E09               	movwf	___aodiv@divisor^0,c
  7699  0036A4  0E00               	movlw	0
  7700  0036A6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7701  0036A8  0E00               	movlw	0
  7702  0036AA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7703  0036AC  0E00               	movlw	0
  7704  0036AE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7705  0036B0  0E00               	movlw	0
  7706  0036B2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7707  0036B4  0E00               	movlw	0
  7708  0036B6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7709  0036B8  0E00               	movlw	0
  7710  0036BA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7711  0036BC  0E00               	movlw	0
  7712  0036BE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7713  0036C0  ECB4  F021         	call	___aodiv	;wreg free
  7714  0036C4  C001  F036         	movff	?___aodiv,dtoa@n
  7715  0036C8  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7716  0036CC  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7717  0036D0  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7718  0036D4  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7719  0036D8  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7720  0036DC  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7721  0036E0  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7722  0036E4                     l4776:
  7723                           
  7724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7725  0036E4  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7726  0036E6  EF7D  F01B         	goto	u5331
  7727  0036EA  503F               	movf	(dtoa@i+1)^0,w,c
  7728  0036EC  E108               	bnz	u5330
  7729  0036EE  043E               	decf	dtoa@i^0,w,c
  7730  0036F0  A0D8               	btfss	status,0,c
  7731  0036F2  EF7D  F01B         	goto	u5331
  7732  0036F6  EF7F  F01B         	goto	u5330
  7733  0036FA                     u5331:
  7734  0036FA  EFB0  F01B         	goto	l4786
  7735  0036FE                     u5330:
  7736  0036FE  5036               	movf	dtoa@n^0,w,c
  7737  003700  1037               	iorwf	(dtoa@n+1)^0,w,c
  7738  003702  1038               	iorwf	(dtoa@n+2)^0,w,c
  7739  003704  1039               	iorwf	(dtoa@n+3)^0,w,c
  7740  003706  103A               	iorwf	(dtoa@n+4)^0,w,c
  7741  003708  103B               	iorwf	(dtoa@n+5)^0,w,c
  7742  00370A  103C               	iorwf	(dtoa@n+6)^0,w,c
  7743  00370C  103D               	iorwf	(dtoa@n+7)^0,w,c
  7744  00370E  A4D8               	btfss	status,2,c
  7745  003710  EF8C  F01B         	goto	u5341
  7746  003714  EF8E  F01B         	goto	u5340
  7747  003718                     u5341:
  7748  003718  EFF6  F01A         	goto	l4766
  7749  00371C                     u5340:
  7750  00371C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7751  00371E  EF9B  F01B         	goto	u5350
  7752  003722  5031               	movf	(dtoa@p+1)^0,w,c
  7753  003724  E106               	bnz	u5351
  7754  003726  0430               	decf	dtoa@p^0,w,c
  7755  003728  B0D8               	btfsc	status,0,c
  7756  00372A  EF99  F01B         	goto	u5351
  7757  00372E  EF9B  F01B         	goto	u5350
  7758  003732                     u5351:
  7759  003732  EFF6  F01A         	goto	l4766
  7760  003736                     u5350:
  7761  003736  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7762  003738  EFA6  F01B         	goto	u5361
  7763  00373C  5033               	movf	(dtoa@w+1)^0,w,c
  7764  00373E  E108               	bnz	u5360
  7765  003740  0432               	decf	dtoa@w^0,w,c
  7766  003742  A0D8               	btfss	status,0,c
  7767  003744  EFA6  F01B         	goto	u5361
  7768  003748  EFA8  F01B         	goto	u5360
  7769  00374C                     u5361:
  7770  00374C  EFB0  F01B         	goto	l4786
  7771  003750                     u5360:
  7772  003750  0100               	movlb	0	; () banked
  7773  003752  B3F0               	btfsc	_flags& (0+255),1,b
  7774  003754  EFAE  F01B         	goto	u5371
  7775  003758  EFB0  F01B         	goto	u5370
  7776  00375C                     u5371:
  7777  00375C  EFF6  F01A         	goto	l4766
  7778  003760                     u5370:
  7779  003760                     l4786:
  7780                           
  7781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7782  003760  5034               	movf	dtoa@s^0,w,c
  7783  003762  1035               	iorwf	(dtoa@s+1)^0,w,c
  7784  003764  A4D8               	btfss	status,2,c
  7785  003766  EFB7  F01B         	goto	u5381
  7786  00376A  EFB9  F01B         	goto	u5380
  7787  00376E                     u5381:
  7788  00376E  EFC1  F01B         	goto	l4790
  7789  003772                     u5380:
  7790  003772  0100               	movlb	0	; () banked
  7791  003774  A5F0               	btfss	_flags& (0+255),2,b
  7792  003776  EFBF  F01B         	goto	u5391
  7793  00377A  EFC1  F01B         	goto	u5390
  7794  00377E                     u5391:
  7795  00377E  EFDF  F01B         	goto	l4800
  7796  003782                     u5390:
  7797  003782                     l4790:
  7798                           
  7799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7800  003782  063E               	decf	dtoa@i^0,f,c
  7801  003784  A0D8               	btfss	status,0,c
  7802  003786  063F               	decf	(dtoa@i+1)^0,f,c
  7803  003788                     
  7804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7805  003788  5034               	movf	dtoa@s^0,w,c
  7806  00378A  1035               	iorwf	(dtoa@s+1)^0,w,c
  7807  00378C  A4D8               	btfss	status,2,c
  7808  00378E  EFCB  F01B         	goto	u5401
  7809  003792  EFCD  F01B         	goto	u5400
  7810  003796                     u5401:
  7811  003796  EFD3  F01B         	goto	l4796
  7812  00379A                     u5400:
  7813  00379A  0E00               	movlw	0
  7814  00379C  6E2F               	movwf	(_dtoa$2924+1)^0,c
  7815  00379E  0E2B               	movlw	43
  7816  0037A0  6E2E               	movwf	_dtoa$2924^0,c
  7817  0037A2  EFD7  F01B         	goto	l4798
  7818  0037A6                     l4796:
  7819  0037A6  0E00               	movlw	0
  7820  0037A8  6E2F               	movwf	(_dtoa$2924+1)^0,c
  7821  0037AA  0E2D               	movlw	45
  7822  0037AC  6E2E               	movwf	_dtoa$2924^0,c
  7823  0037AE                     l4798:
  7824  0037AE  0E9A               	movlw	low _dbuf
  7825  0037B0  243E               	addwf	dtoa@i^0,w,c
  7826  0037B2  6ED9               	movwf	fsr2l,c
  7827  0037B4  0E01               	movlw	high _dbuf
  7828  0037B6  203F               	addwfc	(dtoa@i+1)^0,w,c
  7829  0037B8  6EDA               	movwf	fsr2h,c
  7830  0037BA  C02E  FFDF         	movff	_dtoa$2924,indf2
  7831  0037BE                     l4800:
  7832                           
  7833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7834  0037BE  C01C  F011         	movff	dtoa@fp,pad@fp
  7835  0037C2  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7836  0037C6  0E9A               	movlw	low _dbuf
  7837  0037C8  243E               	addwf	dtoa@i^0,w,c
  7838  0037CA  6E13               	movwf	pad@buf^0,c
  7839  0037CC  0E01               	movlw	high _dbuf
  7840  0037CE  203F               	addwfc	(dtoa@i+1)^0,w,c
  7841  0037D0  6E14               	movwf	(pad@buf+1)^0,c
  7842  0037D2  C032  F015         	movff	dtoa@w,pad@p
  7843  0037D6  C033  F016         	movff	dtoa@w+1,pad@p+1
  7844  0037DA  EC22  F028         	call	_pad	;wreg free
  7845  0037DE  C011  F01C         	movff	?_pad,?_dtoa
  7846  0037E2  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7847  0037E6  0012               	return		;funcret
  7848  0037E8                     __end_of_dtoa:
  7849                           	callstack 0
  7850                           
  7851 ;; *************** function _pad *****************
  7852 ;; Defined at:
  7853 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7856 ;;		 -> sprintf@f(6), 
  7857 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7858 ;;		 -> dbuf(80), 
  7859 ;;  p               2   20[COMRAM] int 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  w               2   25[COMRAM] int 
  7862 ;;  i               2   23[COMRAM] int 
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  2   16[COMRAM] int 
  7865 ;; Registers used:
  7866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7872 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7873 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;Total ram usage:       11 bytes
  7877 ;; Hardware stack levels used: 1
  7878 ;; Hardware stack levels required when called: 3
  7879 ;; This function calls:
  7880 ;;		_fputc
  7881 ;;		_fputs
  7882 ;;		_strlen
  7883 ;; This function is called by:
  7884 ;;		_dtoa
  7885 ;;		_efgtoa
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text26
  7890  005044                     __ptext26:
  7891                           	callstack 0
  7892  005044                     _pad:
  7893                           	callstack 22
  7894  005044                     
  7895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7896  005044  0100               	movlb	0	; () banked
  7897  005046  A1F0               	btfss	_flags& (0+255),0,b
  7898  005048  EF28  F028         	goto	u4931
  7899  00504C  EF2A  F028         	goto	u4930
  7900  005050                     u4931:
  7901  005050  EF34  F028         	goto	l4636
  7902  005054                     u4930:
  7903  005054                     
  7904                           ; BSR set to: 0
  7905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7906  005054  C013  F00A         	movff	pad@buf,fputs@s
  7907  005058  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7908  00505C  C011  F00C         	movff	pad@fp,fputs@fp
  7909  005060  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7910  005064  EC0B  F02D         	call	_fputs	;wreg free
  7911  005068                     l4636:
  7912                           
  7913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7914  005068  BE16               	btfsc	(pad@p+1)^0,7,c
  7915  00506A  EF39  F028         	goto	u4941
  7916  00506E  EF3B  F028         	goto	u4940
  7917  005072                     u4941:
  7918  005072  EF41  F028         	goto	l4640
  7919  005076                     u4940:
  7920  005076  C015  F01A         	movff	pad@p,pad@w
  7921  00507A  C016  F01B         	movff	pad@p+1,pad@w+1
  7922  00507E  EF45  F028         	goto	l1347
  7923  005082                     l4640:
  7924  005082  0E00               	movlw	0
  7925  005084  6E1B               	movwf	(pad@w+1)^0,c
  7926  005086  0E00               	movlw	0
  7927  005088  6E1A               	movwf	pad@w^0,c
  7928  00508A                     l1347:
  7929                           
  7930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7931  00508A  0E00               	movlw	0
  7932  00508C  6E19               	movwf	(pad@i+1)^0,c
  7933  00508E  0E00               	movlw	0
  7934  005090  6E18               	movwf	pad@i^0,c
  7935                           
  7936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7937  005092  EF57  F028         	goto	l4646
  7938  005096                     l4642:
  7939                           
  7940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7941  005096  0E00               	movlw	0
  7942  005098  6E02               	movwf	(fputc@c+1)^0,c
  7943  00509A  0E20               	movlw	32
  7944  00509C  6E01               	movwf	fputc@c^0,c
  7945  00509E  C011  F003         	movff	pad@fp,fputc@fp
  7946  0050A2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7947  0050A6  ECBD  F027         	call	_fputc	;wreg free
  7948  0050AA                     
  7949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7950  0050AA  4A18               	infsnz	pad@i^0,f,c
  7951  0050AC  2A19               	incf	(pad@i+1)^0,f,c
  7952  0050AE                     l4646:
  7953                           
  7954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7955  0050AE  501A               	movf	pad@w^0,w,c
  7956  0050B0  5C18               	subwf	pad@i^0,w,c
  7957  0050B2  5019               	movf	(pad@i+1)^0,w,c
  7958  0050B4  0A80               	xorlw	128
  7959  0050B6  6E17               	movwf	??_pad^0,c
  7960  0050B8  501B               	movf	(pad@w+1)^0,w,c
  7961  0050BA  0A80               	xorlw	128
  7962  0050BC  5817               	subwfb	??_pad^0,w,c
  7963  0050BE  A0D8               	btfss	status,0,c
  7964  0050C0  EF64  F028         	goto	u4951
  7965  0050C4  EF66  F028         	goto	u4950
  7966  0050C8                     u4951:
  7967  0050C8  EF4B  F028         	goto	l4642
  7968  0050CC                     u4950:
  7969  0050CC                     
  7970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7971  0050CC  0100               	movlb	0	; () banked
  7972  0050CE  B1F0               	btfsc	_flags& (0+255),0,b
  7973  0050D0  EF6C  F028         	goto	u4961
  7974  0050D4  EF6E  F028         	goto	u4960
  7975  0050D8                     u4961:
  7976  0050D8  EF78  F028         	goto	l4650
  7977  0050DC                     u4960:
  7978  0050DC                     
  7979                           ; BSR set to: 0
  7980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7981  0050DC  C013  F00A         	movff	pad@buf,fputs@s
  7982  0050E0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7983  0050E4  C011  F00C         	movff	pad@fp,fputs@fp
  7984  0050E8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7985  0050EC  EC0B  F02D         	call	_fputs	;wreg free
  7986  0050F0                     l4650:
  7987                           
  7988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7989  0050F0  C013  F001         	movff	pad@buf,strlen@s
  7990  0050F4  C014  F002         	movff	pad@buf+1,strlen@s+1
  7991  0050F8  ECDE  F02D         	call	_strlen	;wreg free
  7992  0050FC  501A               	movf	pad@w^0,w,c
  7993  0050FE  2401               	addwf	?_strlen^0,w,c
  7994  005100  6E11               	movwf	?_pad^0,c
  7995  005102  501B               	movf	(pad@w+1)^0,w,c
  7996  005104  2002               	addwfc	(?_strlen+1)^0,w,c
  7997  005106  6E12               	movwf	(?_pad+1)^0,c
  7998  005108  0012               	return		;funcret
  7999  00510A                     __end_of_pad:
  8000                           	callstack 0
  8001                           
  8002 ;; *************** function _strlen *****************
  8003 ;; Defined at:
  8004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8007 ;;		 -> dbuf(80), 
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8010 ;;		 -> dbuf(80), 
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  2    0[COMRAM] unsigned int 
  8013 ;; Registers used:
  8014 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8024 ;;Total ram usage:        4 bytes
  8025 ;; Hardware stack levels used: 1
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_pad
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text27
  8034  005BBC                     __ptext27:
  8035                           	callstack 0
  8036  005BBC                     _strlen:
  8037                           	callstack 24
  8038  005BBC  C001  F003         	movff	strlen@s,strlen@a
  8039  005BC0  C002  F004         	movff	strlen@s+1,strlen@a+1
  8040  005BC4  EFE6  F02D         	goto	l4092
  8041  005BC8                     l4090:
  8042  005BC8  4A01               	infsnz	strlen@s^0,f,c
  8043  005BCA  2A02               	incf	(strlen@s+1)^0,f,c
  8044  005BCC                     l4092:
  8045  005BCC  C001  FFD9         	movff	strlen@s,fsr2l
  8046  005BD0  C002  FFDA         	movff	strlen@s+1,fsr2h
  8047  005BD4  50DF               	movf	indf2,w,c
  8048  005BD6  A4D8               	btfss	status,2,c
  8049  005BD8  EFF0  F02D         	goto	u4071
  8050  005BDC  EFF2  F02D         	goto	u4070
  8051  005BE0                     u4071:
  8052  005BE0  EFE4  F02D         	goto	l4090
  8053  005BE4                     u4070:
  8054  005BE4  5003               	movf	strlen@a^0,w,c
  8055  005BE6  5C01               	subwf	strlen@s^0,w,c
  8056  005BE8  6E01               	movwf	?_strlen^0,c
  8057  005BEA  5004               	movf	(strlen@a+1)^0,w,c
  8058  005BEC  5802               	subwfb	(strlen@s+1)^0,w,c
  8059  005BEE  6E02               	movwf	(?_strlen+1)^0,c
  8060  005BF0  0012               	return		;funcret
  8061  005BF2                     __end_of_strlen:
  8062                           	callstack 0
  8063                           
  8064 ;; *************** function _fputs *****************
  8065 ;; Defined at:
  8066 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8069 ;;		 -> dbuf(80), 
  8070 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8071 ;;		 -> sprintf@f(6), 
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  i               2   14[COMRAM] int 
  8074 ;;  c               1   13[COMRAM] unsigned char 
  8075 ;; Return value:  Size  Location     Type
  8076 ;;                  2    9[COMRAM] int 
  8077 ;; Registers used:
  8078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8085 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8087 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8088 ;;Total ram usage:        7 bytes
  8089 ;; Hardware stack levels used: 1
  8090 ;; Hardware stack levels required when called: 2
  8091 ;; This function calls:
  8092 ;;		_fputc
  8093 ;; This function is called by:
  8094 ;;		_pad
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text28
  8099  005A16                     __ptext28:
  8100                           	callstack 0
  8101  005A16                     _fputs:
  8102                           	callstack 22
  8103  005A16  0E00               	movlw	0
  8104  005A18  6E10               	movwf	(fputs@i+1)^0,c
  8105  005A1A  0E00               	movlw	0
  8106  005A1C  6E0F               	movwf	fputs@i^0,c
  8107  005A1E  EF1C  F02D         	goto	l4086
  8108  005A22                     l4082:
  8109  005A22  C00E  F001         	movff	fputs@c,fputc@c
  8110  005A26  6A02               	clrf	(fputc@c+1)^0,c
  8111  005A28  C00C  F003         	movff	fputs@fp,fputc@fp
  8112  005A2C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8113  005A30  ECBD  F027         	call	_fputc	;wreg free
  8114  005A34  4A0F               	infsnz	fputs@i^0,f,c
  8115  005A36  2A10               	incf	(fputs@i+1)^0,f,c
  8116  005A38                     l4086:
  8117  005A38  500F               	movf	fputs@i^0,w,c
  8118  005A3A  240A               	addwf	fputs@s^0,w,c
  8119  005A3C  6ED9               	movwf	fsr2l,c
  8120  005A3E  5010               	movf	(fputs@i+1)^0,w,c
  8121  005A40  200B               	addwfc	(fputs@s+1)^0,w,c
  8122  005A42  6EDA               	movwf	fsr2h,c
  8123  005A44  50DF               	movf	indf2,w,c
  8124  005A46  6E0E               	movwf	fputs@c^0,c
  8125  005A48  500E               	movf	fputs@c^0,w,c
  8126  005A4A  A4D8               	btfss	status,2,c
  8127  005A4C  EF2A  F02D         	goto	u4061
  8128  005A50  EF2C  F02D         	goto	u4060
  8129  005A54                     u4061:
  8130  005A54  EF11  F02D         	goto	l4082
  8131  005A58                     u4060:
  8132  005A58  0012               	return		;funcret
  8133  005A5A                     __end_of_fputs:
  8134                           	callstack 0
  8135                           
  8136 ;; *************** function _fputc *****************
  8137 ;; Defined at:
  8138 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  c               2    0[COMRAM] int 
  8141 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8142 ;;		 -> sprintf@f(6), 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;		None
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  2    0[COMRAM] int 
  8147 ;; Registers used:
  8148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8156 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8158 ;;Total ram usage:        9 bytes
  8159 ;; Hardware stack levels used: 1
  8160 ;; Hardware stack levels required when called: 1
  8161 ;; This function calls:
  8162 ;;		_putch
  8163 ;; This function is called by:
  8164 ;;		_pad
  8165 ;;		_vfpfcnvrt
  8166 ;;		_fputs
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           	psect	text29
  8171  004F7A                     __ptext29:
  8172                           	callstack 0
  8173  004F7A                     _fputc:
  8174                           	callstack 25
  8175  004F7A  5003               	movf	fputc@fp^0,w,c
  8176  004F7C  1004               	iorwf	(fputc@fp+1)^0,w,c
  8177  004F7E  B4D8               	btfsc	status,2,c
  8178  004F80  EFC4  F027         	goto	u3631
  8179  004F84  EFC6  F027         	goto	u3630
  8180  004F88                     u3631:
  8181  004F88  EFCF  F027         	goto	l3868
  8182  004F8C                     u3630:
  8183  004F8C  5003               	movf	fputc@fp^0,w,c
  8184  004F8E  1004               	iorwf	(fputc@fp+1)^0,w,c
  8185  004F90  A4D8               	btfss	status,2,c
  8186  004F92  EFCD  F027         	goto	u3641
  8187  004F96  EFCF  F027         	goto	u3640
  8188  004F9A                     u3641:
  8189  004F9A  EFD4  F027         	goto	l3870
  8190  004F9E                     u3640:
  8191  004F9E                     l3868:
  8192  004F9E  5001               	movf	fputc@c^0,w,c
  8193  004FA0  ECFC  F02E         	call	_putch
  8194  004FA4  EF21  F028         	goto	l1599
  8195  004FA8                     l3870:
  8196  004FA8  EE20 F004          	lfsr	2,4
  8197  004FAC  5003               	movf	fputc@fp^0,w,c
  8198  004FAE  26D9               	addwf	fsr2l,f,c
  8199  004FB0  5004               	movf	(fputc@fp+1)^0,w,c
  8200  004FB2  22DA               	addwfc	fsr2h,f,c
  8201  004FB4  50DE               	movf	postinc2,w,c
  8202  004FB6  10DE               	iorwf	postinc2,w,c
  8203  004FB8  B4D8               	btfsc	status,2,c
  8204  004FBA  EFE1  F027         	goto	u3651
  8205  004FBE  EFE3  F027         	goto	u3650
  8206  004FC2                     u3651:
  8207  004FC2  EFFE  F027         	goto	l3874
  8208  004FC6                     u3650:
  8209  004FC6  EE20 F004          	lfsr	2,4
  8210  004FCA  5003               	movf	fputc@fp^0,w,c
  8211  004FCC  26D9               	addwf	fsr2l,f,c
  8212  004FCE  5004               	movf	(fputc@fp+1)^0,w,c
  8213  004FD0  22DA               	addwfc	fsr2h,f,c
  8214  004FD2  EE10 F002          	lfsr	1,2
  8215  004FD6  5003               	movf	fputc@fp^0,w,c
  8216  004FD8  26E1               	addwf	fsr1l,f,c
  8217  004FDA  5004               	movf	(fputc@fp+1)^0,w,c
  8218  004FDC  22E2               	addwfc	fsr1h,f,c
  8219  004FDE  50DE               	movf	postinc2,w,c
  8220  004FE0  5CE6               	subwf	postinc1,w,c
  8221  004FE2  50E6               	movf	postinc1,w,c
  8222  004FE4  0A80               	xorlw	128
  8223  004FE6  6E09               	movwf	(??_fputc+4)^0,c
  8224  004FE8  50DE               	movf	postinc2,w,c
  8225  004FEA  0A80               	xorlw	128
  8226  004FEC  5809               	subwfb	(??_fputc+4)^0,w,c
  8227  004FEE  B0D8               	btfsc	status,0,c
  8228  004FF0  EFFC  F027         	goto	u3661
  8229  004FF4  EFFE  F027         	goto	u3660
  8230  004FF8                     u3661:
  8231  004FF8  EF21  F028         	goto	l1599
  8232  004FFC                     u3660:
  8233  004FFC                     l3874:
  8234  004FFC  EE20 F002          	lfsr	2,2
  8235  005000  5003               	movf	fputc@fp^0,w,c
  8236  005002  26D9               	addwf	fsr2l,f,c
  8237  005004  5004               	movf	(fputc@fp+1)^0,w,c
  8238  005006  22DA               	addwfc	fsr2h,f,c
  8239  005008  CFDE F005          	movff	postinc2,??_fputc
  8240  00500C  CFDD F006          	movff	postdec2,??_fputc+1
  8241  005010  C003  FFD9         	movff	fputc@fp,fsr2l
  8242  005014  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8243  005018  CFDE F007          	movff	postinc2,??_fputc+2
  8244  00501C  CFDD F008          	movff	postdec2,??_fputc+3
  8245  005020  5005               	movf	??_fputc^0,w,c
  8246  005022  2407               	addwf	(??_fputc+2)^0,w,c
  8247  005024  6ED9               	movwf	fsr2l,c
  8248  005026  5006               	movf	(??_fputc+1)^0,w,c
  8249  005028  2008               	addwfc	(??_fputc+3)^0,w,c
  8250  00502A  6EDA               	movwf	fsr2h,c
  8251  00502C  C001  FFDF         	movff	fputc@c,indf2
  8252  005030  EE20 F002          	lfsr	2,2
  8253  005034  5003               	movf	fputc@fp^0,w,c
  8254  005036  26D9               	addwf	fsr2l,f,c
  8255  005038  5004               	movf	(fputc@fp+1)^0,w,c
  8256  00503A  22DA               	addwfc	fsr2h,f,c
  8257  00503C  2ADE               	incf	postinc2,f,c
  8258  00503E  0E00               	movlw	0
  8259  005040  22DD               	addwfc	postdec2,f,c
  8260  005042                     l1599:
  8261  005042  0012               	return		;funcret
  8262  005044                     __end_of_fputc:
  8263                           	callstack 0
  8264                           
  8265 ;; *************** function _putch *****************
  8266 ;; Defined at:
  8267 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  c               1    wreg     unsigned char 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;  c               1    0[COMRAM] unsigned char 
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  1    wreg      void 
  8274 ;; Registers used:
  8275 ;;		wreg
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8285 ;;Total ram usage:        0 bytes
  8286 ;; Hardware stack levels used: 1
  8287 ;; This function calls:
  8288 ;;		Nothing
  8289 ;; This function is called by:
  8290 ;;		_fputc
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text30
  8295  005DF8                     __ptext30:
  8296                           	callstack 0
  8297  005DF8                     _putch:
  8298                           	callstack 25
  8299  005DF8  0012               	return		;funcret
  8300  005DFA                     __end_of_putch:
  8301                           	callstack 0
  8302                           
  8303 ;; *************** function _abs *****************
  8304 ;; Defined at:
  8305 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  a               2   18[COMRAM] int 
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;		None
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  2   18[COMRAM] int 
  8312 ;; Registers used:
  8313 ;;		wreg, status,2, status,0
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8322 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8323 ;;Total ram usage:        4 bytes
  8324 ;; Hardware stack levels used: 1
  8325 ;; This function calls:
  8326 ;;		Nothing
  8327 ;; This function is called by:
  8328 ;;		_dtoa
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           	psect	text31
  8333  005A9C                     __ptext31:
  8334                           	callstack 0
  8335  005A9C                     _abs:
  8336                           	callstack 25
  8337  005A9C  BE14               	btfsc	(abs@a+1)^0,7,c
  8338  005A9E  EF5B  F02D         	goto	u4970
  8339  005AA2  5014               	movf	(abs@a+1)^0,w,c
  8340  005AA4  E106               	bnz	u4971
  8341  005AA6  0413               	decf	abs@a^0,w,c
  8342  005AA8  B0D8               	btfsc	status,0,c
  8343  005AAA  EF59  F02D         	goto	u4971
  8344  005AAE  EF5B  F02D         	goto	u4970
  8345  005AB2                     u4971:
  8346  005AB2  EF69  F02D         	goto	l1520
  8347  005AB6                     u4970:
  8348  005AB6  C013  F015         	movff	abs@a,??_abs
  8349  005ABA  C014  F016         	movff	abs@a+1,??_abs+1
  8350  005ABE  1E15               	comf	??_abs^0,f,c
  8351  005AC0  1E16               	comf	(??_abs+1)^0,f,c
  8352  005AC2  4A15               	infsnz	??_abs^0,f,c
  8353  005AC4  2A16               	incf	(??_abs+1)^0,f,c
  8354  005AC6  C015  F013         	movff	??_abs,?_abs
  8355  005ACA  C016  F014         	movff	??_abs+1,?_abs+1
  8356  005ACE  EF6D  F02D         	goto	l1523
  8357  005AD2                     l1520:
  8358  005AD2  C013  F013         	movff	abs@a,?_abs
  8359  005AD6  C014  F014         	movff	abs@a+1,?_abs+1
  8360  005ADA                     l1523:
  8361  005ADA  0012               	return		;funcret
  8362  005ADC                     __end_of_abs:
  8363                           	callstack 0
  8364                           
  8365 ;; *************** function ___aomod *****************
  8366 ;; Defined at:
  8367 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  dividend        8    0[COMRAM] long long 
  8370 ;;  divisor         8    8[COMRAM] long long 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  sign            1   17[COMRAM] unsigned char 
  8373 ;;  counter         1   16[COMRAM] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  8    0[COMRAM] long long 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8383 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8384 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;Total ram usage:       18 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; This function calls:
  8390 ;;		Nothing
  8391 ;; This function is called by:
  8392 ;;		_dtoa
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           	psect	text32
  8397  0044F0                     __ptext32:
  8398                           	callstack 0
  8399  0044F0                     ___aomod:
  8400                           	callstack 25
  8401  0044F0  0E00               	movlw	0
  8402  0044F2  6E12               	movwf	___aomod@sign^0,c
  8403  0044F4  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8404  0044F6  EF81  F022         	goto	u4170
  8405  0044FA  EF7F  F022         	goto	u4171
  8406  0044FE                     u4171:
  8407  0044FE  EF93  F022         	goto	l4160
  8408  004502                     u4170:
  8409  004502  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8410  004504  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8411  004506  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8412  004508  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8413  00450A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8414  00450C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8415  00450E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8416  004510  6C01               	negf	___aomod@dividend^0,c
  8417  004512  0E00               	movlw	0
  8418  004514  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8419  004516  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8420  004518  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8421  00451A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8422  00451C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8423  00451E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8424  004520  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8425  004522  0E01               	movlw	1
  8426  004524  6E12               	movwf	___aomod@sign^0,c
  8427  004526                     l4160:
  8428  004526  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8429  004528  EF9A  F022         	goto	u4180
  8430  00452C  EF98  F022         	goto	u4181
  8431  004530                     u4181:
  8432  004530  EFAA  F022         	goto	l4164
  8433  004534                     u4180:
  8434  004534  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8435  004536  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8436  004538  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8437  00453A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8438  00453C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8439  00453E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8440  004540  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8441  004542  6C09               	negf	___aomod@divisor^0,c
  8442  004544  0E00               	movlw	0
  8443  004546  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8444  004548  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8445  00454A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8446  00454C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8447  00454E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8448  004550  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8449  004552  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8450  004554                     l4164:
  8451  004554  5009               	movf	___aomod@divisor^0,w,c
  8452  004556  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8453  004558  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8454  00455A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8455  00455C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8456  00455E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8457  004560  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8458  004562  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8459  004564  B4D8               	btfsc	status,2,c
  8460  004566  EFB7  F022         	goto	u4191
  8461  00456A  EFB9  F022         	goto	u4190
  8462  00456E                     u4191:
  8463  00456E  EF01  F023         	goto	l4180
  8464  004572                     u4190:
  8465  004572  0E01               	movlw	1
  8466  004574  6E11               	movwf	___aomod@counter^0,c
  8467  004576  EFC7  F022         	goto	l4170
  8468  00457A                     l4168:
  8469  00457A  90D8               	bcf	status,0,c
  8470  00457C  3609               	rlcf	___aomod@divisor^0,f,c
  8471  00457E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8472  004580  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8473  004582  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8474  004584  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8475  004586  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8476  004588  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8477  00458A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8478  00458C  2A11               	incf	___aomod@counter^0,f,c
  8479  00458E                     l4170:
  8480  00458E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8481  004590  EFCC  F022         	goto	u4201
  8482  004594  EFCE  F022         	goto	u4200
  8483  004598                     u4201:
  8484  004598  EFBD  F022         	goto	l4168
  8485  00459C                     u4200:
  8486  00459C                     l4172:
  8487  00459C  5009               	movf	___aomod@divisor^0,w,c
  8488  00459E  5C01               	subwf	___aomod@dividend^0,w,c
  8489  0045A0  500A               	movf	(___aomod@divisor+1)^0,w,c
  8490  0045A2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8491  0045A4  500B               	movf	(___aomod@divisor+2)^0,w,c
  8492  0045A6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8493  0045A8  500C               	movf	(___aomod@divisor+3)^0,w,c
  8494  0045AA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8495  0045AC  500D               	movf	(___aomod@divisor+4)^0,w,c
  8496  0045AE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8497  0045B0  500E               	movf	(___aomod@divisor+5)^0,w,c
  8498  0045B2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8499  0045B4  500F               	movf	(___aomod@divisor+6)^0,w,c
  8500  0045B6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8501  0045B8  5010               	movf	(___aomod@divisor+7)^0,w,c
  8502  0045BA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8503  0045BC  A0D8               	btfss	status,0,c
  8504  0045BE  EFE3  F022         	goto	u4211
  8505  0045C2  EFE5  F022         	goto	u4210
  8506  0045C6                     u4211:
  8507  0045C6  EFF5  F022         	goto	l4176
  8508  0045CA                     u4210:
  8509  0045CA  5009               	movf	___aomod@divisor^0,w,c
  8510  0045CC  5E01               	subwf	___aomod@dividend^0,f,c
  8511  0045CE  500A               	movf	(___aomod@divisor+1)^0,w,c
  8512  0045D0  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8513  0045D2  500B               	movf	(___aomod@divisor+2)^0,w,c
  8514  0045D4  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8515  0045D6  500C               	movf	(___aomod@divisor+3)^0,w,c
  8516  0045D8  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8517  0045DA  500D               	movf	(___aomod@divisor+4)^0,w,c
  8518  0045DC  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8519  0045DE  500E               	movf	(___aomod@divisor+5)^0,w,c
  8520  0045E0  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8521  0045E2  500F               	movf	(___aomod@divisor+6)^0,w,c
  8522  0045E4  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8523  0045E6  5010               	movf	(___aomod@divisor+7)^0,w,c
  8524  0045E8  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8525  0045EA                     l4176:
  8526  0045EA  90D8               	bcf	status,0,c
  8527  0045EC  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8528  0045EE  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8529  0045F0  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8530  0045F2  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8531  0045F4  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8532  0045F6  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8533  0045F8  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8534  0045FA  3209               	rrcf	___aomod@divisor^0,f,c
  8535  0045FC  2E11               	decfsz	___aomod@counter^0,f,c
  8536  0045FE  EFCE  F022         	goto	l4172
  8537  004602                     l4180:
  8538  004602  5012               	movf	___aomod@sign^0,w,c
  8539  004604  B4D8               	btfsc	status,2,c
  8540  004606  EF07  F023         	goto	u4221
  8541  00460A  EF09  F023         	goto	u4220
  8542  00460E                     u4221:
  8543  00460E  EF19  F023         	goto	l4184
  8544  004612                     u4220:
  8545  004612  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8546  004614  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8547  004616  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8548  004618  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8549  00461A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8550  00461C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8551  00461E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8552  004620  6C01               	negf	___aomod@dividend^0,c
  8553  004622  0E00               	movlw	0
  8554  004624  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8555  004626  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8556  004628  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8557  00462A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8558  00462C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8559  00462E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8560  004630  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8561  004632                     l4184:
  8562  004632  C001  F001         	movff	___aomod@dividend,?___aomod
  8563  004636  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8564  00463A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8565  00463E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8566  004642  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8567  004646  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8568  00464A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8569  00464E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8570  004652  0012               	return		;funcret
  8571  004654                     __end_of___aomod:
  8572                           	callstack 0
  8573                           
  8574 ;; *************** function ___aodiv *****************
  8575 ;; Defined at:
  8576 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  dividend        8    0[COMRAM] long long 
  8579 ;;  divisor         8    8[COMRAM] long long 
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;  quotient        8   18[COMRAM] long long 
  8582 ;;  sign            1   17[COMRAM] unsigned char 
  8583 ;;  counter         1   16[COMRAM] unsigned char 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  8    0[COMRAM] long long 
  8586 ;; Registers used:
  8587 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8593 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8597 ;;Total ram usage:       26 bytes
  8598 ;; Hardware stack levels used: 1
  8599 ;; This function calls:
  8600 ;;		Nothing
  8601 ;; This function is called by:
  8602 ;;		_dtoa
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text33
  8607  004368                     __ptext33:
  8608                           	callstack 0
  8609  004368                     ___aodiv:
  8610                           	callstack 25
  8611  004368  0E00               	movlw	0
  8612  00436A  6E12               	movwf	___aodiv@sign^0,c
  8613  00436C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8614  00436E  EFBD  F021         	goto	u4100
  8615  004372  EFBB  F021         	goto	u4101
  8616  004376                     u4101:
  8617  004376  EFCF  F021         	goto	l4116
  8618  00437A                     u4100:
  8619  00437A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8620  00437C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8621  00437E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8622  004380  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8623  004382  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8624  004384  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8625  004386  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8626  004388  6C09               	negf	___aodiv@divisor^0,c
  8627  00438A  0E00               	movlw	0
  8628  00438C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8629  00438E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8630  004390  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8631  004392  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8632  004394  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8633  004396  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8634  004398  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8635  00439A  0E01               	movlw	1
  8636  00439C  6E12               	movwf	___aodiv@sign^0,c
  8637  00439E                     l4116:
  8638  00439E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8639  0043A0  EFD6  F021         	goto	u4110
  8640  0043A4  EFD4  F021         	goto	u4111
  8641  0043A8                     u4111:
  8642  0043A8  EFE8  F021         	goto	l4122
  8643  0043AC                     u4110:
  8644  0043AC  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8645  0043AE  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8646  0043B0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8647  0043B2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8648  0043B4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8649  0043B6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8650  0043B8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8651  0043BA  6C01               	negf	___aodiv@dividend^0,c
  8652  0043BC  0E00               	movlw	0
  8653  0043BE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8654  0043C0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8655  0043C2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8656  0043C4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8657  0043C6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8658  0043C8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8659  0043CA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8660  0043CC  0E01               	movlw	1
  8661  0043CE  1A12               	xorwf	___aodiv@sign^0,f,c
  8662  0043D0                     l4122:
  8663  0043D0  EE20  F013         	lfsr	2,___aodiv@quotient
  8664  0043D4  0E07               	movlw	7
  8665  0043D6                     u4121:
  8666  0043D6  6ADE               	clrf	postinc2,c
  8667  0043D8  06E8               	decf	wreg,f,c
  8668  0043DA  E2FD               	bc	u4121
  8669  0043DC  5009               	movf	___aodiv@divisor^0,w,c
  8670  0043DE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8671  0043E0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8672  0043E2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8673  0043E4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8674  0043E6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8675  0043E8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8676  0043EA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8677  0043EC  B4D8               	btfsc	status,2,c
  8678  0043EE  EFFB  F021         	goto	u4131
  8679  0043F2  EFFD  F021         	goto	u4130
  8680  0043F6                     u4131:
  8681  0043F6  EF4F  F022         	goto	l4144
  8682  0043FA                     u4130:
  8683  0043FA  0E01               	movlw	1
  8684  0043FC  6E11               	movwf	___aodiv@counter^0,c
  8685  0043FE  EF0B  F022         	goto	l4130
  8686  004402                     l4128:
  8687  004402  90D8               	bcf	status,0,c
  8688  004404  3609               	rlcf	___aodiv@divisor^0,f,c
  8689  004406  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8690  004408  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8691  00440A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8692  00440C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8693  00440E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8694  004410  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8695  004412  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8696  004414  2A11               	incf	___aodiv@counter^0,f,c
  8697  004416                     l4130:
  8698  004416  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8699  004418  EF10  F022         	goto	u4141
  8700  00441C  EF12  F022         	goto	u4140
  8701  004420                     u4141:
  8702  004420  EF01  F022         	goto	l4128
  8703  004424                     u4140:
  8704  004424                     l4132:
  8705  004424  90D8               	bcf	status,0,c
  8706  004426  3613               	rlcf	___aodiv@quotient^0,f,c
  8707  004428  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8708  00442A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8709  00442C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8710  00442E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8711  004430  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8712  004432  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8713  004434  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8714  004436  5009               	movf	___aodiv@divisor^0,w,c
  8715  004438  5C01               	subwf	___aodiv@dividend^0,w,c
  8716  00443A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8717  00443C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8718  00443E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8719  004440  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8720  004442  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8721  004444  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8722  004446  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8723  004448  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8724  00444A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8725  00444C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8726  00444E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8727  004450  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8728  004452  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8729  004454  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8730  004456  A0D8               	btfss	status,0,c
  8731  004458  EF30  F022         	goto	u4151
  8732  00445C  EF32  F022         	goto	u4150
  8733  004460                     u4151:
  8734  004460  EF43  F022         	goto	l4140
  8735  004464                     u4150:
  8736  004464  5009               	movf	___aodiv@divisor^0,w,c
  8737  004466  5E01               	subwf	___aodiv@dividend^0,f,c
  8738  004468  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8739  00446A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8740  00446C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8741  00446E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8742  004470  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8743  004472  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8744  004474  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8745  004476  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8746  004478  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8747  00447A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8748  00447C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8749  00447E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8750  004480  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8751  004482  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8752  004484  8013               	bsf	___aodiv@quotient^0,0,c
  8753  004486                     l4140:
  8754  004486  90D8               	bcf	status,0,c
  8755  004488  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8756  00448A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8757  00448C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8758  00448E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8759  004490  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8760  004492  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8761  004494  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8762  004496  3209               	rrcf	___aodiv@divisor^0,f,c
  8763  004498  2E11               	decfsz	___aodiv@counter^0,f,c
  8764  00449A  EF12  F022         	goto	l4132
  8765  00449E                     l4144:
  8766  00449E  5012               	movf	___aodiv@sign^0,w,c
  8767  0044A0  B4D8               	btfsc	status,2,c
  8768  0044A2  EF55  F022         	goto	u4161
  8769  0044A6  EF57  F022         	goto	u4160
  8770  0044AA                     u4161:
  8771  0044AA  EF67  F022         	goto	l4148
  8772  0044AE                     u4160:
  8773  0044AE  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8774  0044B0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8775  0044B2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8776  0044B4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8777  0044B6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8778  0044B8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8779  0044BA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8780  0044BC  6C13               	negf	___aodiv@quotient^0,c
  8781  0044BE  0E00               	movlw	0
  8782  0044C0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8783  0044C2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8784  0044C4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8785  0044C6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8786  0044C8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8787  0044CA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8788  0044CC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8789  0044CE                     l4148:
  8790  0044CE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8791  0044D2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8792  0044D6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8793  0044DA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8794  0044DE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8795  0044E2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8796  0044E6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8797  0044EA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8798  0044EE  0012               	return		;funcret
  8799  0044F0                     __end_of___aodiv:
  8800                           	callstack 0
  8801                           
  8802 ;; *************** function _atoi *****************
  8803 ;; Defined at:
  8804 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8807 ;;		 -> STR_1(54), 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  n               2   20[COMRAM] int 
  8810 ;;  neg             2   13[COMRAM] int 
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  2    7[COMRAM] int 
  8813 ;; Registers used:
  8814 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8824 ;;Total ram usage:       15 bytes
  8825 ;; Hardware stack levels used: 1
  8826 ;; Hardware stack levels required when called: 1
  8827 ;; This function calls:
  8828 ;;		___wmul
  8829 ;;		_isdigit
  8830 ;;		_isspace
  8831 ;; This function is called by:
  8832 ;;		_vfpfcnvrt
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           	psect	text34
  8837  0041C4                     __ptext34:
  8838                           	callstack 0
  8839  0041C4                     _atoi:
  8840                           	callstack 25
  8841  0041C4  0E00               	movlw	0
  8842  0041C6  6E16               	movwf	(atoi@n+1)^0,c
  8843  0041C8  0E00               	movlw	0
  8844  0041CA  6E15               	movwf	atoi@n^0,c
  8845  0041CC  0E00               	movlw	0
  8846  0041CE  6E0F               	movwf	(atoi@neg+1)^0,c
  8847  0041D0  0E00               	movlw	0
  8848  0041D2  6E0E               	movwf	atoi@neg^0,c
  8849  0041D4  EFEE  F020         	goto	l5116
  8850  0041D8                     l5114:
  8851  0041D8  4A08               	infsnz	atoi@s^0,f,c
  8852  0041DA  2A09               	incf	(atoi@s+1)^0,f,c
  8853  0041DC                     l5116:
  8854  0041DC  0E01               	movlw	1
  8855  0041DE  6E14               	movwf	_atoi$3015^0,c
  8856  0041E0  C008  FFF6         	movff	atoi@s,tblptrl
  8857  0041E4  C009  FFF7         	movff	atoi@s+1,tblptrh
  8858  0041E8                     	if	0	;tblptru may be non-zero
  8859  0041E8                     	endif
  8860  0041E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8861  0041E8  0E00               	movlw	low (__mediumconst shr (0+16))
  8862  0041EA  6EF8               	movwf	tblptru,c
  8863  0041EC                     	endif
  8864  0041EC  0008               	tblrd		*
  8865  0041EE  50F5               	movf	tablat,w,c
  8866  0041F0  0A20               	xorlw	32
  8867  0041F2  B4D8               	btfsc	status,2,c
  8868  0041F4  EFFE  F020         	goto	u5951
  8869  0041F8  EF00  F021         	goto	u5950
  8870  0041FC                     u5951:
  8871  0041FC  EF1F  F021         	goto	l5124
  8872  004200                     u5950:
  8873  004200  0EF7               	movlw	247
  8874  004202  6E0A               	movwf	??_atoi^0,c
  8875  004204  0EFF               	movlw	255
  8876  004206  6E0B               	movwf	(??_atoi+1)^0,c
  8877  004208  C008  FFF6         	movff	atoi@s,tblptrl
  8878  00420C  C009  FFF7         	movff	atoi@s+1,tblptrh
  8879  004210                     	if	0	;tblptru may be non-zero
  8880  004210                     	endif
  8881  004210                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8882  004210  0E00               	movlw	low (__mediumconst shr (0+16))
  8883  004212  6EF8               	movwf	tblptru,c
  8884  004214                     	endif
  8885  004214  0008               	tblrd		*
  8886  004216  50F5               	movf	tablat,w,c
  8887  004218  6E0C               	movwf	(??_atoi+2)^0,c
  8888  00421A  6A0D               	clrf	(??_atoi+3)^0,c
  8889  00421C  500A               	movf	??_atoi^0,w,c
  8890  00421E  260C               	addwf	(??_atoi+2)^0,f,c
  8891  004220  500B               	movf	(??_atoi+1)^0,w,c
  8892  004222  220D               	addwfc	(??_atoi+3)^0,f,c
  8893  004224  500D               	movf	(??_atoi+3)^0,w,c
  8894  004226  E109               	bnz	u5960
  8895  004228  0E05               	movlw	5
  8896  00422A  5C0C               	subwf	(??_atoi+2)^0,w,c
  8897  00422C  A0D8               	btfss	status,0,c
  8898  00422E  EF1B  F021         	goto	u5961
  8899  004232  EF1D  F021         	goto	u5960
  8900  004236                     u5961:
  8901  004236  EF1F  F021         	goto	l5124
  8902  00423A                     u5960:
  8903  00423A  0E00               	movlw	0
  8904  00423C  6E14               	movwf	_atoi$3015^0,c
  8905  00423E                     l5124:
  8906  00423E  C014  F010         	movff	_atoi$3015,_atoi$3014
  8907  004242  6A11               	clrf	(_atoi$3014+1)^0,c
  8908  004244  5010               	movf	_atoi$3014^0,w,c
  8909  004246  1011               	iorwf	(_atoi$3014+1)^0,w,c
  8910  004248  A4D8               	btfss	status,2,c
  8911  00424A  EF29  F021         	goto	u5971
  8912  00424E  EF2B  F021         	goto	u5970
  8913  004252                     u5971:
  8914  004252  EFEC  F020         	goto	l5114
  8915  004256                     u5970:
  8916  004256  EF35  F021         	goto	l5134
  8917  00425A                     l5130:
  8918  00425A  0E00               	movlw	0
  8919  00425C  6E0F               	movwf	(atoi@neg+1)^0,c
  8920  00425E  0E01               	movlw	1
  8921  004260  6E0E               	movwf	atoi@neg^0,c
  8922  004262                     l5132:
  8923  004262  4A08               	infsnz	atoi@s^0,f,c
  8924  004264  2A09               	incf	(atoi@s+1)^0,f,c
  8925  004266  EF6E  F021         	goto	l5140
  8926  00426A                     l5134:
  8927  00426A  C008  FFF6         	movff	atoi@s,tblptrl
  8928  00426E  C009  FFF7         	movff	atoi@s+1,tblptrh
  8929  004272                     	if	0	;tblptru may be non-zero
  8930  004272                     	endif
  8931  004272                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8932  004272  0E00               	movlw	low (__mediumconst shr (0+16))
  8933  004274  6EF8               	movwf	tblptru,c
  8934  004276                     	endif
  8935  004276  0008               	tblrd		*
  8936  004278  50F5               	movf	tablat,w,c
  8937  00427A  6E0A               	movwf	??_atoi^0,c
  8938  00427C  6A0B               	clrf	(??_atoi+1)^0,c
  8939                           
  8940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8941                           ; Switch size 1, requested type "simple"
  8942                           ; Number of cases is 1, Range of values is 0 to 0
  8943                           ; switch strategies available:
  8944                           ; Name         Instructions Cycles
  8945                           ; simple_byte            4     3 (average)
  8946                           ;	Chosen strategy is simple_byte
  8947  00427E  500B               	movf	(??_atoi+1)^0,w,c
  8948  004280  0A00               	xorlw	0	; case 0
  8949  004282  B4D8               	btfsc	status,2,c
  8950  004284  EF46  F021         	goto	l6032
  8951  004288  EF6E  F021         	goto	l5140
  8952  00428C                     l6032:
  8953                           
  8954                           ; Switch size 1, requested type "simple"
  8955                           ; Number of cases is 2, Range of values is 43 to 45
  8956                           ; switch strategies available:
  8957                           ; Name         Instructions Cycles
  8958                           ; simple_byte            7     4 (average)
  8959                           ;	Chosen strategy is simple_byte
  8960  00428C  500A               	movf	??_atoi^0,w,c
  8961  00428E  0A2B               	xorlw	43	; case 43
  8962  004290  B4D8               	btfsc	status,2,c
  8963  004292  EF31  F021         	goto	l5132
  8964  004296  0A06               	xorlw	6	; case 45
  8965  004298  B4D8               	btfsc	status,2,c
  8966  00429A  EF2D  F021         	goto	l5130
  8967  00429E  EF6E  F021         	goto	l5140
  8968  0042A2                     l5136:
  8969  0042A2  C015  F001         	movff	atoi@n,___wmul@multiplier
  8970  0042A6  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8971  0042AA  0E00               	movlw	0
  8972  0042AC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8973  0042AE  0E0A               	movlw	10
  8974  0042B0  6E03               	movwf	___wmul@multiplicand^0,c
  8975  0042B2  EC51  F02E         	call	___wmul	;wreg free
  8976  0042B6  C008  FFF6         	movff	atoi@s,tblptrl
  8977  0042BA  C009  FFF7         	movff	atoi@s+1,tblptrh
  8978  0042BE                     	if	0	;tblptru may be non-zero
  8979  0042BE                     	endif
  8980  0042BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8981  0042BE  0E00               	movlw	low (__mediumconst shr (0+16))
  8982  0042C0  6EF8               	movwf	tblptru,c
  8983  0042C2                     	endif
  8984  0042C2  0008               	tblrd		*
  8985  0042C4  50F5               	movf	tablat,w,c
  8986  0042C6  5E01               	subwf	?___wmul^0,f,c
  8987  0042C8  0E00               	movlw	0
  8988  0042CA  5A02               	subwfb	(?___wmul+1)^0,f,c
  8989  0042CC  0E30               	movlw	48
  8990  0042CE  2401               	addwf	?___wmul^0,w,c
  8991  0042D0  6E15               	movwf	atoi@n^0,c
  8992  0042D2  0E00               	movlw	0
  8993  0042D4  2002               	addwfc	(?___wmul+1)^0,w,c
  8994  0042D6  6E16               	movwf	(atoi@n+1)^0,c
  8995  0042D8  EF31  F021         	goto	l5132
  8996  0042DC                     l5140:
  8997  0042DC  0ED0               	movlw	208
  8998  0042DE  6E0A               	movwf	??_atoi^0,c
  8999  0042E0  0EFF               	movlw	255
  9000  0042E2  6E0B               	movwf	(??_atoi+1)^0,c
  9001  0042E4  C008  FFF6         	movff	atoi@s,tblptrl
  9002  0042E8  C009  FFF7         	movff	atoi@s+1,tblptrh
  9003  0042EC                     	if	0	;tblptru may be non-zero
  9004  0042EC                     	endif
  9005  0042EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9006  0042EC  0E00               	movlw	low (__mediumconst shr (0+16))
  9007  0042EE  6EF8               	movwf	tblptru,c
  9008  0042F0                     	endif
  9009  0042F0  0008               	tblrd		*
  9010  0042F2  50F5               	movf	tablat,w,c
  9011  0042F4  6E0C               	movwf	(??_atoi+2)^0,c
  9012  0042F6  6A0D               	clrf	(??_atoi+3)^0,c
  9013  0042F8  500A               	movf	??_atoi^0,w,c
  9014  0042FA  260C               	addwf	(??_atoi+2)^0,f,c
  9015  0042FC  500B               	movf	(??_atoi+1)^0,w,c
  9016  0042FE  220D               	addwfc	(??_atoi+3)^0,f,c
  9017  004300  500D               	movf	(??_atoi+3)^0,w,c
  9018  004302  E10A               	bnz	u5980
  9019  004304  0E0A               	movlw	10
  9020  004306  5C0C               	subwf	(??_atoi+2)^0,w,c
  9021  004308  A0D8               	btfss	status,0,c
  9022  00430A  EF89  F021         	goto	u5981
  9023  00430E  EF8C  F021         	goto	u5980
  9024  004312                     u5981:
  9025  004312  0E01               	movlw	1
  9026  004314  EF8D  F021         	goto	u5990
  9027  004318                     u5980:
  9028  004318  0E00               	movlw	0
  9029  00431A                     u5990:
  9030  00431A  6E12               	movwf	_atoi$3016^0,c
  9031  00431C  6A13               	clrf	(_atoi$3016+1)^0,c
  9032  00431E  5012               	movf	_atoi$3016^0,w,c
  9033  004320  1013               	iorwf	(_atoi$3016+1)^0,w,c
  9034  004322  A4D8               	btfss	status,2,c
  9035  004324  EF96  F021         	goto	u6001
  9036  004328  EF98  F021         	goto	u6000
  9037  00432C                     u6001:
  9038  00432C  EF51  F021         	goto	l5136
  9039  004330                     u6000:
  9040  004330  500E               	movf	atoi@neg^0,w,c
  9041  004332  100F               	iorwf	(atoi@neg+1)^0,w,c
  9042  004334  A4D8               	btfss	status,2,c
  9043  004336  EF9F  F021         	goto	u6011
  9044  00433A  EFA1  F021         	goto	u6010
  9045  00433E                     u6011:
  9046  00433E  EFAF  F021         	goto	l1551
  9047  004342                     u6010:
  9048  004342  C015  F00A         	movff	atoi@n,??_atoi
  9049  004346  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9050  00434A  1E0A               	comf	??_atoi^0,f,c
  9051  00434C  1E0B               	comf	(??_atoi+1)^0,f,c
  9052  00434E  4A0A               	infsnz	??_atoi^0,f,c
  9053  004350  2A0B               	incf	(??_atoi+1)^0,f,c
  9054  004352  C00A  F008         	movff	??_atoi,?_atoi
  9055  004356  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9056  00435A  EFB3  F021         	goto	l1554
  9057  00435E                     l1551:
  9058  00435E  C015  F008         	movff	atoi@n,?_atoi
  9059  004362  C016  F009         	movff	atoi@n+1,?_atoi+1
  9060  004366                     l1554:
  9061  004366  0012               	return		;funcret
  9062  004368                     __end_of_atoi:
  9063                           	callstack 0
  9064                           
  9065 ;; *************** function _isspace *****************
  9066 ;; Defined at:
  9067 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  c               2    0[COMRAM] int 
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  2    0[COMRAM] int 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9084 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9085 ;;Total ram usage:        7 bytes
  9086 ;; Hardware stack levels used: 1
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_atoi
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text35
  9095  00574E                     __ptext35:
  9096                           	callstack 0
  9097  00574E                     _isspace:
  9098                           	callstack 25
  9099  00574E  0E01               	movlw	1
  9100  005750  6E07               	movwf	_isspace$3045^0,c
  9101  005752  0E20               	movlw	32
  9102  005754  1801               	xorwf	isspace@c^0,w,c
  9103  005756  1002               	iorwf	(isspace@c+1)^0,w,c
  9104  005758  B4D8               	btfsc	status,2,c
  9105  00575A  EFB1  F02B         	goto	u5221
  9106  00575E  EFB3  F02B         	goto	u5220
  9107  005762                     u5221:
  9108  005762  EFCC  F02B         	goto	l4734
  9109  005766                     u5220:
  9110  005766  0EF7               	movlw	247
  9111  005768  6E03               	movwf	??_isspace^0,c
  9112  00576A  0EFF               	movlw	255
  9113  00576C  6E04               	movwf	(??_isspace+1)^0,c
  9114  00576E  C001  F005         	movff	isspace@c,??_isspace+2
  9115  005772  C002  F006         	movff	isspace@c+1,??_isspace+3
  9116  005776  5003               	movf	??_isspace^0,w,c
  9117  005778  2605               	addwf	(??_isspace+2)^0,f,c
  9118  00577A  5004               	movf	(??_isspace+1)^0,w,c
  9119  00577C  2206               	addwfc	(??_isspace+3)^0,f,c
  9120  00577E  5006               	movf	(??_isspace+3)^0,w,c
  9121  005780  E109               	bnz	u5230
  9122  005782  0E05               	movlw	5
  9123  005784  5C05               	subwf	(??_isspace+2)^0,w,c
  9124  005786  A0D8               	btfss	status,0,c
  9125  005788  EFC8  F02B         	goto	u5231
  9126  00578C  EFCA  F02B         	goto	u5230
  9127  005790                     u5231:
  9128  005790  EFCC  F02B         	goto	l4734
  9129  005794                     u5230:
  9130  005794  0E00               	movlw	0
  9131  005796  6E07               	movwf	_isspace$3045^0,c
  9132  005798                     l4734:
  9133  005798  C007  F001         	movff	_isspace$3045,?_isspace
  9134  00579C  6A02               	clrf	(?_isspace+1)^0,c
  9135  00579E  0012               	return		;funcret
  9136  0057A0                     __end_of_isspace:
  9137                           	callstack 0
  9138                           
  9139 ;; *************** function _isdigit *****************
  9140 ;; Defined at:
  9141 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  c               2    0[COMRAM] int 
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;		None
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  2    0[COMRAM] int 
  9148 ;; Registers used:
  9149 ;;		wreg, status,2, status,0
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9157 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9158 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9159 ;;Total ram usage:        6 bytes
  9160 ;; Hardware stack levels used: 1
  9161 ;; This function calls:
  9162 ;;		Nothing
  9163 ;; This function is called by:
  9164 ;;		_vfpfcnvrt
  9165 ;;		_atoi
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text36
  9170  005B84                     __ptext36:
  9171                           	callstack 0
  9172  005B84                     _isdigit:
  9173                           	callstack 26
  9174  005B84  0ED0               	movlw	208
  9175  005B86  6E03               	movwf	??_isdigit^0,c
  9176  005B88  0EFF               	movlw	255
  9177  005B8A  6E04               	movwf	(??_isdigit+1)^0,c
  9178  005B8C  C001  F005         	movff	isdigit@c,??_isdigit+2
  9179  005B90  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9180  005B94  5003               	movf	??_isdigit^0,w,c
  9181  005B96  2605               	addwf	(??_isdigit+2)^0,f,c
  9182  005B98  5004               	movf	(??_isdigit+1)^0,w,c
  9183  005B9A  2206               	addwfc	(??_isdigit+3)^0,f,c
  9184  005B9C  5006               	movf	(??_isdigit+3)^0,w,c
  9185  005B9E  E10A               	bnz	u5200
  9186  005BA0  0E0A               	movlw	10
  9187  005BA2  5C05               	subwf	(??_isdigit+2)^0,w,c
  9188  005BA4  A0D8               	btfss	status,0,c
  9189  005BA6  EFD7  F02D         	goto	u5201
  9190  005BAA  EFDA  F02D         	goto	u5200
  9191  005BAE                     u5201:
  9192  005BAE  0E01               	movlw	1
  9193  005BB0  EFDB  F02D         	goto	u5210
  9194  005BB4                     u5200:
  9195  005BB4  0E00               	movlw	0
  9196  005BB6                     u5210:
  9197  005BB6  6E01               	movwf	?_isdigit^0,c
  9198  005BB8  6A02               	clrf	(?_isdigit+1)^0,c
  9199  005BBA  0012               	return		;funcret
  9200  005BBC                     __end_of_isdigit:
  9201                           	callstack 0
  9202                           
  9203 ;; *************** function _sendStringSerial4 *****************
  9204 ;; Defined at:
  9205 ;;		line 46 in file "serial_comm.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;  string          2    1[COMRAM] PTR unsigned char 
  9208 ;;		 -> colourcards_testing@buf(100), 
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;		None
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  1    wreg      void 
  9213 ;; Registers used:
  9214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9224 ;;Total ram usage:        2 bytes
  9225 ;; Hardware stack levels used: 1
  9226 ;; Hardware stack levels required when called: 1
  9227 ;; This function calls:
  9228 ;;		_sendCharSerial4
  9229 ;; This function is called by:
  9230 ;;		_colourcards_testing
  9231 ;; This function uses a non-reentrant model
  9232 ;;
  9233                           
  9234                           	psect	text37
  9235  005BF2                     __ptext37:
  9236                           	callstack 0
  9237  005BF2                     _sendStringSerial4:
  9238                           	callstack 28
  9239  005BF2                     
  9240                           ;serial_comm.c: 48:     while (*string != 0) {
  9241  005BF2  EF04  F02E         	goto	l5466
  9242  005BF6                     l5462:
  9243                           
  9244                           ;serial_comm.c: 49:         sendCharSerial4(*string++);
  9245  005BF6  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9246  005BFA  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9247  005BFE  50DF               	movf	indf2,w,c
  9248  005C00  ECB2  F02E         	call	_sendCharSerial4
  9249  005C04  4A02               	infsnz	sendStringSerial4@string^0,f,c
  9250  005C06  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  9251  005C08                     l5466:
  9252                           
  9253                           ;serial_comm.c: 48:     while (*string != 0) {
  9254  005C08  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9255  005C0C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9256  005C10  50DF               	movf	indf2,w,c
  9257  005C12  A4D8               	btfss	status,2,c
  9258  005C14  EF0E  F02E         	goto	u6541
  9259  005C18  EF10  F02E         	goto	u6540
  9260  005C1C                     u6541:
  9261  005C1C  EFFB  F02D         	goto	l5462
  9262  005C20                     u6540:
  9263  005C20  0012               	return		;funcret
  9264  005C22                     __end_of_sendStringSerial4:
  9265                           	callstack 0
  9266                           
  9267 ;; *************** function _sendCharSerial4 *****************
  9268 ;; Defined at:
  9269 ;;		line 37 in file "serial_comm.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;  charToSend      1    wreg     unsigned char 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  charToSend      1    0[COMRAM] unsigned char 
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  1    wreg      void 
  9276 ;; Registers used:
  9277 ;;		wreg
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9287 ;;Total ram usage:        1 bytes
  9288 ;; Hardware stack levels used: 1
  9289 ;; This function calls:
  9290 ;;		Nothing
  9291 ;; This function is called by:
  9292 ;;		_sendStringSerial4
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           	psect	text38
  9297  005D64                     __ptext38:
  9298                           	callstack 0
  9299  005D64                     _sendCharSerial4:
  9300                           	callstack 28
  9301                           
  9302                           ;incstack = 0
  9303                           ;sendCharSerial4@charToSend stored from wreg
  9304  005D64  6E01               	movwf	sendCharSerial4@charToSend^0,c
  9305  005D66                     l406:
  9306  005D66  010E               	movlb	14	; () banked
  9307  005D68  A537               	btfss	55,2,b	;volatile
  9308  005D6A  EFB9  F02E         	goto	u6321
  9309  005D6E  EFBB  F02E         	goto	u6320
  9310  005D72                     u6321:
  9311  005D72  EFB3  F02E         	goto	l406
  9312  005D76                     u6320:
  9313  005D76                     
  9314                           ; BSR set to: 14
  9315                           ;serial_comm.c: 39:     TX4REG = charToSend;
  9316  005D76  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9317  005D7A                     
  9318                           ; BSR set to: 14
  9319  005D7A  0012               	return		;funcret
  9320  005D7C                     __end_of_sendCharSerial4:
  9321                           	callstack 0
  9322                           
  9323 ;; *************** function _colourcards_readRGBC *****************
  9324 ;; Defined at:
  9325 ;;		line 11 in file "colour_cards.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;  tmpval          2   39[COMRAM] PTR struct .
  9328 ;;		 -> main@current(8), 
  9329 ;;  mL              2   41[COMRAM] PTR struct .
  9330 ;;		 -> main@motorL(9), 
  9331 ;;  mR              2   43[COMRAM] PTR struct .
  9332 ;;		 -> main@motorR(9), 
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;  B_rel           4   57[COMRAM] float 
  9335 ;;  G_rel           4   53[COMRAM] float 
  9336 ;;  R_rel           4   49[COMRAM] float 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      void 
  9339 ;; Registers used:
  9340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9346 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9347 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9348 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9349 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9350 ;;Total ram usage:       22 bytes
  9351 ;; Hardware stack levels used: 1
  9352 ;; Hardware stack levels required when called: 4
  9353 ;; This function calls:
  9354 ;;		___fldiv
  9355 ;;		___flge
  9356 ;;		___xxtofl
  9357 ;;		_colourclick_readRGBC
  9358 ;;		_forward
  9359 ;;		_reverse
  9360 ;;		_stop
  9361 ;;		_turnleft
  9362 ;;		_turnright
  9363 ;; This function is called by:
  9364 ;;		_main
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	text39
  9369  001AA4                     __ptext39:
  9370                           	callstack 0
  9371  001AA4                     _colourcards_readRGBC:
  9372                           	callstack 26
  9373  001AA4                     
  9374                           ;colour_cards.c: 11: void colourcards_readRGBC(RGBC_val *tmpval, DC_motor *mL, DC_motor 
      +                          *mR);colour_cards.c: 12: {;colour_cards.c: 14:     PIE0bits.INT1IE = 0;
  9375  001AA4  010E               	movlb	14	; () banked
  9376  001AA6  9329               	bcf	41,1,b	;volatile
  9377  001AA8                     
  9378                           ; BSR set to: 14
  9379                           ;colour_cards.c: 17:     float R_rel = (float)tmpval->R / (float)tmpval->C;
  9380  001AA8  C028  FFD9         	movff	colourcards_readRGBC@tmpval,fsr2l
  9381  001AAC  C029  FFDA         	movff	colourcards_readRGBC@tmpval+1,fsr2h
  9382  001AB0  CFDE F02E          	movff	postinc2,??_colourcards_readRGBC
  9383  001AB4  CFDD F02F          	movff	postdec2,??_colourcards_readRGBC+1
  9384  001AB8  C02E  F001         	movff	??_colourcards_readRGBC,___xxtofl@val
  9385  001ABC  C02F  F002         	movff	??_colourcards_readRGBC+1,___xxtofl@val+1
  9386  001AC0  6A03               	clrf	(___xxtofl@val+2)^0,c
  9387  001AC2  6A04               	clrf	(___xxtofl@val+3)^0,c
  9388  001AC4  0E00               	movlw	0
  9389  001AC6  EC08  F020         	call	___xxtofl
  9390  001ACA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  9391  001ACE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  9392  001AD2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  9393  001AD6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  9394  001ADA  EE20 F006          	lfsr	2,6
  9395  001ADE  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
  9396  001AE0  26D9               	addwf	fsr2l,f,c
  9397  001AE2  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  9398  001AE4  22DA               	addwfc	fsr2h,f,c
  9399  001AE6  CFDE F030          	movff	postinc2,??_colourcards_readRGBC+2
  9400  001AEA  CFDD F031          	movff	postdec2,??_colourcards_readRGBC+3
  9401  001AEE  C030  F001         	movff	??_colourcards_readRGBC+2,___xxtofl@val
  9402  001AF2  C031  F002         	movff	??_colourcards_readRGBC+3,___xxtofl@val+1
  9403  001AF6  6A03               	clrf	(___xxtofl@val+2)^0,c
  9404  001AF8  6A04               	clrf	(___xxtofl@val+3)^0,c
  9405  001AFA  0E00               	movlw	0
  9406  001AFC  EC08  F020         	call	___xxtofl
  9407  001B00  C001  F013         	movff	?___xxtofl,___fldiv@a
  9408  001B04  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  9409  001B08  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  9410  001B0C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  9411  001B10  ECB5  F018         	call	___fldiv	;wreg free
  9412  001B14  C00F  F032         	movff	?___fldiv,colourcards_readRGBC@R_rel
  9413  001B18  C010  F033         	movff	?___fldiv+1,colourcards_readRGBC@R_rel+1
  9414  001B1C  C011  F034         	movff	?___fldiv+2,colourcards_readRGBC@R_rel+2
  9415  001B20  C012  F035         	movff	?___fldiv+3,colourcards_readRGBC@R_rel+3
  9416                           
  9417                           ;colour_cards.c: 18:     float G_rel = (float)tmpval->G / (float)tmpval->C;
  9418  001B24  EE20 F002          	lfsr	2,2
  9419  001B28  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
  9420  001B2A  26D9               	addwf	fsr2l,f,c
  9421  001B2C  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  9422  001B2E  22DA               	addwfc	fsr2h,f,c
  9423  001B30  CFDE F02E          	movff	postinc2,??_colourcards_readRGBC
  9424  001B34  CFDD F02F          	movff	postdec2,??_colourcards_readRGBC+1
  9425  001B38  C02E  F001         	movff	??_colourcards_readRGBC,___xxtofl@val
  9426  001B3C  C02F  F002         	movff	??_colourcards_readRGBC+1,___xxtofl@val+1
  9427  001B40  6A03               	clrf	(___xxtofl@val+2)^0,c
  9428  001B42  6A04               	clrf	(___xxtofl@val+3)^0,c
  9429  001B44  0E00               	movlw	0
  9430  001B46  EC08  F020         	call	___xxtofl
  9431  001B4A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  9432  001B4E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  9433  001B52  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  9434  001B56  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  9435  001B5A  EE20 F006          	lfsr	2,6
  9436  001B5E  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
  9437  001B60  26D9               	addwf	fsr2l,f,c
  9438  001B62  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  9439  001B64  22DA               	addwfc	fsr2h,f,c
  9440  001B66  CFDE F030          	movff	postinc2,??_colourcards_readRGBC+2
  9441  001B6A  CFDD F031          	movff	postdec2,??_colourcards_readRGBC+3
  9442  001B6E  C030  F001         	movff	??_colourcards_readRGBC+2,___xxtofl@val
  9443  001B72  C031  F002         	movff	??_colourcards_readRGBC+3,___xxtofl@val+1
  9444  001B76  6A03               	clrf	(___xxtofl@val+2)^0,c
  9445  001B78  6A04               	clrf	(___xxtofl@val+3)^0,c
  9446  001B7A  0E00               	movlw	0
  9447  001B7C  EC08  F020         	call	___xxtofl
  9448  001B80  C001  F013         	movff	?___xxtofl,___fldiv@a
  9449  001B84  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  9450  001B88  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  9451  001B8C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  9452  001B90  ECB5  F018         	call	___fldiv	;wreg free
  9453  001B94  C00F  F036         	movff	?___fldiv,colourcards_readRGBC@G_rel
  9454  001B98  C010  F037         	movff	?___fldiv+1,colourcards_readRGBC@G_rel+1
  9455  001B9C  C011  F038         	movff	?___fldiv+2,colourcards_readRGBC@G_rel+2
  9456  001BA0  C012  F039         	movff	?___fldiv+3,colourcards_readRGBC@G_rel+3
  9457                           
  9458                           ;colour_cards.c: 19:     float B_rel = (float)tmpval->B / (float)tmpval->C;
  9459  001BA4  EE20 F004          	lfsr	2,4
  9460  001BA8  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
  9461  001BAA  26D9               	addwf	fsr2l,f,c
  9462  001BAC  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  9463  001BAE  22DA               	addwfc	fsr2h,f,c
  9464  001BB0  CFDE F02E          	movff	postinc2,??_colourcards_readRGBC
  9465  001BB4  CFDD F02F          	movff	postdec2,??_colourcards_readRGBC+1
  9466  001BB8  C02E  F001         	movff	??_colourcards_readRGBC,___xxtofl@val
  9467  001BBC  C02F  F002         	movff	??_colourcards_readRGBC+1,___xxtofl@val+1
  9468  001BC0  6A03               	clrf	(___xxtofl@val+2)^0,c
  9469  001BC2  6A04               	clrf	(___xxtofl@val+3)^0,c
  9470  001BC4  0E00               	movlw	0
  9471  001BC6  EC08  F020         	call	___xxtofl
  9472  001BCA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  9473  001BCE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  9474  001BD2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  9475  001BD6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  9476  001BDA  EE20 F006          	lfsr	2,6
  9477  001BDE  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
  9478  001BE0  26D9               	addwf	fsr2l,f,c
  9479  001BE2  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
  9480  001BE4  22DA               	addwfc	fsr2h,f,c
  9481  001BE6  CFDE F030          	movff	postinc2,??_colourcards_readRGBC+2
  9482  001BEA  CFDD F031          	movff	postdec2,??_colourcards_readRGBC+3
  9483  001BEE  C030  F001         	movff	??_colourcards_readRGBC+2,___xxtofl@val
  9484  001BF2  C031  F002         	movff	??_colourcards_readRGBC+3,___xxtofl@val+1
  9485  001BF6  6A03               	clrf	(___xxtofl@val+2)^0,c
  9486  001BF8  6A04               	clrf	(___xxtofl@val+3)^0,c
  9487  001BFA  0E00               	movlw	0
  9488  001BFC  EC08  F020         	call	___xxtofl
  9489  001C00  C001  F013         	movff	?___xxtofl,___fldiv@a
  9490  001C04  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  9491  001C08  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  9492  001C0C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  9493  001C10  ECB5  F018         	call	___fldiv	;wreg free
  9494  001C14  C00F  F03A         	movff	?___fldiv,colourcards_readRGBC@B_rel
  9495  001C18  C010  F03B         	movff	?___fldiv+1,colourcards_readRGBC@B_rel+1
  9496  001C1C  C011  F03C         	movff	?___fldiv+2,colourcards_readRGBC@B_rel+2
  9497  001C20  C012  F03D         	movff	?___fldiv+3,colourcards_readRGBC@B_rel+3
  9498  001C24                     
  9499                           ;colour_cards.c: 22:     if ((R_rel>0.54) && (G_rel<0.245) && (B_rel<0.18)) {
  9500  001C24  0E71               	movlw	113
  9501  001C26  6E1A               	movwf	___flge@ff1^0,c
  9502  001C28  0E3D               	movlw	61
  9503  001C2A  6E1B               	movwf	(___flge@ff1+1)^0,c
  9504  001C2C  0E0A               	movlw	10
  9505  001C2E  6E1C               	movwf	(___flge@ff1+2)^0,c
  9506  001C30  0E3F               	movlw	63
  9507  001C32  6E1D               	movwf	(___flge@ff1+3)^0,c
  9508  001C34  C032  F01E         	movff	colourcards_readRGBC@R_rel,___flge@ff2
  9509  001C38  C033  F01F         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
  9510  001C3C  C034  F020         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
  9511  001C40  C035  F021         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
  9512  001C44  ECDB  F024         	call	___flge	;wreg free
  9513  001C48  B0D8               	btfsc	status,0,c
  9514  001C4A  EF29  F00E         	goto	u6851
  9515  001C4E  EF2B  F00E         	goto	u6850
  9516  001C52                     u6851:
  9517  001C52  EF70  F00E         	goto	l5780
  9518  001C56                     u6850:
  9519  001C56  C036  F01A         	movff	colourcards_readRGBC@G_rel,___flge@ff1
  9520  001C5A  C037  F01B         	movff	colourcards_readRGBC@G_rel+1,___flge@ff1+1
  9521  001C5E  C038  F01C         	movff	colourcards_readRGBC@G_rel+2,___flge@ff1+2
  9522  001C62  C039  F01D         	movff	colourcards_readRGBC@G_rel+3,___flge@ff1+3
  9523  001C66  0E48               	movlw	72
  9524  001C68  6E1E               	movwf	___flge@ff2^0,c
  9525  001C6A  0EE1               	movlw	225
  9526  001C6C  6E1F               	movwf	(___flge@ff2+1)^0,c
  9527  001C6E  0E7A               	movlw	122
  9528  001C70  6E20               	movwf	(___flge@ff2+2)^0,c
  9529  001C72  0E3E               	movlw	62
  9530  001C74  6E21               	movwf	(___flge@ff2+3)^0,c
  9531  001C76  ECDB  F024         	call	___flge	;wreg free
  9532  001C7A  B0D8               	btfsc	status,0,c
  9533  001C7C  EF42  F00E         	goto	u6861
  9534  001C80  EF44  F00E         	goto	u6860
  9535  001C84                     u6861:
  9536  001C84  EF70  F00E         	goto	l5780
  9537  001C88                     u6860:
  9538  001C88  C03A  F01A         	movff	colourcards_readRGBC@B_rel,___flge@ff1
  9539  001C8C  C03B  F01B         	movff	colourcards_readRGBC@B_rel+1,___flge@ff1+1
  9540  001C90  C03C  F01C         	movff	colourcards_readRGBC@B_rel+2,___flge@ff1+2
  9541  001C94  C03D  F01D         	movff	colourcards_readRGBC@B_rel+3,___flge@ff1+3
  9542  001C98  0EEC               	movlw	236
  9543  001C9A  6E1E               	movwf	___flge@ff2^0,c
  9544  001C9C  0E51               	movlw	81
  9545  001C9E  6E1F               	movwf	(___flge@ff2+1)^0,c
  9546  001CA0  0E38               	movlw	56
  9547  001CA2  6E20               	movwf	(___flge@ff2+2)^0,c
  9548  001CA4  0E3E               	movlw	62
  9549  001CA6  6E21               	movwf	(___flge@ff2+3)^0,c
  9550  001CA8  ECDB  F024         	call	___flge	;wreg free
  9551  001CAC  B0D8               	btfsc	status,0,c
  9552  001CAE  EF5B  F00E         	goto	u6871
  9553  001CB2  EF5D  F00E         	goto	u6870
  9554  001CB6                     u6871:
  9555  001CB6  EF70  F00E         	goto	l5780
  9556  001CBA                     u6870:
  9557  001CBA                     
  9558                           ;colour_cards.c: 24:         turnright(mL, mR, 90);
  9559  001CBA  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
  9560  001CBE  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9561  001CC2  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
  9562  001CC6  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9563  001CCA  0E00               	movlw	0
  9564  001CCC  6E27               	movwf	(turnright@deg+1)^0,c
  9565  001CCE  0E5A               	movlw	90
  9566  001CD0  6E26               	movwf	turnright@deg^0,c
  9567  001CD2  EC98  F02C         	call	_turnright	;wreg free
  9568  001CD6                     l5778:
  9569                           
  9570                           ;colour_cards.c: 25:         unknowncard_flag = 0;
  9571  001CD6  0E00               	movlw	0
  9572  001CD8  0100               	movlb	0	; () banked
  9573  001CDA  6FF7               	movwf	_unknowncard_flag& (0+255),b	;volatile
  9574                           
  9575                           ;colour_cards.c: 27:     } else if ((R_rel<0.435) && (G_rel>0.31) && (B_rel>0.195)) {
  9576  001CDC  EF86  F011         	goto	l5876
  9577  001CE0                     l5780:
  9578  001CE0  C032  F01A         	movff	colourcards_readRGBC@R_rel,___flge@ff1
  9579  001CE4  C033  F01B         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
  9580  001CE8  C034  F01C         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
  9581  001CEC  C035  F01D         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
  9582  001CF0  0E52               	movlw	82
  9583  001CF2  6E1E               	movwf	___flge@ff2^0,c
  9584  001CF4  0EB8               	movlw	184
  9585  001CF6  6E1F               	movwf	(___flge@ff2+1)^0,c
  9586  001CF8  0EDE               	movlw	222
  9587  001CFA  6E20               	movwf	(___flge@ff2+2)^0,c
  9588  001CFC  0E3E               	movlw	62
  9589  001CFE  6E21               	movwf	(___flge@ff2+3)^0,c
  9590  001D00  ECDB  F024         	call	___flge	;wreg free
  9591  001D04  B0D8               	btfsc	status,0,c
  9592  001D06  EF87  F00E         	goto	u6881
  9593  001D0A  EF89  F00E         	goto	u6880
  9594  001D0E                     u6881:
  9595  001D0E  EFCB  F00E         	goto	l5790
  9596  001D12                     u6880:
  9597  001D12  0E52               	movlw	82
  9598  001D14  6E1A               	movwf	___flge@ff1^0,c
  9599  001D16  0EB8               	movlw	184
  9600  001D18  6E1B               	movwf	(___flge@ff1+1)^0,c
  9601  001D1A  0E9E               	movlw	158
  9602  001D1C  6E1C               	movwf	(___flge@ff1+2)^0,c
  9603  001D1E  0E3E               	movlw	62
  9604  001D20  6E1D               	movwf	(___flge@ff1+3)^0,c
  9605  001D22  C036  F01E         	movff	colourcards_readRGBC@G_rel,___flge@ff2
  9606  001D26  C037  F01F         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
  9607  001D2A  C038  F020         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
  9608  001D2E  C039  F021         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
  9609  001D32  ECDB  F024         	call	___flge	;wreg free
  9610  001D36  B0D8               	btfsc	status,0,c
  9611  001D38  EFA0  F00E         	goto	u6891
  9612  001D3C  EFA2  F00E         	goto	u6890
  9613  001D40                     u6891:
  9614  001D40  EFCB  F00E         	goto	l5790
  9615  001D44                     u6890:
  9616  001D44  0E14               	movlw	20
  9617  001D46  6E1A               	movwf	___flge@ff1^0,c
  9618  001D48  0EAE               	movlw	174
  9619  001D4A  6E1B               	movwf	(___flge@ff1+1)^0,c
  9620  001D4C  0E47               	movlw	71
  9621  001D4E  6E1C               	movwf	(___flge@ff1+2)^0,c
  9622  001D50  0E3E               	movlw	62
  9623  001D52  6E1D               	movwf	(___flge@ff1+3)^0,c
  9624  001D54  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
  9625  001D58  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
  9626  001D5C  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
  9627  001D60  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
  9628  001D64  ECDB  F024         	call	___flge	;wreg free
  9629  001D68  B0D8               	btfsc	status,0,c
  9630  001D6A  EFB9  F00E         	goto	u6901
  9631  001D6E  EFBB  F00E         	goto	u6900
  9632  001D72                     u6901:
  9633  001D72  EFCB  F00E         	goto	l5790
  9634  001D76                     u6900:
  9635  001D76                     
  9636                           ;colour_cards.c: 29:         turnleft(mL, mR, 90);
  9637  001D76  C02A  F022         	movff	colourcards_readRGBC@mL,turnleft@mL
  9638  001D7A  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9639  001D7E  C02C  F024         	movff	colourcards_readRGBC@mR,turnleft@mR
  9640  001D82  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9641  001D86  0E00               	movlw	0
  9642  001D88  6E27               	movwf	(turnleft@deg+1)^0,c
  9643  001D8A  0E5A               	movlw	90
  9644  001D8C  6E26               	movwf	turnleft@deg^0,c
  9645  001D8E  ECC0  F02C         	call	_turnleft	;wreg free
  9646  001D92  EF6B  F00E         	goto	l5778
  9647  001D96                     l5790:
  9648  001D96  C032  F01A         	movff	colourcards_readRGBC@R_rel,___flge@ff1
  9649  001D9A  C033  F01B         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
  9650  001D9E  C034  F01C         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
  9651  001DA2  C035  F01D         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
  9652  001DA6  0EF6               	movlw	246
  9653  001DA8  6E1E               	movwf	___flge@ff2^0,c
  9654  001DAA  0E28               	movlw	40
  9655  001DAC  6E1F               	movwf	(___flge@ff2+1)^0,c
  9656  001DAE  0EDC               	movlw	220
  9657  001DB0  6E20               	movwf	(___flge@ff2+2)^0,c
  9658  001DB2  0E3E               	movlw	62
  9659  001DB4  6E21               	movwf	(___flge@ff2+3)^0,c
  9660  001DB6  ECDB  F024         	call	___flge	;wreg free
  9661  001DBA  B0D8               	btfsc	status,0,c
  9662  001DBC  EFE2  F00E         	goto	u6911
  9663  001DC0  EFE4  F00E         	goto	u6910
  9664  001DC4                     u6911:
  9665  001DC4  EF26  F00F         	goto	l5800
  9666  001DC8                     u6910:
  9667  001DC8  0E9A               	movlw	154
  9668  001DCA  6E1A               	movwf	___flge@ff1^0,c
  9669  001DCC  0E99               	movlw	153
  9670  001DCE  6E1B               	movwf	(___flge@ff1+1)^0,c
  9671  001DD0  0E99               	movlw	153
  9672  001DD2  6E1C               	movwf	(___flge@ff1+2)^0,c
  9673  001DD4  0E3E               	movlw	62
  9674  001DD6  6E1D               	movwf	(___flge@ff1+3)^0,c
  9675  001DD8  C036  F01E         	movff	colourcards_readRGBC@G_rel,___flge@ff2
  9676  001DDC  C037  F01F         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
  9677  001DE0  C038  F020         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
  9678  001DE4  C039  F021         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
  9679  001DE8  ECDB  F024         	call	___flge	;wreg free
  9680  001DEC  B0D8               	btfsc	status,0,c
  9681  001DEE  EFFB  F00E         	goto	u6921
  9682  001DF2  EFFD  F00E         	goto	u6920
  9683  001DF6                     u6921:
  9684  001DF6  EF26  F00F         	goto	l5800
  9685  001DFA                     u6920:
  9686  001DFA  0E3D               	movlw	61
  9687  001DFC  6E1A               	movwf	___flge@ff1^0,c
  9688  001DFE  0E0A               	movlw	10
  9689  001E00  6E1B               	movwf	(___flge@ff1+1)^0,c
  9690  001E02  0E57               	movlw	87
  9691  001E04  6E1C               	movwf	(___flge@ff1+2)^0,c
  9692  001E06  0E3E               	movlw	62
  9693  001E08  6E1D               	movwf	(___flge@ff1+3)^0,c
  9694  001E0A  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
  9695  001E0E  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
  9696  001E12  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
  9697  001E16  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
  9698  001E1A  ECDB  F024         	call	___flge	;wreg free
  9699  001E1E  B0D8               	btfsc	status,0,c
  9700  001E20  EF14  F00F         	goto	u6931
  9701  001E24  EF16  F00F         	goto	u6930
  9702  001E28                     u6931:
  9703  001E28  EF26  F00F         	goto	l5800
  9704  001E2C                     u6930:
  9705  001E2C                     
  9706                           ;colour_cards.c: 34:         turnright(mL, mR, 180);
  9707  001E2C  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
  9708  001E30  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9709  001E34  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
  9710  001E38  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9711  001E3C  0E00               	movlw	0
  9712  001E3E  6E27               	movwf	(turnright@deg+1)^0,c
  9713  001E40  0EB4               	movlw	180
  9714  001E42  6E26               	movwf	turnright@deg^0,c
  9715  001E44  EC98  F02C         	call	_turnright	;wreg free
  9716  001E48  EF6B  F00E         	goto	l5778
  9717  001E4C                     l5800:
  9718  001E4C  0E48               	movlw	72
  9719  001E4E  6E1A               	movwf	___flge@ff1^0,c
  9720  001E50  0EE1               	movlw	225
  9721  001E52  6E1B               	movwf	(___flge@ff1+1)^0,c
  9722  001E54  0EFA               	movlw	250
  9723  001E56  6E1C               	movwf	(___flge@ff1+2)^0,c
  9724  001E58  0E3E               	movlw	62
  9725  001E5A  6E1D               	movwf	(___flge@ff1+3)^0,c
  9726  001E5C  C032  F01E         	movff	colourcards_readRGBC@R_rel,___flge@ff2
  9727  001E60  C033  F01F         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
  9728  001E64  C034  F020         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
  9729  001E68  C035  F021         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
  9730  001E6C  ECDB  F024         	call	___flge	;wreg free
  9731  001E70  B0D8               	btfsc	status,0,c
  9732  001E72  EF3D  F00F         	goto	u6941
  9733  001E76  EF3F  F00F         	goto	u6940
  9734  001E7A                     u6941:
  9735  001E7A  EF95  F00F         	goto	l5810
  9736  001E7E                     u6940:
  9737  001E7E  0E85               	movlw	133
  9738  001E80  6E1A               	movwf	___flge@ff1^0,c
  9739  001E82  0EEB               	movlw	235
  9740  001E84  6E1B               	movwf	(___flge@ff1+1)^0,c
  9741  001E86  0E91               	movlw	145
  9742  001E88  6E1C               	movwf	(___flge@ff1+2)^0,c
  9743  001E8A  0E3E               	movlw	62
  9744  001E8C  6E1D               	movwf	(___flge@ff1+3)^0,c
  9745  001E8E  C036  F01E         	movff	colourcards_readRGBC@G_rel,___flge@ff2
  9746  001E92  C037  F01F         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
  9747  001E96  C038  F020         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
  9748  001E9A  C039  F021         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
  9749  001E9E  ECDB  F024         	call	___flge	;wreg free
  9750  001EA2  B0D8               	btfsc	status,0,c
  9751  001EA4  EF56  F00F         	goto	u6951
  9752  001EA8  EF58  F00F         	goto	u6950
  9753  001EAC                     u6951:
  9754  001EAC  EF95  F00F         	goto	l5810
  9755  001EB0                     u6950:
  9756  001EB0  0EEC               	movlw	236
  9757  001EB2  6E1A               	movwf	___flge@ff1^0,c
  9758  001EB4  0E51               	movlw	81
  9759  001EB6  6E1B               	movwf	(___flge@ff1+1)^0,c
  9760  001EB8  0E38               	movlw	56
  9761  001EBA  6E1C               	movwf	(___flge@ff1+2)^0,c
  9762  001EBC  0E3E               	movlw	62
  9763  001EBE  6E1D               	movwf	(___flge@ff1+3)^0,c
  9764  001EC0  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
  9765  001EC4  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
  9766  001EC8  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
  9767  001ECC  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
  9768  001ED0  ECDB  F024         	call	___flge	;wreg free
  9769  001ED4  B0D8               	btfsc	status,0,c
  9770  001ED6  EF6F  F00F         	goto	u6961
  9771  001EDA  EF71  F00F         	goto	u6960
  9772  001EDE                     u6961:
  9773  001EDE  EF95  F00F         	goto	l5810
  9774  001EE2                     u6960:
  9775  001EE2                     
  9776                           ;colour_cards.c: 39:         reverse(mL, mR);
  9777  001EE2  C02A  F01A         	movff	colourcards_readRGBC@mL,reverse@mL
  9778  001EE6  C02B  F01B         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  9779  001EEA  C02C  F01C         	movff	colourcards_readRGBC@mR,reverse@mR
  9780  001EEE  C02D  F01D         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  9781  001EF2  ECE4  F029         	call	_reverse	;wreg free
  9782                           
  9783                           ;colour_cards.c: 40:         stop(mL, mR);
  9784  001EF6  C02A  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9785  001EFA  C02B  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9786  001EFE  C02C  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9787  001F02  C02D  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9788  001F06  EC7E  F02A         	call	_stop	;wreg free
  9789                           
  9790                           ;colour_cards.c: 41:         turnright(mL, mR, 90);
  9791  001F0A  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
  9792  001F0E  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9793  001F12  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
  9794  001F16  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9795  001F1A  0E00               	movlw	0
  9796  001F1C  6E27               	movwf	(turnright@deg+1)^0,c
  9797  001F1E  0E5A               	movlw	90
  9798  001F20  6E26               	movwf	turnright@deg^0,c
  9799  001F22  EC98  F02C         	call	_turnright	;wreg free
  9800  001F26  EF6B  F00E         	goto	l5778
  9801  001F2A                     l5810:
  9802  001F2A  0E48               	movlw	72
  9803  001F2C  6E1A               	movwf	___flge@ff1^0,c
  9804  001F2E  0EE1               	movlw	225
  9805  001F30  6E1B               	movwf	(___flge@ff1+1)^0,c
  9806  001F32  0EFA               	movlw	250
  9807  001F34  6E1C               	movwf	(___flge@ff1+2)^0,c
  9808  001F36  0E3E               	movlw	62
  9809  001F38  6E1D               	movwf	(___flge@ff1+3)^0,c
  9810  001F3A  C032  F01E         	movff	colourcards_readRGBC@R_rel,___flge@ff2
  9811  001F3E  C033  F01F         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
  9812  001F42  C034  F020         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
  9813  001F46  C035  F021         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
  9814  001F4A  ECDB  F024         	call	___flge	;wreg free
  9815  001F4E  B0D8               	btfsc	status,0,c
  9816  001F50  EFAC  F00F         	goto	u6971
  9817  001F54  EFAE  F00F         	goto	u6970
  9818  001F58                     u6971:
  9819  001F58  EF04  F010         	goto	l5820
  9820  001F5C                     u6970:
  9821  001F5C  C036  F01A         	movff	colourcards_readRGBC@G_rel,___flge@ff1
  9822  001F60  C037  F01B         	movff	colourcards_readRGBC@G_rel+1,___flge@ff1+1
  9823  001F64  C038  F01C         	movff	colourcards_readRGBC@G_rel+2,___flge@ff1+2
  9824  001F68  C039  F01D         	movff	colourcards_readRGBC@G_rel+3,___flge@ff1+3
  9825  001F6C  0ECD               	movlw	205
  9826  001F6E  6E1E               	movwf	___flge@ff2^0,c
  9827  001F70  0ECC               	movlw	204
  9828  001F72  6E1F               	movwf	(___flge@ff2+1)^0,c
  9829  001F74  0E8C               	movlw	140
  9830  001F76  6E20               	movwf	(___flge@ff2+2)^0,c
  9831  001F78  0E3E               	movlw	62
  9832  001F7A  6E21               	movwf	(___flge@ff2+3)^0,c
  9833  001F7C  ECDB  F024         	call	___flge	;wreg free
  9834  001F80  B0D8               	btfsc	status,0,c
  9835  001F82  EFC5  F00F         	goto	u6981
  9836  001F86  EFC7  F00F         	goto	u6980
  9837  001F8A                     u6981:
  9838  001F8A  EF04  F010         	goto	l5820
  9839  001F8E                     u6980:
  9840  001F8E  0E14               	movlw	20
  9841  001F90  6E1A               	movwf	___flge@ff1^0,c
  9842  001F92  0EAE               	movlw	174
  9843  001F94  6E1B               	movwf	(___flge@ff1+1)^0,c
  9844  001F96  0E47               	movlw	71
  9845  001F98  6E1C               	movwf	(___flge@ff1+2)^0,c
  9846  001F9A  0E3E               	movlw	62
  9847  001F9C  6E1D               	movwf	(___flge@ff1+3)^0,c
  9848  001F9E  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
  9849  001FA2  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
  9850  001FA6  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
  9851  001FAA  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
  9852  001FAE  ECDB  F024         	call	___flge	;wreg free
  9853  001FB2  B0D8               	btfsc	status,0,c
  9854  001FB4  EFDE  F00F         	goto	u6991
  9855  001FB8  EFE0  F00F         	goto	u6990
  9856  001FBC                     u6991:
  9857  001FBC  EF04  F010         	goto	l5820
  9858  001FC0                     u6990:
  9859  001FC0                     
  9860                           ;colour_cards.c: 46:         reverse(mL, mR);
  9861  001FC0  C02A  F01A         	movff	colourcards_readRGBC@mL,reverse@mL
  9862  001FC4  C02B  F01B         	movff	colourcards_readRGBC@mL+1,reverse@mL+1
  9863  001FC8  C02C  F01C         	movff	colourcards_readRGBC@mR,reverse@mR
  9864  001FCC  C02D  F01D         	movff	colourcards_readRGBC@mR+1,reverse@mR+1
  9865  001FD0  ECE4  F029         	call	_reverse	;wreg free
  9866                           
  9867                           ;colour_cards.c: 47:         stop(mL, mR);
  9868  001FD4  C02A  F01A         	movff	colourcards_readRGBC@mL,stop@mL
  9869  001FD8  C02B  F01B         	movff	colourcards_readRGBC@mL+1,stop@mL+1
  9870  001FDC  C02C  F01C         	movff	colourcards_readRGBC@mR,stop@mR
  9871  001FE0  C02D  F01D         	movff	colourcards_readRGBC@mR+1,stop@mR+1
  9872  001FE4  EC7E  F02A         	call	_stop	;wreg free
  9873                           
  9874                           ;colour_cards.c: 48:         turnleft(mL, mR, 90);
  9875  001FE8  C02A  F022         	movff	colourcards_readRGBC@mL,turnleft@mL
  9876  001FEC  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
  9877  001FF0  C02C  F024         	movff	colourcards_readRGBC@mR,turnleft@mR
  9878  001FF4  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
  9879  001FF8  0E00               	movlw	0
  9880  001FFA  6E27               	movwf	(turnleft@deg+1)^0,c
  9881  001FFC  0E5A               	movlw	90
  9882  001FFE  6E26               	movwf	turnleft@deg^0,c
  9883  002000  ECC0  F02C         	call	_turnleft	;wreg free
  9884  002004  EF6B  F00E         	goto	l5778
  9885  002008                     l5820:
  9886  002008  0E71               	movlw	113
  9887  00200A  6E1A               	movwf	___flge@ff1^0,c
  9888  00200C  0E3D               	movlw	61
  9889  00200E  6E1B               	movwf	(___flge@ff1+1)^0,c
  9890  002010  0E0A               	movlw	10
  9891  002012  6E1C               	movwf	(___flge@ff1+2)^0,c
  9892  002014  0E3F               	movlw	63
  9893  002016  6E1D               	movwf	(___flge@ff1+3)^0,c
  9894  002018  C032  F01E         	movff	colourcards_readRGBC@R_rel,___flge@ff2
  9895  00201C  C033  F01F         	movff	colourcards_readRGBC@R_rel+1,___flge@ff2+1
  9896  002020  C034  F020         	movff	colourcards_readRGBC@R_rel+2,___flge@ff2+2
  9897  002024  C035  F021         	movff	colourcards_readRGBC@R_rel+3,___flge@ff2+3
  9898  002028  ECDB  F024         	call	___flge	;wreg free
  9899  00202C  B0D8               	btfsc	status,0,c
  9900  00202E  EF1B  F010         	goto	u7001
  9901  002032  EF1D  F010         	goto	u7000
  9902  002036                     u7001:
  9903  002036  EF5F  F010         	goto	l5830
  9904  00203A                     u7000:
  9905  00203A  C036  F01A         	movff	colourcards_readRGBC@G_rel,___flge@ff1
  9906  00203E  C037  F01B         	movff	colourcards_readRGBC@G_rel+1,___flge@ff1+1
  9907  002042  C038  F01C         	movff	colourcards_readRGBC@G_rel+2,___flge@ff1+2
  9908  002046  C039  F01D         	movff	colourcards_readRGBC@G_rel+3,___flge@ff1+3
  9909  00204A  0E8F               	movlw	143
  9910  00204C  6E1E               	movwf	___flge@ff2^0,c
  9911  00204E  0EC2               	movlw	194
  9912  002050  6E1F               	movwf	(___flge@ff2+1)^0,c
  9913  002052  0E75               	movlw	117
  9914  002054  6E20               	movwf	(___flge@ff2+2)^0,c
  9915  002056  0E3E               	movlw	62
  9916  002058  6E21               	movwf	(___flge@ff2+3)^0,c
  9917  00205A  ECDB  F024         	call	___flge	;wreg free
  9918  00205E  B0D8               	btfsc	status,0,c
  9919  002060  EF34  F010         	goto	u7011
  9920  002064  EF36  F010         	goto	u7010
  9921  002068                     u7011:
  9922  002068  EF5F  F010         	goto	l5830
  9923  00206C                     u7010:
  9924  00206C  C03A  F01A         	movff	colourcards_readRGBC@B_rel,___flge@ff1
  9925  002070  C03B  F01B         	movff	colourcards_readRGBC@B_rel+1,___flge@ff1+1
  9926  002074  C03C  F01C         	movff	colourcards_readRGBC@B_rel+2,___flge@ff1+2
  9927  002078  C03D  F01D         	movff	colourcards_readRGBC@B_rel+3,___flge@ff1+3
  9928  00207C  0EEC               	movlw	236
  9929  00207E  6E1E               	movwf	___flge@ff2^0,c
  9930  002080  0E51               	movlw	81
  9931  002082  6E1F               	movwf	(___flge@ff2+1)^0,c
  9932  002084  0E38               	movlw	56
  9933  002086  6E20               	movwf	(___flge@ff2+2)^0,c
  9934  002088  0E3E               	movlw	62
  9935  00208A  6E21               	movwf	(___flge@ff2+3)^0,c
  9936  00208C  ECDB  F024         	call	___flge	;wreg free
  9937  002090  B0D8               	btfsc	status,0,c
  9938  002092  EF4D  F010         	goto	u7021
  9939  002096  EF4F  F010         	goto	u7020
  9940  00209A                     u7021:
  9941  00209A  EF5F  F010         	goto	l5830
  9942  00209E                     u7020:
  9943  00209E                     
  9944                           ;colour_cards.c: 53:         turnright(mL, mR, 135);
  9945  00209E  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
  9946  0020A2  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
  9947  0020A6  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
  9948  0020AA  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
  9949  0020AE  0E00               	movlw	0
  9950  0020B0  6E27               	movwf	(turnright@deg+1)^0,c
  9951  0020B2  0E87               	movlw	135
  9952  0020B4  6E26               	movwf	turnright@deg^0,c
  9953  0020B6  EC98  F02C         	call	_turnright	;wreg free
  9954  0020BA  EF6B  F00E         	goto	l5778
  9955  0020BE                     l5830:
  9956  0020BE  C032  F01A         	movff	colourcards_readRGBC@R_rel,___flge@ff1
  9957  0020C2  C033  F01B         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
  9958  0020C6  C034  F01C         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
  9959  0020CA  C035  F01D         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
  9960  0020CE  0EAE               	movlw	174
  9961  0020D0  6E1E               	movwf	___flge@ff2^0,c
  9962  0020D2  0E47               	movlw	71
  9963  0020D4  6E1F               	movwf	(___flge@ff2+1)^0,c
  9964  0020D6  0EE1               	movlw	225
  9965  0020D8  6E20               	movwf	(___flge@ff2+2)^0,c
  9966  0020DA  0E3E               	movlw	62
  9967  0020DC  6E21               	movwf	(___flge@ff2+3)^0,c
  9968  0020DE  ECDB  F024         	call	___flge	;wreg free
  9969  0020E2  B0D8               	btfsc	status,0,c
  9970  0020E4  EF76  F010         	goto	u7031
  9971  0020E8  EF78  F010         	goto	u7030
  9972  0020EC                     u7031:
  9973  0020EC  EFBA  F010         	goto	l5840
  9974  0020F0                     u7030:
  9975  0020F0  0EF6               	movlw	246
  9976  0020F2  6E1A               	movwf	___flge@ff1^0,c
  9977  0020F4  0E28               	movlw	40
  9978  0020F6  6E1B               	movwf	(___flge@ff1+1)^0,c
  9979  0020F8  0E9C               	movlw	156
  9980  0020FA  6E1C               	movwf	(___flge@ff1+2)^0,c
  9981  0020FC  0E3E               	movlw	62
  9982  0020FE  6E1D               	movwf	(___flge@ff1+3)^0,c
  9983  002100  C036  F01E         	movff	colourcards_readRGBC@G_rel,___flge@ff2
  9984  002104  C037  F01F         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
  9985  002108  C038  F020         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
  9986  00210C  C039  F021         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
  9987  002110  ECDB  F024         	call	___flge	;wreg free
  9988  002114  B0D8               	btfsc	status,0,c
  9989  002116  EF8F  F010         	goto	u7041
  9990  00211A  EF91  F010         	goto	u7040
  9991  00211E                     u7041:
  9992  00211E  EFBA  F010         	goto	l5840
  9993  002122                     u7040:
  9994  002122  0E3D               	movlw	61
  9995  002124  6E1A               	movwf	___flge@ff1^0,c
  9996  002126  0E0A               	movlw	10
  9997  002128  6E1B               	movwf	(___flge@ff1+1)^0,c
  9998  00212A  0E57               	movlw	87
  9999  00212C  6E1C               	movwf	(___flge@ff1+2)^0,c
 10000  00212E  0E3E               	movlw	62
 10001  002130  6E1D               	movwf	(___flge@ff1+3)^0,c
 10002  002132  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
 10003  002136  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
 10004  00213A  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
 10005  00213E  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
 10006  002142  ECDB  F024         	call	___flge	;wreg free
 10007  002146  B0D8               	btfsc	status,0,c
 10008  002148  EFA8  F010         	goto	u7051
 10009  00214C  EFAA  F010         	goto	u7050
 10010  002150                     u7051:
 10011  002150  EFBA  F010         	goto	l5840
 10012  002154                     u7050:
 10013  002154                     
 10014                           ;colour_cards.c: 58:         turnleft(mL, mR, 135);
 10015  002154  C02A  F022         	movff	colourcards_readRGBC@mL,turnleft@mL
 10016  002158  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnleft@mL+1
 10017  00215C  C02C  F024         	movff	colourcards_readRGBC@mR,turnleft@mR
 10018  002160  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnleft@mR+1
 10019  002164  0E00               	movlw	0
 10020  002166  6E27               	movwf	(turnleft@deg+1)^0,c
 10021  002168  0E87               	movlw	135
 10022  00216A  6E26               	movwf	turnleft@deg^0,c
 10023  00216C  ECC0  F02C         	call	_turnleft	;wreg free
 10024  002170  EF6B  F00E         	goto	l5778
 10025  002174                     l5840:
 10026  002174  C032  F01A         	movff	colourcards_readRGBC@R_rel,___flge@ff1
 10027  002178  C033  F01B         	movff	colourcards_readRGBC@R_rel+1,___flge@ff1+1
 10028  00217C  C034  F01C         	movff	colourcards_readRGBC@R_rel+2,___flge@ff1+2
 10029  002180  C035  F01D         	movff	colourcards_readRGBC@R_rel+3,___flge@ff1+3
 10030  002184  0E1F               	movlw	31
 10031  002186  6E1E               	movwf	___flge@ff2^0,c
 10032  002188  0E85               	movlw	133
 10033  00218A  6E1F               	movwf	(___flge@ff2+1)^0,c
 10034  00218C  0EEB               	movlw	235
 10035  00218E  6E20               	movwf	(___flge@ff2+2)^0,c
 10036  002190  0E3E               	movlw	62
 10037  002192  6E21               	movwf	(___flge@ff2+3)^0,c
 10038  002194  ECDB  F024         	call	___flge	;wreg free
 10039  002198  B0D8               	btfsc	status,0,c
 10040  00219A  EFD1  F010         	goto	u7061
 10041  00219E  EFD3  F010         	goto	u7060
 10042  0021A2                     u7061:
 10043  0021A2  EF1A  F011         	goto	l5852
 10044  0021A6                     u7060:
 10045  0021A6  0E3D               	movlw	61
 10046  0021A8  6E1A               	movwf	___flge@ff1^0,c
 10047  0021AA  0E0A               	movlw	10
 10048  0021AC  6E1B               	movwf	(___flge@ff1+1)^0,c
 10049  0021AE  0E97               	movlw	151
 10050  0021B0  6E1C               	movwf	(___flge@ff1+2)^0,c
 10051  0021B2  0E3E               	movlw	62
 10052  0021B4  6E1D               	movwf	(___flge@ff1+3)^0,c
 10053  0021B6  C036  F01E         	movff	colourcards_readRGBC@G_rel,___flge@ff2
 10054  0021BA  C037  F01F         	movff	colourcards_readRGBC@G_rel+1,___flge@ff2+1
 10055  0021BE  C038  F020         	movff	colourcards_readRGBC@G_rel+2,___flge@ff2+2
 10056  0021C2  C039  F021         	movff	colourcards_readRGBC@G_rel+3,___flge@ff2+3
 10057  0021C6  ECDB  F024         	call	___flge	;wreg free
 10058  0021CA  B0D8               	btfsc	status,0,c
 10059  0021CC  EFEA  F010         	goto	u7071
 10060  0021D0  EFEC  F010         	goto	u7070
 10061  0021D4                     u7071:
 10062  0021D4  EF1A  F011         	goto	l5852
 10063  0021D8                     u7070:
 10064  0021D8  0E3D               	movlw	61
 10065  0021DA  6E1A               	movwf	___flge@ff1^0,c
 10066  0021DC  0E0A               	movlw	10
 10067  0021DE  6E1B               	movwf	(___flge@ff1+1)^0,c
 10068  0021E0  0E57               	movlw	87
 10069  0021E2  6E1C               	movwf	(___flge@ff1+2)^0,c
 10070  0021E4  0E3E               	movlw	62
 10071  0021E6  6E1D               	movwf	(___flge@ff1+3)^0,c
 10072  0021E8  C03A  F01E         	movff	colourcards_readRGBC@B_rel,___flge@ff2
 10073  0021EC  C03B  F01F         	movff	colourcards_readRGBC@B_rel+1,___flge@ff2+1
 10074  0021F0  C03C  F020         	movff	colourcards_readRGBC@B_rel+2,___flge@ff2+2
 10075  0021F4  C03D  F021         	movff	colourcards_readRGBC@B_rel+3,___flge@ff2+3
 10076  0021F8  ECDB  F024         	call	___flge	;wreg free
 10077  0021FC  B0D8               	btfsc	status,0,c
 10078  0021FE  EF03  F011         	goto	u7081
 10079  002202  EF05  F011         	goto	u7080
 10080  002206                     u7081:
 10081  002206  EF1A  F011         	goto	l5852
 10082  00220A                     u7080:
 10083  00220A                     
 10084                           ;colour_cards.c: 63:         turnright(mL, mR, 180);
 10085  00220A  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
 10086  00220E  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
 10087  002212  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
 10088  002216  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
 10089  00221A  0E00               	movlw	0
 10090  00221C  6E27               	movwf	(turnright@deg+1)^0,c
 10091  00221E  0EB4               	movlw	180
 10092  002220  6E26               	movwf	turnright@deg^0,c
 10093  002222  EC98  F02C         	call	_turnright	;wreg free
 10094  002226                     
 10095                           ;colour_cards.c: 64:         unknowncard_flag = 0;
 10096  002226  0E00               	movlw	0
 10097  002228  0100               	movlb	0	; () banked
 10098  00222A  6FF7               	movwf	_unknowncard_flag& (0+255),b	;volatile
 10099  00222C                     
 10100                           ; BSR set to: 0
 10101                           ;colour_cards.c: 65:         returnhome_flag = 1;
 10102  00222C  0E01               	movlw	1
 10103  00222E  6FF6               	movwf	_returnhome_flag& (0+255),b	;volatile
 10104                           
 10105                           ;colour_cards.c: 67:     } else {
 10106  002230  EF86  F011         	goto	l5876
 10107  002234                     l5852:
 10108                           
 10109                           ;colour_cards.c: 69:         _delay((unsigned long)((1000)*(64000000/4000.0)));
 10110  002234  0E52               	movlw	82
 10111  002236  6E2F               	movwf	(??_colourcards_readRGBC+1)^0,c
 10112  002238  0E2B               	movlw	43
 10113  00223A  6E2E               	movwf	??_colourcards_readRGBC^0,c
 10114  00223C  0E00               	movlw	0
 10115  00223E                     u7267:
 10116  00223E  2EE8               	decfsz	wreg,f,c
 10117  002240  D7FE               	bra	u7267
 10118  002242  2E2E               	decfsz	??_colourcards_readRGBC^0,f,c
 10119  002244  D7FC               	bra	u7267
 10120  002246  2E2F               	decfsz	(??_colourcards_readRGBC+1)^0,f,c
 10121  002248  D7FA               	bra	u7267
 10122  00224A  D000               	nop2	
 10123  00224C                     
 10124                           ;colour_cards.c: 70:         colourclick_readRGBC(tmpval);
 10125  00224C  C028  F00C         	movff	colourcards_readRGBC@tmpval,colourclick_readRGBC@tmpval
 10126  002250  C029  F00D         	movff	colourcards_readRGBC@tmpval+1,colourclick_readRGBC@tmpval+1
 10127  002254  EC4F  F02B         	call	_colourclick_readRGBC	;wreg free
 10128  002258                     
 10129                           ;colour_cards.c: 71:         if ((tmpval->C < interrupts_lower) || (tmpval->C > interrup
      +                          ts_upper)) {
 10130  002258  EE20 F006          	lfsr	2,6
 10131  00225C  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
 10132  00225E  26D9               	addwf	fsr2l,f,c
 10133  002260  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
 10134  002262  22DA               	addwfc	fsr2h,f,c
 10135  002264  0100               	movlb	0	; () banked
 10136  002266  51F4               	movf	_interrupts_lower& (0+255),w,b	;volatile
 10137  002268  5CDE               	subwf	postinc2,w,c
 10138  00226A  51F5               	movf	(_interrupts_lower+1)& (0+255),w,b	;volatile
 10139  00226C  58DE               	subwfb	postinc2,w,c
 10140  00226E  A0D8               	btfss	status,0,c
 10141  002270  EF3C  F011         	goto	u7091
 10142  002274  EF3E  F011         	goto	u7090
 10143  002278                     u7091:
 10144  002278  EF4F  F011         	goto	l5860
 10145  00227C                     u7090:
 10146  00227C                     
 10147                           ; BSR set to: 0
 10148  00227C  EE20 F006          	lfsr	2,6
 10149  002280  5028               	movf	colourcards_readRGBC@tmpval^0,w,c
 10150  002282  26D9               	addwf	fsr2l,f,c
 10151  002284  5029               	movf	(colourcards_readRGBC@tmpval+1)^0,w,c
 10152  002286  22DA               	addwfc	fsr2h,f,c
 10153  002288  50DE               	movf	postinc2,w,c
 10154  00228A  5DFB               	subwf	_interrupts_upper& (0+255),w,b	;volatile
 10155  00228C  50DE               	movf	postinc2,w,c
 10156  00228E  59FC               	subwfb	(_interrupts_upper+1)& (0+255),w,b	;volatile
 10157  002290  B0D8               	btfsc	status,0,c
 10158  002292  EF4D  F011         	goto	u7101
 10159  002296  EF4F  F011         	goto	u7100
 10160  00229A                     u7101:
 10161  00229A  EF7A  F011         	goto	l5872
 10162  00229E                     u7100:
 10163  00229E                     l5860:
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;colour_cards.c: 72:             if (unknowncard_flag<3) {
 10167  00229E  0E03               	movlw	3
 10168  0022A0  61F7               	cpfslt	_unknowncard_flag& (0+255),b	;volatile
 10169  0022A2  EF55  F011         	goto	u7111
 10170  0022A6  EF57  F011         	goto	u7110
 10171  0022AA                     u7111:
 10172  0022AA  EF5D  F011         	goto	l160
 10173  0022AE                     u7110:
 10174  0022AE                     
 10175                           ; BSR set to: 0
 10176                           ;colour_cards.c: 73:                 PIR0bits.INT1IF = 1;
 10177  0022AE  010E               	movlb	14	; () banked
 10178  0022B0  8333               	bsf	51,1,b	;volatile
 10179  0022B2                     
 10180                           ; BSR set to: 14
 10181                           ;colour_cards.c: 74:                 unknowncard_flag++;
 10182  0022B2  0100               	movlb	0	; () banked
 10183  0022B4  2BF7               	incf	_unknowncard_flag& (0+255),f,b	;volatile
 10184                           
 10185                           ;colour_cards.c: 75:             } else {
 10186  0022B6  EF86  F011         	goto	l5876
 10187  0022BA                     l160:
 10188                           
 10189                           ; BSR set to: 0
 10190                           ;colour_cards.c: 76:                 LATHbits.LATH3 = 1;
 10191  0022BA  8680               	bsf	128,3,c	;volatile
 10192  0022BC                     
 10193                           ; BSR set to: 0
 10194                           ;colour_cards.c: 77:                 turnright(mL, mR, 180);
 10195  0022BC  C02A  F022         	movff	colourcards_readRGBC@mL,turnright@mL
 10196  0022C0  C02B  F023         	movff	colourcards_readRGBC@mL+1,turnright@mL+1
 10197  0022C4  C02C  F024         	movff	colourcards_readRGBC@mR,turnright@mR
 10198  0022C8  C02D  F025         	movff	colourcards_readRGBC@mR+1,turnright@mR+1
 10199  0022CC  0E00               	movlw	0
 10200  0022CE  6E27               	movwf	(turnright@deg+1)^0,c
 10201  0022D0  0EB4               	movlw	180
 10202  0022D2  6E26               	movwf	turnright@deg^0,c
 10203  0022D4  EC98  F02C         	call	_turnright	;wreg free
 10204  0022D8                     
 10205                           ;colour_cards.c: 78:                 returnhome_flag = !returnhome_flag;
 10206  0022D8  0100               	movlb	0	; () banked
 10207  0022DA  51F6               	movf	_returnhome_flag& (0+255),w,b	;volatile
 10208  0022DC  B4D8               	btfsc	status,2,c
 10209  0022DE  EF73  F011         	goto	u7121
 10210  0022E2  EF76  F011         	goto	u7120
 10211  0022E6                     u7121:
 10212  0022E6  0E01               	movlw	1
 10213  0022E8  EF77  F011         	goto	u7130
 10214  0022EC                     u7120:
 10215  0022EC  0E00               	movlw	0
 10216  0022EE                     u7130:
 10217  0022EE  6FF6               	movwf	_returnhome_flag& (0+255),b	;volatile
 10218  0022F0  EF6B  F00E         	goto	l5778
 10219  0022F4                     l5872:
 10220                           
 10221                           ; BSR set to: 0
 10222                           ;colour_cards.c: 82:             forward(mL, mR);
 10223  0022F4  C02A  F01A         	movff	colourcards_readRGBC@mL,forward@mL
 10224  0022F8  C02B  F01B         	movff	colourcards_readRGBC@mL+1,forward@mL+1
 10225  0022FC  C02C  F01C         	movff	colourcards_readRGBC@mR,forward@mR
 10226  002300  C02D  F01D         	movff	colourcards_readRGBC@mR+1,forward@mR+1
 10227  002304  EC31  F02A         	call	_forward	;wreg free
 10228  002308  EF6B  F00E         	goto	l5778
 10229  00230C                     l5876:
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;colour_cards.c: 88:     colourcard_flag = 0;
 10233  00230C  0E00               	movlw	0
 10234  00230E  6FF8               	movwf	_colourcard_flag& (0+255),b	;volatile
 10235  002310                     
 10236                           ; BSR set to: 0
 10237                           ;colour_cards.c: 89:     PIE0bits.INT1IE = 1;
 10238  002310  010E               	movlb	14	; () banked
 10239  002312  8329               	bsf	41,1,b	;volatile
 10240  002314                     
 10241                           ; BSR set to: 14
 10242  002314  0012               	return		;funcret
 10243  002316                     __end_of_colourcards_readRGBC:
 10244                           	callstack 0
 10245                           
 10246 ;; *************** function _colourclick_readRGBC *****************
 10247 ;; Defined at:
 10248 ;;		line 131 in file "colour_click.c"
 10249 ;; Parameters:    Size  Location     Type
 10250 ;;  tmpval          2   11[COMRAM] PTR struct .
 10251 ;;		 -> colourclick_calibration@current(8), colourclick_calibration@initial(8), colourcards_testing@current(8), main@cur
      +rent(8), 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;		None
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  1    wreg      void 
 10256 ;; Registers used:
 10257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10267 ;;Total ram usage:        2 bytes
 10268 ;; Hardware stack levels used: 1
 10269 ;; Hardware stack levels required when called: 3
 10270 ;; This function calls:
 10271 ;;		_colourclick_readB
 10272 ;;		_colourclick_readC
 10273 ;;		_colourclick_readG
 10274 ;;		_colourclick_readR
 10275 ;; This function is called by:
 10276 ;;		_main
 10277 ;;		_colourcards_readRGBC
 10278 ;;		_colourcards_testing
 10279 ;;		_colourclick_calibration
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           	psect	text40
 10284  00569E                     __ptext40:
 10285                           	callstack 0
 10286  00569E                     _colourclick_readRGBC:
 10287                           	callstack 27
 10288  00569E                     
 10289                           ;colour_click.c: 131: void colourclick_readRGBC(RGBC_val *tmpval);colour_click.c: 132: {
      +                          ;colour_click.c: 133:     tmpval->R = colourclick_readR();
 10290  00569E  ECD0  F02B         	call	_colourclick_readR	;wreg free
 10291  0056A2  C00C  FFD9         	movff	colourclick_readRGBC@tmpval,fsr2l
 10292  0056A6  C00D  FFDA         	movff	colourclick_readRGBC@tmpval+1,fsr2h
 10293  0056AA  C005  FFDE         	movff	?_colourclick_readR,postinc2
 10294  0056AE  C006  FFDD         	movff	?_colourclick_readR+1,postdec2
 10295                           
 10296                           ;colour_click.c: 134:     tmpval->G = colourclick_readG();
 10297  0056B2  ECF8  F02B         	call	_colourclick_readG	;wreg free
 10298  0056B6  EE20 F002          	lfsr	2,2
 10299  0056BA  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 10300  0056BC  26D9               	addwf	fsr2l,f,c
 10301  0056BE  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10302  0056C0  22DA               	addwfc	fsr2h,f,c
 10303  0056C2  C005  FFDE         	movff	?_colourclick_readG,postinc2
 10304  0056C6  C006  FFDD         	movff	?_colourclick_readG+1,postdec2
 10305                           
 10306                           ;colour_click.c: 135:     tmpval->B = colourclick_readB();
 10307  0056CA  EC48  F02C         	call	_colourclick_readB	;wreg free
 10308  0056CE  EE20 F004          	lfsr	2,4
 10309  0056D2  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 10310  0056D4  26D9               	addwf	fsr2l,f,c
 10311  0056D6  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10312  0056D8  22DA               	addwfc	fsr2h,f,c
 10313  0056DA  C005  FFDE         	movff	?_colourclick_readB,postinc2
 10314  0056DE  C006  FFDD         	movff	?_colourclick_readB+1,postdec2
 10315                           
 10316                           ;colour_click.c: 136:     tmpval->C = colourclick_readC();
 10317  0056E2  EC20  F02C         	call	_colourclick_readC	;wreg free
 10318  0056E6  EE20 F006          	lfsr	2,6
 10319  0056EA  500C               	movf	colourclick_readRGBC@tmpval^0,w,c
 10320  0056EC  26D9               	addwf	fsr2l,f,c
 10321  0056EE  500D               	movf	(colourclick_readRGBC@tmpval+1)^0,w,c
 10322  0056F0  22DA               	addwfc	fsr2h,f,c
 10323  0056F2  C005  FFDE         	movff	?_colourclick_readC,postinc2
 10324  0056F6  C006  FFDD         	movff	?_colourclick_readC+1,postdec2
 10325  0056FA  0012               	return		;funcret
 10326  0056FC                     __end_of_colourclick_readRGBC:
 10327                           	callstack 0
 10328                           
 10329 ;; *************** function _colourclick_readR *****************
 10330 ;; Defined at:
 10331 ;;		line 56 in file "colour_click.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;		None
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;  tmp             2    9[COMRAM] unsigned int 
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  2    4[COMRAM] unsigned int 
 10338 ;; Registers used:
 10339 ;;		wreg, status,2, status,0, cstack
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10347 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10348 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10349 ;;Total ram usage:        7 bytes
 10350 ;; Hardware stack levels used: 1
 10351 ;; Hardware stack levels required when called: 2
 10352 ;; This function calls:
 10353 ;;		_I2C_2_Master_Read
 10354 ;;		_I2C_2_Master_RepStart
 10355 ;;		_I2C_2_Master_Start
 10356 ;;		_I2C_2_Master_Stop
 10357 ;;		_I2C_2_Master_Write
 10358 ;; This function is called by:
 10359 ;;		_colourclick_readRGBC
 10360 ;;		_colourclick_readRGBC2
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364                           	psect	text41
 10365  0057A0                     __ptext41:
 10366                           	callstack 0
 10367  0057A0                     _colourclick_readR:
 10368                           	callstack 27
 10369  0057A0                     
 10370                           ;colour_click.c: 58:  unsigned int tmp;;colour_click.c: 59:  I2C_2_Master_Start();
 10371  0057A0  ECED  F02E         	call	_I2C_2_Master_Start	;wreg free
 10372                           
 10373                           ;colour_click.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
 10374  0057A4  0E52               	movlw	82
 10375  0057A6  ECDC  F02E         	call	_I2C_2_Master_Write
 10376                           
 10377                           ;colour_click.c: 61:  I2C_2_Master_Write(0xA0 | 0x16);
 10378  0057AA  0EB6               	movlw	182
 10379  0057AC  ECDC  F02E         	call	_I2C_2_Master_Write
 10380                           
 10381                           ;colour_click.c: 62:  I2C_2_Master_RepStart();
 10382  0057B0  ECF2  F02E         	call	_I2C_2_Master_RepStart	;wreg free
 10383                           
 10384                           ;colour_click.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
 10385  0057B4  0E53               	movlw	83
 10386  0057B6  ECDC  F02E         	call	_I2C_2_Master_Write
 10387                           
 10388                           ;colour_click.c: 64:  tmp=I2C_2_Master_Read(1);
 10389  0057BA  0E01               	movlw	1
 10390  0057BC  EC2D  F02D         	call	_I2C_2_Master_Read
 10391  0057C0  6E07               	movwf	??_colourclick_readR^0,c
 10392  0057C2  5007               	movf	??_colourclick_readR^0,w,c
 10393  0057C4  6E0A               	movwf	colourclick_readR@tmp^0,c
 10394  0057C6  6A0B               	clrf	(colourclick_readR@tmp+1)^0,c
 10395                           
 10396                           ;colour_click.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10397  0057C8  0E00               	movlw	0
 10398  0057CA  EC2D  F02D         	call	_I2C_2_Master_Read
 10399  0057CE  6E07               	movwf	??_colourclick_readR^0,c
 10400  0057D0  5007               	movf	??_colourclick_readR^0,w,c
 10401  0057D2  6E09               	movwf	(??_colourclick_readR+2)^0,c
 10402  0057D4  6A08               	clrf	(??_colourclick_readR+1)^0,c
 10403  0057D6  500A               	movf	colourclick_readR@tmp^0,w,c
 10404  0057D8  1008               	iorwf	(??_colourclick_readR+1)^0,w,c
 10405  0057DA  6E0A               	movwf	colourclick_readR@tmp^0,c
 10406  0057DC  500B               	movf	(colourclick_readR@tmp+1)^0,w,c
 10407  0057DE  1009               	iorwf	(??_colourclick_readR+2)^0,w,c
 10408  0057E0  6E0B               	movwf	(colourclick_readR@tmp+1)^0,c
 10409                           
 10410                           ;colour_click.c: 66:  I2C_2_Master_Stop();
 10411  0057E2  ECE8  F02E         	call	_I2C_2_Master_Stop	;wreg free
 10412  0057E6                     
 10413                           ;colour_click.c: 67:  return tmp;
 10414  0057E6  C00A  F005         	movff	colourclick_readR@tmp,?_colourclick_readR
 10415  0057EA  C00B  F006         	movff	colourclick_readR@tmp+1,?_colourclick_readR+1
 10416  0057EE  0012               	return		;funcret
 10417  0057F0                     __end_of_colourclick_readR:
 10418                           	callstack 0
 10419                           
 10420 ;; *************** function _colourclick_readG *****************
 10421 ;; Defined at:
 10422 ;;		line 75 in file "colour_click.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;		None
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;  tmp             2    9[COMRAM] unsigned int 
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  2    4[COMRAM] unsigned int 
 10429 ;; Registers used:
 10430 ;;		wreg, status,2, status,0, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10437 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10438 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10439 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10440 ;;Total ram usage:        7 bytes
 10441 ;; Hardware stack levels used: 1
 10442 ;; Hardware stack levels required when called: 2
 10443 ;; This function calls:
 10444 ;;		_I2C_2_Master_Read
 10445 ;;		_I2C_2_Master_RepStart
 10446 ;;		_I2C_2_Master_Start
 10447 ;;		_I2C_2_Master_Stop
 10448 ;;		_I2C_2_Master_Write
 10449 ;; This function is called by:
 10450 ;;		_colourclick_readRGBC
 10451 ;;		_colourclick_readRGBC2
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text42
 10456  0057F0                     __ptext42:
 10457                           	callstack 0
 10458  0057F0                     _colourclick_readG:
 10459                           	callstack 27
 10460  0057F0                     
 10461                           ;colour_click.c: 77:  unsigned int tmp;;colour_click.c: 78:  I2C_2_Master_Start();
 10462  0057F0  ECED  F02E         	call	_I2C_2_Master_Start	;wreg free
 10463                           
 10464                           ;colour_click.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
 10465  0057F4  0E52               	movlw	82
 10466  0057F6  ECDC  F02E         	call	_I2C_2_Master_Write
 10467                           
 10468                           ;colour_click.c: 80:  I2C_2_Master_Write(0xA0 | 0x18);
 10469  0057FA  0EB8               	movlw	184
 10470  0057FC  ECDC  F02E         	call	_I2C_2_Master_Write
 10471                           
 10472                           ;colour_click.c: 81:  I2C_2_Master_RepStart();
 10473  005800  ECF2  F02E         	call	_I2C_2_Master_RepStart	;wreg free
 10474                           
 10475                           ;colour_click.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
 10476  005804  0E53               	movlw	83
 10477  005806  ECDC  F02E         	call	_I2C_2_Master_Write
 10478                           
 10479                           ;colour_click.c: 83:  tmp=I2C_2_Master_Read(1);
 10480  00580A  0E01               	movlw	1
 10481  00580C  EC2D  F02D         	call	_I2C_2_Master_Read
 10482  005810  6E07               	movwf	??_colourclick_readG^0,c
 10483  005812  5007               	movf	??_colourclick_readG^0,w,c
 10484  005814  6E0A               	movwf	colourclick_readG@tmp^0,c
 10485  005816  6A0B               	clrf	(colourclick_readG@tmp+1)^0,c
 10486                           
 10487                           ;colour_click.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10488  005818  0E00               	movlw	0
 10489  00581A  EC2D  F02D         	call	_I2C_2_Master_Read
 10490  00581E  6E07               	movwf	??_colourclick_readG^0,c
 10491  005820  5007               	movf	??_colourclick_readG^0,w,c
 10492  005822  6E09               	movwf	(??_colourclick_readG+2)^0,c
 10493  005824  6A08               	clrf	(??_colourclick_readG+1)^0,c
 10494  005826  500A               	movf	colourclick_readG@tmp^0,w,c
 10495  005828  1008               	iorwf	(??_colourclick_readG+1)^0,w,c
 10496  00582A  6E0A               	movwf	colourclick_readG@tmp^0,c
 10497  00582C  500B               	movf	(colourclick_readG@tmp+1)^0,w,c
 10498  00582E  1009               	iorwf	(??_colourclick_readG+2)^0,w,c
 10499  005830  6E0B               	movwf	(colourclick_readG@tmp+1)^0,c
 10500                           
 10501                           ;colour_click.c: 85:  I2C_2_Master_Stop();
 10502  005832  ECE8  F02E         	call	_I2C_2_Master_Stop	;wreg free
 10503  005836                     
 10504                           ;colour_click.c: 86:  return tmp;
 10505  005836  C00A  F005         	movff	colourclick_readG@tmp,?_colourclick_readG
 10506  00583A  C00B  F006         	movff	colourclick_readG@tmp+1,?_colourclick_readG+1
 10507  00583E  0012               	return		;funcret
 10508  005840                     __end_of_colourclick_readG:
 10509                           	callstack 0
 10510                           
 10511 ;; *************** function _colourclick_readC *****************
 10512 ;; Defined at:
 10513 ;;		line 113 in file "colour_click.c"
 10514 ;; Parameters:    Size  Location     Type
 10515 ;;		None
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;  tmp             2    9[COMRAM] unsigned int 
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  2    4[COMRAM] unsigned int 
 10520 ;; Registers used:
 10521 ;;		wreg, status,2, status,0, cstack
 10522 ;; Tracked objects:
 10523 ;;		On entry : 0/0
 10524 ;;		On exit  : 0/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10528 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10529 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10530 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10531 ;;Total ram usage:        7 bytes
 10532 ;; Hardware stack levels used: 1
 10533 ;; Hardware stack levels required when called: 2
 10534 ;; This function calls:
 10535 ;;		_I2C_2_Master_Read
 10536 ;;		_I2C_2_Master_RepStart
 10537 ;;		_I2C_2_Master_Start
 10538 ;;		_I2C_2_Master_Stop
 10539 ;;		_I2C_2_Master_Write
 10540 ;; This function is called by:
 10541 ;;		_colourclick_readRGBC
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           	psect	text43
 10546  005840                     __ptext43:
 10547                           	callstack 0
 10548  005840                     _colourclick_readC:
 10549                           	callstack 27
 10550  005840                     
 10551                           ;colour_click.c: 115:  unsigned int tmp;;colour_click.c: 116:  I2C_2_Master_Start();
 10552  005840  ECED  F02E         	call	_I2C_2_Master_Start	;wreg free
 10553                           
 10554                           ;colour_click.c: 117:  I2C_2_Master_Write(0x52 | 0x00);
 10555  005844  0E52               	movlw	82
 10556  005846  ECDC  F02E         	call	_I2C_2_Master_Write
 10557                           
 10558                           ;colour_click.c: 118:  I2C_2_Master_Write(0xA0 | 0x14);
 10559  00584A  0EB4               	movlw	180
 10560  00584C  ECDC  F02E         	call	_I2C_2_Master_Write
 10561                           
 10562                           ;colour_click.c: 119:  I2C_2_Master_RepStart();
 10563  005850  ECF2  F02E         	call	_I2C_2_Master_RepStart	;wreg free
 10564                           
 10565                           ;colour_click.c: 120:  I2C_2_Master_Write(0x52 | 0x01);
 10566  005854  0E53               	movlw	83
 10567  005856  ECDC  F02E         	call	_I2C_2_Master_Write
 10568                           
 10569                           ;colour_click.c: 121:  tmp=I2C_2_Master_Read(1);
 10570  00585A  0E01               	movlw	1
 10571  00585C  EC2D  F02D         	call	_I2C_2_Master_Read
 10572  005860  6E07               	movwf	??_colourclick_readC^0,c
 10573  005862  5007               	movf	??_colourclick_readC^0,w,c
 10574  005864  6E0A               	movwf	colourclick_readC@tmp^0,c
 10575  005866  6A0B               	clrf	(colourclick_readC@tmp+1)^0,c
 10576                           
 10577                           ;colour_click.c: 122:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10578  005868  0E00               	movlw	0
 10579  00586A  EC2D  F02D         	call	_I2C_2_Master_Read
 10580  00586E  6E07               	movwf	??_colourclick_readC^0,c
 10581  005870  5007               	movf	??_colourclick_readC^0,w,c
 10582  005872  6E09               	movwf	(??_colourclick_readC+2)^0,c
 10583  005874  6A08               	clrf	(??_colourclick_readC+1)^0,c
 10584  005876  500A               	movf	colourclick_readC@tmp^0,w,c
 10585  005878  1008               	iorwf	(??_colourclick_readC+1)^0,w,c
 10586  00587A  6E0A               	movwf	colourclick_readC@tmp^0,c
 10587  00587C  500B               	movf	(colourclick_readC@tmp+1)^0,w,c
 10588  00587E  1009               	iorwf	(??_colourclick_readC+2)^0,w,c
 10589  005880  6E0B               	movwf	(colourclick_readC@tmp+1)^0,c
 10590                           
 10591                           ;colour_click.c: 123:  I2C_2_Master_Stop();
 10592  005882  ECE8  F02E         	call	_I2C_2_Master_Stop	;wreg free
 10593  005886                     
 10594                           ;colour_click.c: 124:  return tmp;
 10595  005886  C00A  F005         	movff	colourclick_readC@tmp,?_colourclick_readC
 10596  00588A  C00B  F006         	movff	colourclick_readC@tmp+1,?_colourclick_readC+1
 10597  00588E  0012               	return		;funcret
 10598  005890                     __end_of_colourclick_readC:
 10599                           	callstack 0
 10600                           
 10601 ;; *************** function _colourclick_readB *****************
 10602 ;; Defined at:
 10603 ;;		line 94 in file "colour_click.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;		None
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;  tmp             2    9[COMRAM] unsigned int 
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  2    4[COMRAM] unsigned int 
 10610 ;; Registers used:
 10611 ;;		wreg, status,2, status,0, cstack
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/0
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10619 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10620 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10621 ;;Total ram usage:        7 bytes
 10622 ;; Hardware stack levels used: 1
 10623 ;; Hardware stack levels required when called: 2
 10624 ;; This function calls:
 10625 ;;		_I2C_2_Master_Read
 10626 ;;		_I2C_2_Master_RepStart
 10627 ;;		_I2C_2_Master_Start
 10628 ;;		_I2C_2_Master_Stop
 10629 ;;		_I2C_2_Master_Write
 10630 ;; This function is called by:
 10631 ;;		_colourclick_readRGBC
 10632 ;;		_colourclick_readRGBC2
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text44
 10637  005890                     __ptext44:
 10638                           	callstack 0
 10639  005890                     _colourclick_readB:
 10640                           	callstack 27
 10641  005890                     
 10642                           ;colour_click.c: 96:  unsigned int tmp;;colour_click.c: 97:  I2C_2_Master_Start();
 10643  005890  ECED  F02E         	call	_I2C_2_Master_Start	;wreg free
 10644                           
 10645                           ;colour_click.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
 10646  005894  0E52               	movlw	82
 10647  005896  ECDC  F02E         	call	_I2C_2_Master_Write
 10648                           
 10649                           ;colour_click.c: 99:  I2C_2_Master_Write(0xA0 | 0x1A);
 10650  00589A  0EBA               	movlw	186
 10651  00589C  ECDC  F02E         	call	_I2C_2_Master_Write
 10652                           
 10653                           ;colour_click.c: 100:  I2C_2_Master_RepStart();
 10654  0058A0  ECF2  F02E         	call	_I2C_2_Master_RepStart	;wreg free
 10655                           
 10656                           ;colour_click.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
 10657  0058A4  0E53               	movlw	83
 10658  0058A6  ECDC  F02E         	call	_I2C_2_Master_Write
 10659                           
 10660                           ;colour_click.c: 102:  tmp=I2C_2_Master_Read(1);
 10661  0058AA  0E01               	movlw	1
 10662  0058AC  EC2D  F02D         	call	_I2C_2_Master_Read
 10663  0058B0  6E07               	movwf	??_colourclick_readB^0,c
 10664  0058B2  5007               	movf	??_colourclick_readB^0,w,c
 10665  0058B4  6E0A               	movwf	colourclick_readB@tmp^0,c
 10666  0058B6  6A0B               	clrf	(colourclick_readB@tmp+1)^0,c
 10667                           
 10668                           ;colour_click.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10669  0058B8  0E00               	movlw	0
 10670  0058BA  EC2D  F02D         	call	_I2C_2_Master_Read
 10671  0058BE  6E07               	movwf	??_colourclick_readB^0,c
 10672  0058C0  5007               	movf	??_colourclick_readB^0,w,c
 10673  0058C2  6E09               	movwf	(??_colourclick_readB+2)^0,c
 10674  0058C4  6A08               	clrf	(??_colourclick_readB+1)^0,c
 10675  0058C6  500A               	movf	colourclick_readB@tmp^0,w,c
 10676  0058C8  1008               	iorwf	(??_colourclick_readB+1)^0,w,c
 10677  0058CA  6E0A               	movwf	colourclick_readB@tmp^0,c
 10678  0058CC  500B               	movf	(colourclick_readB@tmp+1)^0,w,c
 10679  0058CE  1009               	iorwf	(??_colourclick_readB+2)^0,w,c
 10680  0058D0  6E0B               	movwf	(colourclick_readB@tmp+1)^0,c
 10681                           
 10682                           ;colour_click.c: 104:  I2C_2_Master_Stop();
 10683  0058D2  ECE8  F02E         	call	_I2C_2_Master_Stop	;wreg free
 10684  0058D6                     
 10685                           ;colour_click.c: 105:  return tmp;
 10686  0058D6  C00A  F005         	movff	colourclick_readB@tmp,?_colourclick_readB
 10687  0058DA  C00B  F006         	movff	colourclick_readB@tmp+1,?_colourclick_readB+1
 10688  0058DE  0012               	return		;funcret
 10689  0058E0                     __end_of_colourclick_readB:
 10690                           	callstack 0
 10691                           
 10692 ;; *************** function _I2C_2_Master_Write *****************
 10693 ;; Defined at:
 10694 ;;		line 69 in file "I2C.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  data_byte       1    wreg     unsigned char 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  data_byte       1    1[COMRAM] unsigned char 
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      void 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2, status,0, cstack
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10712 ;;Total ram usage:        1 bytes
 10713 ;; Hardware stack levels used: 1
 10714 ;; Hardware stack levels required when called: 1
 10715 ;; This function calls:
 10716 ;;		_I2C_2_Master_Idle
 10717 ;; This function is called by:
 10718 ;;		_colourclick_writetoaddr
 10719 ;;		_colourclick_readR
 10720 ;;		_colourclick_readG
 10721 ;;		_colourclick_readB
 10722 ;;		_colourclick_readC
 10723 ;; This function uses a non-reentrant model
 10724 ;;
 10725                           
 10726                           	psect	text45
 10727  005DB8                     __ptext45:
 10728                           	callstack 0
 10729  005DB8                     _I2C_2_Master_Write:
 10730                           	callstack 27
 10731                           
 10732                           ;incstack = 0
 10733                           ;I2C_2_Master_Write@data_byte stored from wreg
 10734  005DB8  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 10735  005DBA                     
 10736                           ;I2C.c: 69: void I2C_2_Master_Write(unsigned char data_byte);I2C.c: 70: {;I2C.c: 71:   I
      +                          2C_2_Master_Idle();
 10737  005DBA  EC3D  F02E         	call	_I2C_2_Master_Idle	;wreg free
 10738  005DBE                     
 10739                           ;I2C.c: 72:   SSP2BUF = data_byte;
 10740  005DBE  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10741  005DC2  0012               	return		;funcret
 10742  005DC4                     __end_of_I2C_2_Master_Write:
 10743                           	callstack 0
 10744                           
 10745 ;; *************** function _I2C_2_Master_Stop *****************
 10746 ;; Defined at:
 10747 ;;		line 59 in file "I2C.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      void 
 10754 ;; Registers used:
 10755 ;;		wreg, status,2, status,0, cstack
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10765 ;;Total ram usage:        0 bytes
 10766 ;; Hardware stack levels used: 1
 10767 ;; Hardware stack levels required when called: 1
 10768 ;; This function calls:
 10769 ;;		_I2C_2_Master_Idle
 10770 ;; This function is called by:
 10771 ;;		_colourclick_writetoaddr
 10772 ;;		_colourclick_readR
 10773 ;;		_colourclick_readG
 10774 ;;		_colourclick_readB
 10775 ;;		_colourclick_readC
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           
 10779                           	psect	text46
 10780  005DD0                     __ptext46:
 10781                           	callstack 0
 10782  005DD0                     _I2C_2_Master_Stop:
 10783                           	callstack 27
 10784  005DD0                     
 10785                           ;I2C.c: 61:   I2C_2_Master_Idle();
 10786  005DD0  EC3D  F02E         	call	_I2C_2_Master_Idle	;wreg free
 10787  005DD4                     
 10788                           ;I2C.c: 62:   SSP2CON2bits.PEN = 1;
 10789  005DD4  010E               	movlb	14	; () banked
 10790  005DD6  85DA               	bsf	218,2,b	;volatile
 10791  005DD8                     
 10792                           ; BSR set to: 14
 10793  005DD8  0012               	return		;funcret
 10794  005DDA                     __end_of_I2C_2_Master_Stop:
 10795                           	callstack 0
 10796                           
 10797 ;; *************** function _I2C_2_Master_Start *****************
 10798 ;; Defined at:
 10799 ;;		line 39 in file "I2C.c"
 10800 ;; Parameters:    Size  Location     Type
 10801 ;;		None
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;		None
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  1    wreg      void 
 10806 ;; Registers used:
 10807 ;;		wreg, status,2, status,0, cstack
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10817 ;;Total ram usage:        0 bytes
 10818 ;; Hardware stack levels used: 1
 10819 ;; Hardware stack levels required when called: 1
 10820 ;; This function calls:
 10821 ;;		_I2C_2_Master_Idle
 10822 ;; This function is called by:
 10823 ;;		_colourclick_writetoaddr
 10824 ;;		_colourclick_readR
 10825 ;;		_colourclick_readG
 10826 ;;		_colourclick_readB
 10827 ;;		_colourclick_readC
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831                           	psect	text47
 10832  005DDA                     __ptext47:
 10833                           	callstack 0
 10834  005DDA                     _I2C_2_Master_Start:
 10835                           	callstack 27
 10836  005DDA                     
 10837                           ;I2C.c: 41:   I2C_2_Master_Idle();
 10838  005DDA  EC3D  F02E         	call	_I2C_2_Master_Idle	;wreg free
 10839  005DDE                     
 10840                           ;I2C.c: 42:   SSP2CON2bits.SEN = 1;
 10841  005DDE  010E               	movlb	14	; () banked
 10842  005DE0  81DA               	bsf	218,0,b	;volatile
 10843  005DE2                     
 10844                           ; BSR set to: 14
 10845  005DE2  0012               	return		;funcret
 10846  005DE4                     __end_of_I2C_2_Master_Start:
 10847                           	callstack 0
 10848                           
 10849 ;; *************** function _I2C_2_Master_RepStart *****************
 10850 ;; Defined at:
 10851 ;;		line 49 in file "I2C.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;		None
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;		None
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      void 
 10858 ;; Registers used:
 10859 ;;		wreg, status,2, status,0, cstack
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10869 ;;Total ram usage:        0 bytes
 10870 ;; Hardware stack levels used: 1
 10871 ;; Hardware stack levels required when called: 1
 10872 ;; This function calls:
 10873 ;;		_I2C_2_Master_Idle
 10874 ;; This function is called by:
 10875 ;;		_colourclick_readR
 10876 ;;		_colourclick_readG
 10877 ;;		_colourclick_readB
 10878 ;;		_colourclick_readC
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           	psect	text48
 10883  005DE4                     __ptext48:
 10884                           	callstack 0
 10885  005DE4                     _I2C_2_Master_RepStart:
 10886                           	callstack 27
 10887  005DE4                     
 10888                           ;I2C.c: 51:   I2C_2_Master_Idle();
 10889  005DE4  EC3D  F02E         	call	_I2C_2_Master_Idle	;wreg free
 10890  005DE8                     
 10891                           ;I2C.c: 52:   SSP2CON2bits.RSEN = 1;
 10892  005DE8  010E               	movlb	14	; () banked
 10893  005DEA  83DA               	bsf	218,1,b	;volatile
 10894  005DEC                     
 10895                           ; BSR set to: 14
 10896  005DEC  0012               	return		;funcret
 10897  005DEE                     __end_of_I2C_2_Master_RepStart:
 10898                           	callstack 0
 10899                           
 10900 ;; *************** function _I2C_2_Master_Read *****************
 10901 ;; Defined at:
 10902 ;;		line 79 in file "I2C.c"
 10903 ;; Parameters:    Size  Location     Type
 10904 ;;  ack             1    wreg     unsigned char 
 10905 ;; Auto vars:     Size  Location     Type
 10906 ;;  ack             1    2[COMRAM] unsigned char 
 10907 ;;  tmp             1    3[COMRAM] unsigned char 
 10908 ;; Return value:  Size  Location     Type
 10909 ;;                  1    wreg      unsigned char 
 10910 ;; Registers used:
 10911 ;;		wreg, status,2, status,0, cstack
 10912 ;; Tracked objects:
 10913 ;;		On entry : 0/0
 10914 ;;		On exit  : 0/0
 10915 ;;		Unchanged: 0/0
 10916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10919 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10920 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10921 ;;Total ram usage:        3 bytes
 10922 ;; Hardware stack levels used: 1
 10923 ;; Hardware stack levels required when called: 1
 10924 ;; This function calls:
 10925 ;;		_I2C_2_Master_Idle
 10926 ;; This function is called by:
 10927 ;;		_colourclick_readR
 10928 ;;		_colourclick_readG
 10929 ;;		_colourclick_readB
 10930 ;;		_colourclick_readC
 10931 ;; This function uses a non-reentrant model
 10932 ;;
 10933                           
 10934                           	psect	text49
 10935  005A5A                     __ptext49:
 10936                           	callstack 0
 10937  005A5A                     _I2C_2_Master_Read:
 10938                           	callstack 27
 10939                           
 10940                           ; BSR set to: 14
 10941                           ;incstack = 0
 10942                           ;I2C_2_Master_Read@ack stored from wreg
 10943  005A5A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 10944  005A5C                     
 10945                           ;I2C.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);I2C.c: 80: {;I2C.c: 81:  
      +                           unsigned char tmp;;I2C.c: 82:   I2C_2_Master_Idle();
 10946  005A5C  EC3D  F02E         	call	_I2C_2_Master_Idle	;wreg free
 10947  005A60                     
 10948                           ;I2C.c: 83:   SSP2CON2bits.RCEN = 1;
 10949  005A60  010E               	movlb	14	; () banked
 10950  005A62  87DA               	bsf	218,3,b	;volatile
 10951                           
 10952                           ;I2C.c: 84:   I2C_2_Master_Idle();
 10953  005A64  EC3D  F02E         	call	_I2C_2_Master_Idle	;wreg free
 10954  005A68                     
 10955                           ;I2C.c: 85:   tmp = SSP2BUF;
 10956  005A68  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 10957                           
 10958                           ;I2C.c: 86:   I2C_2_Master_Idle();
 10959  005A6C  EC3D  F02E         	call	_I2C_2_Master_Idle	;wreg free
 10960  005A70                     
 10961                           ;I2C.c: 87:   SSP2CON2bits.ACKDT = !ack;
 10962  005A70  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 10963  005A72  B4D8               	btfsc	status,2,c
 10964  005A74  EF3E  F02D         	goto	u6071
 10965  005A78  EF42  F02D         	goto	u6070
 10966  005A7C                     u6071:
 10967  005A7C  6A02               	clrf	??_I2C_2_Master_Read^0,c
 10968  005A7E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 10969  005A80  EF43  F02D         	goto	u6088
 10970  005A84                     u6070:
 10971  005A84  6A02               	clrf	??_I2C_2_Master_Read^0,c
 10972  005A86                     u6088:
 10973  005A86  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 10974  005A88  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 10975  005A8A  010E               	movlb	14	; () banked
 10976  005A8C  51DA               	movf	218,w,b	;volatile
 10977  005A8E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 10978  005A90  0BDF               	andlw	-33
 10979  005A92  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 10980  005A94  6FDA               	movwf	218,b	;volatile
 10981  005A96                     
 10982                           ; BSR set to: 14
 10983                           ;I2C.c: 88:   SSP2CON2bits.ACKEN = 1;
 10984  005A96  89DA               	bsf	218,4,b	;volatile
 10985  005A98                     
 10986                           ; BSR set to: 14
 10987                           ;I2C.c: 89:   return tmp;
 10988  005A98  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 10989  005A9A                     
 10990                           ; BSR set to: 14
 10991  005A9A  0012               	return		;funcret
 10992  005A9C                     __end_of_I2C_2_Master_Read:
 10993                           	callstack 0
 10994                           
 10995 ;; *************** function _I2C_2_Master_Idle *****************
 10996 ;; Defined at:
 10997 ;;		line 30 in file "I2C.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;		None
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      void 
 11004 ;; Registers used:
 11005 ;;		wreg, status,2, status,0
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11015 ;;Total ram usage:        1 bytes
 11016 ;; Hardware stack levels used: 1
 11017 ;; This function calls:
 11018 ;;		Nothing
 11019 ;; This function is called by:
 11020 ;;		_I2C_2_Master_Start
 11021 ;;		_I2C_2_Master_RepStart
 11022 ;;		_I2C_2_Master_Stop
 11023 ;;		_I2C_2_Master_Write
 11024 ;;		_I2C_2_Master_Read
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           	psect	text50
 11029  005C7A                     __ptext50:
 11030                           	callstack 0
 11031  005C7A                     _I2C_2_Master_Idle:
 11032                           	callstack 27
 11033  005C7A                     l340:
 11034  005C7A  010E               	movlb	14	; () banked
 11035  005C7C  B5D8               	btfsc	216,2,b	;volatile
 11036  005C7E  EF43  F02E         	goto	u5241
 11037  005C82  EF45  F02E         	goto	u5240
 11038  005C86                     u5241:
 11039  005C86  EF3D  F02E         	goto	l340
 11040  005C8A                     u5240:
 11041  005C8A                     
 11042                           ; BSR set to: 14
 11043  005C8A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11044  005C8E  0E1F               	movlw	31
 11045  005C90  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 11046  005C92  A4D8               	btfss	status,2,c
 11047  005C94  EF4E  F02E         	goto	u5251
 11048  005C98  EF50  F02E         	goto	u5250
 11049  005C9C                     u5251:
 11050  005C9C  EF3D  F02E         	goto	l340
 11051  005CA0                     u5250:
 11052  005CA0                     
 11053                           ; BSR set to: 14
 11054  005CA0  0012               	return		;funcret
 11055  005CA2                     __end_of_I2C_2_Master_Idle:
 11056                           	callstack 0
 11057                           
 11058 ;; *************** function ___xxtofl *****************
 11059 ;; Defined at:
 11060 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;  sign            1    wreg     unsigned char 
 11063 ;;  val             4    0[COMRAM] long 
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;  sign            1    8[COMRAM] unsigned char 
 11066 ;;  arg             4   10[COMRAM] unsigned long 
 11067 ;;  exp             1    9[COMRAM] unsigned char 
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  4    0[COMRAM] unsigned char 
 11070 ;; Registers used:
 11071 ;;		wreg, status,2, status,0
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11078 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11079 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11080 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11081 ;;Total ram usage:       14 bytes
 11082 ;; Hardware stack levels used: 1
 11083 ;; This function calls:
 11084 ;;		Nothing
 11085 ;; This function is called by:
 11086 ;;		_colourcards_readRGBC
 11087 ;;		_colourcards_testing
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           	psect	text51
 11092  004010                     __ptext51:
 11093                           	callstack 0
 11094  004010                     ___xxtofl:
 11095                           	callstack 29
 11096                           
 11097                           ; BSR set to: 14
 11098                           ;incstack = 0
 11099                           ;___xxtofl@sign stored from wreg
 11100  004010  6E09               	movwf	___xxtofl@sign^0,c
 11101  004012  5009               	movf	___xxtofl@sign^0,w,c
 11102  004014  B4D8               	btfsc	status,2,c
 11103  004016  EF0F  F020         	goto	u6591
 11104  00401A  EF11  F020         	goto	u6590
 11105  00401E                     u6591:
 11106  00401E  EF33  F020         	goto	l1281
 11107  004022                     u6590:
 11108  004022  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11109  004024  EF18  F020         	goto	u6600
 11110  004028  EF16  F020         	goto	u6601
 11111  00402C                     u6601:
 11112  00402C  EF33  F020         	goto	l1281
 11113  004030                     u6600:
 11114  004030  C001  F005         	movff	___xxtofl@val,??___xxtofl
 11115  004034  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 11116  004038  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 11117  00403C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 11118  004040  1E05               	comf	??___xxtofl^0,f,c
 11119  004042  1E06               	comf	(??___xxtofl+1)^0,f,c
 11120  004044  1E07               	comf	(??___xxtofl+2)^0,f,c
 11121  004046  1E08               	comf	(??___xxtofl+3)^0,f,c
 11122  004048  2A05               	incf	??___xxtofl^0,f,c
 11123  00404A  0E00               	movlw	0
 11124  00404C  2206               	addwfc	(??___xxtofl+1)^0,f,c
 11125  00404E  2207               	addwfc	(??___xxtofl+2)^0,f,c
 11126  004050  2208               	addwfc	(??___xxtofl+3)^0,f,c
 11127  004052  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 11128  004056  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 11129  00405A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 11130  00405E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 11131  004062  EF3B  F020         	goto	l5534
 11132  004066                     l1281:
 11133  004066  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 11134  00406A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11135  00406E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11136  004072  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11137  004076                     l5534:
 11138  004076  5001               	movf	___xxtofl@val^0,w,c
 11139  004078  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 11140  00407A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 11141  00407C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 11142  00407E  A4D8               	btfss	status,2,c
 11143  004080  EF44  F020         	goto	u6611
 11144  004084  EF46  F020         	goto	u6610
 11145  004088                     u6611:
 11146  004088  EF50  F020         	goto	l5540
 11147  00408C                     u6610:
 11148  00408C  0E00               	movlw	0
 11149  00408E  6E01               	movwf	?___xxtofl^0,c
 11150  004090  0E00               	movlw	0
 11151  004092  6E02               	movwf	(?___xxtofl+1)^0,c
 11152  004094  0E00               	movlw	0
 11153  004096  6E03               	movwf	(?___xxtofl+2)^0,c
 11154  004098  0E00               	movlw	0
 11155  00409A  6E04               	movwf	(?___xxtofl+3)^0,c
 11156  00409C  EFE1  F020         	goto	l1284
 11157  0040A0                     l5540:
 11158  0040A0  0E96               	movlw	150
 11159  0040A2  6E0A               	movwf	___xxtofl@exp^0,c
 11160  0040A4  EF5A  F020         	goto	l5544
 11161  0040A8                     l5542:
 11162  0040A8  2A0A               	incf	___xxtofl@exp^0,f,c
 11163  0040AA  90D8               	bcf	status,0,c
 11164  0040AC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11165  0040AE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11166  0040B0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11167  0040B2  320B               	rrcf	___xxtofl@arg^0,f,c
 11168  0040B4                     l5544:
 11169  0040B4  0E00               	movlw	0
 11170  0040B6  140B               	andwf	___xxtofl@arg^0,w,c
 11171  0040B8  6E05               	movwf	??___xxtofl^0,c
 11172  0040BA  0E00               	movlw	0
 11173  0040BC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11174  0040BE  6E06               	movwf	(??___xxtofl+1)^0,c
 11175  0040C0  0E00               	movlw	0
 11176  0040C2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11177  0040C4  6E07               	movwf	(??___xxtofl+2)^0,c
 11178  0040C6  0EFE               	movlw	254
 11179  0040C8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11180  0040CA  6E08               	movwf	(??___xxtofl+3)^0,c
 11181  0040CC  5005               	movf	??___xxtofl^0,w,c
 11182  0040CE  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11183  0040D0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11184  0040D2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11185  0040D4  A4D8               	btfss	status,2,c
 11186  0040D6  EF6F  F020         	goto	u6621
 11187  0040DA  EF71  F020         	goto	u6620
 11188  0040DE                     u6621:
 11189  0040DE  EF54  F020         	goto	l5542
 11190  0040E2                     u6620:
 11191  0040E2  EF7F  F020         	goto	l1288
 11192  0040E6                     l5546:
 11193  0040E6  2A0A               	incf	___xxtofl@exp^0,f,c
 11194  0040E8  0E01               	movlw	1
 11195  0040EA  260B               	addwf	___xxtofl@arg^0,f,c
 11196  0040EC  0E00               	movlw	0
 11197  0040EE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 11198  0040F0  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 11199  0040F2  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 11200  0040F4  90D8               	bcf	status,0,c
 11201  0040F6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11202  0040F8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11203  0040FA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11204  0040FC  320B               	rrcf	___xxtofl@arg^0,f,c
 11205  0040FE                     l1288:
 11206  0040FE  0E00               	movlw	0
 11207  004100  140B               	andwf	___xxtofl@arg^0,w,c
 11208  004102  6E05               	movwf	??___xxtofl^0,c
 11209  004104  0E00               	movlw	0
 11210  004106  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11211  004108  6E06               	movwf	(??___xxtofl+1)^0,c
 11212  00410A  0E00               	movlw	0
 11213  00410C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11214  00410E  6E07               	movwf	(??___xxtofl+2)^0,c
 11215  004110  0EFF               	movlw	255
 11216  004112  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11217  004114  6E08               	movwf	(??___xxtofl+3)^0,c
 11218  004116  5005               	movf	??___xxtofl^0,w,c
 11219  004118  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11220  00411A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11221  00411C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11222  00411E  A4D8               	btfss	status,2,c
 11223  004120  EF94  F020         	goto	u6631
 11224  004124  EF96  F020         	goto	u6630
 11225  004128                     u6631:
 11226  004128  EF73  F020         	goto	l5546
 11227  00412C                     u6630:
 11228  00412C  EF9E  F020         	goto	l5554
 11229  004130                     l5552:
 11230  004130  060A               	decf	___xxtofl@exp^0,f,c
 11231  004132  90D8               	bcf	status,0,c
 11232  004134  360B               	rlcf	___xxtofl@arg^0,f,c
 11233  004136  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 11234  004138  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 11235  00413A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 11236  00413C                     l5554:
 11237  00413C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 11238  00413E  EFA3  F020         	goto	u6641
 11239  004142  EFA5  F020         	goto	u6640
 11240  004146                     u6641:
 11241  004146  EFAD  F020         	goto	l1295
 11242  00414A                     u6640:
 11243  00414A  0E02               	movlw	2
 11244  00414C  600A               	cpfslt	___xxtofl@exp^0,c
 11245  00414E  EFAB  F020         	goto	u6651
 11246  004152  EFAD  F020         	goto	u6650
 11247  004156                     u6651:
 11248  004156  EF98  F020         	goto	l5552
 11249  00415A                     u6650:
 11250  00415A                     l1295:
 11251  00415A  B00A               	btfsc	___xxtofl@exp^0,0,c
 11252  00415C  EFB2  F020         	goto	u6661
 11253  004160  EFB4  F020         	goto	u6660
 11254  004164                     u6661:
 11255  004164  EFB5  F020         	goto	l5560
 11256  004168                     u6660:
 11257  004168  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 11258  00416A                     l5560:
 11259  00416A  90D8               	bcf	status,0,c
 11260  00416C  320A               	rrcf	___xxtofl@exp^0,f,c
 11261  00416E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 11262  004172  6A06               	clrf	(??___xxtofl+1)^0,c
 11263  004174  6A07               	clrf	(??___xxtofl+2)^0,c
 11264  004176  6A08               	clrf	(??___xxtofl+3)^0,c
 11265  004178  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 11266  00417C  6A07               	clrf	(??___xxtofl+2)^0,c
 11267  00417E  6A06               	clrf	(??___xxtofl+1)^0,c
 11268  004180  6A05               	clrf	??___xxtofl^0,c
 11269  004182  5005               	movf	??___xxtofl^0,w,c
 11270  004184  120B               	iorwf	___xxtofl@arg^0,f,c
 11271  004186  5006               	movf	(??___xxtofl+1)^0,w,c
 11272  004188  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 11273  00418A  5007               	movf	(??___xxtofl+2)^0,w,c
 11274  00418C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 11275  00418E  5008               	movf	(??___xxtofl+3)^0,w,c
 11276  004190  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 11277  004192  5009               	movf	___xxtofl@sign^0,w,c
 11278  004194  B4D8               	btfsc	status,2,c
 11279  004196  EFCF  F020         	goto	u6671
 11280  00419A  EFD1  F020         	goto	u6670
 11281  00419E                     u6671:
 11282  00419E  EFD9  F020         	goto	l5570
 11283  0041A2                     u6670:
 11284  0041A2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11285  0041A4  EFD8  F020         	goto	u6680
 11286  0041A8  EFD6  F020         	goto	u6681
 11287  0041AC                     u6681:
 11288  0041AC  EFD9  F020         	goto	l5570
 11289  0041B0                     u6680:
 11290  0041B0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 11291  0041B2                     l5570:
 11292  0041B2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 11293  0041B6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 11294  0041BA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 11295  0041BE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 11296  0041C2                     l1284:
 11297  0041C2  0012               	return		;funcret
 11298  0041C4                     __end_of___xxtofl:
 11299                           	callstack 0
 11300                           
 11301 ;; *************** function ___flge *****************
 11302 ;; Defined at:
 11303 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  ff1             4   25[COMRAM] unsigned char 
 11306 ;;  ff2             4   29[COMRAM] unsigned char 
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;		None
 11309 ;; Return value:  Size  Location     Type
 11310 ;;		None               void
 11311 ;; Registers used:
 11312 ;;		wreg, status,2, status,0
 11313 ;; Tracked objects:
 11314 ;;		On entry : 0/0
 11315 ;;		On exit  : 0/0
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11318 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11321 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11322 ;;Total ram usage:       12 bytes
 11323 ;; Hardware stack levels used: 1
 11324 ;; This function calls:
 11325 ;;		Nothing
 11326 ;; This function is called by:
 11327 ;;		_colourcards_readRGBC
 11328 ;;		_efgtoa
 11329 ;; This function uses a non-reentrant model
 11330 ;;
 11331                           
 11332                           	psect	text52
 11333  0049B6                     __ptext52:
 11334                           	callstack 0
 11335  0049B6                     ___flge:
 11336                           	callstack 25
 11337  0049B6  0E00               	movlw	0
 11338  0049B8  141A               	andwf	___flge@ff1^0,w,c
 11339  0049BA  6E22               	movwf	??___flge^0,c
 11340  0049BC  0E00               	movlw	0
 11341  0049BE  141B               	andwf	(___flge@ff1+1)^0,w,c
 11342  0049C0  6E23               	movwf	(??___flge+1)^0,c
 11343  0049C2  0E80               	movlw	128
 11344  0049C4  141C               	andwf	(___flge@ff1+2)^0,w,c
 11345  0049C6  6E24               	movwf	(??___flge+2)^0,c
 11346  0049C8  0E7F               	movlw	127
 11347  0049CA  141D               	andwf	(___flge@ff1+3)^0,w,c
 11348  0049CC  6E25               	movwf	(??___flge+3)^0,c
 11349  0049CE  5022               	movf	??___flge^0,w,c
 11350  0049D0  1023               	iorwf	(??___flge+1)^0,w,c
 11351  0049D2  1024               	iorwf	(??___flge+2)^0,w,c
 11352  0049D4  1025               	iorwf	(??___flge+3)^0,w,c
 11353  0049D6  A4D8               	btfss	status,2,c
 11354  0049D8  EFF0  F024         	goto	u4801
 11355  0049DC  EFF2  F024         	goto	u4800
 11356  0049E0                     u4801:
 11357  0049E0  EFFA  F024         	goto	l4562
 11358  0049E4                     u4800:
 11359  0049E4  0E00               	movlw	0
 11360  0049E6  6E1A               	movwf	___flge@ff1^0,c
 11361  0049E8  0E00               	movlw	0
 11362  0049EA  6E1B               	movwf	(___flge@ff1+1)^0,c
 11363  0049EC  0E00               	movlw	0
 11364  0049EE  6E1C               	movwf	(___flge@ff1+2)^0,c
 11365  0049F0  0E00               	movlw	0
 11366  0049F2  6E1D               	movwf	(___flge@ff1+3)^0,c
 11367  0049F4                     l4562:
 11368  0049F4  0E00               	movlw	0
 11369  0049F6  141E               	andwf	___flge@ff2^0,w,c
 11370  0049F8  6E22               	movwf	??___flge^0,c
 11371  0049FA  0E00               	movlw	0
 11372  0049FC  141F               	andwf	(___flge@ff2+1)^0,w,c
 11373  0049FE  6E23               	movwf	(??___flge+1)^0,c
 11374  004A00  0E80               	movlw	128
 11375  004A02  1420               	andwf	(___flge@ff2+2)^0,w,c
 11376  004A04  6E24               	movwf	(??___flge+2)^0,c
 11377  004A06  0E7F               	movlw	127
 11378  004A08  1421               	andwf	(___flge@ff2+3)^0,w,c
 11379  004A0A  6E25               	movwf	(??___flge+3)^0,c
 11380  004A0C  5022               	movf	??___flge^0,w,c
 11381  004A0E  1023               	iorwf	(??___flge+1)^0,w,c
 11382  004A10  1024               	iorwf	(??___flge+2)^0,w,c
 11383  004A12  1025               	iorwf	(??___flge+3)^0,w,c
 11384  004A14  A4D8               	btfss	status,2,c
 11385  004A16  EF0F  F025         	goto	u4811
 11386  004A1A  EF11  F025         	goto	u4810
 11387  004A1E                     u4811:
 11388  004A1E  EF19  F025         	goto	l4566
 11389  004A22                     u4810:
 11390  004A22  0E00               	movlw	0
 11391  004A24  6E1E               	movwf	___flge@ff2^0,c
 11392  004A26  0E00               	movlw	0
 11393  004A28  6E1F               	movwf	(___flge@ff2+1)^0,c
 11394  004A2A  0E00               	movlw	0
 11395  004A2C  6E20               	movwf	(___flge@ff2+2)^0,c
 11396  004A2E  0E00               	movlw	0
 11397  004A30  6E21               	movwf	(___flge@ff2+3)^0,c
 11398  004A32                     l4566:
 11399  004A32  AE1D               	btfss	(___flge@ff1+3)^0,7,c
 11400  004A34  EF1E  F025         	goto	u4821
 11401  004A38  EF20  F025         	goto	u4820
 11402  004A3C                     u4821:
 11403  004A3C  EF29  F025         	goto	l4570
 11404  004A40                     u4820:
 11405  004A40  6C1A               	negf	___flge@ff1^0,c
 11406  004A42  1E1B               	comf	(___flge@ff1+1)^0,f,c
 11407  004A44  B0D8               	btfsc	status,0,c
 11408  004A46  2A1B               	incf	(___flge@ff1+1)^0,f,c
 11409  004A48  1E1C               	comf	(___flge@ff1+2)^0,f,c
 11410  004A4A  B0D8               	btfsc	status,0,c
 11411  004A4C  2A1C               	incf	(___flge@ff1+2)^0,f,c
 11412  004A4E  0E80               	movlw	128
 11413  004A50  561D               	subfwb	(___flge@ff1+3)^0,f,c
 11414  004A52                     l4570:
 11415  004A52  AE21               	btfss	(___flge@ff2+3)^0,7,c
 11416  004A54  EF2E  F025         	goto	u4831
 11417  004A58  EF30  F025         	goto	u4830
 11418  004A5C                     u4831:
 11419  004A5C  EF39  F025         	goto	l891
 11420  004A60                     u4830:
 11421  004A60  6C1E               	negf	___flge@ff2^0,c
 11422  004A62  1E1F               	comf	(___flge@ff2+1)^0,f,c
 11423  004A64  B0D8               	btfsc	status,0,c
 11424  004A66  2A1F               	incf	(___flge@ff2+1)^0,f,c
 11425  004A68  1E20               	comf	(___flge@ff2+2)^0,f,c
 11426  004A6A  B0D8               	btfsc	status,0,c
 11427  004A6C  2A20               	incf	(___flge@ff2+2)^0,f,c
 11428  004A6E  0E80               	movlw	128
 11429  004A70  5621               	subfwb	(___flge@ff2+3)^0,f,c
 11430  004A72                     l891:
 11431  004A72  0E00               	movlw	0
 11432  004A74  1A1A               	xorwf	___flge@ff1^0,f,c
 11433  004A76  0E00               	movlw	0
 11434  004A78  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
 11435  004A7A  0E00               	movlw	0
 11436  004A7C  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
 11437  004A7E  0E80               	movlw	128
 11438  004A80  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
 11439  004A82  0E00               	movlw	0
 11440  004A84  1A1E               	xorwf	___flge@ff2^0,f,c
 11441  004A86  0E00               	movlw	0
 11442  004A88  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
 11443  004A8A  0E00               	movlw	0
 11444  004A8C  1A20               	xorwf	(___flge@ff2+2)^0,f,c
 11445  004A8E  0E80               	movlw	128
 11446  004A90  1A21               	xorwf	(___flge@ff2+3)^0,f,c
 11447  004A92  501E               	movf	___flge@ff2^0,w,c
 11448  004A94  5C1A               	subwf	___flge@ff1^0,w,c
 11449  004A96  501F               	movf	(___flge@ff2+1)^0,w,c
 11450  004A98  581B               	subwfb	(___flge@ff1+1)^0,w,c
 11451  004A9A  5020               	movf	(___flge@ff2+2)^0,w,c
 11452  004A9C  581C               	subwfb	(___flge@ff1+2)^0,w,c
 11453  004A9E  5021               	movf	(___flge@ff2+3)^0,w,c
 11454  004AA0  581D               	subwfb	(___flge@ff1+3)^0,w,c
 11455  004AA2  B0D8               	btfsc	status,0,c
 11456  004AA4  EF56  F025         	goto	u4841
 11457  004AA8  EF58  F025         	goto	u4840
 11458  004AAC                     u4841:
 11459  004AAC  EF5B  F025         	goto	l4576
 11460  004AB0                     u4840:
 11461  004AB0  90D8               	bcf	status,0,c
 11462  004AB2  EF5C  F025         	goto	l896
 11463  004AB6                     l4576:
 11464  004AB6  80D8               	bsf	status,0,c
 11465  004AB8                     l896:
 11466  004AB8  0012               	return		;funcret
 11467  004ABA                     __end_of___flge:
 11468                           	callstack 0
 11469                           
 11470 ;; *************** function ___fldiv *****************
 11471 ;; Defined at:
 11472 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  b               4   14[COMRAM] unsigned char 
 11475 ;;  a               4   18[COMRAM] unsigned char 
 11476 ;; Auto vars:     Size  Location     Type
 11477 ;;  grs             4   33[COMRAM] unsigned long 
 11478 ;;  rem             4   26[COMRAM] unsigned long 
 11479 ;;  new_exp         2   31[COMRAM] short 
 11480 ;;  aexp            1   38[COMRAM] unsigned char 
 11481 ;;  bexp            1   37[COMRAM] unsigned char 
 11482 ;;  sign            1   30[COMRAM] unsigned char 
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  4   14[COMRAM] unsigned char 
 11485 ;; Registers used:
 11486 ;;		wreg, status,2, status,0
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11492 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11493 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11494 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11495 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11496 ;;Total ram usage:       25 bytes
 11497 ;; Hardware stack levels used: 1
 11498 ;; This function calls:
 11499 ;;		Nothing
 11500 ;; This function is called by:
 11501 ;;		_colourcards_readRGBC
 11502 ;;		_colourcards_testing
 11503 ;;		_efgtoa
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text53
 11508  00316A                     __ptext53:
 11509                           	callstack 0
 11510  00316A                     ___fldiv:
 11511                           	callstack 25
 11512  00316A  5012               	movf	(___fldiv@b+3)^0,w,c
 11513  00316C  0B80               	andlw	128
 11514  00316E  6E1F               	movwf	___fldiv@sign^0,c
 11515  003170  5012               	movf	(___fldiv@b+3)^0,w,c
 11516  003172  2412               	addwf	(___fldiv@b+3)^0,w,c
 11517  003174  6E26               	movwf	___fldiv@bexp^0,c
 11518  003176  AE11               	btfss	(___fldiv@b+2)^0,7,c
 11519  003178  EFC0  F018         	goto	u4231
 11520  00317C  EFC2  F018         	goto	u4230
 11521  003180                     u4231:
 11522  003180  EFC3  F018         	goto	l4194
 11523  003184                     u4230:
 11524  003184  8026               	bsf	___fldiv@bexp^0,0,c
 11525  003186                     l4194:
 11526  003186  5026               	movf	___fldiv@bexp^0,w,c
 11527  003188  B4D8               	btfsc	status,2,c
 11528  00318A  EFC9  F018         	goto	u4241
 11529  00318E  EFCB  F018         	goto	u4240
 11530  003192                     u4241:
 11531  003192  EFE0  F018         	goto	l4204
 11532  003196                     u4240:
 11533  003196  2826               	incf	___fldiv@bexp^0,w,c
 11534  003198  A4D8               	btfss	status,2,c
 11535  00319A  EFD1  F018         	goto	u4251
 11536  00319E  EFD3  F018         	goto	u4250
 11537  0031A2                     u4251:
 11538  0031A2  EFDB  F018         	goto	l4200
 11539  0031A6                     u4250:
 11540  0031A6  0E00               	movlw	0
 11541  0031A8  6E0F               	movwf	___fldiv@b^0,c
 11542  0031AA  0E00               	movlw	0
 11543  0031AC  6E10               	movwf	(___fldiv@b+1)^0,c
 11544  0031AE  0E00               	movlw	0
 11545  0031B0  6E11               	movwf	(___fldiv@b+2)^0,c
 11546  0031B2  0E00               	movlw	0
 11547  0031B4  6E12               	movwf	(___fldiv@b+3)^0,c
 11548  0031B6                     l4200:
 11549  0031B6  8E11               	bsf	(___fldiv@b+2)^0,7,c
 11550  0031B8  0E00               	movlw	0
 11551  0031BA  6E12               	movwf	(___fldiv@b+3)^0,c
 11552  0031BC  EFE8  F018         	goto	l4206
 11553  0031C0                     l4204:
 11554  0031C0  0E00               	movlw	0
 11555  0031C2  6E0F               	movwf	___fldiv@b^0,c
 11556  0031C4  0E00               	movlw	0
 11557  0031C6  6E10               	movwf	(___fldiv@b+1)^0,c
 11558  0031C8  0E00               	movlw	0
 11559  0031CA  6E11               	movwf	(___fldiv@b+2)^0,c
 11560  0031CC  0E00               	movlw	0
 11561  0031CE  6E12               	movwf	(___fldiv@b+3)^0,c
 11562  0031D0                     l4206:
 11563  0031D0  5016               	movf	(___fldiv@a+3)^0,w,c
 11564  0031D2  0B80               	andlw	128
 11565  0031D4  1A1F               	xorwf	___fldiv@sign^0,f,c
 11566  0031D6  5016               	movf	(___fldiv@a+3)^0,w,c
 11567  0031D8  2416               	addwf	(___fldiv@a+3)^0,w,c
 11568  0031DA  6E27               	movwf	___fldiv@aexp^0,c
 11569  0031DC  AE15               	btfss	(___fldiv@a+2)^0,7,c
 11570  0031DE  EFF3  F018         	goto	u4261
 11571  0031E2  EFF5  F018         	goto	u4260
 11572  0031E6                     u4261:
 11573  0031E6  EFF6  F018         	goto	l4214
 11574  0031EA                     u4260:
 11575  0031EA  8027               	bsf	___fldiv@aexp^0,0,c
 11576  0031EC                     l4214:
 11577  0031EC  5027               	movf	___fldiv@aexp^0,w,c
 11578  0031EE  B4D8               	btfsc	status,2,c
 11579  0031F0  EFFC  F018         	goto	u4271
 11580  0031F4  EFFE  F018         	goto	u4270
 11581  0031F8                     u4271:
 11582  0031F8  EF13  F019         	goto	l4224
 11583  0031FC                     u4270:
 11584  0031FC  2827               	incf	___fldiv@aexp^0,w,c
 11585  0031FE  A4D8               	btfss	status,2,c
 11586  003200  EF04  F019         	goto	u4281
 11587  003204  EF06  F019         	goto	u4280
 11588  003208                     u4281:
 11589  003208  EF0E  F019         	goto	l4220
 11590  00320C                     u4280:
 11591  00320C  0E00               	movlw	0
 11592  00320E  6E13               	movwf	___fldiv@a^0,c
 11593  003210  0E00               	movlw	0
 11594  003212  6E14               	movwf	(___fldiv@a+1)^0,c
 11595  003214  0E00               	movlw	0
 11596  003216  6E15               	movwf	(___fldiv@a+2)^0,c
 11597  003218  0E00               	movlw	0
 11598  00321A  6E16               	movwf	(___fldiv@a+3)^0,c
 11599  00321C                     l4220:
 11600  00321C  8E15               	bsf	(___fldiv@a+2)^0,7,c
 11601  00321E  0E00               	movlw	0
 11602  003220  6E16               	movwf	(___fldiv@a+3)^0,c
 11603  003222  EF1B  F019         	goto	l4226
 11604  003226                     l4224:
 11605  003226  0E00               	movlw	0
 11606  003228  6E13               	movwf	___fldiv@a^0,c
 11607  00322A  0E00               	movlw	0
 11608  00322C  6E14               	movwf	(___fldiv@a+1)^0,c
 11609  00322E  0E00               	movlw	0
 11610  003230  6E15               	movwf	(___fldiv@a+2)^0,c
 11611  003232  0E00               	movlw	0
 11612  003234  6E16               	movwf	(___fldiv@a+3)^0,c
 11613  003236                     l4226:
 11614  003236  5013               	movf	___fldiv@a^0,w,c
 11615  003238  1014               	iorwf	(___fldiv@a+1)^0,w,c
 11616  00323A  1015               	iorwf	(___fldiv@a+2)^0,w,c
 11617  00323C  1016               	iorwf	(___fldiv@a+3)^0,w,c
 11618  00323E  A4D8               	btfss	status,2,c
 11619  003240  EF24  F019         	goto	u4291
 11620  003244  EF26  F019         	goto	u4290
 11621  003248                     u4291:
 11622  003248  EF3E  F019         	goto	l4238
 11623  00324C                     u4290:
 11624  00324C  0E00               	movlw	0
 11625  00324E  6E0F               	movwf	___fldiv@b^0,c
 11626  003250  0E00               	movlw	0
 11627  003252  6E10               	movwf	(___fldiv@b+1)^0,c
 11628  003254  0E00               	movlw	0
 11629  003256  6E11               	movwf	(___fldiv@b+2)^0,c
 11630  003258  0E00               	movlw	0
 11631  00325A  6E12               	movwf	(___fldiv@b+3)^0,c
 11632  00325C  0E80               	movlw	128
 11633  00325E  1211               	iorwf	(___fldiv@b+2)^0,f,c
 11634  003260  0E7F               	movlw	127
 11635  003262  1212               	iorwf	(___fldiv@b+3)^0,f,c
 11636  003264                     l4232:
 11637  003264  501F               	movf	___fldiv@sign^0,w,c
 11638  003266  1212               	iorwf	(___fldiv@b+3)^0,f,c
 11639  003268  C00F  F00F         	movff	___fldiv@b,?___fldiv
 11640  00326C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 11641  003270  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 11642  003274  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 11643  003278  EF81  F01A         	goto	l1208
 11644  00327C                     l4238:
 11645  00327C  5026               	movf	___fldiv@bexp^0,w,c
 11646  00327E  A4D8               	btfss	status,2,c
 11647  003280  EF44  F019         	goto	u4301
 11648  003284  EF46  F019         	goto	u4300
 11649  003288                     u4301:
 11650  003288  EF50  F019         	goto	l4246
 11651  00328C                     u4300:
 11652  00328C  0E00               	movlw	0
 11653  00328E  6E0F               	movwf	?___fldiv^0,c
 11654  003290  0E00               	movlw	0
 11655  003292  6E10               	movwf	(?___fldiv+1)^0,c
 11656  003294  0E00               	movlw	0
 11657  003296  6E11               	movwf	(?___fldiv+2)^0,c
 11658  003298  0E00               	movlw	0
 11659  00329A  6E12               	movwf	(?___fldiv+3)^0,c
 11660  00329C  EF81  F01A         	goto	l1208
 11661  0032A0                     l4246:
 11662  0032A0  5027               	movf	___fldiv@aexp^0,w,c
 11663  0032A2  C026  F017         	movff	___fldiv@bexp,??___fldiv
 11664  0032A6  6A18               	clrf	(??___fldiv+1)^0,c
 11665  0032A8  5E17               	subwf	??___fldiv^0,f,c
 11666  0032AA  0E00               	movlw	0
 11667  0032AC  5A18               	subwfb	(??___fldiv+1)^0,f,c
 11668  0032AE  0E7F               	movlw	127
 11669  0032B0  2417               	addwf	??___fldiv^0,w,c
 11670  0032B2  6E20               	movwf	___fldiv@new_exp^0,c
 11671  0032B4  0E00               	movlw	0
 11672  0032B6  2018               	addwfc	(??___fldiv+1)^0,w,c
 11673  0032B8  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11674  0032BA  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 11675  0032BE  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 11676  0032C2  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 11677  0032C6  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 11678  0032CA  0E00               	movlw	0
 11679  0032CC  6E0F               	movwf	___fldiv@b^0,c
 11680  0032CE  0E00               	movlw	0
 11681  0032D0  6E10               	movwf	(___fldiv@b+1)^0,c
 11682  0032D2  0E00               	movlw	0
 11683  0032D4  6E11               	movwf	(___fldiv@b+2)^0,c
 11684  0032D6  0E00               	movlw	0
 11685  0032D8  6E12               	movwf	(___fldiv@b+3)^0,c
 11686  0032DA  0E00               	movlw	0
 11687  0032DC  6E22               	movwf	___fldiv@grs^0,c
 11688  0032DE  0E00               	movlw	0
 11689  0032E0  6E23               	movwf	(___fldiv@grs+1)^0,c
 11690  0032E2  0E00               	movlw	0
 11691  0032E4  6E24               	movwf	(___fldiv@grs+2)^0,c
 11692  0032E6  0E00               	movlw	0
 11693  0032E8  6E25               	movwf	(___fldiv@grs+3)^0,c
 11694  0032EA  0E00               	movlw	0
 11695  0032EC  6E27               	movwf	___fldiv@aexp^0,c
 11696  0032EE  EFB1  F019         	goto	l1210
 11697  0032F2                     l4256:
 11698  0032F2  5027               	movf	___fldiv@aexp^0,w,c
 11699  0032F4  B4D8               	btfsc	status,2,c
 11700  0032F6  EF7F  F019         	goto	u4311
 11701  0032FA  EF81  F019         	goto	u4310
 11702  0032FE                     u4311:
 11703  0032FE  EF98  F019         	goto	l4264
 11704  003302                     u4310:
 11705  003302  90D8               	bcf	status,0,c
 11706  003304  361B               	rlcf	___fldiv@rem^0,f,c
 11707  003306  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 11708  003308  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 11709  00330A  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 11710  00330C  90D8               	bcf	status,0,c
 11711  00330E  360F               	rlcf	___fldiv@b^0,f,c
 11712  003310  3610               	rlcf	(___fldiv@b+1)^0,f,c
 11713  003312  3611               	rlcf	(___fldiv@b+2)^0,f,c
 11714  003314  3612               	rlcf	(___fldiv@b+3)^0,f,c
 11715  003316  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11716  003318  EF90  F019         	goto	u4321
 11717  00331C  EF92  F019         	goto	u4320
 11718  003320                     u4321:
 11719  003320  EF93  F019         	goto	l1213
 11720  003324                     u4320:
 11721  003324  800F               	bsf	___fldiv@b^0,0,c
 11722  003326                     l1213:
 11723  003326  90D8               	bcf	status,0,c
 11724  003328  3622               	rlcf	___fldiv@grs^0,f,c
 11725  00332A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 11726  00332C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 11727  00332E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 11728  003330                     l4264:
 11729  003330  5013               	movf	___fldiv@a^0,w,c
 11730  003332  5C1B               	subwf	___fldiv@rem^0,w,c
 11731  003334  5014               	movf	(___fldiv@a+1)^0,w,c
 11732  003336  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 11733  003338  5015               	movf	(___fldiv@a+2)^0,w,c
 11734  00333A  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 11735  00333C  5016               	movf	(___fldiv@a+3)^0,w,c
 11736  00333E  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 11737  003340  A0D8               	btfss	status,0,c
 11738  003342  EFA5  F019         	goto	u4331
 11739  003346  EFA7  F019         	goto	u4330
 11740  00334A                     u4331:
 11741  00334A  EFB0  F019         	goto	l4270
 11742  00334E                     u4330:
 11743  00334E  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 11744  003350  5013               	movf	___fldiv@a^0,w,c
 11745  003352  5E1B               	subwf	___fldiv@rem^0,f,c
 11746  003354  5014               	movf	(___fldiv@a+1)^0,w,c
 11747  003356  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 11748  003358  5015               	movf	(___fldiv@a+2)^0,w,c
 11749  00335A  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 11750  00335C  5016               	movf	(___fldiv@a+3)^0,w,c
 11751  00335E  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 11752  003360                     l4270:
 11753  003360  2A27               	incf	___fldiv@aexp^0,f,c
 11754  003362                     l1210:
 11755  003362  0E19               	movlw	25
 11756  003364  6427               	cpfsgt	___fldiv@aexp^0,c
 11757  003366  EFB7  F019         	goto	u4341
 11758  00336A  EFB9  F019         	goto	u4340
 11759  00336E                     u4341:
 11760  00336E  EF79  F019         	goto	l4256
 11761  003372                     u4340:
 11762  003372  501B               	movf	___fldiv@rem^0,w,c
 11763  003374  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 11764  003376  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 11765  003378  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 11766  00337A  B4D8               	btfsc	status,2,c
 11767  00337C  EFC2  F019         	goto	u4351
 11768  003380  EFC4  F019         	goto	u4350
 11769  003384                     u4351:
 11770  003384  EFDC  F019         	goto	l4282
 11771  003388                     u4350:
 11772  003388  8022               	bsf	___fldiv@grs^0,0,c
 11773  00338A  EFDC  F019         	goto	l4282
 11774  00338E                     l4276:
 11775  00338E  90D8               	bcf	status,0,c
 11776  003390  360F               	rlcf	___fldiv@b^0,f,c
 11777  003392  3610               	rlcf	(___fldiv@b+1)^0,f,c
 11778  003394  3611               	rlcf	(___fldiv@b+2)^0,f,c
 11779  003396  3612               	rlcf	(___fldiv@b+3)^0,f,c
 11780  003398  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11781  00339A  EFD1  F019         	goto	u4361
 11782  00339E  EFD3  F019         	goto	u4360
 11783  0033A2                     u4361:
 11784  0033A2  EFD4  F019         	goto	l1219
 11785  0033A6                     u4360:
 11786  0033A6  800F               	bsf	___fldiv@b^0,0,c
 11787  0033A8                     l1219:
 11788  0033A8  90D8               	bcf	status,0,c
 11789  0033AA  3622               	rlcf	___fldiv@grs^0,f,c
 11790  0033AC  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 11791  0033AE  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 11792  0033B0  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 11793  0033B2  0620               	decf	___fldiv@new_exp^0,f,c
 11794  0033B4  A0D8               	btfss	status,0,c
 11795  0033B6  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 11796  0033B8                     l4282:
 11797  0033B8  AE11               	btfss	(___fldiv@b+2)^0,7,c
 11798  0033BA  EFE1  F019         	goto	u4371
 11799  0033BE  EFE3  F019         	goto	u4370
 11800  0033C2                     u4371:
 11801  0033C2  EFC7  F019         	goto	l4276
 11802  0033C6                     u4370:
 11803  0033C6  0E00               	movlw	0
 11804  0033C8  6E27               	movwf	___fldiv@aexp^0,c
 11805  0033CA  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11806  0033CC  EFEA  F019         	goto	u4381
 11807  0033D0  EFEC  F019         	goto	u4380
 11808  0033D4                     u4381:
 11809  0033D4  EF10  F01A         	goto	l1221
 11810  0033D8                     u4380:
 11811  0033D8  0EFF               	movlw	255
 11812  0033DA  1422               	andwf	___fldiv@grs^0,w,c
 11813  0033DC  6E17               	movwf	??___fldiv^0,c
 11814  0033DE  0EFF               	movlw	255
 11815  0033E0  1423               	andwf	(___fldiv@grs+1)^0,w,c
 11816  0033E2  6E18               	movwf	(??___fldiv+1)^0,c
 11817  0033E4  0EFF               	movlw	255
 11818  0033E6  1424               	andwf	(___fldiv@grs+2)^0,w,c
 11819  0033E8  6E19               	movwf	(??___fldiv+2)^0,c
 11820  0033EA  0E7F               	movlw	127
 11821  0033EC  1425               	andwf	(___fldiv@grs+3)^0,w,c
 11822  0033EE  6E1A               	movwf	(??___fldiv+3)^0,c
 11823  0033F0  5017               	movf	??___fldiv^0,w,c
 11824  0033F2  1018               	iorwf	(??___fldiv+1)^0,w,c
 11825  0033F4  1019               	iorwf	(??___fldiv+2)^0,w,c
 11826  0033F6  101A               	iorwf	(??___fldiv+3)^0,w,c
 11827  0033F8  B4D8               	btfsc	status,2,c
 11828  0033FA  EF01  F01A         	goto	u4391
 11829  0033FE  EF03  F01A         	goto	u4390
 11830  003402                     u4391:
 11831  003402  EF07  F01A         	goto	l1222
 11832  003406                     u4390:
 11833  003406                     l4290:
 11834  003406  0E01               	movlw	1
 11835  003408  6E27               	movwf	___fldiv@aexp^0,c
 11836  00340A  EF10  F01A         	goto	l1221
 11837  00340E                     l1222:
 11838  00340E  A00F               	btfss	___fldiv@b^0,0,c
 11839  003410  EF0C  F01A         	goto	u4401
 11840  003414  EF0E  F01A         	goto	u4400
 11841  003418                     u4401:
 11842  003418  EF10  F01A         	goto	l1221
 11843  00341C                     u4400:
 11844  00341C  EF03  F01A         	goto	l4290
 11845  003420                     l1221:
 11846  003420  5027               	movf	___fldiv@aexp^0,w,c
 11847  003422  B4D8               	btfsc	status,2,c
 11848  003424  EF16  F01A         	goto	u4411
 11849  003428  EF18  F01A         	goto	u4410
 11850  00342C                     u4411:
 11851  00342C  EF3C  F01A         	goto	l4302
 11852  003430                     u4410:
 11853  003430  0E01               	movlw	1
 11854  003432  260F               	addwf	___fldiv@b^0,f,c
 11855  003434  0E00               	movlw	0
 11856  003436  2210               	addwfc	(___fldiv@b+1)^0,f,c
 11857  003438  2211               	addwfc	(___fldiv@b+2)^0,f,c
 11858  00343A  2212               	addwfc	(___fldiv@b+3)^0,f,c
 11859  00343C  A012               	btfss	(___fldiv@b+3)^0,0,c
 11860  00343E  EF23  F01A         	goto	u4421
 11861  003442  EF25  F01A         	goto	u4420
 11862  003446                     u4421:
 11863  003446  EF3C  F01A         	goto	l4302
 11864  00344A                     u4420:
 11865  00344A  C00F  F017         	movff	___fldiv@b,??___fldiv
 11866  00344E  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 11867  003452  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 11868  003456  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 11869  00345A  341A               	rlcf	(??___fldiv+3)^0,w,c
 11870  00345C  321A               	rrcf	(??___fldiv+3)^0,f,c
 11871  00345E  3219               	rrcf	(??___fldiv+2)^0,f,c
 11872  003460  3218               	rrcf	(??___fldiv+1)^0,f,c
 11873  003462  3217               	rrcf	??___fldiv^0,f,c
 11874  003464  C017  F00F         	movff	??___fldiv,___fldiv@b
 11875  003468  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 11876  00346C  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 11877  003470  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 11878  003474  4A20               	infsnz	___fldiv@new_exp^0,f,c
 11879  003476  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 11880  003478                     l4302:
 11881  003478  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11882  00347A  EF47  F01A         	goto	u4431
 11883  00347E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 11884  003480  E108               	bnz	u4430
 11885  003482  2820               	incf	___fldiv@new_exp^0,w,c
 11886  003484  A0D8               	btfss	status,0,c
 11887  003486  EF47  F01A         	goto	u4431
 11888  00348A  EF49  F01A         	goto	u4430
 11889  00348E                     u4431:
 11890  00348E  EF54  F01A         	goto	l4306
 11891  003492                     u4430:
 11892  003492  0E00               	movlw	0
 11893  003494  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11894  003496  6820               	setf	___fldiv@new_exp^0,c
 11895  003498  0E00               	movlw	0
 11896  00349A  6E0F               	movwf	___fldiv@b^0,c
 11897  00349C  0E00               	movlw	0
 11898  00349E  6E10               	movwf	(___fldiv@b+1)^0,c
 11899  0034A0  0E00               	movlw	0
 11900  0034A2  6E11               	movwf	(___fldiv@b+2)^0,c
 11901  0034A4  0E00               	movlw	0
 11902  0034A6  6E12               	movwf	(___fldiv@b+3)^0,c
 11903  0034A8                     l4306:
 11904  0034A8  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11905  0034AA  EF61  F01A         	goto	u4440
 11906  0034AE  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 11907  0034B0  E106               	bnz	u4441
 11908  0034B2  0420               	decf	___fldiv@new_exp^0,w,c
 11909  0034B4  B0D8               	btfsc	status,0,c
 11910  0034B6  EF5F  F01A         	goto	u4441
 11911  0034BA  EF61  F01A         	goto	u4440
 11912  0034BE                     u4441:
 11913  0034BE  EF6F  F01A         	goto	l4310
 11914  0034C2                     u4440:
 11915  0034C2  0E00               	movlw	0
 11916  0034C4  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11917  0034C6  0E00               	movlw	0
 11918  0034C8  6E20               	movwf	___fldiv@new_exp^0,c
 11919  0034CA  0E00               	movlw	0
 11920  0034CC  6E0F               	movwf	___fldiv@b^0,c
 11921  0034CE  0E00               	movlw	0
 11922  0034D0  6E10               	movwf	(___fldiv@b+1)^0,c
 11923  0034D2  0E00               	movlw	0
 11924  0034D4  6E11               	movwf	(___fldiv@b+2)^0,c
 11925  0034D6  0E00               	movlw	0
 11926  0034D8  6E12               	movwf	(___fldiv@b+3)^0,c
 11927  0034DA  0E00               	movlw	0
 11928  0034DC  6E1F               	movwf	___fldiv@sign^0,c
 11929  0034DE                     l4310:
 11930  0034DE  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 11931  0034E2  A026               	btfss	___fldiv@bexp^0,0,c
 11932  0034E4  EF76  F01A         	goto	u4451
 11933  0034E8  EF78  F01A         	goto	u4450
 11934  0034EC                     u4451:
 11935  0034EC  EF7B  F01A         	goto	l4316
 11936  0034F0                     u4450:
 11937  0034F0  8E11               	bsf	(___fldiv@b+2)^0,7,c
 11938  0034F2  EF7C  F01A         	goto	l4318
 11939  0034F6                     l4316:
 11940  0034F6  9E11               	bcf	(___fldiv@b+2)^0,7,c
 11941  0034F8                     l4318:
 11942  0034F8  90D8               	bcf	status,0,c
 11943  0034FA  3026               	rrcf	___fldiv@bexp^0,w,c
 11944  0034FC  6E12               	movwf	(___fldiv@b+3)^0,c
 11945  0034FE  EF32  F019         	goto	l4232
 11946  003502                     l1208:
 11947  003502  0012               	return		;funcret
 11948  003504                     __end_of___fldiv:
 11949                           	callstack 0
 11950                           
 11951 ;; *************** function _checkbatterylevel *****************
 11952 ;; Defined at:
 11953 ;;		line 73 in file "DC_motors.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;		None
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;  batterylevel    1    1[COMRAM] unsigned char 
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  1    wreg      void 
 11960 ;; Registers used:
 11961 ;;		wreg, status,2, status,0, cstack
 11962 ;; Tracked objects:
 11963 ;;		On entry : 0/0
 11964 ;;		On exit  : 0/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11970 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11971 ;;Total ram usage:        1 bytes
 11972 ;; Hardware stack levels used: 1
 11973 ;; Hardware stack levels required when called: 1
 11974 ;; This function calls:
 11975 ;;		_ADC_getval
 11976 ;; This function is called by:
 11977 ;;		_main
 11978 ;; This function uses a non-reentrant model
 11979 ;;
 11980                           
 11981                           	psect	text54
 11982  005D0A                     __ptext54:
 11983                           	callstack 0
 11984  005D0A                     _checkbatterylevel:
 11985                           	callstack 29
 11986  005D0A                     
 11987                           ;DC_motors.c: 75:     unsigned char batterylevel;;DC_motors.c: 76:     batterylevel = AD
      +                          C_getval();
 11988  005D0A  ECBE  F02E         	call	_ADC_getval	;wreg free
 11989  005D0E  6E02               	movwf	checkbatterylevel@batterylevel^0,c
 11990  005D10                     
 11991                           ;DC_motors.c: 77:     if (batterylevel<200) {
 11992  005D10  0EC8               	movlw	200
 11993  005D12  6002               	cpfslt	checkbatterylevel@batterylevel^0,c
 11994  005D14  EF8E  F02E         	goto	u6691
 11995  005D18  EF90  F02E         	goto	u6690
 11996  005D1C                     u6691:
 11997  005D1C  EF93  F02E         	goto	l517
 11998  005D20                     u6690:
 11999  005D20                     
 12000                           ;DC_motors.c: 78:         LATDbits.LATD7 = 1;
 12001  005D20  8E7C               	bsf	124,7,c	;volatile
 12002                           
 12003                           ;DC_motors.c: 79:     } else {
 12004  005D22  EF94  F02E         	goto	l519
 12005  005D26                     l517:
 12006                           
 12007                           ;DC_motors.c: 80:         LATDbits.LATD7 = 0;
 12008  005D26  9E7C               	bcf	124,7,c	;volatile
 12009  005D28                     l519:
 12010  005D28  0012               	return		;funcret
 12011  005D2A                     __end_of_checkbatterylevel:
 12012                           	callstack 0
 12013                           
 12014 ;; *************** function _ADC_getval *****************
 12015 ;; Defined at:
 12016 ;;		line 26 in file "ADC.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;		None
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;  tmpval          1    0[COMRAM] unsigned char 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  1    wreg      unsigned char 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12034 ;;Total ram usage:        1 bytes
 12035 ;; Hardware stack levels used: 1
 12036 ;; This function calls:
 12037 ;;		Nothing
 12038 ;; This function is called by:
 12039 ;;		_checkbatterylevel
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           	psect	text55
 12044  005D7C                     __ptext55:
 12045                           	callstack 0
 12046  005D7C                     _ADC_getval:
 12047                           	callstack 29
 12048  005D7C                     
 12049                           ;ADC.c: 27:     unsigned char tmpval;;ADC.c: 29:     ADCON0bits.GO = 1;
 12050  005D7C  8060               	bsf	96,0,c	;volatile
 12051  005D7E                     l263:
 12052  005D7E  B060               	btfsc	96,0,c	;volatile
 12053  005D80  EFC4  F02E         	goto	u6551
 12054  005D84  EFC6  F02E         	goto	u6550
 12055  005D88                     u6551:
 12056  005D88  EFBF  F02E         	goto	l263
 12057  005D8C                     u6550:
 12058  005D8C                     
 12059                           ;ADC.c: 31:     tmpval = ADRESH;
 12060  005D8C  CF64 F001          	movff	3940,ADC_getval@tmpval	;volatile
 12061  005D90                     
 12062                           ;ADC.c: 34:     return tmpval;
 12063  005D90  5001               	movf	ADC_getval@tmpval^0,w,c
 12064  005D92  0012               	return		;funcret
 12065  005D94                     __end_of_ADC_getval:
 12066                           	callstack 0
 12067                           
 12068 ;; *************** function _USART4_init *****************
 12069 ;; Defined at:
 12070 ;;		line 7 in file "serial_comm.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;		None
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;		None
 12075 ;; Return value:  Size  Location     Type
 12076 ;;                  1    wreg      void 
 12077 ;; Registers used:
 12078 ;;		wreg, status,2
 12079 ;; Tracked objects:
 12080 ;;		On entry : 0/0
 12081 ;;		On exit  : 0/0
 12082 ;;		Unchanged: 0/0
 12083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12088 ;;Total ram usage:        0 bytes
 12089 ;; Hardware stack levels used: 1
 12090 ;; This function calls:
 12091 ;;		Nothing
 12092 ;; This function is called by:
 12093 ;;		_main
 12094 ;; This function uses a non-reentrant model
 12095 ;;
 12096                           
 12097                           	psect	text56
 12098  005D2A                     __ptext56:
 12099                           	callstack 0
 12100  005D2A                     _USART4_init:
 12101                           	callstack 30
 12102  005D2A                     
 12103                           ;serial_comm.c: 10:     RC0PPS = 0x12;
 12104  005D2A  0E12               	movlw	18
 12105  005D2C  010E               	movlb	14	; () banked
 12106  005D2E  6F62               	movwf	98,b	;volatile
 12107                           
 12108                           ;serial_comm.c: 11:     RX4PPS = 0x11;
 12109  005D30  0E11               	movlw	17
 12110  005D32  6F15               	movwf	21,b	;volatile
 12111  005D34                     
 12112                           ; BSR set to: 14
 12113                           ;serial_comm.c: 12:     TRISCbits.TRISC1 = 1;
 12114  005D34  8283               	bsf	131,1,c	;volatile
 12115  005D36                     
 12116                           ; BSR set to: 14
 12117                           ;serial_comm.c: 14:     BAUD4CONbits.BRG16 = 0;
 12118  005D36  97E9               	bcf	233,3,b	;volatile
 12119  005D38                     
 12120                           ; BSR set to: 14
 12121                           ;serial_comm.c: 15:     TX4STAbits.BRGH = 0;
 12122  005D38  95E8               	bcf	232,2,b	;volatile
 12123                           
 12124                           ;serial_comm.c: 16:     SP4BRGL = 51;
 12125  005D3A  0E33               	movlw	51
 12126  005D3C  6FE5               	movwf	229,b	;volatile
 12127                           
 12128                           ;serial_comm.c: 17:     SP4BRGH = 0;
 12129  005D3E  0E00               	movlw	0
 12130  005D40  6FE6               	movwf	230,b	;volatile
 12131  005D42                     
 12132                           ; BSR set to: 14
 12133                           ;serial_comm.c: 19:     RC4STAbits.CREN = 1;
 12134  005D42  89E7               	bsf	231,4,b	;volatile
 12135  005D44                     
 12136                           ; BSR set to: 14
 12137                           ;serial_comm.c: 20:     TX4STAbits.TXEN = 1;
 12138  005D44  8BE8               	bsf	232,5,b	;volatile
 12139  005D46                     
 12140                           ; BSR set to: 14
 12141                           ;serial_comm.c: 21:     RC4STAbits.SPEN = 1;
 12142  005D46  8FE7               	bsf	231,7,b	;volatile
 12143  005D48                     
 12144                           ; BSR set to: 14
 12145  005D48  0012               	return		;funcret
 12146  005D4A                     __end_of_USART4_init:
 12147                           	callstack 0
 12148                           
 12149 ;; *************** function _DCmotors_testing *****************
 12150 ;; Defined at:
 12151 ;;		line 281 in file "DC_motors.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;  mL              2   39[COMRAM] PTR struct .
 12154 ;;		 -> main@motorL(9), 
 12155 ;;  mR              2   41[COMRAM] PTR struct .
 12156 ;;		 -> main@motorR(9), 
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;		None
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  1    wreg      void 
 12161 ;; Registers used:
 12162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12168 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12171 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12172 ;;Total ram usage:        6 bytes
 12173 ;; Hardware stack levels used: 1
 12174 ;; Hardware stack levels required when called: 4
 12175 ;; This function calls:
 12176 ;;		_forward
 12177 ;;		_reverse
 12178 ;;		_stop
 12179 ;;		_turnleft
 12180 ;;		_turnright
 12181 ;; This function is called by:
 12182 ;;		_main
 12183 ;; This function uses a non-reentrant model
 12184 ;;
 12185                           
 12186                           	psect	text57
 12187  0037E8                     __ptext57:
 12188                           	callstack 0
 12189  0037E8                     _DCmotors_testing:
 12190                           	callstack 26
 12191  0037E8                     
 12192                           ;DC_motors.c: 281: void DCmotors_testing(DC_motor *mL, DC_motor *mR);DC_motors.c: 282: {
      +                          ;DC_motors.c: 283:     INTCONbits.GIE = 0;
 12193  0037E8  9EF2               	bcf	242,7,c	;volatile
 12194  0037EA                     
 12195                           ;DC_motors.c: 285:     forward(mL, mR);
 12196  0037EA  C028  F01A         	movff	DCmotors_testing@mL,forward@mL
 12197  0037EE  C029  F01B         	movff	DCmotors_testing@mL+1,forward@mL+1
 12198  0037F2  C02A  F01C         	movff	DCmotors_testing@mR,forward@mR
 12199  0037F6  C02B  F01D         	movff	DCmotors_testing@mR+1,forward@mR+1
 12200  0037FA  EC31  F02A         	call	_forward	;wreg free
 12201                           
 12202                           ;DC_motors.c: 286:     stop(mL, mR);
 12203  0037FE  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12204  003802  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12205  003806  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12206  00380A  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12207  00380E  EC7E  F02A         	call	_stop	;wreg free
 12208  003812                     
 12209                           ;DC_motors.c: 287:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12210  003812  0E52               	movlw	82
 12211  003814  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12212  003816  0E2B               	movlw	43
 12213  003818  6E2C               	movwf	??_DCmotors_testing^0,c
 12214  00381A  0E00               	movlw	0
 12215  00381C                     u7277:
 12216  00381C  2EE8               	decfsz	wreg,f,c
 12217  00381E  D7FE               	bra	u7277
 12218  003820  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12219  003822  D7FC               	bra	u7277
 12220  003824  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12221  003826  D7FA               	bra	u7277
 12222  003828  D000               	nop2	
 12223  00382A                     
 12224                           ;DC_motors.c: 289:     reverse(mL, mR);
 12225  00382A  C028  F01A         	movff	DCmotors_testing@mL,reverse@mL
 12226  00382E  C029  F01B         	movff	DCmotors_testing@mL+1,reverse@mL+1
 12227  003832  C02A  F01C         	movff	DCmotors_testing@mR,reverse@mR
 12228  003836  C02B  F01D         	movff	DCmotors_testing@mR+1,reverse@mR+1
 12229  00383A  ECE4  F029         	call	_reverse	;wreg free
 12230  00383E                     
 12231                           ;DC_motors.c: 290:     stop(mL, mR);
 12232  00383E  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12233  003842  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12234  003846  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12235  00384A  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12236  00384E  EC7E  F02A         	call	_stop	;wreg free
 12237  003852                     
 12238                           ;DC_motors.c: 291:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12239  003852  0E52               	movlw	82
 12240  003854  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12241  003856  0E2B               	movlw	43
 12242  003858  6E2C               	movwf	??_DCmotors_testing^0,c
 12243  00385A  0E00               	movlw	0
 12244  00385C                     u7287:
 12245  00385C  2EE8               	decfsz	wreg,f,c
 12246  00385E  D7FE               	bra	u7287
 12247  003860  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12248  003862  D7FC               	bra	u7287
 12249  003864  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12250  003866  D7FA               	bra	u7287
 12251  003868  D000               	nop2	
 12252                           
 12253                           ;DC_motors.c: 293:     turnright(mL, mR, 90);
 12254  00386A  C028  F022         	movff	DCmotors_testing@mL,turnright@mL
 12255  00386E  C029  F023         	movff	DCmotors_testing@mL+1,turnright@mL+1
 12256  003872  C02A  F024         	movff	DCmotors_testing@mR,turnright@mR
 12257  003876  C02B  F025         	movff	DCmotors_testing@mR+1,turnright@mR+1
 12258  00387A  0E00               	movlw	0
 12259  00387C  6E27               	movwf	(turnright@deg+1)^0,c
 12260  00387E  0E5A               	movlw	90
 12261  003880  6E26               	movwf	turnright@deg^0,c
 12262  003882  EC98  F02C         	call	_turnright	;wreg free
 12263                           
 12264                           ;DC_motors.c: 294:     stop(mL, mR);
 12265  003886  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12266  00388A  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12267  00388E  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12268  003892  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12269  003896  EC7E  F02A         	call	_stop	;wreg free
 12270  00389A                     
 12271                           ;DC_motors.c: 295:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12272  00389A  0E52               	movlw	82
 12273  00389C  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12274  00389E  0E2B               	movlw	43
 12275  0038A0  6E2C               	movwf	??_DCmotors_testing^0,c
 12276  0038A2  0E00               	movlw	0
 12277  0038A4                     u7297:
 12278  0038A4  2EE8               	decfsz	wreg,f,c
 12279  0038A6  D7FE               	bra	u7297
 12280  0038A8  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12281  0038AA  D7FC               	bra	u7297
 12282  0038AC  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12283  0038AE  D7FA               	bra	u7297
 12284  0038B0  D000               	nop2	
 12285  0038B2                     
 12286                           ;DC_motors.c: 297:     turnleft(mL, mR, 90);
 12287  0038B2  C028  F022         	movff	DCmotors_testing@mL,turnleft@mL
 12288  0038B6  C029  F023         	movff	DCmotors_testing@mL+1,turnleft@mL+1
 12289  0038BA  C02A  F024         	movff	DCmotors_testing@mR,turnleft@mR
 12290  0038BE  C02B  F025         	movff	DCmotors_testing@mR+1,turnleft@mR+1
 12291  0038C2  0E00               	movlw	0
 12292  0038C4  6E27               	movwf	(turnleft@deg+1)^0,c
 12293  0038C6  0E5A               	movlw	90
 12294  0038C8  6E26               	movwf	turnleft@deg^0,c
 12295  0038CA  ECC0  F02C         	call	_turnleft	;wreg free
 12296  0038CE                     
 12297                           ;DC_motors.c: 298:     stop(mL, mR);
 12298  0038CE  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12299  0038D2  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12300  0038D6  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12301  0038DA  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12302  0038DE  EC7E  F02A         	call	_stop	;wreg free
 12303  0038E2                     
 12304                           ;DC_motors.c: 299:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12305  0038E2  0E52               	movlw	82
 12306  0038E4  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12307  0038E6  0E2B               	movlw	43
 12308  0038E8  6E2C               	movwf	??_DCmotors_testing^0,c
 12309  0038EA  0E00               	movlw	0
 12310  0038EC                     u7307:
 12311  0038EC  2EE8               	decfsz	wreg,f,c
 12312  0038EE  D7FE               	bra	u7307
 12313  0038F0  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12314  0038F2  D7FC               	bra	u7307
 12315  0038F4  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12316  0038F6  D7FA               	bra	u7307
 12317  0038F8  D000               	nop2	
 12318                           
 12319                           ;DC_motors.c: 301:     turnright(mL, mR, 180);
 12320  0038FA  C028  F022         	movff	DCmotors_testing@mL,turnright@mL
 12321  0038FE  C029  F023         	movff	DCmotors_testing@mL+1,turnright@mL+1
 12322  003902  C02A  F024         	movff	DCmotors_testing@mR,turnright@mR
 12323  003906  C02B  F025         	movff	DCmotors_testing@mR+1,turnright@mR+1
 12324  00390A  0E00               	movlw	0
 12325  00390C  6E27               	movwf	(turnright@deg+1)^0,c
 12326  00390E  0EB4               	movlw	180
 12327  003910  6E26               	movwf	turnright@deg^0,c
 12328  003912  EC98  F02C         	call	_turnright	;wreg free
 12329                           
 12330                           ;DC_motors.c: 302:     stop(mL, mR);
 12331  003916  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12332  00391A  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12333  00391E  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12334  003922  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12335  003926  EC7E  F02A         	call	_stop	;wreg free
 12336  00392A                     
 12337                           ;DC_motors.c: 303:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12338  00392A  0E52               	movlw	82
 12339  00392C  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12340  00392E  0E2B               	movlw	43
 12341  003930  6E2C               	movwf	??_DCmotors_testing^0,c
 12342  003932  0E00               	movlw	0
 12343  003934                     u7317:
 12344  003934  2EE8               	decfsz	wreg,f,c
 12345  003936  D7FE               	bra	u7317
 12346  003938  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12347  00393A  D7FC               	bra	u7317
 12348  00393C  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12349  00393E  D7FA               	bra	u7317
 12350  003940  D000               	nop2	
 12351  003942                     
 12352                           ;DC_motors.c: 305:     turnleft(mL, mR, 180);
 12353  003942  C028  F022         	movff	DCmotors_testing@mL,turnleft@mL
 12354  003946  C029  F023         	movff	DCmotors_testing@mL+1,turnleft@mL+1
 12355  00394A  C02A  F024         	movff	DCmotors_testing@mR,turnleft@mR
 12356  00394E  C02B  F025         	movff	DCmotors_testing@mR+1,turnleft@mR+1
 12357  003952  0E00               	movlw	0
 12358  003954  6E27               	movwf	(turnleft@deg+1)^0,c
 12359  003956  0EB4               	movlw	180
 12360  003958  6E26               	movwf	turnleft@deg^0,c
 12361  00395A  ECC0  F02C         	call	_turnleft	;wreg free
 12362  00395E                     
 12363                           ;DC_motors.c: 306:     stop(mL, mR);
 12364  00395E  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12365  003962  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12366  003966  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12367  00396A  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12368  00396E  EC7E  F02A         	call	_stop	;wreg free
 12369  003972                     
 12370                           ;DC_motors.c: 307:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12371  003972  0E52               	movlw	82
 12372  003974  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12373  003976  0E2B               	movlw	43
 12374  003978  6E2C               	movwf	??_DCmotors_testing^0,c
 12375  00397A  0E00               	movlw	0
 12376  00397C                     u7327:
 12377  00397C  2EE8               	decfsz	wreg,f,c
 12378  00397E  D7FE               	bra	u7327
 12379  003980  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12380  003982  D7FC               	bra	u7327
 12381  003984  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12382  003986  D7FA               	bra	u7327
 12383  003988  D000               	nop2	
 12384                           
 12385                           ;DC_motors.c: 309:     turnright(mL, mR, 135);
 12386  00398A  C028  F022         	movff	DCmotors_testing@mL,turnright@mL
 12387  00398E  C029  F023         	movff	DCmotors_testing@mL+1,turnright@mL+1
 12388  003992  C02A  F024         	movff	DCmotors_testing@mR,turnright@mR
 12389  003996  C02B  F025         	movff	DCmotors_testing@mR+1,turnright@mR+1
 12390  00399A  0E00               	movlw	0
 12391  00399C  6E27               	movwf	(turnright@deg+1)^0,c
 12392  00399E  0E87               	movlw	135
 12393  0039A0  6E26               	movwf	turnright@deg^0,c
 12394  0039A2  EC98  F02C         	call	_turnright	;wreg free
 12395                           
 12396                           ;DC_motors.c: 310:     stop(mL, mR);
 12397  0039A6  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12398  0039AA  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12399  0039AE  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12400  0039B2  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12401  0039B6  EC7E  F02A         	call	_stop	;wreg free
 12402  0039BA                     
 12403                           ;DC_motors.c: 311:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12404  0039BA  0E52               	movlw	82
 12405  0039BC  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12406  0039BE  0E2B               	movlw	43
 12407  0039C0  6E2C               	movwf	??_DCmotors_testing^0,c
 12408  0039C2  0E00               	movlw	0
 12409  0039C4                     u7337:
 12410  0039C4  2EE8               	decfsz	wreg,f,c
 12411  0039C6  D7FE               	bra	u7337
 12412  0039C8  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12413  0039CA  D7FC               	bra	u7337
 12414  0039CC  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12415  0039CE  D7FA               	bra	u7337
 12416  0039D0  D000               	nop2	
 12417  0039D2                     
 12418                           ;DC_motors.c: 313:     turnleft(mL, mR, 135);
 12419  0039D2  C028  F022         	movff	DCmotors_testing@mL,turnleft@mL
 12420  0039D6  C029  F023         	movff	DCmotors_testing@mL+1,turnleft@mL+1
 12421  0039DA  C02A  F024         	movff	DCmotors_testing@mR,turnleft@mR
 12422  0039DE  C02B  F025         	movff	DCmotors_testing@mR+1,turnleft@mR+1
 12423  0039E2  0E00               	movlw	0
 12424  0039E4  6E27               	movwf	(turnleft@deg+1)^0,c
 12425  0039E6  0E87               	movlw	135
 12426  0039E8  6E26               	movwf	turnleft@deg^0,c
 12427  0039EA  ECC0  F02C         	call	_turnleft	;wreg free
 12428  0039EE                     
 12429                           ;DC_motors.c: 314:     stop(mL, mR);
 12430  0039EE  C028  F01A         	movff	DCmotors_testing@mL,stop@mL
 12431  0039F2  C029  F01B         	movff	DCmotors_testing@mL+1,stop@mL+1
 12432  0039F6  C02A  F01C         	movff	DCmotors_testing@mR,stop@mR
 12433  0039FA  C02B  F01D         	movff	DCmotors_testing@mR+1,stop@mR+1
 12434  0039FE  EC7E  F02A         	call	_stop	;wreg free
 12435  003A02                     
 12436                           ;DC_motors.c: 315:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12437  003A02  0E52               	movlw	82
 12438  003A04  6E2D               	movwf	(??_DCmotors_testing+1)^0,c
 12439  003A06  0E2B               	movlw	43
 12440  003A08  6E2C               	movwf	??_DCmotors_testing^0,c
 12441  003A0A  0E00               	movlw	0
 12442  003A0C                     u7347:
 12443  003A0C  2EE8               	decfsz	wreg,f,c
 12444  003A0E  D7FE               	bra	u7347
 12445  003A10  2E2C               	decfsz	??_DCmotors_testing^0,f,c
 12446  003A12  D7FC               	bra	u7347
 12447  003A14  2E2D               	decfsz	(??_DCmotors_testing+1)^0,f,c
 12448  003A16  D7FA               	bra	u7347
 12449  003A18  D000               	nop2	
 12450  003A1A                     
 12451                           ;DC_motors.c: 317:     INTCONbits.GIE = 1;
 12452  003A1A  8EF2               	bsf	242,7,c	;volatile
 12453  003A1C  0012               	return		;funcret
 12454  003A1E                     __end_of_DCmotors_testing:
 12455                           	callstack 0
 12456                           
 12457 ;; *************** function _reverse *****************
 12458 ;; Defined at:
 12459 ;;		line 108 in file "DC_motors.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;  mL              2   25[COMRAM] PTR struct .
 12462 ;;		 -> main@motorL(9), 
 12463 ;;  mR              2   27[COMRAM] PTR struct .
 12464 ;;		 -> main@motorR(9), 
 12465 ;; Auto vars:     Size  Location     Type
 12466 ;;		None
 12467 ;; Return value:  Size  Location     Type
 12468 ;;                  1    wreg      void 
 12469 ;; Registers used:
 12470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12471 ;; Tracked objects:
 12472 ;;		On entry : 0/0
 12473 ;;		On exit  : 0/0
 12474 ;;		Unchanged: 0/0
 12475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12476 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12479 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12480 ;;Total ram usage:        6 bytes
 12481 ;; Hardware stack levels used: 1
 12482 ;; Hardware stack levels required when called: 2
 12483 ;; This function calls:
 12484 ;;		_DCmotors_setPWM
 12485 ;; This function is called by:
 12486 ;;		_colourcards_readRGBC
 12487 ;;		_DCmotors_testing
 12488 ;; This function uses a non-reentrant model
 12489 ;;
 12490                           
 12491                           	psect	text58
 12492  0053C8                     __ptext58:
 12493                           	callstack 0
 12494  0053C8                     _reverse:
 12495                           	callstack 27
 12496  0053C8                     
 12497                           ;DC_motors.c: 108: void reverse(DC_motor *mL, DC_motor *mR);DC_motors.c: 109: {;DC_motor
      +                          s.c: 111:     mL->direction = 0;
 12498  0053C8  EE20 F001          	lfsr	2,1
 12499  0053CC  501A               	movf	reverse@mL^0,w,c
 12500  0053CE  26D9               	addwf	fsr2l,f,c
 12501  0053D0  501B               	movf	(reverse@mL+1)^0,w,c
 12502  0053D2  22DA               	addwfc	fsr2h,f,c
 12503  0053D4  0E00               	movlw	0
 12504  0053D6  6EDF               	movwf	indf2,c
 12505                           
 12506                           ;DC_motors.c: 112:     mR->direction = 0;
 12507  0053D8  EE20 F001          	lfsr	2,1
 12508  0053DC  501C               	movf	reverse@mR^0,w,c
 12509  0053DE  26D9               	addwf	fsr2l,f,c
 12510  0053E0  501D               	movf	(reverse@mR+1)^0,w,c
 12511  0053E2  22DA               	addwfc	fsr2h,f,c
 12512  0053E4  0E00               	movlw	0
 12513  0053E6  6EDF               	movwf	indf2,c
 12514                           
 12515                           ;DC_motors.c: 115:     while((mL->power < 100) && (mR->power < 100)){
 12516  0053E8  EF18  F02A         	goto	l530
 12517  0053EC                     l5424:
 12518                           
 12519                           ;DC_motors.c: 116:         mL->power += 1;
 12520  0053EC  C01A  FFD9         	movff	reverse@mL,fsr2l
 12521  0053F0  C01B  FFDA         	movff	reverse@mL+1,fsr2h
 12522  0053F4  2ADF               	incf	indf2,f,c
 12523                           
 12524                           ;DC_motors.c: 117:         mR->power += 1;
 12525  0053F6  C01C  FFD9         	movff	reverse@mR,fsr2l
 12526  0053FA  C01D  FFDA         	movff	reverse@mR+1,fsr2h
 12527  0053FE  2ADF               	incf	indf2,f,c
 12528  005400                     
 12529                           ;DC_motors.c: 119:         DCmotors_setPWM(mL);
 12530  005400  C01A  F00F         	movff	reverse@mL,DCmotors_setPWM@m
 12531  005404  C01B  F010         	movff	reverse@mL+1,DCmotors_setPWM@m+1
 12532  005408  EC1E  F01F         	call	_DCmotors_setPWM	;wreg free
 12533  00540C                     
 12534                           ;DC_motors.c: 120:         DCmotors_setPWM(mR);
 12535  00540C  C01C  F00F         	movff	reverse@mR,DCmotors_setPWM@m
 12536  005410  C01D  F010         	movff	reverse@mR+1,DCmotors_setPWM@m+1
 12537  005414  EC1E  F01F         	call	_DCmotors_setPWM	;wreg free
 12538  005418                     
 12539                           ;DC_motors.c: 121:         _delay((unsigned long)((100)*(64000000/4000.0)));
 12540  005418  0E09               	movlw	9
 12541  00541A  6E1F               	movwf	(??_reverse+1)^0,c
 12542  00541C  0E1E               	movlw	30
 12543  00541E  6E1E               	movwf	??_reverse^0,c
 12544  005420  0EE4               	movlw	228
 12545  005422                     u7357:
 12546  005422  2EE8               	decfsz	wreg,f,c
 12547  005424  D7FE               	bra	u7357
 12548  005426  2E1E               	decfsz	??_reverse^0,f,c
 12549  005428  D7FC               	bra	u7357
 12550  00542A  2E1F               	decfsz	(??_reverse+1)^0,f,c
 12551  00542C  D7FA               	bra	u7357
 12552  00542E  D000               	nop2	
 12553  005430                     l530:
 12554                           
 12555                           ;DC_motors.c: 115:     while((mL->power < 100) && (mR->power < 100)){
 12556  005430  C01A  FFD9         	movff	reverse@mL,fsr2l
 12557  005434  C01B  FFDA         	movff	reverse@mL+1,fsr2h
 12558  005438  0E64               	movlw	100
 12559  00543A  60DF               	cpfslt	indf2,c
 12560  00543C  EF22  F02A         	goto	u6501
 12561  005440  EF24  F02A         	goto	u6500
 12562  005444                     u6501:
 12563  005444  EF30  F02A         	goto	l535
 12564  005448                     u6500:
 12565  005448  C01C  FFD9         	movff	reverse@mR,fsr2l
 12566  00544C  C01D  FFDA         	movff	reverse@mR+1,fsr2h
 12567  005450  0E63               	movlw	99
 12568  005452  64DF               	cpfsgt	indf2,c
 12569  005454  EF2E  F02A         	goto	u6511
 12570  005458  EF30  F02A         	goto	u6510
 12571  00545C                     u6511:
 12572  00545C  EFF6  F029         	goto	l5424
 12573  005460                     u6510:
 12574  005460                     l535:
 12575  005460  0012               	return		;funcret
 12576  005462                     __end_of_reverse:
 12577                           	callstack 0
 12578                           
 12579 ;; *************** function _forward *****************
 12580 ;; Defined at:
 12581 ;;		line 88 in file "DC_motors.c"
 12582 ;; Parameters:    Size  Location     Type
 12583 ;;  mL              2   25[COMRAM] PTR struct .
 12584 ;;		 -> main@motorL(9), 
 12585 ;;  mR              2   27[COMRAM] PTR struct .
 12586 ;;		 -> main@motorR(9), 
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;		None
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  1    wreg      void 
 12591 ;; Registers used:
 12592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12593 ;; Tracked objects:
 12594 ;;		On entry : 0/0
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12601 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12602 ;;Total ram usage:        6 bytes
 12603 ;; Hardware stack levels used: 1
 12604 ;; Hardware stack levels required when called: 2
 12605 ;; This function calls:
 12606 ;;		_DCmotors_setPWM
 12607 ;; This function is called by:
 12608 ;;		_main
 12609 ;;		_colourcards_readRGBC
 12610 ;;		_DCmotors_testing
 12611 ;; This function uses a non-reentrant model
 12612 ;;
 12613                           
 12614                           	psect	text59
 12615  005462                     __ptext59:
 12616                           	callstack 0
 12617  005462                     _forward:
 12618                           	callstack 28
 12619  005462                     
 12620                           ;DC_motors.c: 88: void forward(DC_motor *mL, DC_motor *mR);DC_motors.c: 89: {;DC_motors.
      +                          c: 90:     mL->direction = 1;
 12621  005462  EE20 F001          	lfsr	2,1
 12622  005466  501A               	movf	forward@mL^0,w,c
 12623  005468  26D9               	addwf	fsr2l,f,c
 12624  00546A  501B               	movf	(forward@mL+1)^0,w,c
 12625  00546C  22DA               	addwfc	fsr2h,f,c
 12626  00546E  0E01               	movlw	1
 12627  005470  6EDF               	movwf	indf2,c
 12628                           
 12629                           ;DC_motors.c: 91:     mR->direction = 1;
 12630  005472  EE20 F001          	lfsr	2,1
 12631  005476  501C               	movf	forward@mR^0,w,c
 12632  005478  26D9               	addwf	fsr2l,f,c
 12633  00547A  501D               	movf	(forward@mR+1)^0,w,c
 12634  00547C  22DA               	addwfc	fsr2h,f,c
 12635  00547E  0E01               	movlw	1
 12636  005480  6EDF               	movwf	indf2,c
 12637                           
 12638                           ;DC_motors.c: 94:     while((mL->power < 100) && (mR->power < 100)){
 12639  005482  EF65  F02A         	goto	l522
 12640  005486                     l5398:
 12641                           
 12642                           ;DC_motors.c: 95:         mL->power += 1;
 12643  005486  C01A  FFD9         	movff	forward@mL,fsr2l
 12644  00548A  C01B  FFDA         	movff	forward@mL+1,fsr2h
 12645  00548E  2ADF               	incf	indf2,f,c
 12646                           
 12647                           ;DC_motors.c: 96:         mR->power += 1;
 12648  005490  C01C  FFD9         	movff	forward@mR,fsr2l
 12649  005494  C01D  FFDA         	movff	forward@mR+1,fsr2h
 12650  005498  2ADF               	incf	indf2,f,c
 12651  00549A                     
 12652                           ;DC_motors.c: 98:         DCmotors_setPWM(mL);
 12653  00549A  C01A  F00F         	movff	forward@mL,DCmotors_setPWM@m
 12654  00549E  C01B  F010         	movff	forward@mL+1,DCmotors_setPWM@m+1
 12655  0054A2  EC1E  F01F         	call	_DCmotors_setPWM	;wreg free
 12656  0054A6                     
 12657                           ;DC_motors.c: 99:         DCmotors_setPWM(mR);
 12658  0054A6  C01C  F00F         	movff	forward@mR,DCmotors_setPWM@m
 12659  0054AA  C01D  F010         	movff	forward@mR+1,DCmotors_setPWM@m+1
 12660  0054AE  EC1E  F01F         	call	_DCmotors_setPWM	;wreg free
 12661  0054B2                     
 12662                           ;DC_motors.c: 100:         _delay((unsigned long)((100)*(64000000/4000.0)));
 12663  0054B2  0E09               	movlw	9
 12664  0054B4  6E1F               	movwf	(??_forward+1)^0,c
 12665  0054B6  0E1E               	movlw	30
 12666  0054B8  6E1E               	movwf	??_forward^0,c
 12667  0054BA  0EE4               	movlw	228
 12668  0054BC                     u7367:
 12669  0054BC  2EE8               	decfsz	wreg,f,c
 12670  0054BE  D7FE               	bra	u7367
 12671  0054C0  2E1E               	decfsz	??_forward^0,f,c
 12672  0054C2  D7FC               	bra	u7367
 12673  0054C4  2E1F               	decfsz	(??_forward+1)^0,f,c
 12674  0054C6  D7FA               	bra	u7367
 12675  0054C8  D000               	nop2	
 12676  0054CA                     l522:
 12677                           
 12678                           ;DC_motors.c: 94:     while((mL->power < 100) && (mR->power < 100)){
 12679  0054CA  C01A  FFD9         	movff	forward@mL,fsr2l
 12680  0054CE  C01B  FFDA         	movff	forward@mL+1,fsr2h
 12681  0054D2  0E64               	movlw	100
 12682  0054D4  60DF               	cpfslt	indf2,c
 12683  0054D6  EF6F  F02A         	goto	u6461
 12684  0054DA  EF71  F02A         	goto	u6460
 12685  0054DE                     u6461:
 12686  0054DE  EF7D  F02A         	goto	l527
 12687  0054E2                     u6460:
 12688  0054E2  C01C  FFD9         	movff	forward@mR,fsr2l
 12689  0054E6  C01D  FFDA         	movff	forward@mR+1,fsr2h
 12690  0054EA  0E63               	movlw	99
 12691  0054EC  64DF               	cpfsgt	indf2,c
 12692  0054EE  EF7B  F02A         	goto	u6471
 12693  0054F2  EF7D  F02A         	goto	u6470
 12694  0054F6                     u6471:
 12695  0054F6  EF43  F02A         	goto	l5398
 12696  0054FA                     u6470:
 12697  0054FA                     l527:
 12698  0054FA  0012               	return		;funcret
 12699  0054FC                     __end_of_forward:
 12700                           	callstack 0
 12701                           
 12702 ;; *************** function _DCmotors_init *****************
 12703 ;; Defined at:
 12704 ;;		line 10 in file "DC_motors.c"
 12705 ;; Parameters:    Size  Location     Type
 12706 ;;  PWMperiod       1    wreg     unsigned char 
 12707 ;; Auto vars:     Size  Location     Type
 12708 ;;  PWMperiod       1    0[COMRAM] unsigned char 
 12709 ;; Return value:  Size  Location     Type
 12710 ;;                  1    wreg      void 
 12711 ;; Registers used:
 12712 ;;		wreg, status,2, cstack
 12713 ;; Tracked objects:
 12714 ;;		On entry : 0/0
 12715 ;;		On exit  : 0/0
 12716 ;;		Unchanged: 0/0
 12717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12722 ;;Total ram usage:        1 bytes
 12723 ;; Hardware stack levels used: 1
 12724 ;; Hardware stack levels required when called: 1
 12725 ;; This function calls:
 12726 ;;		_buggyLEDs_init
 12727 ;;		_clicker2LEDs_init
 12728 ;;		_clicker2buttons_init
 12729 ;; This function is called by:
 12730 ;;		_main
 12731 ;; This function uses a non-reentrant model
 12732 ;;
 12733                           
 12734                           	psect	text60
 12735  0058E0                     __ptext60:
 12736                           	callstack 0
 12737  0058E0                     _DCmotors_init:
 12738                           	callstack 29
 12739                           
 12740                           ;incstack = 0
 12741                           ;DCmotors_init@PWMperiod stored from wreg
 12742  0058E0  6E01               	movwf	DCmotors_init@PWMperiod^0,c
 12743  0058E2                     
 12744                           ;DC_motors.c: 10: void DCmotors_init(unsigned char PWMperiod);DC_motors.c: 11: {;DC_moto
      +                          rs.c: 13:     T2CONbits.CKPS=0b100;
 12745  0058E2  50BD               	movf	189,w,c	;volatile
 12746  0058E4  0B8F               	andlw	-113
 12747  0058E6  0940               	iorlw	64
 12748  0058E8  6EBD               	movwf	189,c	;volatile
 12749                           
 12750                           ;DC_motors.c: 14:     T2HLTbits.MODE=0b00000;
 12751  0058EA  0EE0               	movlw	-32
 12752  0058EC  16BE               	andwf	190,f,c	;volatile
 12753                           
 12754                           ;DC_motors.c: 15:     T2CLKCONbits.CS=0b0001;
 12755  0058EE  50BF               	movf	191,w,c	;volatile
 12756  0058F0  0BF0               	andlw	-16
 12757  0058F2  0901               	iorlw	1
 12758  0058F4  6EBF               	movwf	191,c	;volatile
 12759  0058F6                     
 12760                           ;DC_motors.c: 18:     T2PR=PWMperiod;
 12761  0058F6  C001  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
 12762  0058FA                     
 12763                           ;DC_motors.c: 19:     T2CONbits.ON=1;
 12764  0058FA  8EBD               	bsf	189,7,c	;volatile
 12765  0058FC                     
 12766                           ;DC_motors.c: 22:     TRISEbits.TRISE2=0;
 12767  0058FC  9485               	bcf	133,2,c	;volatile
 12768  0058FE                     
 12769                           ;DC_motors.c: 23:     TRISEbits.TRISE4=0;
 12770  0058FE  9885               	bcf	133,4,c	;volatile
 12771  005900                     
 12772                           ;DC_motors.c: 24:     TRISCbits.TRISC7=0;
 12773  005900  9E83               	bcf	131,7,c	;volatile
 12774  005902                     
 12775                           ;DC_motors.c: 25:     TRISGbits.TRISG6=0;
 12776  005902  9C87               	bcf	135,6,c	;volatile
 12777  005904                     
 12778                           ;DC_motors.c: 27:     LATEbits.LATE2=0;
 12779  005904  947D               	bcf	125,2,c	;volatile
 12780  005906                     
 12781                           ;DC_motors.c: 28:     LATEbits.LATE4=0;
 12782  005906  987D               	bcf	125,4,c	;volatile
 12783  005908                     
 12784                           ;DC_motors.c: 29:     LATCbits.LATC7=0;
 12785  005908  9E7B               	bcf	123,7,c	;volatile
 12786  00590A                     
 12787                           ;DC_motors.c: 30:     LATGbits.LATG6=0;
 12788  00590A  9C7F               	bcf	127,6,c	;volatile
 12789                           
 12790                           ;DC_motors.c: 32:     PWM6DCH=0;
 12791  00590C  0E00               	movlw	0
 12792  00590E  6EA3               	movwf	163,c	;volatile
 12793                           
 12794                           ;DC_motors.c: 33:     PWM7DCH=0;
 12795  005910  0E00               	movlw	0
 12796  005912  6EA0               	movwf	160,c	;volatile
 12797  005914                     
 12798                           ;DC_motors.c: 35:     PWM6CONbits.EN = 1;
 12799  005914  8EA4               	bsf	164,7,c	;volatile
 12800  005916                     
 12801                           ;DC_motors.c: 36:     PWM7CONbits.EN = 1;
 12802  005916  8EA1               	bsf	161,7,c	;volatile
 12803                           
 12804                           ;DC_motors.c: 38:     RE2PPS=0x0A;
 12805  005918  0E0A               	movlw	10
 12806  00591A  010E               	movlb	14	; () banked
 12807  00591C  6F74               	movwf	116,b	;volatile
 12808                           
 12809                           ;DC_motors.c: 39:     RC7PPS=0x0B;
 12810  00591E  0E0B               	movlw	11
 12811  005920  6F69               	movwf	105,b	;volatile
 12812  005922                     
 12813                           ; BSR set to: 14
 12814                           ;DC_motors.c: 42:     clicker2buttons_init();
 12815  005922  ECE2  F02E         	call	_clicker2buttons_init	;wreg free
 12816  005926                     
 12817                           ;DC_motors.c: 43:     clicker2LEDs_init();
 12818  005926  ECF7  F02E         	call	_clicker2LEDs_init	;wreg free
 12819  00592A                     
 12820                           ;DC_motors.c: 44:     buggyLEDs_init();
 12821  00592A  ECCA  F02E         	call	_buggyLEDs_init	;wreg free
 12822  00592E  0012               	return		;funcret
 12823  005930                     __end_of_DCmotors_init:
 12824                           	callstack 0
 12825                           
 12826 ;; *************** function _clicker2buttons_init *****************
 12827 ;; Defined at:
 12828 ;;		line 7 in file "buttons_n_LEDs.c"
 12829 ;; Parameters:    Size  Location     Type
 12830 ;;		None
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;		None
 12833 ;; Return value:  Size  Location     Type
 12834 ;;                  1    wreg      void 
 12835 ;; Registers used:
 12836 ;;		None
 12837 ;; Tracked objects:
 12838 ;;		On entry : 0/0
 12839 ;;		On exit  : 0/0
 12840 ;;		Unchanged: 0/0
 12841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12846 ;;Total ram usage:        0 bytes
 12847 ;; Hardware stack levels used: 1
 12848 ;; This function calls:
 12849 ;;		Nothing
 12850 ;; This function is called by:
 12851 ;;		_DCmotors_init
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855                           	psect	text61
 12856  005DC4                     __ptext61:
 12857                           	callstack 0
 12858  005DC4                     _clicker2buttons_init:
 12859                           	callstack 29
 12860  005DC4                     
 12861                           ;buttons_n_LEDs.c: 10:     TRISFbits.TRISF2=1;
 12862  005DC4  8486               	bsf	134,2,c	;volatile
 12863                           
 12864                           ;buttons_n_LEDs.c: 11:     TRISFbits.TRISF3=1;
 12865  005DC6  8686               	bsf	134,3,c	;volatile
 12866                           
 12867                           ;buttons_n_LEDs.c: 12:     ANSELFbits.ANSELF2=0;
 12868  005DC8  010E               	movlb	14	; () banked
 12869  005DCA  95B4               	bcf	180,2,b	;volatile
 12870                           
 12871                           ;buttons_n_LEDs.c: 13:     ANSELFbits.ANSELF3=0;
 12872  005DCC  97B4               	bcf	180,3,b	;volatile
 12873  005DCE                     
 12874                           ; BSR set to: 14
 12875  005DCE  0012               	return		;funcret
 12876  005DD0                     __end_of_clicker2buttons_init:
 12877                           	callstack 0
 12878                           
 12879 ;; *************** function _clicker2LEDs_init *****************
 12880 ;; Defined at:
 12881 ;;		line 19 in file "buttons_n_LEDs.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;		None
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;		None
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  1    wreg      void 
 12888 ;; Registers used:
 12889 ;;		None
 12890 ;; Tracked objects:
 12891 ;;		On entry : 0/0
 12892 ;;		On exit  : 0/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12899 ;;Total ram usage:        0 bytes
 12900 ;; Hardware stack levels used: 1
 12901 ;; This function calls:
 12902 ;;		Nothing
 12903 ;; This function is called by:
 12904 ;;		_DCmotors_init
 12905 ;; This function uses a non-reentrant model
 12906 ;;
 12907                           
 12908                           	psect	text62
 12909  005DEE                     __ptext62:
 12910                           	callstack 0
 12911  005DEE                     _clicker2LEDs_init:
 12912                           	callstack 29
 12913  005DEE                     
 12914                           ;buttons_n_LEDs.c: 21:     TRISDbits.TRISD7 = 0;
 12915  005DEE  9E84               	bcf	132,7,c	;volatile
 12916                           
 12917                           ;buttons_n_LEDs.c: 22:     TRISHbits.TRISH3 = 0;
 12918  005DF0  9688               	bcf	136,3,c	;volatile
 12919                           
 12920                           ;buttons_n_LEDs.c: 24:     LATDbits.LATD7 = 0;
 12921  005DF2  9E7C               	bcf	124,7,c	;volatile
 12922                           
 12923                           ;buttons_n_LEDs.c: 25:     LATHbits.LATH3 = 0;
 12924  005DF4  9680               	bcf	128,3,c	;volatile
 12925  005DF6  0012               	return		;funcret
 12926  005DF8                     __end_of_clicker2LEDs_init:
 12927                           	callstack 0
 12928                           
 12929 ;; *************** function _buggyLEDs_init *****************
 12930 ;; Defined at:
 12931 ;;		line 31 in file "buttons_n_LEDs.c"
 12932 ;; Parameters:    Size  Location     Type
 12933 ;;		None
 12934 ;; Auto vars:     Size  Location     Type
 12935 ;;		None
 12936 ;; Return value:  Size  Location     Type
 12937 ;;                  1    wreg      void 
 12938 ;; Registers used:
 12939 ;;		None
 12940 ;; Tracked objects:
 12941 ;;		On entry : 0/0
 12942 ;;		On exit  : 0/0
 12943 ;;		Unchanged: 0/0
 12944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12949 ;;Total ram usage:        0 bytes
 12950 ;; Hardware stack levels used: 1
 12951 ;; This function calls:
 12952 ;;		Nothing
 12953 ;; This function is called by:
 12954 ;;		_DCmotors_init
 12955 ;; This function uses a non-reentrant model
 12956 ;;
 12957                           
 12958                           	psect	text63
 12959  005D94                     __ptext63:
 12960                           	callstack 0
 12961  005D94                     _buggyLEDs_init:
 12962                           	callstack 29
 12963  005D94                     
 12964                           ;buttons_n_LEDs.c: 33:     TRISHbits.TRISH1 = 0;
 12965  005D94  9288               	bcf	136,1,c	;volatile
 12966                           
 12967                           ;buttons_n_LEDs.c: 34:     TRISDbits.TRISD3 = 0;
 12968  005D96  9684               	bcf	132,3,c	;volatile
 12969                           
 12970                           ;buttons_n_LEDs.c: 35:     TRISDbits.TRISD4 = 0;
 12971  005D98  9884               	bcf	132,4,c	;volatile
 12972                           
 12973                           ;buttons_n_LEDs.c: 36:     TRISFbits.TRISF0 = 0;
 12974  005D9A  9086               	bcf	134,0,c	;volatile
 12975                           
 12976                           ;buttons_n_LEDs.c: 37:     TRISHbits.TRISH0 = 0;
 12977  005D9C  9088               	bcf	136,0,c	;volatile
 12978                           
 12979                           ;buttons_n_LEDs.c: 39:     LATHbits.LATH1 = 0;
 12980  005D9E  9280               	bcf	128,1,c	;volatile
 12981                           
 12982                           ;buttons_n_LEDs.c: 40:     LATDbits.LATD3 = 0;
 12983  005DA0  967C               	bcf	124,3,c	;volatile
 12984                           
 12985                           ;buttons_n_LEDs.c: 41:     LATDbits.LATD4 = 0;
 12986  005DA2  987C               	bcf	124,4,c	;volatile
 12987                           
 12988                           ;buttons_n_LEDs.c: 42:     LATFbits.LATF0 = 0;
 12989  005DA4  907E               	bcf	126,0,c	;volatile
 12990                           
 12991                           ;buttons_n_LEDs.c: 43:     LATHbits.LATH0 = 0;
 12992  005DA6  9080               	bcf	128,0,c	;volatile
 12993  005DA8  0012               	return		;funcret
 12994  005DAA                     __end_of_buggyLEDs_init:
 12995                           	callstack 0
 12996                           
 12997 ;; *************** function _DCmotors_calibration *****************
 12998 ;; Defined at:
 12999 ;;		line 230 in file "DC_motors.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;  mL              2   39[COMRAM] PTR struct .
 13002 ;;		 -> main@motorL(9), 
 13003 ;;  mR              2   41[COMRAM] PTR struct .
 13004 ;;		 -> main@motorR(9), 
 13005 ;; Auto vars:     Size  Location     Type
 13006 ;;		None
 13007 ;; Return value:  Size  Location     Type
 13008 ;;                  1    wreg      void 
 13009 ;; Registers used:
 13010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13011 ;; Tracked objects:
 13012 ;;		On entry : 0/0
 13013 ;;		On exit  : 0/0
 13014 ;;		Unchanged: 0/0
 13015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13018 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13019 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13020 ;;Total ram usage:        6 bytes
 13021 ;; Hardware stack levels used: 1
 13022 ;; Hardware stack levels required when called: 4
 13023 ;; This function calls:
 13024 ;;		_DCmotors_adjustval
 13025 ;;		_stop
 13026 ;;		_turnleft
 13027 ;;		_turnright
 13028 ;; This function is called by:
 13029 ;;		_main
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           
 13033                           	psect	text64
 13034  00479E                     __ptext64:
 13035                           	callstack 0
 13036  00479E                     _DCmotors_calibration:
 13037                           	callstack 26
 13038  00479E                     l572:
 13039  00479E  A48E               	btfss	142,2,c	;volatile
 13040  0047A0  EFD4  F023         	goto	u6771
 13041  0047A4  EFD6  F023         	goto	u6770
 13042  0047A8                     u6771:
 13043  0047A8  EFDD  F023         	goto	l576
 13044  0047AC                     u6770:
 13045  0047AC  B68E               	btfsc	142,3,c	;volatile
 13046  0047AE  EFDB  F023         	goto	u6781
 13047  0047B2  EFDD  F023         	goto	u6780
 13048  0047B6                     u6781:
 13049  0047B6  EFCF  F023         	goto	l572
 13050  0047BA                     u6780:
 13051  0047BA                     l576:
 13052                           
 13053                           ;DC_motors.c: 233:     LATDbits.LATD3 = 1;
 13054  0047BA  867C               	bsf	124,3,c	;volatile
 13055  0047BC                     
 13056                           ;DC_motors.c: 234:     turnleft(mL, mR, 360);
 13057  0047BC  C028  F022         	movff	DCmotors_calibration@mL,turnleft@mL
 13058  0047C0  C029  F023         	movff	DCmotors_calibration@mL+1,turnleft@mL+1
 13059  0047C4  C02A  F024         	movff	DCmotors_calibration@mR,turnleft@mR
 13060  0047C8  C02B  F025         	movff	DCmotors_calibration@mR+1,turnleft@mR+1
 13061  0047CC  0E01               	movlw	1
 13062  0047CE  6E27               	movwf	(turnleft@deg+1)^0,c
 13063  0047D0  0E68               	movlw	104
 13064  0047D2  6E26               	movwf	turnleft@deg^0,c
 13065  0047D4  ECC0  F02C         	call	_turnleft	;wreg free
 13066                           
 13067                           ;DC_motors.c: 235:     stop(mL, mR);
 13068  0047D8  C028  F01A         	movff	DCmotors_calibration@mL,stop@mL
 13069  0047DC  C029  F01B         	movff	DCmotors_calibration@mL+1,stop@mL+1
 13070  0047E0  C02A  F01C         	movff	DCmotors_calibration@mR,stop@mR
 13071  0047E4  C02B  F01D         	movff	DCmotors_calibration@mR+1,stop@mR+1
 13072  0047E8  EC7E  F02A         	call	_stop	;wreg free
 13073  0047EC                     l577:
 13074  0047EC  A48E               	btfss	142,2,c	;volatile
 13075  0047EE  EFFB  F023         	goto	u6791
 13076  0047F2  EFFD  F023         	goto	u6790
 13077  0047F6                     u6791:
 13078  0047F6  EF04  F024         	goto	l5690
 13079  0047FA                     u6790:
 13080  0047FA  B68E               	btfsc	142,3,c	;volatile
 13081  0047FC  EF02  F024         	goto	u6801
 13082  004800  EF04  F024         	goto	u6800
 13083  004804                     u6801:
 13084  004804  EFF6  F023         	goto	l577
 13085  004808                     u6800:
 13086  004808                     l5690:
 13087                           
 13088                           ;DC_motors.c: 238:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 13089  004808  0E52               	movlw	82
 13090  00480A  6E2D               	movwf	(??_DCmotors_calibration+1)^0,c
 13091  00480C  0E2B               	movlw	43
 13092  00480E  6E2C               	movwf	??_DCmotors_calibration^0,c
 13093  004810  0E00               	movlw	0
 13094  004812                     u7377:
 13095  004812  2EE8               	decfsz	wreg,f,c
 13096  004814  D7FE               	bra	u7377
 13097  004816  2E2C               	decfsz	??_DCmotors_calibration^0,f,c
 13098  004818  D7FC               	bra	u7377
 13099  00481A  2E2D               	decfsz	(??_DCmotors_calibration+1)^0,f,c
 13100  00481C  D7FA               	bra	u7377
 13101  00481E  D000               	nop2	
 13102  004820                     
 13103                           ;DC_motors.c: 239:     DCmotors_adjustval();
 13104  004820  EC94  F029         	call	_DCmotors_adjustval	;wreg free
 13105  004824                     
 13106                           ;DC_motors.c: 240:     LATDbits.LATD3 = 0;
 13107  004824  967C               	bcf	124,3,c	;volatile
 13108  004826                     l582:
 13109  004826  A48E               	btfss	142,2,c	;volatile
 13110  004828  EF18  F024         	goto	u6811
 13111  00482C  EF1A  F024         	goto	u6810
 13112  004830                     u6811:
 13113  004830  EF21  F024         	goto	l586
 13114  004834                     u6810:
 13115  004834  B68E               	btfsc	142,3,c	;volatile
 13116  004836  EF1F  F024         	goto	u6821
 13117  00483A  EF21  F024         	goto	u6820
 13118  00483E                     u6821:
 13119  00483E  EF13  F024         	goto	l582
 13120  004842                     u6820:
 13121  004842                     l586:
 13122                           
 13123                           ;DC_motors.c: 243:     LATDbits.LATD3 = 1;
 13124  004842  867C               	bsf	124,3,c	;volatile
 13125  004844                     
 13126                           ;DC_motors.c: 244:     turnright(mL, mR, 360);
 13127  004844  C028  F022         	movff	DCmotors_calibration@mL,turnright@mL
 13128  004848  C029  F023         	movff	DCmotors_calibration@mL+1,turnright@mL+1
 13129  00484C  C02A  F024         	movff	DCmotors_calibration@mR,turnright@mR
 13130  004850  C02B  F025         	movff	DCmotors_calibration@mR+1,turnright@mR+1
 13131  004854  0E01               	movlw	1
 13132  004856  6E27               	movwf	(turnright@deg+1)^0,c
 13133  004858  0E68               	movlw	104
 13134  00485A  6E26               	movwf	turnright@deg^0,c
 13135  00485C  EC98  F02C         	call	_turnright	;wreg free
 13136                           
 13137                           ;DC_motors.c: 245:     stop(mL, mR);
 13138  004860  C028  F01A         	movff	DCmotors_calibration@mL,stop@mL
 13139  004864  C029  F01B         	movff	DCmotors_calibration@mL+1,stop@mL+1
 13140  004868  C02A  F01C         	movff	DCmotors_calibration@mR,stop@mR
 13141  00486C  C02B  F01D         	movff	DCmotors_calibration@mR+1,stop@mR+1
 13142  004870  EC7E  F02A         	call	_stop	;wreg free
 13143  004874                     l587:
 13144  004874  A48E               	btfss	142,2,c	;volatile
 13145  004876  EF3F  F024         	goto	u6831
 13146  00487A  EF41  F024         	goto	u6830
 13147  00487E                     u6831:
 13148  00487E  EF48  F024         	goto	l5702
 13149  004882                     u6830:
 13150  004882  B68E               	btfsc	142,3,c	;volatile
 13151  004884  EF46  F024         	goto	u6841
 13152  004888  EF48  F024         	goto	u6840
 13153  00488C                     u6841:
 13154  00488C  EF3A  F024         	goto	l587
 13155  004890                     u6840:
 13156  004890                     l5702:
 13157                           
 13158                           ;DC_motors.c: 248:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 13159  004890  0E52               	movlw	82
 13160  004892  6E2D               	movwf	(??_DCmotors_calibration+1)^0,c
 13161  004894  0E2B               	movlw	43
 13162  004896  6E2C               	movwf	??_DCmotors_calibration^0,c
 13163  004898  0E00               	movlw	0
 13164  00489A                     u7387:
 13165  00489A  2EE8               	decfsz	wreg,f,c
 13166  00489C  D7FE               	bra	u7387
 13167  00489E  2E2C               	decfsz	??_DCmotors_calibration^0,f,c
 13168  0048A0  D7FC               	bra	u7387
 13169  0048A2  2E2D               	decfsz	(??_DCmotors_calibration+1)^0,f,c
 13170  0048A4  D7FA               	bra	u7387
 13171  0048A6  D000               	nop2	
 13172  0048A8                     
 13173                           ;DC_motors.c: 249:     DCmotors_adjustval();
 13174  0048A8  EC94  F029         	call	_DCmotors_adjustval	;wreg free
 13175  0048AC                     
 13176                           ;DC_motors.c: 250:     LATDbits.LATD3 = 0;
 13177  0048AC  967C               	bcf	124,3,c	;volatile
 13178  0048AE  0012               	return		;funcret
 13179  0048B0                     __end_of_DCmotors_calibration:
 13180                           	callstack 0
 13181                           
 13182 ;; *************** function _turnright *****************
 13183 ;; Defined at:
 13184 ;;		line 218 in file "DC_motors.c"
 13185 ;; Parameters:    Size  Location     Type
 13186 ;;  mL              2   33[COMRAM] PTR struct .
 13187 ;;		 -> main@motorL(9), 
 13188 ;;  mR              2   35[COMRAM] PTR struct .
 13189 ;;		 -> main@motorR(9), 
 13190 ;;  deg             2   37[COMRAM] unsigned int 
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;		None
 13193 ;; Return value:  Size  Location     Type
 13194 ;;                  1    wreg      void 
 13195 ;; Registers used:
 13196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13197 ;; Tracked objects:
 13198 ;;		On entry : 0/0
 13199 ;;		On exit  : 0/0
 13200 ;;		Unchanged: 0/0
 13201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13202 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13205 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13206 ;;Total ram usage:        6 bytes
 13207 ;; Hardware stack levels used: 1
 13208 ;; Hardware stack levels required when called: 3
 13209 ;; This function calls:
 13210 ;;		_left
 13211 ;;		_right
 13212 ;; This function is called by:
 13213 ;;		_colourcards_readRGBC
 13214 ;;		_DCmotors_calibration
 13215 ;;		_DCmotors_testing
 13216 ;; This function uses a non-reentrant model
 13217 ;;
 13218                           
 13219                           	psect	text65
 13220  005930                     __ptext65:
 13221                           	callstack 0
 13222  005930                     _turnright:
 13223                           	callstack 26
 13224  005930                     
 13225                           ;DC_motors.c: 218: void turnright(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motor
      +                          s.c: 219: {;DC_motors.c: 220:     if (returnhome_flag==0) {
 13226  005930  0100               	movlb	0	; () banked
 13227  005932  51F6               	movf	_returnhome_flag& (0+255),w,b	;volatile
 13228  005934  A4D8               	btfss	status,2,c
 13229  005936  EF9F  F02C         	goto	u6481
 13230  00593A  EFA1  F02C         	goto	u6480
 13231  00593E                     u6481:
 13232  00593E  EFB1  F02C         	goto	l5414
 13233  005942                     u6480:
 13234  005942                     
 13235                           ; BSR set to: 0
 13236                           ;DC_motors.c: 221:         right(mL, mR, deg);
 13237  005942  C022  F01A         	movff	turnright@mL,right@mL
 13238  005946  C023  F01B         	movff	turnright@mL+1,right@mL+1
 13239  00594A  C024  F01C         	movff	turnright@mR,right@mR
 13240  00594E  C025  F01D         	movff	turnright@mR+1,right@mR+1
 13241  005952  C026  F01E         	movff	turnright@deg,right@deg
 13242  005956  C027  F01F         	movff	turnright@deg+1,right@deg+1
 13243  00595A  ECDC  F025         	call	_right	;wreg free
 13244                           
 13245                           ;DC_motors.c: 222:     } else {
 13246  00595E  EFBF  F02C         	goto	l569
 13247  005962                     l5414:
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;DC_motors.c: 223:         left(mL, mR, deg);
 13251  005962  C022  F01A         	movff	turnright@mL,left@mL
 13252  005966  C023  F01B         	movff	turnright@mL+1,left@mL+1
 13253  00596A  C024  F01C         	movff	turnright@mR,left@mR
 13254  00596E  C025  F01D         	movff	turnright@mR+1,left@mR+1
 13255  005972  C026  F01E         	movff	turnright@deg,left@deg
 13256  005976  C027  F01F         	movff	turnright@deg+1,left@deg+1
 13257  00597A  EC57  F026         	call	_left	;wreg free
 13258  00597E                     l569:
 13259  00597E  0012               	return		;funcret
 13260  005980                     __end_of_turnright:
 13261                           	callstack 0
 13262                           
 13263 ;; *************** function _turnleft *****************
 13264 ;; Defined at:
 13265 ;;		line 205 in file "DC_motors.c"
 13266 ;; Parameters:    Size  Location     Type
 13267 ;;  mL              2   33[COMRAM] PTR struct .
 13268 ;;		 -> main@motorL(9), 
 13269 ;;  mR              2   35[COMRAM] PTR struct .
 13270 ;;		 -> main@motorR(9), 
 13271 ;;  deg             2   37[COMRAM] unsigned int 
 13272 ;; Auto vars:     Size  Location     Type
 13273 ;;		None
 13274 ;; Return value:  Size  Location     Type
 13275 ;;                  1    wreg      void 
 13276 ;; Registers used:
 13277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13278 ;; Tracked objects:
 13279 ;;		On entry : 0/0
 13280 ;;		On exit  : 0/0
 13281 ;;		Unchanged: 0/0
 13282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13283 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13286 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13287 ;;Total ram usage:        6 bytes
 13288 ;; Hardware stack levels used: 1
 13289 ;; Hardware stack levels required when called: 3
 13290 ;; This function calls:
 13291 ;;		_left
 13292 ;;		_right
 13293 ;; This function is called by:
 13294 ;;		_colourcards_readRGBC
 13295 ;;		_DCmotors_calibration
 13296 ;;		_DCmotors_testing
 13297 ;; This function uses a non-reentrant model
 13298 ;;
 13299                           
 13300                           	psect	text66
 13301  005980                     __ptext66:
 13302                           	callstack 0
 13303  005980                     _turnleft:
 13304                           	callstack 26
 13305  005980                     
 13306                           ;DC_motors.c: 205: void turnleft(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors
      +                          .c: 206: {;DC_motors.c: 207:     if (returnhome_flag==0) {
 13307  005980  0100               	movlb	0	; () banked
 13308  005982  51F6               	movf	_returnhome_flag& (0+255),w,b	;volatile
 13309  005984  A4D8               	btfss	status,2,c
 13310  005986  EFC7  F02C         	goto	u6491
 13311  00598A  EFC9  F02C         	goto	u6490
 13312  00598E                     u6491:
 13313  00598E  EFD9  F02C         	goto	l5420
 13314  005992                     u6490:
 13315  005992                     
 13316                           ; BSR set to: 0
 13317                           ;DC_motors.c: 208:         left(mL, mR, deg);
 13318  005992  C022  F01A         	movff	turnleft@mL,left@mL
 13319  005996  C023  F01B         	movff	turnleft@mL+1,left@mL+1
 13320  00599A  C024  F01C         	movff	turnleft@mR,left@mR
 13321  00599E  C025  F01D         	movff	turnleft@mR+1,left@mR+1
 13322  0059A2  C026  F01E         	movff	turnleft@deg,left@deg
 13323  0059A6  C027  F01F         	movff	turnleft@deg+1,left@deg+1
 13324  0059AA  EC57  F026         	call	_left	;wreg free
 13325                           
 13326                           ;DC_motors.c: 209:     } else {
 13327  0059AE  EFE7  F02C         	goto	l564
 13328  0059B2                     l5420:
 13329                           
 13330                           ; BSR set to: 0
 13331                           ;DC_motors.c: 210:         right(mL, mR, deg);
 13332  0059B2  C022  F01A         	movff	turnleft@mL,right@mL
 13333  0059B6  C023  F01B         	movff	turnleft@mL+1,right@mL+1
 13334  0059BA  C024  F01C         	movff	turnleft@mR,right@mR
 13335  0059BE  C025  F01D         	movff	turnleft@mR+1,right@mR+1
 13336  0059C2  C026  F01E         	movff	turnleft@deg,right@deg
 13337  0059C6  C027  F01F         	movff	turnleft@deg+1,right@deg+1
 13338  0059CA  ECDC  F025         	call	_right	;wreg free
 13339  0059CE                     l564:
 13340  0059CE  0012               	return		;funcret
 13341  0059D0                     __end_of_turnleft:
 13342                           	callstack 0
 13343                           
 13344 ;; *************** function _right *****************
 13345 ;; Defined at:
 13346 ;;		line 177 in file "DC_motors.c"
 13347 ;; Parameters:    Size  Location     Type
 13348 ;;  mL              2   25[COMRAM] PTR struct .
 13349 ;;		 -> main@motorL(9), 
 13350 ;;  mR              2   27[COMRAM] PTR struct .
 13351 ;;		 -> main@motorR(9), 
 13352 ;;  deg             2   29[COMRAM] unsigned int 
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;		None
 13355 ;; Return value:  Size  Location     Type
 13356 ;;                  1    wreg      void 
 13357 ;; Registers used:
 13358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13359 ;; Tracked objects:
 13360 ;;		On entry : 0/0
 13361 ;;		On exit  : 0/0
 13362 ;;		Unchanged: 0/0
 13363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13364 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13367 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13368 ;;Total ram usage:        8 bytes
 13369 ;; Hardware stack levels used: 1
 13370 ;; Hardware stack levels required when called: 2
 13371 ;; This function calls:
 13372 ;;		_DCmotors_setPWM
 13373 ;; This function is called by:
 13374 ;;		_turnleft
 13375 ;;		_turnright
 13376 ;; This function uses a non-reentrant model
 13377 ;;
 13378                           
 13379                           	psect	text67
 13380  004BB8                     __ptext67:
 13381                           	callstack 0
 13382  004BB8                     _right:
 13383                           	callstack 26
 13384  004BB8                     
 13385                           ;DC_motors.c: 177: void right(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c:
      +                           178: {;DC_motors.c: 180:     mL->direction = 1;
 13386  004BB8  EE20 F001          	lfsr	2,1
 13387  004BBC  501A               	movf	right@mL^0,w,c
 13388  004BBE  26D9               	addwf	fsr2l,f,c
 13389  004BC0  501B               	movf	(right@mL+1)^0,w,c
 13390  004BC2  22DA               	addwfc	fsr2h,f,c
 13391  004BC4  0E01               	movlw	1
 13392  004BC6  6EDF               	movwf	indf2,c
 13393                           
 13394                           ;DC_motors.c: 181:     mR->direction = 0;
 13395  004BC8  EE20 F001          	lfsr	2,1
 13396  004BCC  501C               	movf	right@mR^0,w,c
 13397  004BCE  26D9               	addwf	fsr2l,f,c
 13398  004BD0  501D               	movf	(right@mR+1)^0,w,c
 13399  004BD2  22DA               	addwfc	fsr2h,f,c
 13400  004BD4  0E00               	movlw	0
 13401  004BD6  6EDF               	movwf	indf2,c
 13402                           
 13403                           ;DC_motors.c: 184:     while((mL->power < DCmotors_upper) || (mR->power < DCmotors_lower
      +                          )){
 13404  004BD8  EF3A  F026         	goto	l554
 13405  004BDC                     l5370:
 13406                           
 13407                           ; BSR set to: 0
 13408                           ;DC_motors.c: 186:         LATHbits.LATH0 = !LATHbits.LATH0;
 13409  004BDC  A080               	btfss	128,0,c	;volatile
 13410  004BDE  EFF3  F025         	goto	u6391
 13411  004BE2  EFF7  F025         	goto	u6390
 13412  004BE6                     u6391:
 13413  004BE6  6A20               	clrf	??_right^0,c
 13414  004BE8  2A20               	incf	??_right^0,f,c
 13415  004BEA  EFF8  F025         	goto	u6408
 13416  004BEE                     u6390:
 13417  004BEE  6A20               	clrf	??_right^0,c
 13418  004BF0                     u6408:
 13419  004BF0  5080               	movf	128,w,c	;volatile
 13420  004BF2  1820               	xorwf	??_right^0,w,c
 13421  004BF4  0BFE               	andlw	-2
 13422  004BF6  1820               	xorwf	??_right^0,w,c
 13423  004BF8  6E80               	movwf	128,c	;volatile
 13424  004BFA                     
 13425                           ;DC_motors.c: 189:         if (mL->power < DCmotors_upper) {mL->power += 1;}
 13426  004BFA  C01A  FFD9         	movff	right@mL,fsr2l
 13427  004BFE  C01B  FFDA         	movff	right@mL+1,fsr2h
 13428  004C02  0100               	movlb	0	; () banked
 13429  004C04  51FD               	movf	_DCmotors_upper& (0+255),w,b	;volatile
 13430  004C06  5CDE               	subwf	postinc2,w,c
 13431  004C08  B0D8               	btfsc	status,0,c
 13432  004C0A  EF09  F026         	goto	u6411
 13433  004C0E  EF0B  F026         	goto	u6410
 13434  004C12                     u6411:
 13435  004C12  EF10  F026         	goto	l5376
 13436  004C16                     u6410:
 13437  004C16                     
 13438                           ; BSR set to: 0
 13439  004C16  C01A  FFD9         	movff	right@mL,fsr2l
 13440  004C1A  C01B  FFDA         	movff	right@mL+1,fsr2h
 13441  004C1E  2ADF               	incf	indf2,f,c
 13442  004C20                     l5376:
 13443                           
 13444                           ; BSR set to: 0
 13445                           ;DC_motors.c: 190:         if (mR->power < DCmotors_lower) {mR->power += 1;}
 13446  004C20  C01C  FFD9         	movff	right@mR,fsr2l
 13447  004C24  C01D  FFDA         	movff	right@mR+1,fsr2h
 13448  004C28  51FE               	movf	_DCmotors_lower& (0+255),w,b	;volatile
 13449  004C2A  5CDE               	subwf	postinc2,w,c
 13450  004C2C  B0D8               	btfsc	status,0,c
 13451  004C2E  EF1B  F026         	goto	u6421
 13452  004C32  EF1D  F026         	goto	u6420
 13453  004C36                     u6421:
 13454  004C36  EF22  F026         	goto	l5380
 13455  004C3A                     u6420:
 13456  004C3A                     
 13457                           ; BSR set to: 0
 13458  004C3A  C01C  FFD9         	movff	right@mR,fsr2l
 13459  004C3E  C01D  FFDA         	movff	right@mR+1,fsr2h
 13460  004C42  2ADF               	incf	indf2,f,c
 13461  004C44                     l5380:
 13462                           
 13463                           ; BSR set to: 0
 13464                           ;DC_motors.c: 193:         DCmotors_setPWM(mL);
 13465  004C44  C01A  F00F         	movff	right@mL,DCmotors_setPWM@m
 13466  004C48  C01B  F010         	movff	right@mL+1,DCmotors_setPWM@m+1
 13467  004C4C  EC1E  F01F         	call	_DCmotors_setPWM	;wreg free
 13468  004C50                     
 13469                           ;DC_motors.c: 194:         DCmotors_setPWM(mR);
 13470  004C50  C01C  F00F         	movff	right@mR,DCmotors_setPWM@m
 13471  004C54  C01D  F010         	movff	right@mR+1,DCmotors_setPWM@m+1
 13472  004C58  EC1E  F01F         	call	_DCmotors_setPWM	;wreg free
 13473  004C5C                     
 13474                           ;DC_motors.c: 195:         _delay((unsigned long)((100)*(64000000/4000.0)));
 13475  004C5C  0E09               	movlw	9
 13476  004C5E  6E21               	movwf	(??_right+1)^0,c
 13477  004C60  0E1E               	movlw	30
 13478  004C62  6E20               	movwf	??_right^0,c
 13479  004C64  0EE4               	movlw	228
 13480  004C66                     u7397:
 13481  004C66  2EE8               	decfsz	wreg,f,c
 13482  004C68  D7FE               	bra	u7397
 13483  004C6A  2E20               	decfsz	??_right^0,f,c
 13484  004C6C  D7FC               	bra	u7397
 13485  004C6E  2E21               	decfsz	(??_right+1)^0,f,c
 13486  004C70  D7FA               	bra	u7397
 13487  004C72  D000               	nop2	
 13488  004C74                     l554:
 13489                           
 13490                           ;DC_motors.c: 184:     while((mL->power < DCmotors_upper) || (mR->power < DCmotors_lower
      +                          )){
 13491  004C74  C01A  FFD9         	movff	right@mL,fsr2l
 13492  004C78  C01B  FFDA         	movff	right@mL+1,fsr2h
 13493  004C7C  0100               	movlb	0	; () banked
 13494  004C7E  51FD               	movf	_DCmotors_upper& (0+255),w,b	;volatile
 13495  004C80  5CDE               	subwf	postinc2,w,c
 13496  004C82  A0D8               	btfss	status,0,c
 13497  004C84  EF46  F026         	goto	u6431
 13498  004C88  EF48  F026         	goto	u6430
 13499  004C8C                     u6431:
 13500  004C8C  EFEE  F025         	goto	l5370
 13501  004C90                     u6430:
 13502  004C90                     
 13503                           ; BSR set to: 0
 13504  004C90  C01C  FFD9         	movff	right@mR,fsr2l
 13505  004C94  C01D  FFDA         	movff	right@mR+1,fsr2h
 13506  004C98  51FE               	movf	_DCmotors_lower& (0+255),w,b	;volatile
 13507  004C9A  5CDE               	subwf	postinc2,w,c
 13508  004C9C  A0D8               	btfss	status,0,c
 13509  004C9E  EF53  F026         	goto	u6441
 13510  004CA2  EF55  F026         	goto	u6440
 13511  004CA6                     u6441:
 13512  004CA6  EFEE  F025         	goto	l5370
 13513  004CAA                     u6440:
 13514  004CAA                     
 13515                           ; BSR set to: 0
 13516                           ;DC_motors.c: 198:     LATHbits.LATH0 = 0;
 13517  004CAA  9080               	bcf	128,0,c	;volatile
 13518  004CAC                     
 13519                           ; BSR set to: 0
 13520  004CAC  0012               	return		;funcret
 13521  004CAE                     __end_of_right:
 13522                           	callstack 0
 13523                           
 13524 ;; *************** function _left *****************
 13525 ;; Defined at:
 13526 ;;		line 150 in file "DC_motors.c"
 13527 ;; Parameters:    Size  Location     Type
 13528 ;;  mL              2   25[COMRAM] PTR struct .
 13529 ;;		 -> main@motorL(9), 
 13530 ;;  mR              2   27[COMRAM] PTR struct .
 13531 ;;		 -> main@motorR(9), 
 13532 ;;  deg             2   29[COMRAM] unsigned int 
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;		None
 13535 ;; Return value:  Size  Location     Type
 13536 ;;                  1    wreg      void 
 13537 ;; Registers used:
 13538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13539 ;; Tracked objects:
 13540 ;;		On entry : 0/0
 13541 ;;		On exit  : 0/0
 13542 ;;		Unchanged: 0/0
 13543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13544 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13547 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13548 ;;Total ram usage:        8 bytes
 13549 ;; Hardware stack levels used: 1
 13550 ;; Hardware stack levels required when called: 2
 13551 ;; This function calls:
 13552 ;;		_DCmotors_setPWM
 13553 ;; This function is called by:
 13554 ;;		_turnleft
 13555 ;;		_turnright
 13556 ;; This function uses a non-reentrant model
 13557 ;;
 13558                           
 13559                           	psect	text68
 13560  004CAE                     __ptext68:
 13561                           	callstack 0
 13562  004CAE                     _left:
 13563                           	callstack 26
 13564  004CAE                     
 13565                           ;DC_motors.c: 150: void left(DC_motor *mL, DC_motor *mR, unsigned int deg);DC_motors.c: 
      +                          151: {;DC_motors.c: 153:     mL->direction = 0;
 13566  004CAE  EE20 F001          	lfsr	2,1
 13567  004CB2  501A               	movf	left@mL^0,w,c
 13568  004CB4  26D9               	addwf	fsr2l,f,c
 13569  004CB6  501B               	movf	(left@mL+1)^0,w,c
 13570  004CB8  22DA               	addwfc	fsr2h,f,c
 13571  004CBA  0E00               	movlw	0
 13572  004CBC  6EDF               	movwf	indf2,c
 13573                           
 13574                           ;DC_motors.c: 154:     mR->direction = 1;
 13575  004CBE  EE20 F001          	lfsr	2,1
 13576  004CC2  501C               	movf	left@mR^0,w,c
 13577  004CC4  26D9               	addwf	fsr2l,f,c
 13578  004CC6  501D               	movf	(left@mR+1)^0,w,c
 13579  004CC8  22DA               	addwfc	fsr2h,f,c
 13580  004CCA  0E01               	movlw	1
 13581  004CCC  6EDF               	movwf	indf2,c
 13582                           
 13583                           ;DC_motors.c: 157:     while((mL->power < DCmotors_lower) || (mR->power < DCmotors_upper
      +                          )){
 13584  004CCE  EFB5  F026         	goto	l546
 13585  004CD2                     l5350:
 13586                           
 13587                           ; BSR set to: 0
 13588                           ;DC_motors.c: 159:         LATFbits.LATF0 = !LATFbits.LATF0;
 13589  004CD2  A07E               	btfss	126,0,c	;volatile
 13590  004CD4  EF6E  F026         	goto	u6331
 13591  004CD8  EF72  F026         	goto	u6330
 13592  004CDC                     u6331:
 13593  004CDC  6A20               	clrf	??_left^0,c
 13594  004CDE  2A20               	incf	??_left^0,f,c
 13595  004CE0  EF73  F026         	goto	u6348
 13596  004CE4                     u6330:
 13597  004CE4  6A20               	clrf	??_left^0,c
 13598  004CE6                     u6348:
 13599  004CE6  507E               	movf	126,w,c	;volatile
 13600  004CE8  1820               	xorwf	??_left^0,w,c
 13601  004CEA  0BFE               	andlw	-2
 13602  004CEC  1820               	xorwf	??_left^0,w,c
 13603  004CEE  6E7E               	movwf	126,c	;volatile
 13604  004CF0                     
 13605                           ;DC_motors.c: 162:         if (mL->power < DCmotors_lower) {mL->power += 1;}
 13606  004CF0  C01A  FFD9         	movff	left@mL,fsr2l
 13607  004CF4  C01B  FFDA         	movff	left@mL+1,fsr2h
 13608  004CF8  0100               	movlb	0	; () banked
 13609  004CFA  51FE               	movf	_DCmotors_lower& (0+255),w,b	;volatile
 13610  004CFC  5CDE               	subwf	postinc2,w,c
 13611  004CFE  B0D8               	btfsc	status,0,c
 13612  004D00  EF84  F026         	goto	u6351
 13613  004D04  EF86  F026         	goto	u6350
 13614  004D08                     u6351:
 13615  004D08  EF8B  F026         	goto	l5356
 13616  004D0C                     u6350:
 13617  004D0C                     
 13618                           ; BSR set to: 0
 13619  004D0C  C01A  FFD9         	movff	left@mL,fsr2l
 13620  004D10  C01B  FFDA         	movff	left@mL+1,fsr2h
 13621  004D14  2ADF               	incf	indf2,f,c
 13622  004D16                     l5356:
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;DC_motors.c: 163:         if (mR->power < DCmotors_upper) {mR->power += 1;}
 13626  004D16  C01C  FFD9         	movff	left@mR,fsr2l
 13627  004D1A  C01D  FFDA         	movff	left@mR+1,fsr2h
 13628  004D1E  51FD               	movf	_DCmotors_upper& (0+255),w,b	;volatile
 13629  004D20  5CDE               	subwf	postinc2,w,c
 13630  004D22  B0D8               	btfsc	status,0,c
 13631  004D24  EF96  F026         	goto	u6361
 13632  004D28  EF98  F026         	goto	u6360
 13633  004D2C                     u6361:
 13634  004D2C  EF9D  F026         	goto	l5360
 13635  004D30                     u6360:
 13636  004D30                     
 13637                           ; BSR set to: 0
 13638  004D30  C01C  FFD9         	movff	left@mR,fsr2l
 13639  004D34  C01D  FFDA         	movff	left@mR+1,fsr2h
 13640  004D38  2ADF               	incf	indf2,f,c
 13641  004D3A                     l5360:
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;DC_motors.c: 166:         DCmotors_setPWM(mL);
 13645  004D3A  C01A  F00F         	movff	left@mL,DCmotors_setPWM@m
 13646  004D3E  C01B  F010         	movff	left@mL+1,DCmotors_setPWM@m+1
 13647  004D42  EC1E  F01F         	call	_DCmotors_setPWM	;wreg free
 13648  004D46                     
 13649                           ;DC_motors.c: 167:         DCmotors_setPWM(mR);
 13650  004D46  C01C  F00F         	movff	left@mR,DCmotors_setPWM@m
 13651  004D4A  C01D  F010         	movff	left@mR+1,DCmotors_setPWM@m+1
 13652  004D4E  EC1E  F01F         	call	_DCmotors_setPWM	;wreg free
 13653  004D52                     
 13654                           ;DC_motors.c: 168:         _delay((unsigned long)((100)*(64000000/4000.0)));
 13655  004D52  0E09               	movlw	9
 13656  004D54  6E21               	movwf	(??_left+1)^0,c
 13657  004D56  0E1E               	movlw	30
 13658  004D58  6E20               	movwf	??_left^0,c
 13659  004D5A  0EE4               	movlw	228
 13660  004D5C                     u7407:
 13661  004D5C  2EE8               	decfsz	wreg,f,c
 13662  004D5E  D7FE               	bra	u7407
 13663  004D60  2E20               	decfsz	??_left^0,f,c
 13664  004D62  D7FC               	bra	u7407
 13665  004D64  2E21               	decfsz	(??_left+1)^0,f,c
 13666  004D66  D7FA               	bra	u7407
 13667  004D68  D000               	nop2	
 13668  004D6A                     l546:
 13669                           
 13670                           ;DC_motors.c: 157:     while((mL->power < DCmotors_lower) || (mR->power < DCmotors_upper
      +                          )){
 13671  004D6A  C01A  FFD9         	movff	left@mL,fsr2l
 13672  004D6E  C01B  FFDA         	movff	left@mL+1,fsr2h
 13673  004D72  0100               	movlb	0	; () banked
 13674  004D74  51FE               	movf	_DCmotors_lower& (0+255),w,b	;volatile
 13675  004D76  5CDE               	subwf	postinc2,w,c
 13676  004D78  A0D8               	btfss	status,0,c
 13677  004D7A  EFC1  F026         	goto	u6371
 13678  004D7E  EFC3  F026         	goto	u6370
 13679  004D82                     u6371:
 13680  004D82  EF69  F026         	goto	l5350
 13681  004D86                     u6370:
 13682  004D86                     
 13683                           ; BSR set to: 0
 13684  004D86  C01C  FFD9         	movff	left@mR,fsr2l
 13685  004D8A  C01D  FFDA         	movff	left@mR+1,fsr2h
 13686  004D8E  51FD               	movf	_DCmotors_upper& (0+255),w,b	;volatile
 13687  004D90  5CDE               	subwf	postinc2,w,c
 13688  004D92  A0D8               	btfss	status,0,c
 13689  004D94  EFCE  F026         	goto	u6381
 13690  004D98  EFD0  F026         	goto	u6380
 13691  004D9C                     u6381:
 13692  004D9C  EF69  F026         	goto	l5350
 13693  004DA0                     u6380:
 13694  004DA0                     
 13695                           ; BSR set to: 0
 13696                           ;DC_motors.c: 171:     LATFbits.LATF0 = 0;
 13697  004DA0  907E               	bcf	126,0,c	;volatile
 13698  004DA2                     
 13699                           ; BSR set to: 0
 13700  004DA2  0012               	return		;funcret
 13701  004DA4                     __end_of_left:
 13702                           	callstack 0
 13703                           
 13704 ;; *************** function _stop *****************
 13705 ;; Defined at:
 13706 ;;		line 129 in file "DC_motors.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;  mL              2   25[COMRAM] PTR struct .
 13709 ;;		 -> main@motorL(9), 
 13710 ;;  mR              2   27[COMRAM] PTR struct .
 13711 ;;		 -> main@motorR(9), 
 13712 ;; Auto vars:     Size  Location     Type
 13713 ;;		None
 13714 ;; Return value:  Size  Location     Type
 13715 ;;                  1    wreg      void 
 13716 ;; Registers used:
 13717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13718 ;; Tracked objects:
 13719 ;;		On entry : 0/0
 13720 ;;		On exit  : 0/0
 13721 ;;		Unchanged: 0/0
 13722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13726 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13727 ;;Total ram usage:        6 bytes
 13728 ;; Hardware stack levels used: 1
 13729 ;; Hardware stack levels required when called: 2
 13730 ;; This function calls:
 13731 ;;		_DCmotors_setPWM
 13732 ;; This function is called by:
 13733 ;;		_colourcards_readRGBC
 13734 ;;		_DCmotors_calibration
 13735 ;;		_DCmotors_testing
 13736 ;; This function uses a non-reentrant model
 13737 ;;
 13738                           
 13739                           	psect	text69
 13740  0054FC                     __ptext69:
 13741                           	callstack 0
 13742  0054FC                     _stop:
 13743                           	callstack 27
 13744  0054FC                     
 13745                           ;DC_motors.c: 129: void stop(DC_motor *mL, DC_motor *mR);DC_motors.c: 130: {;DC_motors.c
      +                          : 131:     LATDbits.LATD4 = 1;
 13746  0054FC  887C               	bsf	124,4,c	;volatile
 13747                           
 13748                           ;DC_motors.c: 134:     while(((mL->power)>0) && ((mR->power)>0)){
 13749  0054FE  EFA3  F02A         	goto	l5444
 13750  005502                     l5436:
 13751                           
 13752                           ;DC_motors.c: 135:         mL->power-=1;
 13753  005502  C01A  FFD9         	movff	stop@mL,fsr2l
 13754  005506  C01B  FFDA         	movff	stop@mL+1,fsr2h
 13755  00550A  06DF               	decf	indf2,f,c
 13756                           
 13757                           ;DC_motors.c: 136:         mR->power-=1;
 13758  00550C  C01C  FFD9         	movff	stop@mR,fsr2l
 13759  005510  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13760  005514  06DF               	decf	indf2,f,c
 13761  005516                     
 13762                           ;DC_motors.c: 139:         DCmotors_setPWM(mL);
 13763  005516  C01A  F00F         	movff	stop@mL,DCmotors_setPWM@m
 13764  00551A  C01B  F010         	movff	stop@mL+1,DCmotors_setPWM@m+1
 13765  00551E  EC1E  F01F         	call	_DCmotors_setPWM	;wreg free
 13766  005522                     
 13767                           ;DC_motors.c: 140:         DCmotors_setPWM(mR);
 13768  005522  C01C  F00F         	movff	stop@mR,DCmotors_setPWM@m
 13769  005526  C01D  F010         	movff	stop@mR+1,DCmotors_setPWM@m+1
 13770  00552A  EC1E  F01F         	call	_DCmotors_setPWM	;wreg free
 13771  00552E                     
 13772                           ;DC_motors.c: 141:         _delay((unsigned long)((100)*(64000000/4000.0)));
 13773  00552E  0E09               	movlw	9
 13774  005530  6E1F               	movwf	(??_stop+1)^0,c
 13775  005532  0E1E               	movlw	30
 13776  005534  6E1E               	movwf	??_stop^0,c
 13777  005536  0EE4               	movlw	228
 13778  005538                     u7417:
 13779  005538  2EE8               	decfsz	wreg,f,c
 13780  00553A  D7FE               	bra	u7417
 13781  00553C  2E1E               	decfsz	??_stop^0,f,c
 13782  00553E  D7FC               	bra	u7417
 13783  005540  2E1F               	decfsz	(??_stop+1)^0,f,c
 13784  005542  D7FA               	bra	u7417
 13785  005544  D000               	nop2	
 13786  005546                     l5444:
 13787                           
 13788                           ;DC_motors.c: 134:     while(((mL->power)>0) && ((mR->power)>0)){
 13789  005546  C01A  FFD9         	movff	stop@mL,fsr2l
 13790  00554A  C01B  FFDA         	movff	stop@mL+1,fsr2h
 13791  00554E  50DF               	movf	indf2,w,c
 13792  005550  B4D8               	btfsc	status,2,c
 13793  005552  EFAD  F02A         	goto	u6521
 13794  005556  EFAF  F02A         	goto	u6520
 13795  00555A                     u6521:
 13796  00555A  EFBB  F02A         	goto	l542
 13797  00555E                     u6520:
 13798  00555E  C01C  FFD9         	movff	stop@mR,fsr2l
 13799  005562  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13800  005566  50DF               	movf	indf2,w,c
 13801  005568  A4D8               	btfss	status,2,c
 13802  00556A  EFB9  F02A         	goto	u6531
 13803  00556E  EFBB  F02A         	goto	u6530
 13804  005572                     u6531:
 13805  005572  EF81  F02A         	goto	l5436
 13806  005576                     u6530:
 13807  005576                     l542:
 13808                           
 13809                           ;DC_motors.c: 144:     LATDbits.LATD4 = 0;
 13810  005576  987C               	bcf	124,4,c	;volatile
 13811  005578  0012               	return		;funcret
 13812  00557A                     __end_of_stop:
 13813                           	callstack 0
 13814                           
 13815 ;; *************** function _DCmotors_setPWM *****************
 13816 ;; Defined at:
 13817 ;;		line 51 in file "DC_motors.c"
 13818 ;; Parameters:    Size  Location     Type
 13819 ;;  m               2   14[COMRAM] PTR struct .
 13820 ;;		 -> main@motorR(9), main@motorL(9), 
 13821 ;; Auto vars:     Size  Location     Type
 13822 ;;  PWMduty         2   23[COMRAM] int 
 13823 ;; Return value:  Size  Location     Type
 13824 ;;                  1    wreg      void 
 13825 ;; Registers used:
 13826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13827 ;; Tracked objects:
 13828 ;;		On entry : 0/0
 13829 ;;		On exit  : 0/0
 13830 ;;		Unchanged: 0/0
 13831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13834 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13835 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13836 ;;Total ram usage:       11 bytes
 13837 ;; Hardware stack levels used: 1
 13838 ;; Hardware stack levels required when called: 1
 13839 ;; This function calls:
 13840 ;;		___awdiv
 13841 ;;		___wmul
 13842 ;; This function is called by:
 13843 ;;		_forward
 13844 ;;		_reverse
 13845 ;;		_stop
 13846 ;;		_left
 13847 ;;		_right
 13848 ;; This function uses a non-reentrant model
 13849 ;;
 13850                           
 13851                           	psect	text70
 13852  003E3C                     __ptext70:
 13853                           	callstack 0
 13854  003E3C                     _DCmotors_setPWM:
 13855                           	callstack 28
 13856  003E3C                     
 13857                           ;DC_motors.c: 51: void DCmotors_setPWM(DC_motor *m);DC_motors.c: 52: {;DC_motors.c: 53: 
      +                           int PWMduty;;DC_motors.c: 55:  if (m->direction){
 13858  003E3C  EE20 F001          	lfsr	2,1
 13859  003E40  500F               	movf	DCmotors_setPWM@m^0,w,c
 13860  003E42  26D9               	addwf	fsr2l,f,c
 13861  003E44  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13862  003E46  22DA               	addwfc	fsr2h,f,c
 13863  003E48  50DF               	movf	indf2,w,c
 13864  003E4A  B4D8               	btfsc	status,2,c
 13865  003E4C  EF2A  F01F         	goto	u6091
 13866  003E50  EF2C  F01F         	goto	u6090
 13867  003E54                     u6091:
 13868  003E54  EF5D  F01F         	goto	l5208
 13869  003E58                     u6090:
 13870  003E58                     
 13871                           ;DC_motors.c: 56:   PWMduty = (m->PWMperiod) - ((int)(m->power)*(m->PWMperiod))/100;
 13872  003E58  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 13873  003E5C  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 13874  003E60  50DF               	movf	indf2,w,c
 13875  003E62  6E11               	movwf	??_DCmotors_setPWM^0,c
 13876  003E64  5011               	movf	??_DCmotors_setPWM^0,w,c
 13877  003E66  6E01               	movwf	___wmul@multiplier^0,c
 13878  003E68  6A02               	clrf	(___wmul@multiplier+1)^0,c
 13879  003E6A  EE20 F007          	lfsr	2,7
 13880  003E6E  500F               	movf	DCmotors_setPWM@m^0,w,c
 13881  003E70  26D9               	addwf	fsr2l,f,c
 13882  003E72  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13883  003E74  22DA               	addwfc	fsr2h,f,c
 13884  003E76  CFDE F003          	movff	postinc2,___wmul@multiplicand
 13885  003E7A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 13886  003E7E  EC51  F02E         	call	___wmul	;wreg free
 13887  003E82  C001  F007         	movff	?___wmul,___awdiv@dividend
 13888  003E86  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 13889  003E8A  0E00               	movlw	0
 13890  003E8C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 13891  003E8E  0E64               	movlw	100
 13892  003E90  6E09               	movwf	___awdiv@divisor^0,c
 13893  003E92  EC85  F028         	call	___awdiv	;wreg free
 13894  003E96  EE20 F007          	lfsr	2,7
 13895  003E9A  500F               	movf	DCmotors_setPWM@m^0,w,c
 13896  003E9C  26D9               	addwf	fsr2l,f,c
 13897  003E9E  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13898  003EA0  22DA               	addwfc	fsr2h,f,c
 13899  003EA2  CFDE F012          	movff	postinc2,??_DCmotors_setPWM+1
 13900  003EA6  CFDD F013          	movff	postdec2,??_DCmotors_setPWM+2
 13901  003EAA  5007               	movf	?___awdiv^0,w,c
 13902  003EAC  5C12               	subwf	(??_DCmotors_setPWM+1)^0,w,c
 13903  003EAE  6E18               	movwf	DCmotors_setPWM@PWMduty^0,c
 13904  003EB0  5008               	movf	(?___awdiv+1)^0,w,c
 13905  003EB2  5813               	subwfb	(??_DCmotors_setPWM+2)^0,w,c
 13906  003EB4  6E19               	movwf	(DCmotors_setPWM@PWMduty+1)^0,c
 13907                           
 13908                           ;DC_motors.c: 57:  } else {
 13909  003EB6  EF80  F01F         	goto	l5210
 13910  003EBA                     l5208:
 13911                           
 13912                           ;DC_motors.c: 58:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 13913  003EBA  C00F  FFD9         	movff	DCmotors_setPWM@m,fsr2l
 13914  003EBE  C010  FFDA         	movff	DCmotors_setPWM@m+1,fsr2h
 13915  003EC2  50DF               	movf	indf2,w,c
 13916  003EC4  6E11               	movwf	??_DCmotors_setPWM^0,c
 13917  003EC6  5011               	movf	??_DCmotors_setPWM^0,w,c
 13918  003EC8  6E01               	movwf	___wmul@multiplier^0,c
 13919  003ECA  6A02               	clrf	(___wmul@multiplier+1)^0,c
 13920  003ECC  EE20 F007          	lfsr	2,7
 13921  003ED0  500F               	movf	DCmotors_setPWM@m^0,w,c
 13922  003ED2  26D9               	addwf	fsr2l,f,c
 13923  003ED4  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13924  003ED6  22DA               	addwfc	fsr2h,f,c
 13925  003ED8  CFDE F003          	movff	postinc2,___wmul@multiplicand
 13926  003EDC  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 13927  003EE0  EC51  F02E         	call	___wmul	;wreg free
 13928  003EE4  C001  F007         	movff	?___wmul,___awdiv@dividend
 13929  003EE8  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 13930  003EEC  0E00               	movlw	0
 13931  003EEE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 13932  003EF0  0E64               	movlw	100
 13933  003EF2  6E09               	movwf	___awdiv@divisor^0,c
 13934  003EF4  EC85  F028         	call	___awdiv	;wreg free
 13935  003EF8  C007  F018         	movff	?___awdiv,DCmotors_setPWM@PWMduty
 13936  003EFC  C008  F019         	movff	?___awdiv+1,DCmotors_setPWM@PWMduty+1
 13937  003F00                     l5210:
 13938                           
 13939                           ;DC_motors.c: 61:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
 13940  003F00  EE20 F002          	lfsr	2,2
 13941  003F04  500F               	movf	DCmotors_setPWM@m^0,w,c
 13942  003F06  26D9               	addwf	fsr2l,f,c
 13943  003F08  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13944  003F0A  22DA               	addwfc	fsr2h,f,c
 13945  003F0C  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 13946  003F10  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 13947  003F14  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 13948  003F18  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 13949  003F1C  C018  FFDF         	movff	DCmotors_setPWM@PWMduty,indf2
 13950  003F20                     
 13951                           ;DC_motors.c: 63:  if (m->direction){
 13952  003F20  EE20 F001          	lfsr	2,1
 13953  003F24  500F               	movf	DCmotors_setPWM@m^0,w,c
 13954  003F26  26D9               	addwf	fsr2l,f,c
 13955  003F28  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13956  003F2A  22DA               	addwfc	fsr2h,f,c
 13957  003F2C  50DF               	movf	indf2,w,c
 13958  003F2E  B4D8               	btfsc	status,2,c
 13959  003F30  EF9C  F01F         	goto	u6101
 13960  003F34  EF9E  F01F         	goto	u6100
 13961  003F38                     u6101:
 13962  003F38  EFD3  F01F         	goto	l5216
 13963  003F3C                     u6100:
 13964  003F3C                     
 13965                           ;DC_motors.c: 64:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
 13966  003F3C  EE20 F004          	lfsr	2,4
 13967  003F40  500F               	movf	DCmotors_setPWM@m^0,w,c
 13968  003F42  26D9               	addwf	fsr2l,f,c
 13969  003F44  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13970  003F46  22DA               	addwfc	fsr2h,f,c
 13971  003F48  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 13972  003F4C  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 13973  003F50  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 13974  003F54  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 13975  003F58  EE10 F004          	lfsr	1,4
 13976  003F5C  500F               	movf	DCmotors_setPWM@m^0,w,c
 13977  003F5E  26E1               	addwf	fsr1l,f,c
 13978  003F60  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13979  003F62  22E2               	addwfc	fsr1h,f,c
 13980  003F64  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
 13981  003F68  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
 13982  003F6C  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 13983  003F70  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 13984  003F74  50E7               	movf	indf1,w,c
 13985  003F76  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
 13986  003F78  EE10 F006          	lfsr	1,6
 13987  003F7C  500F               	movf	DCmotors_setPWM@m^0,w,c
 13988  003F7E  26E1               	addwf	fsr1l,f,c
 13989  003F80  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 13990  003F82  22E2               	addwfc	fsr1h,f,c
 13991  003F84  50E7               	movf	indf1,w,c
 13992  003F86  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
 13993  003F88  0E01               	movlw	1
 13994  003F8A  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
 13995  003F8C  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
 13996  003F8E  EFCB  F01F         	goto	u6114
 13997  003F92                     u6115:
 13998  003F92  90D8               	bcf	status,0,c
 13999  003F94  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 14000  003F96                     u6114:
 14001  003F96  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 14002  003F98  EFC9  F01F         	goto	u6115
 14003  003F9C  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
 14004  003F9E  1015               	iorwf	(??_DCmotors_setPWM+4)^0,w,c
 14005  003FA0  6EDF               	movwf	indf2,c
 14006                           
 14007                           ;DC_motors.c: 65:  } else {
 14008  003FA2  EF07  F020         	goto	l514
 14009  003FA6                     l5216:
 14010                           
 14011                           ;DC_motors.c: 66:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin)))
      +                          );
 14012  003FA6  EE20 F004          	lfsr	2,4
 14013  003FAA  500F               	movf	DCmotors_setPWM@m^0,w,c
 14014  003FAC  26D9               	addwf	fsr2l,f,c
 14015  003FAE  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 14016  003FB0  22DA               	addwfc	fsr2h,f,c
 14017  003FB2  CFDE F011          	movff	postinc2,??_DCmotors_setPWM
 14018  003FB6  CFDD F012          	movff	postdec2,??_DCmotors_setPWM+1
 14019  003FBA  C011  FFD9         	movff	??_DCmotors_setPWM,fsr2l
 14020  003FBE  C012  FFDA         	movff	??_DCmotors_setPWM+1,fsr2h
 14021  003FC2  EE10 F004          	lfsr	1,4
 14022  003FC6  500F               	movf	DCmotors_setPWM@m^0,w,c
 14023  003FC8  26E1               	addwf	fsr1l,f,c
 14024  003FCA  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 14025  003FCC  22E2               	addwfc	fsr1h,f,c
 14026  003FCE  CFE6 F013          	movff	postinc1,??_DCmotors_setPWM+2
 14027  003FD2  CFE5 F014          	movff	postdec1,??_DCmotors_setPWM+3
 14028  003FD6  C013  FFE1         	movff	??_DCmotors_setPWM+2,fsr1l
 14029  003FDA  C014  FFE2         	movff	??_DCmotors_setPWM+3,fsr1h
 14030  003FDE  50E7               	movf	indf1,w,c
 14031  003FE0  6E15               	movwf	(??_DCmotors_setPWM+4)^0,c
 14032  003FE2  EE10 F006          	lfsr	1,6
 14033  003FE6  500F               	movf	DCmotors_setPWM@m^0,w,c
 14034  003FE8  26E1               	addwf	fsr1l,f,c
 14035  003FEA  5010               	movf	(DCmotors_setPWM@m+1)^0,w,c
 14036  003FEC  22E2               	addwfc	fsr1h,f,c
 14037  003FEE  50E7               	movf	indf1,w,c
 14038  003FF0  6E16               	movwf	(??_DCmotors_setPWM+5)^0,c
 14039  003FF2  0E01               	movlw	1
 14040  003FF4  6E17               	movwf	(??_DCmotors_setPWM+6)^0,c
 14041  003FF6  2A16               	incf	(??_DCmotors_setPWM+5)^0,f,c
 14042  003FF8  EF00  F020         	goto	u6124
 14043  003FFC                     u6125:
 14044  003FFC  90D8               	bcf	status,0,c
 14045  003FFE  3617               	rlcf	(??_DCmotors_setPWM+6)^0,f,c
 14046  004000                     u6124:
 14047  004000  2E16               	decfsz	(??_DCmotors_setPWM+5)^0,f,c
 14048  004002  EFFE  F01F         	goto	u6125
 14049  004006  5017               	movf	(??_DCmotors_setPWM+6)^0,w,c
 14050  004008  0AFF               	xorlw	255
 14051  00400A  1415               	andwf	(??_DCmotors_setPWM+4)^0,w,c
 14052  00400C  6EDF               	movwf	indf2,c
 14053  00400E                     l514:
 14054  00400E  0012               	return		;funcret
 14055  004010                     __end_of_DCmotors_setPWM:
 14056                           	callstack 0
 14057                           
 14058 ;; *************** function ___wmul *****************
 14059 ;; Defined at:
 14060 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 14061 ;; Parameters:    Size  Location     Type
 14062 ;;  multiplier      2    0[COMRAM] unsigned int 
 14063 ;;  multiplicand    2    2[COMRAM] unsigned int 
 14064 ;; Auto vars:     Size  Location     Type
 14065 ;;  product         2    4[COMRAM] unsigned int 
 14066 ;; Return value:  Size  Location     Type
 14067 ;;                  2    0[COMRAM] unsigned int 
 14068 ;; Registers used:
 14069 ;;		wreg, status,2, status,0, prodl, prodh
 14070 ;; Tracked objects:
 14071 ;;		On entry : 0/0
 14072 ;;		On exit  : 0/0
 14073 ;;		Unchanged: 0/0
 14074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14078 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14079 ;;Total ram usage:        6 bytes
 14080 ;; Hardware stack levels used: 1
 14081 ;; This function calls:
 14082 ;;		Nothing
 14083 ;; This function is called by:
 14084 ;;		_DCmotors_setPWM
 14085 ;;		_atoi
 14086 ;; This function uses a non-reentrant model
 14087 ;;
 14088                           
 14089                           	psect	text71
 14090  005CA2                     __ptext71:
 14091                           	callstack 0
 14092  005CA2                     ___wmul:
 14093                           	callstack 28
 14094  005CA2  5001               	movf	___wmul@multiplier^0,w,c
 14095  005CA4  0203               	mulwf	___wmul@multiplicand^0,c
 14096  005CA6  CFF3 F005          	movff	prodl,___wmul@product
 14097  005CAA  CFF4 F006          	movff	prodh,___wmul@product+1
 14098  005CAE  5001               	movf	___wmul@multiplier^0,w,c
 14099  005CB0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 14100  005CB2  50F3               	movf	243,w,c
 14101  005CB4  2606               	addwf	(___wmul@product+1)^0,f,c
 14102  005CB6  5002               	movf	(___wmul@multiplier+1)^0,w,c
 14103  005CB8  0203               	mulwf	___wmul@multiplicand^0,c
 14104  005CBA  50F3               	movf	243,w,c
 14105  005CBC  2606               	addwf	(___wmul@product+1)^0,f,c
 14106  005CBE  C005  F001         	movff	___wmul@product,?___wmul
 14107  005CC2  C006  F002         	movff	___wmul@product+1,?___wmul+1
 14108  005CC6  0012               	return		;funcret
 14109  005CC8                     __end_of___wmul:
 14110                           	callstack 0
 14111                           
 14112 ;; *************** function ___awdiv *****************
 14113 ;; Defined at:
 14114 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 14115 ;; Parameters:    Size  Location     Type
 14116 ;;  dividend        2    6[COMRAM] int 
 14117 ;;  divisor         2    8[COMRAM] int 
 14118 ;; Auto vars:     Size  Location     Type
 14119 ;;  quotient        2   12[COMRAM] int 
 14120 ;;  sign            1   11[COMRAM] unsigned char 
 14121 ;;  counter         1   10[COMRAM] unsigned char 
 14122 ;; Return value:  Size  Location     Type
 14123 ;;                  2    6[COMRAM] int 
 14124 ;; Registers used:
 14125 ;;		wreg, status,2, status,0
 14126 ;; Tracked objects:
 14127 ;;		On entry : 0/0
 14128 ;;		On exit  : 0/0
 14129 ;;		Unchanged: 0/0
 14130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14132 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14134 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14135 ;;Total ram usage:        8 bytes
 14136 ;; Hardware stack levels used: 1
 14137 ;; This function calls:
 14138 ;;		Nothing
 14139 ;; This function is called by:
 14140 ;;		_DCmotors_setPWM
 14141 ;;		_efgtoa
 14142 ;; This function uses a non-reentrant model
 14143 ;;
 14144                           
 14145                           	psect	text72
 14146  00510A                     __ptext72:
 14147                           	callstack 0
 14148  00510A                     ___awdiv:
 14149                           	callstack 28
 14150  00510A  0E00               	movlw	0
 14151  00510C  6E0C               	movwf	___awdiv@sign^0,c
 14152  00510E  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 14153  005110  EF8E  F028         	goto	u4650
 14154  005114  EF8C  F028         	goto	u4651
 14155  005118                     u4651:
 14156  005118  EF94  F028         	goto	l4470
 14157  00511C                     u4650:
 14158  00511C  6C09               	negf	___awdiv@divisor^0,c
 14159  00511E  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 14160  005120  B0D8               	btfsc	status,0,c
 14161  005122  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 14162  005124  0E01               	movlw	1
 14163  005126  6E0C               	movwf	___awdiv@sign^0,c
 14164  005128                     l4470:
 14165  005128  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 14166  00512A  EF9B  F028         	goto	u4660
 14167  00512E  EF99  F028         	goto	u4661
 14168  005132                     u4661:
 14169  005132  EFA1  F028         	goto	l4476
 14170  005136                     u4660:
 14171  005136  6C07               	negf	___awdiv@dividend^0,c
 14172  005138  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 14173  00513A  B0D8               	btfsc	status,0,c
 14174  00513C  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 14175  00513E  0E01               	movlw	1
 14176  005140  1A0C               	xorwf	___awdiv@sign^0,f,c
 14177  005142                     l4476:
 14178  005142  0E00               	movlw	0
 14179  005144  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 14180  005146  0E00               	movlw	0
 14181  005148  6E0D               	movwf	___awdiv@quotient^0,c
 14182  00514A  5009               	movf	___awdiv@divisor^0,w,c
 14183  00514C  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 14184  00514E  B4D8               	btfsc	status,2,c
 14185  005150  EFAC  F028         	goto	u4671
 14186  005154  EFAE  F028         	goto	u4670
 14187  005158                     u4671:
 14188  005158  EFD6  F028         	goto	l4498
 14189  00515C                     u4670:
 14190  00515C  0E01               	movlw	1
 14191  00515E  6E0B               	movwf	___awdiv@counter^0,c
 14192  005160  EFB6  F028         	goto	l4484
 14193  005164                     l4482:
 14194  005164  90D8               	bcf	status,0,c
 14195  005166  3609               	rlcf	___awdiv@divisor^0,f,c
 14196  005168  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 14197  00516A  2A0B               	incf	___awdiv@counter^0,f,c
 14198  00516C                     l4484:
 14199  00516C  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 14200  00516E  EFBB  F028         	goto	u4681
 14201  005172  EFBD  F028         	goto	u4680
 14202  005176                     u4681:
 14203  005176  EFB2  F028         	goto	l4482
 14204  00517A                     u4680:
 14205  00517A                     l4486:
 14206  00517A  90D8               	bcf	status,0,c
 14207  00517C  360D               	rlcf	___awdiv@quotient^0,f,c
 14208  00517E  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 14209  005180  5009               	movf	___awdiv@divisor^0,w,c
 14210  005182  5C07               	subwf	___awdiv@dividend^0,w,c
 14211  005184  500A               	movf	(___awdiv@divisor+1)^0,w,c
 14212  005186  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 14213  005188  A0D8               	btfss	status,0,c
 14214  00518A  EFC9  F028         	goto	u4691
 14215  00518E  EFCB  F028         	goto	u4690
 14216  005192                     u4691:
 14217  005192  EFD0  F028         	goto	l4494
 14218  005196                     u4690:
 14219  005196  5009               	movf	___awdiv@divisor^0,w,c
 14220  005198  5E07               	subwf	___awdiv@dividend^0,f,c
 14221  00519A  500A               	movf	(___awdiv@divisor+1)^0,w,c
 14222  00519C  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 14223  00519E  800D               	bsf	___awdiv@quotient^0,0,c
 14224  0051A0                     l4494:
 14225  0051A0  90D8               	bcf	status,0,c
 14226  0051A2  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 14227  0051A4  3209               	rrcf	___awdiv@divisor^0,f,c
 14228  0051A6  2E0B               	decfsz	___awdiv@counter^0,f,c
 14229  0051A8  EFBD  F028         	goto	l4486
 14230  0051AC                     l4498:
 14231  0051AC  500C               	movf	___awdiv@sign^0,w,c
 14232  0051AE  B4D8               	btfsc	status,2,c
 14233  0051B0  EFDC  F028         	goto	u4701
 14234  0051B4  EFDE  F028         	goto	u4700
 14235  0051B8                     u4701:
 14236  0051B8  EFE2  F028         	goto	l4502
 14237  0051BC                     u4700:
 14238  0051BC  6C0D               	negf	___awdiv@quotient^0,c
 14239  0051BE  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 14240  0051C0  B0D8               	btfsc	status,0,c
 14241  0051C2  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 14242  0051C4                     l4502:
 14243  0051C4  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 14244  0051C8  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 14245  0051CC  0012               	return		;funcret
 14246  0051CE                     __end_of___awdiv:
 14247                           	callstack 0
 14248                           
 14249 ;; *************** function _DCmotors_adjustval *****************
 14250 ;; Defined at:
 14251 ;;		line 256 in file "DC_motors.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;		None
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;  i               1    2[COMRAM] unsigned char 
 14256 ;; Return value:  Size  Location     Type
 14257 ;;                  1    wreg      void 
 14258 ;; Registers used:
 14259 ;;		wreg, status,2, status,0
 14260 ;; Tracked objects:
 14261 ;;		On entry : 0/0
 14262 ;;		On exit  : 0/0
 14263 ;;		Unchanged: 0/0
 14264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14268 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14269 ;;Total ram usage:        3 bytes
 14270 ;; Hardware stack levels used: 1
 14271 ;; This function calls:
 14272 ;;		Nothing
 14273 ;; This function is called by:
 14274 ;;		_DCmotors_calibration
 14275 ;; This function uses a non-reentrant model
 14276 ;;
 14277                           
 14278                           	psect	text73
 14279  005328                     __ptext73:
 14280                           	callstack 0
 14281  005328                     _DCmotors_adjustval:
 14282                           	callstack 29
 14283  005328                     
 14284                           ;DC_motors.c: 258:     unsigned char i;;DC_motors.c: 259:     for (i=0; i<10; i++) {
 14285  005328  0E00               	movlw	0
 14286  00532A  6E03               	movwf	DCmotors_adjustval@i^0,c
 14287  00532C                     l595:
 14288                           
 14289                           ;DC_motors.c: 260:         if (PORTFbits.RF2) {
 14290  00532C  A48E               	btfss	142,2,c	;volatile
 14291  00532E  EF9B  F029         	goto	u6561
 14292  005332  EF9D  F029         	goto	u6560
 14293  005336                     u6561:
 14294  005336  EFBE  F029         	goto	l597
 14295  00533A                     u6560:
 14296  00533A                     
 14297                           ;DC_motors.c: 261:             LATDbits.LATD7 = 1;
 14298  00533A  8E7C               	bsf	124,7,c	;volatile
 14299  00533C                     
 14300                           ;DC_motors.c: 262:             DCmotors_upper+=5;
 14301  00533C  0E05               	movlw	5
 14302  00533E  0100               	movlb	0	; () banked
 14303  005340  27FD               	addwf	_DCmotors_upper& (0+255),f,b	;volatile
 14304                           
 14305                           ;DC_motors.c: 263:             DCmotors_lower-=5;
 14306  005342  0E05               	movlw	5
 14307  005344  5FFE               	subwf	_DCmotors_lower& (0+255),f,b	;volatile
 14308  005346                     
 14309                           ; BSR set to: 0
 14310                           ;DC_motors.c: 264:             _delay((unsigned long)((100)*(64000000/4000.0)));
 14311  005346  0E09               	movlw	9
 14312  005348  6E02               	movwf	(??_DCmotors_adjustval+1)^0,c
 14313  00534A  0E1E               	movlw	30
 14314  00534C  6E01               	movwf	??_DCmotors_adjustval^0,c
 14315  00534E  0EE4               	movlw	228
 14316  005350                     u7427:
 14317  005350  2EE8               	decfsz	wreg,f,c
 14318  005352  D7FE               	bra	u7427
 14319  005354  2E01               	decfsz	??_DCmotors_adjustval^0,f,c
 14320  005356  D7FC               	bra	u7427
 14321  005358  2E02               	decfsz	(??_DCmotors_adjustval+1)^0,f,c
 14322  00535A  D7FA               	bra	u7427
 14323  00535C  D000               	nop2	
 14324  00535E                     
 14325                           ;DC_motors.c: 265:             LATDbits.LATD7 = 0;
 14326  00535E  9E7C               	bcf	124,7,c	;volatile
 14327  005360                     l5512:
 14328                           
 14329                           ;DC_motors.c: 266:             _delay((unsigned long)((1000)*(64000000/4000.0)));
 14330  005360  0E52               	movlw	82
 14331  005362  6E02               	movwf	(??_DCmotors_adjustval+1)^0,c
 14332  005364  0E2B               	movlw	43
 14333  005366  6E01               	movwf	??_DCmotors_adjustval^0,c
 14334  005368  0E00               	movlw	0
 14335  00536A                     u7437:
 14336  00536A  2EE8               	decfsz	wreg,f,c
 14337  00536C  D7FE               	bra	u7437
 14338  00536E  2E01               	decfsz	??_DCmotors_adjustval^0,f,c
 14339  005370  D7FC               	bra	u7437
 14340  005372  2E02               	decfsz	(??_DCmotors_adjustval+1)^0,f,c
 14341  005374  D7FA               	bra	u7437
 14342  005376  D000               	nop2	
 14343                           
 14344                           ;DC_motors.c: 267:         } else if (PORTFbits.RF3) {
 14345  005378  EFDA  F029         	goto	l5524
 14346  00537C                     l597:
 14347  00537C  A68E               	btfss	142,3,c	;volatile
 14348  00537E  EFC3  F029         	goto	u6571
 14349  005382  EFC5  F029         	goto	u6570
 14350  005386                     u6571:
 14351  005386  EFDA  F029         	goto	l5524
 14352  00538A                     u6570:
 14353  00538A                     
 14354                           ;DC_motors.c: 268:             LATHbits.LATH3 = 1;
 14355  00538A  8680               	bsf	128,3,c	;volatile
 14356  00538C                     
 14357                           ;DC_motors.c: 269:             DCmotors_upper-=5;
 14358  00538C  0E05               	movlw	5
 14359  00538E  0100               	movlb	0	; () banked
 14360  005390  5FFD               	subwf	_DCmotors_upper& (0+255),f,b	;volatile
 14361                           
 14362                           ;DC_motors.c: 270:             DCmotors_lower+=5;
 14363  005392  0E05               	movlw	5
 14364  005394  27FE               	addwf	_DCmotors_lower& (0+255),f,b	;volatile
 14365  005396                     
 14366                           ; BSR set to: 0
 14367                           ;DC_motors.c: 271:             _delay((unsigned long)((100)*(64000000/4000.0)));
 14368  005396  0E09               	movlw	9
 14369  005398  6E02               	movwf	(??_DCmotors_adjustval+1)^0,c
 14370  00539A  0E1E               	movlw	30
 14371  00539C  6E01               	movwf	??_DCmotors_adjustval^0,c
 14372  00539E  0EE4               	movlw	228
 14373  0053A0                     u7447:
 14374  0053A0  2EE8               	decfsz	wreg,f,c
 14375  0053A2  D7FE               	bra	u7447
 14376  0053A4  2E01               	decfsz	??_DCmotors_adjustval^0,f,c
 14377  0053A6  D7FC               	bra	u7447
 14378  0053A8  2E02               	decfsz	(??_DCmotors_adjustval+1)^0,f,c
 14379  0053AA  D7FA               	bra	u7447
 14380  0053AC  D000               	nop2	
 14381  0053AE                     
 14382                           ;DC_motors.c: 272:             LATHbits.LATH3 = 0;
 14383  0053AE  9680               	bcf	128,3,c	;volatile
 14384  0053B0  EFB0  F029         	goto	l5512
 14385  0053B4                     l5524:
 14386                           
 14387                           ;DC_motors.c: 275:     }
 14388  0053B4  2A03               	incf	DCmotors_adjustval@i^0,f,c
 14389  0053B6  0E09               	movlw	9
 14390  0053B8  6403               	cpfsgt	DCmotors_adjustval@i^0,c
 14391  0053BA  EFE1  F029         	goto	u6581
 14392  0053BE  EFE3  F029         	goto	u6580
 14393  0053C2                     u6581:
 14394  0053C2  EF96  F029         	goto	l595
 14395  0053C6                     u6580:
 14396  0053C6  0012               	return		;funcret
 14397  0053C8                     __end_of_DCmotors_adjustval:
 14398                           	callstack 0
 14399                           
 14400 ;; *************** function _ADC_init *****************
 14401 ;; Defined at:
 14402 ;;		line 8 in file "ADC.c"
 14403 ;; Parameters:    Size  Location     Type
 14404 ;;		None
 14405 ;; Auto vars:     Size  Location     Type
 14406 ;;		None
 14407 ;; Return value:  Size  Location     Type
 14408 ;;                  1    wreg      void 
 14409 ;; Registers used:
 14410 ;;		wreg, status,2
 14411 ;; Tracked objects:
 14412 ;;		On entry : 0/0
 14413 ;;		On exit  : 0/0
 14414 ;;		Unchanged: 0/0
 14415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14420 ;;Total ram usage:        0 bytes
 14421 ;; Hardware stack levels used: 1
 14422 ;; This function calls:
 14423 ;;		Nothing
 14424 ;; This function is called by:
 14425 ;;		_main
 14426 ;; This function uses a non-reentrant model
 14427 ;;
 14428                           
 14429                           	psect	text74
 14430  005D4A                     __ptext74:
 14431                           	callstack 0
 14432  005D4A                     _ADC_init:
 14433                           	callstack 30
 14434  005D4A                     
 14435                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
 14436  005D4A  8C86               	bsf	134,6,c	;volatile
 14437                           
 14438                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
 14439  005D4C  010E               	movlb	14	; () banked
 14440  005D4E  8DB4               	bsf	180,6,b	;volatile
 14441                           
 14442                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
 14443  005D50  010F               	movlb	15	; () banked
 14444  005D52  9958               	bcf	88,4,b	;volatile
 14445  005D54                     
 14446                           ; BSR set to: 15
 14447                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
 14448  005D54  0EFC               	movlw	-4
 14449  005D56  1758               	andwf	88,f,b	;volatile
 14450                           
 14451                           ;ADC.c: 16:     ADPCH=0b101110;
 14452  005D58  0E2E               	movlw	46
 14453  005D5A  6F5F               	movwf	95,b	;volatile
 14454  005D5C                     
 14455                           ; BSR set to: 15
 14456                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
 14457  005D5C  9460               	bcf	96,2,c	;volatile
 14458  005D5E                     
 14459                           ; BSR set to: 15
 14460                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
 14461  005D5E  8860               	bsf	96,4,c	;volatile
 14462  005D60                     
 14463                           ; BSR set to: 15
 14464                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
 14465  005D60  8E60               	bsf	96,7,c	;volatile
 14466  005D62                     
 14467                           ; BSR set to: 15
 14468  005D62  0012               	return		;funcret
 14469  005D64                     __end_of_ADC_init:
 14470                           	callstack 0
 14471                           
 14472                           	psect	rparam
 14473  0000                     
 14474                           	psect	idloc
 14475                           
 14476                           ;Config register IDLOC0 @ 0x200000
 14477                           ;	unspecified, using default values
 14478  200000                     	org	2097152
 14479  200000  0FFF               	dw	4095
 14480                           
 14481                           ;Config register IDLOC1 @ 0x200002
 14482                           ;	unspecified, using default values
 14483  200002                     	org	2097154
 14484  200002  0FFF               	dw	4095
 14485                           
 14486                           ;Config register IDLOC2 @ 0x200004
 14487                           ;	unspecified, using default values
 14488  200004                     	org	2097156
 14489  200004  0FFF               	dw	4095
 14490                           
 14491                           ;Config register IDLOC3 @ 0x200006
 14492                           ;	unspecified, using default values
 14493  200006                     	org	2097158
 14494  200006  0FFF               	dw	4095
 14495                           
 14496                           ;Config register IDLOC4 @ 0x200008
 14497                           ;	unspecified, using default values
 14498  200008                     	org	2097160
 14499  200008  0FFF               	dw	4095
 14500                           
 14501                           ;Config register IDLOC5 @ 0x20000A
 14502                           ;	unspecified, using default values
 14503  20000A                     	org	2097162
 14504  20000A  0FFF               	dw	4095
 14505                           
 14506                           ;Config register IDLOC6 @ 0x20000C
 14507                           ;	unspecified, using default values
 14508  20000C                     	org	2097164
 14509  20000C  0FFF               	dw	4095
 14510                           
 14511                           ;Config register IDLOC7 @ 0x20000E
 14512                           ;	unspecified, using default values
 14513  20000E                     	org	2097166
 14514  20000E  0FFF               	dw	4095
 14515                           
 14516                           	psect	config
 14517                           
 14518                           ;Config register CONFIG1L @ 0x300000
 14519                           ;	External Oscillator mode Selection bits
 14520                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14521                           ;	Power-up default value for COSC bits
 14522                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14523  300000                     	org	3145728
 14524  300000  AA                 	db	170
 14525                           
 14526                           ;Config register CONFIG1H @ 0x300001
 14527                           ;	unspecified, using default values
 14528                           ;	Clock Out Enable bit
 14529                           ;	CLKOUTEN = 0x1, unprogrammed default
 14530                           ;	Clock Switch Enable bit
 14531                           ;	CSWEN = 0x1, unprogrammed default
 14532                           ;	Fail-Safe Clock Monitor Enable bit
 14533                           ;	FCMEN = 0x1, unprogrammed default
 14534  300001                     	org	3145729
 14535  300001  FF                 	db	255
 14536                           
 14537                           ;Config register CONFIG2L @ 0x300002
 14538                           ;	unspecified, using default values
 14539                           ;	Master Clear Enable bit
 14540                           ;	MCLRE = 0x1, unprogrammed default
 14541                           ;	Power-up Timer Enable bit
 14542                           ;	PWRTE = 0x1, unprogrammed default
 14543                           ;	Low-power BOR enable bit
 14544                           ;	LPBOREN = 0x1, unprogrammed default
 14545                           ;	Brown-out Reset Enable bits
 14546                           ;	BOREN = 0x3, unprogrammed default
 14547  300002                     	org	3145730
 14548  300002  FF                 	db	255
 14549                           
 14550                           ;Config register CONFIG2H @ 0x300003
 14551                           ;	unspecified, using default values
 14552                           ;	Brown Out Reset Voltage selection bits
 14553                           ;	BORV = 0x3, unprogrammed default
 14554                           ;	ZCD Disable bit
 14555                           ;	ZCD = 0x1, unprogrammed default
 14556                           ;	PPSLOCK bit One-Way Set Enable bit
 14557                           ;	PPS1WAY = 0x1, unprogrammed default
 14558                           ;	Stack Full/Underflow Reset Enable bit
 14559                           ;	STVREN = 0x1, unprogrammed default
 14560                           ;	Debugger Enable bit
 14561                           ;	DEBUG = 0x1, unprogrammed default
 14562                           ;	Extended Instruction Set Enable bit
 14563                           ;	XINST = 0x1, unprogrammed default
 14564  300003                     	org	3145731
 14565  300003  FF                 	db	255
 14566                           
 14567                           ;Config register CONFIG3L @ 0x300004
 14568                           ;	WDT Period Select bits
 14569                           ;	WDTCPS = 0x1F, unprogrammed default
 14570                           ;	WDT operating mode
 14571                           ;	WDTE = OFF, WDT Disabled
 14572  300004                     	org	3145732
 14573  300004  9F                 	db	159
 14574                           
 14575                           ;Config register CONFIG3H @ 0x300005
 14576                           ;	unspecified, using default values
 14577                           ;	WDT Window Select bits
 14578                           ;	WDTCWS = 0x7, unprogrammed default
 14579                           ;	WDT input clock selector
 14580                           ;	WDTCCS = 0x7, unprogrammed default
 14581  300005                     	org	3145733
 14582  300005  FF                 	db	255
 14583                           
 14584                           ;Config register CONFIG4L @ 0x300006
 14585                           ;	unspecified, using default values
 14586                           ;	Write Protection Block 0
 14587                           ;	WRT0 = 0x1, unprogrammed default
 14588                           ;	Write Protection Block 1
 14589                           ;	WRT1 = 0x1, unprogrammed default
 14590                           ;	Write Protection Block 2
 14591                           ;	WRT2 = 0x1, unprogrammed default
 14592                           ;	Write Protection Block 3
 14593                           ;	WRT3 = 0x1, unprogrammed default
 14594                           ;	Write Protection Block 3
 14595                           ;	WRT4 = 0x1, unprogrammed default
 14596                           ;	Write Protection Block 3
 14597                           ;	WRT5 = 0x1, unprogrammed default
 14598                           ;	Write Protection Block 3
 14599                           ;	WRT6 = 0x1, unprogrammed default
 14600                           ;	Write Protection Block 3
 14601                           ;	WRT7 = 0x1, unprogrammed default
 14602  300006                     	org	3145734
 14603  300006  FF                 	db	255
 14604                           
 14605                           ;Config register CONFIG4H @ 0x300007
 14606                           ;	unspecified, using default values
 14607                           ;	Configuration Register Write Protection bit
 14608                           ;	WRTC = 0x1, unprogrammed default
 14609                           ;	Boot Block Write Protection bit
 14610                           ;	WRTB = 0x1, unprogrammed default
 14611                           ;	Data EEPROM Write Protection bit
 14612                           ;	WRTD = 0x1, unprogrammed default
 14613                           ;	Scanner Enable bit
 14614                           ;	SCANE = 0x1, unprogrammed default
 14615                           ;	Low Voltage Programming Enable bit
 14616                           ;	LVP = 0x1, unprogrammed default
 14617  300007                     	org	3145735
 14618  300007  FF                 	db	255
 14619                           
 14620                           ;Config register CONFIG5L @ 0x300008
 14621                           ;	unspecified, using default values
 14622                           ;	UserNVM Program Memory Code Protection bit
 14623                           ;	CP = 0x1, unprogrammed default
 14624                           ;	DataNVM Memory Code Protection bit
 14625                           ;	CPD = 0x1, unprogrammed default
 14626  300008                     	org	3145736
 14627  300008  FF                 	db	255
 14628                           
 14629                           ;Config register CONFIG5H @ 0x300009
 14630                           ;	unspecified, using default values
 14631  300009                     	org	3145737
 14632  300009  FF                 	db	255
 14633                           
 14634                           ;Config register CONFIG6L @ 0x30000A
 14635                           ;	unspecified, using default values
 14636                           ;	Table Read Protection Block 0
 14637                           ;	EBTR0 = 0x1, unprogrammed default
 14638                           ;	Table Read Protection Block 1
 14639                           ;	EBTR1 = 0x1, unprogrammed default
 14640                           ;	Table Read Protection Block 2
 14641                           ;	EBTR2 = 0x1, unprogrammed default
 14642                           ;	Table Read Protection Block 3
 14643                           ;	EBTR3 = 0x1, unprogrammed default
 14644                           ;	Table Read Protection Block 4
 14645                           ;	EBTR4 = 0x1, unprogrammed default
 14646                           ;	Table Read Protection Block 5
 14647                           ;	EBTR5 = 0x1, unprogrammed default
 14648                           ;	Table Read Protection Block 6
 14649                           ;	EBTR6 = 0x1, unprogrammed default
 14650                           ;	Table Read Protection Block 7
 14651                           ;	EBTR7 = 0x1, unprogrammed default
 14652  30000A                     	org	3145738
 14653  30000A  FF                 	db	255
 14654                           
 14655                           ;Config register CONFIG6H @ 0x30000B
 14656                           ;	unspecified, using default values
 14657                           ;	Boot Block Table Read Protection bit
 14658                           ;	EBTRB = 0x1, unprogrammed default
 14659  30000B                     	org	3145739
 14660  30000B  FF                 	db	255
 14661                           tosu	equ	0xFFF
 14662                           tosh	equ	0xFFE
 14663                           tosl	equ	0xFFD
 14664                           stkptr	equ	0xFFC
 14665                           pclatu	equ	0xFFB
 14666                           pclath	equ	0xFFA
 14667                           pcl	equ	0xFF9
 14668                           tblptru	equ	0xFF8
 14669                           tblptrh	equ	0xFF7
 14670                           tblptrl	equ	0xFF6
 14671                           tablat	equ	0xFF5
 14672                           prodh	equ	0xFF4
 14673                           prodl	equ	0xFF3
 14674                           indf0	equ	0xFEF
 14675                           postinc0	equ	0xFEE
 14676                           postdec0	equ	0xFED
 14677                           preinc0	equ	0xFEC
 14678                           plusw0	equ	0xFEB
 14679                           fsr0h	equ	0xFEA
 14680                           fsr0l	equ	0xFE9
 14681                           wreg	equ	0xFE8
 14682                           indf1	equ	0xFE7
 14683                           postinc1	equ	0xFE6
 14684                           postdec1	equ	0xFE5
 14685                           preinc1	equ	0xFE4
 14686                           plusw1	equ	0xFE3
 14687                           fsr1h	equ	0xFE2
 14688                           fsr1l	equ	0xFE1
 14689                           bsr	equ	0xFE0
 14690                           indf2	equ	0xFDF
 14691                           postinc2	equ	0xFDE
 14692                           postdec2	equ	0xFDD
 14693                           preinc2	equ	0xFDC
 14694                           plusw2	equ	0xFDB
 14695                           fsr2h	equ	0xFDA
 14696                           fsr2l	equ	0xFD9
 14697                           status	equ	0xFD8

Data Sizes:
    Strings     73
    Constant    0
    Data        0
    BSS         189
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160    138     159
    BANK1           256    124     234
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_1(CODE[54]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_1(CODE[54]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 54
		 -> STR_1(CODE[54]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_1(CODE[54]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2808_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf(BANK1[100]), 

    DCmotors_testing@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    DCmotors_testing@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_calibration@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    DCmotors_calibration@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnright@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnright@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnleft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnleft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    right@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    right@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    right@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    right@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    left@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    left@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    left@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    left@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    DCmotors_setPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    DCmotors_setPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    DCmotors_setPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> colourcards_testing@buf(BANK1[100]), 

    colourclick_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> colourclick_calibration@current(COMRAM[8]), colourclick_calibration@initial(COMRAM[8]), colourcards_testing@current(BANK1[8]), main@current(BANK0[8]), 

    colourcards_readRGBC@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    colourcards_readRGBC@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    colourcards_readRGBC@tmpval	PTR struct . size(2) Largest target is 8
		 -> main@current(BANK0[8]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S45$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S45$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_colourcards_testing
    _colourclick_init->_colourclick_writetoaddr
    _colourclick_writetoaddr->_I2C_2_Master_Write
    _colourclickLEDs_init->_colourclickLEDs_C
    _colourclick_calibration->_colourclick_readRGBC
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _sendStringSerial4->_sendCharSerial4
    _colourcards_readRGBC->___fldiv
    _colourcards_readRGBC->_turnleft
    _colourcards_readRGBC->_turnright
    _colourclick_readRGBC->_colourclick_readB
    _colourclick_readRGBC->_colourclick_readC
    _colourclick_readRGBC->_colourclick_readG
    _colourclick_readRGBC->_colourclick_readR
    _colourclick_readR->_I2C_2_Master_Read
    _colourclick_readG->_I2C_2_Master_Read
    _colourclick_readC->_I2C_2_Master_Read
    _colourclick_readB->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___flge->___flmul
    ___fldiv->___xxtofl
    _checkbatterylevel->_ADC_getval
    _DCmotors_testing->_turnleft
    _DCmotors_testing->_turnright
    _reverse->_DCmotors_setPWM
    _forward->_DCmotors_setPWM
    _DCmotors_calibration->_turnleft
    _DCmotors_calibration->_turnright
    _turnright->_left
    _turnright->_right
    _turnleft->_left
    _turnleft->_right
    _right->_DCmotors_setPWM
    _left->_DCmotors_setPWM
    _stop->_DCmotors_setPWM
    _DCmotors_setPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _colourcards_testing->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_colourcards_testing

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0  136082
                                             91 COMRAM     2     2      0
                                            112 BANK0     26    26      0
                           _ADC_init
               _DCmotors_calibration
                      _DCmotors_init
                   _DCmotors_testing
                        _USART4_init
                  _checkbatterylevel
               _colourcards_readRGBC
                _colourcards_testing
                  _colourclickLEDs_C
            _colourclick_calibration
                   _colourclick_init
               _colourclick_readRGBC
                            _forward
 ---------------------------------------------------------------------------------
 (1) _colourclick_init                                     1     1      0     360
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
               _colourclickLEDs_init
            _colourclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colourclick_writetoaddr                              2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclickLEDs_init                                 0     0      0      66
                  _colourclickLEDs_C
 ---------------------------------------------------------------------------------
 (3) _colourclickLEDs_C                                    1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colourclick_calibration                             19    19      0    1210
                                             13 COMRAM    19    19      0
               _colourclick_readRGBC
 ---------------------------------------------------------------------------------
 (1) _colourcards_testing                                126   126      0   44201
                                             89 COMRAM     2     2      0
                                              0 BANK1    124   124      0
                            ___fldiv
                           ___xxtofl
               _colourclick_readRGBC
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             38    10     28   38559
                                             76 BANK0     36     8     28
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   38200
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   37824
                                             71 COMRAM    10     4      6
                                             56 BANK0     20    20      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   27062
                                             59 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1440
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colourcards_readRGBC                                22    16      6   37501
                                             39 COMRAM    22    16      6
                            ___fldiv
                             ___flge
                           ___xxtofl
               _colourclick_readRGBC
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (1) _colourclick_readRGBC                                 2     0      2     920
                                             11 COMRAM     2     0      2
                  _colourclick_readB
                  _colourclick_readC
                  _colourclick_readG
                  _colourclick_readR
 ---------------------------------------------------------------------------------
 (2) _colourclick_readR                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readG                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readC                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colourclick_readB                                    7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1224
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    4438
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2909
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _checkbatterylevel                                    1     1      0      46
                                              1 COMRAM     1     1      0
                         _ADC_getval
 ---------------------------------------------------------------------------------
 (2) _ADC_getval                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_testing                                     6     2      4   27293
                                             39 COMRAM     6     2      4
                            _forward
                            _reverse
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _reverse                                              6     2      4    2971
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _forward                                              6     2      4    2971
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              0 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_calibration                                 6     2      4   20869
                                             39 COMRAM     6     2      4
                 _DCmotors_adjustval
                               _stop
                           _turnleft
                          _turnright
 ---------------------------------------------------------------------------------
 (2) _turnright                                            6     0      6    8442
                                             33 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _turnleft                                             6     0      6    7758
                                             33 COMRAM     6     0      6
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (3) _right                                                8     2      6    3015
                                             25 COMRAM     8     2      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (3) _left                                                 8     2      6    3015
                                             25 COMRAM     8     2      6
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4295
                                             25 COMRAM     6     2      4
                    _DCmotors_setPWM
 ---------------------------------------------------------------------------------
 (2) _DCmotors_setPWM                                     11     9      2    2339
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     599
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     648
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _DCmotors_adjustval                                   3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_calibration
     _DCmotors_adjustval
     _stop
       _DCmotors_setPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _turnleft
       _left
         _DCmotors_setPWM
       _right
         _DCmotors_setPWM
     _turnright
       _left
       _right
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _DCmotors_testing
     _forward
       _DCmotors_setPWM
     _reverse
       _DCmotors_setPWM
     _stop
     _turnleft
     _turnright
   _USART4_init
   _checkbatterylevel
     _ADC_getval
   _colourcards_readRGBC
     ___fldiv
       ___xxtofl (ARG)
     ___flge
       ___flmul (ARG)
     ___xxtofl
     _colourclick_readRGBC
       _colourclick_readB
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _colourclick_readC
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readG
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _colourclick_readR
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _forward
     _reverse
     _stop
     _turnleft
     _turnright
   _colourcards_testing
     ___fldiv
     ___xxtofl
     _colourclick_readRGBC
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
   _colourclickLEDs_C
   _colourclick_calibration
     _colourclick_readRGBC
   _colourclick_init
     _I2C_2_Master_Init
     _colourclickLEDs_init
       _colourclickLEDs_C
     _colourclick_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colourclick_readRGBC
   _forward

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      3C      10       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     7C      EA       7       91.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8A      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     224       8        0.0%
DATA                 0      0     224       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 12:10:52 2021

                    ___fldiv@aexp 0027                      ___fldiv@bexp 0026  
                    ___fldiv@sign 001F                                l71 46EE  
                              l75 470A             __end_of_DCmotors_init 5930  
                    ___awdiv@sign 000C               ___wmul@multiplicand 0003  
                             l210 5B12                               l301 5DA8  
                             l213 5D08                               l222 58DE  
                             l310 5CE8                               l216 57EE  
                             l160 22BA                               l304 5DB6  
                             l225 588E                               l241 4DEC  
                             l234 4DA4                               l219 583E  
                             l163 2314                               l260 5D62  
                             l340 5C7A                               l228 56FA  
                             l236 4DB2                               l245 4E96  
                             l406 5D66                               l263 5D7E  
                             l343 5CA0                               l415 5C20  
                             l239 4DDE                               l600 53C6  
                             l352 5DD8                               l265 5D8C  
                             l409 5D7A                               l169 3E3A  
                             l337 5C78                               l514 400E  
                             l522 54CA                               l530 5430  
                             l266 5D92                               l346 5DE2  
                             l507 592E                               l603 3A1C  
                             l355 5DC2                               l517 5D26  
                             l349 5DEC                               l542 5576  
                             l550 4DA0                               l358 5A9A  
                             l543 5578                               l551 4DA2  
                             l295 5DCE                               l527 54FA  
                             l535 5460                               l519 5D28  
                             l626 5CC6                               l546 4D6A  
                             l554 4C74                               l298 5DF6  
                             l564 59CE                               l572 479E  
                             l740 44EE                               l900 5B82  
                             l397 5D48                               l558 4CAA  
                             l582 4826                               l559 4CAC  
                             l592 48AE                               l576 47BA  
                             l569 597E                               l577 47EC  
                             l753 4652                               l586 4842  
                             l595 532C                               l587 4874  
                             l923 49B4                               l597 537C  
                             l870 527C                               l857 51CC  
                             l891 4A72                               l885 5326  
                             l896 4AB8                               _abs 5A9C  
                             _pad 5044                      ___awmod@sign 0006  
                             wreg 000FE8                      ___flmul@aexp 0012  
                    ___flmul@bexp 0013                      ___flmul@sign 000D  
                    ___flmul@temp 0018             ?_colourclick_readRGBC 000C  
                    ___flmul@prod 0014               __size_of_ADC_getval 0018  
                    ___fltol@exp1 000A        colourcards_readRGBC@tmpval 0028  
                            l1210 3362                              ?_abs 0013  
                            l1221 3420                              l1213 3326  
                            l1222 340E                              l1208 3502  
                            l1240 2E04                              l1304 574C  
                            l1250 3060                              l1154 2A6E  
                            l1219 33A8                              l1171 2B88  
                            l1163 2D3E                              l1155 2A5C  
                            l1244 3168                              l1180 2C58  
                            l1156 2A22                              l1181 2C46  
                            l1350 50CC                              l1414 1238  
                            l1247 2FFA                              l1520 5AD2  
                            l1352 5108                              l1360 35AC  
                            l4000 2AF6                              l1504 55D6  
                            l1281 4066                              l1257 312A  
                            l1249 3072                              l1505 55DE  
                            l1610 5DF8                              l4010 2B68  
                            l4002 2AFC                              l1442 1678  
                            l1523 5ADA                              l1347 508A  
                            l1515 4BB6                              l1284 41C2  
                            l4020 2BC2                              l4004 2B22  
                            l4012 2B78                              l1196 5A14  
                            l4102 5CA2                              l4110 436C  
                            l1622 5BF0                              l1358 35A4  
                            l4030 2BF2                              l4022 2BCC  
                            l4014 2B9E                              l4006 2B56  
                            l1295 415A                              l1551 435E  
                            l1607 5A58                              l4104 5CBE  
                            l4200 31B6                              l1288 40FE  
                            l4120 43CC                              l4112 437A  
                            l4040 2C1A                              l4032 2BF6  
                            l4024 2BDA                              l4016 2BAE  
                            l4008 2B58                              l1560 3C2E  
                            l1616 569C                              l5000 1754  
                            l1641 563E                              l4210 31DC  
                            l4202 31B8                              l1570 5BBA  
                            l1554 4366                              l4130 4416  
                            l4122 43D0                              l4114 439A  
                            l1378 37E6                              l4050 2C74  
                            l4042 2C28                              l4034 2C06  
                            l4026 2BDC                              l5010 1788  
                            l5002 1762                              l1626 4F78  
                            l1490 287E                              l1563 3B72  
                            l4300 3474                              l4220 321C  
                            l4212 31EA                              l4204 31C0  
                            l4140 4486                              l4132 4424  
                            l4124 43DC                              l4116 439E  
                            l4108 4368                              l4060 2CDE  
                            l4052 2C82                              l4044 2C3E  
                            l4028 2BEA                              l4036 2C08  
                            l1636 5636                              l5100 1A64  
                            l5020 17BA                              l5012 1798  
                            l5004 1772                              l1396 1AA2  
                            l4310 34DE                              l4302 3478  
                            l4230 325C                              l4222 321E  
                            l4214 31EC                              l4206 31D0  
                            l4142 4498                              l4134 4436  
                            l4126 43FA                              l4118 43AC  
                            l4070 2D18                              l4062 2CFE  
                            l4054 2CBC                              l4038 2C16  
                            l5102 1A6C                              l5030 1862  
                            l5022 17CC                              l5014 179C  
                            l5006 1776                              l4312 34E2  
                            l4304 3492                              l4240 328C  
                            l4232 3264                              l4216 31FC  
                            l4224 3226                              l4208 31D6  
                            l5200 5A98                              l5120 4200  
                            l5112 41C4                              l4136 4464  
                            l4128 4402                              l4144 449E  
                            l4160 4526                              l4152 44F0  
                            l4080 5A16                              l4400 2F54  
                            l4072 2D1E                              l4064 2D02  
                            l4048 2C68                              l4056 2CBE  
                            l1584 5B4A                              l5104 1A7C  
                            l5040 18BA                              l5032 186A  
                            l5024 17D0                              l5016 17A2  
                            l5008 177C                              l5210 3F00  
                            l4314 34F0                              l4306 34A8  
                            l4250 32CA                              l4242 328C  
                            l4234 3268                              l4226 3236  
                            l4218 320C                              l1578 579E  
                            l5130 425A                              l5122 423A  
                            l5114 41D8                              l4146 44AE  
                            l4138 4484                              l4170 458E  
                            l4162 4534                              l4154 44F4  
                            l4082 5A22                              l4090 5BC8  
                            l4410 2FEA                              l4402 2F7E  
                            l4330 2D5A                              l4074 2D2C  
                            l4066 2D10                              l4058 2CCE  
                            l5106 1A82                              l5050 18FE  
                            l5042 18C8                              l5018 17A8  
                            l5026 17D6                              l5034 186E  
                            l1498 27C0                              l4500 51BC  
                            l5212 3F20                              l5204 3E3C  
                            l4316 34F6                              l4308 34C2  
                            l4260 3316                              l4252 32DA  
                            l4228 324C                              l5140 42DC  
                            l5132 4262                              l5124 423E  
                            l5116 41DC                              l4148 44CE  
                            l4172 459C                              l4180 4602  
                            l4164 4554                              l4156 4502  
                            l4084 5A34                              l4092 5BCC  
                            l4420 302A                              l4412 2FF8  
                            l4404 2FB4                              l4340 2D92  
                            l4332 2D5C                              l4076 2D2E  
                            l4068 2D16                              l5060 1934  
                            l5052 1906                              l5044 18D8  
                            l5036 188C                              l5028 182E  
                            l5300 281E                              l5220 233E  
                            l4502 51C4                              l5214 3F3C  
                            l5206 3E58                              l4318 34F8  
                            l4270 3360                              l4262 3324  
                            l4254 32EA                              l4246 32A0  
                            l4238 327C                              l4190 3176  
                            l5134 426A                              l5118 41E0  
                            l4182 4612                              l4174 45CA  
                            l4166 4572                              l4158 4522  
                            l4086 5A38                              l4094 5BE4  
                            l4510 51E0                              l4430 309C  
                            l4422 3058                              l4414 300A  
                            l4406 2FC2                              l4350 2DBE  
                            l4342 2DA2                              l4334 2D6C  
                            l4326 2D40                              l5070 1990  
                            l5062 193C                              l5054 1916  
                            l5046 18DC                              l5038 18A8  
                            l5230 2392                              l5222 234C  
                            l5310 2844                              l1599 5042  
                            l5216 3FA6                              l5208 3EBA  
                            l5400 549A                              l4280 33A6  
                            l4272 3372                              l4264 3330  
                            l4256 32F2                              l4248 32BA  
                            l4192 3184                              l5320 57A0  
                            l5144 431E                              l5136 42A2  
                            l6032 428C                              l5128 4244  
                            l4184 4632                              l4176 45EA  
                            l4168 457A                              l4088 5BBC  
                            l4520 5214                              l4512 51E8  
                            l4440 3112                              l4432 30C6  
                            l4416 3018                              l4408 2FE0  
                            l4360 2E14                              l4352 2DCE  
                            l4344 2DA8                              l4336 2D7C  
                            l4328 2D4C                              l4600 4916  
                            l5080 19D0                              l5072 1998  
                            l5064 1948                              l5056 191E  
                            l5048 18EC                              l5160 4ECE  
                            l5312 286C                              l5304 282A  
                            l5240 2430                              l5232 23A0  
                            l5224 235E                              l5410 5930  
                            l5402 54A6                              l4290 3406  
                            l4274 3388                              l4282 33B8  
                            l4266 334E                              l4258 3302  
                            l4194 3186                              l5322 57E6  
                            l5146 4330                              l4178 45FC  
                            l4530 5250                              l4522 521C  
                            l4514 51EC                              l4506 51CE  
                            l4442 312E                              l4450 3154  
                            l4426 3082                              l4434 30CA  
                            l4418 301C                              l4370 2E4E  
                            l4362 2E24                              l4354 2DDE  
                            l4346 2DAE                              l4338 2D8C  
                            l4610 4940                              l4602 491A  
                            l4098 5B14                              l5090 1A0C  
                            l5082 19E2                              l5066 194E  
                            l5074 199E                              l5058 192C  
                            l5170 4F52                              l5162 4EDC  
                            l5154 4E98                              l5306 2838  
                            l5250 24C4                              l5234 23C8  
                            l5226 2362                              l5218 2316  
                            l5420 59B2                              l5412 5942  
                            l5404 54B2                              l4284 33C6  
                            l4276 338E                              l4268 3350  
                            l4196 3196                              l4188 316A  
                            l5180 5DBE                              l5332 5890  
                            l5340 5886                              l5148 4342  
                            l4532 5256                              l4524 5224  
                            l4516 51FA                              l4508 51D2  
                            l4452 3158                              l4444 313E  
                            l4436 30E4                              l4428 308E  
                            l4380 2EA0                              l4372 2E64  
                            l4356 2DEE                              l4348 2DBC  
                            l3900 28FE                              l4620 4968  
                            l4612 494A                              l4604 4928  
                            l4700 3AA8                              l5092 1A12  
                            l5084 19EE                              l5076 19B0  
                            l5068 1974                              l5164 4EF4  
                            l5156 4EC2                              l5260 2590  
                            l5252 24FA                              l5244 247C  
                            l5236 2402                              l5228 238A  
                            l5510 535E                              l4470 5128  
                            l4462 510A                              l5350 4CD2  
                            l5414 5962                              l5406 54E2  
                            l5430 5418                              l5422 53C8  
                            l4294 3430                              l4286 33CA  
                            l4278 3398                              l4198 31A6  
                            l5190 5A5C                              l5174 5DDA  
                            l5182 5DD0                              l5334 58D6  
                            l5326 57F0                              l4526 5232  
                            l4534 525C                              l4518 5202  
                            l4550 52FA                              l4542 527E  
                            l4446 314C                              l4438 30F8  
                            l4390 2EE6                              l4382 2EAE  
                            l4374 2E70                              l4366 2E38  
                            l4358 2DF4                              l3910 2926  
                            l3902 2900                              l4622 4974  
                            l4614 4954                              l4702 3AB6  
                            l4710 3B96                              l5086 19F6  
                            l5078 19CA                              l5166 4F14  
                            l5270 263C                              l5262 25D8  
                            l5254 250A                              l5238 2422  
                            l5246 248E                              l5318 5CCA  
                            ?_pad 0011                              l5520 53AE  
                            l5512 5360                              l5504 533A  
                            l4480 515C                              l4472 5136  
                            l4464 510E                              l5440 5522  
                            l5360 4D3A                              l5352 4CF0  
                            l5416 5980                              l5600 58FA  
                            l5432 5448                              l5424 53EC  
                            l4296 343C                              l4288 33D8  
                            l4560 49E4                              l5192 5A60  
                            l5176 5DDE                              l5184 5DD4  
                            l5328 5836                              l5408 569E  
                            l5344 5D66                              l4640 5082  
                            l4632 5044                              l4800 37BE  
                            l4536 526C                              l4528 5248  
                            l4552 531E                              l4544 52AC  
                            l4448 314E                              l4392 2F00  
                            l4384 2EBA                              l4376 2E88  
                            l4368 2E44                              l3920 2960  
                            l3912 2936                              l3904 2906  
                            l4456 59D0                              l4624 4984  
                            l4712 3BD2                              l5096 1A46  
                            l5088 1A06                              l5168 4F26  
                            l5280 26D4                              l5272 264A  
                            l5256 2540                              l5248 24B4  
                            l5514 538A                              l5506 533C  
                            l4490 5196                              l4482 5164  
                            l4474 513E                              l4466 511C  
                            l5442 552E                              l5434 54FC  
                            l5362 4D46                              l5354 4D0C  
                            l5370 4BDC                              l5418 5992  
                            l5610 5904                              l5602 58FC  
                            l5426 5400                              l4298 344A  
                            l4570 4A52                              l4562 49F4  
                            l5530 4022                              l5194 5A68  
                            l5186 5DE4                              l5178 5DBA  
                            l5338 5840                              l5346 5D76  
                            l4722 5B84                              l4730 5766  
                            l4650 50F0                              l4642 5096  
                            l4634 5054                              l4538 5274  
                            l4554 5324                              l4546 52BC  
                            l4394 2F10                              l4386 2ECA  
                            l4378 2E94                              l3930 298C  
                            l3922 2972                              l3914 2946  
                            l3906 2914                              l4458 59E0  
                            l4626 4994                              l4714 3BE6  
                            l4706 3B26                              l5098 1A58  
                            l4810 0E74                              l5274 267A  
                            l5266 2610                              l5258 2568  
                            l5450 570E                              l5516 538C  
                            l5524 53B4                              l5508 5346  
                            l4492 519E                              l4484 516C  
                            l4476 5142                              l4468 5124  
                            l5436 5502                              l5444 5546  
                            l5364 4D52                              l5356 4D16  
                            l5348 4CAE                              l5380 4C44  
                            l5372 4BFA                              l5700 4882  
                            l5620 5916                              l5612 5906  
                            l5604 58FE                              l5428 540C  
                            l4572 4A60                              l4564 4A22  
                            l5540 40A0                              l5532 4030  
                            l4740 5C8A                              l5196 5A70  
                            l5188 5DE8                              l5460 5BF2  
                            l4732 5794                              l4644 50AA  
                            l4636 5068                              l4548 52EA  
                            l4396 2F2C                              l4388 2ED6  
                            l4580 5B4C                              l3940 29A0  
                            l3932 2990                              l3924 2980  
                            l3916 2948                              l3908 2916  
                            l4628 49A4                              l4660 4ADA  
                            l4716 3C0E                              l4708 3B62  
                            l4900 122C                              l4820 0EC4  
                            l4812 0E7C                              l4804 0E4C  
                            l5284 274A                              l5268 2622  
                            l5452 5716                              l5526 53B6  
                            l5518 5396                              l4494 51A0  
                            l4486 517A                              l4478 514A  
                            l5446 555E                              l5438 5516  
                            l5366 4D86                              l5358 4D30  
                            l5382 4C50                              l5374 4C16  
                            l5702 4890                              l5622 5922  
                            l5614 5908                              l5606 5900  
                            l5630 5D34                              l4574 4AB0  
                            l4566 4A32                              l4558 49B6  
                            l5550 40F4                              l5542 40A8  
                            l5534 4076                              l5198 5A96  
                            l5462 5BF6                              l4734 5798  
                            l4726 574E                              l4654 5A9C  
                            l3870 4FA8                              l4646 50AE  
                            l4638 5076                              l4750 357C  
                            l4742 3504                              l4398 2F38  
                            l4582 5B62                              l3950 29B4  
                            l3942 29A4                              l3934 2994  
                            l3926 2984                              l3918 2950  
                            l4590 48C6                              l4662 4B18  
                            l4670 4B58                              l4718 3C1E  
                            l4910 1268                              l4902 1244  
                            l4830 0EFC                              l4822 0ED2  
                            l4814 0EA0                              l4806 0E56  
                            l5286 275C                              l5294 27D4  
                            l5278 26A6                              l5390 5582  
                            l5454 571E                              l5710 3C32  
                            l5470 5C5A                              l4496 51A6  
                            l4488 5180                              l5384 4C5C  
                            l5376 4C20                              l5368 4BB8  
                            l5704 48A8                              l5624 5926  
                            l5616 590A                              l5608 5902  
                            l5640 5D46                              l5632 5D36  
                            l4576 4AB6                              l4568 4A40  
                            l5560 416A                              l5552 4130  
                            l5544 40B4                              l5536 408C  
                            l5528 4012                              l5800 1E4C  
                            l5464 5C04                              l4728 5752  
                            l4656 5AB6                              l3872 4FC6  
                            l3864 4F7A                              l4648 50DC  
                            l4760 35D4                              l4752 357E  
                            l4744 3524                              l4584 5B72  
                            l3960 29EE                              l3952 29B8  
                            l3944 29A8                              l3936 2998  
                            l3928 2988                              l3880 288C  
                            l4672 4B6A                              l4664 4B40  
                            l4680 5640                              l4920 12CE  
                            l4912 1284                              l4840 0F62  
                            l4832 0F00                              l4824 0EE4  
                            l4816 0EAA                              l4808 0E66  
                            l5296 27FC                              l5288 2790  
                            l5392 5590                              l5456 573A  
                            l5448 56FC                              l5720 3D9E  
                            l5712 3C3E                              l5472 5C60  
                            l5480 5CEC                              l4498 51AC  
                            l5386 4C90                              l5378 4C3A  
                            l5706 48AC                              l5626 592A  
                            l5618 5914                              l5730 37EA  
                            l5634 5D38                              l5642 5D0A  
                            l5570 41B2                              l5562 416E  
                            l5554 413C                              l5546 40E6  
                            l4738 5C7A                              l5802 1E7E  
                            l5810 1F2A                              l5466 5C08  
                            l3874 4FFC                              l3866 4F8C  
                            l4770 3674                              l4762 35DA  
                            l4754 3598                              l4746 354C  
                            l3970 2A40                              l3962 2A0A  
                            l3954 29BC                              l3946 29AC  
                            l3938 299C                              l3890 28CC  
                            l3882 289A                              l4594 48DA  
                            l4666 4B4C                              l4658 4ABA  
                            l4682 5650                              l4690 5628  
                            l4930 1316                              l4922 12E0  
                            l4914 12BA                              l4842 0F74  
                            l4826 0EF0                              l4834 0F06  
                            l4818 0EB2                              l5298 280A  
                            l5394 55B6                              l5722 3E14  
                            l5714 3C96                              l5650 4DB4  
                            l5474 5C62                              l5482 5DAA  
                            l5580 5D5E                              l5492 5DC4  
                            l5396 5462                              l5740 389A  
                            l5732 3812                              l5636 5D42  
                            l5628 5D2A                              l5644 5D10  
                            l5564 4192                              l5556 414A  
                            l5548 40E8                              l5812 1F5C  
                            l5820 2008                              l5804 1EB0  
                            l3868 4F9E                              l4780 371C  
                            l4772 367A                              l4764 35E2  
                            l4756 35B4                              l4748 356C  
                            l3980 2A8C                              l3972 2A4E  
                            l3964 2A1A                              l3948 29B0  
                            l3956 29C0                              l3892 28CE  
                            l3884 289C                              l4596 4904  
                            l4588 48B0                              l4676 4BAE  
                            l4684 55E0                              l4940 135E  
                            l4932 1324                              l4924 12F2  
                            l4916 12C2                              l4908 1256  
                            l4860 1048                              l4844 0F90  
                            l4836 0F2C                              l4852 0FDA  
                            l4828 0EF8                              l5388 557A  
                            l5724 3E20                              l5716 3CEE  
                            l5708 3C30                              l5652 4DC0  
                            l5476 5C64                              l5468 5C50  
                            l5484 5DB0                              l5900 469E  
                            l5582 5D60                              l5574 5D4A  
                            l5494 5DEE                              l5398 5486  
                            l5750 3942                              l5742 38B2  
                            l5734 382A                              l5638 5D44  
                            l5486 5D7C                              l5646 5D20  
                            l5566 41A2                              l5558 4168  
                            l5822 203A                              l5830 20BE  
                            l5814 1F8E                              l5806 1EE2  
                            l4790 3782                              l4782 3736  
                            l4774 3680                              l4766 35EC  
                            l4758 35C6                              l3990 2ACC  
                            l3974 2A50                              l3966 2A30  
                            l3958 29C4                              l3886 28AC  
                            l3894 28D6                              l3878 2880  
                            l4598 4906                              l4694 3A1E  
                            l4950 1472                              l4942 136E  
                            l4934 133C                              l4926 1300  
                            l4918 12C6                              l4862 1064  
                            l4854 1000                              l4870 1080  
                            l4846 0FA8                              l5726 3E38  
                            l5718 3D46                              l5670 4E34  
                            l5662 4DEE                              l5654 4DD8  
                            l5478 5C66                              l5590 5AFA  
                            l5910 46BA                              l5902 46A6  
                            l5576 5D54                              l5496 5D94  
                            l5760 39EE                              l5752 395E  
                            l5744 38CE                              l5736 383E  
                            l5728 37E8                              l5488 5D90  
                            l5568 41B0                              l5832 20F0  
                            l5840 2174                              l5824 206C  
                            l5816 1FC0                              l4792 3788  
                            l4784 3750                              l4768 35F2  
                            l4776 36E4                              l3992 2AD8  
                            l3984 2AA0                              l3976 2A5A  
                            l3968 2A3C                              l3896 28E6  
                            l3888 28BC                              l4696 3A3E  
                            l4688 5616                              l4960 1512  
                            l4944 1382                              l4952 1478  
                            l4936 134E                              l4928 1304  
                            l4880 110A                              l4872 109A  
                            l4848 0FB2                              l5680 4E84  
                            l5672 4E4A                              l5664 4DFA  
                            l5656 4DDA                              l5648 4DA4  
                            l5592 5B04                              l5584 5ADC  
                            l5920 46DA                              l5912 46C2  
                            l5904 46AA                              l5578 5D5C  
                            l5498 5328                              l5690 4808  
                            l5682 479E                              l5762 3A02  
                            l5754 3972                              l5746 38E2  
                            l5738 3852                              l5850 222C  
                            l5842 21A6                              l5834 2122  
                            l5826 209E                              l5770 1C24  
                            l4794 379A                              l4778 36FE  
                            l4786 3760                              l3994 2ADC  
                            l3986 2AB0                              l3978 2A7C  
                            l3898 28EC                              l4698 3A94  
                            l4970 15EE                              l4962 1544  
                            l4954 1496                              l4946 13E6  
                            l4938 1356                              l4890 11E2  
                            l4882 1164                              l4858 1036  
                            l5674 4E62                              l5666 4E10  
                            l5594 5B0E                              l5586 5AE0  
                            l5930 473E                              l5922 46FC  
                            l5914 46CA                              l5906 46B2  
                            l5692 4820                              l5684 47AC  
                            l5596 58E2                              l5764 3A1A  
                            l5756 39BA                              l5748 392A  
                            l5860 229E                              l5844 21D8  
                            l5852 2234                              l5836 2154  
                            l5772 1C56                              l5780 1CE0  
                            l4796 37A6                              l4788 3772  
                            l3996 2AEA                              l3988 2ABE  
                            l4980 1650                              l4972 15F4  
                            l4964 1554                              l4956 14CA  
                            l4948 143E                              l4892 11E6  
                            l4884 1198                              l4876 10D0  
                            l5676 4E6A                              l5668 4E28  
                            l5588 5AEA                              l5940 4790  
                            l5932 4742                              l5924 470C  
                            l5916 46CE                              l5908 46B6  
                            l5694 4824                              l5686 47BC  
                            l5598 58F6                              l5758 39D2  
                            l5862 22AE                              l5854 224C  
                            l5846 220A                              l5782 1D12  
                            l5790 1D96                              l5774 1C88  
                            l5766 1AA4                              l4798 37AE  
                            l3998 2AEC                              l4990 1708  
                            l4982 1664                              l4974 1628  
                            l4966 1564                              l4958 14FC  
                            l4894 11F8                              l4886 11A0  
                            l4878 1104                              l5678 4E82  
                            l5934 4756                              l5926 4712  
                            l5918 46D6                              l5696 4834  
                            l5688 47FA                              l5864 22B2  
                            l5872 22F4                              l5856 2258  
                            l5848 2226                              l5792 1DC8  
                            l5784 1D44                              l5776 1CBA  
                            l5768 1AA8                              l4992 171A  
                            l4984 1670                              l4976 163C  
                            l4968 1598                              l4896 120A  
                            l4888 11D2                              l5936 4768  
                            l5928 472A                              l5880 4654  
                            l5698 4844                              l5866 22BC  
                            l5858 227C                              l5794 1DFA  
                            l5786 1D76                              l5778 1CD6  
                            l4994 172C                              l4986 1694  
                            l4978 1640                              l4898 1212  
                            l5938 4774                              l5890 4684  
                            l5882 465E                              l5868 22D8  
                            l5796 1E2C                              l5876 230C  
                            l4996 173A                              l4988 16F8  
                            l5892 4688                              l5884 4676  
                            l5878 2310                              l4998 1742  
                            l5894 468C                              l5886 467A  
                            l5896 4692                              l5888 467E  
                            l5898 4696                              STR_1 0E01  
                            STR_2 0E37                              STR_3 0E3F  
                            STR_6 0E3B                              STR_7 0E43  
                            u4000 2CBC                      _BAUD4CONbits 000EE9  
                            u4001 2CB8                              _LATE 000F7D  
                            u4010 2CCE                              u4011 2CCA  
                            _LATG 000F7F                              u4100 437A  
                            u4020 2CDE                              u4101 4376  
                            u4021 2CDA                              u4110 43AC  
                            u4030 2CFE                              u4111 43A8  
                            u4031 2CFA                              u4200 459C  
                            u4040 2D10                              u5000 4B40  
                            u4121 43D6                              u4201 4598  
                            u4041 2D0C                              u5001 4B3C  
                            u4130 43FA                              u4210 45CA  
                            u4050 2D2C                              u5010 4B6A  
                            _T2PR 000FBC                              u4131 43F6  
                            u4211 45C6                              u4051 2D28  
                            u5011 4B66                              u4300 328C  
                            u4140 4424                              u4220 4612  
                            u4060 5A58                              u5100 3A66  
                            u4301 3288                              u4141 4420  
                            u4221 460E                              u4061 5A54  
                            u4310 3302                              u4230 3184  
                            u4150 4464                              u4070 5BE4  
                            u5030 4BA4                              u5110 3A94  
                            u4311 32FE                              u4231 3180  
                            u4151 4460                              u4071 5BE0  
                            u5031 4B9E                              u5111 3A90  
                            u4400 341C                              u4320 3324  
                            u4240 3196                              u5200 5BB4  
                            u6000 4330                              u4160 44AE  
                            u5040 4BA6                              u5120 3AB6  
                            u4080 5B44                              u4401 3418  
                            u4321 3320                              u4241 3192  
                            u5201 5BAE                              u6001 432C  
                            u4161 44AA                              u5025 4B7C  
                            u5121 3AB2                              u5105 3A5C  
                            u4081 5B3E                              u4410 3430  
                            u4330 334E                              u4250 31A6  
                            u5210 5BB6                              u6010 4342  
                            u4170 4502                              u5050 568A  
                            u4090 5B46                              u4411 342C  
                            u4331 334A                              u4251 31A2  
                            u6011 433E                              u4171 44FE  
                            u6100 3F3C                              u4420 344A  
                            u4340 3372                              u4260 31EA  
                            u5220 5766                              u4180 4534  
                            u5300 3598                              u4500 2DCE  
                            u3700 28FE                              u5140 3B22  
                            u5060 569C                              u6020 4EC2  
                            u6101 3F38                              u4421 3446  
                            u4341 336E                              u4261 31E6  
                            u5221 5762                              u4181 4530  
                            u5301 3594                              u4501 2DCA  
                            u3701 28FA                              u5141 3B1E  
                            u5061 5698                              u6021 4EBE  
                            u4430 3492                              u4350 3388  
                            u4270 31FC                              u5230 5794  
                            u4190 4572                              u3630 4F8C  
                            u5310 35C6                              u4510 2DDE  
                            u3710 2914                              u5150 3B46  
                            u5070 5610                              u6030 4EF4  
                            u4431 348E                              u4351 3384  
                            u4271 31F8                              u5231 5790  
                            u4191 456E                              u3631 4F88  
                            u5311 35C2                              u4511 2DDA  
                            u3711 2910                              u5135 3ACA  
                            u5071 560A                              u6031 4EF0  
                            u4440 34C2                              u4360 33A6  
                            u4280 320C                              u5240 5C8A  
                            u7000 203A                              u3640 4F9E  
                            u5400 379A                              u5320 35D4  
                            u4600 3082                              u4520 2E14  
                            u3800 2A4E                              u3720 2926  
                            u5160 3B62                              u5136 3AD4  
                            u5080 5612                              u6040 4F14  
                            u6200 250A                              u4441 34BE  
                            u4361 33A2                              u4281 3208  
                            u5241 5C86                              u7001 2036  
                            u3641 4F9A                              u5401 3796  
                            u5321 35D0                              u4601 307E  
                            u4521 2E10                              u3801 2A4A  
                            u3721 2922                              u5161 3B5E  
                            u5137 3AE4                              u5057 5680  
                            u6041 4F10                              u6201 2506  
                            u6114 3F96                              u4450 34F0  
                            u4370 33C6                              u4290 324C  
                            u5250 5CA0                              u7010 206C  
                            u3650 4FC6                              u5330 36FE  
                            u4610 309C                              u4530 2E24  
                            u3810 2A6E                              u3730 2936  
                            u5170 3BB6                              u5090 5628  
                            u5410 0E74                              u6050 4F26  
                            u6210 2568                              u6130 233E  
                            u6115 3F92                              u4451 34EC  
                            u4371 33C2                              u4291 3248  
                            u5251 5C9C                              u7011 2068  
                            u3651 4FC2                              u5331 36FA  
                            u4611 3098                              u4531 2E20  
                            u3811 2A6A                              u3731 2932  
                            u5155 3B3C                              u5091 5624  
                            u5411 0E70                              u6051 4F22  
                            u6211 2564                              u6131 233A  
                            u4700 51BC                              u6124 4000  
                            u4380 33D8                              u7100 229E  
                            u7020 209E                              u3660 4FFC  
                            u5340 371C                              u5260 3534  
                            u4620 30E4                              u4540 2F9E  
                            u4460 2D5A                              u3900 2BAE  
                            u3820 2A7C                              u3740 2972  
                            u5180 3BD2                              u5500 102E  
                            u5420 0EC4                              u6060 4F52  
                            u6220 2590                              u6140 238A  
                            u4701 51B8                              u6125 3FFC  
                            u4381 33D4                              u7101 229A  
                            u7021 209A                              u3661 4FF8  
                            u5341 3718                              u5261 352E  
                            u4621 30E0                              u4461 2D56  
                            u3901 2BAA                              u3821 2A78  
                            u3741 296E                              u5181 3BCE  
                            u5501 1028                              u5421 0EC0  
                            u6061 4F4E                              u6221 258C  
                            u6141 2386                              u4390 3406  
                            u6070 5A84                              u7110 22AE  
                            u7030 20F0                              u5350 3736  
                            u5270 3536                              u4710 51E0  
                            u4630 3112                              u4550 2FF8  
                            u4470 2D6C                              u3910 2BDA  
                            u3830 2A8C                              u3750 2980  
                            u3670 289A                              u5190 3C0E  
                            u5510 1030                              u5430 0ED2  
                            u6230 2622                              u6150 23C8  
                            u4391 3402                              u6071 5A7C  
                            u7111 22AA                              u7031 20EC  
                            u5351 3732                              u4711 51DC  
                            u4631 310E                              u4551 2FF4  
                            u4471 2D68                              u3911 2BD6  
                            u3831 2A88                              u3751 297C  
                            u3671 2896                              u5191 3C0A  
                            u5175 3BAC                              u5431 0ECE  
                            u6231 261E                              u6151 23C4  
                            u4800 49E4                              u7120 22EC  
                            u7040 2122                              u6320 5D76  
                            u5360 3750                              u5280 354C  
                            u4720 51FA                              u4640 314C  
                            u4560 3018                              u4480 2D7C  
                            u3920 2BEA                              u3840 2ABE  
                            u3760 29EE                              u3680 28AC  
                            u5600 1268                              u5520 1048  
                            u5440 0EE4                              u6240 26D4  
                            u6160 2474                              u4801 49E0  
                            u7121 22E6                              u7041 211E  
                            u6321 5D72                              u5361 374C  
                            u5281 3548                              u4721 51F6  
                            u4641 3148                              u4561 3014  
                            u4545 2F94                              u4481 2D78  
                            u3921 2BE6                              u3841 2ABA  
                            u3761 29EA                              u3681 28A8  
                            u5601 1264                              u5521 1044  
                            u5441 0EE0                              u6241 26D0  
                            u6161 246E                              u6305 5CDC  
                            u4650 511C                              u6090 3E58  
                            u6330 4CE4                              u6410 4C16  
                            u4810 4A22                              u7130 22EE  
                            u7050 2154                              u5370 3760  
                            u5290 357C                              u4730 5214  
                            u4570 302A                              u4490 2DBC  
                            u3930 2C06                              u3850 2ACC  
                            u3770 2A06                              u3690 28BC  
                            u5610 1284                              u5530 10CC  
                            u5450 0F2C                              u6250 2742  
                            u6170 2476                              u6306 5CDE  
                            u4651 5118                              u6091 3E54  
                            u6331 4CDC                              u6411 4C12  
                            u4811 4A1E                              u7051 2150  
                            u5371 375C                              u5291 3578  
                            u4731 5210                              u4571 3026  
                            u4491 2DB8                              u3931 2C02  
                            u3851 2AC8                              u3771 2A00  
                            u3691 28B8                              u5611 1280  
                            u5531 10C8                              u5451 0F28  
                            u6251 273C                              u6315 5CE6  
                            u4660 5136                              u6420 4C3A  
                            u6500 5448                              u4820 4A40  
                            u7060 21A6                              u5380 3772  
                            u4740 5232                              u4580 3058  
                            u3940 2C16                              u3860 2AEA  
                            u3780 2A08                              u4900 4964  
                            u5700 14FC                              u5620 12BA  
                            u5540 1160                              u5460 0F5A  
                            u6260 2744                              u6180 248E  
                            u6316 5CE8                              u7140 46FC  
                            u4661 5132                              u6421 4C36  
                            u6501 5444                              u4821 4A3C  
                            u7061 21A2                              u5381 376E  
                            u4741 522E                              u4581 3054  
                            u3941 2C12                              u3861 2AE6  
                            u4901 4960                              u5701 14F8  
                            u5621 12B6                              u5541 115C  
                            u5461 0F54                              u6181 248A  
                            u7141 46F8                              u4670 515C  
                            u6350 4D0C                              u6430 4C90  
                            u6510 5460                              u4830 4A60  
                            u7070 21D8                              u5390 3782  
                            u4750 5248                              u4590 306E  
                            u3950 2C28                              u3870 2B22  
                            u3790 2A30                              u4910 4984  
                            u5710 1544                              u5630 12E0  
                            u5550 11D2                              u5470 0F5C  
                            u6270 275C                              u6190 24C4  
                            u7150 470A                              u4671 5158  
                            u6351 4D08                              u6431 4C8C  
                            u6511 545C                              u4831 4A5C  
                            u7071 21D4                              u5391 377E  
                            u4751 5244                              u4591 306A  
                            u3951 2C24                              u3871 2B1E  
                            u3791 2A2C                              u4911 4980  
                            u5711 1540                              u5631 12DC  
                            u5551 11CE                              u6271 2758  
                            u6191 24C0                              u7151 4706  
                            u4680 517A                              u6520 555E  
                            u6360 4D30                              u6440 4CAA  
                            u6408 4BF0                              u4840 4AB0  
                            u6600 4030                              u6088 5A86  
                            u7080 220A                              u4760 526C  
                            u3960 2C3E                              u3880 2B68  
                            u4920 4994                              u5800 1754  
                            u5720 1554                              u5640 12F2  
                            u5560 11F8                              u5480 0F74  
                            u6280 27FC                              u7160 4768  
                            u4681 5176                              u6521 555A  
                            u6361 4D2C                              u6441 4CA6  
                            u4841 4AAC                              u6601 402C  
                            u7081 2206                              u4761 5268  
                            u3961 2C3A                              u3881 2B64  
                            u4921 4990                              u5801 1750  
                            u5721 1550                              u5641 12EE  
                            u5561 11F4                              u5481 0F70  
                            u6281 27F8                              u7161 4764  
                            u7217 471C                              u4690 5196  
                            u6530 5576                              u6370 4D86  
                            u6610 408C                              u7090 227C  
                            u4930 5054                              u4770 52AC  
                            u4850 5B62                              u3970 2C54  
                            u3890 2B9E                              u5810 1762  
                            u5730 15EE                              u5650 1300  
                            u5570 120A                              u5490 1000  
                            u6450 55D6                              u4691 5192  
                            u6531 5572                              u6371 4D82  
                            u7307 38EC                              u6611 4088  
                            u7091 2278                              u4931 5050  
                            u4771 52A8                              u4851 5B5E  
                            u3971 2C50                              u3891 2B9A  
                            u5811 175E                              u5731 15EA  
                            u5651 12FC                              u5571 1206  
                            u5491 0FFC                              u6451 55D2  
                            u7227 5AF0                              u6380 4DA0  
                            u6348 4CE6                              u6460 54E2  
                            u6620 40E2                              u6540 5C20  
                            u4940 5076                              u4780 52EA  
                            u3980 2C68                              u4860 48C6  
                            u5900 19CA                              u5820 17BA  
                            u5740 163C                              u5660 1316  
                            u5580 122C                              u6700 4DB2  
                            u6381 4D9C                              u6461 54DE  
                            u7317 3934                              u6621 40DE  
                            u6541 5C1C                              u4941 5072  
                            u4781 52E6                              u3981 2C64  
                            u4861 48C2                              u5901 19C6  
                            u5821 17B6                              u5741 1638  
                            u5661 1312                              u5581 1228  
                            u7237 4DCA                              u6701 4DAE  
                            u6390 4BEE                              u6470 54FA  
                            u6550 5D8C                              u6630 412C  
                            u4950 50CC                              u4790 531E  
                            u3990 2C82                              u4870 48FA  
                            u5910 19E2                              u5830 188C  
                            u5750 1664                              u5670 1324  
                            u5590 1252                              u6710 4DEC  
                            u7407 4D5C                              u6391 4BE6  
                            u6471 54F6                              u7327 397C  
                            u6551 5D88                              u6631 4128  
                            u4951 50C8                              u4791 531A  
                            u3991 2C7E                              u5911 19DE  
                            u5831 1888                              u5751 1660  
                            u5671 1320                              u5591 124E  
                            u7247 4E74                              u6711 4DE8  
                            u6295 5CD2                              u6560 533A  
                            u6480 5942                              u6800 4808  
                            u6640 414A                              u4960 50DC  
                            u4880 4928                              u5920 1A40  
                            u5840 18A8                              u5760 1708  
                            u5680 134E                              u6720 4E10  
                            u6296 5CD4                              u6561 5336  
                            u7417 5538                              u6481 593E  
                            u6801 4804                              u7337 39C4  
                            u6641 4146                              u4961 50D8  
                            u4881 4924                              u5921 1A3A  
                            u5841 18A4                              u5761 1704  
                            u5681 134A                              u7257 3E2A  
                            u6721 4E0C                              u6570 538A  
                            u6490 5992                              u6810 4834  
                            u6650 415A                              u4970 5AB6  
                            u4890 493C                              u5930 1A42  
                            u5850 18BA                              u5770 171A  
                            u5690 1496                              u6730 4E28  
                            u6571 5386                              u7427 5350  
                            u6491 598E                              u6811 4830  
                            u7347 3A0C                              u6651 4156  
                            u7267 223E                              u4971 5AB2  
                            u4891 4938                              u4875 48F0  
                            u5851 18B6                              u5771 1716  
                            u5691 1492                              u6731 4E24  
                            u6580 53C6                              u6820 4842  
                            u6660 4168                              u6900 1D76  
                            u4980 4AFA                              u5940 1A58  
                            u5860 18C8                              u5780 172C  
                            u6740 4E4A                              u6581 53C2  
                            u7437 536A                              u6821 483E  
                            u7357 5422                              u7277 381C  
                            u6661 4164                              u6901 1D72  
                            u5941 1A54                              u5861 18C4  
                            u5781 1728                              u6741 4E46  
                            u6830 4882                              u6670 41A2  
                            u6590 4022                              u6910 1DC8  
                            u5950 4200                              u4990 4B18  
                            u5870 18FE                              u5790 173A  
                            u6750 4E62                              u7447 53A0  
                            u6831 487E                              u7367 54BC  
                            u7287 385C                              u6671 419E  
                            u6591 401E                              u6911 1DC4  
                            u5951 41FC                              u4991 4B14  
                            u5871 18FA                              u5791 1736  
                            u6751 4E5E                              u6840 4890  
                            u6680 41B0                              u6920 1DFA  
                            u5960 423A                              u5880 192C  
                            u6760 4E96                              u6841 488C  
                            u7377 4812                              u7297 38A4  
                            u6681 41AC                              u6921 1DF6  
                            u5961 4236                              u4985 4AF0  
                            u5881 1928                              u6761 4E92  
                            u6770 47AC                              u6690 5D20  
                            u6930 1E2C                              u6850 1C56  
                            u5970 4256                              u5890 19B0  
                            u7387 489A                              u6771 47A8  
                            u6691 5D1C                              u6931 1E28  
                            u6851 1C52                              u5971 4252  
                            u5891 19AC                              u6780 47BA  
                            u6940 1E7E                              u6860 1C88  
                            u5980 4318                              u7397 4C66  
                            u6781 47B6                              u6941 1E7A  
                            u6861 1C84                              u5981 4312  
                            u6790 47FA                              u6950 1EB0  
                            u6870 1CBA                              u5990 431A  
                            u6791 47F6                              u6951 1EAC  
                            u6871 1CB6                              u6960 1EE2  
                            u6880 1D12                              u6961 1EDE  
                            u6881 1D0E                              u6970 1F5C  
                            u6890 1D44                              u6971 1F58  
                            u6891 1D40                              u6980 1F8E  
                            u6981 1F8A                              u6990 1FC0  
                            u6991 1FBC                       main@current 00D0  
         __end_of_DCmotors_setPWM 4010                              abs@a 0013  
                            _dbuf 019A                              _atoi 41C4  
                            _main 4654                              _dtoa 3504  
                            _left 4CAE                              _prec 00EE  
                            _nout 00EA                              pad@i 0018  
                            pad@p 0015                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 001A                              fsr2l 000FD9  
                            _stop 54FC                     ___fpclassifyf 4ABA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0000                  __end_of_ADC_init 5D64  
                 ___fldiv@new_exp 0020                      _tolower$3109 000D  
                    ___param_bank 000000                             ??_abs 0015  
                           ??_pad 0017            ??_clicker2buttons_init 0001  
                   ___fltol@sign1 0009                   __end_of___aodiv 44F0  
                           ?_atoi 0008                   __end_of___fladd 2D40  
                           ?_main 0001                             ?_dtoa 001C  
                           ?_left 001A                   __end_of___aomod 4654  
                           _ADPCH 000F5F                   __end_of___fldiv 3504  
                 __end_of___awdiv 51CE                   __end_of___flneg 5B84  
                           STR_10 0E47                             STR_12 0E47  
                 __end_of___awmod 527E                   __end_of___flmul 316A  
                 __end_of___flsub 5A16                   __end_of___fltol 49B6  
                           ?_stop 001A                   ___awdiv@divisor 0009  
         _colourclick_writetoaddr 5CEA                   ___awdiv@counter 000B  
                    vfpfcnvrt@fmt 004A           __end_of_sendCharSerial4 5D7C  
      __end_of_I2C_2_Master_Start 5DE4        __end_of_I2C_2_Master_Write 5DC4  
   __size_of_DCmotors_calibration 0112          ?_colourclick_calibration 0001  
                           _flags 00F0          __end_of_DCmotors_testing 3A1E  
                           _fputc 4F7A        __end_of_DCmotors_adjustval 53C8  
                 __end_of_forward 54FC                             _fputs 5A16  
                 __end_of_isdigit 5BBC              colourclickLEDs_C@tog 0001  
                           _right 4BB8                             atoi@n 0015  
                           pad@fp 0011                             atoi@s 0008  
                           _width 00EC                             _putch 5DF8  
                           dtoa@d 001E                             dtoa@i 003E  
               _clicker2LEDs_init 5DEE                             dtoa@n 0036  
                           dtoa@p 0030                             dtoa@s 0034  
                           dtoa@w 0032                   __end_of_isspace 57A0  
                 __end_of_isupper 5B4C                             tablat 000FF5  
                 __end_of_reverse 5462            DCmotors_init@PWMperiod 0001  
              ?_clicker2LEDs_init 0001                             status 000FD8  
                 __end_of_sprintf 574E                    ?___fpclassifyf 0001  
                 __end_of_tolower 5640                   __end_of_strncmp 4F7A  
           _I2C_2_Master_RepStart 5DE4                   __initialization 5C22  
             ??_clicker2LEDs_init 0001                      __end_of_atoi 4368  
                    __end_of_main 479E                      __end_of_dtoa 37E8  
                    __end_of_left 4DA4                      __end_of_stop 557A  
   __size_of_colourcards_readRGBC 0872                            ??_atoi 000A  
                          ??_main 005C                            ??_dtoa 0026  
                          ??_left 0020                            ??_stop 001E  
                   __activetblptr 000003            ??_colourclick_readRGBC 000E  
       __end_of_clicker2LEDs_init 5DF8                   _colourcard_flag 00F8  
                          ?_fputc 0001                            ?_fputs 000A  
                          _ADRESH 000F64         __size_of_colourclick_init 0038  
                          ?_right 001A                  ___awdiv@dividend 0007  
                          ?_putch 0001                            _RC0PPS 000E62  
                          _RC4REG 000EE3                            _RE2PPS 000E74  
                          _RD5PPS 000E6F                            _RC7PPS 000E69  
                          _RD6PPS 000E70                  ?_DCmotors_setPWM 000F  
                          _RX4PPS 000E15                            _TX4REG 000EE4  
                __end_of___xxtofl 41C4                      ??_ADC_getval 0001  
                    vfprintf@cfmt 0058                            ___flge 49B6  
                          ___fleq 527E            colourcards_readRGBC@mL 002A  
          colourcards_readRGBC@mR 002C                         ??___aodiv 0011  
                       ??___fladd 0009                         ??___aomod 0011  
                          ___wmul 5CA2                         ??___fldiv 0017  
                       ??___awdiv 000B                         ??___flneg 0005  
                       ??___awmod 0005                         ??___flmul 0009  
                       ??___flsub 0022                         ??___fltol 0005  
                          _efgtoa 0E4C                  ??_buggyLEDs_init 0001  
       colourcards_readRGBC@B_rel 003A         colourcards_readRGBC@G_rel 0036  
                          _floorf 3A1E         ??_colourclick_writetoaddr 0004  
                          clear_0 5C28                            clear_1 5C34  
                          clear_2 5C40         colourcards_readRGBC@R_rel 0032  
                ___awdiv@quotient 000D                   ___awmod@divisor 0003  
                          isa$std 000001                   ___awmod@counter 0005  
                          pad@buf 0013                            dtoa@fp 001C  
                          left@mL 001A                            left@mR 001C  
                          _strcpy 5640                            _strlen 5BBC  
                          fputc@c 0001                            fputs@c 000E  
                          fputs@i 000F                            fputs@s 000A  
                       ??_forward 001E                         ??_isdigit 0003  
                 ___fpclassifyf@e 0009                   ___fpclassifyf@u 000B  
                 ___fpclassifyf@x 0001                      __mediumconst 0000  
                       ??_isspace 0003                            tblptrh 000FF7  
                       ??_isupper 0003                            tblptrl 000FF6  
                          tblptru 000FF8                         ?_ADC_init 0001  
                ?_sendCharSerial4 0001                         ??_reverse 001E  
     __end_of_colourcards_testing 3E3C                            putch@c 0001  
                __end_of_vfprintf 55E0                            stop@mL 001A  
                          stop@mR 001C                         ??_sprintf 005A  
                       ??_tolower 0009                __end_of_ADC_getval 5D94  
                    ?_USART4_init 0001                         ??_strncmp 0007  
                      ___flge@ff1 001A                        ___flge@ff2 001E  
                 ??___fpclassifyf 0005                      ___xxtofl@arg 000B  
                    ___xxtofl@exp 000A                      ___xxtofl@val 0001  
                      ___fleq@ff1 0001                        ___fleq@ff2 0005  
                __end_of_turnleft 59D0                        __accesstop 0060  
         __end_of__initialization 5C4A        colourcards_testing@current 0174  
                      ___flneg@f1 0001            ?_I2C_2_Master_RepStart 0001  
                   ___rparam_used 000001                        ___fltol@f1 0001  
                  __pcstackCOMRAM 0001                     __end_of_fputc 5044  
                   __end_of_fputs 5A5A                     __end_of_right 4CAE  
                   __end_of_putch 5DFA     checkbatterylevel@batterylevel 0002  
                      ??_ADC_init 0001        __size_of_clicker2LEDs_init 000A  
                         ??_fputc 0005                           ??_fputs 000E  
                         ??_right 0020     __size_of_colourclickLEDs_init 000E  
                         ??_putch 0001   __end_of_colourclick_writetoaddr 5D0A  
                      __pbssBANK0 00EA                        __pbssBANK1 017C  
                      __pbssBANK2 0200                 _checkbatterylevel 5D0A  
              ?_checkbatterylevel 0001                      _T2CLKCONbits 000FBF  
                         ?___flge 001A                           ?___fleq 0001  
                         ?___wmul 0001                           ?_efgtoa 003C  
             ??_checkbatterylevel 0002                           ?_floorf 0028  
                         ?_strcpy 0001                           ?_strlen 0001  
                       ?___xxtofl 0001                           _SP4BRGH 000EE6  
                         _SP4BRGL 000EE5                __size_of_vfpfcnvrt 056A  
                         _PWM6DCH 000FA3                           _PWM7DCH 000FA0  
                         _SSP2ADD 000ED6                           _SSP2BUF 000ED5  
                _colourclick_init 5ADC                 ?_DCmotors_testing 0028  
       __end_of_checkbatterylevel 5D2A                ??_DCmotors_testing 002C  
          __size_of_DCmotors_init 0050                         _ADREFbits 000F58  
              _I2C_2_Master_Start 5DDA                _I2C_2_Master_Write 5DB8  
                         __Hparam 0000      __end_of_DCmotors_calibration 48B0  
              __size_of_turnright 0050  __size_of_colourclick_calibration 00F4  
                         __Lparam 0000                _DCmotors_adjustval 5328  
         sendStringSerial4@string 0002            colourcards_testing@buf 0100  
                 __size_of___flge 0104                   __size_of___fleq 00AA  
                         ___aodiv 4368                           ___fladd 2880  
                         ___aomod 44F0                           ___fldiv 316A  
                         ___awdiv 510A                           ___flneg 5B4C  
                         ___awmod 51CE                           ___flmul 2D40  
                         ___flsub 59D0                           ___fltol 48B0  
                 __size_of___wmul 0026               ?_I2C_2_Master_Start 0001  
             ?_I2C_2_Master_Write 0001                         ?_vfprintf 0052  
                    __psmallconst 0E00                   __size_of_efgtoa 0C58  
                 __size_of_floorf 0212                           __pcinit 5C22  
             ?_DCmotors_adjustval 0001                           __ramtop 0E00  
                         __ptext0 4654                           __ptext1 5ADC  
                         __ptext2 5CEA                           __ptext3 5DAA  
                         __ptext4 5CC8                           __ptext5 5C50  
                         __ptext6 4DA4                           __ptext7 3C30  
                         __ptext8 56FC                           __ptext9 557A  
   __size_of_clicker2buttons_init 000C                         ?_turnleft 0022  
                 __size_of_strcpy 005E                   __size_of_strlen 0036  
                       _T2CONbits 000FBD                      __size_of_abs 0040  
                    __size_of_pad 00C6                           _forward 5462  
                         _isdigit 5B84                        ??___xxtofl 0005  
                ___awmod@dividend 0001                           _isspace 574E  
                       _T2HLTbits 000FBE                           _isupper 5B14  
                         efgtoa@c 0042                           efgtoa@d 0078  
                         efgtoa@e 0090                           efgtoa@f 003E  
                         efgtoa@g 008C                           efgtoa@h 0082  
                         efgtoa@i 008A                           efgtoa@l 0086  
                         efgtoa@m 0072                           efgtoa@n 0092  
                         efgtoa@p 007C                           efgtoa@t 006C  
                         efgtoa@u 0094                           efgtoa@w 007E  
                         _reverse 53C8                     _RxBufWriteCnt 00FA  
                         atoi@neg 000E                           _sprintf 56FC  
                         _tolower 55E0              ??_I2C_2_Master_Start 0002  
                         left@deg 001E              ??_I2C_2_Master_Write 0002  
                         _strncmp 4E98              end_of_initialization 5C4A  
    __end_of_colourcards_readRGBC 2316                           floorf@e 0036  
                         floorf@m 0032                           floorf@u 0038  
                         floorf@x 0028                  ADC_getval@tmpval 0001  
            ??_DCmotors_adjustval 0001                           fputc@fp 0003  
            __size_of_USART4_init 0020                           fputs@fp 000C  
                         right@mL 001A                           right@mR 001C  
               __end_of_vfpfcnvrt 2880                        efgtoa@mode 0081  
                      efgtoa@sign 007A                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
  colourclick_calibration@current 0019    colourclick_calibration@initial 0011  
                      ??_vfprintf 0058      colourclick_writetoaddr@value 0003  
                         strcpy@d 0009                           strlen@a 0003  
                         strcpy@s 0007                           strlen@s 0001  
                   _DCmotors_init 58E0                         _PORTFbits 000F8E  
                      ??_turnleft 0028                       ___fladd@grs 0010  
        colourclick_calibration@i 0010                     ___xxtofl@sign 0009  
                       _TRISAbits 000F81                         _TRISCbits 000F83  
                       _TRISDbits 000F84                         _TRISEbits 000F85  
               __end_of_turnright 5980                         _TRISFbits 000F86  
                       _TRISGbits 000F87                         _TRISHbits 000F88  
                     ___fldiv@grs 0022                       ___fldiv@rem 001B  
   __size_of_colourclick_readRGBC 005E                 __size_of_ADC_init 001A  
         ??_I2C_2_Master_RepStart 0002              colourclick_readB@tmp 000A  
            colourclick_readC@tmp 000A        __size_of_checkbatterylevel 0020  
            colourclick_readG@tmp 000A                       _CM1CON0bits 000ED0  
                     _CM1CON1bits 000ED1              colourclick_readR@tmp 000A  
                     ___flmul@grs 000E                      _EUSART4RXbuf 017C  
                    _EUSART4TXbuf 0200         sendCharSerial4@charToSend 0001  
                      main@motorL 00D8                        main@motorR 00E1  
        __size_of_DCmotors_setPWM 01D4                    __end_of___flge 4ABA  
      colourclick_readRGBC@tmpval 000C                    __end_of___fleq 5328  
                  ?_DCmotors_init 0001                       vfpfcnvrt@ap 004C  
                     vfpfcnvrt@ct 00A8                       vfpfcnvrt@fp 0048  
                     vfpfcnvrt@ll 0098                    __end_of___wmul 5CC8  
                  __end_of_efgtoa 1AA4                    __end_of_floorf 3C30  
                      floorf@F527 0190                    __end_of_strcpy 569E  
                  __end_of_strlen 5BF2               start_initialization 5C22  
                     __end_of_abs 5ADC              _DCmotors_calibration 479E  
                     __end_of_pad 510A                     _TxBufWriteCnt 005F  
                _unknowncard_flag 00F7                   _returnhome_flag 00F6  
        __size_of_sendCharSerial4 0018             __end_of___fpclassifyf 4BB8  
    __size_of_colourcards_testing 020C           _colourclick_calibration 4DA4  
                    turnright@deg 0026                       vfprintf@fmt 0054  
        ?_colourclick_writetoaddr 0003                          ??___flge 0022  
                        ??___fleq 0009      __end_of_colourclickLEDs_init 5DB8  
                        ??___wmul 0005          __end_of_colourclick_init 5B14  
        colourcards_testing@B_rel 016C          colourcards_testing@C_rel 0170  
                        ??_efgtoa 0043          colourcards_testing@G_rel 0168  
                        ??_floorf 002C          colourcards_testing@R_rel 0164  
              DCmotors_testing@mL 0028                DCmotors_testing@mR 002A  
            _colourcards_readRGBC 1AA4                          ??_strcpy 0005  
                        ??_strlen 0003                         ___fladd@a 0005  
                       ___fladd@b 0001                         ___fldiv@a 0013  
                       ___fldiv@b 000F                         ___flmul@a 0005  
                       ___flmul@b 0001                       __pbssCOMRAM 005E  
                       ___flsub@a 001E                         ___flsub@b 001A  
                   __pcstackBANK0 0060                     __pcstackBANK1 0100  
           ?_DCmotors_calibration 0028                  ___aodiv@dividend 0001  
         __size_of_buggyLEDs_init 0016                 __size_of___xxtofl 01B4  
                       _atoi$3014 0010                         _atoi$3015 0014  
                       _atoi$3016 0012                         __pnvBANK0 00FB  
                     _efgtoa$2953 0064                       _efgtoa$2948 0060  
                     _efgtoa$2957 0066                       _efgtoa$2949 0062  
                     _efgtoa$2958 0068                       _efgtoa$2959 006A  
                       _dtoa$2924 002E                       _clear_lower 00F2  
                     _clear_upper 0198                   ??_DCmotors_init 0001  
       __size_of_DCmotors_testing 0236                          ?___aodiv 0001  
                        ?___fladd 0001                          ?___aomod 0001  
                        ?___fldiv 000F                          ?___awdiv 0007  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 0001  
                        ?___flsub 001A                          ?___fltol 0001  
           ?_colourcards_readRGBC 0028              I2C_2_Master_Read@ack 0003  
               __size_of_vfprintf 0066                 ??_DCmotors_setPWM 0011  
            I2C_2_Master_Read@tmp 0004                       __smallconst 0E00  
                        ?_forward 001A                          ?_isdigit 0001  
               _I2C_2_Master_Idle 5C7A                 _I2C_2_Master_Init 5C50  
               _I2C_2_Master_Read 5A5A                 _I2C_2_Master_Stop 5DD0  
                        ?_isspace 0001                 __size_of_turnleft 0050  
                        ?_isupper 0001                      _RxBufReadCnt 00F9  
                        _ADC_init 5D4A                          ?_reverse 001A  
              ?_I2C_2_Master_Idle 0001                ?_I2C_2_Master_Init 0001  
              ?_I2C_2_Master_Read 0001                ?_I2C_2_Master_Stop 0001  
                        ?_sprintf 00AC                          ?_tolower 0007  
                  __size_of_fputc 00CA                    __size_of_fputs 0044  
                        ?_strncmp 0001                    __size_of_right 00F6  
                  __size_of_putch 0002         ??_colourclick_calibration 000E  
    __end_of_clicker2buttons_init 5DD0                 _sendStringSerial4 5BF2  
             ??_I2C_2_Master_Idle 0001               ??_I2C_2_Master_Init 0001  
             ??_I2C_2_Master_Read 0002                    ___wmul@product 0005  
                        _LATAbits 000F79               ??_I2C_2_Master_Stop 0002  
                        _LATCbits 000F7B                 _colourclickLEDs_C 5CC8  
                        _LATDbits 000F7C                          _LATEbits 000F7D  
                        _LATFbits 000F7E                          _LATGbits 000F7F  
                        _LATHbits 000F80                          _PIE0bits 000E29  
              ?_sendStringSerial4 0002                          _PIE4bits 000E2D  
              ?_colourclickLEDs_C 0001                          _PIR0bits 000E33  
                        _PIR4bits 000E37                 ??_sendCharSerial4 0001  
                        _SSP2CON2 000EDA               ??_sendStringSerial4 0004  
          DCmotors_setPWM@PWMduty 0018                          _SSP2STAT 000ED8  
             ??_colourclickLEDs_C 0001                 _colourclick_readB 5890  
               _colourclick_readC 5840                 _colourclick_readG 57F0  
               _colourclick_readR 57A0                         _vfpfcnvrt 2316  
                      _ADCON0bits 000F60         __end_of_I2C_2_Master_Idle 5CA2  
       __end_of_I2C_2_Master_Init 5C7A         __end_of_I2C_2_Master_Read 5A9C  
               ___wmul@multiplier 0001                ?_colourclick_readB 0005  
              ?_colourclick_readC 0005                ?_colourclick_readG 0005  
              ?_colourclick_readR 0005         __end_of_I2C_2_Master_Stop 5DDA  
     I2C_2_Master_Write@data_byte 0002            ??_DCmotors_calibration 002C  
                    _TxBufReadCnt 005E                      _isspace$3045 0007  
                      _CM1NCHbits 000ED2               ??_colourclick_readB 0007  
             ??_colourclick_readC 0007               ??_colourclick_readG 0007  
             ??_colourclick_readR 0007                        _CM1PCHbits 000ED3  
                      vfpfcnvrt@c 00AB                        vfpfcnvrt@f 00A4  
                   ??_USART4_init 0001         __end_of_sendStringSerial4 5C22  
     __size_of_I2C_2_Master_Start 000A              _colourclickLEDs_init 5DAA  
     __size_of_I2C_2_Master_Write 000C                         _turnright 5930  
       __end_of_colourclickLEDs_C 5CEA                       turnleft@deg 0026  
     __size_of_DCmotors_adjustval 00A0    __size_of_I2C_2_Master_RepStart 000A  
   __end_of_I2C_2_Master_RepStart 5DEE                          __Hrparam 0000  
                     turnright@mL 0022                       turnright@mR 0024  
                      _ADC_getval 5D7C      __end_of_colourclick_readRGBC 56FC  
                      vfprintf@ap 0056                          __Lrparam 0000  
                      vfprintf@fp 0052         __end_of_colourclick_readB 58E0  
       __end_of_colourclick_readC 5890         __end_of_colourclick_readG 5840  
       __end_of_colourclick_readR 57F0                         forward@mL 001A  
                       forward@mR 001C            ??_colourcards_readRGBC 002E  
                __size_of___aodiv 0188                  __size_of___fladd 04C0  
                __size_of___aomod 0164                  __size_of___fldiv 039A  
                __size_of___awdiv 00C4                  __size_of___flneg 0038  
                __size_of___awmod 00B0                  __size_of___flmul 042A  
                __size_of___flsub 0046                  __size_of___fltol 0106  
                      ?_vfpfcnvrt 0048   __end_of_colourclick_calibration 4E98  
                 ___aodiv@divisor 0009                   ___aodiv@counter 0011  
             _colourcards_testing 3C30                        _ANSELDbits 000EA7  
              ___fpclassifyf@F465 0194                        _ANSELFbits 000EB4  
                      sprintf@fmt 00AE                          ___xxtofl 4010  
          DCmotors_calibration@mL 0028            DCmotors_calibration@mR 002A  
                  _buggyLEDs_init 5D94                  __size_of_forward 009A  
                __size_of_isdigit 0038                  __size_of_isspace 0052  
                        __ptext10 2316                          __ptext11 4E98  
                        __ptext20 2880                          __ptext12 0E4C  
                        __ptext21 5B4C                          __ptext13 55E0  
                        __ptext30 5DF8                          __ptext22 2D40  
                        __ptext14 5B14                          __ptext31 5A9C  
                        __ptext23 527E                          __ptext15 5640  
                        __ptext40 569E                          __ptext32 44F0  
                        __ptext24 51CE                          __ptext16 3A1E  
                        __ptext41 57A0                          __ptext33 4368  
                        __ptext25 3504                          __ptext17 4ABA  
                        __ptext50 5C7A                          __ptext42 57F0  
                        __ptext34 41C4                          __ptext26 5044  
                        __ptext18 48B0                          __ptext51 4010  
                        __ptext43 5840                          __ptext35 574E  
                        __ptext27 5BBC                          __ptext19 59D0  
                        __ptext60 58E0                          __ptext52 49B6  
                        __ptext44 5890                          __ptext36 5B84  
                        __ptext28 5A16                          __ptext61 5DC4  
                        __ptext53 316A                          __ptext45 5DB8  
                        __ptext37 5BF2                          __ptext29 4F7A  
                        __ptext70 3E3C                          __ptext62 5DEE  
                        __ptext54 5D0A                          __ptext46 5DD0  
                        __ptext38 5D64                          __ptext71 5CA2  
                        __ptext63 5D94                          __ptext55 5D7C  
                        __ptext47 5DDA                          __ptext39 1AA4  
                        __ptext72 510A                          __ptext64 479E  
                        __ptext56 5D2A                          __ptext48 5DE4  
                        __ptext73 5328                          __ptext65 5930  
                        __ptext57 37E8                          __ptext49 5A5A  
                        __ptext74 5D4A                          __ptext66 5980  
                        __ptext58 53C8                          __ptext67 4BB8  
                        __ptext59 5462                          __ptext68 4CAE  
                        __ptext69 54FC                  __size_of_isupper 0038  
                __size_of_reverse 009A             ?_colourclickLEDs_init 0001  
                    _SSP2CON1bits 000ED9                      _SSP2CON2bits 000EDA  
                __size_of_sprintf 0052                  __size_of_tolower 0060  
                      ?_turnright 0022                        strcpy@dest 0001  
                __size_of_strncmp 00E2              ?_colourcards_testing 0001  
                   __size_of_atoi 01A4                     __size_of_main 014A  
                   __size_of_dtoa 02E4                     __size_of_left 00F6  
                   __size_of_stop 007E               __end_of_USART4_init 5D4A  
                       reverse@mL 001A                         reverse@mR 001C  
                _interrupts_lower 00F4                          efgtoa@fp 003C  
                        efgtoa@ne 0070                          efgtoa@pp 006E  
                        efgtoa@ou 0074                  _interrupts_upper 00FB  
                        isa$xinst 000000                  _DCmotors_testing 37E8  
                      _RC4STAbits 000EE7                          _vfprintf 557A  
               ?_colourclick_init 0001               DCmotors_adjustval@i 0003  
              ??_colourclick_init 0005        __size_of_I2C_2_Master_Idle 0028  
      __size_of_I2C_2_Master_Init 002A        __size_of_I2C_2_Master_Read 0042  
                ___aomod@dividend 0001                  DCmotors_setPWM@m 000F  
            _clicker2buttons_init 5DC4        __size_of_I2C_2_Master_Stop 000A  
                        _turnleft 5980                        turnleft@mL 0022  
                      turnleft@mR 0024            __end_of_buggyLEDs_init 5DAA  
                  _vfpfcnvrt$2973 00A0                    _vfpfcnvrt$2978 00A2  
                      _INTCONbits 000FF2  __size_of_colourclick_writetoaddr 0020  
  colourclick_writetoaddr@address 0004                          isdigit@c 0001  
                     _PWM6CONbits 000FA4        __size_of_sendStringSerial4 0030  
                     _PWM7CONbits 000FA1        __size_of_colourclickLEDs_C 0022  
                       sprintf@ap 00C8                      _DAC1CON0bits 000EC6  
                    _DAC1CON1bits 000EC7             ??_colourcards_testing 005A  
                        isspace@c 0001                          right@deg 001E  
                       strcpy@src 0003                          isupper@c 0001  
                       strncmp@_l 0001                         strncmp@_r 0003  
                 _DCmotors_setPWM 3E3C                       ?_ADC_getval 0001  
                     efgtoa@nmode 0080        __size_of_colourclick_readB 0050  
      __size_of_colourclick_readC 0050        __size_of_colourclick_readG 0050  
      __size_of_colourclick_readR 0050                   ___aomod@divisor 0009  
                     ??_vfpfcnvrt 004E                   ___aomod@counter 0011  
           ?_clicker2buttons_init 0001                          sprintf@f 00CA  
                        tolower@c 0007                          sprintf@s 00AC  
                 ?_buggyLEDs_init 0001            __size_of___fpclassifyf 00FE  
                      _SSP2DATPPS 000E1D                        _SSP2CLKPPS 000E1C  
                        strncmp@l 0008                          strncmp@n 0005  
                        strncmp@r 000A                    _DCmotors_lower 00FE  
          ??_colourclickLEDs_init 0002                    _DCmotors_upper 00FD  
            _colourclick_readRGBC 569E                     ___fladd@signs 000D  
                     _USART4_init 5D2A                        _TX4STAbits 000EE8  
                     ??_turnright 0028                      ___aodiv@sign 0012  
                 _sendCharSerial4 5D64                      ___fladd@aexp 000E  
                    ___fladd@bexp 000F                      ___aomod@sign 0012  
