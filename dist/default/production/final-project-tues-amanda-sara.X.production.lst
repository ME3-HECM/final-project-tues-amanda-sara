

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec  7 10:43:13 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 05/05/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     _INT1PPS	set	3569
    98  0000                     _PIE4bits	set	3629
    99  0000                     _TX4REG	set	3812
   100  0000                     _RC4REG	set	3811
   101  0000                     _PIR4bits	set	3639
   102  0000                     _RC4STAbits	set	3815
   103  0000                     _SP4BRGH	set	3814
   104  0000                     _SP4BRGL	set	3813
   105  0000                     _TX4STAbits	set	3816
   106  0000                     _BAUD4CONbits	set	3817
   107  0000                     _RX4PPS	set	3605
   108  0000                     _RC0PPS	set	3682
   109  0000                     _ANSELFbits	set	3764
   110  0000                     _PIR0bits	set	3635
   111  0000                     _IPR0bits	set	3615
   112  0000                     _PIE0bits	set	3625
   113  0000                     _ANSELBbits	set	3738
   114  0000                     _RC7PPS	set	3689
   115  0000                     _RE2PPS	set	3700
   116  0000                     _SSP2BUF	set	3797
   117  0000                     _SSP2CON2bits	set	3802
   118  0000                     _SSP2CON2	set	3802
   119  0000                     _SSP2STAT	set	3800
   120  0000                     _RD6PPS	set	3696
   121  0000                     _RD5PPS	set	3695
   122  0000                     _SSP2CLKPPS	set	3612
   123  0000                     _SSP2DATPPS	set	3613
   124  0000                     _ANSELDbits	set	3751
   125  0000                     _SSP2ADD	set	3798
   126  0000                     _SSP2CON1bits	set	3801
   127  0000                     _ADPCH	set	3935
   128  0000                     _ADREFbits	set	3928
   129  0000                     _LATAbits	set	3961
   130  0000                     _TRISAbits	set	3969
   131  0000                     _ADRESH	set	3940
   132  0000                     _ADCON0bits	set	3936
   133  0000                     _INTCONbits	set	4082
   134  0000                     _TRISBbits	set	3970
   135  0000                     _LATFbits	set	3966
   136  0000                     _TRISFbits	set	3974
   137  0000                     _LATDbits	set	3964
   138  0000                     _PWM7CONbits	set	4001
   139  0000                     _PWM6CONbits	set	4004
   140  0000                     _PWM7DCH	set	4000
   141  0000                     _PWM6DCH	set	4003
   142  0000                     _LATGbits	set	3967
   143  0000                     _LATCbits	set	3963
   144  0000                     _LATEbits	set	3965
   145  0000                     _TRISGbits	set	3975
   146  0000                     _TRISCbits	set	3971
   147  0000                     _TRISEbits	set	3973
   148  0000                     _T2PR	set	4028
   149  0000                     _T2CLKCONbits	set	4031
   150  0000                     _T2HLTbits	set	4030
   151  0000                     _T2CONbits	set	4029
   152  0000                     _LATHbits	set	3968
   153  0000                     _TRISHbits	set	3976
   154  0000                     _TRISDbits	set	3972
   155                           
   156                           	psect	smallconst
   157  000E00                     __psmallconst:
   158                           	callstack 0
   159  000E00  00                 	db	0
   160  000E01                     STR_1:
   161                           
   162                           ; BSR set to: 14
   163  000E01  25                 	db	37
   164  000E02  69                 	db	105	;'i'
   165  000E03  20                 	db	32
   166  000E04  25                 	db	37
   167  000E05  69                 	db	105	;'i'
   168  000E06  20                 	db	32
   169  000E07  25                 	db	37
   170  000E08  69                 	db	105	;'i'
   171  000E09  20                 	db	32
   172  000E0A  25                 	db	37
   173  000E0B  69                 	db	105	;'i'
   174  000E0C  0A                 	db	10
   175  000E0D  00                 	db	0
   176  000E0E  00                 	db	0	; dummy byte at the end
   177  0000                     
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181  001C50                     __pcinit:
   182                           	callstack 0
   183  001C50                     start_initialization:
   184                           	callstack 0
   185  001C50                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Clear objects allocated to BANK1 (60 bytes)
   189  001C50  EE01  F000         	lfsr	0,__pbssBANK1
   190  001C54  0E3C               	movlw	60
   191  001C56                     clear_0:
   192  001C56  6AEE               	clrf	postinc0,c
   193  001C58  06E8               	decf	wreg,f,c
   194  001C5A  E1FD               	bnz	clear_0
   195                           
   196                           ; Clear objects allocated to BANK0 (58 bytes)
   197  001C5C  EE00  F0C6         	lfsr	0,__pbssBANK0
   198  001C60  0E3A               	movlw	58
   199  001C62                     clear_1:
   200  001C62  6AEE               	clrf	postinc0,c
   201  001C64  06E8               	decf	wreg,f,c
   202  001C66  E1FD               	bnz	clear_1
   203                           
   204                           ; Clear objects allocated to COMRAM (8 bytes)
   205  001C68  EE00  F04F         	lfsr	0,__pbssCOMRAM
   206  001C6C  0E08               	movlw	8
   207  001C6E                     clear_2:
   208  001C6E  6AEE               	clrf	postinc0,c
   209  001C70  06E8               	decf	wreg,f,c
   210  001C72  E1FD               	bnz	clear_2
   211  001C74                     end_of_initialization:
   212                           	callstack 0
   213  001C74                     __end_of__initialization:
   214                           	callstack 0
   215  001C74  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   216  001C76  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   217  001C78  0E00               	movlw	low (__Lsmallconst shr (0+16))
   218  001C7A  6EF8               	movwf	tblptru,c
   219  001C7C  0E0E               	movlw	high __Lsmallconst
   220  001C7E  6EF7               	movwf	tblptrh,c
   221  001C80  0100               	movlb	0
   222  001C82  EFC7  F00A         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225  00004F                     __pbssCOMRAM:
   226                           	callstack 0
   227  00004F                     _prec:
   228                           	callstack 0
   229  00004F                     	ds	2
   230  000051                     _flags:
   231                           	callstack 0
   232  000051                     	ds	2
   233  000053                     _TxBufReadCnt:
   234                           	callstack 0
   235  000053                     	ds	1
   236  000054                     _TxBufWriteCnt:
   237                           	callstack 0
   238  000054                     	ds	1
   239  000055                     _RxBufReadCnt:
   240                           	callstack 0
   241  000055                     	ds	1
   242  000056                     _RxBufWriteCnt:
   243                           	callstack 0
   244  000056                     	ds	1
   245                           
   246                           	psect	bssBANK0
   247  0000C6                     __pbssBANK0:
   248                           	callstack 0
   249  0000C6                     _EUSART4RXbuf:
   250                           	callstack 0
   251  0000C6                     	ds	20
   252  0000DA                     _nout:
   253                           	callstack 0
   254  0000DA                     	ds	2
   255  0000DC                     _width:
   256                           	callstack 0
   257  0000DC                     	ds	2
   258  0000DE                     _battery_flag:
   259                           	callstack 0
   260  0000DE                     	ds	1
   261  0000DF                     _card_flag:
   262                           	callstack 0
   263  0000DF                     	ds	1
   264  0000E0                     _dbuf:
   265                           	callstack 0
   266  0000E0                     	ds	32
   267                           
   268                           	psect	bssBANK1
   269  000100                     __pbssBANK1:
   270                           	callstack 0
   271  000100                     _EUSART4TXbuf:
   272                           	callstack 0
   273  000100                     	ds	60
   274                           
   275                           	psect	cstackBANK0
   276  000060                     __pcstackBANK0:
   277                           	callstack 0
   278  000060                     vfpfcnvrt@ll:
   279                           	callstack 0
   280                           
   281                           ; 8 bytes @ 0x0
   282  000060                     	ds	8
   283  000068                     ?_vfprintf:
   284                           	callstack 0
   285  000068                     vfprintf@fp:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x8
   289  000068                     	ds	2
   290  00006A                     vfprintf@fmt:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xA
   294  00006A                     	ds	2
   295  00006C                     vfprintf@ap:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0xC
   299  00006C                     	ds	2
   300  00006E                     vfprintf@cfmt:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0xE
   304  00006E                     	ds	2
   305  000070                     ?_sprintf:
   306                           	callstack 0
   307  000070                     sprintf@s:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x10
   311  000070                     	ds	2
   312  000072                     sprintf@fmt:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x12
   316  000072                     	ds	10
   317  00007C                     sprintf@ap:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x1C
   321  00007C                     	ds	2
   322  00007E                     sprintf@f:
   323                           	callstack 0
   324                           
   325                           ; 6 bytes @ 0x1E
   326  00007E                     	ds	6
   327  000084                     ??_main:
   328                           
   329                           ; 1 bytes @ 0x24
   330  000084                     	ds	2
   331  000086                     main@buf:
   332                           	callstack 0
   333                           
   334                           ; 40 bytes @ 0x26
   335  000086                     	ds	40
   336  0000AE                     main@initial:
   337                           	callstack 0
   338                           
   339                           ; 8 bytes @ 0x4E
   340  0000AE                     	ds	8
   341  0000B6                     main@tmpR:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x56
   345  0000B6                     	ds	2
   346  0000B8                     main@tmpG:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x58
   350  0000B8                     	ds	2
   351  0000BA                     main@tmpB:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x5A
   355  0000BA                     	ds	2
   356  0000BC                     main@tmpC:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x5C
   360  0000BC                     	ds	2
   361  0000BE                     main@current:
   362                           	callstack 0
   363                           
   364                           ; 8 bytes @ 0x5E
   365  0000BE                     	ds	8
   366                           
   367                           	psect	cstackCOMRAM
   368  000001                     __pcstackCOMRAM:
   369                           	callstack 0
   370  000001                     ??i2_I2C_2_Master_Idle:
   371  000001                     
   372                           ; 1 bytes @ 0x0
   373  000001                     	ds	1
   374  000002                     i2I2C_2_Master_Write@data_byte:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x1
   378  000002                     	ds	1
   379  000003                     i2colorclick_writetoaddr@value:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x2
   383  000003                     	ds	1
   384  000004                     i2colorclick_writetoaddr@address:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x3
   388  000004                     	ds	1
   389  000005                     ??i2_colorclick_int_init:
   390                           
   391                           ; 1 bytes @ 0x4
   392  000005                     	ds	1
   393  000006                     ??_HighISR:
   394  000006                     
   395                           ; 1 bytes @ 0x5
   396  000006                     	ds	1
   397  000007                     ??_LowISR:
   398                           
   399                           ; 1 bytes @ 0x6
   400  000007                     	ds	1
   401  000008                     ??_I2C_2_Master_Idle:
   402  000008                     ?_strlen:
   403                           	callstack 0
   404  000008                     ?___aodiv:
   405                           	callstack 0
   406  000008                     ?___aomod:
   407                           	callstack 0
   408  000008                     colorclick_toggleClearLED@toggle:
   409                           	callstack 0
   410  000008                     sendCharSerial4@charToSend:
   411                           	callstack 0
   412  000008                     fputc@c:
   413                           	callstack 0
   414  000008                     strlen@s:
   415                           	callstack 0
   416  000008                     ___aodiv@dividend:
   417                           	callstack 0
   418  000008                     ___aomod@dividend:
   419                           	callstack 0
   420                           
   421                           ; 8 bytes @ 0x7
   422  000008                     	ds	1
   423  000009                     ??_I2C_2_Master_Read:
   424  000009                     I2C_2_Master_Write@data_byte:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x8
   428  000009                     	ds	1
   429  00000A                     I2C_2_Master_Read@ack:
   430                           	callstack 0
   431  00000A                     colorclick_writetoaddr@value:
   432                           	callstack 0
   433  00000A                     sendStringSerial4@string:
   434                           	callstack 0
   435  00000A                     fputc@fp:
   436                           	callstack 0
   437  00000A                     strlen@a:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x9
   441  00000A                     	ds	1
   442  00000B                     I2C_2_Master_Read@tmp:
   443                           	callstack 0
   444  00000B                     colorclick_writetoaddr@address:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0xA
   448  00000B                     	ds	1
   449  00000C                     ??_colorclick_init:
   450  00000C                     ??_sendStringSerial4:
   451  00000C                     ??_colorclick_int_init:
   452  00000C                     ??_fputc:
   453  00000C                     ?_colorclick_readRed:
   454                           	callstack 0
   455  00000C                     ?_colorclick_readGreen:
   456                           	callstack 0
   457  00000C                     ?_colorclick_readBlue:
   458                           	callstack 0
   459  00000C                     ?_colorclick_readClear:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xB
   463  00000C                     	ds	1
   464  00000D                     
   465                           ; 1 bytes @ 0xC
   466  00000D                     	ds	1
   467  00000E                     ??_colorclick_readRed:
   468  00000E                     ??_colorclick_readGreen:
   469  00000E                     ??_colorclick_readBlue:
   470  00000E                     ??_colorclick_readClear:
   471                           
   472                           ; 1 bytes @ 0xD
   473  00000E                     	ds	2
   474  000010                     ___aodiv@divisor:
   475                           	callstack 0
   476  000010                     ___aomod@divisor:
   477                           	callstack 0
   478                           
   479                           ; 8 bytes @ 0xF
   480  000010                     	ds	1
   481  000011                     colorclick_readRed@tmp:
   482                           	callstack 0
   483  000011                     colorclick_readGreen@tmp:
   484                           	callstack 0
   485  000011                     colorclick_readBlue@tmp:
   486                           	callstack 0
   487  000011                     colorclick_readClear@tmp:
   488                           	callstack 0
   489  000011                     fputs@s:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x10
   493  000011                     	ds	2
   494  000013                     ?_colorclick_readColour:
   495                           	callstack 0
   496  000013                     fputs@fp:
   497                           	callstack 0
   498  000013                     colorclick_readColour@current:
   499                           	callstack 0
   500                           
   501                           ; 8 bytes @ 0x12
   502  000013                     	ds	2
   503  000015                     fputs@c:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x14
   507  000015                     	ds	1
   508  000016                     fputs@i:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x15
   512  000016                     	ds	2
   513  000018                     ?_pad:
   514                           	callstack 0
   515  000018                     ___aodiv@counter:
   516                           	callstack 0
   517  000018                     ___aomod@counter:
   518                           	callstack 0
   519  000018                     pad@fp:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x17
   523  000018                     	ds	1
   524  000019                     ___aodiv@sign:
   525                           	callstack 0
   526  000019                     ___aomod@sign:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x18
   530  000019                     	ds	1
   531  00001A                     ?_abs:
   532                           	callstack 0
   533  00001A                     pad@buf:
   534                           	callstack 0
   535  00001A                     abs@a:
   536                           	callstack 0
   537  00001A                     ___aodiv@quotient:
   538                           	callstack 0
   539                           
   540                           ; 8 bytes @ 0x19
   541  00001A                     	ds	1
   542  00001B                     
   543                           ; 1 bytes @ 0x1A
   544  00001B                     	ds	1
   545  00001C                     ??_abs:
   546  00001C                     pad@p:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x1B
   550  00001C                     	ds	2
   551  00001E                     ??_pad:
   552                           
   553                           ; 1 bytes @ 0x1D
   554  00001E                     	ds	1
   555  00001F                     pad@i:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x1E
   559  00001F                     	ds	2
   560  000021                     pad@w:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x20
   564  000021                     	ds	2
   565  000023                     ?_dtoa:
   566                           	callstack 0
   567  000023                     dtoa@fp:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x22
   571  000023                     	ds	2
   572  000025                     dtoa@d:
   573                           	callstack 0
   574                           
   575                           ; 8 bytes @ 0x24
   576  000025                     	ds	8
   577  00002D                     ??_dtoa:
   578                           
   579                           ; 1 bytes @ 0x2C
   580  00002D                     	ds	8
   581  000035                     _dtoa$2471:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x34
   585  000035                     	ds	2
   586  000037                     dtoa@p:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x36
   590  000037                     	ds	2
   591  000039                     dtoa@w:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x38
   595  000039                     	ds	2
   596  00003B                     dtoa@s:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x3A
   600  00003B                     	ds	2
   601  00003D                     dtoa@n:
   602                           	callstack 0
   603                           
   604                           ; 8 bytes @ 0x3C
   605  00003D                     	ds	8
   606  000045                     dtoa@i:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x44
   610  000045                     	ds	2
   611  000047                     ?_vfpfcnvrt:
   612                           	callstack 0
   613  000047                     vfpfcnvrt@fp:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x46
   617  000047                     	ds	2
   618  000049                     vfpfcnvrt@fmt:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x48
   622  000049                     	ds	2
   623  00004B                     vfpfcnvrt@ap:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x4A
   627  00004B                     	ds	2
   628  00004D                     ??_vfpfcnvrt:
   629                           
   630                           ; 1 bytes @ 0x4C
   631  00004D                     	ds	2
   632  00004F                     
   633                           ; 1 bytes @ 0x4E
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   636 ;;
   637 ;; *************** function _main *****************
   638 ;; Defined at:
   639 ;;		line 37 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  buf            40   38[BANK0 ] unsigned char [40]
   644 ;;  tmpC            2   92[BANK0 ] unsigned int 
   645 ;;  tmpB            2   90[BANK0 ] unsigned int 
   646 ;;  tmpG            2   88[BANK0 ] unsigned int 
   647 ;;  tmpR            2   86[BANK0 ] unsigned int 
   648 ;;  current         8   94[BANK0 ] struct .
   649 ;;  initial         8   78[BANK0 ] struct .
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   660 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   661 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   662 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   663 ;;Total ram usage:       66 bytes
   664 ;; Hardware stack levels required when called: 15
   665 ;; This function calls:
   666 ;;		_ADC_init
   667 ;;		_USART4_init
   668 ;;		_colorclick_init
   669 ;;		_colorclick_readColour
   670 ;;		_colorclick_toggleClearLED
   671 ;;		_interrupts_init
   672 ;;		_sendStringSerial4
   673 ;;		_sprintf
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text0
   680  00158E                     __ptext0:
   681                           	callstack 0
   682  00158E                     _main:
   683                           	callstack 16
   684  00158E                     
   685                           ;main.c: 39:     ADC_init();
   686  00158E  ECF9  F00E         	call	_ADC_init	;wreg free
   687  001592                     
   688                           ;main.c: 40:     colorclick_init();
   689  001592  ECCC  F00D         	call	_colorclick_init	;wreg free
   690  001596                     
   691                           ;main.c: 41:     interrupts_init();
   692  001596  ECAC  F00E         	call	_interrupts_init	;wreg free
   693                           
   694                           ;main.c: 43:     USART4_init();
   695  00159A  ECCC  F00E         	call	_USART4_init	;wreg free
   696  00159E                     
   697                           ;main.c: 45:     TRISHbits.TRISH3 = 0;
   698  00159E  9688               	bcf	136,3,c	;volatile
   699  0015A0                     
   700                           ;main.c: 46:     LATHbits.LATH3 = 0;
   701  0015A0  9680               	bcf	128,3,c	;volatile
   702  0015A2                     
   703                           ;main.c: 49:     RGB_val initial;;main.c: 50:     RGB_val current;;main.c: 51:     initi
      +                          al = colorclick_readColour(initial);
   704  0015A2  EE20  F0AE         	lfsr	2,main@initial
   705  0015A6  EE00  F013         	lfsr	0,colorclick_readColour@current
   706  0015AA  0E07               	movlw	7
   707  0015AC                     u2021:
   708  0015AC  CFDB FFEB          	movff	plusw2,plusw0
   709  0015B0  06E8               	decf	wreg,f,c
   710  0015B2  E2FC               	bc	u2021
   711  0015B4  EC69  F00D         	call	_colorclick_readColour	;wreg free
   712  0015B8  EE20  F0AE         	lfsr	2,main@initial
   713  0015BC  0E07               	movlw	7
   714  0015BE                     u2031:
   715  0015BE  CFEB FFDB          	movff	plusw0,plusw2
   716  0015C2  06E8               	decf	wreg,f,c
   717  0015C4  E2FC               	bc	u2031
   718  0015C6                     
   719                           ;main.c: 53:     colorclick_toggleClearLED(1);
   720  0015C6  0E01               	movlw	1
   721  0015C8  EC9B  F00E         	call	_colorclick_toggleClearLED
   722  0015CC                     l2784:
   723                           
   724                           ;main.c: 60:         current = colorclick_readColour(current);
   725  0015CC  EE20  F0BE         	lfsr	2,main@current
   726  0015D0  EE00  F013         	lfsr	0,colorclick_readColour@current
   727  0015D4  0E07               	movlw	7
   728  0015D6                     u2041:
   729  0015D6  CFDB FFEB          	movff	plusw2,plusw0
   730  0015DA  06E8               	decf	wreg,f,c
   731  0015DC  E2FC               	bc	u2041
   732  0015DE  EC69  F00D         	call	_colorclick_readColour	;wreg free
   733  0015E2  EE20  F0BE         	lfsr	2,main@current
   734  0015E6  0E07               	movlw	7
   735  0015E8                     u2051:
   736  0015E8  CFEB FFDB          	movff	plusw0,plusw2
   737  0015EC  06E8               	decf	wreg,f,c
   738  0015EE  E2FC               	bc	u2051
   739  0015F0                     
   740                           ;main.c: 63:         char buf[40];;main.c: 64:         unsigned int tmpR = current.R;
   741  0015F0  C0BE  F0B6         	movff	main@current,main@tmpR
   742  0015F4  C0BF  F0B7         	movff	main@current+1,main@tmpR+1
   743  0015F8                     
   744                           ;main.c: 65:         unsigned int tmpG = current.G;
   745  0015F8  C0C0  F0B8         	movff	main@current+2,main@tmpG
   746  0015FC  C0C1  F0B9         	movff	main@current+3,main@tmpG+1
   747  001600                     
   748                           ;main.c: 66:         unsigned int tmpB = current.B;
   749  001600  C0C2  F0BA         	movff	main@current+4,main@tmpB
   750  001604  C0C3  F0BB         	movff	main@current+5,main@tmpB+1
   751  001608                     
   752                           ;main.c: 67:         unsigned int tmpC = current.C;
   753  001608  C0C4  F0BC         	movff	main@current+6,main@tmpC
   754  00160C  C0C5  F0BD         	movff	main@current+7,main@tmpC+1
   755  001610                     
   756                           ;main.c: 68:         sprintf(buf,"%i %i %i %i\n",tmpR,tmpG,tmpB,tmpC);
   757  001610  0E86               	movlw	low main@buf
   758  001612  0100               	movlb	0	; () banked
   759  001614  6F70               	movwf	sprintf@s& (0+255),b
   760  001616  0E00               	movlw	high main@buf
   761  001618  6F71               	movwf	(sprintf@s+1)& (0+255),b
   762  00161A  0E01               	movlw	low STR_1
   763  00161C  6F72               	movwf	sprintf@fmt& (0+255),b
   764  00161E  0E0E               	movlw	high STR_1
   765  001620  6F73               	movwf	(sprintf@fmt+1)& (0+255),b
   766  001622  C0B6  F074         	movff	main@tmpR,?_sprintf+4
   767  001626  C0B7  F075         	movff	main@tmpR+1,?_sprintf+5
   768  00162A  C0B8  F076         	movff	main@tmpG,?_sprintf+6
   769  00162E  C0B9  F077         	movff	main@tmpG+1,?_sprintf+7
   770  001632  C0BA  F078         	movff	main@tmpB,?_sprintf+8
   771  001636  C0BB  F079         	movff	main@tmpB+1,?_sprintf+9
   772  00163A  C0BC  F07A         	movff	main@tmpC,?_sprintf+10
   773  00163E  C0BD  F07B         	movff	main@tmpC+1,?_sprintf+11
   774  001642  EC30  F00C         	call	_sprintf	;wreg free
   775  001646                     
   776                           ;main.c: 69:         sendStringSerial4(buf);
   777  001646  0E86               	movlw	low main@buf
   778  001648  6E0A               	movwf	sendStringSerial4@string^0,c
   779  00164A  0E00               	movlw	high main@buf
   780  00164C  6E0B               	movwf	(sendStringSerial4@string+1)^0,c
   781  00164E  EC0C  F00E         	call	_sendStringSerial4	;wreg free
   782  001652                     
   783                           ;main.c: 70:         _delay((unsigned long)((500)*(64000000/4000.0)));
   784  001652  0E29               	movlw	41
   785  001654  0100               	movlb	0	; () banked
   786  001656  6F85               	movwf	(??_main+1)& (0+255),b
   787  001658  0E96               	movlw	150
   788  00165A  6F84               	movwf	??_main& (0+255),b
   789  00165C  0E7F               	movlw	127
   790  00165E                     u2067:
   791  00165E  2EE8               	decfsz	wreg,f,c
   792  001660  D7FE               	bra	u2067
   793  001662  2F84               	decfsz	??_main& (0+255),f,b
   794  001664  D7FC               	bra	u2067
   795  001666  2F85               	decfsz	(??_main+1)& (0+255),f,b
   796  001668  D7FA               	bra	u2067
   797  00166A  EFE6  F00A         	goto	l2784
   798  00166E  EF13  F000         	goto	start
   799  001672                     __end_of_main:
   800                           	callstack 0
   801                           
   802 ;; *************** function _sprintf *****************
   803 ;; Defined at:
   804 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_sprintf.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  s               2   16[BANK0 ] PTR unsigned char 
   807 ;;		 -> main@buf(40), 
   808 ;;  fmt             2   18[BANK0 ] PTR const unsigned char 
   809 ;;		 -> STR_1(13), 
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  f               6   30[BANK0 ] struct _IO_FILE
   812 ;;  ap              2   28[BANK0 ] PTR void [1]
   813 ;;		 -> ?_sprintf(2), 
   814 ;;  ret             2    0        int 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  2   16[BANK0 ] int 
   817 ;; Registers used:
   818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   824 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   825 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   827 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;Total ram usage:       20 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; Hardware stack levels required when called: 14
   831 ;; This function calls:
   832 ;;		_vfprintf
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text1
   839  001860                     __ptext1:
   840                           	callstack 0
   841  001860                     _sprintf:
   842                           	callstack 16
   843  001860  0E74               	movlw	low (?_sprintf+4)
   844  001862  0100               	movlb	0	; () banked
   845  001864  6F7C               	movwf	sprintf@ap& (0+255),b
   846  001866  0E00               	movlw	high (?_sprintf+4)
   847  001868  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
   848  00186A  C070  F07E         	movff	sprintf@s,sprintf@f
   849  00186E  C071  F07F         	movff	sprintf@s+1,sprintf@f+1
   850  001872                     
   851                           ; BSR set to: 0
   852  001872  0E00               	movlw	0
   853  001874  6F81               	movwf	(sprintf@f+3)& (0+255),b
   854  001876  0E00               	movlw	0
   855  001878  6F80               	movwf	(sprintf@f+2)& (0+255),b
   856  00187A                     
   857                           ; BSR set to: 0
   858  00187A  0E00               	movlw	0
   859  00187C  6F83               	movwf	(sprintf@f+5)& (0+255),b
   860  00187E  0E00               	movlw	0
   861  001880  6F82               	movwf	(sprintf@f+4)& (0+255),b
   862  001882                     
   863                           ; BSR set to: 0
   864  001882  0E7E               	movlw	low sprintf@f
   865  001884  6F68               	movwf	vfprintf@fp& (0+255),b
   866  001886  0E00               	movlw	high sprintf@f
   867  001888  6F69               	movwf	(vfprintf@fp+1)& (0+255),b
   868  00188A  C072  F06A         	movff	sprintf@fmt,vfprintf@fmt
   869  00188E  C073  F06B         	movff	sprintf@fmt+1,vfprintf@fmt+1
   870  001892  0E7C               	movlw	low sprintf@ap
   871  001894  6F6C               	movwf	vfprintf@ap& (0+255),b
   872  001896  0E00               	movlw	high sprintf@ap
   873  001898  6F6D               	movwf	(vfprintf@ap+1)& (0+255),b
   874  00189A  ECFF  F00B         	call	_vfprintf	;wreg free
   875  00189E  0100               	movlb	0	; () banked
   876  0018A0  5180               	movf	(sprintf@f+2)& (0+255),w,b
   877  0018A2  2570               	addwf	sprintf@s& (0+255),w,b
   878  0018A4  6ED9               	movwf	fsr2l,c
   879  0018A6  5181               	movf	(sprintf@f+3)& (0+255),w,b
   880  0018A8  2171               	addwfc	(sprintf@s+1)& (0+255),w,b
   881  0018AA  6EDA               	movwf	fsr2h,c
   882  0018AC  0E00               	movlw	0
   883  0018AE  6EDF               	movwf	indf2,c
   884  0018B0                     
   885                           ; BSR set to: 0
   886  0018B0  0012               	return		;funcret
   887  0018B2                     __end_of_sprintf:
   888                           	callstack 0
   889                           
   890 ;; *************** function _vfprintf *****************
   891 ;; Defined at:
   892 ;;		line 1390 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
   895 ;;		 -> sprintf@f(6), 
   896 ;;  fmt             2   10[BANK0 ] PTR const unsigned char 
   897 ;;		 -> STR_1(13), 
   898 ;;  ap              2   12[BANK0 ] PTR PTR void 
   899 ;;		 -> sprintf@ap(2), 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  cfmt            2   14[BANK0 ] PTR unsigned char 
   902 ;;		 -> STR_1(13), 
   903 ;; Return value:  Size  Location     Type
   904 ;;                  2    8[BANK0 ] int 
   905 ;; Registers used:
   906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   912 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   916 ;;Total ram usage:        8 bytes
   917 ;; Hardware stack levels used: 1
   918 ;; Hardware stack levels required when called: 13
   919 ;; This function calls:
   920 ;;		_vfpfcnvrt
   921 ;; This function is called by:
   922 ;;		_sprintf
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text2
   927  0017FE                     __ptext2:
   928                           	callstack 0
   929  0017FE                     _vfprintf:
   930                           	callstack 16
   931  0017FE                     
   932                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
   933  0017FE  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
   934  001802  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   935  001806                     
   936                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
   937  001806  0E00               	movlw	0
   938  001808  0100               	movlb	0	; () banked
   939  00180A  6FDB               	movwf	(_nout+1)& (0+255),b
   940  00180C  0E00               	movlw	0
   941  00180E  6FDA               	movwf	_nout& (0+255),b
   942                           
   943                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
   944  001810  EF1D  F00C         	goto	l2756
   945  001814                     l2754:
   946                           
   947                           ; BSR set to: 0
   948                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
   949  001814  C068  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
   950  001818  C069  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   951  00181C  0E6E               	movlw	low vfprintf@cfmt
   952  00181E  6E49               	movwf	vfpfcnvrt@fmt^0,c
   953  001820  0E00               	movlw	high vfprintf@cfmt
   954  001822  6E4A               	movwf	(vfpfcnvrt@fmt+1)^0,c
   955  001824  C06C  F04B         	movff	vfprintf@ap,vfpfcnvrt@ap
   956  001828  C06D  F04C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   957  00182C  EC77  F008         	call	_vfpfcnvrt	;wreg free
   958  001830  5047               	movf	?_vfpfcnvrt^0,w,c
   959  001832  0100               	movlb	0	; () banked
   960  001834  27DA               	addwf	_nout& (0+255),f,b
   961  001836  5048               	movf	(?_vfpfcnvrt+1)^0,w,c
   962  001838  23DB               	addwfc	(_nout+1)& (0+255),f,b
   963  00183A                     l2756:
   964                           
   965                           ; BSR set to: 0
   966                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
   967  00183A  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
   968  00183E  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   969  001842                     	if	0	;tblptru may be non-zero
   970  001842                     	endif
   971  001842                     	if	0	;tblptru may be non-zero
   972  001842                     	endif
   973  001842  0008               	tblrd		*
   974  001844  50F5               	movf	tablat,w,c
   975  001846  0900               	iorlw	0
   976  001848  A4D8               	btfss	status,2,c
   977  00184A  EF29  F00C         	goto	u2011
   978  00184E  EF2B  F00C         	goto	u2010
   979  001852                     u2011:
   980  001852  EF0A  F00C         	goto	l2754
   981  001856                     u2010:
   982  001856                     
   983                           ; BSR set to: 0
   984                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
   985  001856  C0DA  F068         	movff	_nout,?_vfprintf
   986  00185A  C0DB  F069         	movff	_nout+1,?_vfprintf+1
   987  00185E                     
   988                           ; BSR set to: 0
   989  00185E  0012               	return		;funcret
   990  001860                     __end_of_vfprintf:
   991                           	callstack 0
   992                           
   993 ;; *************** function _vfpfcnvrt *****************
   994 ;; Defined at:
   995 ;;		line 692 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
   998 ;;		 -> sprintf@f(6), 
   999 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  1000 ;;		 -> vfprintf@cfmt(2), 
  1001 ;;  ap              2   74[COMRAM] PTR PTR void 
  1002 ;;		 -> sprintf@ap(2), 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  ll              8    0[BANK0 ] long long 
  1005 ;;  llu             8    0        unsigned long long 
  1006 ;;  f               4    0        unsigned long long 
  1007 ;;  vp              3    0        PTR void 
  1008 ;;  ct              3    0        unsigned char [3]
  1009 ;;  cp              3    0        PTR unsigned char 
  1010 ;;  i               2    0        int 
  1011 ;;  done            2    0        int 
  1012 ;;  c               1    0        unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  2   70[COMRAM] int 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1022 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1023 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1025 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1026 ;;Total ram usage:       16 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; Hardware stack levels required when called: 12
  1029 ;; This function calls:
  1030 ;;		_dtoa
  1031 ;;		_fputc
  1032 ;; This function is called by:
  1033 ;;		_vfprintf
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text3
  1038  0010EE                     __ptext3:
  1039                           	callstack 0
  1040  0010EE                     _vfpfcnvrt:
  1041                           	callstack 16
  1042  0010EE                     
  1043                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.32/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.32/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  1044  0010EE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1045  0010F2  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1046  0010F6  CFDE FFF6          	movff	postinc2,tblptrl
  1047  0010FA  CFDD FFF7          	movff	postdec2,tblptrh
  1048  0010FE                     	if	0	;tblptru may be non-zero
  1049  0010FE                     	endif
  1050  0010FE                     	if	0	;tblptru may be non-zero
  1051  0010FE                     	endif
  1052  0010FE  0008               	tblrd		*
  1053  001100  50F5               	movf	tablat,w,c
  1054  001102  0A25               	xorlw	37
  1055  001104  A4D8               	btfss	status,2,c
  1056  001106  EF87  F008         	goto	u1971
  1057  00110A  EF89  F008         	goto	u1970
  1058  00110E                     u1971:
  1059  00110E  EF35  F009         	goto	l2742
  1060  001112                     u1970:
  1061  001112                     
  1062                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  1063  001112  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1064  001116  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1065  00111A  2ADE               	incf	postinc2,f,c
  1066  00111C  0E00               	movlw	0
  1067  00111E  22DD               	addwfc	postdec2,f,c
  1068  001120                     
  1069                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  1070  001120  0E00               	movlw	0
  1071  001122  0100               	movlb	0	; () banked
  1072  001124  6FDD               	movwf	(_width+1)& (0+255),b
  1073  001126  0E00               	movlw	0
  1074  001128  6FDC               	movwf	_width& (0+255),b
  1075  00112A  C0DC  F051         	movff	_width,_flags
  1076  00112E  C0DD  F052         	movff	_width+1,_flags+1
  1077  001132                     
  1078                           ; BSR set to: 0
  1079                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  1080  001132  684F               	setf	_prec^0,c
  1081  001134  6850               	setf	(_prec+1)^0,c
  1082  001136                     
  1083                           ; BSR set to: 0
  1084                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  1085  001136  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1086  00113A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1087  00113E  CFDE FFF6          	movff	postinc2,tblptrl
  1088  001142  CFDD FFF7          	movff	postdec2,tblptrh
  1089  001146                     	if	0	;tblptru may be non-zero
  1090  001146                     	endif
  1091  001146                     	if	0	;tblptru may be non-zero
  1092  001146                     	endif
  1093  001146  0008               	tblrd		*
  1094  001148  50F5               	movf	tablat,w,c
  1095  00114A  0A64               	xorlw	100
  1096  00114C  B4D8               	btfsc	status,2,c
  1097  00114E  EFAB  F008         	goto	u1981
  1098  001152  EFAD  F008         	goto	u1980
  1099  001156                     u1981:
  1100  001156  EFBF  F008         	goto	l2720
  1101  00115A                     u1980:
  1102  00115A                     
  1103                           ; BSR set to: 0
  1104  00115A  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1105  00115E  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1106  001162  CFDE FFF6          	movff	postinc2,tblptrl
  1107  001166  CFDD FFF7          	movff	postdec2,tblptrh
  1108  00116A                     	if	0	;tblptru may be non-zero
  1109  00116A                     	endif
  1110  00116A                     	if	0	;tblptru may be non-zero
  1111  00116A                     	endif
  1112  00116A  0008               	tblrd		*
  1113  00116C  50F5               	movf	tablat,w,c
  1114  00116E  0A69               	xorlw	105
  1115  001170  A4D8               	btfss	status,2,c
  1116  001172  EFBD  F008         	goto	u1991
  1117  001176  EFBF  F008         	goto	u1990
  1118  00117A                     u1991:
  1119  00117A  EFFF  F008         	goto	l2726
  1120  00117E                     u1990:
  1121  00117E                     l2720:
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
  1125  00117E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1126  001182  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1127  001186  2ADE               	incf	postinc2,f,c
  1128  001188  0E00               	movlw	0
  1129  00118A  22DD               	addwfc	postdec2,f,c
  1130                           
  1131                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1132  00118C  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1133  001190  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1134  001194  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1135  001198  0E02               	movlw	2
  1136  00119A  26DE               	addwf	postinc2,f,c
  1137  00119C  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1138  0011A0  0E00               	movlw	0
  1139  0011A2  22DD               	addwfc	postdec2,f,c
  1140  0011A4  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1141  0011A8  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1142  0011AC  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  1143  0011B0  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  1144  0011B4  0E00               	movlw	0
  1145  0011B6  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1146  0011B8  0EFF               	movlw	-1
  1147  0011BA  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1148  0011BC  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1149  0011BE  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1150  0011C0  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1151  0011C2  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1152  0011C4  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1153  0011C6                     
  1154                           ; BSR set to: 0
  1155                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
  1156  0011C6  C047  F023         	movff	vfpfcnvrt@fp,dtoa@fp
  1157  0011CA  C048  F024         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1158  0011CE  C060  F025         	movff	vfpfcnvrt@ll,dtoa@d
  1159  0011D2  C061  F026         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1160  0011D6  C062  F027         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1161  0011DA  C063  F028         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1162  0011DE  C064  F029         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1163  0011E2  C065  F02A         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1164  0011E6  C066  F02B         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1165  0011EA  C067  F02C         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1166  0011EE  EC08  F007         	call	_dtoa	;wreg free
  1167  0011F2  C023  F047         	movff	?_dtoa,?_vfpfcnvrt
  1168  0011F6  C024  F048         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1169  0011FA  EF50  F009         	goto	l1185
  1170  0011FE                     l2726:
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
  1174  0011FE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1175  001202  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1176  001206  CFDE FFF6          	movff	postinc2,tblptrl
  1177  00120A  CFDD FFF7          	movff	postdec2,tblptrh
  1178  00120E                     	if	0	;tblptru may be non-zero
  1179  00120E                     	endif
  1180  00120E                     	if	0	;tblptru may be non-zero
  1181  00120E                     	endif
  1182  00120E  0008               	tblrd		*
  1183  001210  50F5               	movf	tablat,w,c
  1184  001212  0A25               	xorlw	37
  1185  001214  A4D8               	btfss	status,2,c
  1186  001216  EF0F  F009         	goto	u2001
  1187  00121A  EF11  F009         	goto	u2000
  1188  00121E                     u2001:
  1189  00121E  EF28  F009         	goto	l2736
  1190  001222                     u2000:
  1191  001222                     
  1192                           ; BSR set to: 0
  1193                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
  1194  001222  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1195  001226  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1196  00122A  2ADE               	incf	postinc2,f,c
  1197  00122C  0E00               	movlw	0
  1198  00122E  22DD               	addwfc	postdec2,f,c
  1199  001230                     
  1200                           ; BSR set to: 0
  1201                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
  1202  001230  0E00               	movlw	0
  1203  001232  6E09               	movwf	(fputc@c+1)^0,c
  1204  001234  0E25               	movlw	37
  1205  001236  6E08               	movwf	fputc@c^0,c
  1206  001238  C047  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  1207  00123C  C048  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1208  001240  EC39  F00B         	call	_fputc	;wreg free
  1209  001244                     l2732:
  1210                           
  1211                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
  1212  001244  0E00               	movlw	0
  1213  001246  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  1214  001248  0E01               	movlw	1
  1215  00124A  6E47               	movwf	?_vfpfcnvrt^0,c
  1216  00124C  EF50  F009         	goto	l1185
  1217  001250                     l2736:
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
  1221  001250  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1222  001254  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1223  001258  2ADE               	incf	postinc2,f,c
  1224  00125A  0E00               	movlw	0
  1225  00125C  22DD               	addwfc	postdec2,f,c
  1226  00125E                     
  1227                           ; BSR set to: 0
  1228                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
  1229  00125E  0E00               	movlw	0
  1230  001260  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  1231  001262  0E00               	movlw	0
  1232  001264  6E47               	movwf	?_vfpfcnvrt^0,c
  1233  001266  EF50  F009         	goto	l1185
  1234  00126A                     l2742:
  1235                           
  1236                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
  1237  00126A  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1238  00126E  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1239  001272  CFDE FFF6          	movff	postinc2,tblptrl
  1240  001276  CFDD FFF7          	movff	postdec2,tblptrh
  1241  00127A                     	if	0	;tblptru may be non-zero
  1242  00127A                     	endif
  1243  00127A                     	if	0	;tblptru may be non-zero
  1244  00127A                     	endif
  1245  00127A  0008               	tblrd		*
  1246  00127C  50F5               	movf	tablat,w,c
  1247  00127E  6E08               	movwf	fputc@c^0,c
  1248  001280  6A09               	clrf	(fputc@c+1)^0,c
  1249  001282  C047  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  1250  001286  C048  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1251  00128A  EC39  F00B         	call	_fputc	;wreg free
  1252  00128E                     
  1253                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  1254  00128E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1255  001292  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1256  001296  2ADE               	incf	postinc2,f,c
  1257  001298  0E00               	movlw	0
  1258  00129A  22DD               	addwfc	postdec2,f,c
  1259  00129C  EF22  F009         	goto	l2732
  1260  0012A0                     l1185:
  1261  0012A0  0012               	return		;funcret
  1262  0012A2                     __end_of_vfpfcnvrt:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _dtoa *****************
  1266 ;; Defined at:
  1267 ;;		line 287 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  1270 ;;		 -> sprintf@f(6), 
  1271 ;;  d               8   36[COMRAM] long long 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  n               8   60[COMRAM] long long 
  1274 ;;  i               2   68[COMRAM] int 
  1275 ;;  s               2   58[COMRAM] int 
  1276 ;;  w               2   56[COMRAM] int 
  1277 ;;  p               2   54[COMRAM] int 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  2   34[COMRAM] int 
  1280 ;; Registers used:
  1281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1287 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1288 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1289 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1290 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;Total ram usage:       36 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; Hardware stack levels required when called: 11
  1294 ;; This function calls:
  1295 ;;		___aodiv
  1296 ;;		___aomod
  1297 ;;		_abs
  1298 ;;		_pad
  1299 ;; This function is called by:
  1300 ;;		_vfpfcnvrt
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text4
  1305  000E10                     __ptext4:
  1306                           	callstack 0
  1307  000E10                     _dtoa:
  1308                           	callstack 16
  1309  000E10                     
  1310                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
  1311  000E10  C025  F03D         	movff	dtoa@d,dtoa@n
  1312  000E14  C026  F03E         	movff	dtoa@d+1,dtoa@n+1
  1313  000E18  C027  F03F         	movff	dtoa@d+2,dtoa@n+2
  1314  000E1C  C028  F040         	movff	dtoa@d+3,dtoa@n+3
  1315  000E20  C029  F041         	movff	dtoa@d+4,dtoa@n+4
  1316  000E24  C02A  F042         	movff	dtoa@d+5,dtoa@n+5
  1317  000E28  C02B  F043         	movff	dtoa@d+6,dtoa@n+6
  1318  000E2C  C02C  F044         	movff	dtoa@d+7,dtoa@n+7
  1319  000E30                     
  1320                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
  1321  000E30  BE44               	btfsc	(dtoa@n+7)^0,7,c
  1322  000E32  EF1D  F007         	goto	u1821
  1323  000E36  EF20  F007         	goto	u1820
  1324  000E3A                     u1821:
  1325  000E3A  0E01               	movlw	1
  1326  000E3C  EF21  F007         	goto	u1830
  1327  000E40                     u1820:
  1328  000E40  0E00               	movlw	0
  1329  000E42                     u1830:
  1330  000E42  6E3B               	movwf	dtoa@s^0,c
  1331  000E44  6A3C               	clrf	(dtoa@s+1)^0,c
  1332                           
  1333                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  1334  000E46  503B               	movf	dtoa@s^0,w,c
  1335  000E48  103C               	iorwf	(dtoa@s+1)^0,w,c
  1336  000E4A  B4D8               	btfsc	status,2,c
  1337  000E4C  EF2A  F007         	goto	u1841
  1338  000E50  EF2C  F007         	goto	u1840
  1339  000E54                     u1841:
  1340  000E54  EF3C  F007         	goto	l2652
  1341  000E58                     u1840:
  1342  000E58                     
  1343                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  1344  000E58  1E44               	comf	(dtoa@n+7)^0,f,c
  1345  000E5A  1E43               	comf	(dtoa@n+6)^0,f,c
  1346  000E5C  1E42               	comf	(dtoa@n+5)^0,f,c
  1347  000E5E  1E41               	comf	(dtoa@n+4)^0,f,c
  1348  000E60  1E40               	comf	(dtoa@n+3)^0,f,c
  1349  000E62  1E3F               	comf	(dtoa@n+2)^0,f,c
  1350  000E64  1E3E               	comf	(dtoa@n+1)^0,f,c
  1351  000E66  6C3D               	negf	dtoa@n^0,c
  1352  000E68  0E00               	movlw	0
  1353  000E6A  223E               	addwfc	(dtoa@n+1)^0,f,c
  1354  000E6C  223F               	addwfc	(dtoa@n+2)^0,f,c
  1355  000E6E  2240               	addwfc	(dtoa@n+3)^0,f,c
  1356  000E70  2241               	addwfc	(dtoa@n+4)^0,f,c
  1357  000E72  2242               	addwfc	(dtoa@n+5)^0,f,c
  1358  000E74  2243               	addwfc	(dtoa@n+6)^0,f,c
  1359  000E76  2244               	addwfc	(dtoa@n+7)^0,f,c
  1360  000E78                     l2652:
  1361                           
  1362                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
  1363  000E78  BE50               	btfsc	(_prec+1)^0,7,c
  1364  000E7A  EF41  F007         	goto	u1851
  1365  000E7E  EF43  F007         	goto	u1850
  1366  000E82                     u1851:
  1367  000E82  EF44  F007         	goto	l2656
  1368  000E86                     u1850:
  1369  000E86                     
  1370                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
  1371  000E86  9251               	bcf	_flags^0,1,c
  1372  000E88                     l2656:
  1373                           
  1374                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
  1375  000E88  BE50               	btfsc	(_prec+1)^0,7,c
  1376  000E8A  EF51  F007         	goto	u1860
  1377  000E8E  5050               	movf	(_prec+1)^0,w,c
  1378  000E90  E106               	bnz	u1861
  1379  000E92  044F               	decf	_prec^0,w,c
  1380  000E94  B0D8               	btfsc	status,0,c
  1381  000E96  EF4F  F007         	goto	u1861
  1382  000E9A  EF51  F007         	goto	u1860
  1383  000E9E                     u1861:
  1384  000E9E  EF57  F007         	goto	l1158
  1385  000EA2                     u1860:
  1386  000EA2  0E00               	movlw	0
  1387  000EA4  6E38               	movwf	(dtoa@p+1)^0,c
  1388  000EA6  0E01               	movlw	1
  1389  000EA8  6E37               	movwf	dtoa@p^0,c
  1390  000EAA  EF5B  F007         	goto	l1160
  1391  000EAE                     l1158:
  1392  000EAE  C04F  F037         	movff	_prec,dtoa@p
  1393  000EB2  C050  F038         	movff	_prec+1,dtoa@p+1
  1394  000EB6                     l1160:
  1395                           
  1396                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 304:     w = width;
  1397  000EB6  C0DC  F039         	movff	_width,dtoa@w
  1398  000EBA  C0DD  F03A         	movff	_width+1,dtoa@w+1
  1399  000EBE                     
  1400                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
  1401  000EBE  503B               	movf	dtoa@s^0,w,c
  1402  000EC0  103C               	iorwf	(dtoa@s+1)^0,w,c
  1403  000EC2  A4D8               	btfss	status,2,c
  1404  000EC4  EF66  F007         	goto	u1871
  1405  000EC8  EF68  F007         	goto	u1870
  1406  000ECC                     u1871:
  1407  000ECC  EF6F  F007         	goto	l2664
  1408  000ED0                     u1870:
  1409  000ED0  A451               	btfss	_flags^0,2,c
  1410  000ED2  EF6D  F007         	goto	u1881
  1411  000ED6  EF6F  F007         	goto	u1880
  1412  000EDA                     u1881:
  1413  000EDA  EF72  F007         	goto	l2666
  1414  000EDE                     u1880:
  1415  000EDE                     l2664:
  1416                           
  1417                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 306:         --w;
  1418  000EDE  0639               	decf	dtoa@w^0,f,c
  1419  000EE0  A0D8               	btfss	status,0,c
  1420  000EE2  063A               	decf	(dtoa@w+1)^0,f,c
  1421  000EE4                     l2666:
  1422                           
  1423                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
  1424  000EE4  0E00               	movlw	0
  1425  000EE6  6E46               	movwf	(dtoa@i+1)^0,c
  1426  000EE8  0E1F               	movlw	31
  1427  000EEA  6E45               	movwf	dtoa@i^0,c
  1428  000EEC                     
  1429                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
  1430  000EEC  0E00               	movlw	0
  1431  000EEE  0100               	movlb	0	; () banked
  1432  000EF0  6FFF               	movwf	(_dbuf+31)& (0+255),b
  1433                           
  1434                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1435  000EF2  EFF7  F007         	goto	l2680
  1436  000EF6                     l2670:
  1437                           
  1438                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 313:         --i;
  1439  000EF6  0645               	decf	dtoa@i^0,f,c
  1440  000EF8  A0D8               	btfss	status,0,c
  1441  000EFA  0646               	decf	(dtoa@i+1)^0,f,c
  1442  000EFC                     
  1443                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
  1444  000EFC  0EE0               	movlw	low _dbuf
  1445  000EFE  2445               	addwf	dtoa@i^0,w,c
  1446  000F00  6ED9               	movwf	fsr2l,c
  1447  000F02  0E00               	movlw	high _dbuf
  1448  000F04  2046               	addwfc	(dtoa@i+1)^0,w,c
  1449  000F06  6EDA               	movwf	fsr2h,c
  1450  000F08  C03D  F008         	movff	dtoa@n,___aomod@dividend
  1451  000F0C  C03E  F009         	movff	dtoa@n+1,___aomod@dividend+1
  1452  000F10  C03F  F00A         	movff	dtoa@n+2,___aomod@dividend+2
  1453  000F14  C040  F00B         	movff	dtoa@n+3,___aomod@dividend+3
  1454  000F18  C041  F00C         	movff	dtoa@n+4,___aomod@dividend+4
  1455  000F1C  C042  F00D         	movff	dtoa@n+5,___aomod@dividend+5
  1456  000F20  C043  F00E         	movff	dtoa@n+6,___aomod@dividend+6
  1457  000F24  C044  F00F         	movff	dtoa@n+7,___aomod@dividend+7
  1458  000F28  0E0A               	movlw	10
  1459  000F2A  6E10               	movwf	___aomod@divisor^0,c
  1460  000F2C  0E00               	movlw	0
  1461  000F2E  6E11               	movwf	(___aomod@divisor+1)^0,c
  1462  000F30  0E00               	movlw	0
  1463  000F32  6E12               	movwf	(___aomod@divisor+2)^0,c
  1464  000F34  0E00               	movlw	0
  1465  000F36  6E13               	movwf	(___aomod@divisor+3)^0,c
  1466  000F38  0E00               	movlw	0
  1467  000F3A  6E14               	movwf	(___aomod@divisor+4)^0,c
  1468  000F3C  0E00               	movlw	0
  1469  000F3E  6E15               	movwf	(___aomod@divisor+5)^0,c
  1470  000F40  0E00               	movlw	0
  1471  000F42  6E16               	movwf	(___aomod@divisor+6)^0,c
  1472  000F44  0E00               	movlw	0
  1473  000F46  6E17               	movwf	(___aomod@divisor+7)^0,c
  1474  000F48  EC15  F00A         	call	___aomod	;wreg free
  1475  000F4C  C008  F02D         	movff	?___aomod,??_dtoa
  1476  000F50  C009  F02E         	movff	?___aomod+1,??_dtoa+1
  1477  000F54  C00A  F02F         	movff	?___aomod+2,??_dtoa+2
  1478  000F58  C00B  F030         	movff	?___aomod+3,??_dtoa+3
  1479  000F5C  C00C  F031         	movff	?___aomod+4,??_dtoa+4
  1480  000F60  C00D  F032         	movff	?___aomod+5,??_dtoa+5
  1481  000F64  C00E  F033         	movff	?___aomod+6,??_dtoa+6
  1482  000F68  C00F  F034         	movff	?___aomod+7,??_dtoa+7
  1483  000F6C  C02D  F01A         	movff	??_dtoa,abs@a
  1484  000F70  C02F  F01B         	movff	??_dtoa+2,abs@a+1
  1485  000F74  ECAC  F00D         	call	_abs	;wreg free
  1486  000F78  501A               	movf	?_abs^0,w,c
  1487  000F7A  0F30               	addlw	48
  1488  000F7C  6EDF               	movwf	indf2,c
  1489  000F7E                     
  1490                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 315:         --p;
  1491  000F7E  0637               	decf	dtoa@p^0,f,c
  1492  000F80  A0D8               	btfss	status,0,c
  1493  000F82  0638               	decf	(dtoa@p+1)^0,f,c
  1494  000F84                     
  1495                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 316:         --w;
  1496  000F84  0639               	decf	dtoa@w^0,f,c
  1497  000F86  A0D8               	btfss	status,0,c
  1498  000F88  063A               	decf	(dtoa@w+1)^0,f,c
  1499  000F8A                     
  1500                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
  1501  000F8A  C03D  F008         	movff	dtoa@n,___aodiv@dividend
  1502  000F8E  C03E  F009         	movff	dtoa@n+1,___aodiv@dividend+1
  1503  000F92  C03F  F00A         	movff	dtoa@n+2,___aodiv@dividend+2
  1504  000F96  C040  F00B         	movff	dtoa@n+3,___aodiv@dividend+3
  1505  000F9A  C041  F00C         	movff	dtoa@n+4,___aodiv@dividend+4
  1506  000F9E  C042  F00D         	movff	dtoa@n+5,___aodiv@dividend+5
  1507  000FA2  C043  F00E         	movff	dtoa@n+6,___aodiv@dividend+6
  1508  000FA6  C044  F00F         	movff	dtoa@n+7,___aodiv@dividend+7
  1509  000FAA  0E0A               	movlw	10
  1510  000FAC  6E10               	movwf	___aodiv@divisor^0,c
  1511  000FAE  0E00               	movlw	0
  1512  000FB0  6E11               	movwf	(___aodiv@divisor+1)^0,c
  1513  000FB2  0E00               	movlw	0
  1514  000FB4  6E12               	movwf	(___aodiv@divisor+2)^0,c
  1515  000FB6  0E00               	movlw	0
  1516  000FB8  6E13               	movwf	(___aodiv@divisor+3)^0,c
  1517  000FBA  0E00               	movlw	0
  1518  000FBC  6E14               	movwf	(___aodiv@divisor+4)^0,c
  1519  000FBE  0E00               	movlw	0
  1520  000FC0  6E15               	movwf	(___aodiv@divisor+5)^0,c
  1521  000FC2  0E00               	movlw	0
  1522  000FC4  6E16               	movwf	(___aodiv@divisor+6)^0,c
  1523  000FC6  0E00               	movlw	0
  1524  000FC8  6E17               	movwf	(___aodiv@divisor+7)^0,c
  1525  000FCA  EC51  F009         	call	___aodiv	;wreg free
  1526  000FCE  C008  F03D         	movff	?___aodiv,dtoa@n
  1527  000FD2  C009  F03E         	movff	?___aodiv+1,dtoa@n+1
  1528  000FD6  C00A  F03F         	movff	?___aodiv+2,dtoa@n+2
  1529  000FDA  C00B  F040         	movff	?___aodiv+3,dtoa@n+3
  1530  000FDE  C00C  F041         	movff	?___aodiv+4,dtoa@n+4
  1531  000FE2  C00D  F042         	movff	?___aodiv+5,dtoa@n+5
  1532  000FE6  C00E  F043         	movff	?___aodiv+6,dtoa@n+6
  1533  000FEA  C00F  F044         	movff	?___aodiv+7,dtoa@n+7
  1534  000FEE                     l2680:
  1535                           
  1536                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1537  000FEE  BE46               	btfsc	(dtoa@i+1)^0,7,c
  1538  000FF0  EF02  F008         	goto	u1891
  1539  000FF4  5046               	movf	(dtoa@i+1)^0,w,c
  1540  000FF6  E108               	bnz	u1890
  1541  000FF8  0445               	decf	dtoa@i^0,w,c
  1542  000FFA  A0D8               	btfss	status,0,c
  1543  000FFC  EF02  F008         	goto	u1891
  1544  001000  EF04  F008         	goto	u1890
  1545  001004                     u1891:
  1546  001004  EF34  F008         	goto	l2690
  1547  001008                     u1890:
  1548  001008  503D               	movf	dtoa@n^0,w,c
  1549  00100A  103E               	iorwf	(dtoa@n+1)^0,w,c
  1550  00100C  103F               	iorwf	(dtoa@n+2)^0,w,c
  1551  00100E  1040               	iorwf	(dtoa@n+3)^0,w,c
  1552  001010  1041               	iorwf	(dtoa@n+4)^0,w,c
  1553  001012  1042               	iorwf	(dtoa@n+5)^0,w,c
  1554  001014  1043               	iorwf	(dtoa@n+6)^0,w,c
  1555  001016  1044               	iorwf	(dtoa@n+7)^0,w,c
  1556  001018  A4D8               	btfss	status,2,c
  1557  00101A  EF11  F008         	goto	u1901
  1558  00101E  EF13  F008         	goto	u1900
  1559  001022                     u1901:
  1560  001022  EF7B  F007         	goto	l2670
  1561  001026                     u1900:
  1562  001026  BE38               	btfsc	(dtoa@p+1)^0,7,c
  1563  001028  EF20  F008         	goto	u1910
  1564  00102C  5038               	movf	(dtoa@p+1)^0,w,c
  1565  00102E  E106               	bnz	u1911
  1566  001030  0437               	decf	dtoa@p^0,w,c
  1567  001032  B0D8               	btfsc	status,0,c
  1568  001034  EF1E  F008         	goto	u1911
  1569  001038  EF20  F008         	goto	u1910
  1570  00103C                     u1911:
  1571  00103C  EF7B  F007         	goto	l2670
  1572  001040                     u1910:
  1573  001040  BE3A               	btfsc	(dtoa@w+1)^0,7,c
  1574  001042  EF2B  F008         	goto	u1921
  1575  001046  503A               	movf	(dtoa@w+1)^0,w,c
  1576  001048  E108               	bnz	u1920
  1577  00104A  0439               	decf	dtoa@w^0,w,c
  1578  00104C  A0D8               	btfss	status,0,c
  1579  00104E  EF2B  F008         	goto	u1921
  1580  001052  EF2D  F008         	goto	u1920
  1581  001056                     u1921:
  1582  001056  EF34  F008         	goto	l2690
  1583  00105A                     u1920:
  1584  00105A  B251               	btfsc	_flags^0,1,c
  1585  00105C  EF32  F008         	goto	u1931
  1586  001060  EF34  F008         	goto	u1930
  1587  001064                     u1931:
  1588  001064  EF7B  F007         	goto	l2670
  1589  001068                     u1930:
  1590  001068                     l2690:
  1591                           
  1592                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
  1593  001068  503B               	movf	dtoa@s^0,w,c
  1594  00106A  103C               	iorwf	(dtoa@s+1)^0,w,c
  1595  00106C  A4D8               	btfss	status,2,c
  1596  00106E  EF3B  F008         	goto	u1941
  1597  001072  EF3D  F008         	goto	u1940
  1598  001076                     u1941:
  1599  001076  EF44  F008         	goto	l2694
  1600  00107A                     u1940:
  1601  00107A  A451               	btfss	_flags^0,2,c
  1602  00107C  EF42  F008         	goto	u1951
  1603  001080  EF44  F008         	goto	u1950
  1604  001084                     u1951:
  1605  001084  EF62  F008         	goto	l2704
  1606  001088                     u1950:
  1607  001088                     l2694:
  1608                           
  1609                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 322:         --i;
  1610  001088  0645               	decf	dtoa@i^0,f,c
  1611  00108A  A0D8               	btfss	status,0,c
  1612  00108C  0646               	decf	(dtoa@i+1)^0,f,c
  1613  00108E                     
  1614                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
  1615  00108E  503B               	movf	dtoa@s^0,w,c
  1616  001090  103C               	iorwf	(dtoa@s+1)^0,w,c
  1617  001092  A4D8               	btfss	status,2,c
  1618  001094  EF4E  F008         	goto	u1961
  1619  001098  EF50  F008         	goto	u1960
  1620  00109C                     u1961:
  1621  00109C  EF56  F008         	goto	l2700
  1622  0010A0                     u1960:
  1623  0010A0  0E00               	movlw	0
  1624  0010A2  6E36               	movwf	(_dtoa$2471+1)^0,c
  1625  0010A4  0E2B               	movlw	43
  1626  0010A6  6E35               	movwf	_dtoa$2471^0,c
  1627  0010A8  EF5A  F008         	goto	l2702
  1628  0010AC                     l2700:
  1629  0010AC  0E00               	movlw	0
  1630  0010AE  6E36               	movwf	(_dtoa$2471+1)^0,c
  1631  0010B0  0E2D               	movlw	45
  1632  0010B2  6E35               	movwf	_dtoa$2471^0,c
  1633  0010B4                     l2702:
  1634  0010B4  0EE0               	movlw	low _dbuf
  1635  0010B6  2445               	addwf	dtoa@i^0,w,c
  1636  0010B8  6ED9               	movwf	fsr2l,c
  1637  0010BA  0E00               	movlw	high _dbuf
  1638  0010BC  2046               	addwfc	(dtoa@i+1)^0,w,c
  1639  0010BE  6EDA               	movwf	fsr2h,c
  1640  0010C0  C035  FFDF         	movff	_dtoa$2471,indf2
  1641  0010C4                     l2704:
  1642                           
  1643                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
  1644  0010C4  C023  F018         	movff	dtoa@fp,pad@fp
  1645  0010C8  C024  F019         	movff	dtoa@fp+1,pad@fp+1
  1646  0010CC  0EE0               	movlw	low _dbuf
  1647  0010CE  2445               	addwf	dtoa@i^0,w,c
  1648  0010D0  6E1A               	movwf	pad@buf^0,c
  1649  0010D2  0E00               	movlw	high _dbuf
  1650  0010D4  2046               	addwfc	(dtoa@i+1)^0,w,c
  1651  0010D6  6E1B               	movwf	(pad@buf+1)^0,c
  1652  0010D8  C039  F01C         	movff	dtoa@w,pad@p
  1653  0010DC  C03A  F01D         	movff	dtoa@w+1,pad@p+1
  1654  0010E0  EC9E  F00B         	call	_pad	;wreg free
  1655  0010E4  C018  F023         	movff	?_pad,?_dtoa
  1656  0010E8  C019  F024         	movff	?_pad+1,?_dtoa+1
  1657  0010EC  0012               	return		;funcret
  1658  0010EE                     __end_of_dtoa:
  1659                           	callstack 0
  1660                           
  1661 ;; *************** function _pad *****************
  1662 ;; Defined at:
  1663 ;;		line 72 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  1666 ;;		 -> sprintf@f(6), 
  1667 ;;  buf             2   25[COMRAM] PTR unsigned char 
  1668 ;;		 -> dbuf(32), 
  1669 ;;  p               2   27[COMRAM] int 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  w               2   32[COMRAM] int 
  1672 ;;  i               2   30[COMRAM] int 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  2   23[COMRAM] int 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1682 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1683 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1685 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;Total ram usage:       11 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 10
  1689 ;; This function calls:
  1690 ;;		_fputc
  1691 ;;		_fputs
  1692 ;;		_strlen
  1693 ;; This function is called by:
  1694 ;;		_dtoa
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text5
  1699  00173C                     __ptext5:
  1700                           	callstack 0
  1701  00173C                     _pad:
  1702                           	callstack 16
  1703  00173C                     
  1704                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  1705  00173C  A051               	btfss	_flags^0,0,c
  1706  00173E  EFA3  F00B         	goto	u1771
  1707  001742  EFA5  F00B         	goto	u1770
  1708  001746                     u1771:
  1709  001746  EFAF  F00B         	goto	l2624
  1710  00174A                     u1770:
  1711  00174A                     
  1712                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  1713  00174A  C01A  F011         	movff	pad@buf,fputs@s
  1714  00174E  C01B  F012         	movff	pad@buf+1,fputs@s+1
  1715  001752  C018  F013         	movff	pad@fp,fputs@fp
  1716  001756  C019  F014         	movff	pad@fp+1,fputs@fp+1
  1717  00175A  EC47  F00D         	call	_fputs	;wreg free
  1718  00175E                     l2624:
  1719                           
  1720                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  1721  00175E  BE1D               	btfsc	(pad@p+1)^0,7,c
  1722  001760  EFB4  F00B         	goto	u1781
  1723  001764  EFB6  F00B         	goto	u1780
  1724  001768                     u1781:
  1725  001768  EFBC  F00B         	goto	l2628
  1726  00176C                     u1780:
  1727  00176C  C01C  F021         	movff	pad@p,pad@w
  1728  001770  C01D  F022         	movff	pad@p+1,pad@w+1
  1729  001774  EFC0  F00B         	goto	l1147
  1730  001778                     l2628:
  1731  001778  0E00               	movlw	0
  1732  00177A  6E22               	movwf	(pad@w+1)^0,c
  1733  00177C  0E00               	movlw	0
  1734  00177E  6E21               	movwf	pad@w^0,c
  1735  001780                     l1147:
  1736                           
  1737                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1738  001780  0E00               	movlw	0
  1739  001782  6E20               	movwf	(pad@i+1)^0,c
  1740  001784  0E00               	movlw	0
  1741  001786  6E1F               	movwf	pad@i^0,c
  1742                           
  1743                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1744  001788  EFD2  F00B         	goto	l2634
  1745  00178C                     l2630:
  1746                           
  1747                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  1748  00178C  0E00               	movlw	0
  1749  00178E  6E09               	movwf	(fputc@c+1)^0,c
  1750  001790  0E20               	movlw	32
  1751  001792  6E08               	movwf	fputc@c^0,c
  1752  001794  C018  F00A         	movff	pad@fp,fputc@fp
  1753  001798  C019  F00B         	movff	pad@fp+1,fputc@fp+1
  1754  00179C  EC39  F00B         	call	_fputc	;wreg free
  1755  0017A0                     
  1756                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1757  0017A0  4A1F               	infsnz	pad@i^0,f,c
  1758  0017A2  2A20               	incf	(pad@i+1)^0,f,c
  1759  0017A4                     l2634:
  1760                           
  1761                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1762  0017A4  5021               	movf	pad@w^0,w,c
  1763  0017A6  5C1F               	subwf	pad@i^0,w,c
  1764  0017A8  5020               	movf	(pad@i+1)^0,w,c
  1765  0017AA  0A80               	xorlw	128
  1766  0017AC  6E1E               	movwf	??_pad^0,c
  1767  0017AE  5022               	movf	(pad@w+1)^0,w,c
  1768  0017B0  0A80               	xorlw	128
  1769  0017B2  581E               	subwfb	??_pad^0,w,c
  1770  0017B4  A0D8               	btfss	status,0,c
  1771  0017B6  EFDF  F00B         	goto	u1791
  1772  0017BA  EFE1  F00B         	goto	u1790
  1773  0017BE                     u1791:
  1774  0017BE  EFC6  F00B         	goto	l2630
  1775  0017C2                     u1790:
  1776  0017C2                     
  1777                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  1778  0017C2  B051               	btfsc	_flags^0,0,c
  1779  0017C4  EFE6  F00B         	goto	u1801
  1780  0017C8  EFE8  F00B         	goto	u1800
  1781  0017CC                     u1801:
  1782  0017CC  EFF2  F00B         	goto	l2638
  1783  0017D0                     u1800:
  1784  0017D0                     
  1785                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  1786  0017D0  C01A  F011         	movff	pad@buf,fputs@s
  1787  0017D4  C01B  F012         	movff	pad@buf+1,fputs@s+1
  1788  0017D8  C018  F013         	movff	pad@fp,fputs@fp
  1789  0017DC  C019  F014         	movff	pad@fp+1,fputs@fp+1
  1790  0017E0  EC47  F00D         	call	_fputs	;wreg free
  1791  0017E4                     l2638:
  1792                           
  1793                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
  1794  0017E4  C01A  F008         	movff	pad@buf,strlen@s
  1795  0017E8  C01B  F009         	movff	pad@buf+1,strlen@s+1
  1796  0017EC  EC43  F00E         	call	_strlen	;wreg free
  1797  0017F0  5021               	movf	pad@w^0,w,c
  1798  0017F2  2408               	addwf	?_strlen^0,w,c
  1799  0017F4  6E18               	movwf	?_pad^0,c
  1800  0017F6  5022               	movf	(pad@w+1)^0,w,c
  1801  0017F8  2009               	addwfc	(?_strlen+1)^0,w,c
  1802  0017FA  6E19               	movwf	(?_pad+1)^0,c
  1803  0017FC  0012               	return		;funcret
  1804  0017FE                     __end_of_pad:
  1805                           	callstack 0
  1806                           
  1807 ;; *************** function _strlen *****************
  1808 ;; Defined at:
  1809 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  s               2    7[COMRAM] PTR const unsigned char 
  1812 ;;		 -> dbuf(32), 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  a               2    9[COMRAM] PTR const unsigned char 
  1815 ;;		 -> dbuf(32), 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2    7[COMRAM] unsigned int 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1828 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1829 ;;Total ram usage:        4 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 7
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_pad
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text6
  1840  001C86                     __ptext6:
  1841                           	callstack 0
  1842  001C86                     _strlen:
  1843                           	callstack 18
  1844  001C86  C008  F00A         	movff	strlen@s,strlen@a
  1845  001C8A  C009  F00B         	movff	strlen@s+1,strlen@a+1
  1846  001C8E  EF4B  F00E         	goto	l2534
  1847  001C92                     l2532:
  1848  001C92  4A08               	infsnz	strlen@s^0,f,c
  1849  001C94  2A09               	incf	(strlen@s+1)^0,f,c
  1850  001C96                     l2534:
  1851  001C96  C008  FFD9         	movff	strlen@s,fsr2l
  1852  001C9A  C009  FFDA         	movff	strlen@s+1,fsr2h
  1853  001C9E  50DF               	movf	indf2,w,c
  1854  001CA0  A4D8               	btfss	status,2,c
  1855  001CA2  EF55  F00E         	goto	u1631
  1856  001CA6  EF57  F00E         	goto	u1630
  1857  001CAA                     u1631:
  1858  001CAA  EF49  F00E         	goto	l2532
  1859  001CAE                     u1630:
  1860  001CAE  500A               	movf	strlen@a^0,w,c
  1861  001CB0  5C08               	subwf	strlen@s^0,w,c
  1862  001CB2  6E08               	movwf	?_strlen^0,c
  1863  001CB4  500B               	movf	(strlen@a+1)^0,w,c
  1864  001CB6  5809               	subwfb	(strlen@s+1)^0,w,c
  1865  001CB8  6E09               	movwf	(?_strlen+1)^0,c
  1866  001CBA  0012               	return		;funcret
  1867  001CBC                     __end_of_strlen:
  1868                           	callstack 0
  1869                           
  1870 ;; *************** function _fputs *****************
  1871 ;; Defined at:
  1872 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputs.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  s               2   16[COMRAM] PTR const unsigned char 
  1875 ;;		 -> dbuf(32), 
  1876 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1877 ;;		 -> sprintf@f(6), 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  i               2   21[COMRAM] int 
  1880 ;;  c               1   20[COMRAM] unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  2   16[COMRAM] int 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1891 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1893 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1894 ;;Total ram usage:        7 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; Hardware stack levels required when called: 9
  1897 ;; This function calls:
  1898 ;;		_fputc
  1899 ;; This function is called by:
  1900 ;;		_pad
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text7
  1905  001A8E                     __ptext7:
  1906                           	callstack 0
  1907  001A8E                     _fputs:
  1908                           	callstack 16
  1909  001A8E  0E00               	movlw	0
  1910  001A90  6E17               	movwf	(fputs@i+1)^0,c
  1911  001A92  0E00               	movlw	0
  1912  001A94  6E16               	movwf	fputs@i^0,c
  1913  001A96  EF58  F00D         	goto	l2528
  1914  001A9A                     l2524:
  1915  001A9A  C015  F008         	movff	fputs@c,fputc@c
  1916  001A9E  6A09               	clrf	(fputc@c+1)^0,c
  1917  001AA0  C013  F00A         	movff	fputs@fp,fputc@fp
  1918  001AA4  C014  F00B         	movff	fputs@fp+1,fputc@fp+1
  1919  001AA8  EC39  F00B         	call	_fputc	;wreg free
  1920  001AAC  4A16               	infsnz	fputs@i^0,f,c
  1921  001AAE  2A17               	incf	(fputs@i+1)^0,f,c
  1922  001AB0                     l2528:
  1923  001AB0  5016               	movf	fputs@i^0,w,c
  1924  001AB2  2411               	addwf	fputs@s^0,w,c
  1925  001AB4  6ED9               	movwf	fsr2l,c
  1926  001AB6  5017               	movf	(fputs@i+1)^0,w,c
  1927  001AB8  2012               	addwfc	(fputs@s+1)^0,w,c
  1928  001ABA  6EDA               	movwf	fsr2h,c
  1929  001ABC  50DF               	movf	indf2,w,c
  1930  001ABE  6E15               	movwf	fputs@c^0,c
  1931  001AC0  5015               	movf	fputs@c^0,w,c
  1932  001AC2  A4D8               	btfss	status,2,c
  1933  001AC4  EF66  F00D         	goto	u1621
  1934  001AC8  EF68  F00D         	goto	u1620
  1935  001ACC                     u1621:
  1936  001ACC  EF4D  F00D         	goto	l2524
  1937  001AD0                     u1620:
  1938  001AD0  0012               	return		;funcret
  1939  001AD2                     __end_of_fputs:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _fputc *****************
  1943 ;; Defined at:
  1944 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputc.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  c               2    7[COMRAM] int 
  1947 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  1948 ;;		 -> sprintf@f(6), 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  2    7[COMRAM] int 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1963 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1964 ;;Total ram usage:        9 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 8
  1967 ;; This function calls:
  1968 ;;		_putch
  1969 ;; This function is called by:
  1970 ;;		_pad
  1971 ;;		_vfpfcnvrt
  1972 ;;		_fputs
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text8
  1977  001672                     __ptext8:
  1978                           	callstack 0
  1979  001672                     _fputc:
  1980                           	callstack 19
  1981  001672  500A               	movf	fputc@fp^0,w,c
  1982  001674  100B               	iorwf	(fputc@fp+1)^0,w,c
  1983  001676  B4D8               	btfsc	status,2,c
  1984  001678  EF40  F00B         	goto	u1581
  1985  00167C  EF42  F00B         	goto	u1580
  1986  001680                     u1581:
  1987  001680  EF4B  F00B         	goto	l2512
  1988  001684                     u1580:
  1989  001684  500A               	movf	fputc@fp^0,w,c
  1990  001686  100B               	iorwf	(fputc@fp+1)^0,w,c
  1991  001688  A4D8               	btfss	status,2,c
  1992  00168A  EF49  F00B         	goto	u1591
  1993  00168E  EF4B  F00B         	goto	u1590
  1994  001692                     u1591:
  1995  001692  EF50  F00B         	goto	l2514
  1996  001696                     u1590:
  1997  001696                     l2512:
  1998  001696  5008               	movf	fputc@c^0,w,c
  1999  001698  EC43  F00F         	call	_putch
  2000  00169C  EF9D  F00B         	goto	l1211
  2001  0016A0                     l2514:
  2002  0016A0  EE20 F004          	lfsr	2,4
  2003  0016A4  500A               	movf	fputc@fp^0,w,c
  2004  0016A6  26D9               	addwf	fsr2l,f,c
  2005  0016A8  500B               	movf	(fputc@fp+1)^0,w,c
  2006  0016AA  22DA               	addwfc	fsr2h,f,c
  2007  0016AC  50DE               	movf	postinc2,w,c
  2008  0016AE  10DE               	iorwf	postinc2,w,c
  2009  0016B0  B4D8               	btfsc	status,2,c
  2010  0016B2  EF5D  F00B         	goto	u1601
  2011  0016B6  EF5F  F00B         	goto	u1600
  2012  0016BA                     u1601:
  2013  0016BA  EF7A  F00B         	goto	l2518
  2014  0016BE                     u1600:
  2015  0016BE  EE20 F004          	lfsr	2,4
  2016  0016C2  500A               	movf	fputc@fp^0,w,c
  2017  0016C4  26D9               	addwf	fsr2l,f,c
  2018  0016C6  500B               	movf	(fputc@fp+1)^0,w,c
  2019  0016C8  22DA               	addwfc	fsr2h,f,c
  2020  0016CA  EE10 F002          	lfsr	1,2
  2021  0016CE  500A               	movf	fputc@fp^0,w,c
  2022  0016D0  26E1               	addwf	fsr1l,f,c
  2023  0016D2  500B               	movf	(fputc@fp+1)^0,w,c
  2024  0016D4  22E2               	addwfc	fsr1h,f,c
  2025  0016D6  50DE               	movf	postinc2,w,c
  2026  0016D8  5CE6               	subwf	postinc1,w,c
  2027  0016DA  50E6               	movf	postinc1,w,c
  2028  0016DC  0A80               	xorlw	128
  2029  0016DE  6E10               	movwf	(??_fputc+4)^0,c
  2030  0016E0  50DE               	movf	postinc2,w,c
  2031  0016E2  0A80               	xorlw	128
  2032  0016E4  5810               	subwfb	(??_fputc+4)^0,w,c
  2033  0016E6  B0D8               	btfsc	status,0,c
  2034  0016E8  EF78  F00B         	goto	u1611
  2035  0016EC  EF7A  F00B         	goto	u1610
  2036  0016F0                     u1611:
  2037  0016F0  EF9D  F00B         	goto	l1211
  2038  0016F4                     u1610:
  2039  0016F4                     l2518:
  2040  0016F4  EE20 F002          	lfsr	2,2
  2041  0016F8  500A               	movf	fputc@fp^0,w,c
  2042  0016FA  26D9               	addwf	fsr2l,f,c
  2043  0016FC  500B               	movf	(fputc@fp+1)^0,w,c
  2044  0016FE  22DA               	addwfc	fsr2h,f,c
  2045  001700  CFDE F00C          	movff	postinc2,??_fputc
  2046  001704  CFDD F00D          	movff	postdec2,??_fputc+1
  2047  001708  C00A  FFD9         	movff	fputc@fp,fsr2l
  2048  00170C  C00B  FFDA         	movff	fputc@fp+1,fsr2h
  2049  001710  CFDE F00E          	movff	postinc2,??_fputc+2
  2050  001714  CFDD F00F          	movff	postdec2,??_fputc+3
  2051  001718  500C               	movf	??_fputc^0,w,c
  2052  00171A  240E               	addwf	(??_fputc+2)^0,w,c
  2053  00171C  6ED9               	movwf	fsr2l,c
  2054  00171E  500D               	movf	(??_fputc+1)^0,w,c
  2055  001720  200F               	addwfc	(??_fputc+3)^0,w,c
  2056  001722  6EDA               	movwf	fsr2h,c
  2057  001724  C008  FFDF         	movff	fputc@c,indf2
  2058  001728  EE20 F002          	lfsr	2,2
  2059  00172C  500A               	movf	fputc@fp^0,w,c
  2060  00172E  26D9               	addwf	fsr2l,f,c
  2061  001730  500B               	movf	(fputc@fp+1)^0,w,c
  2062  001732  22DA               	addwfc	fsr2h,f,c
  2063  001734  2ADE               	incf	postinc2,f,c
  2064  001736  0E00               	movlw	0
  2065  001738  22DD               	addwfc	postdec2,f,c
  2066  00173A                     l1211:
  2067  00173A  0012               	return		;funcret
  2068  00173C                     __end_of_fputc:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _putch *****************
  2072 ;; Defined at:
  2073 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/putch.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  c               1    wreg     unsigned char 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  c               1    0[COMRAM] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 7
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_fputc
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text9
  2102  001E86                     __ptext9:
  2103                           	callstack 0
  2104  001E86                     _putch:
  2105                           	callstack 19
  2106  001E86  0012               	return		;funcret
  2107  001E88                     __end_of_putch:
  2108                           	callstack 0
  2109                           
  2110 ;; *************** function _abs *****************
  2111 ;; Defined at:
  2112 ;;		line 1 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  a               2   25[COMRAM] int 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  2   25[COMRAM] int 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2129 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2130 ;;Total ram usage:        4 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 7
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_dtoa
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text10
  2141  001B58                     __ptext10:
  2142                           	callstack 0
  2143  001B58                     _abs:
  2144                           	callstack 19
  2145  001B58  BE1B               	btfsc	(abs@a+1)^0,7,c
  2146  001B5A  EFB9  F00D         	goto	u1810
  2147  001B5E  501B               	movf	(abs@a+1)^0,w,c
  2148  001B60  E106               	bnz	u1811
  2149  001B62  041A               	decf	abs@a^0,w,c
  2150  001B64  B0D8               	btfsc	status,0,c
  2151  001B66  EFB7  F00D         	goto	u1811
  2152  001B6A  EFB9  F00D         	goto	u1810
  2153  001B6E                     u1811:
  2154  001B6E  EFC7  F00D         	goto	l1196
  2155  001B72                     u1810:
  2156  001B72  C01A  F01C         	movff	abs@a,??_abs
  2157  001B76  C01B  F01D         	movff	abs@a+1,??_abs+1
  2158  001B7A  1E1C               	comf	??_abs^0,f,c
  2159  001B7C  1E1D               	comf	(??_abs+1)^0,f,c
  2160  001B7E  4A1C               	infsnz	??_abs^0,f,c
  2161  001B80  2A1D               	incf	(??_abs+1)^0,f,c
  2162  001B82  C01C  F01A         	movff	??_abs,?_abs
  2163  001B86  C01D  F01B         	movff	??_abs+1,?_abs+1
  2164  001B8A  EFCB  F00D         	goto	l1199
  2165  001B8E                     l1196:
  2166  001B8E  C01A  F01A         	movff	abs@a,?_abs
  2167  001B92  C01B  F01B         	movff	abs@a+1,?_abs+1
  2168  001B96                     l1199:
  2169  001B96  0012               	return		;funcret
  2170  001B98                     __end_of_abs:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function ___aomod *****************
  2174 ;; Defined at:
  2175 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aomod.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  dividend        8    7[COMRAM] long long 
  2178 ;;  divisor         8   15[COMRAM] long long 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  sign            1   24[COMRAM] unsigned char 
  2181 ;;  counter         1   23[COMRAM] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  8    7[COMRAM] long long 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2191 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2194 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2195 ;;Total ram usage:       18 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 7
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_dtoa
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text11
  2206  00142A                     __ptext11:
  2207                           	callstack 0
  2208  00142A                     ___aomod:
  2209                           	callstack 19
  2210  00142A  0E00               	movlw	0
  2211  00142C  6E19               	movwf	___aomod@sign^0,c
  2212  00142E  BE0F               	btfsc	(___aomod@dividend+7)^0,7,c
  2213  001430  EF1E  F00A         	goto	u1710
  2214  001434  EF1C  F00A         	goto	u1711
  2215  001438                     u1711:
  2216  001438  EF30  F00A         	goto	l2592
  2217  00143C                     u1710:
  2218  00143C  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  2219  00143E  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  2220  001440  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  2221  001442  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  2222  001444  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  2223  001446  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  2224  001448  1E09               	comf	(___aomod@dividend+1)^0,f,c
  2225  00144A  6C08               	negf	___aomod@dividend^0,c
  2226  00144C  0E00               	movlw	0
  2227  00144E  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  2228  001450  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  2229  001452  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  2230  001454  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  2231  001456  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  2232  001458  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  2233  00145A  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  2234  00145C  0E01               	movlw	1
  2235  00145E  6E19               	movwf	___aomod@sign^0,c
  2236  001460                     l2592:
  2237  001460  BE17               	btfsc	(___aomod@divisor+7)^0,7,c
  2238  001462  EF37  F00A         	goto	u1720
  2239  001466  EF35  F00A         	goto	u1721
  2240  00146A                     u1721:
  2241  00146A  EF47  F00A         	goto	l2596
  2242  00146E                     u1720:
  2243  00146E  1E17               	comf	(___aomod@divisor+7)^0,f,c
  2244  001470  1E16               	comf	(___aomod@divisor+6)^0,f,c
  2245  001472  1E15               	comf	(___aomod@divisor+5)^0,f,c
  2246  001474  1E14               	comf	(___aomod@divisor+4)^0,f,c
  2247  001476  1E13               	comf	(___aomod@divisor+3)^0,f,c
  2248  001478  1E12               	comf	(___aomod@divisor+2)^0,f,c
  2249  00147A  1E11               	comf	(___aomod@divisor+1)^0,f,c
  2250  00147C  6C10               	negf	___aomod@divisor^0,c
  2251  00147E  0E00               	movlw	0
  2252  001480  2211               	addwfc	(___aomod@divisor+1)^0,f,c
  2253  001482  2212               	addwfc	(___aomod@divisor+2)^0,f,c
  2254  001484  2213               	addwfc	(___aomod@divisor+3)^0,f,c
  2255  001486  2214               	addwfc	(___aomod@divisor+4)^0,f,c
  2256  001488  2215               	addwfc	(___aomod@divisor+5)^0,f,c
  2257  00148A  2216               	addwfc	(___aomod@divisor+6)^0,f,c
  2258  00148C  2217               	addwfc	(___aomod@divisor+7)^0,f,c
  2259  00148E                     l2596:
  2260  00148E  5010               	movf	___aomod@divisor^0,w,c
  2261  001490  1011               	iorwf	(___aomod@divisor+1)^0,w,c
  2262  001492  1012               	iorwf	(___aomod@divisor+2)^0,w,c
  2263  001494  1013               	iorwf	(___aomod@divisor+3)^0,w,c
  2264  001496  1014               	iorwf	(___aomod@divisor+4)^0,w,c
  2265  001498  1015               	iorwf	(___aomod@divisor+5)^0,w,c
  2266  00149A  1016               	iorwf	(___aomod@divisor+6)^0,w,c
  2267  00149C  1017               	iorwf	(___aomod@divisor+7)^0,w,c
  2268  00149E  B4D8               	btfsc	status,2,c
  2269  0014A0  EF54  F00A         	goto	u1731
  2270  0014A4  EF56  F00A         	goto	u1730
  2271  0014A8                     u1731:
  2272  0014A8  EF9E  F00A         	goto	l2612
  2273  0014AC                     u1730:
  2274  0014AC  0E01               	movlw	1
  2275  0014AE  6E18               	movwf	___aomod@counter^0,c
  2276  0014B0  EF64  F00A         	goto	l2602
  2277  0014B4                     l2600:
  2278  0014B4  90D8               	bcf	status,0,c
  2279  0014B6  3610               	rlcf	___aomod@divisor^0,f,c
  2280  0014B8  3611               	rlcf	(___aomod@divisor+1)^0,f,c
  2281  0014BA  3612               	rlcf	(___aomod@divisor+2)^0,f,c
  2282  0014BC  3613               	rlcf	(___aomod@divisor+3)^0,f,c
  2283  0014BE  3614               	rlcf	(___aomod@divisor+4)^0,f,c
  2284  0014C0  3615               	rlcf	(___aomod@divisor+5)^0,f,c
  2285  0014C2  3616               	rlcf	(___aomod@divisor+6)^0,f,c
  2286  0014C4  3617               	rlcf	(___aomod@divisor+7)^0,f,c
  2287  0014C6  2A18               	incf	___aomod@counter^0,f,c
  2288  0014C8                     l2602:
  2289  0014C8  AE17               	btfss	(___aomod@divisor+7)^0,7,c
  2290  0014CA  EF69  F00A         	goto	u1741
  2291  0014CE  EF6B  F00A         	goto	u1740
  2292  0014D2                     u1741:
  2293  0014D2  EF5A  F00A         	goto	l2600
  2294  0014D6                     u1740:
  2295  0014D6                     l2604:
  2296  0014D6  5010               	movf	___aomod@divisor^0,w,c
  2297  0014D8  5C08               	subwf	___aomod@dividend^0,w,c
  2298  0014DA  5011               	movf	(___aomod@divisor+1)^0,w,c
  2299  0014DC  5809               	subwfb	(___aomod@dividend+1)^0,w,c
  2300  0014DE  5012               	movf	(___aomod@divisor+2)^0,w,c
  2301  0014E0  580A               	subwfb	(___aomod@dividend+2)^0,w,c
  2302  0014E2  5013               	movf	(___aomod@divisor+3)^0,w,c
  2303  0014E4  580B               	subwfb	(___aomod@dividend+3)^0,w,c
  2304  0014E6  5014               	movf	(___aomod@divisor+4)^0,w,c
  2305  0014E8  580C               	subwfb	(___aomod@dividend+4)^0,w,c
  2306  0014EA  5015               	movf	(___aomod@divisor+5)^0,w,c
  2307  0014EC  580D               	subwfb	(___aomod@dividend+5)^0,w,c
  2308  0014EE  5016               	movf	(___aomod@divisor+6)^0,w,c
  2309  0014F0  580E               	subwfb	(___aomod@dividend+6)^0,w,c
  2310  0014F2  5017               	movf	(___aomod@divisor+7)^0,w,c
  2311  0014F4  580F               	subwfb	(___aomod@dividend+7)^0,w,c
  2312  0014F6  A0D8               	btfss	status,0,c
  2313  0014F8  EF80  F00A         	goto	u1751
  2314  0014FC  EF82  F00A         	goto	u1750
  2315  001500                     u1751:
  2316  001500  EF92  F00A         	goto	l2608
  2317  001504                     u1750:
  2318  001504  5010               	movf	___aomod@divisor^0,w,c
  2319  001506  5E08               	subwf	___aomod@dividend^0,f,c
  2320  001508  5011               	movf	(___aomod@divisor+1)^0,w,c
  2321  00150A  5A09               	subwfb	(___aomod@dividend+1)^0,f,c
  2322  00150C  5012               	movf	(___aomod@divisor+2)^0,w,c
  2323  00150E  5A0A               	subwfb	(___aomod@dividend+2)^0,f,c
  2324  001510  5013               	movf	(___aomod@divisor+3)^0,w,c
  2325  001512  5A0B               	subwfb	(___aomod@dividend+3)^0,f,c
  2326  001514  5014               	movf	(___aomod@divisor+4)^0,w,c
  2327  001516  5A0C               	subwfb	(___aomod@dividend+4)^0,f,c
  2328  001518  5015               	movf	(___aomod@divisor+5)^0,w,c
  2329  00151A  5A0D               	subwfb	(___aomod@dividend+5)^0,f,c
  2330  00151C  5016               	movf	(___aomod@divisor+6)^0,w,c
  2331  00151E  5A0E               	subwfb	(___aomod@dividend+6)^0,f,c
  2332  001520  5017               	movf	(___aomod@divisor+7)^0,w,c
  2333  001522  5A0F               	subwfb	(___aomod@dividend+7)^0,f,c
  2334  001524                     l2608:
  2335  001524  90D8               	bcf	status,0,c
  2336  001526  3217               	rrcf	(___aomod@divisor+7)^0,f,c
  2337  001528  3216               	rrcf	(___aomod@divisor+6)^0,f,c
  2338  00152A  3215               	rrcf	(___aomod@divisor+5)^0,f,c
  2339  00152C  3214               	rrcf	(___aomod@divisor+4)^0,f,c
  2340  00152E  3213               	rrcf	(___aomod@divisor+3)^0,f,c
  2341  001530  3212               	rrcf	(___aomod@divisor+2)^0,f,c
  2342  001532  3211               	rrcf	(___aomod@divisor+1)^0,f,c
  2343  001534  3210               	rrcf	___aomod@divisor^0,f,c
  2344  001536  2E18               	decfsz	___aomod@counter^0,f,c
  2345  001538  EF6B  F00A         	goto	l2604
  2346  00153C                     l2612:
  2347  00153C  5019               	movf	___aomod@sign^0,w,c
  2348  00153E  B4D8               	btfsc	status,2,c
  2349  001540  EFA4  F00A         	goto	u1761
  2350  001544  EFA6  F00A         	goto	u1760
  2351  001548                     u1761:
  2352  001548  EFB6  F00A         	goto	l2616
  2353  00154C                     u1760:
  2354  00154C  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  2355  00154E  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  2356  001550  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  2357  001552  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  2358  001554  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  2359  001556  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  2360  001558  1E09               	comf	(___aomod@dividend+1)^0,f,c
  2361  00155A  6C08               	negf	___aomod@dividend^0,c
  2362  00155C  0E00               	movlw	0
  2363  00155E  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  2364  001560  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  2365  001562  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  2366  001564  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  2367  001566  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  2368  001568  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  2369  00156A  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  2370  00156C                     l2616:
  2371  00156C  C008  F008         	movff	___aomod@dividend,?___aomod
  2372  001570  C009  F009         	movff	___aomod@dividend+1,?___aomod+1
  2373  001574  C00A  F00A         	movff	___aomod@dividend+2,?___aomod+2
  2374  001578  C00B  F00B         	movff	___aomod@dividend+3,?___aomod+3
  2375  00157C  C00C  F00C         	movff	___aomod@dividend+4,?___aomod+4
  2376  001580  C00D  F00D         	movff	___aomod@dividend+5,?___aomod+5
  2377  001584  C00E  F00E         	movff	___aomod@dividend+6,?___aomod+6
  2378  001588  C00F  F00F         	movff	___aomod@dividend+7,?___aomod+7
  2379  00158C  0012               	return		;funcret
  2380  00158E                     __end_of___aomod:
  2381                           	callstack 0
  2382                           
  2383 ;; *************** function ___aodiv *****************
  2384 ;; Defined at:
  2385 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aodiv.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  dividend        8    7[COMRAM] long long 
  2388 ;;  divisor         8   15[COMRAM] long long 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  quotient        8   25[COMRAM] long long 
  2391 ;;  sign            1   24[COMRAM] unsigned char 
  2392 ;;  counter         1   23[COMRAM] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  8    7[COMRAM] long long 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2402 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2403 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2405 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2406 ;;Total ram usage:       26 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 7
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_dtoa
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           	psect	text12
  2417  0012A2                     __ptext12:
  2418                           	callstack 0
  2419  0012A2                     ___aodiv:
  2420                           	callstack 19
  2421  0012A2  0E00               	movlw	0
  2422  0012A4  6E19               	movwf	___aodiv@sign^0,c
  2423  0012A6  BE17               	btfsc	(___aodiv@divisor+7)^0,7,c
  2424  0012A8  EF5A  F009         	goto	u1640
  2425  0012AC  EF58  F009         	goto	u1641
  2426  0012B0                     u1641:
  2427  0012B0  EF6C  F009         	goto	l2548
  2428  0012B4                     u1640:
  2429  0012B4  1E17               	comf	(___aodiv@divisor+7)^0,f,c
  2430  0012B6  1E16               	comf	(___aodiv@divisor+6)^0,f,c
  2431  0012B8  1E15               	comf	(___aodiv@divisor+5)^0,f,c
  2432  0012BA  1E14               	comf	(___aodiv@divisor+4)^0,f,c
  2433  0012BC  1E13               	comf	(___aodiv@divisor+3)^0,f,c
  2434  0012BE  1E12               	comf	(___aodiv@divisor+2)^0,f,c
  2435  0012C0  1E11               	comf	(___aodiv@divisor+1)^0,f,c
  2436  0012C2  6C10               	negf	___aodiv@divisor^0,c
  2437  0012C4  0E00               	movlw	0
  2438  0012C6  2211               	addwfc	(___aodiv@divisor+1)^0,f,c
  2439  0012C8  2212               	addwfc	(___aodiv@divisor+2)^0,f,c
  2440  0012CA  2213               	addwfc	(___aodiv@divisor+3)^0,f,c
  2441  0012CC  2214               	addwfc	(___aodiv@divisor+4)^0,f,c
  2442  0012CE  2215               	addwfc	(___aodiv@divisor+5)^0,f,c
  2443  0012D0  2216               	addwfc	(___aodiv@divisor+6)^0,f,c
  2444  0012D2  2217               	addwfc	(___aodiv@divisor+7)^0,f,c
  2445  0012D4  0E01               	movlw	1
  2446  0012D6  6E19               	movwf	___aodiv@sign^0,c
  2447  0012D8                     l2548:
  2448  0012D8  BE0F               	btfsc	(___aodiv@dividend+7)^0,7,c
  2449  0012DA  EF73  F009         	goto	u1650
  2450  0012DE  EF71  F009         	goto	u1651
  2451  0012E2                     u1651:
  2452  0012E2  EF85  F009         	goto	l2554
  2453  0012E6                     u1650:
  2454  0012E6  1E0F               	comf	(___aodiv@dividend+7)^0,f,c
  2455  0012E8  1E0E               	comf	(___aodiv@dividend+6)^0,f,c
  2456  0012EA  1E0D               	comf	(___aodiv@dividend+5)^0,f,c
  2457  0012EC  1E0C               	comf	(___aodiv@dividend+4)^0,f,c
  2458  0012EE  1E0B               	comf	(___aodiv@dividend+3)^0,f,c
  2459  0012F0  1E0A               	comf	(___aodiv@dividend+2)^0,f,c
  2460  0012F2  1E09               	comf	(___aodiv@dividend+1)^0,f,c
  2461  0012F4  6C08               	negf	___aodiv@dividend^0,c
  2462  0012F6  0E00               	movlw	0
  2463  0012F8  2209               	addwfc	(___aodiv@dividend+1)^0,f,c
  2464  0012FA  220A               	addwfc	(___aodiv@dividend+2)^0,f,c
  2465  0012FC  220B               	addwfc	(___aodiv@dividend+3)^0,f,c
  2466  0012FE  220C               	addwfc	(___aodiv@dividend+4)^0,f,c
  2467  001300  220D               	addwfc	(___aodiv@dividend+5)^0,f,c
  2468  001302  220E               	addwfc	(___aodiv@dividend+6)^0,f,c
  2469  001304  220F               	addwfc	(___aodiv@dividend+7)^0,f,c
  2470  001306  0E01               	movlw	1
  2471  001308  1A19               	xorwf	___aodiv@sign^0,f,c
  2472  00130A                     l2554:
  2473  00130A  EE20  F01A         	lfsr	2,___aodiv@quotient
  2474  00130E  0E07               	movlw	7
  2475  001310                     u1661:
  2476  001310  6ADE               	clrf	postinc2,c
  2477  001312  06E8               	decf	wreg,f,c
  2478  001314  E2FD               	bc	u1661
  2479  001316  5010               	movf	___aodiv@divisor^0,w,c
  2480  001318  1011               	iorwf	(___aodiv@divisor+1)^0,w,c
  2481  00131A  1012               	iorwf	(___aodiv@divisor+2)^0,w,c
  2482  00131C  1013               	iorwf	(___aodiv@divisor+3)^0,w,c
  2483  00131E  1014               	iorwf	(___aodiv@divisor+4)^0,w,c
  2484  001320  1015               	iorwf	(___aodiv@divisor+5)^0,w,c
  2485  001322  1016               	iorwf	(___aodiv@divisor+6)^0,w,c
  2486  001324  1017               	iorwf	(___aodiv@divisor+7)^0,w,c
  2487  001326  B4D8               	btfsc	status,2,c
  2488  001328  EF98  F009         	goto	u1671
  2489  00132C  EF9A  F009         	goto	u1670
  2490  001330                     u1671:
  2491  001330  EFEC  F009         	goto	l2576
  2492  001334                     u1670:
  2493  001334  0E01               	movlw	1
  2494  001336  6E18               	movwf	___aodiv@counter^0,c
  2495  001338  EFA8  F009         	goto	l2562
  2496  00133C                     l2560:
  2497  00133C  90D8               	bcf	status,0,c
  2498  00133E  3610               	rlcf	___aodiv@divisor^0,f,c
  2499  001340  3611               	rlcf	(___aodiv@divisor+1)^0,f,c
  2500  001342  3612               	rlcf	(___aodiv@divisor+2)^0,f,c
  2501  001344  3613               	rlcf	(___aodiv@divisor+3)^0,f,c
  2502  001346  3614               	rlcf	(___aodiv@divisor+4)^0,f,c
  2503  001348  3615               	rlcf	(___aodiv@divisor+5)^0,f,c
  2504  00134A  3616               	rlcf	(___aodiv@divisor+6)^0,f,c
  2505  00134C  3617               	rlcf	(___aodiv@divisor+7)^0,f,c
  2506  00134E  2A18               	incf	___aodiv@counter^0,f,c
  2507  001350                     l2562:
  2508  001350  AE17               	btfss	(___aodiv@divisor+7)^0,7,c
  2509  001352  EFAD  F009         	goto	u1681
  2510  001356  EFAF  F009         	goto	u1680
  2511  00135A                     u1681:
  2512  00135A  EF9E  F009         	goto	l2560
  2513  00135E                     u1680:
  2514  00135E                     l2564:
  2515  00135E  90D8               	bcf	status,0,c
  2516  001360  361A               	rlcf	___aodiv@quotient^0,f,c
  2517  001362  361B               	rlcf	(___aodiv@quotient+1)^0,f,c
  2518  001364  361C               	rlcf	(___aodiv@quotient+2)^0,f,c
  2519  001366  361D               	rlcf	(___aodiv@quotient+3)^0,f,c
  2520  001368  361E               	rlcf	(___aodiv@quotient+4)^0,f,c
  2521  00136A  361F               	rlcf	(___aodiv@quotient+5)^0,f,c
  2522  00136C  3620               	rlcf	(___aodiv@quotient+6)^0,f,c
  2523  00136E  3621               	rlcf	(___aodiv@quotient+7)^0,f,c
  2524  001370  5010               	movf	___aodiv@divisor^0,w,c
  2525  001372  5C08               	subwf	___aodiv@dividend^0,w,c
  2526  001374  5011               	movf	(___aodiv@divisor+1)^0,w,c
  2527  001376  5809               	subwfb	(___aodiv@dividend+1)^0,w,c
  2528  001378  5012               	movf	(___aodiv@divisor+2)^0,w,c
  2529  00137A  580A               	subwfb	(___aodiv@dividend+2)^0,w,c
  2530  00137C  5013               	movf	(___aodiv@divisor+3)^0,w,c
  2531  00137E  580B               	subwfb	(___aodiv@dividend+3)^0,w,c
  2532  001380  5014               	movf	(___aodiv@divisor+4)^0,w,c
  2533  001382  580C               	subwfb	(___aodiv@dividend+4)^0,w,c
  2534  001384  5015               	movf	(___aodiv@divisor+5)^0,w,c
  2535  001386  580D               	subwfb	(___aodiv@dividend+5)^0,w,c
  2536  001388  5016               	movf	(___aodiv@divisor+6)^0,w,c
  2537  00138A  580E               	subwfb	(___aodiv@dividend+6)^0,w,c
  2538  00138C  5017               	movf	(___aodiv@divisor+7)^0,w,c
  2539  00138E  580F               	subwfb	(___aodiv@dividend+7)^0,w,c
  2540  001390  A0D8               	btfss	status,0,c
  2541  001392  EFCD  F009         	goto	u1691
  2542  001396  EFCF  F009         	goto	u1690
  2543  00139A                     u1691:
  2544  00139A  EFE0  F009         	goto	l2572
  2545  00139E                     u1690:
  2546  00139E  5010               	movf	___aodiv@divisor^0,w,c
  2547  0013A0  5E08               	subwf	___aodiv@dividend^0,f,c
  2548  0013A2  5011               	movf	(___aodiv@divisor+1)^0,w,c
  2549  0013A4  5A09               	subwfb	(___aodiv@dividend+1)^0,f,c
  2550  0013A6  5012               	movf	(___aodiv@divisor+2)^0,w,c
  2551  0013A8  5A0A               	subwfb	(___aodiv@dividend+2)^0,f,c
  2552  0013AA  5013               	movf	(___aodiv@divisor+3)^0,w,c
  2553  0013AC  5A0B               	subwfb	(___aodiv@dividend+3)^0,f,c
  2554  0013AE  5014               	movf	(___aodiv@divisor+4)^0,w,c
  2555  0013B0  5A0C               	subwfb	(___aodiv@dividend+4)^0,f,c
  2556  0013B2  5015               	movf	(___aodiv@divisor+5)^0,w,c
  2557  0013B4  5A0D               	subwfb	(___aodiv@dividend+5)^0,f,c
  2558  0013B6  5016               	movf	(___aodiv@divisor+6)^0,w,c
  2559  0013B8  5A0E               	subwfb	(___aodiv@dividend+6)^0,f,c
  2560  0013BA  5017               	movf	(___aodiv@divisor+7)^0,w,c
  2561  0013BC  5A0F               	subwfb	(___aodiv@dividend+7)^0,f,c
  2562  0013BE  801A               	bsf	___aodiv@quotient^0,0,c
  2563  0013C0                     l2572:
  2564  0013C0  90D8               	bcf	status,0,c
  2565  0013C2  3217               	rrcf	(___aodiv@divisor+7)^0,f,c
  2566  0013C4  3216               	rrcf	(___aodiv@divisor+6)^0,f,c
  2567  0013C6  3215               	rrcf	(___aodiv@divisor+5)^0,f,c
  2568  0013C8  3214               	rrcf	(___aodiv@divisor+4)^0,f,c
  2569  0013CA  3213               	rrcf	(___aodiv@divisor+3)^0,f,c
  2570  0013CC  3212               	rrcf	(___aodiv@divisor+2)^0,f,c
  2571  0013CE  3211               	rrcf	(___aodiv@divisor+1)^0,f,c
  2572  0013D0  3210               	rrcf	___aodiv@divisor^0,f,c
  2573  0013D2  2E18               	decfsz	___aodiv@counter^0,f,c
  2574  0013D4  EFAF  F009         	goto	l2564
  2575  0013D8                     l2576:
  2576  0013D8  5019               	movf	___aodiv@sign^0,w,c
  2577  0013DA  B4D8               	btfsc	status,2,c
  2578  0013DC  EFF2  F009         	goto	u1701
  2579  0013E0  EFF4  F009         	goto	u1700
  2580  0013E4                     u1701:
  2581  0013E4  EF04  F00A         	goto	l2580
  2582  0013E8                     u1700:
  2583  0013E8  1E21               	comf	(___aodiv@quotient+7)^0,f,c
  2584  0013EA  1E20               	comf	(___aodiv@quotient+6)^0,f,c
  2585  0013EC  1E1F               	comf	(___aodiv@quotient+5)^0,f,c
  2586  0013EE  1E1E               	comf	(___aodiv@quotient+4)^0,f,c
  2587  0013F0  1E1D               	comf	(___aodiv@quotient+3)^0,f,c
  2588  0013F2  1E1C               	comf	(___aodiv@quotient+2)^0,f,c
  2589  0013F4  1E1B               	comf	(___aodiv@quotient+1)^0,f,c
  2590  0013F6  6C1A               	negf	___aodiv@quotient^0,c
  2591  0013F8  0E00               	movlw	0
  2592  0013FA  221B               	addwfc	(___aodiv@quotient+1)^0,f,c
  2593  0013FC  221C               	addwfc	(___aodiv@quotient+2)^0,f,c
  2594  0013FE  221D               	addwfc	(___aodiv@quotient+3)^0,f,c
  2595  001400  221E               	addwfc	(___aodiv@quotient+4)^0,f,c
  2596  001402  221F               	addwfc	(___aodiv@quotient+5)^0,f,c
  2597  001404  2220               	addwfc	(___aodiv@quotient+6)^0,f,c
  2598  001406  2221               	addwfc	(___aodiv@quotient+7)^0,f,c
  2599  001408                     l2580:
  2600  001408  C01A  F008         	movff	___aodiv@quotient,?___aodiv
  2601  00140C  C01B  F009         	movff	___aodiv@quotient+1,?___aodiv+1
  2602  001410  C01C  F00A         	movff	___aodiv@quotient+2,?___aodiv+2
  2603  001414  C01D  F00B         	movff	___aodiv@quotient+3,?___aodiv+3
  2604  001418  C01E  F00C         	movff	___aodiv@quotient+4,?___aodiv+4
  2605  00141C  C01F  F00D         	movff	___aodiv@quotient+5,?___aodiv+5
  2606  001420  C020  F00E         	movff	___aodiv@quotient+6,?___aodiv+6
  2607  001424  C021  F00F         	movff	___aodiv@quotient+7,?___aodiv+7
  2608  001428  0012               	return		;funcret
  2609  00142A                     __end_of___aodiv:
  2610                           	callstack 0
  2611                           
  2612 ;; *************** function _sendStringSerial4 *****************
  2613 ;; Defined at:
  2614 ;;		line 46 in file "serial.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  string          2    9[COMRAM] PTR unsigned char 
  2617 ;;		 -> main@buf(40), 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2632 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2633 ;;Total ram usage:        3 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 8
  2636 ;; This function calls:
  2637 ;;		_sendCharSerial4
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text13
  2644  001C18                     __ptext13:
  2645                           	callstack 0
  2646  001C18                     _sendStringSerial4:
  2647                           	callstack 22
  2648  001C18                     
  2649                           ;serial.c: 48:     while (*string != 0) {
  2650  001C18  EF1B  F00E         	goto	l2402
  2651  001C1C                     l2398:
  2652                           
  2653                           ;serial.c: 49:         sendCharSerial4(*string++);
  2654  001C1C  C00A  FFD9         	movff	sendStringSerial4@string,fsr2l
  2655  001C20  C00B  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2656  001C24  50DF               	movf	indf2,w,c
  2657  001C26  6E0C               	movwf	??_sendStringSerial4^0,c
  2658  001C28  500C               	movf	??_sendStringSerial4^0,w,c
  2659  001C2A  6E08               	movwf	sendCharSerial4@charToSend^0,c
  2660  001C2C  6A09               	clrf	(sendCharSerial4@charToSend+1)^0,c
  2661  001C2E  EC13  F00F         	call	_sendCharSerial4	;wreg free
  2662  001C32  4A0A               	infsnz	sendStringSerial4@string^0,f,c
  2663  001C34  2A0B               	incf	(sendStringSerial4@string+1)^0,f,c
  2664  001C36                     l2402:
  2665                           
  2666                           ;serial.c: 48:     while (*string != 0) {
  2667  001C36  C00A  FFD9         	movff	sendStringSerial4@string,fsr2l
  2668  001C3A  C00B  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2669  001C3E  50DF               	movf	indf2,w,c
  2670  001C40  A4D8               	btfss	status,2,c
  2671  001C42  EF25  F00E         	goto	u1461
  2672  001C46  EF27  F00E         	goto	u1460
  2673  001C4A                     u1461:
  2674  001C4A  EF0E  F00E         	goto	l2398
  2675  001C4E                     u1460:
  2676  001C4E  0012               	return		;funcret
  2677  001C50                     __end_of_sendStringSerial4:
  2678                           	callstack 0
  2679                           
  2680 ;; *************** function _sendCharSerial4 *****************
  2681 ;; Defined at:
  2682 ;;		line 37 in file "serial.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  charToSend      2    7[COMRAM] unsigned int 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		None
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2696 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2700 ;;Total ram usage:        2 bytes
  2701 ;; Hardware stack levels used: 1
  2702 ;; Hardware stack levels required when called: 7
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_sendStringSerial4
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text14
  2711  001E26                     __ptext14:
  2712                           	callstack 0
  2713  001E26                     _sendCharSerial4:
  2714                           	callstack 22
  2715  001E26                     l313:
  2716  001E26  010E               	movlb	14	; () banked
  2717  001E28  A537               	btfss	55,2,b	;volatile
  2718  001E2A  EF19  F00F         	goto	u1431
  2719  001E2E  EF1B  F00F         	goto	u1430
  2720  001E32                     u1431:
  2721  001E32  EF13  F00F         	goto	l313
  2722  001E36                     u1430:
  2723  001E36                     
  2724                           ; BSR set to: 14
  2725                           ;serial.c: 39:     TX4REG = charToSend;
  2726  001E36  C008  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2727  001E3A                     
  2728                           ; BSR set to: 14
  2729  001E3A  0012               	return		;funcret
  2730  001E3C                     __end_of_sendCharSerial4:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function _interrupts_init *****************
  2734 ;; Defined at:
  2735 ;;		line 12 in file "interrupts.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;Total ram usage:        0 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 12
  2756 ;; This function calls:
  2757 ;;		_colorclick_int_clear
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text15
  2764  001D58                     __ptext15:
  2765                           	callstack 0
  2766  001D58                     _interrupts_init:
  2767                           	callstack 18
  2768  001D58                     
  2769                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 1;
  2770  001D58  8282               	bsf	130,1,c	;volatile
  2771                           
  2772                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  2773  001D5A  010E               	movlb	14	; () banked
  2774  001D5C  939A               	bcf	154,1,b	;volatile
  2775  001D5E                     
  2776                           ; BSR set to: 14
  2777                           ;interrupts.c: 15:     INT1PPS=0x09;
  2778  001D5E  0E09               	movlw	9
  2779  001D60  010D               	movlb	13	; () banked
  2780  001D62  6FF1               	movwf	241,b	;volatile
  2781  001D64                     
  2782                           ; BSR set to: 13
  2783                           ;interrupts.c: 17:     PIE0bits.INT1IE = 1;
  2784  001D64  010E               	movlb	14	; () banked
  2785  001D66  8329               	bsf	41,1,b	;volatile
  2786  001D68                     
  2787                           ; BSR set to: 14
  2788                           ;interrupts.c: 20:     IPR0bits.INT1IP = 1;
  2789  001D68  831F               	bsf	31,1,b	;volatile
  2790  001D6A                     
  2791                           ; BSR set to: 14
  2792                           ;interrupts.c: 23:     colorclick_int_clear();
  2793  001D6A  ECEC  F00E         	call	_colorclick_int_clear	;wreg free
  2794  001D6E                     
  2795                           ;interrupts.c: 25:     INTCONbits.IPEN = 1;
  2796  001D6E  8AF2               	bsf	242,5,c	;volatile
  2797  001D70                     
  2798                           ;interrupts.c: 26:     INTCONbits.INT1EDG = 0;
  2799  001D70  92F2               	bcf	242,1,c	;volatile
  2800  001D72                     
  2801                           ;interrupts.c: 27:     INTCONbits.PEIE = 1;
  2802  001D72  8CF2               	bsf	242,6,c	;volatile
  2803  001D74                     
  2804                           ;interrupts.c: 28:     INTCONbits.GIE = 1;
  2805  001D74  8EF2               	bsf	242,7,c	;volatile
  2806  001D76  0012               	return		;funcret
  2807  001D78                     __end_of_interrupts_init:
  2808                           	callstack 0
  2809                           
  2810 ;; *************** function _colorclick_int_clear *****************
  2811 ;; Defined at:
  2812 ;;		line 172 in file "color_click.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 11
  2833 ;; This function calls:
  2834 ;;		_I2C_2_Master_Start
  2835 ;;		_I2C_2_Master_Stop
  2836 ;;		_I2C_2_Master_Write
  2837 ;;		_colorclick_int_init
  2838 ;; This function is called by:
  2839 ;;		_interrupts_init
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text16
  2844  001DD8                     __ptext16:
  2845                           	callstack 0
  2846  001DD8                     _colorclick_int_clear:
  2847                           	callstack 18
  2848  001DD8                     
  2849                           ;color_click.c: 173:     I2C_2_Master_Start();
  2850  001DD8  EC34  F00F         	call	_I2C_2_Master_Start	;wreg free
  2851                           
  2852                           ;color_click.c: 174:     I2C_2_Master_Write(0x52 | 0x00);
  2853  001DDC  0E52               	movlw	82
  2854  001DDE  EC1E  F00F         	call	_I2C_2_Master_Write
  2855                           
  2856                           ;color_click.c: 175:     I2C_2_Master_Write(0b11100110);
  2857  001DE2  0EE6               	movlw	230
  2858  001DE4  EC1E  F00F         	call	_I2C_2_Master_Write
  2859                           
  2860                           ;color_click.c: 176:     I2C_2_Master_Stop();
  2861  001DE8  EC2F  F00F         	call	_I2C_2_Master_Stop	;wreg free
  2862                           
  2863                           ;color_click.c: 177:     colorclick_int_init();
  2864  001DEC  ECF9  F00C         	call	_colorclick_int_init	;wreg free
  2865  001DF0  0012               	return		;funcret
  2866  001DF2                     __end_of_colorclick_int_clear:
  2867                           	callstack 0
  2868                           
  2869 ;; *************** function _colorclick_int_init *****************
  2870 ;; Defined at:
  2871 ;;		line 180 in file "color_click.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;Total ram usage:        1 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 10
  2892 ;; This function calls:
  2893 ;;		_colorclick_writetoaddr
  2894 ;; This function is called by:
  2895 ;;		_colorclick_int_clear
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text17
  2900  0019F2                     __ptext17:
  2901                           	callstack 0
  2902  0019F2                     _colorclick_int_init:
  2903                           	callstack 18
  2904  0019F2                     
  2905                           ;color_click.c: 181:     colorclick_writetoaddr(0x00, 0b10011);
  2906  0019F2  0E13               	movlw	19
  2907  0019F4  6E0A               	movwf	colorclick_writetoaddr@value^0,c
  2908  0019F6  0E00               	movlw	0
  2909  0019F8  ECBC  F00E         	call	_colorclick_writetoaddr
  2910  0019FC                     
  2911                           ;color_click.c: 182:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2912  0019FC  0E3F               	movlw	63
  2913  0019FE  6E0C               	movwf	??_colorclick_int_init^0,c
  2914  001A00  0E55               	movlw	85
  2915  001A02                     u2077:
  2916  001A02  2EE8               	decfsz	wreg,f,c
  2917  001A04  D7FE               	bra	u2077
  2918  001A06  2E0C               	decfsz	??_colorclick_int_init^0,f,c
  2919  001A08  D7FC               	bra	u2077
  2920  001A0A  F000               	nop	
  2921  001A0C                     
  2922                           ;color_click.c: 183:     colorclick_writetoaddr(0x0C, 0b0100);
  2923  001A0C  0E04               	movlw	4
  2924  001A0E  6E0A               	movwf	colorclick_writetoaddr@value^0,c
  2925  001A10  0E0C               	movlw	12
  2926  001A12  ECBC  F00E         	call	_colorclick_writetoaddr
  2927  001A16                     
  2928                           ;color_click.c: 184:     colorclick_writetoaddr(0x04, 0x14);
  2929  001A16  0E14               	movlw	20
  2930  001A18  6E0A               	movwf	colorclick_writetoaddr@value^0,c
  2931  001A1A  0E04               	movlw	4
  2932  001A1C  ECBC  F00E         	call	_colorclick_writetoaddr
  2933  001A20                     
  2934                           ;color_click.c: 185:     colorclick_writetoaddr(0x05, 0x05);
  2935  001A20  0E05               	movlw	5
  2936  001A22  6E0A               	movwf	colorclick_writetoaddr@value^0,c
  2937  001A24  0E05               	movlw	5
  2938  001A26  ECBC  F00E         	call	_colorclick_writetoaddr
  2939  001A2A                     
  2940                           ;color_click.c: 186:     colorclick_writetoaddr(0x06, 0x6C);
  2941  001A2A  0E6C               	movlw	108
  2942  001A2C  6E0A               	movwf	colorclick_writetoaddr@value^0,c
  2943  001A2E  0E06               	movlw	6
  2944  001A30  ECBC  F00E         	call	_colorclick_writetoaddr
  2945  001A34                     
  2946                           ;color_click.c: 187:     colorclick_writetoaddr(0x07, 0x07);
  2947  001A34  0E07               	movlw	7
  2948  001A36  6E0A               	movwf	colorclick_writetoaddr@value^0,c
  2949  001A38  0E07               	movlw	7
  2950  001A3A  ECBC  F00E         	call	_colorclick_writetoaddr
  2951  001A3E  0012               	return		;funcret
  2952  001A40                     __end_of_colorclick_int_init:
  2953                           	callstack 0
  2954                           
  2955 ;; *************** function _colorclick_readColour *****************
  2956 ;; Defined at:
  2957 ;;		line 161 in file "color_click.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  current         8   18[COMRAM] struct .
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  8   18[COMRAM] struct .
  2964 ;; Registers used:
  2965 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2971 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;Total ram usage:        8 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; Hardware stack levels required when called: 10
  2978 ;; This function calls:
  2979 ;;		_colorclick_readBlue
  2980 ;;		_colorclick_readClear
  2981 ;;		_colorclick_readGreen
  2982 ;;		_colorclick_readRed
  2983 ;; This function is called by:
  2984 ;;		_main
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text18
  2989  001AD2                     __ptext18:
  2990                           	callstack 0
  2991  001AD2                     _colorclick_readColour:
  2992                           	callstack 20
  2993  001AD2                     
  2994                           ;color_click.c: 161: RGB_val colorclick_readColour(RGB_val current);color_click.c: 162: 
      +                          {;color_click.c: 163:     current.R = colorclick_readRed();
  2995  001AD2  EC59  F00C         	call	_colorclick_readRed	;wreg free
  2996  001AD6  C00C  F013         	movff	?_colorclick_readRed,colorclick_readColour@current
  2997  001ADA  C00D  F014         	movff	?_colorclick_readRed+1,colorclick_readColour@current+1
  2998                           
  2999                           ;color_click.c: 164:     current.G = colorclick_readGreen();
  3000  001ADE  EC81  F00C         	call	_colorclick_readGreen	;wreg free
  3001  001AE2  C00C  F015         	movff	?_colorclick_readGreen,colorclick_readColour@current+2
  3002  001AE6  C00D  F016         	movff	?_colorclick_readGreen+1,colorclick_readColour@current+3
  3003                           
  3004                           ;color_click.c: 165:     current.B = colorclick_readBlue();
  3005  001AEA  ECD1  F00C         	call	_colorclick_readBlue	;wreg free
  3006  001AEE  C00C  F017         	movff	?_colorclick_readBlue,colorclick_readColour@current+4
  3007  001AF2  C00D  F018         	movff	?_colorclick_readBlue+1,colorclick_readColour@current+5
  3008                           
  3009                           ;color_click.c: 166:     current.C = colorclick_readClear();
  3010  001AF6  ECA9  F00C         	call	_colorclick_readClear	;wreg free
  3011  001AFA  C00C  F019         	movff	?_colorclick_readClear,colorclick_readColour@current+6
  3012  001AFE  C00D  F01A         	movff	?_colorclick_readClear+1,colorclick_readColour@current+7
  3013  001B02                     
  3014                           ;color_click.c: 168:     return current;
  3015  001B02  EE20  F013         	lfsr	2,colorclick_readColour@current
  3016  001B06  EE00  F013         	lfsr	0,?_colorclick_readColour
  3017  001B0A  0E07               	movlw	7
  3018  001B0C                     u1451:
  3019  001B0C  CFDB FFEB          	movff	plusw2,plusw0
  3020  001B10  06E8               	decf	wreg,f,c
  3021  001B12  E2FC               	bc	u1451
  3022  001B14  0012               	return		;funcret
  3023  001B16                     __end_of_colorclick_readColour:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _colorclick_readRed *****************
  3027 ;; Defined at:
  3028 ;;		line 86 in file "color_click.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  tmp             2   16[COMRAM] unsigned int 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  2   11[COMRAM] unsigned int 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3042 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;Total ram usage:        7 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 9
  3049 ;; This function calls:
  3050 ;;		_I2C_2_Master_Read
  3051 ;;		_I2C_2_Master_RepStart
  3052 ;;		_I2C_2_Master_Start
  3053 ;;		_I2C_2_Master_Stop
  3054 ;;		_I2C_2_Master_Write
  3055 ;; This function is called by:
  3056 ;;		_colorclick_readColour
  3057 ;;		_read_card
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text19
  3062  0018B2                     __ptext19:
  3063                           	callstack 0
  3064  0018B2                     _colorclick_readRed:
  3065                           	callstack 20
  3066  0018B2                     
  3067                           ;color_click.c: 88:  unsigned int tmp;;color_click.c: 89:  I2C_2_Master_Start();
  3068  0018B2  EC34  F00F         	call	_I2C_2_Master_Start	;wreg free
  3069                           
  3070                           ;color_click.c: 90:  I2C_2_Master_Write(0x52 | 0x00);
  3071  0018B6  0E52               	movlw	82
  3072  0018B8  EC1E  F00F         	call	_I2C_2_Master_Write
  3073                           
  3074                           ;color_click.c: 91:  I2C_2_Master_Write(0xA0 | 0x16);
  3075  0018BC  0EB6               	movlw	182
  3076  0018BE  EC1E  F00F         	call	_I2C_2_Master_Write
  3077                           
  3078                           ;color_click.c: 92:  I2C_2_Master_RepStart();
  3079  0018C2  EC2A  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3080                           
  3081                           ;color_click.c: 93:  I2C_2_Master_Write(0x52 | 0x01);
  3082  0018C6  0E53               	movlw	83
  3083  0018C8  EC1E  F00F         	call	_I2C_2_Master_Write
  3084                           
  3085                           ;color_click.c: 94:  tmp=I2C_2_Master_Read(1);
  3086  0018CC  0E01               	movlw	1
  3087  0018CE  EC8B  F00D         	call	_I2C_2_Master_Read
  3088  0018D2  6E0E               	movwf	??_colorclick_readRed^0,c
  3089  0018D4  500E               	movf	??_colorclick_readRed^0,w,c
  3090  0018D6  6E11               	movwf	colorclick_readRed@tmp^0,c
  3091  0018D8  6A12               	clrf	(colorclick_readRed@tmp+1)^0,c
  3092                           
  3093                           ;color_click.c: 95:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3094  0018DA  0E00               	movlw	0
  3095  0018DC  EC8B  F00D         	call	_I2C_2_Master_Read
  3096  0018E0  6E0E               	movwf	??_colorclick_readRed^0,c
  3097  0018E2  500E               	movf	??_colorclick_readRed^0,w,c
  3098  0018E4  6E10               	movwf	(??_colorclick_readRed+2)^0,c
  3099  0018E6  6A0F               	clrf	(??_colorclick_readRed+1)^0,c
  3100  0018E8  5011               	movf	colorclick_readRed@tmp^0,w,c
  3101  0018EA  100F               	iorwf	(??_colorclick_readRed+1)^0,w,c
  3102  0018EC  6E11               	movwf	colorclick_readRed@tmp^0,c
  3103  0018EE  5012               	movf	(colorclick_readRed@tmp+1)^0,w,c
  3104  0018F0  1010               	iorwf	(??_colorclick_readRed+2)^0,w,c
  3105  0018F2  6E12               	movwf	(colorclick_readRed@tmp+1)^0,c
  3106                           
  3107                           ;color_click.c: 96:  I2C_2_Master_Stop();
  3108  0018F4  EC2F  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3109  0018F8                     
  3110                           ;color_click.c: 97:  return tmp;
  3111  0018F8  C011  F00C         	movff	colorclick_readRed@tmp,?_colorclick_readRed
  3112  0018FC  C012  F00D         	movff	colorclick_readRed@tmp+1,?_colorclick_readRed+1
  3113  001900  0012               	return		;funcret
  3114  001902                     __end_of_colorclick_readRed:
  3115                           	callstack 0
  3116                           
  3117 ;; *************** function _colorclick_readGreen *****************
  3118 ;; Defined at:
  3119 ;;		line 105 in file "color_click.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  tmp             2   16[COMRAM] unsigned int 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  2   11[COMRAM] unsigned int 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;Total ram usage:        7 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; Hardware stack levels required when called: 9
  3140 ;; This function calls:
  3141 ;;		_I2C_2_Master_Read
  3142 ;;		_I2C_2_Master_RepStart
  3143 ;;		_I2C_2_Master_Start
  3144 ;;		_I2C_2_Master_Stop
  3145 ;;		_I2C_2_Master_Write
  3146 ;; This function is called by:
  3147 ;;		_colorclick_readColour
  3148 ;;		_read_card
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text20
  3153  001902                     __ptext20:
  3154                           	callstack 0
  3155  001902                     _colorclick_readGreen:
  3156                           	callstack 20
  3157  001902                     
  3158                           ;color_click.c: 107:  unsigned int tmp;;color_click.c: 108:  I2C_2_Master_Start();
  3159  001902  EC34  F00F         	call	_I2C_2_Master_Start	;wreg free
  3160                           
  3161                           ;color_click.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  3162  001906  0E52               	movlw	82
  3163  001908  EC1E  F00F         	call	_I2C_2_Master_Write
  3164                           
  3165                           ;color_click.c: 110:  I2C_2_Master_Write(0xA0 | 0x18);
  3166  00190C  0EB8               	movlw	184
  3167  00190E  EC1E  F00F         	call	_I2C_2_Master_Write
  3168                           
  3169                           ;color_click.c: 111:  I2C_2_Master_RepStart();
  3170  001912  EC2A  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3171                           
  3172                           ;color_click.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  3173  001916  0E53               	movlw	83
  3174  001918  EC1E  F00F         	call	_I2C_2_Master_Write
  3175                           
  3176                           ;color_click.c: 113:  tmp=I2C_2_Master_Read(1);
  3177  00191C  0E01               	movlw	1
  3178  00191E  EC8B  F00D         	call	_I2C_2_Master_Read
  3179  001922  6E0E               	movwf	??_colorclick_readGreen^0,c
  3180  001924  500E               	movf	??_colorclick_readGreen^0,w,c
  3181  001926  6E11               	movwf	colorclick_readGreen@tmp^0,c
  3182  001928  6A12               	clrf	(colorclick_readGreen@tmp+1)^0,c
  3183                           
  3184                           ;color_click.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3185  00192A  0E00               	movlw	0
  3186  00192C  EC8B  F00D         	call	_I2C_2_Master_Read
  3187  001930  6E0E               	movwf	??_colorclick_readGreen^0,c
  3188  001932  500E               	movf	??_colorclick_readGreen^0,w,c
  3189  001934  6E10               	movwf	(??_colorclick_readGreen+2)^0,c
  3190  001936  6A0F               	clrf	(??_colorclick_readGreen+1)^0,c
  3191  001938  5011               	movf	colorclick_readGreen@tmp^0,w,c
  3192  00193A  100F               	iorwf	(??_colorclick_readGreen+1)^0,w,c
  3193  00193C  6E11               	movwf	colorclick_readGreen@tmp^0,c
  3194  00193E  5012               	movf	(colorclick_readGreen@tmp+1)^0,w,c
  3195  001940  1010               	iorwf	(??_colorclick_readGreen+2)^0,w,c
  3196  001942  6E12               	movwf	(colorclick_readGreen@tmp+1)^0,c
  3197                           
  3198                           ;color_click.c: 115:  I2C_2_Master_Stop();
  3199  001944  EC2F  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3200  001948                     
  3201                           ;color_click.c: 116:  return tmp;
  3202  001948  C011  F00C         	movff	colorclick_readGreen@tmp,?_colorclick_readGreen
  3203  00194C  C012  F00D         	movff	colorclick_readGreen@tmp+1,?_colorclick_readGreen+1
  3204  001950  0012               	return		;funcret
  3205  001952                     __end_of_colorclick_readGreen:
  3206                           	callstack 0
  3207                           
  3208 ;; *************** function _colorclick_readClear *****************
  3209 ;; Defined at:
  3210 ;;		line 143 in file "color_click.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  tmp             2   16[COMRAM] unsigned int 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  2   11[COMRAM] unsigned int 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;Total ram usage:        7 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 9
  3231 ;; This function calls:
  3232 ;;		_I2C_2_Master_Read
  3233 ;;		_I2C_2_Master_RepStart
  3234 ;;		_I2C_2_Master_Start
  3235 ;;		_I2C_2_Master_Stop
  3236 ;;		_I2C_2_Master_Write
  3237 ;; This function is called by:
  3238 ;;		_colorclick_readColour
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text21
  3243  001952                     __ptext21:
  3244                           	callstack 0
  3245  001952                     _colorclick_readClear:
  3246                           	callstack 20
  3247  001952                     
  3248                           ;color_click.c: 145:  unsigned int tmp;;color_click.c: 146:  I2C_2_Master_Start();
  3249  001952  EC34  F00F         	call	_I2C_2_Master_Start	;wreg free
  3250                           
  3251                           ;color_click.c: 147:  I2C_2_Master_Write(0x52 | 0x00);
  3252  001956  0E52               	movlw	82
  3253  001958  EC1E  F00F         	call	_I2C_2_Master_Write
  3254                           
  3255                           ;color_click.c: 148:  I2C_2_Master_Write(0xA0 | 0x14);
  3256  00195C  0EB4               	movlw	180
  3257  00195E  EC1E  F00F         	call	_I2C_2_Master_Write
  3258                           
  3259                           ;color_click.c: 149:  I2C_2_Master_RepStart();
  3260  001962  EC2A  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3261                           
  3262                           ;color_click.c: 150:  I2C_2_Master_Write(0x52 | 0x01);
  3263  001966  0E53               	movlw	83
  3264  001968  EC1E  F00F         	call	_I2C_2_Master_Write
  3265                           
  3266                           ;color_click.c: 151:  tmp=I2C_2_Master_Read(1);
  3267  00196C  0E01               	movlw	1
  3268  00196E  EC8B  F00D         	call	_I2C_2_Master_Read
  3269  001972  6E0E               	movwf	??_colorclick_readClear^0,c
  3270  001974  500E               	movf	??_colorclick_readClear^0,w,c
  3271  001976  6E11               	movwf	colorclick_readClear@tmp^0,c
  3272  001978  6A12               	clrf	(colorclick_readClear@tmp+1)^0,c
  3273                           
  3274                           ;color_click.c: 152:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3275  00197A  0E00               	movlw	0
  3276  00197C  EC8B  F00D         	call	_I2C_2_Master_Read
  3277  001980  6E0E               	movwf	??_colorclick_readClear^0,c
  3278  001982  500E               	movf	??_colorclick_readClear^0,w,c
  3279  001984  6E10               	movwf	(??_colorclick_readClear+2)^0,c
  3280  001986  6A0F               	clrf	(??_colorclick_readClear+1)^0,c
  3281  001988  5011               	movf	colorclick_readClear@tmp^0,w,c
  3282  00198A  100F               	iorwf	(??_colorclick_readClear+1)^0,w,c
  3283  00198C  6E11               	movwf	colorclick_readClear@tmp^0,c
  3284  00198E  5012               	movf	(colorclick_readClear@tmp+1)^0,w,c
  3285  001990  1010               	iorwf	(??_colorclick_readClear+2)^0,w,c
  3286  001992  6E12               	movwf	(colorclick_readClear@tmp+1)^0,c
  3287                           
  3288                           ;color_click.c: 153:  I2C_2_Master_Stop();
  3289  001994  EC2F  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3290  001998                     
  3291                           ;color_click.c: 154:  return tmp;
  3292  001998  C011  F00C         	movff	colorclick_readClear@tmp,?_colorclick_readClear
  3293  00199C  C012  F00D         	movff	colorclick_readClear@tmp+1,?_colorclick_readClear+1
  3294  0019A0  0012               	return		;funcret
  3295  0019A2                     __end_of_colorclick_readClear:
  3296                           	callstack 0
  3297                           
  3298 ;; *************** function _colorclick_readBlue *****************
  3299 ;; Defined at:
  3300 ;;		line 124 in file "color_click.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  tmp             2   16[COMRAM] unsigned int 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  2   11[COMRAM] unsigned int 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;Total ram usage:        7 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; Hardware stack levels required when called: 9
  3321 ;; This function calls:
  3322 ;;		_I2C_2_Master_Read
  3323 ;;		_I2C_2_Master_RepStart
  3324 ;;		_I2C_2_Master_Start
  3325 ;;		_I2C_2_Master_Stop
  3326 ;;		_I2C_2_Master_Write
  3327 ;; This function is called by:
  3328 ;;		_colorclick_readColour
  3329 ;;		_read_card
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text22
  3334  0019A2                     __ptext22:
  3335                           	callstack 0
  3336  0019A2                     _colorclick_readBlue:
  3337                           	callstack 20
  3338  0019A2                     
  3339                           ;color_click.c: 126:  unsigned int tmp;;color_click.c: 127:  I2C_2_Master_Start();
  3340  0019A2  EC34  F00F         	call	_I2C_2_Master_Start	;wreg free
  3341                           
  3342                           ;color_click.c: 128:  I2C_2_Master_Write(0x52 | 0x00);
  3343  0019A6  0E52               	movlw	82
  3344  0019A8  EC1E  F00F         	call	_I2C_2_Master_Write
  3345                           
  3346                           ;color_click.c: 129:  I2C_2_Master_Write(0xA0 | 0x1A);
  3347  0019AC  0EBA               	movlw	186
  3348  0019AE  EC1E  F00F         	call	_I2C_2_Master_Write
  3349                           
  3350                           ;color_click.c: 130:  I2C_2_Master_RepStart();
  3351  0019B2  EC2A  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3352                           
  3353                           ;color_click.c: 131:  I2C_2_Master_Write(0x52 | 0x01);
  3354  0019B6  0E53               	movlw	83
  3355  0019B8  EC1E  F00F         	call	_I2C_2_Master_Write
  3356                           
  3357                           ;color_click.c: 132:  tmp=I2C_2_Master_Read(1);
  3358  0019BC  0E01               	movlw	1
  3359  0019BE  EC8B  F00D         	call	_I2C_2_Master_Read
  3360  0019C2  6E0E               	movwf	??_colorclick_readBlue^0,c
  3361  0019C4  500E               	movf	??_colorclick_readBlue^0,w,c
  3362  0019C6  6E11               	movwf	colorclick_readBlue@tmp^0,c
  3363  0019C8  6A12               	clrf	(colorclick_readBlue@tmp+1)^0,c
  3364                           
  3365                           ;color_click.c: 133:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3366  0019CA  0E00               	movlw	0
  3367  0019CC  EC8B  F00D         	call	_I2C_2_Master_Read
  3368  0019D0  6E0E               	movwf	??_colorclick_readBlue^0,c
  3369  0019D2  500E               	movf	??_colorclick_readBlue^0,w,c
  3370  0019D4  6E10               	movwf	(??_colorclick_readBlue+2)^0,c
  3371  0019D6  6A0F               	clrf	(??_colorclick_readBlue+1)^0,c
  3372  0019D8  5011               	movf	colorclick_readBlue@tmp^0,w,c
  3373  0019DA  100F               	iorwf	(??_colorclick_readBlue+1)^0,w,c
  3374  0019DC  6E11               	movwf	colorclick_readBlue@tmp^0,c
  3375  0019DE  5012               	movf	(colorclick_readBlue@tmp+1)^0,w,c
  3376  0019E0  1010               	iorwf	(??_colorclick_readBlue+2)^0,w,c
  3377  0019E2  6E12               	movwf	(colorclick_readBlue@tmp+1)^0,c
  3378                           
  3379                           ;color_click.c: 134:  I2C_2_Master_Stop();
  3380  0019E4  EC2F  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3381  0019E8                     
  3382                           ;color_click.c: 135:  return tmp;
  3383  0019E8  C011  F00C         	movff	colorclick_readBlue@tmp,?_colorclick_readBlue
  3384  0019EC  C012  F00D         	movff	colorclick_readBlue@tmp+1,?_colorclick_readBlue+1
  3385  0019F0  0012               	return		;funcret
  3386  0019F2                     __end_of_colorclick_readBlue:
  3387                           	callstack 0
  3388                           
  3389 ;; *************** function _I2C_2_Master_RepStart *****************
  3390 ;; Defined at:
  3391 ;;		line 49 in file "i2c.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3409 ;;Total ram usage:        0 bytes
  3410 ;; Hardware stack levels used: 1
  3411 ;; Hardware stack levels required when called: 8
  3412 ;; This function calls:
  3413 ;;		_I2C_2_Master_Idle
  3414 ;; This function is called by:
  3415 ;;		_colorclick_readRed
  3416 ;;		_colorclick_readGreen
  3417 ;;		_colorclick_readBlue
  3418 ;;		_colorclick_readClear
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text23
  3423  001E54                     __ptext23:
  3424                           	callstack 0
  3425  001E54                     _I2C_2_Master_RepStart:
  3426                           	callstack 20
  3427  001E54                     
  3428                           ;i2c.c: 51:   I2C_2_Master_Idle();
  3429  001E54  EC73  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3430  001E58                     
  3431                           ;i2c.c: 52:   SSP2CON2bits.RSEN = 1;
  3432  001E58  010E               	movlb	14	; () banked
  3433  001E5A  83DA               	bsf	218,1,b	;volatile
  3434  001E5C                     
  3435                           ; BSR set to: 14
  3436  001E5C  0012               	return		;funcret
  3437  001E5E                     __end_of_I2C_2_Master_RepStart:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _I2C_2_Master_Read *****************
  3441 ;; Defined at:
  3442 ;;		line 79 in file "i2c.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  ack             1    wreg     unsigned char 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  ack             1    9[COMRAM] unsigned char 
  3447 ;;  tmp             1   10[COMRAM] unsigned char 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      unsigned char 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3460 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3461 ;;Total ram usage:        3 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 8
  3464 ;; This function calls:
  3465 ;;		_I2C_2_Master_Idle
  3466 ;; This function is called by:
  3467 ;;		_colorclick_readRed
  3468 ;;		_colorclick_readGreen
  3469 ;;		_colorclick_readBlue
  3470 ;;		_colorclick_readClear
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text24
  3475  001B16                     __ptext24:
  3476                           	callstack 0
  3477  001B16                     _I2C_2_Master_Read:
  3478                           	callstack 20
  3479                           
  3480                           ; BSR set to: 14
  3481                           ;incstack = 0
  3482                           ;I2C_2_Master_Read@ack stored from wreg
  3483  001B16  6E0A               	movwf	I2C_2_Master_Read@ack^0,c
  3484  001B18                     
  3485                           ;i2c.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 80: {;i2c.c: 81:  
      +                           unsigned char tmp;;i2c.c: 82:   I2C_2_Master_Idle();
  3486  001B18  EC73  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3487  001B1C                     
  3488                           ;i2c.c: 83:   SSP2CON2bits.RCEN = 1;
  3489  001B1C  010E               	movlb	14	; () banked
  3490  001B1E  87DA               	bsf	218,3,b	;volatile
  3491                           
  3492                           ;i2c.c: 84:   I2C_2_Master_Idle();
  3493  001B20  EC73  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3494  001B24                     
  3495                           ;i2c.c: 85:   tmp = SSP2BUF;
  3496  001B24  CED5 F00B          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3497                           
  3498                           ;i2c.c: 86:   I2C_2_Master_Idle();
  3499  001B28  EC73  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3500  001B2C                     
  3501                           ;i2c.c: 87:   SSP2CON2bits.ACKDT = !ack;
  3502  001B2C  500A               	movf	I2C_2_Master_Read@ack^0,w,c
  3503  001B2E  B4D8               	btfsc	status,2,c
  3504  001B30  EF9C  F00D         	goto	u1341
  3505  001B34  EFA0  F00D         	goto	u1340
  3506  001B38                     u1341:
  3507  001B38  6A09               	clrf	??_I2C_2_Master_Read^0,c
  3508  001B3A  2A09               	incf	??_I2C_2_Master_Read^0,f,c
  3509  001B3C  EFA1  F00D         	goto	u1358
  3510  001B40                     u1340:
  3511  001B40  6A09               	clrf	??_I2C_2_Master_Read^0,c
  3512  001B42                     u1358:
  3513  001B42  3A09               	swapf	??_I2C_2_Master_Read^0,f,c
  3514  001B44  4609               	rlncf	??_I2C_2_Master_Read^0,f,c
  3515  001B46  010E               	movlb	14	; () banked
  3516  001B48  51DA               	movf	218,w,b	;volatile
  3517  001B4A  1809               	xorwf	??_I2C_2_Master_Read^0,w,c
  3518  001B4C  0BDF               	andlw	-33
  3519  001B4E  1809               	xorwf	??_I2C_2_Master_Read^0,w,c
  3520  001B50  6FDA               	movwf	218,b	;volatile
  3521  001B52                     
  3522                           ; BSR set to: 14
  3523                           ;i2c.c: 88:   SSP2CON2bits.ACKEN = 1;
  3524  001B52  89DA               	bsf	218,4,b	;volatile
  3525  001B54                     
  3526                           ; BSR set to: 14
  3527                           ;i2c.c: 89:   return tmp;
  3528  001B54  500B               	movf	I2C_2_Master_Read@tmp^0,w,c
  3529  001B56                     
  3530                           ; BSR set to: 14
  3531  001B56  0012               	return		;funcret
  3532  001B58                     __end_of_I2C_2_Master_Read:
  3533                           	callstack 0
  3534                           
  3535 ;; *************** function _colorclick_init *****************
  3536 ;; Defined at:
  3537 ;;		line 9 in file "color_click.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0, cstack
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;Total ram usage:        1 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 10
  3558 ;; This function calls:
  3559 ;;		_I2C_2_Master_Init
  3560 ;;		_colorclick_toggleClearLED
  3561 ;;		_colorclick_writetoaddr
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text25
  3568  001B98                     __ptext25:
  3569                           	callstack 0
  3570  001B98                     _colorclick_init:
  3571                           	callstack 20
  3572  001B98                     
  3573                           ;color_click.c: 12:     I2C_2_Master_Init();
  3574  001B98  EC5E  F00E         	call	_I2C_2_Master_Init	;wreg free
  3575  001B9C                     
  3576                           ;color_click.c: 15:   colorclick_writetoaddr(0x00, 0x01);
  3577  001B9C  0E01               	movlw	1
  3578  001B9E  6E0A               	movwf	colorclick_writetoaddr@value^0,c
  3579  001BA0  0E00               	movlw	0
  3580  001BA2  ECBC  F00E         	call	_colorclick_writetoaddr
  3581  001BA6                     
  3582                           ;color_click.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3583  001BA6  0E3F               	movlw	63
  3584  001BA8  6E0C               	movwf	??_colorclick_init^0,c
  3585  001BAA  0E55               	movlw	85
  3586  001BAC                     u2087:
  3587  001BAC  2EE8               	decfsz	wreg,f,c
  3588  001BAE  D7FE               	bra	u2087
  3589  001BB0  2E0C               	decfsz	??_colorclick_init^0,f,c
  3590  001BB2  D7FC               	bra	u2087
  3591  001BB4  F000               	nop	
  3592  001BB6                     
  3593                           ;color_click.c: 19:  colorclick_writetoaddr(0x00, 0x03);
  3594  001BB6  0E03               	movlw	3
  3595  001BB8  6E0A               	movwf	colorclick_writetoaddr@value^0,c
  3596  001BBA  0E00               	movlw	0
  3597  001BBC  ECBC  F00E         	call	_colorclick_writetoaddr
  3598  001BC0                     
  3599                           ;color_click.c: 22:  colorclick_writetoaddr(0x01, 0xD5);
  3600  001BC0  0ED5               	movlw	213
  3601  001BC2  6E0A               	movwf	colorclick_writetoaddr@value^0,c
  3602  001BC4  0E01               	movlw	1
  3603  001BC6  ECBC  F00E         	call	_colorclick_writetoaddr
  3604  001BCA                     
  3605                           ;color_click.c: 25:     TRISGbits.TRISG1 = 0;
  3606  001BCA  9287               	bcf	135,1,c	;volatile
  3607  001BCC                     
  3608                           ;color_click.c: 26:     TRISAbits.TRISA4 = 0;
  3609  001BCC  9881               	bcf	129,4,c	;volatile
  3610  001BCE                     
  3611                           ;color_click.c: 27:     TRISFbits.TRISF7 = 0;
  3612  001BCE  9E86               	bcf	134,7,c	;volatile
  3613  001BD0                     
  3614                           ;color_click.c: 30:     colorclick_toggleClearLED(1);
  3615  001BD0  0E01               	movlw	1
  3616  001BD2  EC9B  F00E         	call	_colorclick_toggleClearLED
  3617  001BD6  0012               	return		;funcret
  3618  001BD8                     __end_of_colorclick_init:
  3619                           	callstack 0
  3620                           
  3621 ;; *************** function _colorclick_writetoaddr *****************
  3622 ;; Defined at:
  3623 ;;		line 72 in file "color_click.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  address         1    wreg     unsigned char 
  3626 ;;  value           1    9[COMRAM] unsigned char 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  address         1   10[COMRAM] unsigned char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3638 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;Total ram usage:        2 bytes
  3643 ;; Hardware stack levels used: 1
  3644 ;; Hardware stack levels required when called: 9
  3645 ;; This function calls:
  3646 ;;		_I2C_2_Master_Start
  3647 ;;		_I2C_2_Master_Stop
  3648 ;;		_I2C_2_Master_Write
  3649 ;; This function is called by:
  3650 ;;		_colorclick_init
  3651 ;;		_colorclick_int_init
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text26
  3656  001D78                     __ptext26:
  3657                           	callstack 0
  3658  001D78                     _colorclick_writetoaddr:
  3659                           	callstack 18
  3660                           
  3661                           ;incstack = 0
  3662                           ;colorclick_writetoaddr@address stored from wreg
  3663  001D78  6E0B               	movwf	colorclick_writetoaddr@address^0,c
  3664  001D7A                     
  3665                           ;color_click.c: 72: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           73: {;color_click.c: 74:     I2C_2_Master_Start();
  3666  001D7A  EC34  F00F         	call	_I2C_2_Master_Start	;wreg free
  3667                           
  3668                           ;color_click.c: 75:     I2C_2_Master_Write(0x52 | 0x00);
  3669  001D7E  0E52               	movlw	82
  3670  001D80  EC1E  F00F         	call	_I2C_2_Master_Write
  3671                           
  3672                           ;color_click.c: 76:     I2C_2_Master_Write(0x80 | address);
  3673  001D84  500B               	movf	colorclick_writetoaddr@address^0,w,c
  3674  001D86  0980               	iorlw	128
  3675  001D88  EC1E  F00F         	call	_I2C_2_Master_Write
  3676                           
  3677                           ;color_click.c: 77:     I2C_2_Master_Write(value);
  3678  001D8C  500A               	movf	colorclick_writetoaddr@value^0,w,c
  3679  001D8E  EC1E  F00F         	call	_I2C_2_Master_Write
  3680                           
  3681                           ;color_click.c: 78:     I2C_2_Master_Stop();
  3682  001D92  EC2F  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3683  001D96  0012               	return		;funcret
  3684  001D98                     __end_of_colorclick_writetoaddr:
  3685                           	callstack 0
  3686                           
  3687 ;; *************** function _I2C_2_Master_Write *****************
  3688 ;; Defined at:
  3689 ;;		line 69 in file "i2c.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  data_byte       1    wreg     unsigned char 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  data_byte       1    8[COMRAM] unsigned char 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0, cstack
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3706 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3707 ;;Total ram usage:        1 bytes
  3708 ;; Hardware stack levels used: 1
  3709 ;; Hardware stack levels required when called: 8
  3710 ;; This function calls:
  3711 ;;		_I2C_2_Master_Idle
  3712 ;; This function is called by:
  3713 ;;		_colorclick_writetoaddr
  3714 ;;		_colorclick_readRed
  3715 ;;		_colorclick_readGreen
  3716 ;;		_colorclick_readBlue
  3717 ;;		_colorclick_readClear
  3718 ;;		_colorclick_int_clear
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text27
  3723  001E3C                     __ptext27:
  3724                           	callstack 0
  3725  001E3C                     _I2C_2_Master_Write:
  3726                           	callstack 18
  3727                           
  3728                           ;incstack = 0
  3729                           ;I2C_2_Master_Write@data_byte stored from wreg
  3730  001E3C  6E09               	movwf	I2C_2_Master_Write@data_byte^0,c
  3731  001E3E                     
  3732                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  3733  001E3E  EC73  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3734  001E42                     
  3735                           ;i2c.c: 72:   SSP2BUF = data_byte;
  3736  001E42  C009  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3737  001E46  0012               	return		;funcret
  3738  001E48                     __end_of_I2C_2_Master_Write:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function _I2C_2_Master_Stop *****************
  3742 ;; Defined at:
  3743 ;;		line 59 in file "i2c.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3761 ;;Total ram usage:        0 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 8
  3764 ;; This function calls:
  3765 ;;		_I2C_2_Master_Idle
  3766 ;; This function is called by:
  3767 ;;		_colorclick_writetoaddr
  3768 ;;		_colorclick_readRed
  3769 ;;		_colorclick_readGreen
  3770 ;;		_colorclick_readBlue
  3771 ;;		_colorclick_readClear
  3772 ;;		_colorclick_int_clear
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text28
  3777  001E5E                     __ptext28:
  3778                           	callstack 0
  3779  001E5E                     _I2C_2_Master_Stop:
  3780                           	callstack 18
  3781  001E5E                     
  3782                           ;i2c.c: 61:   I2C_2_Master_Idle();
  3783  001E5E  EC73  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3784  001E62                     
  3785                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  3786  001E62  010E               	movlb	14	; () banked
  3787  001E64  85DA               	bsf	218,2,b	;volatile
  3788  001E66                     
  3789                           ; BSR set to: 14
  3790  001E66  0012               	return		;funcret
  3791  001E68                     __end_of_I2C_2_Master_Stop:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _I2C_2_Master_Start *****************
  3795 ;; Defined at:
  3796 ;;		line 39 in file "i2c.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; Hardware stack levels required when called: 8
  3817 ;; This function calls:
  3818 ;;		_I2C_2_Master_Idle
  3819 ;; This function is called by:
  3820 ;;		_colorclick_writetoaddr
  3821 ;;		_colorclick_readRed
  3822 ;;		_colorclick_readGreen
  3823 ;;		_colorclick_readBlue
  3824 ;;		_colorclick_readClear
  3825 ;;		_colorclick_int_clear
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text29
  3830  001E68                     __ptext29:
  3831                           	callstack 0
  3832  001E68                     _I2C_2_Master_Start:
  3833                           	callstack 18
  3834  001E68                     
  3835                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3836  001E68  EC73  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3837  001E6C                     
  3838                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  3839  001E6C  010E               	movlb	14	; () banked
  3840  001E6E  81DA               	bsf	218,0,b	;volatile
  3841  001E70                     
  3842                           ; BSR set to: 14
  3843  001E70  0012               	return		;funcret
  3844  001E72                     __end_of_I2C_2_Master_Start:
  3845                           	callstack 0
  3846                           
  3847 ;; *************** function _I2C_2_Master_Idle *****************
  3848 ;; Defined at:
  3849 ;;		line 30 in file "i2c.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2, status,0
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3865 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3867 ;;Total ram usage:        1 bytes
  3868 ;; Hardware stack levels used: 1
  3869 ;; Hardware stack levels required when called: 7
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_I2C_2_Master_Start
  3874 ;;		_I2C_2_Master_RepStart
  3875 ;;		_I2C_2_Master_Stop
  3876 ;;		_I2C_2_Master_Write
  3877 ;;		_I2C_2_Master_Read
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text30
  3882  001CE6                     __ptext30:
  3883                           	callstack 0
  3884  001CE6                     _I2C_2_Master_Idle:
  3885                           	callstack 18
  3886  001CE6                     l30:
  3887  001CE6  010E               	movlb	14	; () banked
  3888  001CE8  B5D8               	btfsc	216,2,b	;volatile
  3889  001CEA  EF79  F00E         	goto	u951
  3890  001CEE  EF7B  F00E         	goto	u950
  3891  001CF2                     u951:
  3892  001CF2  EF73  F00E         	goto	l30
  3893  001CF6                     u950:
  3894  001CF6                     
  3895                           ; BSR set to: 14
  3896  001CF6  CEDA F008          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3897  001CFA  0E1F               	movlw	31
  3898  001CFC  1608               	andwf	??_I2C_2_Master_Idle^0,f,c
  3899  001CFE  A4D8               	btfss	status,2,c
  3900  001D00  EF84  F00E         	goto	u961
  3901  001D04  EF86  F00E         	goto	u960
  3902  001D08                     u961:
  3903  001D08  EF73  F00E         	goto	l30
  3904  001D0C                     u960:
  3905  001D0C                     
  3906                           ; BSR set to: 14
  3907  001D0C  0012               	return		;funcret
  3908  001D0E                     __end_of_I2C_2_Master_Idle:
  3909                           	callstack 0
  3910                           
  3911 ;; *************** function _colorclick_toggleClearLED *****************
  3912 ;; Defined at:
  3913 ;;		line 59 in file "color_click.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  toggle          1    wreg     unsigned char 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  toggle          1    7[COMRAM] unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		wreg
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;Total ram usage:        1 bytes
  3932 ;; Hardware stack levels used: 1
  3933 ;; Hardware stack levels required when called: 7
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_main
  3938 ;;		_colorclick_init
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text31
  3943  001D36                     __ptext31:
  3944                           	callstack 0
  3945  001D36                     _colorclick_toggleClearLED:
  3946                           	callstack 23
  3947                           
  3948                           ; BSR set to: 14
  3949                           ;incstack = 0
  3950                           ;colorclick_toggleClearLED@toggle stored from wreg
  3951  001D36  6E08               	movwf	colorclick_toggleClearLED@toggle^0,c
  3952  001D38                     
  3953                           ;color_click.c: 59: void colorclick_toggleClearLED(unsigned char toggle);color_click.c: 
      +                          60: {;color_click.c: 61:     LATGbits.LATG1 = toggle;
  3954  001D38  B008               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  3955  001D3A  D002               	bra	u1405
  3956  001D3C  927F               	bcf	127,1,c	;volatile
  3957  001D3E  D001               	bra	u1406
  3958  001D40                     u1405:
  3959  001D40  827F               	bsf	127,1,c	;volatile
  3960  001D42                     u1406:
  3961                           
  3962                           ;color_click.c: 62:     LATFbits.LATF7 = toggle;
  3963  001D42  B008               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  3964  001D44  D002               	bra	u1415
  3965  001D46  9E7E               	bcf	126,7,c	;volatile
  3966  001D48  D001               	bra	u1416
  3967  001D4A                     u1415:
  3968  001D4A  8E7E               	bsf	126,7,c	;volatile
  3969  001D4C                     u1416:
  3970                           
  3971                           ;color_click.c: 63:     LATAbits.LATA4 = toggle;
  3972  001D4C  B008               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  3973  001D4E  D002               	bra	u1425
  3974  001D50  9879               	bcf	121,4,c	;volatile
  3975  001D52  D001               	bra	u1426
  3976  001D54                     u1425:
  3977  001D54  8879               	bsf	121,4,c	;volatile
  3978  001D56                     u1426:
  3979  001D56  0012               	return		;funcret
  3980  001D58                     __end_of_colorclick_toggleClearLED:
  3981                           	callstack 0
  3982                           
  3983 ;; *************** function _I2C_2_Master_Init *****************
  3984 ;; Defined at:
  3985 ;;		line 8 in file "i2c.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;Total ram usage:        0 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; Hardware stack levels required when called: 7
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_colorclick_init
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text32
  4014  001CBC                     __ptext32:
  4015                           	callstack 0
  4016  001CBC                     _I2C_2_Master_Init:
  4017                           	callstack 22
  4018  001CBC                     
  4019                           ;i2c.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  4020  001CBC  010E               	movlb	14	; () banked
  4021  001CBE  51D9               	movf	217,w,b	;volatile
  4022  001CC0  0BF0               	andlw	-16
  4023  001CC2  0908               	iorlw	8
  4024  001CC4  6FD9               	movwf	217,b	;volatile
  4025  001CC6                     
  4026                           ; BSR set to: 14
  4027                           ;i2c.c: 12:   SSP2CON1bits.SSPEN = 1;
  4028  001CC6  8BD9               	bsf	217,5,b	;volatile
  4029                           
  4030                           ;i2c.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  4031  001CC8  0E9F               	movlw	159
  4032  001CCA  6FD6               	movwf	214,b	;volatile
  4033  001CCC                     
  4034                           ; BSR set to: 14
  4035                           ;i2c.c: 16:   TRISDbits.TRISD5 = 1;
  4036  001CCC  8A84               	bsf	132,5,c	;volatile
  4037  001CCE                     
  4038                           ; BSR set to: 14
  4039                           ;i2c.c: 17:   TRISDbits.TRISD6 = 1;
  4040  001CCE  8C84               	bsf	132,6,c	;volatile
  4041  001CD0                     
  4042                           ; BSR set to: 14
  4043                           ;i2c.c: 18:   ANSELDbits.ANSELD5=0;
  4044  001CD0  9BA7               	bcf	167,5,b	;volatile
  4045  001CD2                     
  4046                           ; BSR set to: 14
  4047                           ;i2c.c: 19:   ANSELDbits.ANSELD6=0;
  4048  001CD2  9DA7               	bcf	167,6,b	;volatile
  4049                           
  4050                           ;i2c.c: 20:   SSP2DATPPS=0x1D;
  4051  001CD4  0E1D               	movlw	29
  4052  001CD6  6F1D               	movwf	29,b	;volatile
  4053                           
  4054                           ;i2c.c: 21:   SSP2CLKPPS=0x1E;
  4055  001CD8  0E1E               	movlw	30
  4056  001CDA  6F1C               	movwf	28,b	;volatile
  4057                           
  4058                           ;i2c.c: 22:   RD5PPS=0x1C;
  4059  001CDC  0E1C               	movlw	28
  4060  001CDE  6F6F               	movwf	111,b	;volatile
  4061                           
  4062                           ;i2c.c: 23:   RD6PPS=0x1B;
  4063  001CE0  0E1B               	movlw	27
  4064  001CE2  6F70               	movwf	112,b	;volatile
  4065  001CE4                     
  4066                           ; BSR set to: 14
  4067  001CE4  0012               	return		;funcret
  4068  001CE6                     __end_of_I2C_2_Master_Init:
  4069                           	callstack 0
  4070                           
  4071 ;; *************** function _USART4_init *****************
  4072 ;; Defined at:
  4073 ;;		line 7 in file "serial.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; Hardware stack levels required when called: 7
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_main
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text33
  4102  001D98                     __ptext33:
  4103                           	callstack 0
  4104  001D98                     _USART4_init:
  4105                           	callstack 23
  4106  001D98                     
  4107                           ;serial.c: 10:     RC0PPS = 0x12;
  4108  001D98  0E12               	movlw	18
  4109  001D9A  010E               	movlb	14	; () banked
  4110  001D9C  6F62               	movwf	98,b	;volatile
  4111                           
  4112                           ;serial.c: 11:     RX4PPS = 0x11;
  4113  001D9E  0E11               	movlw	17
  4114  001DA0  6F15               	movwf	21,b	;volatile
  4115  001DA2                     
  4116                           ; BSR set to: 14
  4117                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  4118  001DA2  8283               	bsf	131,1,c	;volatile
  4119  001DA4                     
  4120                           ; BSR set to: 14
  4121                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  4122  001DA4  97E9               	bcf	233,3,b	;volatile
  4123  001DA6                     
  4124                           ; BSR set to: 14
  4125                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  4126  001DA6  95E8               	bcf	232,2,b	;volatile
  4127                           
  4128                           ;serial.c: 16:     SP4BRGL = 51;
  4129  001DA8  0E33               	movlw	51
  4130  001DAA  6FE5               	movwf	229,b	;volatile
  4131                           
  4132                           ;serial.c: 17:     SP4BRGH = 0;
  4133  001DAC  0E00               	movlw	0
  4134  001DAE  6FE6               	movwf	230,b	;volatile
  4135  001DB0                     
  4136                           ; BSR set to: 14
  4137                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  4138  001DB0  89E7               	bsf	231,4,b	;volatile
  4139  001DB2                     
  4140                           ; BSR set to: 14
  4141                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  4142  001DB2  8BE8               	bsf	232,5,b	;volatile
  4143  001DB4                     
  4144                           ; BSR set to: 14
  4145                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  4146  001DB4  8FE7               	bsf	231,7,b	;volatile
  4147  001DB6                     
  4148                           ; BSR set to: 14
  4149  001DB6  0012               	return		;funcret
  4150  001DB8                     __end_of_USART4_init:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _ADC_init *****************
  4154 ;; Defined at:
  4155 ;;		line 8 in file "ADC.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;Total ram usage:        0 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 7
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_main
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text34
  4184  001DF2                     __ptext34:
  4185                           	callstack 0
  4186  001DF2                     _ADC_init:
  4187                           	callstack 23
  4188  001DF2                     
  4189                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  4190  001DF2  8C86               	bsf	134,6,c	;volatile
  4191                           
  4192                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  4193  001DF4  010E               	movlb	14	; () banked
  4194  001DF6  8DB4               	bsf	180,6,b	;volatile
  4195                           
  4196                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  4197  001DF8  010F               	movlb	15	; () banked
  4198  001DFA  9958               	bcf	88,4,b	;volatile
  4199  001DFC                     
  4200                           ; BSR set to: 15
  4201                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  4202  001DFC  0EFC               	movlw	-4
  4203  001DFE  1758               	andwf	88,f,b	;volatile
  4204                           
  4205                           ;ADC.c: 16:     ADPCH=0b101110;
  4206  001E00  0E2E               	movlw	46
  4207  001E02  6F5F               	movwf	95,b	;volatile
  4208  001E04                     
  4209                           ; BSR set to: 15
  4210                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  4211  001E04  9460               	bcf	96,2,c	;volatile
  4212  001E06                     
  4213                           ; BSR set to: 15
  4214                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  4215  001E06  8860               	bsf	96,4,c	;volatile
  4216  001E08                     
  4217                           ; BSR set to: 15
  4218                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  4219  001E08  8E60               	bsf	96,7,c	;volatile
  4220  001E0A                     
  4221                           ; BSR set to: 15
  4222  001E0A  0012               	return		;funcret
  4223  001E0C                     __end_of_ADC_init:
  4224                           	callstack 0
  4225                           
  4226 ;; *************** function _LowISR *****************
  4227 ;; Defined at:
  4228 ;;		line 51 in file "interrupts.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		None
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4246 ;;Total ram usage:        1 bytes
  4247 ;; Hardware stack levels used: 1
  4248 ;; Hardware stack levels required when called: 6
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		Interrupt level 1
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	intcodelo
  4257  000018                     __pintcodelo:
  4258                           	callstack 0
  4259  000018                     _LowISR:
  4260                           	callstack 16
  4261                           
  4262                           ; BSR set to: 15
  4263                           ;incstack = 0
  4264  000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4265  00001A  CFE0 F007          	movff	bsr,??_LowISR
  4266  00001E  C007  FFE0         	movff	??_LowISR,bsr
  4267  000022  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4268  000024  0010               	retfie	
  4269  000026                     __end_of_LowISR:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function _HighISR *****************
  4273 ;; Defined at:
  4274 ;;		line 37 in file "interrupts.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4290 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;Total ram usage:        1 bytes
  4293 ;; Hardware stack levels used: 1
  4294 ;; Hardware stack levels required when called: 5
  4295 ;; This function calls:
  4296 ;;		i2_colorclick_int_clear
  4297 ;; This function is called by:
  4298 ;;		Interrupt level 2
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	intcode
  4303  000008                     __pintcode:
  4304                           	callstack 0
  4305  000008                     _HighISR:
  4306                           	callstack 16
  4307                           
  4308                           ;incstack = 0
  4309  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4310  00000A  EFEC  F00D         	goto	int_func
  4311                           
  4312                           	psect	intcode_body
  4313  001BD8                     __pintcode_body:
  4314                           	callstack 16
  4315  001BD8                     int_func:
  4316                           	callstack 16
  4317  001BD8                     
  4318                           ;interrupts.c: 38:     if (PIR0bits.INT1IF) {
  4319  001BD8  010E               	movlb	14	; () banked
  4320  001BDA  A333               	btfss	51,1,b	;volatile
  4321  001BDC  EFF2  F00D         	goto	i2u151_41
  4322  001BE0  EFF4  F00D         	goto	i2u151_40
  4323  001BE4                     i2u151_41:
  4324  001BE4  EF0A  F00E         	goto	i2l239
  4325  001BE8                     i2u151_40:
  4326  001BE8                     
  4327                           ; BSR set to: 14
  4328                           ;interrupts.c: 39:         LATHbits.LATH3 = !LATHbits.LATH3;
  4329  001BE8  A680               	btfss	128,3,c	;volatile
  4330  001BEA  EFF9  F00D         	goto	i2u152_41
  4331  001BEE  EFFD  F00D         	goto	i2u152_40
  4332  001BF2                     i2u152_41:
  4333  001BF2  6A06               	clrf	??_HighISR^0,c
  4334  001BF4  2A06               	incf	??_HighISR^0,f,c
  4335  001BF6  EFFE  F00D         	goto	i2u153_48
  4336  001BFA                     i2u152_40:
  4337  001BFA  6A06               	clrf	??_HighISR^0,c
  4338  001BFC                     i2u153_48:
  4339  001BFC  4606               	rlncf	??_HighISR^0,f,c
  4340  001BFE  4606               	rlncf	??_HighISR^0,f,c
  4341  001C00  4606               	rlncf	??_HighISR^0,f,c
  4342  001C02  5080               	movf	128,w,c	;volatile
  4343  001C04  1806               	xorwf	??_HighISR^0,w,c
  4344  001C06  0BF7               	andlw	-9
  4345  001C08  1806               	xorwf	??_HighISR^0,w,c
  4346  001C0A  6E80               	movwf	128,c	;volatile
  4347  001C0C                     
  4348                           ;interrupts.c: 40:         colorclick_int_clear();
  4349  001C0C  EC06  F00F         	call	i2_colorclick_int_clear	;wreg free
  4350  001C10                     
  4351                           ;interrupts.c: 41:         PIR0bits.INT1IF = 0;
  4352  001C10  010E               	movlb	14	; () banked
  4353  001C12  9333               	bcf	51,1,b	;volatile
  4354  001C14                     i2l239:
  4355                           
  4356                           ; BSR set to: 14
  4357  001C14  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4358  001C16  0011               	retfie		f
  4359  001C18                     __end_of_HighISR:
  4360                           	callstack 0
  4361                           
  4362 ;; *************** function i2_colorclick_int_clear *****************
  4363 ;; Defined at:
  4364 ;;		line 172 in file "color_click.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1    wreg      void 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0, cstack
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4382 ;;Total ram usage:        0 bytes
  4383 ;; Hardware stack levels used: 1
  4384 ;; Hardware stack levels required when called: 4
  4385 ;; This function calls:
  4386 ;;		i2_I2C_2_Master_Start
  4387 ;;		i2_I2C_2_Master_Stop
  4388 ;;		i2_I2C_2_Master_Write
  4389 ;;		i2_colorclick_int_init
  4390 ;; This function is called by:
  4391 ;;		_HighISR
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text37
  4396  001E0C                     __ptext37:
  4397                           	callstack 0
  4398  001E0C                     i2_colorclick_int_clear:
  4399                           	callstack 16
  4400  001E0C                     
  4401                           ;color_click.c: 173:     I2C_2_Master_Start();
  4402  001E0C  EC3E  F00F         	call	i2_I2C_2_Master_Start	;wreg free
  4403                           
  4404                           ;color_click.c: 174:     I2C_2_Master_Write(0x52 | 0x00);
  4405  001E10  0E52               	movlw	82
  4406  001E12  EC24  F00F         	call	i2_I2C_2_Master_Write
  4407                           
  4408                           ;color_click.c: 175:     I2C_2_Master_Write(0b11100110);
  4409  001E16  0EE6               	movlw	230
  4410  001E18  EC24  F00F         	call	i2_I2C_2_Master_Write
  4411                           
  4412                           ;color_click.c: 176:     I2C_2_Master_Stop();
  4413  001E1C  EC39  F00F         	call	i2_I2C_2_Master_Stop	;wreg free
  4414                           
  4415                           ;color_click.c: 177:     colorclick_int_init();
  4416  001E20  EC20  F00D         	call	i2_colorclick_int_init	;wreg free
  4417  001E24  0012               	return		;funcret
  4418  001E26                     __end_ofi2_colorclick_int_clear:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function i2_colorclick_int_init *****************
  4422 ;; Defined at:
  4423 ;;		line 180 in file "color_click.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4441 ;;Total ram usage:        1 bytes
  4442 ;; Hardware stack levels used: 1
  4443 ;; Hardware stack levels required when called: 3
  4444 ;; This function calls:
  4445 ;;		i2_colorclick_writetoaddr
  4446 ;; This function is called by:
  4447 ;;		i2_colorclick_int_clear
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text38
  4452  001A40                     __ptext38:
  4453                           	callstack 0
  4454  001A40                     i2_colorclick_int_init:
  4455                           	callstack 16
  4456  001A40                     
  4457                           ;color_click.c: 181:     colorclick_writetoaddr(0x00, 0b10011);
  4458  001A40  0E13               	movlw	19
  4459  001A42  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  4460  001A44  0E00               	movlw	0
  4461  001A46  ECDC  F00E         	call	i2_colorclick_writetoaddr
  4462  001A4A                     
  4463                           ;color_click.c: 182:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4464  001A4A  0E3F               	movlw	63
  4465  001A4C  6E05               	movwf	??i2_colorclick_int_init^0,c
  4466  001A4E  0E55               	movlw	85
  4467  001A50                     i2u209_47:
  4468  001A50  2EE8               	decfsz	wreg,f,c
  4469  001A52  D7FE               	bra	i2u209_47
  4470  001A54  2E05               	decfsz	??i2_colorclick_int_init^0,f,c
  4471  001A56  D7FC               	bra	i2u209_47
  4472  001A58  F000               	nop	
  4473  001A5A                     
  4474                           ;color_click.c: 183:     colorclick_writetoaddr(0x0C, 0b0100);
  4475  001A5A  0E04               	movlw	4
  4476  001A5C  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  4477  001A5E  0E0C               	movlw	12
  4478  001A60  ECDC  F00E         	call	i2_colorclick_writetoaddr
  4479  001A64                     
  4480                           ;color_click.c: 184:     colorclick_writetoaddr(0x04, 0x14);
  4481  001A64  0E14               	movlw	20
  4482  001A66  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  4483  001A68  0E04               	movlw	4
  4484  001A6A  ECDC  F00E         	call	i2_colorclick_writetoaddr
  4485  001A6E                     
  4486                           ;color_click.c: 185:     colorclick_writetoaddr(0x05, 0x05);
  4487  001A6E  0E05               	movlw	5
  4488  001A70  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  4489  001A72  0E05               	movlw	5
  4490  001A74  ECDC  F00E         	call	i2_colorclick_writetoaddr
  4491  001A78                     
  4492                           ;color_click.c: 186:     colorclick_writetoaddr(0x06, 0x6C);
  4493  001A78  0E6C               	movlw	108
  4494  001A7A  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  4495  001A7C  0E06               	movlw	6
  4496  001A7E  ECDC  F00E         	call	i2_colorclick_writetoaddr
  4497  001A82                     
  4498                           ;color_click.c: 187:     colorclick_writetoaddr(0x07, 0x07);
  4499  001A82  0E07               	movlw	7
  4500  001A84  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  4501  001A86  0E07               	movlw	7
  4502  001A88  ECDC  F00E         	call	i2_colorclick_writetoaddr
  4503  001A8C  0012               	return		;funcret
  4504  001A8E                     __end_ofi2_colorclick_int_init:
  4505                           	callstack 0
  4506                           
  4507 ;; *************** function i2_colorclick_writetoaddr *****************
  4508 ;; Defined at:
  4509 ;;		line 72 in file "color_click.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  address         1    wreg     unsigned char 
  4512 ;;  value           1    2[COMRAM] unsigned char 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  address         1    3[COMRAM] unsigned char 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4524 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4528 ;;Total ram usage:        2 bytes
  4529 ;; Hardware stack levels used: 1
  4530 ;; Hardware stack levels required when called: 2
  4531 ;; This function calls:
  4532 ;;		i2_I2C_2_Master_Start
  4533 ;;		i2_I2C_2_Master_Stop
  4534 ;;		i2_I2C_2_Master_Write
  4535 ;; This function is called by:
  4536 ;;		i2_colorclick_int_init
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text39
  4541  001DB8                     __ptext39:
  4542                           	callstack 0
  4543  001DB8                     i2_colorclick_writetoaddr:
  4544                           	callstack 16
  4545                           
  4546                           ;incstack = 0
  4547                           ;i2colorclick_writetoaddr@address stored from wreg
  4548  001DB8  6E04               	movwf	i2colorclick_writetoaddr@address^0,c
  4549  001DBA                     
  4550                           ;color_click.c: 72: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           73: {;color_click.c: 74:     I2C_2_Master_Start();
  4551  001DBA  EC3E  F00F         	call	i2_I2C_2_Master_Start	;wreg free
  4552                           
  4553                           ;color_click.c: 75:     I2C_2_Master_Write(0x52 | 0x00);
  4554  001DBE  0E52               	movlw	82
  4555  001DC0  EC24  F00F         	call	i2_I2C_2_Master_Write
  4556                           
  4557                           ;color_click.c: 76:     I2C_2_Master_Write(0x80 | address);
  4558  001DC4  5004               	movf	i2colorclick_writetoaddr@address^0,w,c
  4559  001DC6  0980               	iorlw	128
  4560  001DC8  EC24  F00F         	call	i2_I2C_2_Master_Write
  4561                           
  4562                           ;color_click.c: 77:     I2C_2_Master_Write(value);
  4563  001DCC  5003               	movf	i2colorclick_writetoaddr@value^0,w,c
  4564  001DCE  EC24  F00F         	call	i2_I2C_2_Master_Write
  4565                           
  4566                           ;color_click.c: 78:     I2C_2_Master_Stop();
  4567  001DD2  EC39  F00F         	call	i2_I2C_2_Master_Stop	;wreg free
  4568  001DD6  0012               	return		;funcret
  4569  001DD8                     __end_ofi2_colorclick_writetoaddr:
  4570                           	callstack 0
  4571                           
  4572 ;; *************** function i2_I2C_2_Master_Write *****************
  4573 ;; Defined at:
  4574 ;;		line 69 in file "i2c.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  data_byte       1    wreg     unsigned char 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  data_byte       1    1[COMRAM] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4592 ;;Total ram usage:        1 bytes
  4593 ;; Hardware stack levels used: 1
  4594 ;; Hardware stack levels required when called: 1
  4595 ;; This function calls:
  4596 ;;		i2_I2C_2_Master_Idle
  4597 ;; This function is called by:
  4598 ;;		i2_colorclick_writetoaddr
  4599 ;;		i2_colorclick_int_clear
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text40
  4604  001E48                     __ptext40:
  4605                           	callstack 0
  4606  001E48                     i2_I2C_2_Master_Write:
  4607                           	callstack 16
  4608                           
  4609                           ;incstack = 0
  4610                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  4611  001E48  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  4612  001E4A                     
  4613                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  4614  001E4A  EC87  F00E         	call	i2_I2C_2_Master_Idle	;wreg free
  4615  001E4E                     
  4616                           ;i2c.c: 72:   SSP2BUF = data_byte;
  4617  001E4E  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  4618  001E52  0012               	return		;funcret
  4619  001E54                     __end_ofi2_I2C_2_Master_Write:
  4620                           	callstack 0
  4621                           
  4622 ;; *************** function i2_I2C_2_Master_Stop *****************
  4623 ;; Defined at:
  4624 ;;		line 59 in file "i2c.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0, cstack
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4642 ;;Total ram usage:        0 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; Hardware stack levels required when called: 1
  4645 ;; This function calls:
  4646 ;;		i2_I2C_2_Master_Idle
  4647 ;; This function is called by:
  4648 ;;		i2_colorclick_writetoaddr
  4649 ;;		i2_colorclick_int_clear
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text41
  4654  001E72                     __ptext41:
  4655                           	callstack 0
  4656  001E72                     i2_I2C_2_Master_Stop:
  4657                           	callstack 16
  4658  001E72                     
  4659                           ;i2c.c: 61:   I2C_2_Master_Idle();
  4660  001E72  EC87  F00E         	call	i2_I2C_2_Master_Idle	;wreg free
  4661  001E76                     
  4662                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  4663  001E76  010E               	movlb	14	; () banked
  4664  001E78  85DA               	bsf	218,2,b	;volatile
  4665  001E7A                     
  4666                           ; BSR set to: 14
  4667  001E7A  0012               	return		;funcret
  4668  001E7C                     __end_ofi2_I2C_2_Master_Stop:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function i2_I2C_2_Master_Start *****************
  4672 ;; Defined at:
  4673 ;;		line 39 in file "i2c.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;Total ram usage:        0 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 1
  4694 ;; This function calls:
  4695 ;;		i2_I2C_2_Master_Idle
  4696 ;; This function is called by:
  4697 ;;		i2_colorclick_writetoaddr
  4698 ;;		i2_colorclick_int_clear
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text42
  4703  001E7C                     __ptext42:
  4704                           	callstack 0
  4705  001E7C                     i2_I2C_2_Master_Start:
  4706                           	callstack 16
  4707  001E7C                     
  4708                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4709  001E7C  EC87  F00E         	call	i2_I2C_2_Master_Idle	;wreg free
  4710  001E80                     
  4711                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  4712  001E80  010E               	movlb	14	; () banked
  4713  001E82  81DA               	bsf	218,0,b	;volatile
  4714  001E84                     
  4715                           ; BSR set to: 14
  4716  001E84  0012               	return		;funcret
  4717  001E86                     __end_ofi2_I2C_2_Master_Start:
  4718                           	callstack 0
  4719                           
  4720 ;; *************** function i2_I2C_2_Master_Idle *****************
  4721 ;; Defined at:
  4722 ;;		line 30 in file "i2c.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;		None
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;		None
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      void 
  4729 ;; Registers used:
  4730 ;;		wreg, status,2, status,0
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;Total ram usage:        1 bytes
  4741 ;; Hardware stack levels used: 1
  4742 ;; This function calls:
  4743 ;;		Nothing
  4744 ;; This function is called by:
  4745 ;;		i2_I2C_2_Master_Start
  4746 ;;		i2_I2C_2_Master_Stop
  4747 ;;		i2_I2C_2_Master_Write
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text43
  4752  001D0E                     __ptext43:
  4753                           	callstack 0
  4754  001D0E                     i2_I2C_2_Master_Idle:
  4755                           	callstack 16
  4756  001D0E                     i2l30:
  4757  001D0E  010E               	movlb	14	; () banked
  4758  001D10  B5D8               	btfsc	216,2,b	;volatile
  4759  001D12  EF8D  F00E         	goto	i2u117_41
  4760  001D16  EF8F  F00E         	goto	i2u117_40
  4761  001D1A                     i2u117_41:
  4762  001D1A  EF87  F00E         	goto	i2l30
  4763  001D1E                     i2u117_40:
  4764  001D1E                     
  4765                           ; BSR set to: 14
  4766  001D1E  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  4767  001D22  0E1F               	movlw	31
  4768  001D24  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  4769  001D26  A4D8               	btfss	status,2,c
  4770  001D28  EF98  F00E         	goto	i2u118_41
  4771  001D2C  EF9A  F00E         	goto	i2u118_40
  4772  001D30                     i2u118_41:
  4773  001D30  EF87  F00E         	goto	i2l30
  4774  001D34                     i2u118_40:
  4775  001D34                     
  4776                           ; BSR set to: 14
  4777  001D34  0012               	return		;funcret
  4778  001D36                     __end_ofi2_I2C_2_Master_Idle:
  4779                           	callstack 0
  4780                           
  4781                           	psect	rparam
  4782  0000                     
  4783                           	psect	temp
  4784  000057                     btemp:
  4785                           	callstack 0
  4786  000057                     	ds	1
  4787  0000                     int$flags	set	btemp
  4788  0000                     wtemp8	set	btemp+1
  4789  0000                     ttemp5	set	btemp+1
  4790  0000                     ttemp6	set	btemp+4
  4791  0000                     ttemp7	set	btemp+8
  4792                           
  4793                           	psect	idloc
  4794                           
  4795                           ;Config register IDLOC0 @ 0x200000
  4796                           ;	unspecified, using default values
  4797  200000                     	org	2097152
  4798  200000  0FFF               	dw	4095
  4799                           
  4800                           ;Config register IDLOC1 @ 0x200002
  4801                           ;	unspecified, using default values
  4802  200002                     	org	2097154
  4803  200002  0FFF               	dw	4095
  4804                           
  4805                           ;Config register IDLOC2 @ 0x200004
  4806                           ;	unspecified, using default values
  4807  200004                     	org	2097156
  4808  200004  0FFF               	dw	4095
  4809                           
  4810                           ;Config register IDLOC3 @ 0x200006
  4811                           ;	unspecified, using default values
  4812  200006                     	org	2097158
  4813  200006  0FFF               	dw	4095
  4814                           
  4815                           ;Config register IDLOC4 @ 0x200008
  4816                           ;	unspecified, using default values
  4817  200008                     	org	2097160
  4818  200008  0FFF               	dw	4095
  4819                           
  4820                           ;Config register IDLOC5 @ 0x20000A
  4821                           ;	unspecified, using default values
  4822  20000A                     	org	2097162
  4823  20000A  0FFF               	dw	4095
  4824                           
  4825                           ;Config register IDLOC6 @ 0x20000C
  4826                           ;	unspecified, using default values
  4827  20000C                     	org	2097164
  4828  20000C  0FFF               	dw	4095
  4829                           
  4830                           ;Config register IDLOC7 @ 0x20000E
  4831                           ;	unspecified, using default values
  4832  20000E                     	org	2097166
  4833  20000E  0FFF               	dw	4095
  4834                           
  4835                           	psect	config
  4836                           
  4837                           ;Config register CONFIG1L @ 0x300000
  4838                           ;	External Oscillator mode Selection bits
  4839                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4840                           ;	Power-up default value for COSC bits
  4841                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4842  300000                     	org	3145728
  4843  300000  AA                 	db	170
  4844                           
  4845                           ;Config register CONFIG1H @ 0x300001
  4846                           ;	unspecified, using default values
  4847                           ;	Clock Out Enable bit
  4848                           ;	CLKOUTEN = 0x1, unprogrammed default
  4849                           ;	Clock Switch Enable bit
  4850                           ;	CSWEN = 0x1, unprogrammed default
  4851                           ;	Fail-Safe Clock Monitor Enable bit
  4852                           ;	FCMEN = 0x1, unprogrammed default
  4853  300001                     	org	3145729
  4854  300001  FF                 	db	255
  4855                           
  4856                           ;Config register CONFIG2L @ 0x300002
  4857                           ;	unspecified, using default values
  4858                           ;	Master Clear Enable bit
  4859                           ;	MCLRE = 0x1, unprogrammed default
  4860                           ;	Power-up Timer Enable bit
  4861                           ;	PWRTE = 0x1, unprogrammed default
  4862                           ;	Low-power BOR enable bit
  4863                           ;	LPBOREN = 0x1, unprogrammed default
  4864                           ;	Brown-out Reset Enable bits
  4865                           ;	BOREN = 0x3, unprogrammed default
  4866  300002                     	org	3145730
  4867  300002  FF                 	db	255
  4868                           
  4869                           ;Config register CONFIG2H @ 0x300003
  4870                           ;	unspecified, using default values
  4871                           ;	Brown Out Reset Voltage selection bits
  4872                           ;	BORV = 0x3, unprogrammed default
  4873                           ;	ZCD Disable bit
  4874                           ;	ZCD = 0x1, unprogrammed default
  4875                           ;	PPSLOCK bit One-Way Set Enable bit
  4876                           ;	PPS1WAY = 0x1, unprogrammed default
  4877                           ;	Stack Full/Underflow Reset Enable bit
  4878                           ;	STVREN = 0x1, unprogrammed default
  4879                           ;	Debugger Enable bit
  4880                           ;	DEBUG = 0x1, unprogrammed default
  4881                           ;	Extended Instruction Set Enable bit
  4882                           ;	XINST = 0x1, unprogrammed default
  4883  300003                     	org	3145731
  4884  300003  FF                 	db	255
  4885                           
  4886                           ;Config register CONFIG3L @ 0x300004
  4887                           ;	WDT Period Select bits
  4888                           ;	WDTCPS = 0x1F, unprogrammed default
  4889                           ;	WDT operating mode
  4890                           ;	WDTE = OFF, WDT Disabled
  4891  300004                     	org	3145732
  4892  300004  9F                 	db	159
  4893                           
  4894                           ;Config register CONFIG3H @ 0x300005
  4895                           ;	unspecified, using default values
  4896                           ;	WDT Window Select bits
  4897                           ;	WDTCWS = 0x7, unprogrammed default
  4898                           ;	WDT input clock selector
  4899                           ;	WDTCCS = 0x7, unprogrammed default
  4900  300005                     	org	3145733
  4901  300005  FF                 	db	255
  4902                           
  4903                           ;Config register CONFIG4L @ 0x300006
  4904                           ;	unspecified, using default values
  4905                           ;	Write Protection Block 0
  4906                           ;	WRT0 = 0x1, unprogrammed default
  4907                           ;	Write Protection Block 1
  4908                           ;	WRT1 = 0x1, unprogrammed default
  4909                           ;	Write Protection Block 2
  4910                           ;	WRT2 = 0x1, unprogrammed default
  4911                           ;	Write Protection Block 3
  4912                           ;	WRT3 = 0x1, unprogrammed default
  4913                           ;	Write Protection Block 3
  4914                           ;	WRT4 = 0x1, unprogrammed default
  4915                           ;	Write Protection Block 3
  4916                           ;	WRT5 = 0x1, unprogrammed default
  4917                           ;	Write Protection Block 3
  4918                           ;	WRT6 = 0x1, unprogrammed default
  4919                           ;	Write Protection Block 3
  4920                           ;	WRT7 = 0x1, unprogrammed default
  4921  300006                     	org	3145734
  4922  300006  FF                 	db	255
  4923                           
  4924                           ;Config register CONFIG4H @ 0x300007
  4925                           ;	unspecified, using default values
  4926                           ;	Configuration Register Write Protection bit
  4927                           ;	WRTC = 0x1, unprogrammed default
  4928                           ;	Boot Block Write Protection bit
  4929                           ;	WRTB = 0x1, unprogrammed default
  4930                           ;	Data EEPROM Write Protection bit
  4931                           ;	WRTD = 0x1, unprogrammed default
  4932                           ;	Scanner Enable bit
  4933                           ;	SCANE = 0x1, unprogrammed default
  4934                           ;	Low Voltage Programming Enable bit
  4935                           ;	LVP = 0x1, unprogrammed default
  4936  300007                     	org	3145735
  4937  300007  FF                 	db	255
  4938                           
  4939                           ;Config register CONFIG5L @ 0x300008
  4940                           ;	unspecified, using default values
  4941                           ;	UserNVM Program Memory Code Protection bit
  4942                           ;	CP = 0x1, unprogrammed default
  4943                           ;	DataNVM Memory Code Protection bit
  4944                           ;	CPD = 0x1, unprogrammed default
  4945  300008                     	org	3145736
  4946  300008  FF                 	db	255
  4947                           
  4948                           ;Config register CONFIG5H @ 0x300009
  4949                           ;	unspecified, using default values
  4950  300009                     	org	3145737
  4951  300009  FF                 	db	255
  4952                           
  4953                           ;Config register CONFIG6L @ 0x30000A
  4954                           ;	unspecified, using default values
  4955                           ;	Table Read Protection Block 0
  4956                           ;	EBTR0 = 0x1, unprogrammed default
  4957                           ;	Table Read Protection Block 1
  4958                           ;	EBTR1 = 0x1, unprogrammed default
  4959                           ;	Table Read Protection Block 2
  4960                           ;	EBTR2 = 0x1, unprogrammed default
  4961                           ;	Table Read Protection Block 3
  4962                           ;	EBTR3 = 0x1, unprogrammed default
  4963                           ;	Table Read Protection Block 4
  4964                           ;	EBTR4 = 0x1, unprogrammed default
  4965                           ;	Table Read Protection Block 5
  4966                           ;	EBTR5 = 0x1, unprogrammed default
  4967                           ;	Table Read Protection Block 6
  4968                           ;	EBTR6 = 0x1, unprogrammed default
  4969                           ;	Table Read Protection Block 7
  4970                           ;	EBTR7 = 0x1, unprogrammed default
  4971  30000A                     	org	3145738
  4972  30000A  FF                 	db	255
  4973                           
  4974                           ;Config register CONFIG6H @ 0x30000B
  4975                           ;	unspecified, using default values
  4976                           ;	Boot Block Table Read Protection bit
  4977                           ;	EBTRB = 0x1, unprogrammed default
  4978  30000B                     	org	3145739
  4979  30000B  FF                 	db	255
  4980                           tosu	equ	0xFFF
  4981                           tosh	equ	0xFFE
  4982                           tosl	equ	0xFFD
  4983                           stkptr	equ	0xFFC
  4984                           pclatu	equ	0xFFB
  4985                           pclath	equ	0xFFA
  4986                           pcl	equ	0xFF9
  4987                           tblptru	equ	0xFF8
  4988                           tblptrh	equ	0xFF7
  4989                           tblptrl	equ	0xFF6
  4990                           tablat	equ	0xFF5
  4991                           prodh	equ	0xFF4
  4992                           prodl	equ	0xFF3
  4993                           indf0	equ	0xFEF
  4994                           postinc0	equ	0xFEE
  4995                           postdec0	equ	0xFED
  4996                           preinc0	equ	0xFEC
  4997                           plusw0	equ	0xFEB
  4998                           fsr0h	equ	0xFEA
  4999                           fsr0l	equ	0xFE9
  5000                           wreg	equ	0xFE8
  5001                           indf1	equ	0xFE7
  5002                           postinc1	equ	0xFE6
  5003                           postdec1	equ	0xFE5
  5004                           preinc1	equ	0xFE4
  5005                           plusw1	equ	0xFE3
  5006                           fsr1h	equ	0xFE2
  5007                           fsr1l	equ	0xFE1
  5008                           bsr	equ	0xFE0
  5009                           indf2	equ	0xFDF
  5010                           postinc2	equ	0xFDE
  5011                           postdec2	equ	0xFDD
  5012                           preinc2	equ	0xFDC
  5013                           plusw2	equ	0xFDB
  5014                           fsr2h	equ	0xFDA
  5015                           fsr2l	equ	0xFD9
  5016                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160    102     160
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2398_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S816$dir_LAT	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    S816$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _colorclick_int_clear->_colorclick_int_init
    _colorclick_int_init->_colorclick_writetoaddr
    _colorclick_readColour->_colorclick_readBlue
    _colorclick_readColour->_colorclick_readClear
    _colorclick_readColour->_colorclick_readGreen
    _colorclick_readColour->_colorclick_readRed
    _colorclick_readRed->_I2C_2_Master_Read
    _colorclick_readGreen->_I2C_2_Master_Read
    _colorclick_readClear->_I2C_2_Master_Read
    _colorclick_readBlue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colorclick_init->_colorclick_writetoaddr
    _colorclick_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_colorclick_int_clear->i2_colorclick_int_init
    i2_colorclick_int_init->i2_colorclick_writetoaddr
    i2_colorclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0   11406
                                             36 BANK0     66    66      0
                           _ADC_init
                        _USART4_init
                    _colorclick_init
              _colorclick_readColour
          _colorclick_toggleClearLED
                    _interrupts_init
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12    8417
                                             16 BANK0     20     8     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                              8 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             70 COMRAM     8     2      6
                                              0 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             34 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             25 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              7 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              7 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    3     1      2     219
                                              9 COMRAM     3     1      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      2     0      2      98
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     772
               _colorclick_int_clear
 ---------------------------------------------------------------------------------
 (2) _colorclick_int_clear                                 0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                _colorclick_int_init
 ---------------------------------------------------------------------------------
 (3) _colorclick_int_init                                  1     1      0     750
                                             11 COMRAM     1     1      0
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colorclick_readColour                                8     0      8     699
                                             18 COMRAM     8     0      8
                _colorclick_readBlue
               _colorclick_readClear
               _colorclick_readGreen
                 _colorclick_readRed
 ---------------------------------------------------------------------------------
 (2) _colorclick_readRed                                   7     5      2     113
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readGreen                                 7     5      2     113
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readClear                                 7     5      2     113
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readBlue                                  7     5      2     113
                                             11 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              8 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _colorclick_init                                      1     1      0     816
                                             11 COMRAM     1     1      0
                  _I2C_2_Master_Init
          _colorclick_toggleClearLED
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colorclick_writetoaddr                               2     1      1     750
                                              9 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colorclick_toggleClearLED                            1     1      0      66
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             1     1      0     244
                                              5 COMRAM     1     1      0
             i2_colorclick_int_clear
 ---------------------------------------------------------------------------------
 (11) i2_colorclick_int_clear                              0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
              i2_colorclick_int_init
 ---------------------------------------------------------------------------------
 (12) i2_colorclick_int_init                               1     1      0     222
                                              4 COMRAM     1     1      0
           i2_colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_colorclick_writetoaddr                            2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _USART4_init
   _colorclick_init
     _I2C_2_Master_Init
     _colorclick_toggleClearLED
     _colorclick_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colorclick_readColour
     _colorclick_readBlue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readClear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readGreen
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readRed
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colorclick_toggleClearLED
   _interrupts_init
     _colorclick_int_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _colorclick_int_init
         _colorclick_writetoaddr
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_colorclick_int_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_colorclick_int_init
       i2_colorclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     132       8        0.0%
DATA                 0      0     132       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec  7 10:43:13 2021

        __end_of_colorclick_readRed 1902         __end_of_colorclick_readBlue 19F2  
      __end_of_colorclick_readClear 19A2         __end_of_colorclick_int_init 1A40  
      __end_of_colorclick_readGreen 1952                                  l30 1CE6  
                                l33 1D0C                                  l42 1E66  
                                l27 1CE4                                  l36 1E70  
                                l45 1E46                                  l39 1E5C  
                                l48 1B56                                  bsr 000FE0  
      __end_of_colorclick_int_clear 1DF2      __size_of_colorclick_readColour 0044  
 __size_ofi2_colorclick_writetoaddr 0020       __end_of_colorclick_readColour 1B16  
         ?i2_colorclick_writetoaddr 0003              _colorclick_writetoaddr 1D78  
                               l304 1DB6                                 l401 1950  
                               l233 1D76                                 l313 1E26  
                               l410 1B14                                 l322 1C4E  
                               l315 1E36                                 l404 19F0  
                               l316 1E3A                                 l413 1DF0  
                               l407 19A0                                 l416 1A3E  
                               l259 1E0A                                 l392 1D56  
                               l386 1BD6                                 l395 1D96  
                               l556 1428                                 l398 1900  
                               l569 158C                                 u950 1CF6  
                               u951 1CF2                                 u960 1D0C  
                               u961 1D08                                 _abs 1B58  
                               _pad 173C                                 wreg 000FE8  
                   _colorclick_init 1B98             ?i2_colorclick_int_clear 0001  
                              l1120 18B0                                l1211 173A  
                              ?_abs 001A                                l2102 1D7A  
                              l1222 1E86                                l1150 17C2  
                              l2200 1A0C                                l1152 17FC  
                              l1160 0EB6                                l2202 1A16  
                              l1219 1AD0                                l1147 1780  
                              l2204 1A20                                l1228 1CBA  
                              l2206 1A2A                                l1158 0EAE  
                              l1191 1856                                l2320 1DFC  
                              l2208 1A34                                l2400 1C32  
                              l1192 185E                                l1185 12A0  
                              l2322 1E04                                l2330 1B9C  
                              l2402 1C36                                l1178 10EC  
                              l2324 1E06                                l2260 1CCE  
                              l2340 1BCC                                l2332 1BA6  
                              l2180 1E58                                l1196 1B8E  
                              l2326 1E08                                l2318 1DF2  
                              l2262 1CD0                                l2254 1CBC  
                              l2342 1BCE                                l2334 1BB6  
                              l2190 1B52                                l2182 1B18  
                              l2350 1D64                                l2270 1E26  
                              l2510 1684                                l1199 1B96  
                              l2264 1CD2                                l2256 1CC6  
                              l2344 1BD0                                l2336 1BC0  
                              l2328 1B98                                l2192 1B54  
                              l2184 1B1C                                l2280 1948  
                              l2272 18B2                                l2360 1D72  
                              l2352 1D68                                l2600 14B4  
                              l2512 1696                                l2370 1DA6  
                              l2258 1CCC                                l2266 1D38  
                              l2338 1BCA                                l2186 1B24  
                              l2178 1E54                                l2290 1952  
                              l2274 18F8                                l2362 1D74  
                              l2354 1D6A                                l2346 1D58  
                              l2610 1536                                l2602 14C8  
                              l2514 16A0                                l2522 1A8E  
                              l2530 1C86                                l2372 1DB0  
                              l2364 1D98                                l2188 1B2C  
                              l2284 19A2                                l2292 1998  
                              l2380 1B02                                l2196 19F2  
                              l2268 1DD8                                l2356 1D6E  
                              l2348 1D5E                                l2540 12A2  
                              l2604 14D6                                l2612 153C  
                              l2516 16BE                                l2508 1672  
                              l2524 1A9A                                l2532 1C92  
                              l2620 173C                                l2700 10AC  
                              l2374 1DB2                                l2366 1DA2  
                              l2286 19E8                                l2278 1902  
                              l2198 19FC                                l2358 1D70  
                              l2550 12E6                                l2542 12A6  
                              l2614 154C                                l2606 1504  
                              l2518 16F4                                l2526 1AAC  
                              l2534 1C96                                l2630 178C  
                              l2622 174A                                l2702 10B4  
                              l2710 1112                                l2376 1DB4  
                              l2368 1DA4                                l2560 133C  
                              l2552 1306                                l2544 12B4  
                              l2616 156C                                l2608 1524  
                              l2528 1AB0                                l2536 1CAE  
                              l2632 17A0                                l2624 175E  
                              l2704 10C4                                l2720 117E  
                              l2712 1120                                l2378 1AD2  
                              l2570 13BE                                l2562 1350  
                              l2554 130A                                l2546 12D4  
                              l2642 1B58                                l2634 17A4  
                              l2626 176C                                l2650 0E58  
                              l2730 1230                                l2722 11C6  
                              l2714 1132                                l2396 1C18  
                              l2580 1408                                l2572 13C0  
                              l2564 135E                                l2556 1316  
                              l2548 12D8                                l2644 1B72  
                              l2636 17D0                                l2628 1778  
                              l2660 0EBE                                l2652 0E78  
                              l2732 1244                                l2716 1136  
                              l2708 10EE                                l2398 1C1C  
                              l2574 13D2                                l2566 1370  
                              l2558 1334                                l2590 145C  
                              l2638 17E4                                l2670 0EF6  
                              l2662 0ED0                                l2654 0E86  
                              l2646 0E10                                l2726 11FE  
                              l2718 115A                                l2742 126A  
                              l2750 17FE                                l1960 1CF6  
                              l2568 139E                                l2576 13D8  
                              l2592 1460                                l2584 142A  
                              l2672 0EFC                                l2680 0FEE  
                              l2664 0EDE                                l2656 0E88  
                              l2648 0E30                                l2744 128E  
                              l2728 1222                                l2736 1250  
                              l2752 1806                                l2760 1872  
                              l2578 13E8                                l2594 146E  
                              l2586 142E                                l2682 1008  
                              l2690 1068                                l2674 0F7E  
                              l2666 0EE4                                l2658 0EA2  
                              l2738 125E                                l2754 1814  
                              l2762 187A                                l2770 158E  
                              l1980 1E68                                l2596 148E  
                              l2588 143C                                l2692 107A  
                              l2684 1026                                l2676 0F84  
                              l2668 0EEC                                l2756 183A  
                              l2764 1882                                l2780 15A2  
                              l2772 1592                                l1958 1CE6  
                              l1982 1E6C                                l1990 1E42  
                              l2598 14AC                                l2694 1088  
                              l2686 1040                                l2678 0F8A  
                              l2766 189E                                l2758 1860  
                              l2790 1600                                l2782 15C6  
                              l2774 1596                                ?_pad 0018  
                              l1984 1E5E                                l2696 108E  
                              l2688 105A                                l2792 1608  
                              l2784 15CC                                l2776 159E  
                              l1986 1E62                                l2698 10A0  
                              l2794 1610                                l2786 15F0  
                              l2778 15A0                                l1988 1E3E  
                              l2796 1646                                l2788 15F8  
                              l2798 1652                                STR_1 0E01  
                              u2000 1222                                u2001 121E  
                              u2010 1856                                u2011 1852  
                              u2021 15AC                                u2031 15BE  
                              u2041 15D6                                u2051 15E8  
                              u1340 1B40                                u1405 1D40  
                              u1341 1B38                                u1406 1D42  
                              u1430 1E36                                u1415 1D4A  
                              u1431 1E32                                u1416 1D4C  
                              u1600 16BE                        _BAUD4CONbits 000EE9  
                              u1425 1D54                                u1601 16BA  
                              u1426 1D56                                u1610 16F4  
                              u1451 1B0C                                u1611 16F0  
                              u2067 165E                                u1460 1C4E  
                              u1700 13E8                                u1620 1AD0  
                              u2077 1A02                                u1461 1C4A  
                              u1701 13E4                                u1621 1ACC  
                              u1358 1B42                                u1710 143C  
                              u1630 1CAE                                u2087 1BAC  
                              u1711 1438                                u1631 1CAA  
                              u1640 12B4                                u1720 146E  
                              u1800 17D0                                u1641 12B0  
                              u1721 146A                                u1801 17CC  
                              u1650 12E6                                u1730 14AC  
                              u1810 1B72                                _T2PR 000FBC  
                              u1651 12E2                                u1731 14A8  
                              u1811 1B6E                                u1740 14D6  
                              u1580 1684                                u1900 1026  
                              u1820 0E40                                u1661 1310  
                              u1741 14D2                                u1581 1680  
                              u1901 1022                                u1821 0E3A  
                              u1670 1334                                u1750 1504  
                              u1590 1696                                u1910 1040  
                              u1830 0E42                                u1671 1330  
                              u1751 1500                                u1591 1692  
                              u1911 103C                                u1680 135E  
                              u1760 154C                                u1920 105A  
                              u1840 0E58                                u1681 135A  
                              u1761 1548                                u1921 1056  
                              u1841 0E54                                u1690 139E  
                              u1770 174A                                u1930 1068  
                              u1850 0E86                                u1691 139A  
                              u1771 1746                                u1931 1064  
                              u1851 0E82                                u1780 176C  
                              u1940 107A                                u1860 0EA2  
                              u1781 1768                                u1941 1076  
                              u1861 0E9E                                u1790 17C2  
                              u1950 1088                                u1870 0ED0  
                              u1791 17BE                                u1951 1084  
                              u1871 0ECC                                u1960 10A0  
                              u1880 0EDE                                u1961 109C  
                              u1881 0EDA                                u1890 1008  
                              u1970 1112                                u1891 1004  
                              u1971 110E                                u1980 115A  
                              u1981 1156                                u1990 117E  
                              u1991 117A                                i2l30 1D0E  
                              i2l33 1D34                                i2l42 1E7A  
                              i2l36 1E84                                i2l45 1E52  
     colorclick_writetoaddr@address 000B     i2colorclick_writetoaddr@address 0004  
                       main@current 00BE                         main@initial 00AE  
 __end_of_colorclick_toggleClearLED 1D58      __size_ofi2_colorclick_int_init 004E  
           __end_of_interrupts_init 1D78       __end_ofi2_colorclick_int_init 1A8E  
                              abs@a 001A                                _dbuf 00E0  
                              _main 158E                                _dtoa 0E10  
                              _prec 004F                                _nout 00DA  
                              pad@i 001F                                pad@p 001C  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 0021                                fsr2l 000FD9  
                              btemp 0057                                start 0026  
                  __end_of_ADC_init 1E0C                     __end_of_HighISR 1C18  
                      ___param_bank 000000                               ??_abs 001C  
                             ??_pad 001E                     __end_of___aodiv 142A  
                             ?_main 0001                               ?_dtoa 0023  
                   __end_of___aomod 158E                               _ADPCH 000F5F  
                             i1l244 001E                               i2l413 1E24  
                             i2l239 1C14                               i2l416 1A8C  
                             i2l395 1DD6                        vfpfcnvrt@fmt 0049  
    __end_ofi2_colorclick_int_clear 1E26             __end_of_sendCharSerial4 1E3C  
        __end_of_I2C_2_Master_Start 1E72          __end_of_I2C_2_Master_Write 1E48  
                             _flags 0051                               _fputc 1672  
                             _fputs 1A8E                               pad@fp 0018  
                             _width 00DC                               _putch 1E86  
                             dtoa@d 0025                               dtoa@i 0045  
                             dtoa@n 003D                               dtoa@p 0037  
                             dtoa@s 003B                               dtoa@w 0039  
                             tablat 000FF5                               plusw0 000FEB  
                             plusw2 000FDB                               ttemp5 0058  
                             ttemp6 005B                               ttemp7 005F  
                             status 000FD8                               wtemp8 0058  
                   __end_of_sprintf 18B2               _I2C_2_Master_RepStart 1E54  
                   __initialization 1C50                        __end_of_main 1672  
                      __end_of_dtoa 10EE                              ??_main 0084  
                            ??_dtoa 002D             __end_of_colorclick_init 1BD8  
                     __activetblptr 000001        __size_ofi2_I2C_2_Master_Idle 0028  
      __size_ofi2_I2C_2_Master_Stop 000A                              ?_fputc 0008  
                            ?_fputs 0011                              _ADRESH 000F64  
                            ?_putch 0001                _colorclick_readClear 1952  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                            i2l2100 1D1E                              i2l2310 1A64  
                            i2l2312 1A6E                              i2l2304 1A40  
                            i2l2170 1E72                              i2l2314 1A78  
                            i2l2306 1A4A                              i2l2172 1E76  
                            i2l2252 1DBA                              i2l2316 1A82  
                            i2l2308 1A5A                              i2l2404 1E0C  
                            i2l2166 1E7C                              i2l2174 1E4A  
                            i2l2168 1E80                              i2l2176 1E4E  
                            i2l2440 1C0C                              i2l2098 1D0E  
                            i2l2442 1C10                              i2l2436 1BD8  
                            i2l2438 1BE8                _colorclick_readGreen 1902  
                  ?_interrupts_init 0001                           ??_HighISR 0006  
                            _RX4PPS 000E15                _colorclick_int_clear 1DD8  
                            _TX4REG 000EE4                              _LowISR 0018  
                      vfprintf@cfmt 006E                           ??___aodiv 0018  
                         ??___aomod 0018                              clear_0 1C56  
                            clear_1 1C62                              clear_2 1C6E  
                            isa$std 000001                              pad@buf 001A  
                            dtoa@fp 0023                              _strlen 1C86  
                            fputc@c 0008                              fputs@c 0015  
                            fputs@i 0016                              fputs@s 0011  
   colorclick_toggleClearLED@toggle 0008                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                           ?_ADC_init 0001  
                  ?_sendCharSerial4 0008                              putch@c 0001  
                  __end_of_vfprintf 1860                           ??_sprintf 004F  
                      ?_USART4_init 0001               ?_colorclick_readClear 000C  
             ?_colorclick_readGreen 000C               ?_colorclick_int_clear 0001  
                        __accesstop 0060             __end_of__initialization 1C74  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
  __end_ofi2_colorclick_writetoaddr 1DD8                      __pcstackCOMRAM 0001  
           ?_colorclick_writetoaddr 000A                       __end_of_fputc 173C  
                     __end_of_fputs 1AD2                       __end_of_putch 1E88  
                  ?_colorclick_init 0001                  _colorclick_readRed 18B2  
                        ??_ADC_init 0008                             ??_fputc 000C  
                           ??_fputs 0015                             ??_putch 0008  
               ?_colorclick_readRed 000C                          __pbssBANK0 00C6  
                        __pbssBANK1 0100                        _battery_flag 00DE  
     __size_ofi2_I2C_2_Master_Start 000A       __size_ofi2_I2C_2_Master_Write 000C  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
    __end_of_colorclick_writetoaddr 1D98                ??_colorclick_readRed 000E  
                           ?_strlen 0008        __size_of_colorclick_readBlue 0050  
                           _INT1PPS 000DF1               _colorclick_readColour 1AD2  
      __size_of_colorclick_int_init 004E                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                  __size_of_vfpfcnvrt 01B4  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6              ??_colorclick_readClear 000E  
                           _SSP2BUF 000ED5              ??_colorclick_readGreen 000E  
            ??_colorclick_int_clear 000D                             _HighISR 0008  
        ?_colorclick_toggleClearLED 0001                           _ADREFbits 000F58  
             i2_colorclick_int_init 1A40                  _I2C_2_Master_Start 1E68  
               i2_I2C_2_Master_Idle 1D0E                  _I2C_2_Master_Write 1E3C  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 1E72  
                           __Lparam 0000                     __size_of_LowISR 000E  
           sendStringSerial4@string 000A                             ___aodiv 12A2  
                           ___aomod 142A            i2_colorclick_writetoaddr 1DB8  
               ?_I2C_2_Master_Start 0001                 ?_I2C_2_Master_Write 0001  
                         ?_vfprintf 0068                        __psmallconst 0E00  
                           __pcinit 1C50             colorclick_readClear@tmp 0011  
                           __ramtop 0E00                             __ptext0 158E  
                           __ptext1 1860                             __ptext2 17FE  
                           __ptext3 10EE                             __ptext4 0E10  
                           __ptext5 173C                             __ptext6 1C86  
                           __ptext7 1A8E                             __ptext8 1672  
                           __ptext9 1E86                     __size_of_strlen 0036  
              ?i2_I2C_2_Master_Idle 0001                           _T2CONbits 000FBD  
                      __size_of_abs 0040                        __size_of_pad 00C2  
              ?i2_I2C_2_Master_Stop 0001                           _T2HLTbits 000FBE  
                     _RxBufWriteCnt 0056                             main@buf 0086  
                           _sprintf 1860                ??_I2C_2_Master_Start 0009  
              ??_I2C_2_Master_Write 0009                      __pintcode_body 1BD8  
              end_of_initialization 1C74             colorclick_readGreen@tmp 0011  
                           fputc@fp 000A                __size_of_USART4_init 0020  
                           int_func 1BD8                             fputs@fp 0013  
                 __end_of_vfpfcnvrt 12A2                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                          ??_vfprintf 004F  
                           strlen@a 000A                             strlen@s 0008  
            ?_colorclick_readColour 0013               ??i2_I2C_2_Master_Idle 0001  
             ??i2_I2C_2_Master_Stop 0002                           _TRISAbits 000F81  
                         _TRISBbits 000F82                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                   __size_of_ADC_init 001A  
           ??_I2C_2_Master_RepStart 0009              ?i2_colorclick_int_init 0001  
                      _EUSART4RXbuf 00C6                        _EUSART4TXbuf 0100  
         sendCharSerial4@charToSend 0008                      __end_of_LowISR 0026  
          __size_of_interrupts_init 0020                         vfpfcnvrt@ap 004B  
                       vfpfcnvrt@fp 0047                         vfpfcnvrt@ll 0060  
          ??i2_colorclick_int_clear 0006                      __end_of_strlen 1CBC  
               start_initialization 1C50                         __end_of_abs 1B98  
                       __end_of_pad 17FE                       _TxBufWriteCnt 0054  
     i2colorclick_writetoaddr@value 0003            __size_of_sendCharSerial4 0016  
               _colorclick_readBlue 19A2                 _colorclick_int_init 19F2  
                          ??_LowISR 0007                         vfprintf@fmt 006A  
     i2I2C_2_Master_Write@data_byte 0002                            ??_strlen 000A  
      __end_ofi2_I2C_2_Master_Start 1E86                ?_colorclick_readBlue 000C  
      __end_ofi2_I2C_2_Master_Write 1E54                ?_colorclick_int_init 0001  
                       __pbssCOMRAM 004F                       __pcstackBANK0 0060  
                  ___aodiv@dividend 0008            __size_of_colorclick_init 0040  
                          ?_HighISR 0001          ??i2_colorclick_writetoaddr 0004  
                         _card_flag 00DF         ??_colorclick_toggleClearLED 0008  
                         _dtoa$2471 0035                           __pintcode 0008  
                          ?___aodiv 0008                            ?___aomod 0008  
                  ___aodiv@quotient 001A         __size_of_colorclick_readRed 0050  
                       __pintcodelo 0018     __size_ofi2_colorclick_int_clear 001A  
             ??_colorclick_readBlue 000E                I2C_2_Master_Read@ack 000A  
                 __size_of_vfprintf 0062                   ??_interrupts_init 000D  
              I2C_2_Master_Read@tmp 000B               ??_colorclick_int_init 000C  
                       __smallconst 0E00                   _I2C_2_Master_Idle 1CE6  
                 _I2C_2_Master_Init 1CBC                   _I2C_2_Master_Read 1B16  
                 _I2C_2_Master_Stop 1E5E                        _RxBufReadCnt 0055  
                          _ADC_init 1DF2                  ?_I2C_2_Master_Idle 0001  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                ?_I2C_2_Master_Stop 0001                            ?_sprintf 0070  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
                    __size_of_putch 0002       __size_of_colorclick_readClear 0050  
            colorclick_readBlue@tmp 0011       __size_of_colorclick_readGreen 0050  
                 _sendStringSerial4 1C18                 ??_I2C_2_Master_Idle 0008  
     __size_of_colorclick_int_clear 001A                 ??_I2C_2_Master_Init 0008  
               ??_I2C_2_Master_Read 0009                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 0009                            _LATCbits 000F7B  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
       colorclick_writetoaddr@value 000A                            _LATHbits 000F80  
                          _IPR0bits 000E1F                            _PIE0bits 000E29  
                ?_sendStringSerial4 000A                            _PIE4bits 000E2D  
                          i2u117_40 1D1E                            i2u117_41 1D1A  
                          i2u118_40 1D34                            i2u118_41 1D30  
                          i2u151_40 1BE8                            i2u151_41 1BE4  
                          i2u152_40 1BFA                            i2u152_41 1BF2  
                          i2u209_47 1A50                            i2u153_48 1BFC  
                          _PIR0bits 000E33                            _PIR4bits 000E37  
                 ??_sendCharSerial4 000A                            _SSP2CON2 000EDA  
               ??_sendStringSerial4 000C                            _SSP2STAT 000ED8  
           ??_colorclick_readColour 001B                           _vfpfcnvrt 10EE  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 1D0E  
         _colorclick_toggleClearLED 1D36           __end_of_I2C_2_Master_Init 1CE6  
         __end_of_I2C_2_Master_Read 1B58           __end_of_I2C_2_Master_Stop 1E68  
       I2C_2_Master_Write@data_byte 0009                        _TxBufReadCnt 0053  
                     ??_USART4_init 0008             ??i2_colorclick_int_init 0005  
         __end_of_sendStringSerial4 1C50         __size_of_I2C_2_Master_Start 000A  
       __size_of_I2C_2_Master_Write 000C        colorclick_readColour@current 0013  
            i2_colorclick_int_clear 1E0C      __size_of_I2C_2_Master_RepStart 000A  
     __end_of_I2C_2_Master_RepStart 1E5E            ??_colorclick_writetoaddr 000B  
                  __size_of_HighISR 1C10                i2_I2C_2_Master_Start 1E7C  
                 ??_colorclick_init 000C                i2_I2C_2_Master_Write 1E48  
                          __Hrparam 0000                          vfprintf@ap 006C  
                          __Lrparam 0000                          vfprintf@fp 0068  
                      __Lsmallconst 0E00         __end_ofi2_I2C_2_Master_Idle 1D36  
                  __size_of___aodiv 0188         __end_ofi2_I2C_2_Master_Stop 1E7C  
                  __size_of___aomod 0164                          ?_vfpfcnvrt 0047  
                   ___aodiv@divisor 0010                     ___aodiv@counter 0018  
                        _ANSELBbits 000E9A                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                          sprintf@fmt 0072  
                          __ptext10 1B58                            __ptext11 142A  
                          __ptext20 1902                            __ptext12 12A2  
                          __ptext21 1952                            __ptext13 1C18  
                          __ptext30 1CE6                            __ptext22 19A2  
                          __ptext14 1E26                            __ptext31 1D36  
                          __ptext23 1E54                            __ptext15 1D58  
                          __ptext40 1E48                            __ptext32 1CBC  
                          __ptext24 1B16                            __ptext16 1DD8  
                          __ptext41 1E72                            __ptext33 1D98  
                          __ptext25 1B98                            __ptext17 19F2  
                          __ptext42 1E7C                            __ptext34 1DF2  
                          __ptext26 1D78                            __ptext18 1AD2  
                          __ptext43 1D0E                            __ptext27 1E3C  
                          __ptext19 18B2                            __ptext28 1E5E  
                          __ptext37 1E0C                            __ptext29 1E68  
                          __ptext38 1A40                            __ptext39 1DB8  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
                  __size_of_sprintf 0052                       __size_of_main 00E4  
                     __size_of_dtoa 02DE               ?i2_I2C_2_Master_Start 0001  
             ?i2_I2C_2_Master_Write 0001                 __end_of_USART4_init 1DB8  
             colorclick_readRed@tmp 0011                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 0057  
                          _vfprintf 17FE                            main@tmpB 00BA  
                          main@tmpC 00BC                            main@tmpG 00B8  
                          main@tmpR 00B6          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
                  ___aomod@dividend 0008          __size_of_I2C_2_Master_Stop 000A  
                        _INTCONbits 000FF2                         _PWM6CONbits 000FA4  
        __size_of_sendStringSerial4 0038                         _PWM7CONbits 000FA1  
                          intlevel1 0000                            intlevel2 0000  
                         sprintf@ap 007C     __size_of_colorclick_writetoaddr 0020  
                   _interrupts_init 1D58                     ___aomod@divisor 0010  
                       ??_vfpfcnvrt 004D                     ___aomod@counter 0018  
                          sprintf@f 007E                            sprintf@s 0070  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
__size_of_colorclick_toggleClearLED 0022                         _USART4_init 1D98  
                        _TX4STAbits 000EE8                        ___aodiv@sign 0019  
                   _sendCharSerial4 1E26              ??i2_I2C_2_Master_Start 0002  
            ??i2_I2C_2_Master_Write 0002                        ___aomod@sign 0019  
