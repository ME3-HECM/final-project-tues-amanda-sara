

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 11:52:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.20
    72                           ; Generated 05/05/2020 GMT
    73                           ; 
    74                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F67K40 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     _INT1PPS	set	3569
   106  0000                     _PIE4bits	set	3629
   107  0000                     _TX4REG	set	3812
   108  0000                     _RC4REG	set	3811
   109  0000                     _PIR4bits	set	3639
   110  0000                     _RC4STAbits	set	3815
   111  0000                     _SP4BRGH	set	3814
   112  0000                     _SP4BRGL	set	3813
   113  0000                     _TX4STAbits	set	3816
   114  0000                     _BAUD4CONbits	set	3817
   115  0000                     _RX4PPS	set	3605
   116  0000                     _RC0PPS	set	3682
   117  0000                     _ANSELFbits	set	3764
   118  0000                     _PIR0bits	set	3635
   119  0000                     _IPR0bits	set	3615
   120  0000                     _PIE0bits	set	3625
   121  0000                     _ANSELBbits	set	3738
   122  0000                     _RC7PPS	set	3689
   123  0000                     _RE2PPS	set	3700
   124  0000                     _SSP2BUF	set	3797
   125  0000                     _SSP2CON2bits	set	3802
   126  0000                     _SSP2CON2	set	3802
   127  0000                     _SSP2STAT	set	3800
   128  0000                     _RD6PPS	set	3696
   129  0000                     _RD5PPS	set	3695
   130  0000                     _SSP2CLKPPS	set	3612
   131  0000                     _SSP2DATPPS	set	3613
   132  0000                     _ANSELDbits	set	3751
   133  0000                     _SSP2ADD	set	3798
   134  0000                     _SSP2CON1bits	set	3801
   135  0000                     _ADPCH	set	3935
   136  0000                     _ADREFbits	set	3928
   137  0000                     _LATAbits	set	3961
   138  0000                     _TRISAbits	set	3969
   139  0000                     _ADRESH	set	3940
   140  0000                     _ADCON0bits	set	3936
   141  0000                     _INTCONbits	set	4082
   142  0000                     _TRISBbits	set	3970
   143  0000                     _LATFbits	set	3966
   144  0000                     _TRISFbits	set	3974
   145  0000                     _PWM7CONbits	set	4001
   146  0000                     _PWM6CONbits	set	4004
   147  0000                     _LATGbits	set	3967
   148  0000                     _LATCbits	set	3963
   149  0000                     _LATEbits	set	3965
   150  0000                     _TRISGbits	set	3975
   151  0000                     _TRISCbits	set	3971
   152  0000                     _TRISEbits	set	3973
   153  0000                     _T2PR	set	4028
   154  0000                     _T2CLKCONbits	set	4031
   155  0000                     _T2HLTbits	set	4030
   156  0000                     _T2CONbits	set	4029
   157  0000                     _LATDbits	set	3964
   158  0000                     _LATHbits	set	3968
   159  0000                     _TRISHbits	set	3976
   160  0000                     _TRISDbits	set	3972
   161  0000                     _LATG	set	3967
   162  0000                     _PWM7DCH	set	4000
   163  0000                     _LATE	set	3965
   164  0000                     _PWM6DCH	set	4003
   165                           
   166                           	psect	smallconst
   167  000E00                     __psmallconst:
   168                           	callstack 0
   169  000E00  00                 	db	0
   170  000E01                     STR_1:
   171                           
   172                           ; BSR set to: 14
   173  000E01  25                 	db	37
   174  000E02  69                 	db	105	;'i'
   175  000E03  20                 	db	32
   176  000E04  25                 	db	37
   177  000E05  69                 	db	105	;'i'
   178  000E06  20                 	db	32
   179  000E07  25                 	db	37
   180  000E08  69                 	db	105	;'i'
   181  000E09  20                 	db	32
   182  000E0A  25                 	db	37
   183  000E0B  69                 	db	105	;'i'
   184  000E0C  0A                 	db	10
   185  000E0D  00                 	db	0
   186  000E0E  00                 	db	0	; dummy byte at the end
   187  0000                     
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191  0020DE                     __pcinit:
   192                           	callstack 0
   193  0020DE                     start_initialization:
   194                           	callstack 0
   195  0020DE                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Clear objects allocated to BANK1 (92 bytes)
   199  0020DE  EE01  F000         	lfsr	0,__pbssBANK1
   200  0020E2  0E5C               	movlw	92
   201  0020E4                     clear_0:
   202  0020E4  6AEE               	clrf	postinc0,c
   203  0020E6  06E8               	decf	wreg,f,c
   204  0020E8  E1FD               	bnz	clear_0
   205                           
   206                           ; Clear objects allocated to BANK0 (31 bytes)
   207  0020EA  EE00  F0D5         	lfsr	0,__pbssBANK0
   208  0020EE  0E1F               	movlw	31
   209  0020F0                     clear_1:
   210  0020F0  6AEE               	clrf	postinc0,c
   211  0020F2  06E8               	decf	wreg,f,c
   212  0020F4  E1FD               	bnz	clear_1
   213                           
   214                           ; Clear objects allocated to COMRAM (7 bytes)
   215  0020F6  EE00  F052         	lfsr	0,__pbssCOMRAM
   216  0020FA  0E07               	movlw	7
   217  0020FC                     clear_2:
   218  0020FC  6AEE               	clrf	postinc0,c
   219  0020FE  06E8               	decf	wreg,f,c
   220  002100  E1FD               	bnz	clear_2
   221  002102                     end_of_initialization:
   222                           	callstack 0
   223  002102                     __end_of__initialization:
   224                           	callstack 0
   225  002102  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   226  002104  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   227  002106  0E00               	movlw	low (__Lsmallconst shr (0+16))
   228  002108  6EF8               	movwf	tblptru,c
   229  00210A  0E0E               	movlw	high __Lsmallconst
   230  00210C  6EF7               	movwf	tblptrh,c
   231  00210E  0100               	movlb	0
   232  002110  EF78  F008         	goto	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMRAM
   235  000052                     __pbssCOMRAM:
   236                           	callstack 0
   237  000052                     _flags:
   238                           	callstack 0
   239  000052                     	ds	2
   240  000054                     _battery_flag:
   241                           	callstack 0
   242  000054                     	ds	1
   243  000055                     _TxBufReadCnt:
   244                           	callstack 0
   245  000055                     	ds	1
   246  000056                     _TxBufWriteCnt:
   247                           	callstack 0
   248  000056                     	ds	1
   249  000057                     _RxBufReadCnt:
   250                           	callstack 0
   251  000057                     	ds	1
   252  000058                     _RxBufWriteCnt:
   253                           	callstack 0
   254  000058                     	ds	1
   255                           
   256                           	psect	bssBANK0
   257  0000D5                     __pbssBANK0:
   258                           	callstack 0
   259  0000D5                     _EUSART4RXbuf:
   260                           	callstack 0
   261  0000D5                     	ds	20
   262  0000E9                     _nout:
   263                           	callstack 0
   264  0000E9                     	ds	2
   265  0000EB                     _width:
   266                           	callstack 0
   267  0000EB                     	ds	2
   268  0000ED                     _prec:
   269                           	callstack 0
   270  0000ED                     	ds	2
   271  0000EF                     _clear_upper:
   272                           	callstack 0
   273  0000EF                     	ds	2
   274  0000F1                     _clear_lower:
   275                           	callstack 0
   276  0000F1                     	ds	2
   277  0000F3                     _card_flag:
   278                           	callstack 0
   279  0000F3                     	ds	1
   280                           
   281                           	psect	bssBANK1
   282  000100                     __pbssBANK1:
   283                           	callstack 0
   284  000100                     _EUSART4TXbuf:
   285                           	callstack 0
   286  000100                     	ds	60
   287  00013C                     _dbuf:
   288                           	callstack 0
   289  00013C                     	ds	32
   290                           
   291                           	psect	cstackBANK0
   292  000060                     __pcstackBANK0:
   293                           	callstack 0
   294  000060                     vfpfcnvrt@ll:
   295                           	callstack 0
   296                           
   297                           ; 8 bytes @ 0x0
   298  000060                     	ds	8
   299  000068                     ?_vfprintf:
   300                           	callstack 0
   301  000068                     vfprintf@fp:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x8
   305  000068                     	ds	2
   306  00006A                     vfprintf@fmt:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0xA
   310  00006A                     	ds	2
   311  00006C                     vfprintf@ap:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0xC
   315  00006C                     	ds	2
   316  00006E                     ?_sprintf:
   317                           	callstack 0
   318  00006E                     sprintf@s:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xE
   322  00006E                     	ds	2
   323  000070                     sprintf@fmt:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x10
   327  000070                     	ds	10
   328  00007A                     sprintf@ap:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x1A
   332  00007A                     	ds	2
   333  00007C                     sprintf@f:
   334                           	callstack 0
   335                           
   336                           ; 6 bytes @ 0x1C
   337  00007C                     	ds	6
   338  000082                     main@buf:
   339                           	callstack 0
   340                           
   341                           ; 40 bytes @ 0x22
   342  000082                     	ds	40
   343  0000AA                     main@tmpR:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x4A
   347  0000AA                     	ds	2
   348  0000AC                     main@tmpG:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x4C
   352  0000AC                     	ds	2
   353  0000AE                     main@tmpB:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x4E
   357  0000AE                     	ds	2
   358  0000B0                     main@tmpC:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x50
   362  0000B0                     	ds	2
   363  0000B2                     main@start:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0x52
   367  0000B2                     	ds	1
   368  0000B3                     main@initial:
   369                           	callstack 0
   370                           
   371                           ; 8 bytes @ 0x53
   372  0000B3                     	ds	8
   373  0000BB                     main@current:
   374                           	callstack 0
   375                           
   376                           ; 8 bytes @ 0x5B
   377  0000BB                     	ds	8
   378  0000C3                     main@motorL:
   379                           	callstack 0
   380                           
   381                           ; 9 bytes @ 0x63
   382  0000C3                     	ds	9
   383  0000CC                     main@motorR:
   384                           	callstack 0
   385                           
   386                           ; 9 bytes @ 0x6C
   387  0000CC                     	ds	9
   388                           
   389                           	psect	cstackCOMRAM
   390  000001                     __pcstackCOMRAM:
   391                           	callstack 0
   392  000001                     ??i2_I2C_2_Master_Idle:
   393  000001                     
   394                           ; 1 bytes @ 0x0
   395  000001                     	ds	1
   396  000002                     i2I2C_2_Master_Write@data_byte:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x1
   400  000002                     	ds	1
   401  000003                     i2colorclick_writetoaddr@value:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x2
   405  000003                     	ds	1
   406  000004                     i2colorclick_writetoaddr@address:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x3
   410  000004                     	ds	1
   411  000005                     ??i2_colorclick_int_init:
   412                           
   413                           ; 1 bytes @ 0x4
   414  000005                     	ds	1
   415  000006                     ??_LowISR:
   416  000006                     
   417                           ; 1 bytes @ 0x5
   418  000006                     	ds	1
   419  000007                     ??_I2C_2_Master_Idle:
   420  000007                     ?_strlen:
   421                           	callstack 0
   422  000007                     ?___wmul:
   423                           	callstack 0
   424  000007                     ?___aodiv:
   425                           	callstack 0
   426  000007                     ?___aomod:
   427                           	callstack 0
   428  000007                     colorclick_toggleClearLED@toggle:
   429                           	callstack 0
   430  000007                     DCmotors_init@PWMperiod:
   431                           	callstack 0
   432  000007                     sendCharSerial4@charToSend:
   433                           	callstack 0
   434  000007                     ___wmul@multiplier:
   435                           	callstack 0
   436  000007                     fputc@c:
   437                           	callstack 0
   438  000007                     strlen@s:
   439                           	callstack 0
   440  000007                     ___aodiv@dividend:
   441                           	callstack 0
   442  000007                     ___aomod@dividend:
   443                           	callstack 0
   444                           
   445                           ; 8 bytes @ 0x6
   446  000007                     	ds	1
   447  000008                     ??_I2C_2_Master_Read:
   448  000008                     I2C_2_Master_Write@data_byte:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x7
   452  000008                     	ds	1
   453  000009                     I2C_2_Master_Read@ack:
   454                           	callstack 0
   455  000009                     colorclick_writetoaddr@value:
   456                           	callstack 0
   457  000009                     sendStringSerial4@string:
   458                           	callstack 0
   459  000009                     ___wmul@multiplicand:
   460                           	callstack 0
   461  000009                     fputc@fp:
   462                           	callstack 0
   463  000009                     strlen@a:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x8
   467  000009                     	ds	1
   468  00000A                     I2C_2_Master_Read@tmp:
   469                           	callstack 0
   470  00000A                     colorclick_writetoaddr@address:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x9
   474  00000A                     	ds	1
   475  00000B                     ??_colorclick_init:
   476  00000B                     ??_sendStringSerial4:
   477  00000B                     ??_colorclick_int_init:
   478  00000B                     ??_fputc:
   479  00000B                     ?_colorclick_readRed:
   480                           	callstack 0
   481  00000B                     ?_colorclick_readGreen:
   482                           	callstack 0
   483  00000B                     ?_colorclick_readBlue:
   484                           	callstack 0
   485  00000B                     ?_colorclick_readClear:
   486                           	callstack 0
   487  00000B                     ___wmul@product:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0xA
   491  00000B                     	ds	1
   492  00000C                     
   493                           ; 1 bytes @ 0xB
   494  00000C                     	ds	1
   495  00000D                     ??_colorclick_readRed:
   496  00000D                     ??_colorclick_readGreen:
   497  00000D                     ??_colorclick_readBlue:
   498  00000D                     ??_colorclick_readClear:
   499  00000D                     ?___awdiv:
   500                           	callstack 0
   501  00000D                     ___awdiv@dividend:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0xC
   505  00000D                     	ds	2
   506  00000F                     ___awdiv@divisor:
   507                           	callstack 0
   508  00000F                     ___aodiv@divisor:
   509                           	callstack 0
   510  00000F                     ___aomod@divisor:
   511                           	callstack 0
   512                           
   513                           ; 8 bytes @ 0xE
   514  00000F                     	ds	1
   515  000010                     colorclick_readRed@tmp:
   516                           	callstack 0
   517  000010                     colorclick_readGreen@tmp:
   518                           	callstack 0
   519  000010                     colorclick_readBlue@tmp:
   520                           	callstack 0
   521  000010                     colorclick_readClear@tmp:
   522                           	callstack 0
   523  000010                     fputs@s:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0xF
   527  000010                     	ds	1
   528  000011                     ___awdiv@counter:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x10
   532  000011                     	ds	1
   533  000012                     ?_colorclick_readColour:
   534                           	callstack 0
   535  000012                     ___awdiv@sign:
   536                           	callstack 0
   537  000012                     fputs@fp:
   538                           	callstack 0
   539  000012                     colorclick_readColour@current:
   540                           	callstack 0
   541                           
   542                           ; 8 bytes @ 0x11
   543  000012                     	ds	1
   544  000013                     ___awdiv@quotient:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x12
   548  000013                     	ds	1
   549  000014                     fputs@c:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x13
   553  000014                     	ds	1
   554  000015                     setMotorPWM@m:
   555                           	callstack 0
   556  000015                     fputs@i:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x14
   560  000015                     	ds	2
   561  000017                     ??_setMotorPWM:
   562  000017                     ?_pad:
   563                           	callstack 0
   564  000017                     ___aodiv@counter:
   565                           	callstack 0
   566  000017                     ___aomod@counter:
   567                           	callstack 0
   568  000017                     pad@fp:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x16
   572  000017                     	ds	1
   573  000018                     ___aodiv@sign:
   574                           	callstack 0
   575  000018                     ___aomod@sign:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x17
   579  000018                     	ds	1
   580  000019                     ?_abs:
   581                           	callstack 0
   582  000019                     pad@buf:
   583                           	callstack 0
   584  000019                     abs@a:
   585                           	callstack 0
   586  000019                     ___aodiv@quotient:
   587                           	callstack 0
   588                           
   589                           ; 8 bytes @ 0x18
   590  000019                     	ds	1
   591  00001A                     
   592                           ; 1 bytes @ 0x19
   593  00001A                     	ds	1
   594  00001B                     ??_abs:
   595  00001B                     pad@p:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x1A
   599  00001B                     	ds	2
   600  00001D                     ??_pad:
   601                           
   602                           ; 1 bytes @ 0x1C
   603  00001D                     	ds	1
   604  00001E                     setMotorPWM@PWMduty:
   605                           	callstack 0
   606  00001E                     pad@i:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x1D
   610  00001E                     	ds	2
   611  000020                     forward@mL:
   612                           	callstack 0
   613  000020                     pad@w:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x1F
   617  000020                     	ds	2
   618  000022                     ?_dtoa:
   619                           	callstack 0
   620  000022                     forward@mR:
   621                           	callstack 0
   622  000022                     dtoa@fp:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x21
   626  000022                     	ds	2
   627  000024                     ??_forward:
   628  000024                     dtoa@d:
   629                           	callstack 0
   630                           
   631                           ; 8 bytes @ 0x23
   632  000024                     	ds	8
   633  00002C                     ??_dtoa:
   634                           
   635                           ; 1 bytes @ 0x2B
   636  00002C                     	ds	8
   637  000034                     _dtoa$2510:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x33
   641  000034                     	ds	2
   642  000036                     dtoa@p:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x35
   646  000036                     	ds	2
   647  000038                     dtoa@w:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x37
   651  000038                     	ds	2
   652  00003A                     dtoa@s:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x39
   656  00003A                     	ds	2
   657  00003C                     dtoa@n:
   658                           	callstack 0
   659                           
   660                           ; 8 bytes @ 0x3B
   661  00003C                     	ds	8
   662  000044                     dtoa@i:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x43
   666  000044                     	ds	2
   667  000046                     ?_vfpfcnvrt:
   668                           	callstack 0
   669  000046                     vfpfcnvrt@fp:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x45
   673  000046                     	ds	2
   674  000048                     vfpfcnvrt@fmt:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x47
   678  000048                     	ds	2
   679  00004A                     vfpfcnvrt@ap:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x49
   683  00004A                     	ds	2
   684  00004C                     ??_vfpfcnvrt:
   685                           
   686                           ; 1 bytes @ 0x4B
   687  00004C                     	ds	2
   688  00004E                     vfprintf@cfmt:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x4D
   692  00004E                     	ds	2
   693  000050                     ??_main:
   694                           
   695                           ; 1 bytes @ 0x4F
   696  000050                     	ds	2
   697                           
   698 ;;
   699 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   700 ;;
   701 ;; *************** function _main *****************
   702 ;; Defined at:
   703 ;;		line 41 in file "main.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  buf            40   34[BANK0 ] unsigned char [40]
   708 ;;  tmpC            2   80[BANK0 ] unsigned int 
   709 ;;  tmpB            2   78[BANK0 ] unsigned int 
   710 ;;  tmpG            2   76[BANK0 ] unsigned int 
   711 ;;  tmpR            2   74[BANK0 ] unsigned int 
   712 ;;  motorR          9  108[BANK0 ] struct .
   713 ;;  motorL          9   99[BANK0 ] struct .
   714 ;;  current         8   91[BANK0 ] struct .
   715 ;;  initial         8   83[BANK0 ] struct .
   716 ;;  PWMcycle        2    0        int 
   717 ;;  start           1   82[BANK0 ] unsigned char 
   718 ;;  halt            1    0        unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   729 ;;      Locals:         0      83       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   731 ;;      Totals:         2      83       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   732 ;;Total ram usage:       85 bytes
   733 ;; Hardware stack levels required when called: 15
   734 ;; This function calls:
   735 ;;		_ADC_init
   736 ;;		_DCmotors_init
   737 ;;		_USART4_init
   738 ;;		_buggyLEDs_init
   739 ;;		_colorclick_init
   740 ;;		_colorclick_readColour
   741 ;;		_colorclick_toggleClearLED
   742 ;;		_forward
   743 ;;		_interrupts_init
   744 ;;		_sendStringSerial4
   745 ;;		_sprintf
   746 ;; This function is called by:
   747 ;;		Startup code after reset
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text0
   752  0010F0                     __ptext0:
   753                           	callstack 0
   754  0010F0                     _main:
   755                           	callstack 16
   756  0010F0                     
   757                           ;main.c: 43:     ADC_init();
   758  0010F0  EC64  F011         	call	_ADC_init	;wreg free
   759  0010F4                     
   760                           ;main.c: 44:     colorclick_init();
   761  0010F4  EC33  F010         	call	_colorclick_init	;wreg free
   762  0010F8                     
   763                           ;main.c: 45:     interrupts_init();
   764  0010F8  EC17  F011         	call	_interrupts_init	;wreg free
   765                           
   766                           ;main.c: 46:     USART4_init();
   767  0010FC  EC37  F011         	call	_USART4_init	;wreg free
   768  001100                     
   769                           ;main.c: 47:     buggyLEDs_init();
   770  001100  EC89  F011         	call	_buggyLEDs_init	;wreg free
   771  001104                     
   772                           ;main.c: 50:     DCmotors_init(PWMcycle);
   773  001104  0E00               	movlw	0
   774  001106  6E08               	movwf	(DCmotors_init@PWMperiod+1)^0,c
   775  001108  0E63               	movlw	99
   776  00110A  6E07               	movwf	DCmotors_init@PWMperiod^0,c
   777  00110C  EC86  F00F         	call	_DCmotors_init	;wreg free
   778  001110                     
   779                           ;main.c: 52:     DC_motor motorL, motorR;;main.c: 54:     motorL.power=0;
   780  001110  0E00               	movlw	0
   781  001112  0100               	movlb	0	; () banked
   782  001114  6FC3               	movwf	main@motorL& (0+255),b
   783  001116                     
   784                           ; BSR set to: 0
   785                           ;main.c: 55:     motorL.direction=1;
   786  001116  0E01               	movlw	1
   787  001118  6FC4               	movwf	(main@motorL+1)& (0+255),b
   788  00111A                     
   789                           ; BSR set to: 0
   790                           ;main.c: 56:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   791  00111A  0EA3               	movlw	163
   792  00111C  6FC5               	movwf	(main@motorL+2)& (0+255),b
   793  00111E  0E0F               	movlw	15
   794  001120  6FC6               	movwf	(main@motorL+3)& (0+255),b
   795  001122                     
   796                           ; BSR set to: 0
   797                           ;main.c: 57:     motorL.dir_LAT=(unsigned char *)(&LATE);
   798  001122  0E7D               	movlw	125
   799  001124  6FC7               	movwf	(main@motorL+4)& (0+255),b
   800  001126  0E0F               	movlw	15
   801  001128  6FC8               	movwf	(main@motorL+5)& (0+255),b
   802  00112A                     
   803                           ; BSR set to: 0
   804                           ;main.c: 58:     motorL.dir_pin=4;
   805  00112A  0E04               	movlw	4
   806  00112C  6FC9               	movwf	(main@motorL+6)& (0+255),b
   807  00112E                     
   808                           ; BSR set to: 0
   809                           ;main.c: 59:     motorL.PWMperiod=PWMcycle;
   810  00112E  0E00               	movlw	0
   811  001130  6FCB               	movwf	(main@motorL+8)& (0+255),b
   812  001132  0E63               	movlw	99
   813  001134  6FCA               	movwf	(main@motorL+7)& (0+255),b
   814  001136                     
   815                           ; BSR set to: 0
   816                           ;main.c: 62:     motorR.power=0;
   817  001136  0E00               	movlw	0
   818  001138  6FCC               	movwf	main@motorR& (0+255),b
   819  00113A                     
   820                           ; BSR set to: 0
   821                           ;main.c: 63:     motorR.direction=1;
   822  00113A  0E01               	movlw	1
   823  00113C  6FCD               	movwf	(main@motorR+1)& (0+255),b
   824  00113E                     
   825                           ; BSR set to: 0
   826                           ;main.c: 64:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   827  00113E  0EA0               	movlw	160
   828  001140  6FCE               	movwf	(main@motorR+2)& (0+255),b
   829  001142  0E0F               	movlw	15
   830  001144  6FCF               	movwf	(main@motorR+3)& (0+255),b
   831  001146                     
   832                           ; BSR set to: 0
   833                           ;main.c: 65:     motorR.dir_LAT=(unsigned char *)(&LATG);
   834  001146  0E7F               	movlw	127
   835  001148  6FD0               	movwf	(main@motorR+4)& (0+255),b
   836  00114A  0E0F               	movlw	15
   837  00114C  6FD1               	movwf	(main@motorR+5)& (0+255),b
   838  00114E                     
   839                           ; BSR set to: 0
   840                           ;main.c: 66:     motorR.dir_pin=6;
   841  00114E  0E06               	movlw	6
   842  001150  6FD2               	movwf	(main@motorR+6)& (0+255),b
   843  001152                     
   844                           ; BSR set to: 0
   845                           ;main.c: 67:     motorR.PWMperiod=PWMcycle;
   846  001152  0E00               	movlw	0
   847  001154  6FD4               	movwf	(main@motorR+8)& (0+255),b
   848  001156  0E63               	movlw	99
   849  001158  6FD3               	movwf	(main@motorR+7)& (0+255),b
   850  00115A                     
   851                           ; BSR set to: 0
   852                           ;main.c: 69:     TRISHbits.TRISH3 = 0;
   853  00115A  9688               	bcf	136,3,c	;volatile
   854  00115C                     
   855                           ; BSR set to: 0
   856                           ;main.c: 70:     LATHbits.LATH3 = 0;
   857  00115C  9680               	bcf	128,3,c	;volatile
   858  00115E                     
   859                           ; BSR set to: 0
   860                           ;main.c: 74:     colorclick_toggleClearLED(1);
   861  00115E  0E01               	movlw	1
   862  001160  ECF5  F010         	call	_colorclick_toggleClearLED
   863  001164                     
   864                           ;main.c: 75:     LATDbits.LATD3 = 1;
   865  001164  867C               	bsf	124,3,c	;volatile
   866                           
   867                           ;main.c: 77:     _delay((unsigned long)((500)*(64000000/4000.0)));
   868  001166  0E29               	movlw	41
   869  001168  6E51               	movwf	(??_main+1)^0,c
   870  00116A  0E96               	movlw	150
   871  00116C  6E50               	movwf	??_main^0,c
   872  00116E  0E7F               	movlw	127
   873  001170                     u2437:
   874  001170  2EE8               	decfsz	wreg,f,c
   875  001172  D7FE               	bra	u2437
   876  001174  2E50               	decfsz	??_main^0,f,c
   877  001176  D7FC               	bra	u2437
   878  001178  2E51               	decfsz	(??_main+1)^0,f,c
   879  00117A  D7FA               	bra	u2437
   880  00117C  F000               	nop	
   881  00117E                     
   882                           ;main.c: 79:     RGB_val initial;;main.c: 80:     RGB_val current;;main.c: 81:     initi
      +                          al = colorclick_readColour(initial);
   883  00117E  EE20  F0B3         	lfsr	2,main@initial
   884  001182  EE00  F012         	lfsr	0,colorclick_readColour@current
   885  001186  0E07               	movlw	7
   886  001188                     u2351:
   887  001188  CFDB FFEB          	movff	plusw2,plusw0
   888  00118C  06E8               	decf	wreg,f,c
   889  00118E  E2FC               	bc	u2351
   890  001190  ECD0  F00F         	call	_colorclick_readColour	;wreg free
   891  001194  EE20  F0B3         	lfsr	2,main@initial
   892  001198  0E07               	movlw	7
   893  00119A                     u2361:
   894  00119A  CFEB FFDB          	movff	plusw0,plusw2
   895  00119E  06E8               	decf	wreg,f,c
   896  0011A0  E2FC               	bc	u2361
   897  0011A2                     
   898                           ;main.c: 83:     clear_lower = initial.C - 100;
   899  0011A2  0E9C               	movlw	156
   900  0011A4  0100               	movlb	0	; () banked
   901  0011A6  25B9               	addwf	(main@initial+6)& (0+255),w,b
   902  0011A8  6FF1               	movwf	_clear_lower& (0+255),b	;volatile
   903  0011AA  0EFF               	movlw	255
   904  0011AC  21BA               	addwfc	(main@initial+7)& (0+255),w,b
   905  0011AE  6FF2               	movwf	(_clear_lower+1)& (0+255),b	;volatile
   906  0011B0                     
   907                           ; BSR set to: 0
   908                           ;main.c: 84:     clear_upper = initial.C + 300;
   909  0011B0  0E2C               	movlw	44
   910  0011B2  25B9               	addwf	(main@initial+6)& (0+255),w,b
   911  0011B4  6FEF               	movwf	_clear_upper& (0+255),b	;volatile
   912  0011B6  0E01               	movlw	1
   913  0011B8  21BA               	addwfc	(main@initial+7)& (0+255),w,b
   914  0011BA  6FF0               	movwf	(_clear_upper+1)& (0+255),b	;volatile
   915  0011BC                     
   916                           ; BSR set to: 0
   917                           ;main.c: 89:     unsigned char start = 0;
   918  0011BC  0E00               	movlw	0
   919  0011BE  6FB2               	movwf	main@start& (0+255),b
   920  0011C0                     l3175:
   921                           
   922                           ;main.c: 93:         current = colorclick_readColour(current);
   923  0011C0  EE20  F0BB         	lfsr	2,main@current
   924  0011C4  EE00  F012         	lfsr	0,colorclick_readColour@current
   925  0011C8  0E07               	movlw	7
   926  0011CA                     u2371:
   927  0011CA  CFDB FFEB          	movff	plusw2,plusw0
   928  0011CE  06E8               	decf	wreg,f,c
   929  0011D0  E2FC               	bc	u2371
   930  0011D2  ECD0  F00F         	call	_colorclick_readColour	;wreg free
   931  0011D6  EE20  F0BB         	lfsr	2,main@current
   932  0011DA  0E07               	movlw	7
   933  0011DC                     u2381:
   934  0011DC  CFEB FFDB          	movff	plusw0,plusw2
   935  0011E0  06E8               	decf	wreg,f,c
   936  0011E2  E2FC               	bc	u2381
   937  0011E4                     
   938                           ;main.c: 96:         char buf[40];;main.c: 97:         unsigned int tmpR = current.R;
   939  0011E4  C0BB  F0AA         	movff	main@current,main@tmpR
   940  0011E8  C0BC  F0AB         	movff	main@current+1,main@tmpR+1
   941  0011EC                     
   942                           ;main.c: 98:         unsigned int tmpG = current.G;
   943  0011EC  C0BD  F0AC         	movff	main@current+2,main@tmpG
   944  0011F0  C0BE  F0AD         	movff	main@current+3,main@tmpG+1
   945  0011F4                     
   946                           ;main.c: 99:         unsigned int tmpB = current.B;
   947  0011F4  C0BF  F0AE         	movff	main@current+4,main@tmpB
   948  0011F8  C0C0  F0AF         	movff	main@current+5,main@tmpB+1
   949  0011FC                     
   950                           ;main.c: 100:         unsigned int tmpC = current.C;
   951  0011FC  C0C1  F0B0         	movff	main@current+6,main@tmpC
   952  001200  C0C2  F0B1         	movff	main@current+7,main@tmpC+1
   953  001204                     
   954                           ;main.c: 101:         sprintf(buf,"%i %i %i %i\n",tmpR,tmpG,tmpB,tmpC);
   955  001204  0E82               	movlw	low main@buf
   956  001206  0100               	movlb	0	; () banked
   957  001208  6F6E               	movwf	sprintf@s& (0+255),b
   958  00120A  0E00               	movlw	high main@buf
   959  00120C  6F6F               	movwf	(sprintf@s+1)& (0+255),b
   960  00120E  0E01               	movlw	low STR_1
   961  001210  6F70               	movwf	sprintf@fmt& (0+255),b
   962  001212  0E0E               	movlw	high STR_1
   963  001214  6F71               	movwf	(sprintf@fmt+1)& (0+255),b
   964  001216  C0AA  F072         	movff	main@tmpR,?_sprintf+4
   965  00121A  C0AB  F073         	movff	main@tmpR+1,?_sprintf+5
   966  00121E  C0AC  F074         	movff	main@tmpG,?_sprintf+6
   967  001222  C0AD  F075         	movff	main@tmpG+1,?_sprintf+7
   968  001226  C0AE  F076         	movff	main@tmpB,?_sprintf+8
   969  00122A  C0AF  F077         	movff	main@tmpB+1,?_sprintf+9
   970  00122E  C0B0  F078         	movff	main@tmpC,?_sprintf+10
   971  001232  C0B1  F079         	movff	main@tmpC+1,?_sprintf+11
   972  001236  EC6B  F00E         	call	_sprintf	;wreg free
   973  00123A                     
   974                           ;main.c: 102:         sendStringSerial4(buf);
   975  00123A  0E82               	movlw	low main@buf
   976  00123C  6E09               	movwf	sendStringSerial4@string^0,c
   977  00123E  0E00               	movlw	high main@buf
   978  001240  6E0A               	movwf	(sendStringSerial4@string+1)^0,c
   979  001242  EC53  F010         	call	_sendStringSerial4	;wreg free
   980  001246                     
   981                           ;main.c: 103:         _delay((unsigned long)((500)*(64000000/4000.0)));
   982  001246  0E29               	movlw	41
   983  001248  6E51               	movwf	(??_main+1)^0,c
   984  00124A  0E96               	movlw	150
   985  00124C  6E50               	movwf	??_main^0,c
   986  00124E  0E7F               	movlw	127
   987  001250                     u2447:
   988  001250  2EE8               	decfsz	wreg,f,c
   989  001252  D7FE               	bra	u2447
   990  001254  2E50               	decfsz	??_main^0,f,c
   991  001256  D7FC               	bra	u2447
   992  001258  2E51               	decfsz	(??_main+1)^0,f,c
   993  00125A  D7FA               	bra	u2447
   994  00125C  F000               	nop	
   995  00125E                     
   996                           ;main.c: 104:         sprintf(buf,"%i %i %i %i\n",clear_upper,clear_lower,card_flag,init
      +                          ial.C);
   997  00125E  0E82               	movlw	low main@buf
   998  001260  0100               	movlb	0	; () banked
   999  001262  6F6E               	movwf	sprintf@s& (0+255),b
  1000  001264  0E00               	movlw	high main@buf
  1001  001266  6F6F               	movwf	(sprintf@s+1)& (0+255),b
  1002  001268  0E01               	movlw	low STR_1
  1003  00126A  6F70               	movwf	sprintf@fmt& (0+255),b
  1004  00126C  0E0E               	movlw	high STR_1
  1005  00126E  6F71               	movwf	(sprintf@fmt+1)& (0+255),b
  1006  001270  C0EF  F072         	movff	_clear_upper,?_sprintf+4	;volatile
  1007  001274  C0F0  F073         	movff	_clear_upper+1,?_sprintf+5	;volatile
  1008  001278  C0F1  F074         	movff	_clear_lower,?_sprintf+6	;volatile
  1009  00127C  C0F2  F075         	movff	_clear_lower+1,?_sprintf+7	;volatile
  1010  001280  C0F3  F076         	movff	_card_flag,?_sprintf+8	;volatile
  1011  001284  6B77               	clrf	(?_sprintf+9)& (0+255),b
  1012  001286  C0B9  F078         	movff	main@initial+6,?_sprintf+10
  1013  00128A  C0BA  F079         	movff	main@initial+7,?_sprintf+11
  1014  00128E  EC6B  F00E         	call	_sprintf	;wreg free
  1015                           
  1016                           ;main.c: 105:         sendStringSerial4(buf);
  1017  001292  0E82               	movlw	low main@buf
  1018  001294  6E09               	movwf	sendStringSerial4@string^0,c
  1019  001296  0E00               	movlw	high main@buf
  1020  001298  6E0A               	movwf	(sendStringSerial4@string+1)^0,c
  1021  00129A  EC53  F010         	call	_sendStringSerial4	;wreg free
  1022  00129E                     
  1023                           ;main.c: 106:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1024  00129E  0E29               	movlw	41
  1025  0012A0  6E51               	movwf	(??_main+1)^0,c
  1026  0012A2  0E96               	movlw	150
  1027  0012A4  6E50               	movwf	??_main^0,c
  1028  0012A6  0E7F               	movlw	127
  1029  0012A8                     u2457:
  1030  0012A8  2EE8               	decfsz	wreg,f,c
  1031  0012AA  D7FE               	bra	u2457
  1032  0012AC  2E50               	decfsz	??_main^0,f,c
  1033  0012AE  D7FC               	bra	u2457
  1034  0012B0  2E51               	decfsz	(??_main+1)^0,f,c
  1035  0012B2  D7FA               	bra	u2457
  1036  0012B4  F000               	nop	
  1037  0012B6                     
  1038                           ;main.c: 108:         if(start==0 && card_flag){
  1039  0012B6  0100               	movlb	0	; () banked
  1040  0012B8  51B2               	movf	main@start& (0+255),w,b
  1041  0012BA  A4D8               	btfss	status,2,c
  1042  0012BC  EF62  F009         	goto	u2391
  1043  0012C0  EF64  F009         	goto	u2390
  1044  0012C4                     u2391:
  1045  0012C4  EF70  F009         	goto	l3201
  1046  0012C8                     u2390:
  1047  0012C8                     
  1048                           ; BSR set to: 0
  1049  0012C8  51F3               	movf	_card_flag& (0+255),w,b	;volatile
  1050  0012CA  B4D8               	btfsc	status,2,c
  1051  0012CC  EF6A  F009         	goto	u2401
  1052  0012D0  EF6C  F009         	goto	u2400
  1053  0012D4                     u2401:
  1054  0012D4  EF70  F009         	goto	l3201
  1055  0012D8                     u2400:
  1056  0012D8                     
  1057                           ; BSR set to: 0
  1058                           ;main.c: 109:             card_flag = 0;
  1059  0012D8  0E00               	movlw	0
  1060  0012DA  6FF3               	movwf	_card_flag& (0+255),b	;volatile
  1061                           
  1062                           ;main.c: 110:             start = 1;
  1063  0012DC  0E01               	movlw	1
  1064  0012DE  6FB2               	movwf	main@start& (0+255),b
  1065  0012E0                     l3201:
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;main.c: 113:         LATHbits.LATH3 = card_flag;
  1069  0012E0  B1F3               	btfsc	_card_flag& (0+255),0,b	;volatile
  1070  0012E2  D002               	bra	u2415
  1071  0012E4  9680               	bcf	128,3,c	;volatile
  1072  0012E6  D001               	bra	u2416
  1073  0012E8                     u2415:
  1074  0012E8  8680               	bsf	128,3,c	;volatile
  1075  0012EA                     u2416:
  1076  0012EA                     
  1077                           ;main.c: 114:         LATDbits.LATD7 = start;
  1078  0012EA  0100               	movlb	0	; () banked
  1079  0012EC  B1B2               	btfsc	main@start& (0+255),0,b
  1080  0012EE  D002               	bra	u2425
  1081  0012F0  9E7C               	bcf	124,7,c	;volatile
  1082  0012F2  D001               	bra	u2426
  1083  0012F4                     u2425:
  1084  0012F4  8E7C               	bsf	124,7,c	;volatile
  1085  0012F6                     u2426:
  1086  0012F6                     
  1087                           ;main.c: 128:         forward(&motorL,&motorR);
  1088  0012F6  0EC3               	movlw	low main@motorL
  1089  0012F8  6E20               	movwf	forward@mL^0,c
  1090  0012FA  0E00               	movlw	high main@motorL
  1091  0012FC  6E21               	movwf	(forward@mL+1)^0,c
  1092  0012FE  0ECC               	movlw	low main@motorR
  1093  001300  6E22               	movwf	forward@mR^0,c
  1094  001302  0E00               	movlw	high main@motorR
  1095  001304  6E23               	movwf	(forward@mR+1)^0,c
  1096  001306  ECEB  F00D         	call	_forward	;wreg free
  1097  00130A  EFE0  F008         	goto	l3175
  1098  00130E  EF13  F000         	goto	start
  1099  001312                     __end_of_main:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function _sprintf *****************
  1103 ;; Defined at:
  1104 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_sprintf.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  s               2   14[BANK0 ] PTR unsigned char 
  1107 ;;		 -> main@buf(40), 
  1108 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
  1109 ;;		 -> STR_2(13), STR_1(13), 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  f               6   28[BANK0 ] struct _IO_FILE
  1112 ;;  ap              2   26[BANK0 ] PTR void [1]
  1113 ;;		 -> ?_sprintf(2), 
  1114 ;;  ret             2    0        int 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  2   14[BANK0 ] int 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1124 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1128 ;;Total ram usage:       20 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 14
  1131 ;; This function calls:
  1132 ;;		_vfprintf
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text1
  1139  001CD6                     __ptext1:
  1140                           	callstack 0
  1141  001CD6                     _sprintf:
  1142                           	callstack 16
  1143  001CD6  0E72               	movlw	low (?_sprintf+4)
  1144  001CD8  0100               	movlb	0	; () banked
  1145  001CDA  6F7A               	movwf	sprintf@ap& (0+255),b
  1146  001CDC  0E00               	movlw	high (?_sprintf+4)
  1147  001CDE  6F7B               	movwf	(sprintf@ap+1)& (0+255),b
  1148  001CE0  C06E  F07C         	movff	sprintf@s,sprintf@f
  1149  001CE4  C06F  F07D         	movff	sprintf@s+1,sprintf@f+1
  1150  001CE8                     
  1151                           ; BSR set to: 0
  1152  001CE8  0E00               	movlw	0
  1153  001CEA  6F7F               	movwf	(sprintf@f+3)& (0+255),b
  1154  001CEC  0E00               	movlw	0
  1155  001CEE  6F7E               	movwf	(sprintf@f+2)& (0+255),b
  1156  001CF0                     
  1157                           ; BSR set to: 0
  1158  001CF0  0E00               	movlw	0
  1159  001CF2  6F81               	movwf	(sprintf@f+5)& (0+255),b
  1160  001CF4  0E00               	movlw	0
  1161  001CF6  6F80               	movwf	(sprintf@f+4)& (0+255),b
  1162  001CF8                     
  1163                           ; BSR set to: 0
  1164  001CF8  0E7C               	movlw	low sprintf@f
  1165  001CFA  6F68               	movwf	vfprintf@fp& (0+255),b
  1166  001CFC  0E00               	movlw	high sprintf@f
  1167  001CFE  6F69               	movwf	(vfprintf@fp+1)& (0+255),b
  1168  001D00  C070  F06A         	movff	sprintf@fmt,vfprintf@fmt
  1169  001D04  C071  F06B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1170  001D08  0E7A               	movlw	low sprintf@ap
  1171  001D0A  6F6C               	movwf	vfprintf@ap& (0+255),b
  1172  001D0C  0E00               	movlw	high sprintf@ap
  1173  001D0E  6F6D               	movwf	(vfprintf@ap+1)& (0+255),b
  1174  001D10  EC3A  F00E         	call	_vfprintf	;wreg free
  1175  001D14  0100               	movlb	0	; () banked
  1176  001D16  517E               	movf	(sprintf@f+2)& (0+255),w,b
  1177  001D18  256E               	addwf	sprintf@s& (0+255),w,b
  1178  001D1A  6ED9               	movwf	fsr2l,c
  1179  001D1C  517F               	movf	(sprintf@f+3)& (0+255),w,b
  1180  001D1E  216F               	addwfc	(sprintf@s+1)& (0+255),w,b
  1181  001D20  6EDA               	movwf	fsr2h,c
  1182  001D22  0E00               	movlw	0
  1183  001D24  6EDF               	movwf	indf2,c
  1184  001D26                     
  1185                           ; BSR set to: 0
  1186  001D26  0012               	return		;funcret
  1187  001D28                     __end_of_sprintf:
  1188                           	callstack 0
  1189                           
  1190 ;; *************** function _vfprintf *****************
  1191 ;; Defined at:
  1192 ;;		line 1390 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  1195 ;;		 -> sprintf@f(6), 
  1196 ;;  fmt             2   10[BANK0 ] PTR const unsigned char 
  1197 ;;		 -> STR_2(13), STR_1(13), 
  1198 ;;  ap              2   12[BANK0 ] PTR PTR void 
  1199 ;;		 -> sprintf@ap(2), 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1202 ;;		 -> STR_2(13), STR_1(13), 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  2    8[BANK0 ] int 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1212 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1215 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1216 ;;Total ram usage:        8 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 13
  1219 ;; This function calls:
  1220 ;;		_vfpfcnvrt
  1221 ;; This function is called by:
  1222 ;;		_sprintf
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text2
  1227  001C74                     __ptext2:
  1228                           	callstack 0
  1229  001C74                     _vfprintf:
  1230                           	callstack 16
  1231  001C74                     
  1232                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
  1233  001C74  C06A  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1234  001C78  C06B  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1235  001C7C                     
  1236                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  1237  001C7C  0E00               	movlw	0
  1238  001C7E  0100               	movlb	0	; () banked
  1239  001C80  6FEA               	movwf	(_nout+1)& (0+255),b
  1240  001C82  0E00               	movlw	0
  1241  001C84  6FE9               	movwf	_nout& (0+255),b
  1242                           
  1243                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  1244  001C86  EF58  F00E         	goto	l3109
  1245  001C8A                     l3107:
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  1249  001C8A  C068  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  1250  001C8E  C069  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1251  001C92  0E4E               	movlw	low vfprintf@cfmt
  1252  001C94  6E48               	movwf	vfpfcnvrt@fmt^0,c
  1253  001C96  0E00               	movlw	high vfprintf@cfmt
  1254  001C98  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1255  001C9A  C06C  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  1256  001C9E  C06D  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1257  001CA2  EC73  F00A         	call	_vfpfcnvrt	;wreg free
  1258  001CA6  5046               	movf	?_vfpfcnvrt^0,w,c
  1259  001CA8  0100               	movlb	0	; () banked
  1260  001CAA  27E9               	addwf	_nout& (0+255),f,b
  1261  001CAC  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  1262  001CAE  23EA               	addwfc	(_nout+1)& (0+255),f,b
  1263  001CB0                     l3109:
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  1267  001CB0  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1268  001CB4  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1269  001CB8                     	if	0	;tblptru may be non-zero
  1270  001CB8                     	endif
  1271  001CB8                     	if	0	;tblptru may be non-zero
  1272  001CB8                     	endif
  1273  001CB8  0008               	tblrd		*
  1274  001CBA  50F5               	movf	tablat,w,c
  1275  001CBC  0900               	iorlw	0
  1276  001CBE  A4D8               	btfss	status,2,c
  1277  001CC0  EF64  F00E         	goto	u2341
  1278  001CC4  EF66  F00E         	goto	u2340
  1279  001CC8                     u2341:
  1280  001CC8  EF45  F00E         	goto	l3107
  1281  001CCC                     u2340:
  1282  001CCC                     
  1283                           ; BSR set to: 0
  1284                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
  1285  001CCC  C0E9  F068         	movff	_nout,?_vfprintf
  1286  001CD0  C0EA  F069         	movff	_nout+1,?_vfprintf+1
  1287  001CD4                     
  1288                           ; BSR set to: 0
  1289  001CD4  0012               	return		;funcret
  1290  001CD6                     __end_of_vfprintf:
  1291                           	callstack 0
  1292                           
  1293 ;; *************** function _vfpfcnvrt *****************
  1294 ;; Defined at:
  1295 ;;		line 692 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  1298 ;;		 -> sprintf@f(6), 
  1299 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  1300 ;;		 -> vfprintf@cfmt(2), 
  1301 ;;  ap              2   73[COMRAM] PTR PTR void 
  1302 ;;		 -> sprintf@ap(2), 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  ll              8    0[BANK0 ] long long 
  1305 ;;  llu             8    0        unsigned long long 
  1306 ;;  f               4    0        unsigned long long 
  1307 ;;  vp              3    0        PTR void 
  1308 ;;  ct              3    0        unsigned char [3]
  1309 ;;  cp              3    0        PTR unsigned char 
  1310 ;;  i               2    0        int 
  1311 ;;  done            2    0        int 
  1312 ;;  c               1    0        unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  2   69[COMRAM] int 
  1315 ;; Registers used:
  1316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1322 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;Total ram usage:       16 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 12
  1329 ;; This function calls:
  1330 ;;		_dtoa
  1331 ;;		_fputc
  1332 ;; This function is called by:
  1333 ;;		_vfprintf
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text3
  1338  0014E6                     __ptext3:
  1339                           	callstack 0
  1340  0014E6                     _vfpfcnvrt:
  1341                           	callstack 16
  1342  0014E6                     
  1343                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.32/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.32/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  1344  0014E6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1345  0014EA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1346  0014EE  CFDE FFF6          	movff	postinc2,tblptrl
  1347  0014F2  CFDD FFF7          	movff	postdec2,tblptrh
  1348  0014F6                     	if	0	;tblptru may be non-zero
  1349  0014F6                     	endif
  1350  0014F6                     	if	0	;tblptru may be non-zero
  1351  0014F6                     	endif
  1352  0014F6  0008               	tblrd		*
  1353  0014F8  50F5               	movf	tablat,w,c
  1354  0014FA  0A25               	xorlw	37
  1355  0014FC  A4D8               	btfss	status,2,c
  1356  0014FE  EF83  F00A         	goto	u2301
  1357  001502  EF85  F00A         	goto	u2300
  1358  001506                     u2301:
  1359  001506  EF31  F00B         	goto	l3095
  1360  00150A                     u2300:
  1361  00150A                     
  1362                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  1363  00150A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1364  00150E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1365  001512  2ADE               	incf	postinc2,f,c
  1366  001514  0E00               	movlw	0
  1367  001516  22DD               	addwfc	postdec2,f,c
  1368  001518                     
  1369                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  1370  001518  0E00               	movlw	0
  1371  00151A  0100               	movlb	0	; () banked
  1372  00151C  6FEC               	movwf	(_width+1)& (0+255),b
  1373  00151E  0E00               	movlw	0
  1374  001520  6FEB               	movwf	_width& (0+255),b
  1375  001522  C0EB  F052         	movff	_width,_flags
  1376  001526  C0EC  F053         	movff	_width+1,_flags+1
  1377  00152A                     
  1378                           ; BSR set to: 0
  1379                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  1380  00152A  69ED               	setf	_prec& (0+255),b
  1381  00152C  69EE               	setf	(_prec+1)& (0+255),b
  1382  00152E                     
  1383                           ; BSR set to: 0
  1384                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  1385  00152E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1386  001532  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1387  001536  CFDE FFF6          	movff	postinc2,tblptrl
  1388  00153A  CFDD FFF7          	movff	postdec2,tblptrh
  1389  00153E                     	if	0	;tblptru may be non-zero
  1390  00153E                     	endif
  1391  00153E                     	if	0	;tblptru may be non-zero
  1392  00153E                     	endif
  1393  00153E  0008               	tblrd		*
  1394  001540  50F5               	movf	tablat,w,c
  1395  001542  0A64               	xorlw	100
  1396  001544  B4D8               	btfsc	status,2,c
  1397  001546  EFA7  F00A         	goto	u2311
  1398  00154A  EFA9  F00A         	goto	u2310
  1399  00154E                     u2311:
  1400  00154E  EFBB  F00A         	goto	l3073
  1401  001552                     u2310:
  1402  001552                     
  1403                           ; BSR set to: 0
  1404  001552  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1405  001556  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1406  00155A  CFDE FFF6          	movff	postinc2,tblptrl
  1407  00155E  CFDD FFF7          	movff	postdec2,tblptrh
  1408  001562                     	if	0	;tblptru may be non-zero
  1409  001562                     	endif
  1410  001562                     	if	0	;tblptru may be non-zero
  1411  001562                     	endif
  1412  001562  0008               	tblrd		*
  1413  001564  50F5               	movf	tablat,w,c
  1414  001566  0A69               	xorlw	105
  1415  001568  A4D8               	btfss	status,2,c
  1416  00156A  EFB9  F00A         	goto	u2321
  1417  00156E  EFBB  F00A         	goto	u2320
  1418  001572                     u2321:
  1419  001572  EFFB  F00A         	goto	l3079
  1420  001576                     u2320:
  1421  001576                     l3073:
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
  1425  001576  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1426  00157A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1427  00157E  2ADE               	incf	postinc2,f,c
  1428  001580  0E00               	movlw	0
  1429  001582  22DD               	addwfc	postdec2,f,c
  1430                           
  1431                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1432  001584  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1433  001588  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1434  00158C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  1435  001590  0E02               	movlw	2
  1436  001592  26DE               	addwf	postinc2,f,c
  1437  001594  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  1438  001598  0E00               	movlw	0
  1439  00159A  22DD               	addwfc	postdec2,f,c
  1440  00159C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1441  0015A0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1442  0015A4  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  1443  0015A8  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  1444  0015AC  0E00               	movlw	0
  1445  0015AE  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1446  0015B0  0EFF               	movlw	-1
  1447  0015B2  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1448  0015B4  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1449  0015B6  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1450  0015B8  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1451  0015BA  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1452  0015BC  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1453  0015BE                     
  1454                           ; BSR set to: 0
  1455                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
  1456  0015BE  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  1457  0015C2  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1458  0015C6  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
  1459  0015CA  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1460  0015CE  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1461  0015D2  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1462  0015D6  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1463  0015DA  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1464  0015DE  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1465  0015E2  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1466  0015E6  EC08  F007         	call	_dtoa	;wreg free
  1467  0015EA  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  1468  0015EE  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1469  0015F2  EF4C  F00B         	goto	l1210
  1470  0015F6                     l3079:
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
  1474  0015F6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1475  0015FA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1476  0015FE  CFDE FFF6          	movff	postinc2,tblptrl
  1477  001602  CFDD FFF7          	movff	postdec2,tblptrh
  1478  001606                     	if	0	;tblptru may be non-zero
  1479  001606                     	endif
  1480  001606                     	if	0	;tblptru may be non-zero
  1481  001606                     	endif
  1482  001606  0008               	tblrd		*
  1483  001608  50F5               	movf	tablat,w,c
  1484  00160A  0A25               	xorlw	37
  1485  00160C  A4D8               	btfss	status,2,c
  1486  00160E  EF0B  F00B         	goto	u2331
  1487  001612  EF0D  F00B         	goto	u2330
  1488  001616                     u2331:
  1489  001616  EF24  F00B         	goto	l3089
  1490  00161A                     u2330:
  1491  00161A                     
  1492                           ; BSR set to: 0
  1493                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
  1494  00161A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1495  00161E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1496  001622  2ADE               	incf	postinc2,f,c
  1497  001624  0E00               	movlw	0
  1498  001626  22DD               	addwfc	postdec2,f,c
  1499  001628                     
  1500                           ; BSR set to: 0
  1501                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
  1502  001628  0E00               	movlw	0
  1503  00162A  6E08               	movwf	(fputc@c+1)^0,c
  1504  00162C  0E25               	movlw	37
  1505  00162E  6E07               	movwf	fputc@c^0,c
  1506  001630  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1507  001634  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1508  001638  ECC3  F00C         	call	_fputc	;wreg free
  1509  00163C                     l3085:
  1510                           
  1511                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
  1512  00163C  0E00               	movlw	0
  1513  00163E  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1514  001640  0E01               	movlw	1
  1515  001642  6E46               	movwf	?_vfpfcnvrt^0,c
  1516  001644  EF4C  F00B         	goto	l1210
  1517  001648                     l3089:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
  1521  001648  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1522  00164C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1523  001650  2ADE               	incf	postinc2,f,c
  1524  001652  0E00               	movlw	0
  1525  001654  22DD               	addwfc	postdec2,f,c
  1526  001656                     
  1527                           ; BSR set to: 0
  1528                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
  1529  001656  0E00               	movlw	0
  1530  001658  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1531  00165A  0E00               	movlw	0
  1532  00165C  6E46               	movwf	?_vfpfcnvrt^0,c
  1533  00165E  EF4C  F00B         	goto	l1210
  1534  001662                     l3095:
  1535                           
  1536                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
  1537  001662  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1538  001666  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1539  00166A  CFDE FFF6          	movff	postinc2,tblptrl
  1540  00166E  CFDD FFF7          	movff	postdec2,tblptrh
  1541  001672                     	if	0	;tblptru may be non-zero
  1542  001672                     	endif
  1543  001672                     	if	0	;tblptru may be non-zero
  1544  001672                     	endif
  1545  001672  0008               	tblrd		*
  1546  001674  50F5               	movf	tablat,w,c
  1547  001676  6E07               	movwf	fputc@c^0,c
  1548  001678  6A08               	clrf	(fputc@c+1)^0,c
  1549  00167A  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1550  00167E  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1551  001682  ECC3  F00C         	call	_fputc	;wreg free
  1552  001686                     
  1553                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  1554  001686  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1555  00168A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1556  00168E  2ADE               	incf	postinc2,f,c
  1557  001690  0E00               	movlw	0
  1558  001692  22DD               	addwfc	postdec2,f,c
  1559  001694  EF1E  F00B         	goto	l3085
  1560  001698                     l1210:
  1561  001698  0012               	return		;funcret
  1562  00169A                     __end_of_vfpfcnvrt:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _dtoa *****************
  1566 ;; Defined at:
  1567 ;;		line 287 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  1570 ;;		 -> sprintf@f(6), 
  1571 ;;  d               8   35[COMRAM] long long 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  n               8   59[COMRAM] long long 
  1574 ;;  i               2   67[COMRAM] int 
  1575 ;;  s               2   57[COMRAM] int 
  1576 ;;  w               2   55[COMRAM] int 
  1577 ;;  p               2   53[COMRAM] int 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  2   33[COMRAM] int 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1587 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1588 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1591 ;;Total ram usage:       36 bytes
  1592 ;; Hardware stack levels used: 1
  1593 ;; Hardware stack levels required when called: 11
  1594 ;; This function calls:
  1595 ;;		___aodiv
  1596 ;;		___aomod
  1597 ;;		_abs
  1598 ;;		_pad
  1599 ;; This function is called by:
  1600 ;;		_vfpfcnvrt
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text4
  1605  000E10                     __ptext4:
  1606                           	callstack 0
  1607  000E10                     _dtoa:
  1608                           	callstack 16
  1609  000E10                     
  1610                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
  1611  000E10  C024  F03C         	movff	dtoa@d,dtoa@n
  1612  000E14  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  1613  000E18  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  1614  000E1C  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  1615  000E20  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  1616  000E24  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  1617  000E28  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  1618  000E2C  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  1619  000E30                     
  1620                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
  1621  000E30  BE43               	btfsc	(dtoa@n+7)^0,7,c
  1622  000E32  EF1D  F007         	goto	u2151
  1623  000E36  EF20  F007         	goto	u2150
  1624  000E3A                     u2151:
  1625  000E3A  0E01               	movlw	1
  1626  000E3C  EF21  F007         	goto	u2160
  1627  000E40                     u2150:
  1628  000E40  0E00               	movlw	0
  1629  000E42                     u2160:
  1630  000E42  6E3A               	movwf	dtoa@s^0,c
  1631  000E44  6A3B               	clrf	(dtoa@s+1)^0,c
  1632                           
  1633                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  1634  000E46  503A               	movf	dtoa@s^0,w,c
  1635  000E48  103B               	iorwf	(dtoa@s+1)^0,w,c
  1636  000E4A  B4D8               	btfsc	status,2,c
  1637  000E4C  EF2A  F007         	goto	u2171
  1638  000E50  EF2C  F007         	goto	u2170
  1639  000E54                     u2171:
  1640  000E54  EF3C  F007         	goto	l3005
  1641  000E58                     u2170:
  1642  000E58                     
  1643                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  1644  000E58  1E43               	comf	(dtoa@n+7)^0,f,c
  1645  000E5A  1E42               	comf	(dtoa@n+6)^0,f,c
  1646  000E5C  1E41               	comf	(dtoa@n+5)^0,f,c
  1647  000E5E  1E40               	comf	(dtoa@n+4)^0,f,c
  1648  000E60  1E3F               	comf	(dtoa@n+3)^0,f,c
  1649  000E62  1E3E               	comf	(dtoa@n+2)^0,f,c
  1650  000E64  1E3D               	comf	(dtoa@n+1)^0,f,c
  1651  000E66  6C3C               	negf	dtoa@n^0,c
  1652  000E68  0E00               	movlw	0
  1653  000E6A  223D               	addwfc	(dtoa@n+1)^0,f,c
  1654  000E6C  223E               	addwfc	(dtoa@n+2)^0,f,c
  1655  000E6E  223F               	addwfc	(dtoa@n+3)^0,f,c
  1656  000E70  2240               	addwfc	(dtoa@n+4)^0,f,c
  1657  000E72  2241               	addwfc	(dtoa@n+5)^0,f,c
  1658  000E74  2242               	addwfc	(dtoa@n+6)^0,f,c
  1659  000E76  2243               	addwfc	(dtoa@n+7)^0,f,c
  1660  000E78                     l3005:
  1661                           
  1662                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
  1663  000E78  0100               	movlb	0	; () banked
  1664  000E7A  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  1665  000E7C  EF42  F007         	goto	u2181
  1666  000E80  EF44  F007         	goto	u2180
  1667  000E84                     u2181:
  1668  000E84  EF45  F007         	goto	l3009
  1669  000E88                     u2180:
  1670  000E88                     
  1671                           ; BSR set to: 0
  1672                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
  1673  000E88  9252               	bcf	_flags^0,1,c
  1674  000E8A                     l3009:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
  1678  000E8A  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  1679  000E8C  EF52  F007         	goto	u2190
  1680  000E90  51EE               	movf	(_prec+1)& (0+255),w,b
  1681  000E92  E106               	bnz	u2191
  1682  000E94  05ED               	decf	_prec& (0+255),w,b
  1683  000E96  B0D8               	btfsc	status,0,c
  1684  000E98  EF50  F007         	goto	u2191
  1685  000E9C  EF52  F007         	goto	u2190
  1686  000EA0                     u2191:
  1687  000EA0  EF58  F007         	goto	l1183
  1688  000EA4                     u2190:
  1689  000EA4                     
  1690                           ; BSR set to: 0
  1691  000EA4  0E00               	movlw	0
  1692  000EA6  6E37               	movwf	(dtoa@p+1)^0,c
  1693  000EA8  0E01               	movlw	1
  1694  000EAA  6E36               	movwf	dtoa@p^0,c
  1695  000EAC  EF5C  F007         	goto	l1185
  1696  000EB0                     l1183:
  1697                           
  1698                           ; BSR set to: 0
  1699  000EB0  C0ED  F036         	movff	_prec,dtoa@p
  1700  000EB4  C0EE  F037         	movff	_prec+1,dtoa@p+1
  1701  000EB8                     l1185:
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 304:     w = width;
  1705  000EB8  C0EB  F038         	movff	_width,dtoa@w
  1706  000EBC  C0EC  F039         	movff	_width+1,dtoa@w+1
  1707  000EC0                     
  1708                           ; BSR set to: 0
  1709                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
  1710  000EC0  503A               	movf	dtoa@s^0,w,c
  1711  000EC2  103B               	iorwf	(dtoa@s+1)^0,w,c
  1712  000EC4  A4D8               	btfss	status,2,c
  1713  000EC6  EF67  F007         	goto	u2201
  1714  000ECA  EF69  F007         	goto	u2200
  1715  000ECE                     u2201:
  1716  000ECE  EF70  F007         	goto	l3017
  1717  000ED2                     u2200:
  1718  000ED2                     
  1719                           ; BSR set to: 0
  1720  000ED2  A452               	btfss	_flags^0,2,c
  1721  000ED4  EF6E  F007         	goto	u2211
  1722  000ED8  EF70  F007         	goto	u2210
  1723  000EDC                     u2211:
  1724  000EDC  EF73  F007         	goto	l3019
  1725  000EE0                     u2210:
  1726  000EE0                     l3017:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 306:         --w;
  1730  000EE0  0638               	decf	dtoa@w^0,f,c
  1731  000EE2  A0D8               	btfss	status,0,c
  1732  000EE4  0639               	decf	(dtoa@w+1)^0,f,c
  1733  000EE6                     l3019:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
  1737  000EE6  0E00               	movlw	0
  1738  000EE8  6E45               	movwf	(dtoa@i+1)^0,c
  1739  000EEA  0E1F               	movlw	31
  1740  000EEC  6E44               	movwf	dtoa@i^0,c
  1741  000EEE                     
  1742                           ; BSR set to: 0
  1743                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
  1744  000EEE  0E00               	movlw	0
  1745  000EF0  0101               	movlb	1	; () banked
  1746  000EF2  6F5B               	movwf	(_dbuf+31)& (0+255),b
  1747                           
  1748                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1749  000EF4  EFF8  F007         	goto	l3033
  1750  000EF8                     l3023:
  1751                           
  1752                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 313:         --i;
  1753  000EF8  0644               	decf	dtoa@i^0,f,c
  1754  000EFA  A0D8               	btfss	status,0,c
  1755  000EFC  0645               	decf	(dtoa@i+1)^0,f,c
  1756  000EFE                     
  1757                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
  1758  000EFE  0E3C               	movlw	low _dbuf
  1759  000F00  2444               	addwf	dtoa@i^0,w,c
  1760  000F02  6ED9               	movwf	fsr2l,c
  1761  000F04  0E01               	movlw	high _dbuf
  1762  000F06  2045               	addwfc	(dtoa@i+1)^0,w,c
  1763  000F08  6EDA               	movwf	fsr2h,c
  1764  000F0A  C03C  F007         	movff	dtoa@n,___aomod@dividend
  1765  000F0E  C03D  F008         	movff	dtoa@n+1,___aomod@dividend+1
  1766  000F12  C03E  F009         	movff	dtoa@n+2,___aomod@dividend+2
  1767  000F16  C03F  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  1768  000F1A  C040  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  1769  000F1E  C041  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  1770  000F22  C042  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  1771  000F26  C043  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  1772  000F2A  0E0A               	movlw	10
  1773  000F2C  6E0F               	movwf	___aomod@divisor^0,c
  1774  000F2E  0E00               	movlw	0
  1775  000F30  6E10               	movwf	(___aomod@divisor+1)^0,c
  1776  000F32  0E00               	movlw	0
  1777  000F34  6E11               	movwf	(___aomod@divisor+2)^0,c
  1778  000F36  0E00               	movlw	0
  1779  000F38  6E12               	movwf	(___aomod@divisor+3)^0,c
  1780  000F3A  0E00               	movlw	0
  1781  000F3C  6E13               	movwf	(___aomod@divisor+4)^0,c
  1782  000F3E  0E00               	movlw	0
  1783  000F40  6E14               	movwf	(___aomod@divisor+5)^0,c
  1784  000F42  0E00               	movlw	0
  1785  000F44  6E15               	movwf	(___aomod@divisor+6)^0,c
  1786  000F46  0E00               	movlw	0
  1787  000F48  6E16               	movwf	(___aomod@divisor+7)^0,c
  1788  000F4A  EC11  F00C         	call	___aomod	;wreg free
  1789  000F4E  C007  F02C         	movff	?___aomod,??_dtoa
  1790  000F52  C008  F02D         	movff	?___aomod+1,??_dtoa+1
  1791  000F56  C009  F02E         	movff	?___aomod+2,??_dtoa+2
  1792  000F5A  C00A  F02F         	movff	?___aomod+3,??_dtoa+3
  1793  000F5E  C00B  F030         	movff	?___aomod+4,??_dtoa+4
  1794  000F62  C00C  F031         	movff	?___aomod+5,??_dtoa+5
  1795  000F66  C00D  F032         	movff	?___aomod+6,??_dtoa+6
  1796  000F6A  C00E  F033         	movff	?___aomod+7,??_dtoa+7
  1797  000F6E  C02C  F019         	movff	??_dtoa,abs@a
  1798  000F72  C02E  F01A         	movff	??_dtoa+2,abs@a+1
  1799  000F76  EC13  F010         	call	_abs	;wreg free
  1800  000F7A  5019               	movf	?_abs^0,w,c
  1801  000F7C  0F30               	addlw	48
  1802  000F7E  6EDF               	movwf	indf2,c
  1803  000F80                     
  1804                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 315:         --p;
  1805  000F80  0636               	decf	dtoa@p^0,f,c
  1806  000F82  A0D8               	btfss	status,0,c
  1807  000F84  0637               	decf	(dtoa@p+1)^0,f,c
  1808  000F86                     
  1809                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 316:         --w;
  1810  000F86  0638               	decf	dtoa@w^0,f,c
  1811  000F88  A0D8               	btfss	status,0,c
  1812  000F8A  0639               	decf	(dtoa@w+1)^0,f,c
  1813  000F8C                     
  1814                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
  1815  000F8C  C03C  F007         	movff	dtoa@n,___aodiv@dividend
  1816  000F90  C03D  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  1817  000F94  C03E  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  1818  000F98  C03F  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  1819  000F9C  C040  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  1820  000FA0  C041  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  1821  000FA4  C042  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  1822  000FA8  C043  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  1823  000FAC  0E0A               	movlw	10
  1824  000FAE  6E0F               	movwf	___aodiv@divisor^0,c
  1825  000FB0  0E00               	movlw	0
  1826  000FB2  6E10               	movwf	(___aodiv@divisor+1)^0,c
  1827  000FB4  0E00               	movlw	0
  1828  000FB6  6E11               	movwf	(___aodiv@divisor+2)^0,c
  1829  000FB8  0E00               	movlw	0
  1830  000FBA  6E12               	movwf	(___aodiv@divisor+3)^0,c
  1831  000FBC  0E00               	movlw	0
  1832  000FBE  6E13               	movwf	(___aodiv@divisor+4)^0,c
  1833  000FC0  0E00               	movlw	0
  1834  000FC2  6E14               	movwf	(___aodiv@divisor+5)^0,c
  1835  000FC4  0E00               	movlw	0
  1836  000FC6  6E15               	movwf	(___aodiv@divisor+6)^0,c
  1837  000FC8  0E00               	movlw	0
  1838  000FCA  6E16               	movwf	(___aodiv@divisor+7)^0,c
  1839  000FCC  EC4D  F00B         	call	___aodiv	;wreg free
  1840  000FD0  C007  F03C         	movff	?___aodiv,dtoa@n
  1841  000FD4  C008  F03D         	movff	?___aodiv+1,dtoa@n+1
  1842  000FD8  C009  F03E         	movff	?___aodiv+2,dtoa@n+2
  1843  000FDC  C00A  F03F         	movff	?___aodiv+3,dtoa@n+3
  1844  000FE0  C00B  F040         	movff	?___aodiv+4,dtoa@n+4
  1845  000FE4  C00C  F041         	movff	?___aodiv+5,dtoa@n+5
  1846  000FE8  C00D  F042         	movff	?___aodiv+6,dtoa@n+6
  1847  000FEC  C00E  F043         	movff	?___aodiv+7,dtoa@n+7
  1848  000FF0                     l3033:
  1849                           
  1850                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1851  000FF0  BE45               	btfsc	(dtoa@i+1)^0,7,c
  1852  000FF2  EF03  F008         	goto	u2221
  1853  000FF6  5045               	movf	(dtoa@i+1)^0,w,c
  1854  000FF8  E108               	bnz	u2220
  1855  000FFA  0444               	decf	dtoa@i^0,w,c
  1856  000FFC  A0D8               	btfss	status,0,c
  1857  000FFE  EF03  F008         	goto	u2221
  1858  001002  EF05  F008         	goto	u2220
  1859  001006                     u2221:
  1860  001006  EF35  F008         	goto	l3043
  1861  00100A                     u2220:
  1862  00100A  503C               	movf	dtoa@n^0,w,c
  1863  00100C  103D               	iorwf	(dtoa@n+1)^0,w,c
  1864  00100E  103E               	iorwf	(dtoa@n+2)^0,w,c
  1865  001010  103F               	iorwf	(dtoa@n+3)^0,w,c
  1866  001012  1040               	iorwf	(dtoa@n+4)^0,w,c
  1867  001014  1041               	iorwf	(dtoa@n+5)^0,w,c
  1868  001016  1042               	iorwf	(dtoa@n+6)^0,w,c
  1869  001018  1043               	iorwf	(dtoa@n+7)^0,w,c
  1870  00101A  A4D8               	btfss	status,2,c
  1871  00101C  EF12  F008         	goto	u2231
  1872  001020  EF14  F008         	goto	u2230
  1873  001024                     u2231:
  1874  001024  EF7C  F007         	goto	l3023
  1875  001028                     u2230:
  1876  001028  BE37               	btfsc	(dtoa@p+1)^0,7,c
  1877  00102A  EF21  F008         	goto	u2240
  1878  00102E  5037               	movf	(dtoa@p+1)^0,w,c
  1879  001030  E106               	bnz	u2241
  1880  001032  0436               	decf	dtoa@p^0,w,c
  1881  001034  B0D8               	btfsc	status,0,c
  1882  001036  EF1F  F008         	goto	u2241
  1883  00103A  EF21  F008         	goto	u2240
  1884  00103E                     u2241:
  1885  00103E  EF7C  F007         	goto	l3023
  1886  001042                     u2240:
  1887  001042  BE39               	btfsc	(dtoa@w+1)^0,7,c
  1888  001044  EF2C  F008         	goto	u2251
  1889  001048  5039               	movf	(dtoa@w+1)^0,w,c
  1890  00104A  E108               	bnz	u2250
  1891  00104C  0438               	decf	dtoa@w^0,w,c
  1892  00104E  A0D8               	btfss	status,0,c
  1893  001050  EF2C  F008         	goto	u2251
  1894  001054  EF2E  F008         	goto	u2250
  1895  001058                     u2251:
  1896  001058  EF35  F008         	goto	l3043
  1897  00105C                     u2250:
  1898  00105C  B252               	btfsc	_flags^0,1,c
  1899  00105E  EF33  F008         	goto	u2261
  1900  001062  EF35  F008         	goto	u2260
  1901  001066                     u2261:
  1902  001066  EF7C  F007         	goto	l3023
  1903  00106A                     u2260:
  1904  00106A                     l3043:
  1905                           
  1906                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
  1907  00106A  503A               	movf	dtoa@s^0,w,c
  1908  00106C  103B               	iorwf	(dtoa@s+1)^0,w,c
  1909  00106E  A4D8               	btfss	status,2,c
  1910  001070  EF3C  F008         	goto	u2271
  1911  001074  EF3E  F008         	goto	u2270
  1912  001078                     u2271:
  1913  001078  EF45  F008         	goto	l3047
  1914  00107C                     u2270:
  1915  00107C  A452               	btfss	_flags^0,2,c
  1916  00107E  EF43  F008         	goto	u2281
  1917  001082  EF45  F008         	goto	u2280
  1918  001086                     u2281:
  1919  001086  EF63  F008         	goto	l3057
  1920  00108A                     u2280:
  1921  00108A                     l3047:
  1922                           
  1923                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 322:         --i;
  1924  00108A  0644               	decf	dtoa@i^0,f,c
  1925  00108C  A0D8               	btfss	status,0,c
  1926  00108E  0645               	decf	(dtoa@i+1)^0,f,c
  1927  001090                     
  1928                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
  1929  001090  503A               	movf	dtoa@s^0,w,c
  1930  001092  103B               	iorwf	(dtoa@s+1)^0,w,c
  1931  001094  A4D8               	btfss	status,2,c
  1932  001096  EF4F  F008         	goto	u2291
  1933  00109A  EF51  F008         	goto	u2290
  1934  00109E                     u2291:
  1935  00109E  EF57  F008         	goto	l3053
  1936  0010A2                     u2290:
  1937  0010A2  0E00               	movlw	0
  1938  0010A4  6E35               	movwf	(_dtoa$2510+1)^0,c
  1939  0010A6  0E2B               	movlw	43
  1940  0010A8  6E34               	movwf	_dtoa$2510^0,c
  1941  0010AA  EF5B  F008         	goto	l3055
  1942  0010AE                     l3053:
  1943  0010AE  0E00               	movlw	0
  1944  0010B0  6E35               	movwf	(_dtoa$2510+1)^0,c
  1945  0010B2  0E2D               	movlw	45
  1946  0010B4  6E34               	movwf	_dtoa$2510^0,c
  1947  0010B6                     l3055:
  1948  0010B6  0E3C               	movlw	low _dbuf
  1949  0010B8  2444               	addwf	dtoa@i^0,w,c
  1950  0010BA  6ED9               	movwf	fsr2l,c
  1951  0010BC  0E01               	movlw	high _dbuf
  1952  0010BE  2045               	addwfc	(dtoa@i+1)^0,w,c
  1953  0010C0  6EDA               	movwf	fsr2h,c
  1954  0010C2  C034  FFDF         	movff	_dtoa$2510,indf2
  1955  0010C6                     l3057:
  1956                           
  1957                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
  1958  0010C6  C022  F017         	movff	dtoa@fp,pad@fp
  1959  0010CA  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  1960  0010CE  0E3C               	movlw	low _dbuf
  1961  0010D0  2444               	addwf	dtoa@i^0,w,c
  1962  0010D2  6E19               	movwf	pad@buf^0,c
  1963  0010D4  0E01               	movlw	high _dbuf
  1964  0010D6  2045               	addwfc	(dtoa@i+1)^0,w,c
  1965  0010D8  6E1A               	movwf	(pad@buf+1)^0,c
  1966  0010DA  C038  F01B         	movff	dtoa@w,pad@p
  1967  0010DE  C039  F01C         	movff	dtoa@w+1,pad@p+1
  1968  0010E2  EC8A  F00D         	call	_pad	;wreg free
  1969  0010E6  C017  F022         	movff	?_pad,?_dtoa
  1970  0010EA  C018  F023         	movff	?_pad+1,?_dtoa+1
  1971  0010EE  0012               	return		;funcret
  1972  0010F0                     __end_of_dtoa:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _pad *****************
  1976 ;; Defined at:
  1977 ;;		line 72 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  1980 ;;		 -> sprintf@f(6), 
  1981 ;;  buf             2   24[COMRAM] PTR unsigned char 
  1982 ;;		 -> dbuf(32), 
  1983 ;;  p               2   26[COMRAM] int 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  w               2   31[COMRAM] int 
  1986 ;;  i               2   29[COMRAM] int 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  2   22[COMRAM] int 
  1989 ;; Registers used:
  1990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1996 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;Total ram usage:       11 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 10
  2003 ;; This function calls:
  2004 ;;		_fputc
  2005 ;;		_fputs
  2006 ;;		_strlen
  2007 ;; This function is called by:
  2008 ;;		_dtoa
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text5
  2013  001B14                     __ptext5:
  2014                           	callstack 0
  2015  001B14                     _pad:
  2016                           	callstack 16
  2017  001B14                     
  2018                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  2019  001B14  A052               	btfss	_flags^0,0,c
  2020  001B16  EF8F  F00D         	goto	u2101
  2021  001B1A  EF91  F00D         	goto	u2100
  2022  001B1E                     u2101:
  2023  001B1E  EF9B  F00D         	goto	l2977
  2024  001B22                     u2100:
  2025  001B22                     
  2026                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  2027  001B22  C019  F010         	movff	pad@buf,fputs@s
  2028  001B26  C01A  F011         	movff	pad@buf+1,fputs@s+1
  2029  001B2A  C017  F012         	movff	pad@fp,fputs@fp
  2030  001B2E  C018  F013         	movff	pad@fp+1,fputs@fp+1
  2031  001B32  ECAE  F00F         	call	_fputs	;wreg free
  2032  001B36                     l2977:
  2033                           
  2034                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  2035  001B36  BE1C               	btfsc	(pad@p+1)^0,7,c
  2036  001B38  EFA0  F00D         	goto	u2111
  2037  001B3C  EFA2  F00D         	goto	u2110
  2038  001B40                     u2111:
  2039  001B40  EFA8  F00D         	goto	l2981
  2040  001B44                     u2110:
  2041  001B44  C01B  F020         	movff	pad@p,pad@w
  2042  001B48  C01C  F021         	movff	pad@p+1,pad@w+1
  2043  001B4C  EFAC  F00D         	goto	l1172
  2044  001B50                     l2981:
  2045  001B50  0E00               	movlw	0
  2046  001B52  6E21               	movwf	(pad@w+1)^0,c
  2047  001B54  0E00               	movlw	0
  2048  001B56  6E20               	movwf	pad@w^0,c
  2049  001B58                     l1172:
  2050                           
  2051                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  2052  001B58  0E00               	movlw	0
  2053  001B5A  6E1F               	movwf	(pad@i+1)^0,c
  2054  001B5C  0E00               	movlw	0
  2055  001B5E  6E1E               	movwf	pad@i^0,c
  2056                           
  2057                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  2058  001B60  EFBE  F00D         	goto	l2987
  2059  001B64                     l2983:
  2060                           
  2061                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  2062  001B64  0E00               	movlw	0
  2063  001B66  6E08               	movwf	(fputc@c+1)^0,c
  2064  001B68  0E20               	movlw	32
  2065  001B6A  6E07               	movwf	fputc@c^0,c
  2066  001B6C  C017  F009         	movff	pad@fp,fputc@fp
  2067  001B70  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  2068  001B74  ECC3  F00C         	call	_fputc	;wreg free
  2069  001B78                     
  2070                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 86:         ++i;
  2071  001B78  4A1E               	infsnz	pad@i^0,f,c
  2072  001B7A  2A1F               	incf	(pad@i+1)^0,f,c
  2073  001B7C                     l2987:
  2074                           
  2075                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  2076  001B7C  5020               	movf	pad@w^0,w,c
  2077  001B7E  5C1E               	subwf	pad@i^0,w,c
  2078  001B80  501F               	movf	(pad@i+1)^0,w,c
  2079  001B82  0A80               	xorlw	128
  2080  001B84  6E1D               	movwf	??_pad^0,c
  2081  001B86  5021               	movf	(pad@w+1)^0,w,c
  2082  001B88  0A80               	xorlw	128
  2083  001B8A  581D               	subwfb	??_pad^0,w,c
  2084  001B8C  A0D8               	btfss	status,0,c
  2085  001B8E  EFCB  F00D         	goto	u2121
  2086  001B92  EFCD  F00D         	goto	u2120
  2087  001B96                     u2121:
  2088  001B96  EFB2  F00D         	goto	l2983
  2089  001B9A                     u2120:
  2090  001B9A                     
  2091                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  2092  001B9A  B052               	btfsc	_flags^0,0,c
  2093  001B9C  EFD2  F00D         	goto	u2131
  2094  001BA0  EFD4  F00D         	goto	u2130
  2095  001BA4                     u2131:
  2096  001BA4  EFDE  F00D         	goto	l2991
  2097  001BA8                     u2130:
  2098  001BA8                     
  2099                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  2100  001BA8  C019  F010         	movff	pad@buf,fputs@s
  2101  001BAC  C01A  F011         	movff	pad@buf+1,fputs@s+1
  2102  001BB0  C017  F012         	movff	pad@fp,fputs@fp
  2103  001BB4  C018  F013         	movff	pad@fp+1,fputs@fp+1
  2104  001BB8  ECAE  F00F         	call	_fputs	;wreg free
  2105  001BBC                     l2991:
  2106                           
  2107                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
  2108  001BBC  C019  F007         	movff	pad@buf,strlen@s
  2109  001BC0  C01A  F008         	movff	pad@buf+1,strlen@s+1
  2110  001BC4  EC8A  F010         	call	_strlen	;wreg free
  2111  001BC8  5020               	movf	pad@w^0,w,c
  2112  001BCA  2407               	addwf	?_strlen^0,w,c
  2113  001BCC  6E17               	movwf	?_pad^0,c
  2114  001BCE  5021               	movf	(pad@w+1)^0,w,c
  2115  001BD0  2008               	addwfc	(?_strlen+1)^0,w,c
  2116  001BD2  6E18               	movwf	(?_pad+1)^0,c
  2117  001BD4  0012               	return		;funcret
  2118  001BD6                     __end_of_pad:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _strlen *****************
  2122 ;; Defined at:
  2123 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  s               2    6[COMRAM] PTR const unsigned char 
  2126 ;;		 -> dbuf(32), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  a               2    8[COMRAM] PTR const unsigned char 
  2129 ;;		 -> dbuf(32), 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  2    6[COMRAM] unsigned int 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;Total ram usage:        4 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; Hardware stack levels required when called: 7
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_pad
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text6
  2154  002114                     __ptext6:
  2155                           	callstack 0
  2156  002114                     _strlen:
  2157                           	callstack 18
  2158  002114  C007  F009         	movff	strlen@s,strlen@a
  2159  002118  C008  F00A         	movff	strlen@s+1,strlen@a+1
  2160  00211C  EF92  F010         	goto	l2887
  2161  002120                     l2885:
  2162  002120  4A07               	infsnz	strlen@s^0,f,c
  2163  002122  2A08               	incf	(strlen@s+1)^0,f,c
  2164  002124                     l2887:
  2165  002124  C007  FFD9         	movff	strlen@s,fsr2l
  2166  002128  C008  FFDA         	movff	strlen@s+1,fsr2h
  2167  00212C  50DF               	movf	indf2,w,c
  2168  00212E  A4D8               	btfss	status,2,c
  2169  002130  EF9C  F010         	goto	u1961
  2170  002134  EF9E  F010         	goto	u1960
  2171  002138                     u1961:
  2172  002138  EF90  F010         	goto	l2885
  2173  00213C                     u1960:
  2174  00213C  5009               	movf	strlen@a^0,w,c
  2175  00213E  5C07               	subwf	strlen@s^0,w,c
  2176  002140  6E07               	movwf	?_strlen^0,c
  2177  002142  500A               	movf	(strlen@a+1)^0,w,c
  2178  002144  5808               	subwfb	(strlen@s+1)^0,w,c
  2179  002146  6E08               	movwf	(?_strlen+1)^0,c
  2180  002148  0012               	return		;funcret
  2181  00214A                     __end_of_strlen:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function _fputs *****************
  2185 ;; Defined at:
  2186 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputs.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2189 ;;		 -> dbuf(32), 
  2190 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2191 ;;		 -> sprintf@f(6), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  i               2   20[COMRAM] int 
  2194 ;;  c               1   19[COMRAM] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  2   15[COMRAM] int 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2205 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2207 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;Total ram usage:        7 bytes
  2209 ;; Hardware stack levels used: 1
  2210 ;; Hardware stack levels required when called: 9
  2211 ;; This function calls:
  2212 ;;		_fputc
  2213 ;; This function is called by:
  2214 ;;		_pad
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text7
  2219  001F5C                     __ptext7:
  2220                           	callstack 0
  2221  001F5C                     _fputs:
  2222                           	callstack 16
  2223  001F5C  0E00               	movlw	0
  2224  001F5E  6E16               	movwf	(fputs@i+1)^0,c
  2225  001F60  0E00               	movlw	0
  2226  001F62  6E15               	movwf	fputs@i^0,c
  2227  001F64  EFBF  F00F         	goto	l2881
  2228  001F68                     l2877:
  2229  001F68  C014  F007         	movff	fputs@c,fputc@c
  2230  001F6C  6A08               	clrf	(fputc@c+1)^0,c
  2231  001F6E  C012  F009         	movff	fputs@fp,fputc@fp
  2232  001F72  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  2233  001F76  ECC3  F00C         	call	_fputc	;wreg free
  2234  001F7A  4A15               	infsnz	fputs@i^0,f,c
  2235  001F7C  2A16               	incf	(fputs@i+1)^0,f,c
  2236  001F7E                     l2881:
  2237  001F7E  5015               	movf	fputs@i^0,w,c
  2238  001F80  2410               	addwf	fputs@s^0,w,c
  2239  001F82  6ED9               	movwf	fsr2l,c
  2240  001F84  5016               	movf	(fputs@i+1)^0,w,c
  2241  001F86  2011               	addwfc	(fputs@s+1)^0,w,c
  2242  001F88  6EDA               	movwf	fsr2h,c
  2243  001F8A  50DF               	movf	indf2,w,c
  2244  001F8C  6E14               	movwf	fputs@c^0,c
  2245  001F8E  5014               	movf	fputs@c^0,w,c
  2246  001F90  A4D8               	btfss	status,2,c
  2247  001F92  EFCD  F00F         	goto	u1951
  2248  001F96  EFCF  F00F         	goto	u1950
  2249  001F9A                     u1951:
  2250  001F9A  EFB4  F00F         	goto	l2877
  2251  001F9E                     u1950:
  2252  001F9E  0012               	return		;funcret
  2253  001FA0                     __end_of_fputs:
  2254                           	callstack 0
  2255                           
  2256 ;; *************** function _fputc *****************
  2257 ;; Defined at:
  2258 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputc.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  c               2    6[COMRAM] int 
  2261 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  2262 ;;		 -> sprintf@f(6), 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  2    6[COMRAM] int 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2276 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2278 ;;Total ram usage:        9 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 8
  2281 ;; This function calls:
  2282 ;;		_putch
  2283 ;; This function is called by:
  2284 ;;		_pad
  2285 ;;		_vfpfcnvrt
  2286 ;;		_fputs
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text8
  2291  001986                     __ptext8:
  2292                           	callstack 0
  2293  001986                     _fputc:
  2294                           	callstack 19
  2295  001986  5009               	movf	fputc@fp^0,w,c
  2296  001988  100A               	iorwf	(fputc@fp+1)^0,w,c
  2297  00198A  B4D8               	btfsc	status,2,c
  2298  00198C  EFCA  F00C         	goto	u1911
  2299  001990  EFCC  F00C         	goto	u1910
  2300  001994                     u1911:
  2301  001994  EFD5  F00C         	goto	l2865
  2302  001998                     u1910:
  2303  001998  5009               	movf	fputc@fp^0,w,c
  2304  00199A  100A               	iorwf	(fputc@fp+1)^0,w,c
  2305  00199C  A4D8               	btfss	status,2,c
  2306  00199E  EFD3  F00C         	goto	u1921
  2307  0019A2  EFD5  F00C         	goto	u1920
  2308  0019A6                     u1921:
  2309  0019A6  EFDA  F00C         	goto	l2867
  2310  0019AA                     u1920:
  2311  0019AA                     l2865:
  2312  0019AA  5007               	movf	fputc@c^0,w,c
  2313  0019AC  ECC3  F011         	call	_putch
  2314  0019B0  EF27  F00D         	goto	l1236
  2315  0019B4                     l2867:
  2316  0019B4  EE20 F004          	lfsr	2,4
  2317  0019B8  5009               	movf	fputc@fp^0,w,c
  2318  0019BA  26D9               	addwf	fsr2l,f,c
  2319  0019BC  500A               	movf	(fputc@fp+1)^0,w,c
  2320  0019BE  22DA               	addwfc	fsr2h,f,c
  2321  0019C0  50DE               	movf	postinc2,w,c
  2322  0019C2  10DE               	iorwf	postinc2,w,c
  2323  0019C4  B4D8               	btfsc	status,2,c
  2324  0019C6  EFE7  F00C         	goto	u1931
  2325  0019CA  EFE9  F00C         	goto	u1930
  2326  0019CE                     u1931:
  2327  0019CE  EF04  F00D         	goto	l2871
  2328  0019D2                     u1930:
  2329  0019D2  EE20 F004          	lfsr	2,4
  2330  0019D6  5009               	movf	fputc@fp^0,w,c
  2331  0019D8  26D9               	addwf	fsr2l,f,c
  2332  0019DA  500A               	movf	(fputc@fp+1)^0,w,c
  2333  0019DC  22DA               	addwfc	fsr2h,f,c
  2334  0019DE  EE10 F002          	lfsr	1,2
  2335  0019E2  5009               	movf	fputc@fp^0,w,c
  2336  0019E4  26E1               	addwf	fsr1l,f,c
  2337  0019E6  500A               	movf	(fputc@fp+1)^0,w,c
  2338  0019E8  22E2               	addwfc	fsr1h,f,c
  2339  0019EA  50DE               	movf	postinc2,w,c
  2340  0019EC  5CE6               	subwf	postinc1,w,c
  2341  0019EE  50E6               	movf	postinc1,w,c
  2342  0019F0  0A80               	xorlw	128
  2343  0019F2  6E0F               	movwf	(??_fputc+4)^0,c
  2344  0019F4  50DE               	movf	postinc2,w,c
  2345  0019F6  0A80               	xorlw	128
  2346  0019F8  580F               	subwfb	(??_fputc+4)^0,w,c
  2347  0019FA  B0D8               	btfsc	status,0,c
  2348  0019FC  EF02  F00D         	goto	u1941
  2349  001A00  EF04  F00D         	goto	u1940
  2350  001A04                     u1941:
  2351  001A04  EF27  F00D         	goto	l1236
  2352  001A08                     u1940:
  2353  001A08                     l2871:
  2354  001A08  EE20 F002          	lfsr	2,2
  2355  001A0C  5009               	movf	fputc@fp^0,w,c
  2356  001A0E  26D9               	addwf	fsr2l,f,c
  2357  001A10  500A               	movf	(fputc@fp+1)^0,w,c
  2358  001A12  22DA               	addwfc	fsr2h,f,c
  2359  001A14  CFDE F00B          	movff	postinc2,??_fputc
  2360  001A18  CFDD F00C          	movff	postdec2,??_fputc+1
  2361  001A1C  C009  FFD9         	movff	fputc@fp,fsr2l
  2362  001A20  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  2363  001A24  CFDE F00D          	movff	postinc2,??_fputc+2
  2364  001A28  CFDD F00E          	movff	postdec2,??_fputc+3
  2365  001A2C  500B               	movf	??_fputc^0,w,c
  2366  001A2E  240D               	addwf	(??_fputc+2)^0,w,c
  2367  001A30  6ED9               	movwf	fsr2l,c
  2368  001A32  500C               	movf	(??_fputc+1)^0,w,c
  2369  001A34  200E               	addwfc	(??_fputc+3)^0,w,c
  2370  001A36  6EDA               	movwf	fsr2h,c
  2371  001A38  C007  FFDF         	movff	fputc@c,indf2
  2372  001A3C  EE20 F002          	lfsr	2,2
  2373  001A40  5009               	movf	fputc@fp^0,w,c
  2374  001A42  26D9               	addwf	fsr2l,f,c
  2375  001A44  500A               	movf	(fputc@fp+1)^0,w,c
  2376  001A46  22DA               	addwfc	fsr2h,f,c
  2377  001A48  2ADE               	incf	postinc2,f,c
  2378  001A4A  0E00               	movlw	0
  2379  001A4C  22DD               	addwfc	postdec2,f,c
  2380  001A4E                     l1236:
  2381  001A4E  0012               	return		;funcret
  2382  001A50                     __end_of_fputc:
  2383                           	callstack 0
  2384                           
  2385 ;; *************** function _putch *****************
  2386 ;; Defined at:
  2387 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/putch.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  c               1    wreg     unsigned char 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  c               1    0[COMRAM] unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2405 ;;Total ram usage:        0 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 7
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_fputc
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text9
  2416  002386                     __ptext9:
  2417                           	callstack 0
  2418  002386                     _putch:
  2419                           	callstack 19
  2420  002386  0012               	return		;funcret
  2421  002388                     __end_of_putch:
  2422                           	callstack 0
  2423                           
  2424 ;; *************** function _abs *****************
  2425 ;; Defined at:
  2426 ;;		line 1 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  a               2   24[COMRAM] int 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  2   24[COMRAM] int 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;Total ram usage:        4 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 7
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_dtoa
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text10
  2455  002026                     __ptext10:
  2456                           	callstack 0
  2457  002026                     _abs:
  2458                           	callstack 19
  2459  002026  BE1A               	btfsc	(abs@a+1)^0,7,c
  2460  002028  EF20  F010         	goto	u2140
  2461  00202C  501A               	movf	(abs@a+1)^0,w,c
  2462  00202E  E106               	bnz	u2141
  2463  002030  0419               	decf	abs@a^0,w,c
  2464  002032  B0D8               	btfsc	status,0,c
  2465  002034  EF1E  F010         	goto	u2141
  2466  002038  EF20  F010         	goto	u2140
  2467  00203C                     u2141:
  2468  00203C  EF2E  F010         	goto	l1221
  2469  002040                     u2140:
  2470  002040  C019  F01B         	movff	abs@a,??_abs
  2471  002044  C01A  F01C         	movff	abs@a+1,??_abs+1
  2472  002048  1E1B               	comf	??_abs^0,f,c
  2473  00204A  1E1C               	comf	(??_abs+1)^0,f,c
  2474  00204C  4A1B               	infsnz	??_abs^0,f,c
  2475  00204E  2A1C               	incf	(??_abs+1)^0,f,c
  2476  002050  C01B  F019         	movff	??_abs,?_abs
  2477  002054  C01C  F01A         	movff	??_abs+1,?_abs+1
  2478  002058  EF32  F010         	goto	l1224
  2479  00205C                     l1221:
  2480  00205C  C019  F019         	movff	abs@a,?_abs
  2481  002060  C01A  F01A         	movff	abs@a+1,?_abs+1
  2482  002064                     l1224:
  2483  002064  0012               	return		;funcret
  2484  002066                     __end_of_abs:
  2485                           	callstack 0
  2486                           
  2487 ;; *************** function ___aomod *****************
  2488 ;; Defined at:
  2489 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aomod.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  dividend        8    6[COMRAM] long long 
  2492 ;;  divisor         8   14[COMRAM] long long 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  sign            1   23[COMRAM] unsigned char 
  2495 ;;  counter         1   22[COMRAM] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  8    6[COMRAM] long long 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2505 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;Total ram usage:       18 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 7
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_dtoa
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text11
  2520  001822                     __ptext11:
  2521                           	callstack 0
  2522  001822                     ___aomod:
  2523                           	callstack 19
  2524  001822  0E00               	movlw	0
  2525  001824  6E18               	movwf	___aomod@sign^0,c
  2526  001826  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  2527  001828  EF1A  F00C         	goto	u2040
  2528  00182C  EF18  F00C         	goto	u2041
  2529  001830                     u2041:
  2530  001830  EF2C  F00C         	goto	l2945
  2531  001834                     u2040:
  2532  001834  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  2533  001836  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  2534  001838  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  2535  00183A  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  2536  00183C  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  2537  00183E  1E09               	comf	(___aomod@dividend+2)^0,f,c
  2538  001840  1E08               	comf	(___aomod@dividend+1)^0,f,c
  2539  001842  6C07               	negf	___aomod@dividend^0,c
  2540  001844  0E00               	movlw	0
  2541  001846  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  2542  001848  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  2543  00184A  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  2544  00184C  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  2545  00184E  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  2546  001850  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  2547  001852  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  2548  001854  0E01               	movlw	1
  2549  001856  6E18               	movwf	___aomod@sign^0,c
  2550  001858                     l2945:
  2551  001858  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  2552  00185A  EF33  F00C         	goto	u2050
  2553  00185E  EF31  F00C         	goto	u2051
  2554  001862                     u2051:
  2555  001862  EF43  F00C         	goto	l2949
  2556  001866                     u2050:
  2557  001866  1E16               	comf	(___aomod@divisor+7)^0,f,c
  2558  001868  1E15               	comf	(___aomod@divisor+6)^0,f,c
  2559  00186A  1E14               	comf	(___aomod@divisor+5)^0,f,c
  2560  00186C  1E13               	comf	(___aomod@divisor+4)^0,f,c
  2561  00186E  1E12               	comf	(___aomod@divisor+3)^0,f,c
  2562  001870  1E11               	comf	(___aomod@divisor+2)^0,f,c
  2563  001872  1E10               	comf	(___aomod@divisor+1)^0,f,c
  2564  001874  6C0F               	negf	___aomod@divisor^0,c
  2565  001876  0E00               	movlw	0
  2566  001878  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  2567  00187A  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  2568  00187C  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  2569  00187E  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  2570  001880  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  2571  001882  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  2572  001884  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  2573  001886                     l2949:
  2574  001886  500F               	movf	___aomod@divisor^0,w,c
  2575  001888  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  2576  00188A  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  2577  00188C  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  2578  00188E  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  2579  001890  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  2580  001892  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  2581  001894  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  2582  001896  B4D8               	btfsc	status,2,c
  2583  001898  EF50  F00C         	goto	u2061
  2584  00189C  EF52  F00C         	goto	u2060
  2585  0018A0                     u2061:
  2586  0018A0  EF9A  F00C         	goto	l2965
  2587  0018A4                     u2060:
  2588  0018A4  0E01               	movlw	1
  2589  0018A6  6E17               	movwf	___aomod@counter^0,c
  2590  0018A8  EF60  F00C         	goto	l2955
  2591  0018AC                     l2953:
  2592  0018AC  90D8               	bcf	status,0,c
  2593  0018AE  360F               	rlcf	___aomod@divisor^0,f,c
  2594  0018B0  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  2595  0018B2  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  2596  0018B4  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  2597  0018B6  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  2598  0018B8  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  2599  0018BA  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  2600  0018BC  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  2601  0018BE  2A17               	incf	___aomod@counter^0,f,c
  2602  0018C0                     l2955:
  2603  0018C0  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  2604  0018C2  EF65  F00C         	goto	u2071
  2605  0018C6  EF67  F00C         	goto	u2070
  2606  0018CA                     u2071:
  2607  0018CA  EF56  F00C         	goto	l2953
  2608  0018CE                     u2070:
  2609  0018CE                     l2957:
  2610  0018CE  500F               	movf	___aomod@divisor^0,w,c
  2611  0018D0  5C07               	subwf	___aomod@dividend^0,w,c
  2612  0018D2  5010               	movf	(___aomod@divisor+1)^0,w,c
  2613  0018D4  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  2614  0018D6  5011               	movf	(___aomod@divisor+2)^0,w,c
  2615  0018D8  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  2616  0018DA  5012               	movf	(___aomod@divisor+3)^0,w,c
  2617  0018DC  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  2618  0018DE  5013               	movf	(___aomod@divisor+4)^0,w,c
  2619  0018E0  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  2620  0018E2  5014               	movf	(___aomod@divisor+5)^0,w,c
  2621  0018E4  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  2622  0018E6  5015               	movf	(___aomod@divisor+6)^0,w,c
  2623  0018E8  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  2624  0018EA  5016               	movf	(___aomod@divisor+7)^0,w,c
  2625  0018EC  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  2626  0018EE  A0D8               	btfss	status,0,c
  2627  0018F0  EF7C  F00C         	goto	u2081
  2628  0018F4  EF7E  F00C         	goto	u2080
  2629  0018F8                     u2081:
  2630  0018F8  EF8E  F00C         	goto	l2961
  2631  0018FC                     u2080:
  2632  0018FC  500F               	movf	___aomod@divisor^0,w,c
  2633  0018FE  5E07               	subwf	___aomod@dividend^0,f,c
  2634  001900  5010               	movf	(___aomod@divisor+1)^0,w,c
  2635  001902  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  2636  001904  5011               	movf	(___aomod@divisor+2)^0,w,c
  2637  001906  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  2638  001908  5012               	movf	(___aomod@divisor+3)^0,w,c
  2639  00190A  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  2640  00190C  5013               	movf	(___aomod@divisor+4)^0,w,c
  2641  00190E  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  2642  001910  5014               	movf	(___aomod@divisor+5)^0,w,c
  2643  001912  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  2644  001914  5015               	movf	(___aomod@divisor+6)^0,w,c
  2645  001916  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  2646  001918  5016               	movf	(___aomod@divisor+7)^0,w,c
  2647  00191A  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  2648  00191C                     l2961:
  2649  00191C  90D8               	bcf	status,0,c
  2650  00191E  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  2651  001920  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  2652  001922  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  2653  001924  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  2654  001926  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  2655  001928  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  2656  00192A  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  2657  00192C  320F               	rrcf	___aomod@divisor^0,f,c
  2658  00192E  2E17               	decfsz	___aomod@counter^0,f,c
  2659  001930  EF67  F00C         	goto	l2957
  2660  001934                     l2965:
  2661  001934  5018               	movf	___aomod@sign^0,w,c
  2662  001936  B4D8               	btfsc	status,2,c
  2663  001938  EFA0  F00C         	goto	u2091
  2664  00193C  EFA2  F00C         	goto	u2090
  2665  001940                     u2091:
  2666  001940  EFB2  F00C         	goto	l2969
  2667  001944                     u2090:
  2668  001944  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  2669  001946  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  2670  001948  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  2671  00194A  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  2672  00194C  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  2673  00194E  1E09               	comf	(___aomod@dividend+2)^0,f,c
  2674  001950  1E08               	comf	(___aomod@dividend+1)^0,f,c
  2675  001952  6C07               	negf	___aomod@dividend^0,c
  2676  001954  0E00               	movlw	0
  2677  001956  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  2678  001958  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  2679  00195A  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  2680  00195C  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  2681  00195E  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  2682  001960  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  2683  001962  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  2684  001964                     l2969:
  2685  001964  C007  F007         	movff	___aomod@dividend,?___aomod
  2686  001968  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  2687  00196C  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  2688  001970  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  2689  001974  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  2690  001978  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  2691  00197C  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  2692  001980  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  2693  001984  0012               	return		;funcret
  2694  001986                     __end_of___aomod:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function ___aodiv *****************
  2698 ;; Defined at:
  2699 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aodiv.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  dividend        8    6[COMRAM] long long 
  2702 ;;  divisor         8   14[COMRAM] long long 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  quotient        8   24[COMRAM] long long 
  2705 ;;  sign            1   23[COMRAM] unsigned char 
  2706 ;;  counter         1   22[COMRAM] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  8    6[COMRAM] long long 
  2709 ;; Registers used:
  2710 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2716 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2717 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;Total ram usage:       26 bytes
  2721 ;; Hardware stack levels used: 1
  2722 ;; Hardware stack levels required when called: 7
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_dtoa
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text12
  2731  00169A                     __ptext12:
  2732                           	callstack 0
  2733  00169A                     ___aodiv:
  2734                           	callstack 19
  2735  00169A  0E00               	movlw	0
  2736  00169C  6E18               	movwf	___aodiv@sign^0,c
  2737  00169E  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  2738  0016A0  EF56  F00B         	goto	u1970
  2739  0016A4  EF54  F00B         	goto	u1971
  2740  0016A8                     u1971:
  2741  0016A8  EF68  F00B         	goto	l2901
  2742  0016AC                     u1970:
  2743  0016AC  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  2744  0016AE  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  2745  0016B0  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  2746  0016B2  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  2747  0016B4  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  2748  0016B6  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  2749  0016B8  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  2750  0016BA  6C0F               	negf	___aodiv@divisor^0,c
  2751  0016BC  0E00               	movlw	0
  2752  0016BE  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  2753  0016C0  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  2754  0016C2  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  2755  0016C4  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  2756  0016C6  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  2757  0016C8  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  2758  0016CA  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  2759  0016CC  0E01               	movlw	1
  2760  0016CE  6E18               	movwf	___aodiv@sign^0,c
  2761  0016D0                     l2901:
  2762  0016D0  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  2763  0016D2  EF6F  F00B         	goto	u1980
  2764  0016D6  EF6D  F00B         	goto	u1981
  2765  0016DA                     u1981:
  2766  0016DA  EF81  F00B         	goto	l2907
  2767  0016DE                     u1980:
  2768  0016DE  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  2769  0016E0  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  2770  0016E2  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  2771  0016E4  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  2772  0016E6  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  2773  0016E8  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  2774  0016EA  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  2775  0016EC  6C07               	negf	___aodiv@dividend^0,c
  2776  0016EE  0E00               	movlw	0
  2777  0016F0  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  2778  0016F2  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  2779  0016F4  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  2780  0016F6  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  2781  0016F8  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  2782  0016FA  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  2783  0016FC  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  2784  0016FE  0E01               	movlw	1
  2785  001700  1A18               	xorwf	___aodiv@sign^0,f,c
  2786  001702                     l2907:
  2787  001702  EE20  F019         	lfsr	2,___aodiv@quotient
  2788  001706  0E07               	movlw	7
  2789  001708                     u1991:
  2790  001708  6ADE               	clrf	postinc2,c
  2791  00170A  06E8               	decf	wreg,f,c
  2792  00170C  E2FD               	bc	u1991
  2793  00170E  500F               	movf	___aodiv@divisor^0,w,c
  2794  001710  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  2795  001712  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  2796  001714  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  2797  001716  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  2798  001718  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  2799  00171A  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  2800  00171C  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  2801  00171E  B4D8               	btfsc	status,2,c
  2802  001720  EF94  F00B         	goto	u2001
  2803  001724  EF96  F00B         	goto	u2000
  2804  001728                     u2001:
  2805  001728  EFE8  F00B         	goto	l2929
  2806  00172C                     u2000:
  2807  00172C  0E01               	movlw	1
  2808  00172E  6E17               	movwf	___aodiv@counter^0,c
  2809  001730  EFA4  F00B         	goto	l2915
  2810  001734                     l2913:
  2811  001734  90D8               	bcf	status,0,c
  2812  001736  360F               	rlcf	___aodiv@divisor^0,f,c
  2813  001738  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  2814  00173A  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  2815  00173C  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  2816  00173E  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  2817  001740  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  2818  001742  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  2819  001744  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  2820  001746  2A17               	incf	___aodiv@counter^0,f,c
  2821  001748                     l2915:
  2822  001748  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  2823  00174A  EFA9  F00B         	goto	u2011
  2824  00174E  EFAB  F00B         	goto	u2010
  2825  001752                     u2011:
  2826  001752  EF9A  F00B         	goto	l2913
  2827  001756                     u2010:
  2828  001756                     l2917:
  2829  001756  90D8               	bcf	status,0,c
  2830  001758  3619               	rlcf	___aodiv@quotient^0,f,c
  2831  00175A  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  2832  00175C  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  2833  00175E  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  2834  001760  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  2835  001762  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  2836  001764  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  2837  001766  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  2838  001768  500F               	movf	___aodiv@divisor^0,w,c
  2839  00176A  5C07               	subwf	___aodiv@dividend^0,w,c
  2840  00176C  5010               	movf	(___aodiv@divisor+1)^0,w,c
  2841  00176E  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  2842  001770  5011               	movf	(___aodiv@divisor+2)^0,w,c
  2843  001772  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  2844  001774  5012               	movf	(___aodiv@divisor+3)^0,w,c
  2845  001776  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  2846  001778  5013               	movf	(___aodiv@divisor+4)^0,w,c
  2847  00177A  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  2848  00177C  5014               	movf	(___aodiv@divisor+5)^0,w,c
  2849  00177E  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  2850  001780  5015               	movf	(___aodiv@divisor+6)^0,w,c
  2851  001782  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  2852  001784  5016               	movf	(___aodiv@divisor+7)^0,w,c
  2853  001786  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  2854  001788  A0D8               	btfss	status,0,c
  2855  00178A  EFC9  F00B         	goto	u2021
  2856  00178E  EFCB  F00B         	goto	u2020
  2857  001792                     u2021:
  2858  001792  EFDC  F00B         	goto	l2925
  2859  001796                     u2020:
  2860  001796  500F               	movf	___aodiv@divisor^0,w,c
  2861  001798  5E07               	subwf	___aodiv@dividend^0,f,c
  2862  00179A  5010               	movf	(___aodiv@divisor+1)^0,w,c
  2863  00179C  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  2864  00179E  5011               	movf	(___aodiv@divisor+2)^0,w,c
  2865  0017A0  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  2866  0017A2  5012               	movf	(___aodiv@divisor+3)^0,w,c
  2867  0017A4  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  2868  0017A6  5013               	movf	(___aodiv@divisor+4)^0,w,c
  2869  0017A8  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  2870  0017AA  5014               	movf	(___aodiv@divisor+5)^0,w,c
  2871  0017AC  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  2872  0017AE  5015               	movf	(___aodiv@divisor+6)^0,w,c
  2873  0017B0  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  2874  0017B2  5016               	movf	(___aodiv@divisor+7)^0,w,c
  2875  0017B4  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  2876  0017B6  8019               	bsf	___aodiv@quotient^0,0,c
  2877  0017B8                     l2925:
  2878  0017B8  90D8               	bcf	status,0,c
  2879  0017BA  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  2880  0017BC  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  2881  0017BE  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  2882  0017C0  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  2883  0017C2  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  2884  0017C4  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  2885  0017C6  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  2886  0017C8  320F               	rrcf	___aodiv@divisor^0,f,c
  2887  0017CA  2E17               	decfsz	___aodiv@counter^0,f,c
  2888  0017CC  EFAB  F00B         	goto	l2917
  2889  0017D0                     l2929:
  2890  0017D0  5018               	movf	___aodiv@sign^0,w,c
  2891  0017D2  B4D8               	btfsc	status,2,c
  2892  0017D4  EFEE  F00B         	goto	u2031
  2893  0017D8  EFF0  F00B         	goto	u2030
  2894  0017DC                     u2031:
  2895  0017DC  EF00  F00C         	goto	l2933
  2896  0017E0                     u2030:
  2897  0017E0  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  2898  0017E2  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  2899  0017E4  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  2900  0017E6  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  2901  0017E8  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  2902  0017EA  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  2903  0017EC  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  2904  0017EE  6C19               	negf	___aodiv@quotient^0,c
  2905  0017F0  0E00               	movlw	0
  2906  0017F2  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  2907  0017F4  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  2908  0017F6  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  2909  0017F8  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  2910  0017FA  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  2911  0017FC  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  2912  0017FE  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  2913  001800                     l2933:
  2914  001800  C019  F007         	movff	___aodiv@quotient,?___aodiv
  2915  001804  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  2916  001808  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  2917  00180C  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  2918  001810  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  2919  001814  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  2920  001818  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  2921  00181C  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  2922  001820  0012               	return		;funcret
  2923  001822                     __end_of___aodiv:
  2924                           	callstack 0
  2925                           
  2926 ;; *************** function _sendStringSerial4 *****************
  2927 ;; Defined at:
  2928 ;;		line 46 in file "serial.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  string          2    8[COMRAM] PTR unsigned char 
  2931 ;;		 -> main@buf(40), 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2946 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2947 ;;Total ram usage:        3 bytes
  2948 ;; Hardware stack levels used: 1
  2949 ;; Hardware stack levels required when called: 8
  2950 ;; This function calls:
  2951 ;;		_sendCharSerial4
  2952 ;; This function is called by:
  2953 ;;		_main
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text13
  2958  0020A6                     __ptext13:
  2959                           	callstack 0
  2960  0020A6                     _sendStringSerial4:
  2961                           	callstack 22
  2962  0020A6                     
  2963                           ;serial.c: 48:     while (*string != 0) {
  2964  0020A6  EF62  F010         	goto	l2639
  2965  0020AA                     l2635:
  2966                           
  2967                           ;serial.c: 49:         sendCharSerial4(*string++);
  2968  0020AA  C009  FFD9         	movff	sendStringSerial4@string,fsr2l
  2969  0020AE  C00A  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2970  0020B2  50DF               	movf	indf2,w,c
  2971  0020B4  6E0B               	movwf	??_sendStringSerial4^0,c
  2972  0020B6  500B               	movf	??_sendStringSerial4^0,w,c
  2973  0020B8  6E07               	movwf	sendCharSerial4@charToSend^0,c
  2974  0020BA  6A08               	clrf	(sendCharSerial4@charToSend+1)^0,c
  2975  0020BC  EC7E  F011         	call	_sendCharSerial4	;wreg free
  2976  0020C0  4A09               	infsnz	sendStringSerial4@string^0,f,c
  2977  0020C2  2A0A               	incf	(sendStringSerial4@string+1)^0,f,c
  2978  0020C4                     l2639:
  2979                           
  2980                           ;serial.c: 48:     while (*string != 0) {
  2981  0020C4  C009  FFD9         	movff	sendStringSerial4@string,fsr2l
  2982  0020C8  C00A  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2983  0020CC  50DF               	movf	indf2,w,c
  2984  0020CE  A4D8               	btfss	status,2,c
  2985  0020D0  EF6C  F010         	goto	u1651
  2986  0020D4  EF6E  F010         	goto	u1650
  2987  0020D8                     u1651:
  2988  0020D8  EF55  F010         	goto	l2635
  2989  0020DC                     u1650:
  2990  0020DC  0012               	return		;funcret
  2991  0020DE                     __end_of_sendStringSerial4:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _sendCharSerial4 *****************
  2995 ;; Defined at:
  2996 ;;		line 37 in file "serial.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  charToSend      2    6[COMRAM] unsigned int 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		None
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;Total ram usage:        2 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 7
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_sendStringSerial4
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text14
  3025  0022FC                     __ptext14:
  3026                           	callstack 0
  3027  0022FC                     _sendCharSerial4:
  3028                           	callstack 22
  3029  0022FC                     l334:
  3030  0022FC  010E               	movlb	14	; () banked
  3031  0022FE  A537               	btfss	55,2,b	;volatile
  3032  002300  EF84  F011         	goto	u1621
  3033  002304  EF86  F011         	goto	u1620
  3034  002308                     u1621:
  3035  002308  EF7E  F011         	goto	l334
  3036  00230C                     u1620:
  3037  00230C                     
  3038                           ; BSR set to: 14
  3039                           ;serial.c: 39:     TX4REG = charToSend;
  3040  00230C  C007  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3041  002310                     
  3042                           ; BSR set to: 14
  3043  002310  0012               	return		;funcret
  3044  002312                     __end_of_sendCharSerial4:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function _interrupts_init *****************
  3048 ;; Defined at:
  3049 ;;		line 14 in file "interrupts.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;		None
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3067 ;;Total ram usage:        0 bytes
  3068 ;; Hardware stack levels used: 1
  3069 ;; Hardware stack levels required when called: 12
  3070 ;; This function calls:
  3071 ;;		_colorclick_int_clear
  3072 ;; This function is called by:
  3073 ;;		_main
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text15
  3078  00222E                     __ptext15:
  3079                           	callstack 0
  3080  00222E                     _interrupts_init:
  3081                           	callstack 18
  3082  00222E                     
  3083                           ;interrupts.c: 15:     TRISBbits.TRISB1 = 1;
  3084  00222E  8282               	bsf	130,1,c	;volatile
  3085                           
  3086                           ;interrupts.c: 16:     ANSELBbits.ANSELB1 = 0;
  3087  002230  010E               	movlb	14	; () banked
  3088  002232  939A               	bcf	154,1,b	;volatile
  3089  002234                     
  3090                           ; BSR set to: 14
  3091                           ;interrupts.c: 17:     INT1PPS=0x09;
  3092  002234  0E09               	movlw	9
  3093  002236  010D               	movlb	13	; () banked
  3094  002238  6FF1               	movwf	241,b	;volatile
  3095  00223A                     
  3096                           ; BSR set to: 13
  3097                           ;interrupts.c: 19:     PIE0bits.INT1IE = 1;
  3098  00223A  010E               	movlb	14	; () banked
  3099  00223C  8329               	bsf	41,1,b	;volatile
  3100  00223E                     
  3101                           ; BSR set to: 14
  3102                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  3103  00223E  831F               	bsf	31,1,b	;volatile
  3104  002240                     
  3105                           ; BSR set to: 14
  3106                           ;interrupts.c: 25:     colorclick_int_clear();
  3107  002240  EC57  F011         	call	_colorclick_int_clear	;wreg free
  3108  002244                     
  3109                           ;interrupts.c: 27:     INTCONbits.IPEN = 1;
  3110  002244  8AF2               	bsf	242,5,c	;volatile
  3111  002246                     
  3112                           ;interrupts.c: 28:     INTCONbits.INT1EDG = 0;
  3113  002246  92F2               	bcf	242,1,c	;volatile
  3114  002248                     
  3115                           ;interrupts.c: 29:     INTCONbits.PEIE = 1;
  3116  002248  8CF2               	bsf	242,6,c	;volatile
  3117  00224A                     
  3118                           ;interrupts.c: 30:     INTCONbits.GIE = 1;
  3119  00224A  8EF2               	bsf	242,7,c	;volatile
  3120  00224C  0012               	return		;funcret
  3121  00224E                     __end_of_interrupts_init:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _colorclick_int_clear *****************
  3125 ;; Defined at:
  3126 ;;		line 180 in file "color_click.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 11
  3147 ;; This function calls:
  3148 ;;		_I2C_2_Master_Start
  3149 ;;		_I2C_2_Master_Stop
  3150 ;;		_I2C_2_Master_Write
  3151 ;;		_colorclick_int_init
  3152 ;; This function is called by:
  3153 ;;		_interrupts_init
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text16
  3158  0022AE                     __ptext16:
  3159                           	callstack 0
  3160  0022AE                     _colorclick_int_clear:
  3161                           	callstack 18
  3162  0022AE                     
  3163                           ;color_click.c: 181:     I2C_2_Master_Start();
  3164  0022AE  ECAA  F011         	call	_I2C_2_Master_Start	;wreg free
  3165                           
  3166                           ;color_click.c: 182:     I2C_2_Master_Write(0x52 | 0x00);
  3167  0022B2  0E52               	movlw	82
  3168  0022B4  EC94  F011         	call	_I2C_2_Master_Write
  3169                           
  3170                           ;color_click.c: 183:     I2C_2_Master_Write(0b11100110);
  3171  0022B8  0EE6               	movlw	230
  3172  0022BA  EC94  F011         	call	_I2C_2_Master_Write
  3173                           
  3174                           ;color_click.c: 184:     I2C_2_Master_Stop();
  3175  0022BE  ECA5  F011         	call	_I2C_2_Master_Stop	;wreg free
  3176                           
  3177                           ;color_click.c: 185:     colorclick_int_init();
  3178  0022C2  EC94  F00E         	call	_colorclick_int_init	;wreg free
  3179  0022C6  0012               	return		;funcret
  3180  0022C8                     __end_of_colorclick_int_clear:
  3181                           	callstack 0
  3182                           
  3183 ;; *************** function _colorclick_int_init *****************
  3184 ;; Defined at:
  3185 ;;		line 188 in file "color_click.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3203 ;;Total ram usage:        1 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; Hardware stack levels required when called: 10
  3206 ;; This function calls:
  3207 ;;		_colorclick_writetoaddr
  3208 ;; This function is called by:
  3209 ;;		_colorclick_int_clear
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text17
  3214  001D28                     __ptext17:
  3215                           	callstack 0
  3216  001D28                     _colorclick_int_init:
  3217                           	callstack 18
  3218  001D28                     
  3219                           ;color_click.c: 189:     colorclick_writetoaddr(0x00, 0b10011);
  3220  001D28  0E13               	movlw	19
  3221  001D2A  6E09               	movwf	colorclick_writetoaddr@value^0,c
  3222  001D2C  0E00               	movlw	0
  3223  001D2E  EC27  F011         	call	_colorclick_writetoaddr
  3224  001D32                     
  3225                           ;color_click.c: 190:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3226  001D32  0E3F               	movlw	63
  3227  001D34  6E0B               	movwf	??_colorclick_int_init^0,c
  3228  001D36  0E55               	movlw	85
  3229  001D38                     u2467:
  3230  001D38  2EE8               	decfsz	wreg,f,c
  3231  001D3A  D7FE               	bra	u2467
  3232  001D3C  2E0B               	decfsz	??_colorclick_int_init^0,f,c
  3233  001D3E  D7FC               	bra	u2467
  3234  001D40  F000               	nop	
  3235  001D42                     
  3236                           ;color_click.c: 191:     colorclick_writetoaddr(0x0C, 0b0100);
  3237  001D42  0E04               	movlw	4
  3238  001D44  6E09               	movwf	colorclick_writetoaddr@value^0,c
  3239  001D46  0E0C               	movlw	12
  3240  001D48  EC27  F011         	call	_colorclick_writetoaddr
  3241  001D4C                     
  3242                           ;color_click.c: 192:     colorclick_writetoaddr(0x04, (clear_lower&0b11111111));
  3243  001D4C  C0F1  F009         	movff	_clear_lower,colorclick_writetoaddr@value	;volatile
  3244  001D50  0E04               	movlw	4
  3245  001D52  EC27  F011         	call	_colorclick_writetoaddr
  3246  001D56                     
  3247                           ;color_click.c: 193:     colorclick_writetoaddr(0x05, (clear_lower>>8));
  3248  001D56  0100               	movlb	0	; () banked
  3249  001D58  51F2               	movf	(_clear_lower+1)& (0+255),w,b	;volatile
  3250  001D5A  6E09               	movwf	colorclick_writetoaddr@value^0,c
  3251  001D5C  0E05               	movlw	5
  3252  001D5E  EC27  F011         	call	_colorclick_writetoaddr
  3253  001D62                     
  3254                           ;color_click.c: 194:     colorclick_writetoaddr(0x06, (clear_upper&0b11111111));
  3255  001D62  C0EF  F009         	movff	_clear_upper,colorclick_writetoaddr@value	;volatile
  3256  001D66  0E06               	movlw	6
  3257  001D68  EC27  F011         	call	_colorclick_writetoaddr
  3258  001D6C                     
  3259                           ;color_click.c: 195:     colorclick_writetoaddr(0x07, (clear_upper>>8));
  3260  001D6C  0100               	movlb	0	; () banked
  3261  001D6E  51F0               	movf	(_clear_upper+1)& (0+255),w,b	;volatile
  3262  001D70  6E09               	movwf	colorclick_writetoaddr@value^0,c
  3263  001D72  0E07               	movlw	7
  3264  001D74  EC27  F011         	call	_colorclick_writetoaddr
  3265  001D78  0012               	return		;funcret
  3266  001D7A                     __end_of_colorclick_int_init:
  3267                           	callstack 0
  3268                           
  3269 ;; *************** function _forward *****************
  3270 ;; Defined at:
  3271 ;;		line 133 in file "dc_motor.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  mL              2   31[COMRAM] PTR struct .
  3274 ;;		 -> main@motorL(9), 
  3275 ;;  mR              2   33[COMRAM] PTR struct .
  3276 ;;		 -> main@motorR(9), 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;Total ram usage:        6 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 9
  3295 ;; This function calls:
  3296 ;;		_setMotorPWM
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text18
  3303  001BD6                     __ptext18:
  3304                           	callstack 0
  3305  001BD6                     _forward:
  3306                           	callstack 21
  3307  001BD6                     
  3308                           ;dc_motor.c: 133: void forward(DC_motor *mL, DC_motor *mR);dc_motor.c: 134: {;dc_motor.c
      +                          : 136:     mL->direction = 1;
  3309  001BD6  EE20 F001          	lfsr	2,1
  3310  001BDA  5020               	movf	forward@mL^0,w,c
  3311  001BDC  26D9               	addwf	fsr2l,f,c
  3312  001BDE  5021               	movf	(forward@mL+1)^0,w,c
  3313  001BE0  22DA               	addwfc	fsr2h,f,c
  3314  001BE2  0E01               	movlw	1
  3315  001BE4  6EDF               	movwf	indf2,c
  3316                           
  3317                           ;dc_motor.c: 137:     mR->direction = 1;
  3318  001BE6  EE20 F001          	lfsr	2,1
  3319  001BEA  5022               	movf	forward@mR^0,w,c
  3320  001BEC  26D9               	addwf	fsr2l,f,c
  3321  001BEE  5023               	movf	(forward@mR+1)^0,w,c
  3322  001BF0  22DA               	addwfc	fsr2h,f,c
  3323  001BF2  0E01               	movlw	1
  3324  001BF4  6EDF               	movwf	indf2,c
  3325                           
  3326                           ;dc_motor.c: 140:     while(((mL->power)<50) && ((mR->power)<50)){
  3327  001BF6  EF21  F00E         	goto	l2651
  3328  001BFA                     l2643:
  3329                           
  3330                           ;dc_motor.c: 141:         mL->power+=5;
  3331  001BFA  C020  FFD9         	movff	forward@mL,fsr2l
  3332  001BFE  C021  FFDA         	movff	forward@mL+1,fsr2h
  3333  001C02  0E05               	movlw	5
  3334  001C04  26DF               	addwf	indf2,f,c
  3335                           
  3336                           ;dc_motor.c: 142:         mR->power+=5;
  3337  001C06  C022  FFD9         	movff	forward@mR,fsr2l
  3338  001C0A  C023  FFDA         	movff	forward@mR+1,fsr2h
  3339  001C0E  0E05               	movlw	5
  3340  001C10  26DF               	addwf	indf2,f,c
  3341  001C12                     
  3342                           ;dc_motor.c: 144:         setMotorPWM(mL);
  3343  001C12  C020  F015         	movff	forward@mL,setMotorPWM@m
  3344  001C16  C021  F016         	movff	forward@mL+1,setMotorPWM@m+1
  3345  001C1A  EC89  F009         	call	_setMotorPWM	;wreg free
  3346  001C1E                     
  3347                           ;dc_motor.c: 145:         setMotorPWM(mR);
  3348  001C1E  C022  F015         	movff	forward@mR,setMotorPWM@m
  3349  001C22  C023  F016         	movff	forward@mR+1,setMotorPWM@m+1
  3350  001C26  EC89  F009         	call	_setMotorPWM	;wreg free
  3351  001C2A                     
  3352                           ;dc_motor.c: 146:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3353  001C2A  0E09               	movlw	9
  3354  001C2C  6E25               	movwf	(??_forward+1)^0,c
  3355  001C2E  0E1E               	movlw	30
  3356  001C30  6E24               	movwf	??_forward^0,c
  3357  001C32  0EE4               	movlw	228
  3358  001C34                     u2477:
  3359  001C34  2EE8               	decfsz	wreg,f,c
  3360  001C36  D7FE               	bra	u2477
  3361  001C38  2E24               	decfsz	??_forward^0,f,c
  3362  001C3A  D7FC               	bra	u2477
  3363  001C3C  2E25               	decfsz	(??_forward+1)^0,f,c
  3364  001C3E  D7FA               	bra	u2477
  3365  001C40  D000               	nop2	
  3366  001C42                     l2651:
  3367                           
  3368                           ;dc_motor.c: 140:     while(((mL->power)<50) && ((mR->power)<50)){
  3369  001C42  C020  FFD9         	movff	forward@mL,fsr2l
  3370  001C46  C021  FFDA         	movff	forward@mL+1,fsr2h
  3371  001C4A  0E32               	movlw	50
  3372  001C4C  60DF               	cpfslt	indf2,c
  3373  001C4E  EF2B  F00E         	goto	u1661
  3374  001C52  EF2D  F00E         	goto	u1660
  3375  001C56                     u1661:
  3376  001C56  EF39  F00E         	goto	l199
  3377  001C5A                     u1660:
  3378  001C5A  C022  FFD9         	movff	forward@mR,fsr2l
  3379  001C5E  C023  FFDA         	movff	forward@mR+1,fsr2h
  3380  001C62  0E31               	movlw	49
  3381  001C64  64DF               	cpfsgt	indf2,c
  3382  001C66  EF37  F00E         	goto	u1671
  3383  001C6A  EF39  F00E         	goto	u1670
  3384  001C6E                     u1671:
  3385  001C6E  EFFD  F00D         	goto	l2643
  3386  001C72                     u1670:
  3387  001C72                     l199:
  3388  001C72  0012               	return		;funcret
  3389  001C74                     __end_of_forward:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _setMotorPWM *****************
  3393 ;; Defined at:
  3394 ;;		line 55 in file "dc_motor.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  m               2   20[COMRAM] PTR struct .
  3397 ;;		 -> main@motorR(9), main@motorL(9), 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  PWMduty         2   29[COMRAM] int 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3411 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;Total ram usage:       11 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 8
  3416 ;; This function calls:
  3417 ;;		___awdiv
  3418 ;;		___wmul
  3419 ;; This function is called by:
  3420 ;;		_forward
  3421 ;;		_reverse
  3422 ;;		_stop
  3423 ;;		_turnLeft
  3424 ;;		_turnRight
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text19
  3429  001312                     __ptext19:
  3430                           	callstack 0
  3431  001312                     _setMotorPWM:
  3432                           	callstack 21
  3433  001312                     
  3434                           ;dc_motor.c: 55: void setMotorPWM(DC_motor *m);dc_motor.c: 56: {;dc_motor.c: 57:  int PW
      +                          Mduty;;dc_motor.c: 59:  if (m->direction){
  3435  001312  EE20 F001          	lfsr	2,1
  3436  001316  5015               	movf	setMotorPWM@m^0,w,c
  3437  001318  26D9               	addwf	fsr2l,f,c
  3438  00131A  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3439  00131C  22DA               	addwfc	fsr2h,f,c
  3440  00131E  50DF               	movf	indf2,w,c
  3441  001320  B4D8               	btfsc	status,2,c
  3442  001322  EF95  F009         	goto	u1581
  3443  001326  EF97  F009         	goto	u1580
  3444  00132A                     u1581:
  3445  00132A  EFC8  F009         	goto	l2461
  3446  00132E                     u1580:
  3447  00132E                     
  3448                           ;dc_motor.c: 60:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  3449  00132E  C015  FFD9         	movff	setMotorPWM@m,fsr2l
  3450  001332  C016  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3451  001336  50DF               	movf	indf2,w,c
  3452  001338  6E17               	movwf	??_setMotorPWM^0,c
  3453  00133A  5017               	movf	??_setMotorPWM^0,w,c
  3454  00133C  6E07               	movwf	___wmul@multiplier^0,c
  3455  00133E  6A08               	clrf	(___wmul@multiplier+1)^0,c
  3456  001340  EE20 F007          	lfsr	2,7
  3457  001344  5015               	movf	setMotorPWM@m^0,w,c
  3458  001346  26D9               	addwf	fsr2l,f,c
  3459  001348  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3460  00134A  22DA               	addwfc	fsr2h,f,c
  3461  00134C  CFDE F009          	movff	postinc2,___wmul@multiplicand
  3462  001350  CFDD F00A          	movff	postdec2,___wmul@multiplicand+1
  3463  001354  ECE2  F010         	call	___wmul	;wreg free
  3464  001358  C007  F00D         	movff	?___wmul,___awdiv@dividend
  3465  00135C  C008  F00E         	movff	?___wmul+1,___awdiv@dividend+1
  3466  001360  0E00               	movlw	0
  3467  001362  6E10               	movwf	(___awdiv@divisor+1)^0,c
  3468  001364  0E64               	movlw	100
  3469  001366  6E0F               	movwf	___awdiv@divisor^0,c
  3470  001368  EC28  F00D         	call	___awdiv	;wreg free
  3471  00136C  EE20 F007          	lfsr	2,7
  3472  001370  5015               	movf	setMotorPWM@m^0,w,c
  3473  001372  26D9               	addwf	fsr2l,f,c
  3474  001374  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3475  001376  22DA               	addwfc	fsr2h,f,c
  3476  001378  CFDE F018          	movff	postinc2,??_setMotorPWM+1
  3477  00137C  CFDD F019          	movff	postdec2,??_setMotorPWM+2
  3478  001380  500D               	movf	?___awdiv^0,w,c
  3479  001382  5C18               	subwf	(??_setMotorPWM+1)^0,w,c
  3480  001384  6E1E               	movwf	setMotorPWM@PWMduty^0,c
  3481  001386  500E               	movf	(?___awdiv+1)^0,w,c
  3482  001388  5819               	subwfb	(??_setMotorPWM+2)^0,w,c
  3483  00138A  6E1F               	movwf	(setMotorPWM@PWMduty+1)^0,c
  3484                           
  3485                           ;dc_motor.c: 61:  } else {
  3486  00138C  EFEB  F009         	goto	l2463
  3487  001390                     l2461:
  3488                           
  3489                           ;dc_motor.c: 62:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  3490  001390  C015  FFD9         	movff	setMotorPWM@m,fsr2l
  3491  001394  C016  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3492  001398  50DF               	movf	indf2,w,c
  3493  00139A  6E17               	movwf	??_setMotorPWM^0,c
  3494  00139C  5017               	movf	??_setMotorPWM^0,w,c
  3495  00139E  6E07               	movwf	___wmul@multiplier^0,c
  3496  0013A0  6A08               	clrf	(___wmul@multiplier+1)^0,c
  3497  0013A2  EE20 F007          	lfsr	2,7
  3498  0013A6  5015               	movf	setMotorPWM@m^0,w,c
  3499  0013A8  26D9               	addwf	fsr2l,f,c
  3500  0013AA  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3501  0013AC  22DA               	addwfc	fsr2h,f,c
  3502  0013AE  CFDE F009          	movff	postinc2,___wmul@multiplicand
  3503  0013B2  CFDD F00A          	movff	postdec2,___wmul@multiplicand+1
  3504  0013B6  ECE2  F010         	call	___wmul	;wreg free
  3505  0013BA  C007  F00D         	movff	?___wmul,___awdiv@dividend
  3506  0013BE  C008  F00E         	movff	?___wmul+1,___awdiv@dividend+1
  3507  0013C2  0E00               	movlw	0
  3508  0013C4  6E10               	movwf	(___awdiv@divisor+1)^0,c
  3509  0013C6  0E64               	movlw	100
  3510  0013C8  6E0F               	movwf	___awdiv@divisor^0,c
  3511  0013CA  EC28  F00D         	call	___awdiv	;wreg free
  3512  0013CE  C00D  F01E         	movff	?___awdiv,setMotorPWM@PWMduty
  3513  0013D2  C00E  F01F         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  3514  0013D6                     l2463:
  3515                           
  3516                           ;dc_motor.c: 65:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  3517  0013D6  EE20 F002          	lfsr	2,2
  3518  0013DA  5015               	movf	setMotorPWM@m^0,w,c
  3519  0013DC  26D9               	addwf	fsr2l,f,c
  3520  0013DE  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3521  0013E0  22DA               	addwfc	fsr2h,f,c
  3522  0013E2  CFDE F017          	movff	postinc2,??_setMotorPWM
  3523  0013E6  CFDD F018          	movff	postdec2,??_setMotorPWM+1
  3524  0013EA  C017  FFD9         	movff	??_setMotorPWM,fsr2l
  3525  0013EE  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3526  0013F2  C01E  FFDF         	movff	setMotorPWM@PWMduty,indf2
  3527  0013F6                     
  3528                           ;dc_motor.c: 67:  if (m->direction){
  3529  0013F6  EE20 F001          	lfsr	2,1
  3530  0013FA  5015               	movf	setMotorPWM@m^0,w,c
  3531  0013FC  26D9               	addwf	fsr2l,f,c
  3532  0013FE  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3533  001400  22DA               	addwfc	fsr2h,f,c
  3534  001402  50DF               	movf	indf2,w,c
  3535  001404  B4D8               	btfsc	status,2,c
  3536  001406  EF07  F00A         	goto	u1591
  3537  00140A  EF09  F00A         	goto	u1590
  3538  00140E                     u1591:
  3539  00140E  EF3E  F00A         	goto	l2469
  3540  001412                     u1590:
  3541  001412                     
  3542                           ;dc_motor.c: 68:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
  3543  001412  EE20 F004          	lfsr	2,4
  3544  001416  5015               	movf	setMotorPWM@m^0,w,c
  3545  001418  26D9               	addwf	fsr2l,f,c
  3546  00141A  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3547  00141C  22DA               	addwfc	fsr2h,f,c
  3548  00141E  CFDE F017          	movff	postinc2,??_setMotorPWM
  3549  001422  CFDD F018          	movff	postdec2,??_setMotorPWM+1
  3550  001426  C017  FFD9         	movff	??_setMotorPWM,fsr2l
  3551  00142A  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3552  00142E  EE10 F004          	lfsr	1,4
  3553  001432  5015               	movf	setMotorPWM@m^0,w,c
  3554  001434  26E1               	addwf	fsr1l,f,c
  3555  001436  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3556  001438  22E2               	addwfc	fsr1h,f,c
  3557  00143A  CFE6 F019          	movff	postinc1,??_setMotorPWM+2
  3558  00143E  CFE5 F01A          	movff	postdec1,??_setMotorPWM+3
  3559  001442  C019  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3560  001446  C01A  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3561  00144A  50E7               	movf	indf1,w,c
  3562  00144C  6E1B               	movwf	(??_setMotorPWM+4)^0,c
  3563  00144E  EE10 F006          	lfsr	1,6
  3564  001452  5015               	movf	setMotorPWM@m^0,w,c
  3565  001454  26E1               	addwf	fsr1l,f,c
  3566  001456  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3567  001458  22E2               	addwfc	fsr1h,f,c
  3568  00145A  50E7               	movf	indf1,w,c
  3569  00145C  6E1C               	movwf	(??_setMotorPWM+5)^0,c
  3570  00145E  0E01               	movlw	1
  3571  001460  6E1D               	movwf	(??_setMotorPWM+6)^0,c
  3572  001462  2A1C               	incf	(??_setMotorPWM+5)^0,f,c
  3573  001464  EF36  F00A         	goto	u1604
  3574  001468                     u1605:
  3575  001468  90D8               	bcf	status,0,c
  3576  00146A  361D               	rlcf	(??_setMotorPWM+6)^0,f,c
  3577  00146C                     u1604:
  3578  00146C  2E1C               	decfsz	(??_setMotorPWM+5)^0,f,c
  3579  00146E  EF34  F00A         	goto	u1605
  3580  001472  501D               	movf	(??_setMotorPWM+6)^0,w,c
  3581  001474  101B               	iorwf	(??_setMotorPWM+4)^0,w,c
  3582  001476  6EDF               	movwf	indf2,c
  3583                           
  3584                           ;dc_motor.c: 69:  } else {
  3585  001478  EF72  F00A         	goto	l179
  3586  00147C                     l2469:
  3587                           
  3588                           ;dc_motor.c: 70:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin))))
      +                          ;
  3589  00147C  EE20 F004          	lfsr	2,4
  3590  001480  5015               	movf	setMotorPWM@m^0,w,c
  3591  001482  26D9               	addwf	fsr2l,f,c
  3592  001484  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3593  001486  22DA               	addwfc	fsr2h,f,c
  3594  001488  CFDE F017          	movff	postinc2,??_setMotorPWM
  3595  00148C  CFDD F018          	movff	postdec2,??_setMotorPWM+1
  3596  001490  C017  FFD9         	movff	??_setMotorPWM,fsr2l
  3597  001494  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3598  001498  EE10 F004          	lfsr	1,4
  3599  00149C  5015               	movf	setMotorPWM@m^0,w,c
  3600  00149E  26E1               	addwf	fsr1l,f,c
  3601  0014A0  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3602  0014A2  22E2               	addwfc	fsr1h,f,c
  3603  0014A4  CFE6 F019          	movff	postinc1,??_setMotorPWM+2
  3604  0014A8  CFE5 F01A          	movff	postdec1,??_setMotorPWM+3
  3605  0014AC  C019  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3606  0014B0  C01A  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3607  0014B4  50E7               	movf	indf1,w,c
  3608  0014B6  6E1B               	movwf	(??_setMotorPWM+4)^0,c
  3609  0014B8  EE10 F006          	lfsr	1,6
  3610  0014BC  5015               	movf	setMotorPWM@m^0,w,c
  3611  0014BE  26E1               	addwf	fsr1l,f,c
  3612  0014C0  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3613  0014C2  22E2               	addwfc	fsr1h,f,c
  3614  0014C4  50E7               	movf	indf1,w,c
  3615  0014C6  6E1C               	movwf	(??_setMotorPWM+5)^0,c
  3616  0014C8  0E01               	movlw	1
  3617  0014CA  6E1D               	movwf	(??_setMotorPWM+6)^0,c
  3618  0014CC  2A1C               	incf	(??_setMotorPWM+5)^0,f,c
  3619  0014CE  EF6B  F00A         	goto	u1614
  3620  0014D2                     u1615:
  3621  0014D2  90D8               	bcf	status,0,c
  3622  0014D4  361D               	rlcf	(??_setMotorPWM+6)^0,f,c
  3623  0014D6                     u1614:
  3624  0014D6  2E1C               	decfsz	(??_setMotorPWM+5)^0,f,c
  3625  0014D8  EF69  F00A         	goto	u1615
  3626  0014DC  501D               	movf	(??_setMotorPWM+6)^0,w,c
  3627  0014DE  0AFF               	xorlw	255
  3628  0014E0  141B               	andwf	(??_setMotorPWM+4)^0,w,c
  3629  0014E2  6EDF               	movwf	indf2,c
  3630  0014E4                     l179:
  3631  0014E4  0012               	return		;funcret
  3632  0014E6                     __end_of_setMotorPWM:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function ___wmul *****************
  3636 ;; Defined at:
  3637 ;;		line 15 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  multiplier      2    6[COMRAM] unsigned int 
  3640 ;;  multiplicand    2    8[COMRAM] unsigned int 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  product         2   10[COMRAM] unsigned int 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2    6[COMRAM] unsigned int 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0, prodl, prodh
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3652 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3653 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;Total ram usage:        6 bytes
  3657 ;; Hardware stack levels used: 1
  3658 ;; Hardware stack levels required when called: 7
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_setMotorPWM
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text20
  3667  0021C4                     __ptext20:
  3668                           	callstack 0
  3669  0021C4                     ___wmul:
  3670                           	callstack 21
  3671  0021C4  5007               	movf	___wmul@multiplier^0,w,c
  3672  0021C6  0209               	mulwf	___wmul@multiplicand^0,c
  3673  0021C8  CFF3 F00B          	movff	prodl,___wmul@product
  3674  0021CC  CFF4 F00C          	movff	prodh,___wmul@product+1
  3675  0021D0  5007               	movf	___wmul@multiplier^0,w,c
  3676  0021D2  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  3677  0021D4  50F3               	movf	243,w,c
  3678  0021D6  260C               	addwf	(___wmul@product+1)^0,f,c
  3679  0021D8  5008               	movf	(___wmul@multiplier+1)^0,w,c
  3680  0021DA  0209               	mulwf	___wmul@multiplicand^0,c
  3681  0021DC  50F3               	movf	243,w,c
  3682  0021DE  260C               	addwf	(___wmul@product+1)^0,f,c
  3683  0021E0  C00B  F007         	movff	___wmul@product,?___wmul
  3684  0021E4  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  3685  0021E8  0012               	return		;funcret
  3686  0021EA                     __end_of___wmul:
  3687                           	callstack 0
  3688                           
  3689 ;; *************** function ___awdiv *****************
  3690 ;; Defined at:
  3691 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/awdiv.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  dividend        2   12[COMRAM] int 
  3694 ;;  divisor         2   14[COMRAM] int 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  quotient        2   18[COMRAM] int 
  3697 ;;  sign            1   17[COMRAM] unsigned char 
  3698 ;;  counter         1   16[COMRAM] unsigned char 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  2   12[COMRAM] int 
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, status,0
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3709 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;Total ram usage:        8 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; Hardware stack levels required when called: 7
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_setMotorPWM
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text21
  3723  001A50                     __ptext21:
  3724                           	callstack 0
  3725  001A50                     ___awdiv:
  3726                           	callstack 21
  3727  001A50  0E00               	movlw	0
  3728  001A52  6E12               	movwf	___awdiv@sign^0,c
  3729  001A54  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  3730  001A56  EF31  F00D         	goto	u1450
  3731  001A5A  EF2F  F00D         	goto	u1451
  3732  001A5E                     u1451:
  3733  001A5E  EF37  F00D         	goto	l2357
  3734  001A62                     u1450:
  3735  001A62  6C0F               	negf	___awdiv@divisor^0,c
  3736  001A64  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  3737  001A66  B0D8               	btfsc	status,0,c
  3738  001A68  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  3739  001A6A  0E01               	movlw	1
  3740  001A6C  6E12               	movwf	___awdiv@sign^0,c
  3741  001A6E                     l2357:
  3742  001A6E  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  3743  001A70  EF3E  F00D         	goto	u1460
  3744  001A74  EF3C  F00D         	goto	u1461
  3745  001A78                     u1461:
  3746  001A78  EF44  F00D         	goto	l2363
  3747  001A7C                     u1460:
  3748  001A7C  6C0D               	negf	___awdiv@dividend^0,c
  3749  001A7E  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  3750  001A80  B0D8               	btfsc	status,0,c
  3751  001A82  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  3752  001A84  0E01               	movlw	1
  3753  001A86  1A12               	xorwf	___awdiv@sign^0,f,c
  3754  001A88                     l2363:
  3755  001A88  0E00               	movlw	0
  3756  001A8A  6E14               	movwf	(___awdiv@quotient+1)^0,c
  3757  001A8C  0E00               	movlw	0
  3758  001A8E  6E13               	movwf	___awdiv@quotient^0,c
  3759  001A90  500F               	movf	___awdiv@divisor^0,w,c
  3760  001A92  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  3761  001A94  B4D8               	btfsc	status,2,c
  3762  001A96  EF4F  F00D         	goto	u1471
  3763  001A9A  EF51  F00D         	goto	u1470
  3764  001A9E                     u1471:
  3765  001A9E  EF79  F00D         	goto	l2385
  3766  001AA2                     u1470:
  3767  001AA2  0E01               	movlw	1
  3768  001AA4  6E11               	movwf	___awdiv@counter^0,c
  3769  001AA6  EF59  F00D         	goto	l2371
  3770  001AAA                     l2369:
  3771  001AAA  90D8               	bcf	status,0,c
  3772  001AAC  360F               	rlcf	___awdiv@divisor^0,f,c
  3773  001AAE  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  3774  001AB0  2A11               	incf	___awdiv@counter^0,f,c
  3775  001AB2                     l2371:
  3776  001AB2  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  3777  001AB4  EF5E  F00D         	goto	u1481
  3778  001AB8  EF60  F00D         	goto	u1480
  3779  001ABC                     u1481:
  3780  001ABC  EF55  F00D         	goto	l2369
  3781  001AC0                     u1480:
  3782  001AC0                     l2373:
  3783  001AC0  90D8               	bcf	status,0,c
  3784  001AC2  3613               	rlcf	___awdiv@quotient^0,f,c
  3785  001AC4  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  3786  001AC6  500F               	movf	___awdiv@divisor^0,w,c
  3787  001AC8  5C0D               	subwf	___awdiv@dividend^0,w,c
  3788  001ACA  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3789  001ACC  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  3790  001ACE  A0D8               	btfss	status,0,c
  3791  001AD0  EF6C  F00D         	goto	u1491
  3792  001AD4  EF6E  F00D         	goto	u1490
  3793  001AD8                     u1491:
  3794  001AD8  EF73  F00D         	goto	l2381
  3795  001ADC                     u1490:
  3796  001ADC  500F               	movf	___awdiv@divisor^0,w,c
  3797  001ADE  5E0D               	subwf	___awdiv@dividend^0,f,c
  3798  001AE0  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3799  001AE2  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  3800  001AE4  8013               	bsf	___awdiv@quotient^0,0,c
  3801  001AE6                     l2381:
  3802  001AE6  90D8               	bcf	status,0,c
  3803  001AE8  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  3804  001AEA  320F               	rrcf	___awdiv@divisor^0,f,c
  3805  001AEC  2E11               	decfsz	___awdiv@counter^0,f,c
  3806  001AEE  EF60  F00D         	goto	l2373
  3807  001AF2                     l2385:
  3808  001AF2  5012               	movf	___awdiv@sign^0,w,c
  3809  001AF4  B4D8               	btfsc	status,2,c
  3810  001AF6  EF7F  F00D         	goto	u1501
  3811  001AFA  EF81  F00D         	goto	u1500
  3812  001AFE                     u1501:
  3813  001AFE  EF85  F00D         	goto	l2389
  3814  001B02                     u1500:
  3815  001B02  6C13               	negf	___awdiv@quotient^0,c
  3816  001B04  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  3817  001B06  B0D8               	btfsc	status,0,c
  3818  001B08  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  3819  001B0A                     l2389:
  3820  001B0A  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  3821  001B0E  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  3822  001B12  0012               	return		;funcret
  3823  001B14                     __end_of___awdiv:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _colorclick_readColour *****************
  3827 ;; Defined at:
  3828 ;;		line 169 in file "color_click.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  current         8   17[COMRAM] struct .
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  8   17[COMRAM] struct .
  3835 ;; Registers used:
  3836 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3842 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;Total ram usage:        8 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 10
  3849 ;; This function calls:
  3850 ;;		_colorclick_readBlue
  3851 ;;		_colorclick_readClear
  3852 ;;		_colorclick_readGreen
  3853 ;;		_colorclick_readRed
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text22
  3860  001FA0                     __ptext22:
  3861                           	callstack 0
  3862  001FA0                     _colorclick_readColour:
  3863                           	callstack 20
  3864  001FA0                     
  3865                           ;color_click.c: 169: RGB_val colorclick_readColour(RGB_val current);color_click.c: 170: 
      +                          {;color_click.c: 171:     current.R = colorclick_readRed();
  3866  001FA0  ECE6  F00E         	call	_colorclick_readRed	;wreg free
  3867  001FA4  C00B  F012         	movff	?_colorclick_readRed,colorclick_readColour@current
  3868  001FA8  C00C  F013         	movff	?_colorclick_readRed+1,colorclick_readColour@current+1
  3869                           
  3870                           ;color_click.c: 172:     current.G = colorclick_readGreen();
  3871  001FAC  EC0E  F00F         	call	_colorclick_readGreen	;wreg free
  3872  001FB0  C00B  F014         	movff	?_colorclick_readGreen,colorclick_readColour@current+2
  3873  001FB4  C00C  F015         	movff	?_colorclick_readGreen+1,colorclick_readColour@current+3
  3874                           
  3875                           ;color_click.c: 173:     current.B = colorclick_readBlue();
  3876  001FB8  EC5E  F00F         	call	_colorclick_readBlue	;wreg free
  3877  001FBC  C00B  F016         	movff	?_colorclick_readBlue,colorclick_readColour@current+4
  3878  001FC0  C00C  F017         	movff	?_colorclick_readBlue+1,colorclick_readColour@current+5
  3879                           
  3880                           ;color_click.c: 174:     current.C = colorclick_readClear();
  3881  001FC4  EC36  F00F         	call	_colorclick_readClear	;wreg free
  3882  001FC8  C00B  F018         	movff	?_colorclick_readClear,colorclick_readColour@current+6
  3883  001FCC  C00C  F019         	movff	?_colorclick_readClear+1,colorclick_readColour@current+7
  3884  001FD0                     
  3885                           ;color_click.c: 176:     return current;
  3886  001FD0  EE20  F012         	lfsr	2,colorclick_readColour@current
  3887  001FD4  EE00  F012         	lfsr	0,?_colorclick_readColour
  3888  001FD8  0E07               	movlw	7
  3889  001FDA                     u1641:
  3890  001FDA  CFDB FFEB          	movff	plusw2,plusw0
  3891  001FDE  06E8               	decf	wreg,f,c
  3892  001FE0  E2FC               	bc	u1641
  3893  001FE2  0012               	return		;funcret
  3894  001FE4                     __end_of_colorclick_readColour:
  3895                           	callstack 0
  3896                           
  3897 ;; *************** function _colorclick_readRed *****************
  3898 ;; Defined at:
  3899 ;;		line 94 in file "color_click.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  tmp             2   15[COMRAM] unsigned int 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  2   10[COMRAM] unsigned int 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3914 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;Total ram usage:        7 bytes
  3918 ;; Hardware stack levels used: 1
  3919 ;; Hardware stack levels required when called: 9
  3920 ;; This function calls:
  3921 ;;		_I2C_2_Master_Read
  3922 ;;		_I2C_2_Master_RepStart
  3923 ;;		_I2C_2_Master_Start
  3924 ;;		_I2C_2_Master_Stop
  3925 ;;		_I2C_2_Master_Write
  3926 ;; This function is called by:
  3927 ;;		_colorclick_readColour
  3928 ;;		_read_card
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text23
  3933  001DCC                     __ptext23:
  3934                           	callstack 0
  3935  001DCC                     _colorclick_readRed:
  3936                           	callstack 20
  3937  001DCC                     
  3938                           ;color_click.c: 96:  unsigned int tmp;;color_click.c: 97:  I2C_2_Master_Start();
  3939  001DCC  ECAA  F011         	call	_I2C_2_Master_Start	;wreg free
  3940                           
  3941                           ;color_click.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  3942  001DD0  0E52               	movlw	82
  3943  001DD2  EC94  F011         	call	_I2C_2_Master_Write
  3944                           
  3945                           ;color_click.c: 99:  I2C_2_Master_Write(0xA0 | 0x16);
  3946  001DD6  0EB6               	movlw	182
  3947  001DD8  EC94  F011         	call	_I2C_2_Master_Write
  3948                           
  3949                           ;color_click.c: 100:  I2C_2_Master_RepStart();
  3950  001DDC  ECA0  F011         	call	_I2C_2_Master_RepStart	;wreg free
  3951                           
  3952                           ;color_click.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  3953  001DE0  0E53               	movlw	83
  3954  001DE2  EC94  F011         	call	_I2C_2_Master_Write
  3955                           
  3956                           ;color_click.c: 102:  tmp=I2C_2_Master_Read(1);
  3957  001DE6  0E01               	movlw	1
  3958  001DE8  ECF2  F00F         	call	_I2C_2_Master_Read
  3959  001DEC  6E0D               	movwf	??_colorclick_readRed^0,c
  3960  001DEE  500D               	movf	??_colorclick_readRed^0,w,c
  3961  001DF0  6E10               	movwf	colorclick_readRed@tmp^0,c
  3962  001DF2  6A11               	clrf	(colorclick_readRed@tmp+1)^0,c
  3963                           
  3964                           ;color_click.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3965  001DF4  0E00               	movlw	0
  3966  001DF6  ECF2  F00F         	call	_I2C_2_Master_Read
  3967  001DFA  6E0D               	movwf	??_colorclick_readRed^0,c
  3968  001DFC  500D               	movf	??_colorclick_readRed^0,w,c
  3969  001DFE  6E0F               	movwf	(??_colorclick_readRed+2)^0,c
  3970  001E00  6A0E               	clrf	(??_colorclick_readRed+1)^0,c
  3971  001E02  5010               	movf	colorclick_readRed@tmp^0,w,c
  3972  001E04  100E               	iorwf	(??_colorclick_readRed+1)^0,w,c
  3973  001E06  6E10               	movwf	colorclick_readRed@tmp^0,c
  3974  001E08  5011               	movf	(colorclick_readRed@tmp+1)^0,w,c
  3975  001E0A  100F               	iorwf	(??_colorclick_readRed+2)^0,w,c
  3976  001E0C  6E11               	movwf	(colorclick_readRed@tmp+1)^0,c
  3977                           
  3978                           ;color_click.c: 104:  I2C_2_Master_Stop();
  3979  001E0E  ECA5  F011         	call	_I2C_2_Master_Stop	;wreg free
  3980  001E12                     
  3981                           ;color_click.c: 105:  return tmp;
  3982  001E12  C010  F00B         	movff	colorclick_readRed@tmp,?_colorclick_readRed
  3983  001E16  C011  F00C         	movff	colorclick_readRed@tmp+1,?_colorclick_readRed+1
  3984  001E1A  0012               	return		;funcret
  3985  001E1C                     __end_of_colorclick_readRed:
  3986                           	callstack 0
  3987                           
  3988 ;; *************** function _colorclick_readGreen *****************
  3989 ;; Defined at:
  3990 ;;		line 113 in file "color_click.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  tmp             2   15[COMRAM] unsigned int 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  2   10[COMRAM] unsigned int 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4005 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4006 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4007 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;Total ram usage:        7 bytes
  4009 ;; Hardware stack levels used: 1
  4010 ;; Hardware stack levels required when called: 9
  4011 ;; This function calls:
  4012 ;;		_I2C_2_Master_Read
  4013 ;;		_I2C_2_Master_RepStart
  4014 ;;		_I2C_2_Master_Start
  4015 ;;		_I2C_2_Master_Stop
  4016 ;;		_I2C_2_Master_Write
  4017 ;; This function is called by:
  4018 ;;		_colorclick_readColour
  4019 ;;		_read_card
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text24
  4024  001E1C                     __ptext24:
  4025                           	callstack 0
  4026  001E1C                     _colorclick_readGreen:
  4027                           	callstack 20
  4028  001E1C                     
  4029                           ;color_click.c: 115:  unsigned int tmp;;color_click.c: 116:  I2C_2_Master_Start();
  4030  001E1C  ECAA  F011         	call	_I2C_2_Master_Start	;wreg free
  4031                           
  4032                           ;color_click.c: 117:  I2C_2_Master_Write(0x52 | 0x00);
  4033  001E20  0E52               	movlw	82
  4034  001E22  EC94  F011         	call	_I2C_2_Master_Write
  4035                           
  4036                           ;color_click.c: 118:  I2C_2_Master_Write(0xA0 | 0x18);
  4037  001E26  0EB8               	movlw	184
  4038  001E28  EC94  F011         	call	_I2C_2_Master_Write
  4039                           
  4040                           ;color_click.c: 119:  I2C_2_Master_RepStart();
  4041  001E2C  ECA0  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4042                           
  4043                           ;color_click.c: 120:  I2C_2_Master_Write(0x52 | 0x01);
  4044  001E30  0E53               	movlw	83
  4045  001E32  EC94  F011         	call	_I2C_2_Master_Write
  4046                           
  4047                           ;color_click.c: 121:  tmp=I2C_2_Master_Read(1);
  4048  001E36  0E01               	movlw	1
  4049  001E38  ECF2  F00F         	call	_I2C_2_Master_Read
  4050  001E3C  6E0D               	movwf	??_colorclick_readGreen^0,c
  4051  001E3E  500D               	movf	??_colorclick_readGreen^0,w,c
  4052  001E40  6E10               	movwf	colorclick_readGreen@tmp^0,c
  4053  001E42  6A11               	clrf	(colorclick_readGreen@tmp+1)^0,c
  4054                           
  4055                           ;color_click.c: 122:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4056  001E44  0E00               	movlw	0
  4057  001E46  ECF2  F00F         	call	_I2C_2_Master_Read
  4058  001E4A  6E0D               	movwf	??_colorclick_readGreen^0,c
  4059  001E4C  500D               	movf	??_colorclick_readGreen^0,w,c
  4060  001E4E  6E0F               	movwf	(??_colorclick_readGreen+2)^0,c
  4061  001E50  6A0E               	clrf	(??_colorclick_readGreen+1)^0,c
  4062  001E52  5010               	movf	colorclick_readGreen@tmp^0,w,c
  4063  001E54  100E               	iorwf	(??_colorclick_readGreen+1)^0,w,c
  4064  001E56  6E10               	movwf	colorclick_readGreen@tmp^0,c
  4065  001E58  5011               	movf	(colorclick_readGreen@tmp+1)^0,w,c
  4066  001E5A  100F               	iorwf	(??_colorclick_readGreen+2)^0,w,c
  4067  001E5C  6E11               	movwf	(colorclick_readGreen@tmp+1)^0,c
  4068                           
  4069                           ;color_click.c: 123:  I2C_2_Master_Stop();
  4070  001E5E  ECA5  F011         	call	_I2C_2_Master_Stop	;wreg free
  4071  001E62                     
  4072                           ;color_click.c: 124:  return tmp;
  4073  001E62  C010  F00B         	movff	colorclick_readGreen@tmp,?_colorclick_readGreen
  4074  001E66  C011  F00C         	movff	colorclick_readGreen@tmp+1,?_colorclick_readGreen+1
  4075  001E6A  0012               	return		;funcret
  4076  001E6C                     __end_of_colorclick_readGreen:
  4077                           	callstack 0
  4078                           
  4079 ;; *************** function _colorclick_readClear *****************
  4080 ;; Defined at:
  4081 ;;		line 151 in file "color_click.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  tmp             2   15[COMRAM] unsigned int 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  2   10[COMRAM] unsigned int 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4097 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;Total ram usage:        7 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 9
  4102 ;; This function calls:
  4103 ;;		_I2C_2_Master_Read
  4104 ;;		_I2C_2_Master_RepStart
  4105 ;;		_I2C_2_Master_Start
  4106 ;;		_I2C_2_Master_Stop
  4107 ;;		_I2C_2_Master_Write
  4108 ;; This function is called by:
  4109 ;;		_colorclick_readColour
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text25
  4114  001E6C                     __ptext25:
  4115                           	callstack 0
  4116  001E6C                     _colorclick_readClear:
  4117                           	callstack 20
  4118  001E6C                     
  4119                           ;color_click.c: 153:  unsigned int tmp;;color_click.c: 154:  I2C_2_Master_Start();
  4120  001E6C  ECAA  F011         	call	_I2C_2_Master_Start	;wreg free
  4121                           
  4122                           ;color_click.c: 155:  I2C_2_Master_Write(0x52 | 0x00);
  4123  001E70  0E52               	movlw	82
  4124  001E72  EC94  F011         	call	_I2C_2_Master_Write
  4125                           
  4126                           ;color_click.c: 156:  I2C_2_Master_Write(0xA0 | 0x14);
  4127  001E76  0EB4               	movlw	180
  4128  001E78  EC94  F011         	call	_I2C_2_Master_Write
  4129                           
  4130                           ;color_click.c: 157:  I2C_2_Master_RepStart();
  4131  001E7C  ECA0  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4132                           
  4133                           ;color_click.c: 158:  I2C_2_Master_Write(0x52 | 0x01);
  4134  001E80  0E53               	movlw	83
  4135  001E82  EC94  F011         	call	_I2C_2_Master_Write
  4136                           
  4137                           ;color_click.c: 159:  tmp=I2C_2_Master_Read(1);
  4138  001E86  0E01               	movlw	1
  4139  001E88  ECF2  F00F         	call	_I2C_2_Master_Read
  4140  001E8C  6E0D               	movwf	??_colorclick_readClear^0,c
  4141  001E8E  500D               	movf	??_colorclick_readClear^0,w,c
  4142  001E90  6E10               	movwf	colorclick_readClear@tmp^0,c
  4143  001E92  6A11               	clrf	(colorclick_readClear@tmp+1)^0,c
  4144                           
  4145                           ;color_click.c: 160:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4146  001E94  0E00               	movlw	0
  4147  001E96  ECF2  F00F         	call	_I2C_2_Master_Read
  4148  001E9A  6E0D               	movwf	??_colorclick_readClear^0,c
  4149  001E9C  500D               	movf	??_colorclick_readClear^0,w,c
  4150  001E9E  6E0F               	movwf	(??_colorclick_readClear+2)^0,c
  4151  001EA0  6A0E               	clrf	(??_colorclick_readClear+1)^0,c
  4152  001EA2  5010               	movf	colorclick_readClear@tmp^0,w,c
  4153  001EA4  100E               	iorwf	(??_colorclick_readClear+1)^0,w,c
  4154  001EA6  6E10               	movwf	colorclick_readClear@tmp^0,c
  4155  001EA8  5011               	movf	(colorclick_readClear@tmp+1)^0,w,c
  4156  001EAA  100F               	iorwf	(??_colorclick_readClear+2)^0,w,c
  4157  001EAC  6E11               	movwf	(colorclick_readClear@tmp+1)^0,c
  4158                           
  4159                           ;color_click.c: 161:  I2C_2_Master_Stop();
  4160  001EAE  ECA5  F011         	call	_I2C_2_Master_Stop	;wreg free
  4161  001EB2                     
  4162                           ;color_click.c: 162:  return tmp;
  4163  001EB2  C010  F00B         	movff	colorclick_readClear@tmp,?_colorclick_readClear
  4164  001EB6  C011  F00C         	movff	colorclick_readClear@tmp+1,?_colorclick_readClear+1
  4165  001EBA  0012               	return		;funcret
  4166  001EBC                     __end_of_colorclick_readClear:
  4167                           	callstack 0
  4168                           
  4169 ;; *************** function _colorclick_readBlue *****************
  4170 ;; Defined at:
  4171 ;;		line 132 in file "color_click.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  tmp             2   15[COMRAM] unsigned int 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  2   10[COMRAM] unsigned int 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4187 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;Total ram usage:        7 bytes
  4190 ;; Hardware stack levels used: 1
  4191 ;; Hardware stack levels required when called: 9
  4192 ;; This function calls:
  4193 ;;		_I2C_2_Master_Read
  4194 ;;		_I2C_2_Master_RepStart
  4195 ;;		_I2C_2_Master_Start
  4196 ;;		_I2C_2_Master_Stop
  4197 ;;		_I2C_2_Master_Write
  4198 ;; This function is called by:
  4199 ;;		_colorclick_readColour
  4200 ;;		_read_card
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text26
  4205  001EBC                     __ptext26:
  4206                           	callstack 0
  4207  001EBC                     _colorclick_readBlue:
  4208                           	callstack 20
  4209  001EBC                     
  4210                           ;color_click.c: 134:  unsigned int tmp;;color_click.c: 135:  I2C_2_Master_Start();
  4211  001EBC  ECAA  F011         	call	_I2C_2_Master_Start	;wreg free
  4212                           
  4213                           ;color_click.c: 136:  I2C_2_Master_Write(0x52 | 0x00);
  4214  001EC0  0E52               	movlw	82
  4215  001EC2  EC94  F011         	call	_I2C_2_Master_Write
  4216                           
  4217                           ;color_click.c: 137:  I2C_2_Master_Write(0xA0 | 0x1A);
  4218  001EC6  0EBA               	movlw	186
  4219  001EC8  EC94  F011         	call	_I2C_2_Master_Write
  4220                           
  4221                           ;color_click.c: 138:  I2C_2_Master_RepStart();
  4222  001ECC  ECA0  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4223                           
  4224                           ;color_click.c: 139:  I2C_2_Master_Write(0x52 | 0x01);
  4225  001ED0  0E53               	movlw	83
  4226  001ED2  EC94  F011         	call	_I2C_2_Master_Write
  4227                           
  4228                           ;color_click.c: 140:  tmp=I2C_2_Master_Read(1);
  4229  001ED6  0E01               	movlw	1
  4230  001ED8  ECF2  F00F         	call	_I2C_2_Master_Read
  4231  001EDC  6E0D               	movwf	??_colorclick_readBlue^0,c
  4232  001EDE  500D               	movf	??_colorclick_readBlue^0,w,c
  4233  001EE0  6E10               	movwf	colorclick_readBlue@tmp^0,c
  4234  001EE2  6A11               	clrf	(colorclick_readBlue@tmp+1)^0,c
  4235                           
  4236                           ;color_click.c: 141:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4237  001EE4  0E00               	movlw	0
  4238  001EE6  ECF2  F00F         	call	_I2C_2_Master_Read
  4239  001EEA  6E0D               	movwf	??_colorclick_readBlue^0,c
  4240  001EEC  500D               	movf	??_colorclick_readBlue^0,w,c
  4241  001EEE  6E0F               	movwf	(??_colorclick_readBlue+2)^0,c
  4242  001EF0  6A0E               	clrf	(??_colorclick_readBlue+1)^0,c
  4243  001EF2  5010               	movf	colorclick_readBlue@tmp^0,w,c
  4244  001EF4  100E               	iorwf	(??_colorclick_readBlue+1)^0,w,c
  4245  001EF6  6E10               	movwf	colorclick_readBlue@tmp^0,c
  4246  001EF8  5011               	movf	(colorclick_readBlue@tmp+1)^0,w,c
  4247  001EFA  100F               	iorwf	(??_colorclick_readBlue+2)^0,w,c
  4248  001EFC  6E11               	movwf	(colorclick_readBlue@tmp+1)^0,c
  4249                           
  4250                           ;color_click.c: 142:  I2C_2_Master_Stop();
  4251  001EFE  ECA5  F011         	call	_I2C_2_Master_Stop	;wreg free
  4252  001F02                     
  4253                           ;color_click.c: 143:  return tmp;
  4254  001F02  C010  F00B         	movff	colorclick_readBlue@tmp,?_colorclick_readBlue
  4255  001F06  C011  F00C         	movff	colorclick_readBlue@tmp+1,?_colorclick_readBlue+1
  4256  001F0A  0012               	return		;funcret
  4257  001F0C                     __end_of_colorclick_readBlue:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function _I2C_2_Master_RepStart *****************
  4261 ;; Defined at:
  4262 ;;		line 49 in file "i2c.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;		None
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;		None
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, status,2, status,0, cstack
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;Total ram usage:        0 bytes
  4281 ;; Hardware stack levels used: 1
  4282 ;; Hardware stack levels required when called: 8
  4283 ;; This function calls:
  4284 ;;		_I2C_2_Master_Idle
  4285 ;; This function is called by:
  4286 ;;		_colorclick_readRed
  4287 ;;		_colorclick_readGreen
  4288 ;;		_colorclick_readBlue
  4289 ;;		_colorclick_readClear
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text27
  4294  002340                     __ptext27:
  4295                           	callstack 0
  4296  002340                     _I2C_2_Master_RepStart:
  4297                           	callstack 20
  4298  002340                     
  4299                           ;i2c.c: 51:   I2C_2_Master_Idle();
  4300  002340  ECBA  F010         	call	_I2C_2_Master_Idle	;wreg free
  4301  002344                     
  4302                           ;i2c.c: 52:   SSP2CON2bits.RSEN = 1;
  4303  002344  010E               	movlb	14	; () banked
  4304  002346  83DA               	bsf	218,1,b	;volatile
  4305  002348                     
  4306                           ; BSR set to: 14
  4307  002348  0012               	return		;funcret
  4308  00234A                     __end_of_I2C_2_Master_RepStart:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function _I2C_2_Master_Read *****************
  4312 ;; Defined at:
  4313 ;;		line 79 in file "i2c.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  ack             1    wreg     unsigned char 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  ack             1    8[COMRAM] unsigned char 
  4318 ;;  tmp             1    9[COMRAM] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      unsigned char 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;Total ram usage:        3 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 8
  4335 ;; This function calls:
  4336 ;;		_I2C_2_Master_Idle
  4337 ;; This function is called by:
  4338 ;;		_colorclick_readRed
  4339 ;;		_colorclick_readGreen
  4340 ;;		_colorclick_readBlue
  4341 ;;		_colorclick_readClear
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text28
  4346  001FE4                     __ptext28:
  4347                           	callstack 0
  4348  001FE4                     _I2C_2_Master_Read:
  4349                           	callstack 20
  4350                           
  4351                           ; BSR set to: 14
  4352                           ;incstack = 0
  4353                           ;I2C_2_Master_Read@ack stored from wreg
  4354  001FE4  6E09               	movwf	I2C_2_Master_Read@ack^0,c
  4355  001FE6                     
  4356                           ;i2c.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 80: {;i2c.c: 81:  
      +                           unsigned char tmp;;i2c.c: 82:   I2C_2_Master_Idle();
  4357  001FE6  ECBA  F010         	call	_I2C_2_Master_Idle	;wreg free
  4358  001FEA                     
  4359                           ;i2c.c: 83:   SSP2CON2bits.RCEN = 1;
  4360  001FEA  010E               	movlb	14	; () banked
  4361  001FEC  87DA               	bsf	218,3,b	;volatile
  4362                           
  4363                           ;i2c.c: 84:   I2C_2_Master_Idle();
  4364  001FEE  ECBA  F010         	call	_I2C_2_Master_Idle	;wreg free
  4365  001FF2                     
  4366                           ;i2c.c: 85:   tmp = SSP2BUF;
  4367  001FF2  CED5 F00A          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4368                           
  4369                           ;i2c.c: 86:   I2C_2_Master_Idle();
  4370  001FF6  ECBA  F010         	call	_I2C_2_Master_Idle	;wreg free
  4371  001FFA                     
  4372                           ;i2c.c: 87:   SSP2CON2bits.ACKDT = !ack;
  4373  001FFA  5009               	movf	I2C_2_Master_Read@ack^0,w,c
  4374  001FFC  B4D8               	btfsc	status,2,c
  4375  001FFE  EF03  F010         	goto	u1431
  4376  002002  EF07  F010         	goto	u1430
  4377  002006                     u1431:
  4378  002006  6A08               	clrf	??_I2C_2_Master_Read^0,c
  4379  002008  2A08               	incf	??_I2C_2_Master_Read^0,f,c
  4380  00200A  EF08  F010         	goto	u1448
  4381  00200E                     u1430:
  4382  00200E  6A08               	clrf	??_I2C_2_Master_Read^0,c
  4383  002010                     u1448:
  4384  002010  3A08               	swapf	??_I2C_2_Master_Read^0,f,c
  4385  002012  4608               	rlncf	??_I2C_2_Master_Read^0,f,c
  4386  002014  010E               	movlb	14	; () banked
  4387  002016  51DA               	movf	218,w,b	;volatile
  4388  002018  1808               	xorwf	??_I2C_2_Master_Read^0,w,c
  4389  00201A  0BDF               	andlw	-33
  4390  00201C  1808               	xorwf	??_I2C_2_Master_Read^0,w,c
  4391  00201E  6FDA               	movwf	218,b	;volatile
  4392  002020                     
  4393                           ; BSR set to: 14
  4394                           ;i2c.c: 88:   SSP2CON2bits.ACKEN = 1;
  4395  002020  89DA               	bsf	218,4,b	;volatile
  4396  002022                     
  4397                           ; BSR set to: 14
  4398                           ;i2c.c: 89:   return tmp;
  4399  002022  500A               	movf	I2C_2_Master_Read@tmp^0,w,c
  4400  002024                     
  4401                           ; BSR set to: 14
  4402  002024  0012               	return		;funcret
  4403  002026                     __end_of_I2C_2_Master_Read:
  4404                           	callstack 0
  4405                           
  4406 ;; *************** function _colorclick_init *****************
  4407 ;; Defined at:
  4408 ;;		line 17 in file "color_click.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0, cstack
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;Total ram usage:        1 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; Hardware stack levels required when called: 10
  4429 ;; This function calls:
  4430 ;;		_I2C_2_Master_Init
  4431 ;;		_colorclick_toggleClearLED
  4432 ;;		_colorclick_writetoaddr
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text29
  4439  002066                     __ptext29:
  4440                           	callstack 0
  4441  002066                     _colorclick_init:
  4442                           	callstack 20
  4443  002066                     
  4444                           ;color_click.c: 20:     I2C_2_Master_Init();
  4445  002066  ECA5  F010         	call	_I2C_2_Master_Init	;wreg free
  4446  00206A                     
  4447                           ;color_click.c: 23:   colorclick_writetoaddr(0x00, 0x01);
  4448  00206A  0E01               	movlw	1
  4449  00206C  6E09               	movwf	colorclick_writetoaddr@value^0,c
  4450  00206E  0E00               	movlw	0
  4451  002070  EC27  F011         	call	_colorclick_writetoaddr
  4452  002074                     
  4453                           ;color_click.c: 24:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4454  002074  0E3F               	movlw	63
  4455  002076  6E0B               	movwf	??_colorclick_init^0,c
  4456  002078  0E55               	movlw	85
  4457  00207A                     u2487:
  4458  00207A  2EE8               	decfsz	wreg,f,c
  4459  00207C  D7FE               	bra	u2487
  4460  00207E  2E0B               	decfsz	??_colorclick_init^0,f,c
  4461  002080  D7FC               	bra	u2487
  4462  002082  F000               	nop	
  4463  002084                     
  4464                           ;color_click.c: 27:  colorclick_writetoaddr(0x00, 0x03);
  4465  002084  0E03               	movlw	3
  4466  002086  6E09               	movwf	colorclick_writetoaddr@value^0,c
  4467  002088  0E00               	movlw	0
  4468  00208A  EC27  F011         	call	_colorclick_writetoaddr
  4469  00208E                     
  4470                           ;color_click.c: 30:  colorclick_writetoaddr(0x01, 0xD5);
  4471  00208E  0ED5               	movlw	213
  4472  002090  6E09               	movwf	colorclick_writetoaddr@value^0,c
  4473  002092  0E01               	movlw	1
  4474  002094  EC27  F011         	call	_colorclick_writetoaddr
  4475  002098                     
  4476                           ;color_click.c: 33:     TRISGbits.TRISG1 = 0;
  4477  002098  9287               	bcf	135,1,c	;volatile
  4478  00209A                     
  4479                           ;color_click.c: 34:     TRISAbits.TRISA4 = 0;
  4480  00209A  9881               	bcf	129,4,c	;volatile
  4481  00209C                     
  4482                           ;color_click.c: 35:     TRISFbits.TRISF7 = 0;
  4483  00209C  9E86               	bcf	134,7,c	;volatile
  4484  00209E                     
  4485                           ;color_click.c: 38:     colorclick_toggleClearLED(1);
  4486  00209E  0E01               	movlw	1
  4487  0020A0  ECF5  F010         	call	_colorclick_toggleClearLED
  4488  0020A4  0012               	return		;funcret
  4489  0020A6                     __end_of_colorclick_init:
  4490                           	callstack 0
  4491                           
  4492 ;; *************** function _colorclick_writetoaddr *****************
  4493 ;; Defined at:
  4494 ;;		line 80 in file "color_click.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  address         1    wreg     unsigned char 
  4497 ;;  value           1    8[COMRAM] unsigned char 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  address         1    9[COMRAM] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4509 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4513 ;;Total ram usage:        2 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; Hardware stack levels required when called: 9
  4516 ;; This function calls:
  4517 ;;		_I2C_2_Master_Start
  4518 ;;		_I2C_2_Master_Stop
  4519 ;;		_I2C_2_Master_Write
  4520 ;; This function is called by:
  4521 ;;		_colorclick_init
  4522 ;;		_colorclick_int_init
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text30
  4527  00224E                     __ptext30:
  4528                           	callstack 0
  4529  00224E                     _colorclick_writetoaddr:
  4530                           	callstack 18
  4531                           
  4532                           ;incstack = 0
  4533                           ;colorclick_writetoaddr@address stored from wreg
  4534  00224E  6E0A               	movwf	colorclick_writetoaddr@address^0,c
  4535  002250                     
  4536                           ;color_click.c: 80: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           81: {;color_click.c: 82:     I2C_2_Master_Start();
  4537  002250  ECAA  F011         	call	_I2C_2_Master_Start	;wreg free
  4538                           
  4539                           ;color_click.c: 83:     I2C_2_Master_Write(0x52 | 0x00);
  4540  002254  0E52               	movlw	82
  4541  002256  EC94  F011         	call	_I2C_2_Master_Write
  4542                           
  4543                           ;color_click.c: 84:     I2C_2_Master_Write(0x80 | address);
  4544  00225A  500A               	movf	colorclick_writetoaddr@address^0,w,c
  4545  00225C  0980               	iorlw	128
  4546  00225E  EC94  F011         	call	_I2C_2_Master_Write
  4547                           
  4548                           ;color_click.c: 85:     I2C_2_Master_Write(value);
  4549  002262  5009               	movf	colorclick_writetoaddr@value^0,w,c
  4550  002264  EC94  F011         	call	_I2C_2_Master_Write
  4551                           
  4552                           ;color_click.c: 86:     I2C_2_Master_Stop();
  4553  002268  ECA5  F011         	call	_I2C_2_Master_Stop	;wreg free
  4554  00226C  0012               	return		;funcret
  4555  00226E                     __end_of_colorclick_writetoaddr:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function _I2C_2_Master_Write *****************
  4559 ;; Defined at:
  4560 ;;		line 69 in file "i2c.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  data_byte       1    wreg     unsigned char 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  data_byte       1    7[COMRAM] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;Total ram usage:        1 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 8
  4581 ;; This function calls:
  4582 ;;		_I2C_2_Master_Idle
  4583 ;; This function is called by:
  4584 ;;		_colorclick_writetoaddr
  4585 ;;		_colorclick_readRed
  4586 ;;		_colorclick_readGreen
  4587 ;;		_colorclick_readBlue
  4588 ;;		_colorclick_readClear
  4589 ;;		_colorclick_int_clear
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text31
  4594  002328                     __ptext31:
  4595                           	callstack 0
  4596  002328                     _I2C_2_Master_Write:
  4597                           	callstack 18
  4598                           
  4599                           ;incstack = 0
  4600                           ;I2C_2_Master_Write@data_byte stored from wreg
  4601  002328  6E08               	movwf	I2C_2_Master_Write@data_byte^0,c
  4602  00232A                     
  4603                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  4604  00232A  ECBA  F010         	call	_I2C_2_Master_Idle	;wreg free
  4605  00232E                     
  4606                           ;i2c.c: 72:   SSP2BUF = data_byte;
  4607  00232E  C008  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4608  002332  0012               	return		;funcret
  4609  002334                     __end_of_I2C_2_Master_Write:
  4610                           	callstack 0
  4611                           
  4612 ;; *************** function _I2C_2_Master_Stop *****************
  4613 ;; Defined at:
  4614 ;;		line 59 in file "i2c.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4632 ;;Total ram usage:        0 bytes
  4633 ;; Hardware stack levels used: 1
  4634 ;; Hardware stack levels required when called: 8
  4635 ;; This function calls:
  4636 ;;		_I2C_2_Master_Idle
  4637 ;; This function is called by:
  4638 ;;		_colorclick_writetoaddr
  4639 ;;		_colorclick_readRed
  4640 ;;		_colorclick_readGreen
  4641 ;;		_colorclick_readBlue
  4642 ;;		_colorclick_readClear
  4643 ;;		_colorclick_int_clear
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text32
  4648  00234A                     __ptext32:
  4649                           	callstack 0
  4650  00234A                     _I2C_2_Master_Stop:
  4651                           	callstack 18
  4652  00234A                     
  4653                           ;i2c.c: 61:   I2C_2_Master_Idle();
  4654  00234A  ECBA  F010         	call	_I2C_2_Master_Idle	;wreg free
  4655  00234E                     
  4656                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  4657  00234E  010E               	movlb	14	; () banked
  4658  002350  85DA               	bsf	218,2,b	;volatile
  4659  002352                     
  4660                           ; BSR set to: 14
  4661  002352  0012               	return		;funcret
  4662  002354                     __end_of_I2C_2_Master_Stop:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _I2C_2_Master_Start *****************
  4666 ;; Defined at:
  4667 ;;		line 39 in file "i2c.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;Total ram usage:        0 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 8
  4688 ;; This function calls:
  4689 ;;		_I2C_2_Master_Idle
  4690 ;; This function is called by:
  4691 ;;		_colorclick_writetoaddr
  4692 ;;		_colorclick_readRed
  4693 ;;		_colorclick_readGreen
  4694 ;;		_colorclick_readBlue
  4695 ;;		_colorclick_readClear
  4696 ;;		_colorclick_int_clear
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text33
  4701  002354                     __ptext33:
  4702                           	callstack 0
  4703  002354                     _I2C_2_Master_Start:
  4704                           	callstack 18
  4705  002354                     
  4706                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4707  002354  ECBA  F010         	call	_I2C_2_Master_Idle	;wreg free
  4708  002358                     
  4709                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  4710  002358  010E               	movlb	14	; () banked
  4711  00235A  81DA               	bsf	218,0,b	;volatile
  4712  00235C                     
  4713                           ; BSR set to: 14
  4714  00235C  0012               	return		;funcret
  4715  00235E                     __end_of_I2C_2_Master_Start:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function _I2C_2_Master_Idle *****************
  4719 ;; Defined at:
  4720 ;;		line 30 in file "i2c.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;		None
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;		None
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg, status,2, status,0
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;Total ram usage:        1 bytes
  4739 ;; Hardware stack levels used: 1
  4740 ;; Hardware stack levels required when called: 7
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_I2C_2_Master_Start
  4745 ;;		_I2C_2_Master_RepStart
  4746 ;;		_I2C_2_Master_Stop
  4747 ;;		_I2C_2_Master_Write
  4748 ;;		_I2C_2_Master_Read
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text34
  4753  002174                     __ptext34:
  4754                           	callstack 0
  4755  002174                     _I2C_2_Master_Idle:
  4756                           	callstack 18
  4757  002174                     l30:
  4758  002174  010E               	movlb	14	; () banked
  4759  002176  B5D8               	btfsc	216,2,b	;volatile
  4760  002178  EFC0  F010         	goto	u1041
  4761  00217C  EFC2  F010         	goto	u1040
  4762  002180                     u1041:
  4763  002180  EFBA  F010         	goto	l30
  4764  002184                     u1040:
  4765  002184                     
  4766                           ; BSR set to: 14
  4767  002184  CEDA F007          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4768  002188  0E1F               	movlw	31
  4769  00218A  1607               	andwf	??_I2C_2_Master_Idle^0,f,c
  4770  00218C  A4D8               	btfss	status,2,c
  4771  00218E  EFCB  F010         	goto	u1051
  4772  002192  EFCD  F010         	goto	u1050
  4773  002196                     u1051:
  4774  002196  EFBA  F010         	goto	l30
  4775  00219A                     u1050:
  4776  00219A                     
  4777                           ; BSR set to: 14
  4778  00219A  0012               	return		;funcret
  4779  00219C                     __end_of_I2C_2_Master_Idle:
  4780                           	callstack 0
  4781                           
  4782 ;; *************** function _colorclick_toggleClearLED *****************
  4783 ;; Defined at:
  4784 ;;		line 67 in file "color_click.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  toggle          1    wreg     unsigned char 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  toggle          1    6[COMRAM] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;Total ram usage:        1 bytes
  4803 ;; Hardware stack levels used: 1
  4804 ;; Hardware stack levels required when called: 7
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_main
  4809 ;;		_colorclick_init
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text35
  4814  0021EA                     __ptext35:
  4815                           	callstack 0
  4816  0021EA                     _colorclick_toggleClearLED:
  4817                           	callstack 23
  4818                           
  4819                           ; BSR set to: 14
  4820                           ;incstack = 0
  4821                           ;colorclick_toggleClearLED@toggle stored from wreg
  4822  0021EA  6E07               	movwf	colorclick_toggleClearLED@toggle^0,c
  4823  0021EC                     
  4824                           ;color_click.c: 67: void colorclick_toggleClearLED(unsigned char toggle);color_click.c: 
      +                          68: {;color_click.c: 69:     LATGbits.LATG1 = toggle;
  4825  0021EC  B007               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  4826  0021EE  D002               	bra	u1555
  4827  0021F0  927F               	bcf	127,1,c	;volatile
  4828  0021F2  D001               	bra	u1556
  4829  0021F4                     u1555:
  4830  0021F4  827F               	bsf	127,1,c	;volatile
  4831  0021F6                     u1556:
  4832                           
  4833                           ;color_click.c: 70:     LATFbits.LATF7 = toggle;
  4834  0021F6  B007               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  4835  0021F8  D002               	bra	u1565
  4836  0021FA  9E7E               	bcf	126,7,c	;volatile
  4837  0021FC  D001               	bra	u1566
  4838  0021FE                     u1565:
  4839  0021FE  8E7E               	bsf	126,7,c	;volatile
  4840  002200                     u1566:
  4841                           
  4842                           ;color_click.c: 71:     LATAbits.LATA4 = toggle;
  4843  002200  B007               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  4844  002202  D002               	bra	u1575
  4845  002204  9879               	bcf	121,4,c	;volatile
  4846  002206  D001               	bra	u1576
  4847  002208                     u1575:
  4848  002208  8879               	bsf	121,4,c	;volatile
  4849  00220A                     u1576:
  4850  00220A  0012               	return		;funcret
  4851  00220C                     __end_of_colorclick_toggleClearLED:
  4852                           	callstack 0
  4853                           
  4854 ;; *************** function _I2C_2_Master_Init *****************
  4855 ;; Defined at:
  4856 ;;		line 8 in file "i2c.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;Total ram usage:        0 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; Hardware stack levels required when called: 7
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_colorclick_init
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text36
  4885  00214A                     __ptext36:
  4886                           	callstack 0
  4887  00214A                     _I2C_2_Master_Init:
  4888                           	callstack 22
  4889  00214A                     
  4890                           ;i2c.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  4891  00214A  010E               	movlb	14	; () banked
  4892  00214C  51D9               	movf	217,w,b	;volatile
  4893  00214E  0BF0               	andlw	-16
  4894  002150  0908               	iorlw	8
  4895  002152  6FD9               	movwf	217,b	;volatile
  4896  002154                     
  4897                           ; BSR set to: 14
  4898                           ;i2c.c: 12:   SSP2CON1bits.SSPEN = 1;
  4899  002154  8BD9               	bsf	217,5,b	;volatile
  4900                           
  4901                           ;i2c.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  4902  002156  0E9F               	movlw	159
  4903  002158  6FD6               	movwf	214,b	;volatile
  4904  00215A                     
  4905                           ; BSR set to: 14
  4906                           ;i2c.c: 16:   TRISDbits.TRISD5 = 1;
  4907  00215A  8A84               	bsf	132,5,c	;volatile
  4908  00215C                     
  4909                           ; BSR set to: 14
  4910                           ;i2c.c: 17:   TRISDbits.TRISD6 = 1;
  4911  00215C  8C84               	bsf	132,6,c	;volatile
  4912  00215E                     
  4913                           ; BSR set to: 14
  4914                           ;i2c.c: 18:   ANSELDbits.ANSELD5=0;
  4915  00215E  9BA7               	bcf	167,5,b	;volatile
  4916  002160                     
  4917                           ; BSR set to: 14
  4918                           ;i2c.c: 19:   ANSELDbits.ANSELD6=0;
  4919  002160  9DA7               	bcf	167,6,b	;volatile
  4920                           
  4921                           ;i2c.c: 20:   SSP2DATPPS=0x1D;
  4922  002162  0E1D               	movlw	29
  4923  002164  6F1D               	movwf	29,b	;volatile
  4924                           
  4925                           ;i2c.c: 21:   SSP2CLKPPS=0x1E;
  4926  002166  0E1E               	movlw	30
  4927  002168  6F1C               	movwf	28,b	;volatile
  4928                           
  4929                           ;i2c.c: 22:   RD5PPS=0x1C;
  4930  00216A  0E1C               	movlw	28
  4931  00216C  6F6F               	movwf	111,b	;volatile
  4932                           
  4933                           ;i2c.c: 23:   RD6PPS=0x1B;
  4934  00216E  0E1B               	movlw	27
  4935  002170  6F70               	movwf	112,b	;volatile
  4936  002172                     
  4937                           ; BSR set to: 14
  4938  002172  0012               	return		;funcret
  4939  002174                     __end_of_I2C_2_Master_Init:
  4940                           	callstack 0
  4941                           
  4942 ;; *************** function _USART4_init *****************
  4943 ;; Defined at:
  4944 ;;		line 7 in file "serial.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used: 1
  4964 ;; Hardware stack levels required when called: 7
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_main
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text37
  4973  00226E                     __ptext37:
  4974                           	callstack 0
  4975  00226E                     _USART4_init:
  4976                           	callstack 23
  4977  00226E                     
  4978                           ;serial.c: 10:     RC0PPS = 0x12;
  4979  00226E  0E12               	movlw	18
  4980  002270  010E               	movlb	14	; () banked
  4981  002272  6F62               	movwf	98,b	;volatile
  4982                           
  4983                           ;serial.c: 11:     RX4PPS = 0x11;
  4984  002274  0E11               	movlw	17
  4985  002276  6F15               	movwf	21,b	;volatile
  4986  002278                     
  4987                           ; BSR set to: 14
  4988                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  4989  002278  8283               	bsf	131,1,c	;volatile
  4990  00227A                     
  4991                           ; BSR set to: 14
  4992                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  4993  00227A  97E9               	bcf	233,3,b	;volatile
  4994  00227C                     
  4995                           ; BSR set to: 14
  4996                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  4997  00227C  95E8               	bcf	232,2,b	;volatile
  4998                           
  4999                           ;serial.c: 16:     SP4BRGL = 51;
  5000  00227E  0E33               	movlw	51
  5001  002280  6FE5               	movwf	229,b	;volatile
  5002                           
  5003                           ;serial.c: 17:     SP4BRGH = 0;
  5004  002282  0E00               	movlw	0
  5005  002284  6FE6               	movwf	230,b	;volatile
  5006  002286                     
  5007                           ; BSR set to: 14
  5008                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  5009  002286  89E7               	bsf	231,4,b	;volatile
  5010  002288                     
  5011                           ; BSR set to: 14
  5012                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  5013  002288  8BE8               	bsf	232,5,b	;volatile
  5014  00228A                     
  5015                           ; BSR set to: 14
  5016                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  5017  00228A  8FE7               	bsf	231,7,b	;volatile
  5018  00228C                     
  5019                           ; BSR set to: 14
  5020  00228C  0012               	return		;funcret
  5021  00228E                     __end_of_USART4_init:
  5022                           	callstack 0
  5023                           
  5024 ;; *************** function _DCmotors_init *****************
  5025 ;; Defined at:
  5026 ;;		line 12 in file "dc_motor.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  PWMperiod       2    6[COMRAM] int 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		wreg, status,2, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;Total ram usage:        2 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; Hardware stack levels required when called: 8
  5047 ;; This function calls:
  5048 ;;		_buggyLEDs_init
  5049 ;;		_clicker2LEDs_init
  5050 ;;		_clicker2buttons_init
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text38
  5057  001F0C                     __ptext38:
  5058                           	callstack 0
  5059  001F0C                     _DCmotors_init:
  5060                           	callstack 22
  5061  001F0C                     
  5062                           ;dc_motor.c: 12: void DCmotors_init(int PWMperiod);dc_motor.c: 13: {;dc_motor.c: 15:    
      +                           T2CONbits.CKPS=0b100;
  5063  001F0C  50BD               	movf	189,w,c	;volatile
  5064  001F0E  0B8F               	andlw	-113
  5065  001F10  0940               	iorlw	64
  5066  001F12  6EBD               	movwf	189,c	;volatile
  5067                           
  5068                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  5069  001F14  0EE0               	movlw	-32
  5070  001F16  16BE               	andwf	190,f,c	;volatile
  5071                           
  5072                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  5073  001F18  50BF               	movf	191,w,c	;volatile
  5074  001F1A  0BF0               	andlw	-16
  5075  001F1C  0901               	iorlw	1
  5076  001F1E  6EBF               	movwf	191,c	;volatile
  5077  001F20                     
  5078                           ;dc_motor.c: 20:     T2PR=PWMperiod;
  5079  001F20  C007  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  5080  001F24                     
  5081                           ;dc_motor.c: 21:     T2CONbits.ON=1;
  5082  001F24  8EBD               	bsf	189,7,c	;volatile
  5083  001F26                     
  5084                           ;dc_motor.c: 24:     TRISEbits.TRISE2=0;
  5085  001F26  9485               	bcf	133,2,c	;volatile
  5086  001F28                     
  5087                           ;dc_motor.c: 25:     TRISEbits.TRISE4=0;
  5088  001F28  9885               	bcf	133,4,c	;volatile
  5089  001F2A                     
  5090                           ;dc_motor.c: 26:     TRISCbits.TRISC7=0;
  5091  001F2A  9E83               	bcf	131,7,c	;volatile
  5092  001F2C                     
  5093                           ;dc_motor.c: 27:     TRISGbits.TRISG6=0;
  5094  001F2C  9C87               	bcf	135,6,c	;volatile
  5095  001F2E                     
  5096                           ;dc_motor.c: 29:     LATEbits.LATE2=0;
  5097  001F2E  947D               	bcf	125,2,c	;volatile
  5098  001F30                     
  5099                           ;dc_motor.c: 30:     LATEbits.LATE4=0;
  5100  001F30  987D               	bcf	125,4,c	;volatile
  5101  001F32                     
  5102                           ;dc_motor.c: 31:     LATCbits.LATC7=0;
  5103  001F32  9E7B               	bcf	123,7,c	;volatile
  5104  001F34                     
  5105                           ;dc_motor.c: 32:     LATGbits.LATG6=0;
  5106  001F34  9C7F               	bcf	127,6,c	;volatile
  5107                           
  5108                           ;dc_motor.c: 34:     PWM6DCH=0;
  5109  001F36  0E00               	movlw	0
  5110  001F38  6EA3               	movwf	163,c	;volatile
  5111                           
  5112                           ;dc_motor.c: 35:     PWM7DCH=0;
  5113  001F3A  0E00               	movlw	0
  5114  001F3C  6EA0               	movwf	160,c	;volatile
  5115  001F3E                     
  5116                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
  5117  001F3E  8EA4               	bsf	164,7,c	;volatile
  5118  001F40                     
  5119                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
  5120  001F40  8EA1               	bsf	161,7,c	;volatile
  5121                           
  5122                           ;dc_motor.c: 40:     RE2PPS=0x0A;
  5123  001F42  0E0A               	movlw	10
  5124  001F44  010E               	movlb	14	; () banked
  5125  001F46  6F74               	movwf	116,b	;volatile
  5126                           
  5127                           ;dc_motor.c: 41:     RC7PPS=0x0B;
  5128  001F48  0E0B               	movlw	11
  5129  001F4A  6F69               	movwf	105,b	;volatile
  5130  001F4C                     
  5131                           ; BSR set to: 14
  5132                           ;dc_motor.c: 44:     clicker2buttons_init();
  5133  001F4C  ECAF  F011         	call	_clicker2buttons_init	;wreg free
  5134  001F50                     
  5135                           ;dc_motor.c: 45:     clicker2LEDs_init();
  5136  001F50  ECB4  F011         	call	_clicker2LEDs_init	;wreg free
  5137  001F54                     
  5138                           ;dc_motor.c: 46:     buggyLEDs_init();
  5139  001F54  EC89  F011         	call	_buggyLEDs_init	;wreg free
  5140  001F58                     
  5141                           ;dc_motor.c: 48:     LATDbits.LATD3 = 1;
  5142  001F58  867C               	bsf	124,3,c	;volatile
  5143  001F5A  0012               	return		;funcret
  5144  001F5C                     __end_of_DCmotors_init:
  5145                           	callstack 0
  5146                           
  5147 ;; *************** function _clicker2buttons_init *****************
  5148 ;; Defined at:
  5149 ;;		line 77 in file "dc_motor.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;		None
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      void 
  5156 ;; Registers used:
  5157 ;;		None
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5167 ;;Total ram usage:        0 bytes
  5168 ;; Hardware stack levels used: 1
  5169 ;; Hardware stack levels required when called: 7
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_DCmotors_init
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text39
  5178  00235E                     __ptext39:
  5179                           	callstack 0
  5180  00235E                     _clicker2buttons_init:
  5181                           	callstack 22
  5182  00235E                     
  5183                           ;dc_motor.c: 79:     TRISFbits.TRISF2 = 0;
  5184  00235E  9486               	bcf	134,2,c	;volatile
  5185                           
  5186                           ;dc_motor.c: 80:     TRISFbits.TRISF3 = 0;
  5187  002360  9686               	bcf	134,3,c	;volatile
  5188                           
  5189                           ;dc_motor.c: 82:     LATFbits.LATF2 = 0;
  5190  002362  947E               	bcf	126,2,c	;volatile
  5191                           
  5192                           ;dc_motor.c: 83:     LATFbits.LATF3 = 0;
  5193  002364  967E               	bcf	126,3,c	;volatile
  5194  002366  0012               	return		;funcret
  5195  002368                     __end_of_clicker2buttons_init:
  5196                           	callstack 0
  5197                           
  5198 ;; *************** function _clicker2LEDs_init *****************
  5199 ;; Defined at:
  5200 ;;		line 89 in file "dc_motor.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		None
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5218 ;;Total ram usage:        0 bytes
  5219 ;; Hardware stack levels used: 1
  5220 ;; Hardware stack levels required when called: 7
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_DCmotors_init
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text40
  5229  002368                     __ptext40:
  5230                           	callstack 0
  5231  002368                     _clicker2LEDs_init:
  5232                           	callstack 22
  5233  002368                     
  5234                           ;dc_motor.c: 91:     TRISDbits.TRISD7 = 0;
  5235  002368  9E84               	bcf	132,7,c	;volatile
  5236                           
  5237                           ;dc_motor.c: 92:     TRISHbits.TRISH3 = 0;
  5238  00236A  9688               	bcf	136,3,c	;volatile
  5239                           
  5240                           ;dc_motor.c: 94:     LATDbits.LATD7 = 0;
  5241  00236C  9E7C               	bcf	124,7,c	;volatile
  5242                           
  5243                           ;dc_motor.c: 95:     LATHbits.LATH3 = 0;
  5244  00236E  9680               	bcf	128,3,c	;volatile
  5245  002370  0012               	return		;funcret
  5246  002372                     __end_of_clicker2LEDs_init:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _buggyLEDs_init *****************
  5250 ;; Defined at:
  5251 ;;		line 101 in file "dc_motor.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		None
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;Total ram usage:        0 bytes
  5270 ;; Hardware stack levels used: 1
  5271 ;; Hardware stack levels required when called: 7
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_main
  5276 ;;		_DCmotors_init
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text41
  5281  002312                     __ptext41:
  5282                           	callstack 0
  5283  002312                     _buggyLEDs_init:
  5284                           	callstack 23
  5285  002312                     
  5286                           ;dc_motor.c: 103:     TRISHbits.TRISH1 = 0;
  5287  002312  9288               	bcf	136,1,c	;volatile
  5288                           
  5289                           ;dc_motor.c: 104:     TRISDbits.TRISD3 = 0;
  5290  002314  9684               	bcf	132,3,c	;volatile
  5291                           
  5292                           ;dc_motor.c: 105:     TRISDbits.TRISD4 = 0;
  5293  002316  9884               	bcf	132,4,c	;volatile
  5294                           
  5295                           ;dc_motor.c: 106:     TRISFbits.TRISF0 = 0;
  5296  002318  9086               	bcf	134,0,c	;volatile
  5297                           
  5298                           ;dc_motor.c: 107:     TRISHbits.TRISH0 = 0;
  5299  00231A  9088               	bcf	136,0,c	;volatile
  5300                           
  5301                           ;dc_motor.c: 109:     LATHbits.LATH1 = 0;
  5302  00231C  9280               	bcf	128,1,c	;volatile
  5303                           
  5304                           ;dc_motor.c: 110:     LATDbits.LATD3 = 0;
  5305  00231E  967C               	bcf	124,3,c	;volatile
  5306                           
  5307                           ;dc_motor.c: 111:     LATDbits.LATD4 = 0;
  5308  002320  987C               	bcf	124,4,c	;volatile
  5309                           
  5310                           ;dc_motor.c: 112:     LATFbits.LATF0 = 0;
  5311  002322  907E               	bcf	126,0,c	;volatile
  5312                           
  5313                           ;dc_motor.c: 113:     LATHbits.LATH0 = 0;
  5314  002324  9080               	bcf	128,0,c	;volatile
  5315  002326  0012               	return		;funcret
  5316  002328                     __end_of_buggyLEDs_init:
  5317                           	callstack 0
  5318                           
  5319 ;; *************** function _ADC_init *****************
  5320 ;; Defined at:
  5321 ;;		line 8 in file "ADC.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;		None
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;		None
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      void 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5339 ;;Total ram usage:        0 bytes
  5340 ;; Hardware stack levels used: 1
  5341 ;; Hardware stack levels required when called: 7
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_main
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	text42
  5350  0022C8                     __ptext42:
  5351                           	callstack 0
  5352  0022C8                     _ADC_init:
  5353                           	callstack 23
  5354  0022C8                     
  5355                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  5356  0022C8  8C86               	bsf	134,6,c	;volatile
  5357                           
  5358                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  5359  0022CA  010E               	movlb	14	; () banked
  5360  0022CC  8DB4               	bsf	180,6,b	;volatile
  5361                           
  5362                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  5363  0022CE  010F               	movlb	15	; () banked
  5364  0022D0  9958               	bcf	88,4,b	;volatile
  5365  0022D2                     
  5366                           ; BSR set to: 15
  5367                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  5368  0022D2  0EFC               	movlw	-4
  5369  0022D4  1758               	andwf	88,f,b	;volatile
  5370                           
  5371                           ;ADC.c: 16:     ADPCH=0b101110;
  5372  0022D6  0E2E               	movlw	46
  5373  0022D8  6F5F               	movwf	95,b	;volatile
  5374  0022DA                     
  5375                           ; BSR set to: 15
  5376                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  5377  0022DA  9460               	bcf	96,2,c	;volatile
  5378  0022DC                     
  5379                           ; BSR set to: 15
  5380                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  5381  0022DC  8860               	bsf	96,4,c	;volatile
  5382  0022DE                     
  5383                           ; BSR set to: 15
  5384                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  5385  0022DE  8E60               	bsf	96,7,c	;volatile
  5386  0022E0                     
  5387                           ; BSR set to: 15
  5388  0022E0  0012               	return		;funcret
  5389  0022E2                     __end_of_ADC_init:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function _LowISR *****************
  5393 ;; Defined at:
  5394 ;;		line 53 in file "interrupts.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		None
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;Total ram usage:        1 bytes
  5413 ;; Hardware stack levels used: 1
  5414 ;; Hardware stack levels required when called: 6
  5415 ;; This function calls:
  5416 ;;		Nothing
  5417 ;; This function is called by:
  5418 ;;		Interrupt level 1
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	intcodelo
  5423  000018                     __pintcodelo:
  5424                           	callstack 0
  5425  000018                     _LowISR:
  5426                           	callstack 16
  5427                           
  5428                           ; BSR set to: 15
  5429                           ;incstack = 0
  5430  000018  8059               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5431  00001A  CFE0 F006          	movff	bsr,??_LowISR
  5432  00001E  C006  FFE0         	movff	??_LowISR,bsr
  5433  000022  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5434  000024  0010               	retfie	
  5435  000026                     __end_of_LowISR:
  5436                           	callstack 0
  5437                           
  5438 ;; *************** function _HighISR *****************
  5439 ;; Defined at:
  5440 ;;		line 39 in file "interrupts.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2, status,0, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5458 ;;Total ram usage:        0 bytes
  5459 ;; Hardware stack levels used: 1
  5460 ;; Hardware stack levels required when called: 5
  5461 ;; This function calls:
  5462 ;;		i2_colorclick_int_clear
  5463 ;; This function is called by:
  5464 ;;		Interrupt level 2
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	intcode
  5469  000008                     __pintcode:
  5470                           	callstack 0
  5471  000008                     _HighISR:
  5472                           	callstack 16
  5473                           
  5474                           ;incstack = 0
  5475  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5476  00000A  EF06  F011         	goto	int_func
  5477                           
  5478                           	psect	intcode_body
  5479  00220C                     __pintcode_body:
  5480                           	callstack 16
  5481  00220C                     int_func:
  5482                           	callstack 16
  5483  00220C                     
  5484                           ;interrupts.c: 40:     if (PIR0bits.INT1IF) {
  5485  00220C  010E               	movlb	14	; () banked
  5486  00220E  A333               	btfss	51,1,b	;volatile
  5487  002210  EF0C  F011         	goto	i2u186_41
  5488  002214  EF0E  F011         	goto	i2u186_40
  5489  002218                     i2u186_41:
  5490  002218  EF15  F011         	goto	i2l260
  5491  00221C                     i2u186_40:
  5492  00221C                     
  5493                           ; BSR set to: 14
  5494                           ;interrupts.c: 41:         card_flag = 1;
  5495  00221C  0E01               	movlw	1
  5496  00221E  0100               	movlb	0	; () banked
  5497  002220  6FF3               	movwf	_card_flag& (0+255),b	;volatile
  5498  002222                     
  5499                           ; BSR set to: 0
  5500                           ;interrupts.c: 42:         colorclick_int_clear();
  5501  002222  EC71  F011         	call	i2_colorclick_int_clear	;wreg free
  5502  002226                     
  5503                           ;interrupts.c: 43:         PIR0bits.INT1IF = 0;
  5504  002226  010E               	movlb	14	; () banked
  5505  002228  9333               	bcf	51,1,b	;volatile
  5506  00222A                     i2l260:
  5507                           
  5508                           ; BSR set to: 14
  5509  00222A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5510  00222C  0011               	retfie		f
  5511  00222E                     __end_of_HighISR:
  5512                           	callstack 0
  5513                           
  5514 ;; *************** function i2_colorclick_int_clear *****************
  5515 ;; Defined at:
  5516 ;;		line 180 in file "color_click.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;		None
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;		None
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5534 ;;Total ram usage:        0 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; Hardware stack levels required when called: 4
  5537 ;; This function calls:
  5538 ;;		i2_I2C_2_Master_Start
  5539 ;;		i2_I2C_2_Master_Stop
  5540 ;;		i2_I2C_2_Master_Write
  5541 ;;		i2_colorclick_int_init
  5542 ;; This function is called by:
  5543 ;;		_HighISR
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           	psect	text45
  5548  0022E2                     __ptext45:
  5549                           	callstack 0
  5550  0022E2                     i2_colorclick_int_clear:
  5551                           	callstack 16
  5552  0022E2                     
  5553                           ;color_click.c: 181:     I2C_2_Master_Start();
  5554  0022E2  ECBE  F011         	call	i2_I2C_2_Master_Start	;wreg free
  5555                           
  5556                           ;color_click.c: 182:     I2C_2_Master_Write(0x52 | 0x00);
  5557  0022E6  0E52               	movlw	82
  5558  0022E8  EC9A  F011         	call	i2_I2C_2_Master_Write
  5559                           
  5560                           ;color_click.c: 183:     I2C_2_Master_Write(0b11100110);
  5561  0022EC  0EE6               	movlw	230
  5562  0022EE  EC9A  F011         	call	i2_I2C_2_Master_Write
  5563                           
  5564                           ;color_click.c: 184:     I2C_2_Master_Stop();
  5565  0022F2  ECB9  F011         	call	i2_I2C_2_Master_Stop	;wreg free
  5566                           
  5567                           ;color_click.c: 185:     colorclick_int_init();
  5568  0022F6  ECBD  F00E         	call	i2_colorclick_int_init	;wreg free
  5569  0022FA  0012               	return		;funcret
  5570  0022FC                     __end_ofi2_colorclick_int_clear:
  5571                           	callstack 0
  5572                           
  5573 ;; *************** function i2_colorclick_int_init *****************
  5574 ;; Defined at:
  5575 ;;		line 188 in file "color_click.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;		None
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  1    wreg      void 
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0, cstack
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5593 ;;Total ram usage:        1 bytes
  5594 ;; Hardware stack levels used: 1
  5595 ;; Hardware stack levels required when called: 3
  5596 ;; This function calls:
  5597 ;;		i2_colorclick_writetoaddr
  5598 ;; This function is called by:
  5599 ;;		i2_colorclick_int_clear
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text46
  5604  001D7A                     __ptext46:
  5605                           	callstack 0
  5606  001D7A                     i2_colorclick_int_init:
  5607                           	callstack 16
  5608  001D7A                     
  5609                           ;color_click.c: 189:     colorclick_writetoaddr(0x00, 0b10011);
  5610  001D7A  0E13               	movlw	19
  5611  001D7C  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  5612  001D7E  0E00               	movlw	0
  5613  001D80  EC47  F011         	call	i2_colorclick_writetoaddr
  5614  001D84                     
  5615                           ;color_click.c: 190:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5616  001D84  0E3F               	movlw	63
  5617  001D86  6E05               	movwf	??i2_colorclick_int_init^0,c
  5618  001D88  0E55               	movlw	85
  5619  001D8A                     i2u249_47:
  5620  001D8A  2EE8               	decfsz	wreg,f,c
  5621  001D8C  D7FE               	bra	i2u249_47
  5622  001D8E  2E05               	decfsz	??i2_colorclick_int_init^0,f,c
  5623  001D90  D7FC               	bra	i2u249_47
  5624  001D92  F000               	nop	
  5625  001D94                     
  5626                           ;color_click.c: 191:     colorclick_writetoaddr(0x0C, 0b0100);
  5627  001D94  0E04               	movlw	4
  5628  001D96  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  5629  001D98  0E0C               	movlw	12
  5630  001D9A  EC47  F011         	call	i2_colorclick_writetoaddr
  5631  001D9E                     
  5632                           ;color_click.c: 192:     colorclick_writetoaddr(0x04, (clear_lower&0b11111111));
  5633  001D9E  C0F1  F003         	movff	_clear_lower,i2colorclick_writetoaddr@value	;volatile
  5634  001DA2  0E04               	movlw	4
  5635  001DA4  EC47  F011         	call	i2_colorclick_writetoaddr
  5636  001DA8                     
  5637                           ;color_click.c: 193:     colorclick_writetoaddr(0x05, (clear_lower>>8));
  5638  001DA8  0100               	movlb	0	; () banked
  5639  001DAA  51F2               	movf	(_clear_lower+1)& (0+255),w,b	;volatile
  5640  001DAC  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  5641  001DAE  0E05               	movlw	5
  5642  001DB0  EC47  F011         	call	i2_colorclick_writetoaddr
  5643  001DB4                     
  5644                           ;color_click.c: 194:     colorclick_writetoaddr(0x06, (clear_upper&0b11111111));
  5645  001DB4  C0EF  F003         	movff	_clear_upper,i2colorclick_writetoaddr@value	;volatile
  5646  001DB8  0E06               	movlw	6
  5647  001DBA  EC47  F011         	call	i2_colorclick_writetoaddr
  5648  001DBE                     
  5649                           ;color_click.c: 195:     colorclick_writetoaddr(0x07, (clear_upper>>8));
  5650  001DBE  0100               	movlb	0	; () banked
  5651  001DC0  51F0               	movf	(_clear_upper+1)& (0+255),w,b	;volatile
  5652  001DC2  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  5653  001DC4  0E07               	movlw	7
  5654  001DC6  EC47  F011         	call	i2_colorclick_writetoaddr
  5655  001DCA  0012               	return		;funcret
  5656  001DCC                     __end_ofi2_colorclick_int_init:
  5657                           	callstack 0
  5658                           
  5659 ;; *************** function i2_colorclick_writetoaddr *****************
  5660 ;; Defined at:
  5661 ;;		line 80 in file "color_click.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  address         1    wreg     unsigned char 
  5664 ;;  value           1    2[COMRAM] unsigned char 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  address         1    3[COMRAM] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2, status,0, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5676 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5680 ;;Total ram usage:        2 bytes
  5681 ;; Hardware stack levels used: 1
  5682 ;; Hardware stack levels required when called: 2
  5683 ;; This function calls:
  5684 ;;		i2_I2C_2_Master_Start
  5685 ;;		i2_I2C_2_Master_Stop
  5686 ;;		i2_I2C_2_Master_Write
  5687 ;; This function is called by:
  5688 ;;		i2_colorclick_int_init
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text47
  5693  00228E                     __ptext47:
  5694                           	callstack 0
  5695  00228E                     i2_colorclick_writetoaddr:
  5696                           	callstack 16
  5697                           
  5698                           ;incstack = 0
  5699                           ;i2colorclick_writetoaddr@address stored from wreg
  5700  00228E  6E04               	movwf	i2colorclick_writetoaddr@address^0,c
  5701  002290                     
  5702                           ;color_click.c: 80: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           81: {;color_click.c: 82:     I2C_2_Master_Start();
  5703  002290  ECBE  F011         	call	i2_I2C_2_Master_Start	;wreg free
  5704                           
  5705                           ;color_click.c: 83:     I2C_2_Master_Write(0x52 | 0x00);
  5706  002294  0E52               	movlw	82
  5707  002296  EC9A  F011         	call	i2_I2C_2_Master_Write
  5708                           
  5709                           ;color_click.c: 84:     I2C_2_Master_Write(0x80 | address);
  5710  00229A  5004               	movf	i2colorclick_writetoaddr@address^0,w,c
  5711  00229C  0980               	iorlw	128
  5712  00229E  EC9A  F011         	call	i2_I2C_2_Master_Write
  5713                           
  5714                           ;color_click.c: 85:     I2C_2_Master_Write(value);
  5715  0022A2  5003               	movf	i2colorclick_writetoaddr@value^0,w,c
  5716  0022A4  EC9A  F011         	call	i2_I2C_2_Master_Write
  5717                           
  5718                           ;color_click.c: 86:     I2C_2_Master_Stop();
  5719  0022A8  ECB9  F011         	call	i2_I2C_2_Master_Stop	;wreg free
  5720  0022AC  0012               	return		;funcret
  5721  0022AE                     __end_ofi2_colorclick_writetoaddr:
  5722                           	callstack 0
  5723                           
  5724 ;; *************** function i2_I2C_2_Master_Write *****************
  5725 ;; Defined at:
  5726 ;;		line 69 in file "i2c.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  data_byte       1    wreg     unsigned char 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  data_byte       1    1[COMRAM] unsigned char 
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      void 
  5733 ;; Registers used:
  5734 ;;		wreg, status,2, status,0, cstack
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;Total ram usage:        1 bytes
  5745 ;; Hardware stack levels used: 1
  5746 ;; Hardware stack levels required when called: 1
  5747 ;; This function calls:
  5748 ;;		i2_I2C_2_Master_Idle
  5749 ;; This function is called by:
  5750 ;;		i2_colorclick_writetoaddr
  5751 ;;		i2_colorclick_int_clear
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text48
  5756  002334                     __ptext48:
  5757                           	callstack 0
  5758  002334                     i2_I2C_2_Master_Write:
  5759                           	callstack 16
  5760                           
  5761                           ;incstack = 0
  5762                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  5763  002334  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  5764  002336                     
  5765                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  5766  002336  ECCE  F010         	call	i2_I2C_2_Master_Idle	;wreg free
  5767  00233A                     
  5768                           ;i2c.c: 72:   SSP2BUF = data_byte;
  5769  00233A  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  5770  00233E  0012               	return		;funcret
  5771  002340                     __end_ofi2_I2C_2_Master_Write:
  5772                           	callstack 0
  5773                           
  5774 ;; *************** function i2_I2C_2_Master_Stop *****************
  5775 ;; Defined at:
  5776 ;;		line 59 in file "i2c.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;		None
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  1    wreg      void 
  5783 ;; Registers used:
  5784 ;;		wreg, status,2, status,0, cstack
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5794 ;;Total ram usage:        0 bytes
  5795 ;; Hardware stack levels used: 1
  5796 ;; Hardware stack levels required when called: 1
  5797 ;; This function calls:
  5798 ;;		i2_I2C_2_Master_Idle
  5799 ;; This function is called by:
  5800 ;;		i2_colorclick_writetoaddr
  5801 ;;		i2_colorclick_int_clear
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text49
  5806  002372                     __ptext49:
  5807                           	callstack 0
  5808  002372                     i2_I2C_2_Master_Stop:
  5809                           	callstack 16
  5810  002372                     
  5811                           ;i2c.c: 61:   I2C_2_Master_Idle();
  5812  002372  ECCE  F010         	call	i2_I2C_2_Master_Idle	;wreg free
  5813  002376                     
  5814                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  5815  002376  010E               	movlb	14	; () banked
  5816  002378  85DA               	bsf	218,2,b	;volatile
  5817  00237A                     
  5818                           ; BSR set to: 14
  5819  00237A  0012               	return		;funcret
  5820  00237C                     __end_ofi2_I2C_2_Master_Stop:
  5821                           	callstack 0
  5822                           
  5823 ;; *************** function i2_I2C_2_Master_Start *****************
  5824 ;; Defined at:
  5825 ;;		line 39 in file "i2c.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;		None
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;		None
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5843 ;;Total ram usage:        0 bytes
  5844 ;; Hardware stack levels used: 1
  5845 ;; Hardware stack levels required when called: 1
  5846 ;; This function calls:
  5847 ;;		i2_I2C_2_Master_Idle
  5848 ;; This function is called by:
  5849 ;;		i2_colorclick_writetoaddr
  5850 ;;		i2_colorclick_int_clear
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text50
  5855  00237C                     __ptext50:
  5856                           	callstack 0
  5857  00237C                     i2_I2C_2_Master_Start:
  5858                           	callstack 16
  5859  00237C                     
  5860                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5861  00237C  ECCE  F010         	call	i2_I2C_2_Master_Idle	;wreg free
  5862  002380                     
  5863                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  5864  002380  010E               	movlb	14	; () banked
  5865  002382  81DA               	bsf	218,0,b	;volatile
  5866  002384                     
  5867                           ; BSR set to: 14
  5868  002384  0012               	return		;funcret
  5869  002386                     __end_ofi2_I2C_2_Master_Start:
  5870                           	callstack 0
  5871                           
  5872 ;; *************** function i2_I2C_2_Master_Idle *****************
  5873 ;; Defined at:
  5874 ;;		line 30 in file "i2c.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      void 
  5881 ;; Registers used:
  5882 ;;		wreg, status,2, status,0
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5892 ;;Total ram usage:        1 bytes
  5893 ;; Hardware stack levels used: 1
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		i2_I2C_2_Master_Start
  5898 ;;		i2_I2C_2_Master_Stop
  5899 ;;		i2_I2C_2_Master_Write
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text51
  5904  00219C                     __ptext51:
  5905                           	callstack 0
  5906  00219C                     i2_I2C_2_Master_Idle:
  5907                           	callstack 16
  5908  00219C                     i2l30:
  5909  00219C  010E               	movlb	14	; () banked
  5910  00219E  B5D8               	btfsc	216,2,b	;volatile
  5911  0021A0  EFD4  F010         	goto	i2u126_41
  5912  0021A4  EFD6  F010         	goto	i2u126_40
  5913  0021A8                     i2u126_41:
  5914  0021A8  EFCE  F010         	goto	i2l30
  5915  0021AC                     i2u126_40:
  5916  0021AC                     
  5917                           ; BSR set to: 14
  5918  0021AC  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5919  0021B0  0E1F               	movlw	31
  5920  0021B2  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5921  0021B4  A4D8               	btfss	status,2,c
  5922  0021B6  EFDF  F010         	goto	i2u127_41
  5923  0021BA  EFE1  F010         	goto	i2u127_40
  5924  0021BE                     i2u127_41:
  5925  0021BE  EFCE  F010         	goto	i2l30
  5926  0021C2                     i2u127_40:
  5927  0021C2                     
  5928                           ; BSR set to: 14
  5929  0021C2  0012               	return		;funcret
  5930  0021C4                     __end_ofi2_I2C_2_Master_Idle:
  5931                           	callstack 0
  5932                           
  5933                           	psect	rparam
  5934  0000                     
  5935                           	psect	temp
  5936  000059                     btemp:
  5937                           	callstack 0
  5938  000059                     	ds	1
  5939  0000                     int$flags	set	btemp
  5940  0000                     wtemp8	set	btemp+1
  5941  0000                     ttemp5	set	btemp+1
  5942  0000                     ttemp6	set	btemp+4
  5943  0000                     ttemp7	set	btemp+8
  5944                           
  5945                           	psect	idloc
  5946                           
  5947                           ;Config register IDLOC0 @ 0x200000
  5948                           ;	unspecified, using default values
  5949  200000                     	org	2097152
  5950  200000  0FFF               	dw	4095
  5951                           
  5952                           ;Config register IDLOC1 @ 0x200002
  5953                           ;	unspecified, using default values
  5954  200002                     	org	2097154
  5955  200002  0FFF               	dw	4095
  5956                           
  5957                           ;Config register IDLOC2 @ 0x200004
  5958                           ;	unspecified, using default values
  5959  200004                     	org	2097156
  5960  200004  0FFF               	dw	4095
  5961                           
  5962                           ;Config register IDLOC3 @ 0x200006
  5963                           ;	unspecified, using default values
  5964  200006                     	org	2097158
  5965  200006  0FFF               	dw	4095
  5966                           
  5967                           ;Config register IDLOC4 @ 0x200008
  5968                           ;	unspecified, using default values
  5969  200008                     	org	2097160
  5970  200008  0FFF               	dw	4095
  5971                           
  5972                           ;Config register IDLOC5 @ 0x20000A
  5973                           ;	unspecified, using default values
  5974  20000A                     	org	2097162
  5975  20000A  0FFF               	dw	4095
  5976                           
  5977                           ;Config register IDLOC6 @ 0x20000C
  5978                           ;	unspecified, using default values
  5979  20000C                     	org	2097164
  5980  20000C  0FFF               	dw	4095
  5981                           
  5982                           ;Config register IDLOC7 @ 0x20000E
  5983                           ;	unspecified, using default values
  5984  20000E                     	org	2097166
  5985  20000E  0FFF               	dw	4095
  5986                           
  5987                           	psect	config
  5988                           
  5989                           ;Config register CONFIG1L @ 0x300000
  5990                           ;	External Oscillator mode Selection bits
  5991                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5992                           ;	Power-up default value for COSC bits
  5993                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5994  300000                     	org	3145728
  5995  300000  AA                 	db	170
  5996                           
  5997                           ;Config register CONFIG1H @ 0x300001
  5998                           ;	unspecified, using default values
  5999                           ;	Clock Out Enable bit
  6000                           ;	CLKOUTEN = 0x1, unprogrammed default
  6001                           ;	Clock Switch Enable bit
  6002                           ;	CSWEN = 0x1, unprogrammed default
  6003                           ;	Fail-Safe Clock Monitor Enable bit
  6004                           ;	FCMEN = 0x1, unprogrammed default
  6005  300001                     	org	3145729
  6006  300001  FF                 	db	255
  6007                           
  6008                           ;Config register CONFIG2L @ 0x300002
  6009                           ;	unspecified, using default values
  6010                           ;	Master Clear Enable bit
  6011                           ;	MCLRE = 0x1, unprogrammed default
  6012                           ;	Power-up Timer Enable bit
  6013                           ;	PWRTE = 0x1, unprogrammed default
  6014                           ;	Low-power BOR enable bit
  6015                           ;	LPBOREN = 0x1, unprogrammed default
  6016                           ;	Brown-out Reset Enable bits
  6017                           ;	BOREN = 0x3, unprogrammed default
  6018  300002                     	org	3145730
  6019  300002  FF                 	db	255
  6020                           
  6021                           ;Config register CONFIG2H @ 0x300003
  6022                           ;	unspecified, using default values
  6023                           ;	Brown Out Reset Voltage selection bits
  6024                           ;	BORV = 0x3, unprogrammed default
  6025                           ;	ZCD Disable bit
  6026                           ;	ZCD = 0x1, unprogrammed default
  6027                           ;	PPSLOCK bit One-Way Set Enable bit
  6028                           ;	PPS1WAY = 0x1, unprogrammed default
  6029                           ;	Stack Full/Underflow Reset Enable bit
  6030                           ;	STVREN = 0x1, unprogrammed default
  6031                           ;	Debugger Enable bit
  6032                           ;	DEBUG = 0x1, unprogrammed default
  6033                           ;	Extended Instruction Set Enable bit
  6034                           ;	XINST = 0x1, unprogrammed default
  6035  300003                     	org	3145731
  6036  300003  FF                 	db	255
  6037                           
  6038                           ;Config register CONFIG3L @ 0x300004
  6039                           ;	WDT Period Select bits
  6040                           ;	WDTCPS = 0x1F, unprogrammed default
  6041                           ;	WDT operating mode
  6042                           ;	WDTE = OFF, WDT Disabled
  6043  300004                     	org	3145732
  6044  300004  9F                 	db	159
  6045                           
  6046                           ;Config register CONFIG3H @ 0x300005
  6047                           ;	unspecified, using default values
  6048                           ;	WDT Window Select bits
  6049                           ;	WDTCWS = 0x7, unprogrammed default
  6050                           ;	WDT input clock selector
  6051                           ;	WDTCCS = 0x7, unprogrammed default
  6052  300005                     	org	3145733
  6053  300005  FF                 	db	255
  6054                           
  6055                           ;Config register CONFIG4L @ 0x300006
  6056                           ;	unspecified, using default values
  6057                           ;	Write Protection Block 0
  6058                           ;	WRT0 = 0x1, unprogrammed default
  6059                           ;	Write Protection Block 1
  6060                           ;	WRT1 = 0x1, unprogrammed default
  6061                           ;	Write Protection Block 2
  6062                           ;	WRT2 = 0x1, unprogrammed default
  6063                           ;	Write Protection Block 3
  6064                           ;	WRT3 = 0x1, unprogrammed default
  6065                           ;	Write Protection Block 3
  6066                           ;	WRT4 = 0x1, unprogrammed default
  6067                           ;	Write Protection Block 3
  6068                           ;	WRT5 = 0x1, unprogrammed default
  6069                           ;	Write Protection Block 3
  6070                           ;	WRT6 = 0x1, unprogrammed default
  6071                           ;	Write Protection Block 3
  6072                           ;	WRT7 = 0x1, unprogrammed default
  6073  300006                     	org	3145734
  6074  300006  FF                 	db	255
  6075                           
  6076                           ;Config register CONFIG4H @ 0x300007
  6077                           ;	unspecified, using default values
  6078                           ;	Configuration Register Write Protection bit
  6079                           ;	WRTC = 0x1, unprogrammed default
  6080                           ;	Boot Block Write Protection bit
  6081                           ;	WRTB = 0x1, unprogrammed default
  6082                           ;	Data EEPROM Write Protection bit
  6083                           ;	WRTD = 0x1, unprogrammed default
  6084                           ;	Scanner Enable bit
  6085                           ;	SCANE = 0x1, unprogrammed default
  6086                           ;	Low Voltage Programming Enable bit
  6087                           ;	LVP = 0x1, unprogrammed default
  6088  300007                     	org	3145735
  6089  300007  FF                 	db	255
  6090                           
  6091                           ;Config register CONFIG5L @ 0x300008
  6092                           ;	unspecified, using default values
  6093                           ;	UserNVM Program Memory Code Protection bit
  6094                           ;	CP = 0x1, unprogrammed default
  6095                           ;	DataNVM Memory Code Protection bit
  6096                           ;	CPD = 0x1, unprogrammed default
  6097  300008                     	org	3145736
  6098  300008  FF                 	db	255
  6099                           
  6100                           ;Config register CONFIG5H @ 0x300009
  6101                           ;	unspecified, using default values
  6102  300009                     	org	3145737
  6103  300009  FF                 	db	255
  6104                           
  6105                           ;Config register CONFIG6L @ 0x30000A
  6106                           ;	unspecified, using default values
  6107                           ;	Table Read Protection Block 0
  6108                           ;	EBTR0 = 0x1, unprogrammed default
  6109                           ;	Table Read Protection Block 1
  6110                           ;	EBTR1 = 0x1, unprogrammed default
  6111                           ;	Table Read Protection Block 2
  6112                           ;	EBTR2 = 0x1, unprogrammed default
  6113                           ;	Table Read Protection Block 3
  6114                           ;	EBTR3 = 0x1, unprogrammed default
  6115                           ;	Table Read Protection Block 4
  6116                           ;	EBTR4 = 0x1, unprogrammed default
  6117                           ;	Table Read Protection Block 5
  6118                           ;	EBTR5 = 0x1, unprogrammed default
  6119                           ;	Table Read Protection Block 6
  6120                           ;	EBTR6 = 0x1, unprogrammed default
  6121                           ;	Table Read Protection Block 7
  6122                           ;	EBTR7 = 0x1, unprogrammed default
  6123  30000A                     	org	3145738
  6124  30000A  FF                 	db	255
  6125                           
  6126                           ;Config register CONFIG6H @ 0x30000B
  6127                           ;	unspecified, using default values
  6128                           ;	Boot Block Table Read Protection bit
  6129                           ;	EBTRB = 0x1, unprogrammed default
  6130  30000B                     	org	3145739
  6131  30000B  FF                 	db	255
  6132                           tosu	equ	0xFFF
  6133                           tosh	equ	0xFFE
  6134                           tosl	equ	0xFFD
  6135                           stkptr	equ	0xFFC
  6136                           pclatu	equ	0xFFB
  6137                           pclath	equ	0xFFA
  6138                           pcl	equ	0xFF9
  6139                           tblptru	equ	0xFF8
  6140                           tblptrh	equ	0xFF7
  6141                           tblptrl	equ	0xFF6
  6142                           tablat	equ	0xFF5
  6143                           prodh	equ	0xFF4
  6144                           prodl	equ	0xFF3
  6145                           indf0	equ	0xFEF
  6146                           postinc0	equ	0xFEE
  6147                           postdec0	equ	0xFED
  6148                           preinc0	equ	0xFEC
  6149                           plusw0	equ	0xFEB
  6150                           fsr0h	equ	0xFEA
  6151                           fsr0l	equ	0xFE9
  6152                           wreg	equ	0xFE8
  6153                           indf1	equ	0xFE7
  6154                           postinc1	equ	0xFE6
  6155                           postdec1	equ	0xFE5
  6156                           preinc1	equ	0xFE4
  6157                           plusw1	equ	0xFE3
  6158                           fsr1h	equ	0xFE2
  6159                           fsr1l	equ	0xFE1
  6160                           bsr	equ	0xFE0
  6161                           indf2	equ	0xFDF
  6162                           postinc2	equ	0xFDE
  6163                           postdec2	equ	0xFDD
  6164                           preinc2	equ	0xFDC
  6165                           plusw2	equ	0xFDB
  6166                           fsr2h	equ	0xFDA
  6167                           fsr2l	equ	0xFD9
  6168                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         130
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      88
    BANK0           160    117     148
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2437_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S261$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S261$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _colorclick_int_clear->_colorclick_int_init
    _colorclick_int_init->_colorclick_writetoaddr
    _forward->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _colorclick_readColour->_colorclick_readBlue
    _colorclick_readColour->_colorclick_readClear
    _colorclick_readColour->_colorclick_readGreen
    _colorclick_readColour->_colorclick_readRed
    _colorclick_readRed->_I2C_2_Master_Read
    _colorclick_readGreen->_I2C_2_Master_Read
    _colorclick_readClear->_I2C_2_Master_Read
    _colorclick_readBlue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colorclick_init->_colorclick_writetoaddr
    _colorclick_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_colorclick_int_clear->i2_colorclick_int_init
    i2_colorclick_int_init->i2_colorclick_writetoaddr
    i2_colorclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                88    88      0   15006
                                             79 COMRAM     2     2      0
                                             34 BANK0     83    83      0
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                     _buggyLEDs_init
                    _colorclick_init
              _colorclick_readColour
          _colorclick_toggleClearLED
                            _forward
                    _interrupts_init
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12    8597
                                             14 BANK0     20     8     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                             77 COMRAM     2     2      0
                                              8 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             69 COMRAM     8     2      6
                                              0 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    3     1      2     295
                                              8 COMRAM     3     1      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     772
               _colorclick_int_clear
 ---------------------------------------------------------------------------------
 (2) _colorclick_int_clear                                 0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                _colorclick_int_init
 ---------------------------------------------------------------------------------
 (3) _colorclick_int_init                                  1     1      0     750
                                             10 COMRAM     1     1      0
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _forward                                              6     2      4    2363
                                             31 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2035
                                             20 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                             12 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _colorclick_readColour                                8     0      8     699
                                             17 COMRAM     8     0      8
                _colorclick_readBlue
               _colorclick_readClear
               _colorclick_readGreen
                 _colorclick_readRed
 ---------------------------------------------------------------------------------
 (2) _colorclick_readRed                                   7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readGreen                                 7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readClear                                 7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readBlue                                  7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              7 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _colorclick_init                                      1     1      0     816
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Init
          _colorclick_toggleClearLED
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colorclick_writetoaddr                               2     1      1     750
                                              8 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              7 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colorclick_toggleClearLED                            1     1      0      66
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        2     0      2      98
                                              6 COMRAM     2     0      2
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     244
             i2_colorclick_int_clear
 ---------------------------------------------------------------------------------
 (11) i2_colorclick_int_clear                              0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
              i2_colorclick_int_init
 ---------------------------------------------------------------------------------
 (12) i2_colorclick_int_init                               1     1      0     222
                                              4 COMRAM     1     1      0
           i2_colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_colorclick_writetoaddr                            2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _buggyLEDs_init
   _colorclick_init
     _I2C_2_Master_Init
     _colorclick_toggleClearLED
     _colorclick_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colorclick_readColour
     _colorclick_readBlue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readClear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readGreen
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readRed
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colorclick_toggleClearLED
   _forward
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _interrupts_init
     _colorclick_int_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _colorclick_int_init
         _colorclick_writetoaddr
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_colorclick_int_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_colorclick_int_init
       i2_colorclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      58       1       93.6%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     148       8        0.0%
DATA                 0      0     148       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 11:52:10 2021

        __end_of_colorclick_readRed 1E1C         __end_of_colorclick_readBlue 1F0C  
      __end_of_colorclick_readClear 1EBC         __end_of_colorclick_int_init 1D7A  
      __end_of_colorclick_readGreen 1E6C                                  l30 2174  
                                l33 219A                                  l42 2352  
                                l27 2172                                  l36 235C  
                                l45 2332                                  l39 2348  
                                l48 2024               __end_of_DCmotors_init 1F5C  
                      ___awdiv@sign 0012                                  bsr 000FE0  
      __end_of_colorclick_int_clear 22C8                 ___wmul@multiplicand 0009  
    __size_of_colorclick_readColour 0044   __size_ofi2_colorclick_writetoaddr 0020  
     __end_of_colorclick_readColour 1FE4           ?i2_colorclick_writetoaddr 0003  
            _colorclick_writetoaddr 224E                                 l411 20A4  
                               l172 1F5A                                 l420 226C  
                               l325 228C                                 l182 2366  
                               l254 224C                                 l334 22FC  
                               l423 1E1A                                 l343 20DC  
                               l280 22E0                                 l432 1EBA  
                               l336 230C                                 l185 2370  
                               l417 220A                                 l441 1D78  
                               l337 2310                                 l426 1E6A  
                               l435 1FE2                                 l179 14E4  
                               l188 2326                                 l429 1F0A  
                               l438 22C6                                 l199 1C72  
                               l467 21E8                                 l581 1820  
                               l594 1984                                 l698 1B12  
                               _abs 2026                                 _pad 1B14  
                               wreg 000FE8                     _colorclick_init 2066  
           ?i2_colorclick_int_clear 0001                                l1210 1698  
                              l1203 10EE                                ?_abs 0019  
                              l1221 205C                                l1224 2064  
                              l1216 1CCC                                l2113 2354  
                              l2121 232A                                l3001 0E30  
                              l1217 1CD4                                l1145 1D26  
                              l2115 2358                                l2123 232E  
                              l3011 0EA4                                l3003 0E58  
                              l1236 1A4E                                l1244 1F9E  
                              l1172 1B58                                l2117 234A  
                              l1253 2148                                l3021 0EEE  
                              l3013 0EC0                                l3005 0E78  
                              l2119 234E                                l2311 2340  
                              l1247 2386                                l1175 1B9A  
                              l3031 0F8C                                l3023 0EF8  
                              l3015 0ED2                                l1183 0EB0  
                              l3007 0E88                                l3103 1C74  
                              l3111 1CD6                                l2321 1FFA  
                              l2313 2344                                l1177 1BD4  
                              l3041 105C                                l3025 0EFE  
                              l3033 0FF0                                l3017 0EE0  
                              l1185 0EB8                                l3009 0E8A  
                              l3105 1C7C                                l3113 1CE8  
                              l3201 12E0                                l2091 2174  
                              l2235 2250                                l2323 2020  
                              l2315 1FE6                                l2331 1D32  
                              l3051 10A2                                l3035 100A  
                              l3043 106A                                l3027 0F80  
                              l3019 0EE6                                l3107 1C8A  
                              l3115 1CF0                                l3203 12EA  
                              l3131 1104                                l3123 10F0  
                              l2093 2184                                l2325 2022  
                              l2317 1FEA                                l2341 1D6C  
                              l2333 1D42                                l3053 10AE  
                              l3045 107C                                l3037 1028  
                              l3029 0F86                                l3061 14E6  
                              l3109 1CB0                                l3117 1CF8  
                              l3205 12F6                                l3141 112A  
                              l3133 1110                                l3125 10F4  
                              l2319 1FF2                                l2351 1A54  
                              l2343 21C4                                l2335 1D4C  
                              l3055 10B6                                l3047 108A  
                              l3039 1042                                l3071 1552  
                              l3063 150A                                l3119 1D14  
                              l3151 1146                                l3143 112E  
                              l3135 1116                                l3127 10F8  
                              l2521 22C8                                l2601 1F34  
                              l2441 215A                                l2361 1A84  
                              l2353 1A62                                l2345 21E0  
                              l2337 1D56                                l2329 1D28  
                              l3049 1090                                l3057 10C6  
                              l3081 161A                                l3073 1576  
                              l3065 1518                                l3161 115E  
                              l3153 114E                                l3145 1136  
                              l3137 111A                                l3129 1100  
                              l2523 22D2                                l2611 1F54  
                              l2603 1F3E                                l2443 215C  
                              l2451 21EC                                l2531 2066  
                              l2371 1AB2                                l2363 1A88  
                              l2355 1A6A                                l2339 1D62  
                              l3091 1656                                l3083 1628  
                              l3075 15BE                                l3067 152A  
                              l3171 11BC                                l3163 1164  
                              l3155 1152                                l3147 113A  
                              l3139 1122                                l2525 22DA  
                              l2453 235E                                l2613 1F58  
                              l2605 1F40                                l2445 215E  
                              l2437 214A                                l2541 2098  
                              l2533 206A                                l2381 1AE6  
                              l2373 1AC0                                l2365 1A90  
                              l2357 1A6E                                l2349 1A50  
                              l2461 1390                                l3085 163C  
                              l3069 152E                                l3181 11F4  
                              l3173 11BC                                l3165 117E  
                              l3157 115A                                l3149 113E  
                              l2527 22DC                                l2455 2368  
                              l2607 1F4C                                l2447 2160  
                              l2439 2154                                l2543 209A  
                              l2535 2074                                l2615 1FA0  
                              l2383 1AEC                                l2375 1AC6  
                              l2367 1AA2                                l2359 1A7C  
                              l2463 13D6                                l2471 22AE  
                              l2551 2234                                l3079 15F6  
                              l3095 1662                                l3191 125E  
                              l3183 11FC                                l3175 11C0  
                              l3167 11A2                                l3159 115C  
                              l2529 22DE                                l2449 2312  
                              l2609 1F50                                l2545 209C  
                              l2537 2084                                l2481 1E1C  
                              l2617 1FD0                                l2377 1ADC  
                              l2369 1AAA                                l2385 1AF2  
                              l2465 13F6                                l2457 1312  
                              l2641 1BD6                                l2561 2246  
                              l2553 223A                                l2473 22FC  
                              l2633 20A6                                l3097 1686  
                              l3089 1648                                l3193 129E  
                              l3185 1204                                l3177 11E4  
                              l3169 11B0                                l2571 227A  
                              l2547 209E                                l2539 208E  
                              l2483 1E62                                l2475 1DCC  
                              l2387 1B02                                l2379 1AE4  
                              l2467 1412                                l2459 132E  
                              l2643 1BFA                                l2651 1C42  
                              l2563 2248                                l2555 223E  
                              l2635 20AA                                l3195 12B6  
                              l3187 123A                                l3179 11EC  
                              l2581 1F0C                                l2573 227C  
                              l2493 1E6C                                l2477 1E12  
                              l2389 1B0A                                l2469 147C  
                              l2653 1C5A                                l2645 1C12  
                              l2565 224A                                l2557 2240  
                              l2549 222E                                l2637 20C0  
                              l2901 16D0                                l3197 12C8  
                              l3189 1246                                l2591 1F2A  
                              l2583 1F20                                l2575 2286  
                              l2567 226E                                l2487 1EBC  
                              l2495 1EB2                                l2647 1C1E  
                              l2559 2244                                l2639 20C4  
                              l2911 172C                                l2903 16DE  
                              l3199 12D8                                l2593 1F2C  
                              l2585 1F24                                l2577 2288  
                              l2569 2278                                l2489 1F02  
                              l2649 1C2A                                l2921 1796  
                              l2913 1734                                l2905 16FE  
                              l2595 1F2E                                l2587 1F26  
                              l2579 228A                                l2931 17E0  
                              l2923 17B6                                l2915 1748  
                              l2907 1702                                l2597 1F30  
                              l2589 1F28                                l2933 1800  
                              l2925 17B8                                l2917 1756  
                              l2909 170E                                l2941 1834  
                              l2861 1986                                ?_pad 0017  
                              l2599 1F32                                l2927 17CA  
                              l2919 1768                                l2951 18A4  
                              l2943 1854                                l2871 1A08  
                              l2863 1998                                l2929 17D0  
                              l2961 191C                                l2953 18AC  
                              l2945 1858                                l2937 1822  
                              l2865 19AA                                l2881 1F7E  
                              l2963 192E                                l2955 18C0  
                              l2947 1866                                l2939 1826  
                              l2867 19B4                                l2875 1F5C  
                              l2883 2114                                l2893 169A  
                              l2957 18CE                                l2965 1934  
                              l2949 1886                                l2869 19D2  
                              l2877 1F68                                l2885 2120  
                              l2981 1B50                                l2973 1B14  
                              l2895 169E                                l2967 1944  
                              l2959 18FC                                l2879 1F7A  
                              l2887 2124                                l2991 1BBC  
                              l2983 1B64                                l2975 1B22  
                              l2897 16AC                                l2969 1964  
                              l2889 213C                                l2985 1B78  
                              l2977 1B36                                l2899 16CC  
                              l2995 2026                                l2987 1B7C  
                              l2979 1B44                                l2997 2040  
                              l2989 1BA8                                l2999 0E10  
                              STR_1 0E01                                STR_2 0E01  
                              u1040 2184                                u2000 172C  
                              u1041 2180                                u2001 1728  
                              u1050 219A                                u2010 1756  
                              u1051 2196                                u2011 1752  
                              u2020 1796                                u2100 1B22  
                              u2021 1792                                u2101 1B1E  
                              u2030 17E0                                u2110 1B44  
                              u2031 17DC                                u2111 1B40  
                              u2040 1834                                u2120 1B9A  
                              u2200 0ED2                                u2041 1830  
                              u2121 1B96                                u2201 0ECE  
                              u2050 1866                                u2130 1BA8  
                              u2210 0EE0                                u2051 1862  
                              u2131 1BA4                                u2211 0EDC  
                              u1500 1B02                                u2060 18A4  
                              u2140 2040                                u2220 100A  
                              u2300 150A                                u1501 1AFE  
                              u2061 18A0                                u2141 203C  
                              u2221 1006                                u2301 1506  
                              u1430 200E                                u2070 18CE  
                              u2230 1028                                u2150 0E40  
                              u2310 1552                                u1431 2006  
                              u2071 18CA                                u2231 1024  
                              u2151 0E3A                                u2311 154E  
                              u2080 18FC                                u2240 1042  
                              u2160 0E42                                u2320 1576  
                              u2400 12D8                        _BAUD4CONbits 000EE9  
                              u2081 18F8                                u2241 103E  
                              u2321 1572                                u2401 12D4  
                              _LATE 000F7D                                u1450 1A62  
                              u2090 1944                                u2250 105C  
                              u2170 0E58                                u2330 161A  
                              u1451 1A5E                                u2091 1940  
                              u2251 1058                                u2171 0E54  
                              u2331 1616                                _LATG 000F7F  
                              u1460 1A7C                                u1604 146C  
                              u1620 230C                                u2260 106A  
                              u2180 0E88                                u2340 1CCC  
                              u1461 1A78                                u1605 1468  
                              u1621 2308                                u2261 1066  
                              u2181 0E84                                u2341 1CC8  
                              u1470 1AA2                                u1614 14D6  
                              u2270 107C                                u2190 0EA4  
                              u1471 1A9E                                u1615 14D2  
                              u2271 1078                                u2191 0EA0  
                              u2415 12E8                                u2351 1188  
                              u1448 2010                                u1480 1AC0  
                              u2280 108A                                u2416 12EA  
                              u1641 1FDA                                u1481 1ABC  
                              u2281 1086                                u2425 12F4  
                              u2361 119A                                u1490 1ADC  
                              u1650 20DC                                u2290 10A2  
                              u2426 12F6                                _T2PR 000FBC  
                              u1555 21F4                                u1491 1AD8  
                              u1651 20D8                                u2291 109E  
                              u2371 11CA                                u1556 21F6  
                              u1580 132E                                u1660 1C5A  
                              u1565 21FE                                u1581 132A  
                              u1661 1C56                                u2381 11DC  
                              u2437 1170                                u1566 2200  
                              u1590 1412                                u1670 1C72  
                              u1910 1998                                u2390 12C8  
                              u1575 2208                                u1591 140E  
                              u1671 1C6E                                u1911 1994  
                              u2391 12C4                                u2447 1250  
                              u1576 220A                                u1920 19AA  
                              u1921 19A6                                u2457 12A8  
                              u1930 19D2                                u2467 1D38  
                              u1931 19CE                                u1940 1A08  
                              u2477 1C34                                u1941 1A04  
                              u1950 1F9E                                u2487 207A  
                              u1951 1F9A                                u1960 213C  
                              u1961 2138                                u1970 16AC  
                              u1971 16A8                                u1980 16DE  
                              u1981 16DA                                u1991 1708  
                              i2l30 219C                                i2l33 21C2  
                              i2l42 237A                                i2l36 2384  
                              i2l45 233E       colorclick_writetoaddr@address 000A  
   i2colorclick_writetoaddr@address 0004                         main@current 00BB  
                       main@initial 00B3   __end_of_colorclick_toggleClearLED 220C  
    __size_ofi2_colorclick_int_init 0052             __end_of_interrupts_init 224E  
     __end_ofi2_colorclick_int_init 1DCC                                abs@a 0019  
                              _dbuf 013C                                _main 10F0  
                              _dtoa 0E10                                _prec 00ED  
                              _nout 00E9                                pad@i 001E  
                              pad@p 001B                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 0020                                fsr2l 000FD9  
                              btemp 0059                                prodh 000FF4  
                              prodl 000FF3                                start 0026  
                  __end_of_ADC_init 22E2                     __end_of_HighISR 222E  
                      ___param_bank 000000                               ??_abs 001B  
                             ??_pad 001D              ??_clicker2buttons_init 0007  
                   __end_of___aodiv 1822                               ?_main 0001  
                             ?_dtoa 0022                     __end_of___aomod 1986  
                             _ADPCH 000F5F                     __end_of___awdiv 1B14  
                   ___awdiv@divisor 000F                               i1l265 001E  
                             i2l420 22AC                               i2l260 222A  
                             i2l441 1DCA                               i2l438 22FA  
                   ___awdiv@counter 0011                        vfpfcnvrt@fmt 0048  
    __end_ofi2_colorclick_int_clear 22FC             __end_of_sendCharSerial4 2312  
        __end_of_I2C_2_Master_Start 235E          __end_of_I2C_2_Master_Write 2334  
                             _flags 0052                               _fputc 1986  
                   __end_of_forward 1C74                               _fputs 1F5C  
                             pad@fp 0017                               _width 00EB  
                             _putch 2386                               dtoa@d 0024  
                             dtoa@i 0044                   _clicker2LEDs_init 2368  
                             dtoa@n 003C                               dtoa@p 0036  
                             dtoa@s 003A                               dtoa@w 0038  
                             tablat 000FF5                               plusw0 000FEB  
                             plusw2 000FDB              DCmotors_init@PWMperiod 0007  
                ?_clicker2LEDs_init 0001                               ttemp5 005A  
                             ttemp6 005D                               ttemp7 0061  
                             status 000FD8                               wtemp8 005A  
                   __end_of_sprintf 1D28               _I2C_2_Master_RepStart 2340  
                   __initialization 20DE                 ??_clicker2LEDs_init 0007  
                      __end_of_main 1312                        __end_of_dtoa 10F0  
                            ??_main 0050                              ??_dtoa 002C  
           __end_of_colorclick_init 20A6                       __activetblptr 000001  
      __size_ofi2_I2C_2_Master_Idle 0028        __size_ofi2_I2C_2_Master_Stop 000A  
         __end_of_clicker2LEDs_init 2372                        ?_setMotorPWM 0015  
                            ?_fputc 0007                              ?_fputs 0010  
                            _ADRESH 000F64                    ___awdiv@dividend 000D  
                            ?_putch 0001                _colorclick_readClear 1E6C  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                            i2l2301 2380                              i2l2231 219C  
                            i2l2303 2372                              i2l2233 21AC  
                            i2l2305 2376                              i2l2307 2336  
                            i2l2309 233A                              i2l2511 1D94  
                            i2l2513 1D9E                              i2l2435 2290  
                            i2l2515 1DA8                              i2l2507 1D7A  
                            i2l2517 1DB4                              i2l2509 1D84  
                            i2l2519 1DBE                _colorclick_readGreen 1E1C  
                            i2l2299 237C                              i2l2655 22E2  
                            i2l2791 221C                              i2l2793 2222  
                            i2l2795 2226                              i2l2789 220C  
                  ?_interrupts_init 0001                           ??_HighISR 0006  
                            _RX4PPS 000E15                _colorclick_int_clear 22AE  
                            _TX4REG 000EE4                              _LowISR 0018  
                      vfprintf@cfmt 004E                           ??___aodiv 0017  
                         ??___aomod 0017                              ___wmul 21C4  
                         ??___awdiv 0011                    ??_buggyLEDs_init 0007  
                            clear_0 20E4                              clear_1 20F0  
                            clear_2 20FC                    ___awdiv@quotient 0013  
                            isa$std 000001                              pad@buf 0019  
                            dtoa@fp 0022                              _strlen 2114  
                            fputc@c 0007                              fputs@c 0014  
                            fputs@i 0015                              fputs@s 0010  
                         ??_forward 0024     colorclick_toggleClearLED@toggle 0007  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                         ?_ADC_init 0001                    ?_sendCharSerial4 0007  
                            putch@c 0001                    __end_of_vfprintf 1CD6  
                         ??_sprintf 0050                        ?_USART4_init 0001  
             ?_colorclick_readClear 000B               ?_colorclick_readGreen 000B  
             ?_colorclick_int_clear 0001                          __accesstop 0060  
           __end_of__initialization 2102              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001    __end_ofi2_colorclick_writetoaddr 22AE  
                    __pcstackCOMRAM 0001             ?_colorclick_writetoaddr 0009  
                     __end_of_fputc 1A50                       __end_of_fputs 1FA0  
                     __end_of_putch 2388                    ?_colorclick_init 0001  
                _colorclick_readRed 1DCC                          ??_ADC_init 0007  
        __size_of_clicker2LEDs_init 000A                             ??_fputc 000B  
                           ??_fputs 0014                             ??_putch 0007  
               ?_colorclick_readRed 000B                          __pbssBANK0 00D5  
                        __pbssBANK1 0100                        _battery_flag 0054  
     __size_ofi2_I2C_2_Master_Start 000A       __size_ofi2_I2C_2_Master_Write 000C  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
    __end_of_colorclick_writetoaddr 226E                             ?___wmul 0007  
              ??_colorclick_readRed 000D                             ?_strlen 0007  
      __size_of_colorclick_readBlue 0050                             _INT1PPS 000DF1  
             _colorclick_readColour 1FA0        __size_of_colorclick_int_init 0052  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                __size_of_vfpfcnvrt 01B4                             _PWM6DCH 000FA3  
                           _PWM7DCH 000FA0                             _SSP2ADD 000ED6  
            ??_colorclick_readClear 000D                             _SSP2BUF 000ED5  
            ??_colorclick_readGreen 000D              ??_colorclick_int_clear 000C  
              __size_of_setMotorPWM 01D4              __size_of_DCmotors_init 0050  
                           _HighISR 0008          ?_colorclick_toggleClearLED 0001  
                         _ADREFbits 000F58               i2_colorclick_int_init 1D7A  
                _I2C_2_Master_Start 2354                 i2_I2C_2_Master_Idle 219C  
                _I2C_2_Master_Write 2328                             __Hparam 0000  
               i2_I2C_2_Master_Stop 2372                             __Lparam 0000  
                   __size_of_LowISR 000E             sendStringSerial4@string 0009  
                           ___aodiv 169A                             ___aomod 1822  
          i2_colorclick_writetoaddr 228E                             ___awdiv 1A50  
                   __size_of___wmul 0026                 ?_I2C_2_Master_Start 0001  
               ?_I2C_2_Master_Write 0001                           ?_vfprintf 0068  
                      __psmallconst 0E00                             __pcinit 20DE  
           colorclick_readClear@tmp 0010                             __ramtop 0E00  
                           __ptext0 10F0                             __ptext1 1CD6  
                           __ptext2 1C74                             __ptext3 14E6  
                           __ptext4 0E10                             __ptext5 1B14  
                           __ptext6 2114                             __ptext7 1F5C  
                           __ptext8 1986                             __ptext9 2386  
     __size_of_clicker2buttons_init 000A                     __size_of_strlen 0036  
              ?i2_I2C_2_Master_Idle 0001                           _T2CONbits 000FBD  
                      __size_of_abs 0040                        __size_of_pad 00C2  
                           _forward 1BD6                ?i2_I2C_2_Master_Stop 0001  
                         _T2HLTbits 000FBE                       _RxBufWriteCnt 0058  
                           main@buf 0082                             _sprintf 1CD6  
              ??_I2C_2_Master_Start 0008                ??_I2C_2_Master_Write 0008  
                    __pintcode_body 220C                end_of_initialization 2102  
                setMotorPWM@PWMduty 001E             colorclick_readGreen@tmp 0010  
                           fputc@fp 0009                __size_of_USART4_init 0020  
                           int_func 220C                             fputs@fp 0012  
                 __end_of_vfpfcnvrt 169A                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
                        ??_vfprintf 004E                             strlen@a 0009  
                           strlen@s 0007                       _DCmotors_init 1F0C  
            ?_colorclick_readColour 0012               ??i2_I2C_2_Master_Idle 0001  
             ??i2_I2C_2_Master_Stop 0002                           _TRISAbits 000F81  
                         _TRISBbits 000F82                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                   __size_of_ADC_init 001A  
           ??_I2C_2_Master_RepStart 0008              ?i2_colorclick_int_init 0001  
                      _EUSART4RXbuf 00D5                        _EUSART4TXbuf 0100  
         sendCharSerial4@charToSend 0007                          main@motorL 00C3  
                        main@motorR 00CC                      __end_of_LowISR 0026  
          __size_of_interrupts_init 0020                      ?_DCmotors_init 0007  
                       vfpfcnvrt@ap 004A                         vfpfcnvrt@fp 0046  
                       vfpfcnvrt@ll 0060                      __end_of___wmul 21EA  
          ??i2_colorclick_int_clear 0006                      __end_of_strlen 214A  
               start_initialization 20DE                         __end_of_abs 2066  
                       __end_of_pad 1BD6                       _TxBufWriteCnt 0056  
     i2colorclick_writetoaddr@value 0003            __size_of_sendCharSerial4 0016  
               _colorclick_readBlue 1EBC                 _colorclick_int_init 1D28  
                          ??_LowISR 0006                         vfprintf@fmt 006A  
                          ??___wmul 000B       i2I2C_2_Master_Write@data_byte 0002  
                          ??_strlen 0009        __end_ofi2_I2C_2_Master_Start 2386  
              ?_colorclick_readBlue 000B        __end_ofi2_I2C_2_Master_Write 2340  
              ?_colorclick_int_init 0001                         __pbssCOMRAM 0052  
                     __pcstackBANK0 0060                    ___aodiv@dividend 0007  
           __size_of_buggyLEDs_init 0016            __size_of_colorclick_init 0040  
                          ?_HighISR 0001          ??i2_colorclick_writetoaddr 0004  
                         _card_flag 00F3         ??_colorclick_toggleClearLED 0007  
                         _dtoa$2510 0034                         _clear_lower 00F1  
                       _clear_upper 00EF                           __pintcode 0008  
                   ??_DCmotors_init 0009                            ?___aodiv 0007  
                          ?___aomod 0007                            ?___awdiv 000D  
                  ___aodiv@quotient 0019         __size_of_colorclick_readRed 0050  
                       __pintcodelo 0018     __size_ofi2_colorclick_int_clear 001A  
             ??_colorclick_readBlue 000D                I2C_2_Master_Read@ack 0009  
                 __size_of_vfprintf 0062                   ??_interrupts_init 000C  
              I2C_2_Master_Read@tmp 000A               ??_colorclick_int_init 000B  
                       __smallconst 0E00                            ?_forward 0020  
                 _I2C_2_Master_Idle 2174                   _I2C_2_Master_Init 214A  
                 _I2C_2_Master_Read 1FE4                   _I2C_2_Master_Stop 234A  
                      _RxBufReadCnt 0057                            _ADC_init 22C8  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0017  
                ?_I2C_2_Master_Stop 0001                            ?_sprintf 006E  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
                    __size_of_putch 0002       __size_of_colorclick_readClear 0050  
            colorclick_readBlue@tmp 0010       __size_of_colorclick_readGreen 0050  
      __end_of_clicker2buttons_init 2368                   _sendStringSerial4 20A6  
               ??_I2C_2_Master_Idle 0007       __size_of_colorclick_int_clear 001A  
               ??_I2C_2_Master_Init 0007                 ??_I2C_2_Master_Read 0008  
                    ___wmul@product 000B                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 0008                            _LATCbits 000F7B  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
       colorclick_writetoaddr@value 0009                            _LATHbits 000F80  
                          _IPR0bits 000E1F                            _PIE0bits 000E29  
                ?_sendStringSerial4 0009                            _PIE4bits 000E2D  
                          i2u126_40 21AC                            i2u126_41 21A8  
                          i2u127_40 21C2                            i2u127_41 21BE  
                          _PIR0bits 000E33                            i2u249_47 1D8A  
                          i2u186_40 221C                            i2u186_41 2218  
                          _PIR4bits 000E37                   ??_sendCharSerial4 0009  
                          _SSP2CON2 000EDA                 ??_sendStringSerial4 000B  
                          _SSP2STAT 000ED8             ??_colorclick_readColour 001A  
                         _vfpfcnvrt 14E6                          _ADCON0bits 000F60  
         __end_of_I2C_2_Master_Idle 219C           _colorclick_toggleClearLED 21EA  
         __end_of_I2C_2_Master_Init 2174           __end_of_I2C_2_Master_Read 2026  
                 ___wmul@multiplier 0007           __end_of_I2C_2_Master_Stop 2354  
                      setMotorPWM@m 0015         I2C_2_Master_Write@data_byte 0008  
                         main@start 00B2                        _TxBufReadCnt 0055  
                     ??_USART4_init 0007             ??i2_colorclick_int_init 0005  
         __end_of_sendStringSerial4 20DE         __size_of_I2C_2_Master_Start 000A  
       __size_of_I2C_2_Master_Write 000C        colorclick_readColour@current 0012  
            i2_colorclick_int_clear 22E2      __size_of_I2C_2_Master_RepStart 000A  
     __end_of_I2C_2_Master_RepStart 234A            ??_colorclick_writetoaddr 000A  
               __end_of_setMotorPWM 14E6                    __size_of_HighISR 2226  
              i2_I2C_2_Master_Start 237C                   ??_colorclick_init 000B  
              i2_I2C_2_Master_Write 2334                            __Hrparam 0000  
                        vfprintf@ap 006C                            __Lrparam 0000  
                        vfprintf@fp 0068                        __Lsmallconst 0E00  
                         forward@mL 0020                           forward@mR 0022  
       __end_ofi2_I2C_2_Master_Idle 21C4                    __size_of___aodiv 0188  
       __end_ofi2_I2C_2_Master_Stop 237C                    __size_of___aomod 0164  
                  __size_of___awdiv 00C4                          ?_vfpfcnvrt 0046  
                   ___aodiv@divisor 000F                     ___aodiv@counter 0017  
                        _ANSELBbits 000E9A                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                          sprintf@fmt 0070  
                    _buggyLEDs_init 2312                    __size_of_forward 009E  
                          __ptext10 2026                            __ptext11 1822  
                          __ptext20 21C4                            __ptext12 169A  
                          __ptext21 1A50                            __ptext13 20A6  
                          __ptext30 224E                            __ptext22 1FA0  
                          __ptext14 22FC                            __ptext31 2328  
                          __ptext23 1DCC                            __ptext15 222E  
                          __ptext40 2368                            __ptext32 234A  
                          __ptext24 1E1C                            __ptext16 22AE  
                          __ptext41 2312                            __ptext33 2354  
                          __ptext25 1E6C                            __ptext17 1D28  
                          __ptext50 237C                            __ptext42 22C8  
                          __ptext34 2174                            __ptext26 1EBC  
                          __ptext18 1BD6                            __ptext51 219C  
                          __ptext35 21EA                            __ptext27 2340  
                          __ptext19 1312                            __ptext36 214A  
                          __ptext28 1FE4                            __ptext45 22E2  
                          __ptext37 226E                            __ptext29 2066  
                          __ptext46 1D7A                            __ptext38 1F0C  
                          __ptext47 228E                            __ptext39 235E  
                          __ptext48 2334                            __ptext49 2372  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
                  __size_of_sprintf 0052                       __size_of_main 0222  
                     __size_of_dtoa 02E0               ?i2_I2C_2_Master_Start 0001  
             ?i2_I2C_2_Master_Write 0001                 __end_of_USART4_init 228E  
             colorclick_readRed@tmp 0010                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 0059  
                          _vfprintf 1C74                            main@tmpB 00AE  
                          main@tmpC 00B0                            main@tmpG 00AC  
                          main@tmpR 00AA          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
                  ___aomod@dividend 0007                _clicker2buttons_init 235E  
        __size_of_I2C_2_Master_Stop 000A              __end_of_buggyLEDs_init 2328  
                        _INTCONbits 000FF2                         _setMotorPWM 1312  
                       _PWM6CONbits 000FA4          __size_of_sendStringSerial4 0038  
                       _PWM7CONbits 000FA1                            intlevel1 0000  
                          intlevel2 0000                           sprintf@ap 007A  
   __size_of_colorclick_writetoaddr 0020                     _interrupts_init 222E  
                   ___aomod@divisor 000F                         ??_vfpfcnvrt 004C  
                   ___aomod@counter 0017               ?_clicker2buttons_init 0001  
                          sprintf@f 007C                            sprintf@s 006E  
                   ?_buggyLEDs_init 0001                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C  __size_of_colorclick_toggleClearLED 0022  
                       _USART4_init 226E                          _TX4STAbits 000EE8  
                      ___aodiv@sign 0018                     _sendCharSerial4 22FC  
            ??i2_I2C_2_Master_Start 0002              ??i2_I2C_2_Master_Write 0002  
                      ___aomod@sign 0018  
