

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 23:04:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 05/05/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     _INT1PPS	set	3569
    98  0000                     _PIE4bits	set	3629
    99  0000                     _TX4REG	set	3812
   100  0000                     _RC4REG	set	3811
   101  0000                     _PIR4bits	set	3639
   102  0000                     _RC4STAbits	set	3815
   103  0000                     _SP4BRGH	set	3814
   104  0000                     _SP4BRGL	set	3813
   105  0000                     _TX4STAbits	set	3816
   106  0000                     _BAUD4CONbits	set	3817
   107  0000                     _RX4PPS	set	3605
   108  0000                     _RC0PPS	set	3682
   109  0000                     _PIR0bits	set	3635
   110  0000                     _IPR0bits	set	3615
   111  0000                     _PIE0bits	set	3625
   112  0000                     _ANSELBbits	set	3738
   113  0000                     _ANSELFbits	set	3764
   114  0000                     _RC7PPS	set	3689
   115  0000                     _RE2PPS	set	3700
   116  0000                     _SSP2BUF	set	3797
   117  0000                     _SSP2CON2bits	set	3802
   118  0000                     _SSP2CON2	set	3802
   119  0000                     _SSP2STAT	set	3800
   120  0000                     _RD6PPS	set	3696
   121  0000                     _RD5PPS	set	3695
   122  0000                     _SSP2CLKPPS	set	3612
   123  0000                     _SSP2DATPPS	set	3613
   124  0000                     _ANSELDbits	set	3751
   125  0000                     _SSP2ADD	set	3798
   126  0000                     _SSP2CON1bits	set	3801
   127  0000                     _ADPCH	set	3935
   128  0000                     _ADREFbits	set	3928
   129  0000                     _LATAbits	set	3961
   130  0000                     _TRISAbits	set	3969
   131  0000                     _ADRESH	set	3940
   132  0000                     _ADCON0bits	set	3936
   133  0000                     _INTCONbits	set	4082
   134  0000                     _TRISBbits	set	3970
   135  0000                     _TRISHbits	set	3976
   136  0000                     _TRISFbits	set	3974
   137  0000                     _PWM7CONbits	set	4001
   138  0000                     _PWM6CONbits	set	4004
   139  0000                     _LATGbits	set	3967
   140  0000                     _LATCbits	set	3963
   141  0000                     _LATEbits	set	3965
   142  0000                     _TRISGbits	set	3975
   143  0000                     _TRISCbits	set	3971
   144  0000                     _TRISEbits	set	3973
   145  0000                     _T2PR	set	4028
   146  0000                     _T2CLKCONbits	set	4031
   147  0000                     _T2HLTbits	set	4030
   148  0000                     _T2CONbits	set	4029
   149  0000                     _LATFbits	set	3966
   150  0000                     _LATHbits	set	3968
   151  0000                     _LATDbits	set	3964
   152  0000                     _TRISDbits	set	3972
   153  0000                     _LATG	set	3967
   154  0000                     _PWM7DCH	set	4000
   155  0000                     _LATE	set	3965
   156  0000                     _PWM6DCH	set	4003
   157                           
   158                           ; #config settings
   159                           
   160                           	psect	cinit
   161  001A48                     __pcinit:
   162                           	callstack 0
   163  001A48                     start_initialization:
   164                           	callstack 0
   165  001A48                     __initialization:
   166                           	callstack 0
   167                           
   168                           ; Clear objects allocated to BANK0 (82 bytes)
   169  001A48  EE00  F060         	lfsr	0,__pbssBANK0
   170  001A4C  0E52               	movlw	82
   171  001A4E                     clear_0:
   172  001A4E  6AEE               	clrf	postinc0,c
   173  001A50  06E8               	decf	wreg,f,c
   174  001A52  E1FD               	bnz	clear_0
   175                           
   176                           ; Clear objects allocated to COMRAM (9 bytes)
   177  001A54  EE00  F043         	lfsr	0,__pbssCOMRAM
   178  001A58  0E09               	movlw	9
   179  001A5A                     clear_1:
   180  001A5A  6AEE               	clrf	postinc0,c
   181  001A5C  06E8               	decf	wreg,f,c
   182  001A5E  E1FD               	bnz	clear_1
   183  001A60                     end_of_initialization:
   184                           	callstack 0
   185  001A60                     __end_of__initialization:
   186                           	callstack 0
   187  001A60  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   188  001A62  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   189  001A64  0100               	movlb	0
   190  001A66  EF46  F004         	goto	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMRAM
   193  000043                     __pbssCOMRAM:
   194                           	callstack 0
   195  000043                     _clear_upper:
   196                           	callstack 0
   197  000043                     	ds	2
   198  000045                     _clear_lower:
   199                           	callstack 0
   200  000045                     	ds	2
   201  000047                     _TxBufReadCnt:
   202                           	callstack 0
   203  000047                     	ds	1
   204  000048                     _TxBufWriteCnt:
   205                           	callstack 0
   206  000048                     	ds	1
   207  000049                     _RxBufReadCnt:
   208                           	callstack 0
   209  000049                     	ds	1
   210  00004A                     _RxBufWriteCnt:
   211                           	callstack 0
   212  00004A                     	ds	1
   213  00004B                     _returnhome_flag:
   214                           	callstack 0
   215  00004B                     	ds	1
   216                           
   217                           	psect	bssBANK0
   218  000060                     __pbssBANK0:
   219                           	callstack 0
   220  000060                     _EUSART4TXbuf:
   221                           	callstack 0
   222  000060                     	ds	60
   223  00009C                     _EUSART4RXbuf:
   224                           	callstack 0
   225  00009C                     	ds	20
   226  0000B0                     _card_flag:
   227                           	callstack 0
   228  0000B0                     	ds	1
   229  0000B1                     _battery_flag:
   230                           	callstack 0
   231  0000B1                     	ds	1
   232                           
   233                           	psect	cstackBANK0
   234  0000B2                     __pcstackBANK0:
   235                           	callstack 0
   236  0000B2                     main@move:
   237                           	callstack 0
   238                           
   239                           ; 1 bytes @ 0x0
   240  0000B2                     	ds	1
   241  0000B3                     main@start:
   242                           	callstack 0
   243                           
   244                           ; 1 bytes @ 0x1
   245  0000B3                     	ds	1
   246  0000B4                     main@initial:
   247                           	callstack 0
   248                           
   249                           ; 8 bytes @ 0x2
   250  0000B4                     	ds	8
   251  0000BC                     main@current:
   252                           	callstack 0
   253                           
   254                           ; 8 bytes @ 0xA
   255  0000BC                     	ds	8
   256  0000C4                     main@motorL:
   257                           	callstack 0
   258                           
   259                           ; 9 bytes @ 0x12
   260  0000C4                     	ds	9
   261  0000CD                     main@motorR:
   262                           	callstack 0
   263                           
   264                           ; 9 bytes @ 0x1B
   265  0000CD                     	ds	9
   266                           
   267                           	psect	cstackCOMRAM
   268  000001                     __pcstackCOMRAM:
   269                           	callstack 0
   270  000001                     ??i2_I2C_2_Master_Idle:
   271  000001                     
   272                           ; 1 bytes @ 0x0
   273  000001                     	ds	1
   274  000002                     i2I2C_2_Master_Write@data_byte:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x1
   278  000002                     	ds	1
   279  000003                     i2colorclick_writetoaddr@value:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x2
   283  000003                     	ds	1
   284  000004                     i2colorclick_writetoaddr@address:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x3
   288  000004                     	ds	1
   289  000005                     ??i2_colour_int_init:
   290                           
   291                           ; 1 bytes @ 0x4
   292  000005                     	ds	1
   293  000006                     ??_LowISR:
   294  000006                     
   295                           ; 1 bytes @ 0x5
   296  000006                     	ds	1
   297  000007                     ??_I2C_2_Master_Idle:
   298  000007                     ?___wmul:
   299                           	callstack 0
   300  000007                     ?___lwdiv:
   301                           	callstack 0
   302  000007                     ?___xxtofl:
   303                           	callstack 0
   304  000007                     DCmotors_init@PWMperiod:
   305                           	callstack 0
   306  000007                     colorclick_toggleClearLED@toggle:
   307                           	callstack 0
   308  000007                     ___wmul@multiplier:
   309                           	callstack 0
   310  000007                     ___lwdiv@dividend:
   311                           	callstack 0
   312  000007                     ___xxtofl@val:
   313                           	callstack 0
   314                           
   315                           ; 4 bytes @ 0x6
   316  000007                     	ds	1
   317  000008                     ??_I2C_2_Master_Read:
   318  000008                     I2C_2_Master_Write@data_byte:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x7
   322  000008                     	ds	1
   323  000009                     I2C_2_Master_Read@ack:
   324                           	callstack 0
   325  000009                     colorclick_writetoaddr@value:
   326                           	callstack 0
   327  000009                     ___wmul@multiplicand:
   328                           	callstack 0
   329  000009                     ___lwdiv@divisor:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x8
   333  000009                     	ds	1
   334  00000A                     I2C_2_Master_Read@tmp:
   335                           	callstack 0
   336  00000A                     colorclick_writetoaddr@address:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x9
   340  00000A                     	ds	1
   341  00000B                     ??_colorclick_init:
   342  00000B                     ??_colour_int_init:
   343  00000B                     ??___xxtofl:
   344  00000B                     ?_colorclick_readRed:
   345                           	callstack 0
   346  00000B                     ?_colorclick_readGreen:
   347                           	callstack 0
   348  00000B                     ?_colorclick_readBlue:
   349                           	callstack 0
   350  00000B                     ?_colorclick_readClear:
   351                           	callstack 0
   352  00000B                     ___wmul@product:
   353                           	callstack 0
   354  00000B                     ___lwdiv@quotient:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0xA
   358  00000B                     	ds	1
   359  00000C                     
   360                           ; 1 bytes @ 0xB
   361  00000C                     	ds	1
   362  00000D                     ??_colorclick_readRed:
   363  00000D                     ??_colorclick_readGreen:
   364  00000D                     ??_colorclick_readBlue:
   365  00000D                     ??_colorclick_readClear:
   366  00000D                     ?___awdiv:
   367                           	callstack 0
   368  00000D                     ___lwdiv@counter:
   369                           	callstack 0
   370  00000D                     ___awdiv@dividend:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xC
   374  00000D                     	ds	2
   375  00000F                     ___xxtofl@sign:
   376                           	callstack 0
   377  00000F                     ___awdiv@divisor:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xE
   381  00000F                     	ds	1
   382  000010                     ___xxtofl@exp:
   383                           	callstack 0
   384  000010                     colorclick_readRed@tmp:
   385                           	callstack 0
   386  000010                     colorclick_readGreen@tmp:
   387                           	callstack 0
   388  000010                     colorclick_readBlue@tmp:
   389                           	callstack 0
   390  000010                     colorclick_readClear@tmp:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0xF
   394  000010                     	ds	1
   395  000011                     ___awdiv@counter:
   396                           	callstack 0
   397  000011                     ___xxtofl@arg:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x10
   401  000011                     	ds	1
   402  000012                     ?_colorclick_readColour:
   403                           	callstack 0
   404  000012                     ___awdiv@sign:
   405                           	callstack 0
   406  000012                     colorclick_readColour@current:
   407                           	callstack 0
   408                           
   409                           ; 8 bytes @ 0x11
   410  000012                     	ds	1
   411  000013                     ___awdiv@quotient:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x12
   415  000013                     	ds	2
   416  000015                     setMotorPWM@m:
   417                           	callstack 0
   418  000015                     ___flge@ff1:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0x14
   422  000015                     	ds	2
   423  000017                     ??_setMotorPWM:
   424                           
   425                           ; 1 bytes @ 0x16
   426  000017                     	ds	2
   427  000019                     ___flge@ff2:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x18
   431  000019                     	ds	1
   432  00001A                     
   433                           ; 1 bytes @ 0x19
   434  00001A                     	ds	3
   435  00001D                     ??___flge:
   436                           
   437                           ; 1 bytes @ 0x1C
   438  00001D                     	ds	1
   439  00001E                     setMotorPWM@PWMduty:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x1D
   443  00001E                     	ds	2
   444  000020                     forward@mL:
   445                           	callstack 0
   446  000020                     reverse@mL:
   447                           	callstack 0
   448  000020                     stop@mL:
   449                           	callstack 0
   450  000020                     turnLeft@mL:
   451                           	callstack 0
   452  000020                     turnRight@mL:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x1F
   456  000020                     	ds	2
   457  000022                     forward@mR:
   458                           	callstack 0
   459  000022                     reverse@mR:
   460                           	callstack 0
   461  000022                     stop@mR:
   462                           	callstack 0
   463  000022                     turnLeft@mR:
   464                           	callstack 0
   465  000022                     turnRight@mR:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x21
   469  000022                     	ds	2
   470  000024                     ??_forward:
   471  000024                     ??_stop:
   472  000024                     ??_reverse:
   473  000024                     turnLeft@deg:
   474                           	callstack 0
   475  000024                     turnRight@deg:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x23
   479  000024                     	ds	1
   480  000025                     ??_turnLeft:
   481  000025                     ??_turnRight:
   482                           
   483                           ; 1 bytes @ 0x24
   484  000025                     	ds	2
   485  000027                     read_card@initial:
   486                           	callstack 0
   487                           
   488                           ; 8 bytes @ 0x26
   489  000027                     	ds	8
   490  00002F                     read_card@current:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0x2E
   494  00002F                     	ds	8
   495  000037                     read_card@mL:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x36
   499  000037                     	ds	2
   500  000039                     read_card@mR:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x38
   504  000039                     	ds	2
   505  00003B                     read_card@R_rel:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x3A
   509  00003B                     	ds	2
   510  00003D                     read_card@G_rel:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x3C
   514  00003D                     	ds	2
   515  00003F                     read_card@B_rel:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x3E
   519  00003F                     	ds	2
   520  000041                     ??_main:
   521                           
   522                           ; 1 bytes @ 0x40
   523  000041                     	ds	2
   524                           
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 11 in file "main.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  motorR          9   27[BANK0 ] struct .
   535 ;;  motorL          9   18[BANK0 ] struct .
   536 ;;  current         8   10[BANK0 ] struct .
   537 ;;  initial         8    2[BANK0 ] struct .
   538 ;;  start           1    1[BANK0 ] unsigned char 
   539 ;;  PWMperiod       1    0        unsigned char 
   540 ;;  move            1    0[BANK0 ] unsigned char 
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   551 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   553 ;;      Totals:         2      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   554 ;;Total ram usage:       38 bytes
   555 ;; Hardware stack levels required when called: 13
   556 ;; This function calls:
   557 ;;		_ADC_init
   558 ;;		_DCmotors_init
   559 ;;		_USART4_init
   560 ;;		_colorclick_init
   561 ;;		_colorclick_readColour
   562 ;;		_colorclick_toggleClearLED
   563 ;;		_forward
   564 ;;		_interrupts_init
   565 ;;		_read_card
   566 ;;		_stop
   567 ;; This function is called by:
   568 ;;		Startup code after reset
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text0
   573  00088C                     __ptext0:
   574                           	callstack 0
   575  00088C                     _main:
   576                           	callstack 18
   577  00088C                     
   578                           ;main.c: 16:     card_flag = 0;
   579  00088C  0E00               	movlw	0
   580  00088E  0100               	movlb	0	; () banked
   581  000890  6FB0               	movwf	_card_flag& (0+255),b	;volatile
   582                           
   583                           ;main.c: 17:     battery_flag = 0;
   584  000892  0E00               	movlw	0
   585  000894  6FB1               	movwf	_battery_flag& (0+255),b	;volatile
   586                           
   587                           ;main.c: 18:     returnhome_flag = 0;
   588  000896  0E00               	movlw	0
   589  000898  6E4B               	movwf	_returnhome_flag^0,c	;volatile
   590  00089A                     
   591                           ; BSR set to: 0
   592                           ;main.c: 19:     ADC_init();
   593  00089A  ECA4  F00D         	call	_ADC_init	;wreg free
   594  00089E                     
   595                           ;main.c: 20:     colorclick_init();
   596  00089E  ECB4  F00C         	call	_colorclick_init	;wreg free
   597  0008A2                     
   598                           ;main.c: 21:     DCmotors_init(PWMperiod);
   599  0008A2  0E63               	movlw	99
   600  0008A4  ECFB  F00B         	call	_DCmotors_init
   601  0008A8                     
   602                           ;main.c: 22:     USART4_init();
   603  0008A8  EC77  F00D         	call	_USART4_init	;wreg free
   604  0008AC                     
   605                           ;main.c: 27:     DC_motor motorL;;main.c: 28:     motorL.power=0;
   606  0008AC  0E00               	movlw	0
   607  0008AE  0100               	movlb	0	; () banked
   608  0008B0  6FC4               	movwf	main@motorL& (0+255),b
   609  0008B2                     
   610                           ; BSR set to: 0
   611                           ;main.c: 29:     motorL.direction=1;
   612  0008B2  0E01               	movlw	1
   613  0008B4  6FC5               	movwf	(main@motorL+1)& (0+255),b
   614                           
   615                           ;main.c: 30:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   616  0008B6  0EA3               	movlw	163
   617  0008B8  6FC6               	movwf	(main@motorL+2)& (0+255),b
   618  0008BA  0E0F               	movlw	15
   619  0008BC  6FC7               	movwf	(main@motorL+3)& (0+255),b
   620                           
   621                           ;main.c: 31:     motorL.dir_LAT=(unsigned char *)(&LATE);
   622  0008BE  0E7D               	movlw	125
   623  0008C0  6FC8               	movwf	(main@motorL+4)& (0+255),b
   624  0008C2  0E0F               	movlw	15
   625  0008C4  6FC9               	movwf	(main@motorL+5)& (0+255),b
   626  0008C6                     
   627                           ; BSR set to: 0
   628                           ;main.c: 32:     motorL.dir_pin=4;
   629  0008C6  0E04               	movlw	4
   630  0008C8  6FCA               	movwf	(main@motorL+6)& (0+255),b
   631  0008CA                     
   632                           ; BSR set to: 0
   633                           ;main.c: 33:     motorL.PWMperiod=PWMperiod;
   634  0008CA  0E00               	movlw	0
   635  0008CC  6FCC               	movwf	(main@motorL+8)& (0+255),b
   636  0008CE  0E63               	movlw	99
   637  0008D0  6FCB               	movwf	(main@motorL+7)& (0+255),b
   638  0008D2                     
   639                           ; BSR set to: 0
   640                           ;main.c: 36:     DC_motor motorR;;main.c: 37:     motorR.power=0;
   641  0008D2  0E00               	movlw	0
   642  0008D4  6FCD               	movwf	main@motorR& (0+255),b
   643  0008D6                     
   644                           ; BSR set to: 0
   645                           ;main.c: 38:     motorR.direction=1;
   646  0008D6  0E01               	movlw	1
   647  0008D8  6FCE               	movwf	(main@motorR+1)& (0+255),b
   648  0008DA                     
   649                           ; BSR set to: 0
   650                           ;main.c: 39:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   651  0008DA  0EA0               	movlw	160
   652  0008DC  6FCF               	movwf	(main@motorR+2)& (0+255),b
   653  0008DE  0E0F               	movlw	15
   654  0008E0  6FD0               	movwf	(main@motorR+3)& (0+255),b
   655  0008E2                     
   656                           ; BSR set to: 0
   657                           ;main.c: 40:     motorR.dir_LAT=(unsigned char *)(&LATG);
   658  0008E2  0E7F               	movlw	127
   659  0008E4  6FD1               	movwf	(main@motorR+4)& (0+255),b
   660  0008E6  0E0F               	movlw	15
   661  0008E8  6FD2               	movwf	(main@motorR+5)& (0+255),b
   662  0008EA                     
   663                           ; BSR set to: 0
   664                           ;main.c: 41:     motorR.dir_pin=6;
   665  0008EA  0E06               	movlw	6
   666  0008EC  6FD3               	movwf	(main@motorR+6)& (0+255),b
   667  0008EE                     
   668                           ; BSR set to: 0
   669                           ;main.c: 42:     motorR.PWMperiod=PWMperiod;
   670  0008EE  0E00               	movlw	0
   671  0008F0  6FD5               	movwf	(main@motorR+8)& (0+255),b
   672  0008F2  0E63               	movlw	99
   673  0008F4  6FD4               	movwf	(main@motorR+7)& (0+255),b
   674  0008F6                     
   675                           ; BSR set to: 0
   676                           ;main.c: 52:     LATDbits.LATD7 = 0;
   677  0008F6  9E7C               	bcf	124,7,c	;volatile
   678  0008F8                     
   679                           ; BSR set to: 0
   680                           ;main.c: 53:     LATHbits.LATH3 = 0;
   681  0008F8  9680               	bcf	128,3,c	;volatile
   682  0008FA                     
   683                           ; BSR set to: 0
   684                           ;main.c: 55:     LATDbits.LATD3 = 1;
   685  0008FA  867C               	bsf	124,3,c	;volatile
   686  0008FC                     
   687                           ; BSR set to: 0
   688                           ;main.c: 56:     colorclick_toggleClearLED(1);
   689  0008FC  0E01               	movlw	1
   690  0008FE  EC35  F00D         	call	_colorclick_toggleClearLED
   691  000902                     
   692                           ;main.c: 58:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   693  000902  0E52               	movlw	82
   694  000904  6E42               	movwf	(??_main+1)^0,c
   695  000906  0E2B               	movlw	43
   696  000908  6E41               	movwf	??_main^0,c
   697  00090A  0E00               	movlw	0
   698  00090C                     u2407:
   699  00090C  2EE8               	decfsz	wreg,f,c
   700  00090E  D7FE               	bra	u2407
   701  000910  2E41               	decfsz	??_main^0,f,c
   702  000912  D7FC               	bra	u2407
   703  000914  2E42               	decfsz	(??_main+1)^0,f,c
   704  000916  D7FA               	bra	u2407
   705  000918  D000               	nop2	
   706  00091A                     
   707                           ;main.c: 60:     RGB_val initial;;main.c: 61:     initial = colorclick_readColour(initia
      +                          l);
   708  00091A  EE20  F0B4         	lfsr	2,main@initial
   709  00091E  EE00  F012         	lfsr	0,colorclick_readColour@current
   710  000922  0E07               	movlw	7
   711  000924                     u2181:
   712  000924  CFDB FFEB          	movff	plusw2,plusw0
   713  000928  06E8               	decf	wreg,f,c
   714  00092A  E2FC               	bc	u2181
   715  00092C  EC71  F00C         	call	_colorclick_readColour	;wreg free
   716  000930  EE20  F0B4         	lfsr	2,main@initial
   717  000934  0E07               	movlw	7
   718  000936                     u2191:
   719  000936  CFEB FFDB          	movff	plusw0,plusw2
   720  00093A  06E8               	decf	wreg,f,c
   721  00093C  E2FC               	bc	u2191
   722  00093E                     
   723                           ;main.c: 64:     clear_lower = initial.C - 10;
   724  00093E  0EF6               	movlw	246
   725  000940  0100               	movlb	0	; () banked
   726  000942  25BA               	addwf	(main@initial+6)& (0+255),w,b
   727  000944  6E45               	movwf	_clear_lower^0,c	;volatile
   728  000946  0EFF               	movlw	255
   729  000948  21BB               	addwfc	(main@initial+7)& (0+255),w,b
   730  00094A  6E46               	movwf	(_clear_lower+1)^0,c	;volatile
   731  00094C                     
   732                           ; BSR set to: 0
   733                           ;main.c: 65:     clear_upper = initial.C + 10;
   734  00094C  0E0A               	movlw	10
   735  00094E  25BA               	addwf	(main@initial+6)& (0+255),w,b
   736  000950  6E43               	movwf	_clear_upper^0,c	;volatile
   737  000952  0E00               	movlw	0
   738  000954  21BB               	addwfc	(main@initial+7)& (0+255),w,b
   739  000956  6E44               	movwf	(_clear_upper+1)^0,c	;volatile
   740  000958                     
   741                           ; BSR set to: 0
   742                           ;main.c: 69:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   743  000958  0E52               	movlw	82
   744  00095A  6E42               	movwf	(??_main+1)^0,c
   745  00095C  0E2B               	movlw	43
   746  00095E  6E41               	movwf	??_main^0,c
   747  000960  0E00               	movlw	0
   748  000962                     u2417:
   749  000962  2EE8               	decfsz	wreg,f,c
   750  000964  D7FE               	bra	u2417
   751  000966  2E41               	decfsz	??_main^0,f,c
   752  000968  D7FC               	bra	u2417
   753  00096A  2E42               	decfsz	(??_main+1)^0,f,c
   754  00096C  D7FA               	bra	u2417
   755  00096E  D000               	nop2	
   756  000970                     
   757                           ;main.c: 71:     interrupts_init();
   758  000970  EC57  F00D         	call	_interrupts_init	;wreg free
   759  000974                     
   760                           ;main.c: 122:     RGB_val current;;main.c: 124:     unsigned char start = 0;
   761  000974  0E00               	movlw	0
   762  000976  0100               	movlb	0	; () banked
   763  000978  6FB3               	movwf	main@start& (0+255),b
   764  00097A                     l2623:
   765                           
   766                           ; BSR set to: 0
   767                           ;main.c: 125:     unsigned char move = 0;
   768  00097A  0E00               	movlw	0
   769  00097C  6FB2               	movwf	main@move& (0+255),b
   770  00097E                     l2625:
   771                           
   772                           ; BSR set to: 0
   773                           ;main.c: 156:         LATHbits.LATH3 = card_flag;
   774  00097E  B1B0               	btfsc	_card_flag& (0+255),0,b	;volatile
   775  000980  D002               	bra	u2205
   776  000982  9680               	bcf	128,3,c	;volatile
   777  000984  D001               	bra	u2206
   778  000986                     u2205:
   779  000986  8680               	bsf	128,3,c	;volatile
   780  000988                     u2206:
   781  000988                     
   782                           ;main.c: 157:         LATDbits.LATD7 = move;
   783  000988  0100               	movlb	0	; () banked
   784  00098A  B1B2               	btfsc	main@move& (0+255),0,b
   785  00098C  D002               	bra	u2215
   786  00098E  9E7C               	bcf	124,7,c	;volatile
   787  000990  D001               	bra	u2216
   788  000992                     u2215:
   789  000992  8E7C               	bsf	124,7,c	;volatile
   790  000994                     u2216:
   791  000994                     
   792                           ;main.c: 158:         LATFbits.LATF0 = start;
   793  000994  0100               	movlb	0	; () banked
   794  000996  B1B3               	btfsc	main@start& (0+255),0,b
   795  000998  D002               	bra	u2225
   796  00099A  907E               	bcf	126,0,c	;volatile
   797  00099C  D001               	bra	u2226
   798  00099E                     u2225:
   799  00099E  807E               	bsf	126,0,c	;volatile
   800  0009A0                     u2226:
   801  0009A0                     
   802                           ;main.c: 162:         if(start==0 && card_flag){
   803  0009A0  0100               	movlb	0	; () banked
   804  0009A2  51B3               	movf	main@start& (0+255),w,b
   805  0009A4  A4D8               	btfss	status,2,c
   806  0009A6  EFD7  F004         	goto	u2231
   807  0009AA  EFD9  F004         	goto	u2230
   808  0009AE                     u2231:
   809  0009AE  EFF1  F004         	goto	l2639
   810  0009B2                     u2230:
   811  0009B2                     
   812                           ; BSR set to: 0
   813  0009B2  51B0               	movf	_card_flag& (0+255),w,b	;volatile
   814  0009B4  B4D8               	btfsc	status,2,c
   815  0009B6  EFDF  F004         	goto	u2241
   816  0009BA  EFE1  F004         	goto	u2240
   817  0009BE                     u2241:
   818  0009BE  EFF1  F004         	goto	l2639
   819  0009C2                     u2240:
   820  0009C2                     
   821                           ; BSR set to: 0
   822                           ;main.c: 163:             card_flag = 0;
   823  0009C2  0E00               	movlw	0
   824  0009C4  6FB0               	movwf	_card_flag& (0+255),b	;volatile
   825                           
   826                           ;main.c: 164:             start = 1;
   827  0009C6  0E01               	movlw	1
   828  0009C8  6FB3               	movwf	main@start& (0+255),b
   829  0009CA                     
   830                           ; BSR set to: 0
   831                           ;main.c: 165:             _delay((unsigned long)((100)*(64000000/4000.0)));
   832  0009CA  0E09               	movlw	9
   833  0009CC  6E42               	movwf	(??_main+1)^0,c
   834  0009CE  0E1E               	movlw	30
   835  0009D0  6E41               	movwf	??_main^0,c
   836  0009D2  0EE4               	movlw	228
   837  0009D4                     u2427:
   838  0009D4  2EE8               	decfsz	wreg,f,c
   839  0009D6  D7FE               	bra	u2427
   840  0009D8  2E41               	decfsz	??_main^0,f,c
   841  0009DA  D7FC               	bra	u2427
   842  0009DC  2E42               	decfsz	(??_main+1)^0,f,c
   843  0009DE  D7FA               	bra	u2427
   844  0009E0  D000               	nop2	
   845  0009E2                     l2639:
   846                           
   847                           ;main.c: 168:         if(move<1 && start>0){
   848  0009E2  0100               	movlb	0	; () banked
   849  0009E4  51B2               	movf	main@move& (0+255),w,b
   850  0009E6  A4D8               	btfss	status,2,c
   851  0009E8  EFF8  F004         	goto	u2251
   852  0009EC  EFFA  F004         	goto	u2250
   853  0009F0                     u2251:
   854  0009F0  EF39  F005         	goto	l2655
   855  0009F4                     u2250:
   856  0009F4                     
   857                           ; BSR set to: 0
   858  0009F4  51B3               	movf	main@start& (0+255),w,b
   859  0009F6  B4D8               	btfsc	status,2,c
   860  0009F8  EF00  F005         	goto	u2261
   861  0009FC  EF02  F005         	goto	u2260
   862  000A00                     u2261:
   863  000A00  EF39  F005         	goto	l2655
   864  000A04                     u2260:
   865  000A04                     
   866                           ; BSR set to: 0
   867                           ;main.c: 169:             _delay((unsigned long)((100)*(64000000/4000.0)));
   868  000A04  0E09               	movlw	9
   869  000A06  6E42               	movwf	(??_main+1)^0,c
   870  000A08  0E1E               	movlw	30
   871  000A0A  6E41               	movwf	??_main^0,c
   872  000A0C  0EE4               	movlw	228
   873  000A0E                     u2437:
   874  000A0E  2EE8               	decfsz	wreg,f,c
   875  000A10  D7FE               	bra	u2437
   876  000A12  2E41               	decfsz	??_main^0,f,c
   877  000A14  D7FC               	bra	u2437
   878  000A16  2E42               	decfsz	(??_main+1)^0,f,c
   879  000A18  D7FA               	bra	u2437
   880  000A1A  D000               	nop2	
   881  000A1C                     
   882                           ;main.c: 170:             forward(&motorL, &motorR);
   883  000A1C  0EC4               	movlw	low main@motorL
   884  000A1E  6E20               	movwf	forward@mL^0,c
   885  000A20  0E00               	movlw	high main@motorL
   886  000A22  6E21               	movwf	(forward@mL+1)^0,c
   887  000A24  0ECD               	movlw	low main@motorR
   888  000A26  6E22               	movwf	forward@mR^0,c
   889  000A28  0E00               	movlw	high main@motorR
   890  000A2A  6E23               	movwf	(forward@mR+1)^0,c
   891  000A2C  EC3A  F00A         	call	_forward	;wreg free
   892  000A30                     
   893                           ;main.c: 171:             if(card_flag==1){
   894  000A30  0100               	movlb	0	; () banked
   895  000A32  05B0               	decf	_card_flag& (0+255),w,b	;volatile
   896  000A34  A4D8               	btfss	status,2,c
   897  000A36  EF1F  F005         	goto	u2271
   898  000A3A  EF21  F005         	goto	u2270
   899  000A3E                     u2271:
   900  000A3E  EF39  F005         	goto	l2655
   901  000A42                     u2270:
   902  000A42                     
   903                           ; BSR set to: 0
   904                           ;main.c: 172:                 stop(&motorL, &motorR);
   905  000A42  0EC4               	movlw	low main@motorL
   906  000A44  6E20               	movwf	stop@mL^0,c
   907  000A46  0E00               	movlw	high main@motorL
   908  000A48  6E21               	movwf	(stop@mL+1)^0,c
   909  000A4A  0ECD               	movlw	low main@motorR
   910  000A4C  6E22               	movwf	stop@mR^0,c
   911  000A4E  0E00               	movlw	high main@motorR
   912  000A50  6E23               	movwf	(stop@mR+1)^0,c
   913  000A52  ECD6  F00A         	call	_stop	;wreg free
   914  000A56                     
   915                           ;main.c: 173:                 _delay((unsigned long)((60)*(64000000/4000.0)));
   916  000A56  0E05               	movlw	5
   917  000A58  6E42               	movwf	(??_main+1)^0,c
   918  000A5A  0EDF               	movlw	223
   919  000A5C  6E41               	movwf	??_main^0,c
   920  000A5E  0EBC               	movlw	188
   921  000A60                     u2447:
   922  000A60  2EE8               	decfsz	wreg,f,c
   923  000A62  D7FE               	bra	u2447
   924  000A64  2E41               	decfsz	??_main^0,f,c
   925  000A66  D7FC               	bra	u2447
   926  000A68  2E42               	decfsz	(??_main+1)^0,f,c
   927  000A6A  D7FA               	bra	u2447
   928  000A6C                     
   929                           ;main.c: 174:                 move = 1;
   930  000A6C  0E01               	movlw	1
   931  000A6E  0100               	movlb	0	; () banked
   932  000A70  6FB2               	movwf	main@move& (0+255),b
   933  000A72                     l2655:
   934                           
   935                           ; BSR set to: 0
   936                           ;main.c: 178:         if (card_flag==1) {
   937  000A72  05B0               	decf	_card_flag& (0+255),w,b	;volatile
   938  000A74  A4D8               	btfss	status,2,c
   939  000A76  EF3F  F005         	goto	u2281
   940  000A7A  EF41  F005         	goto	u2280
   941  000A7E                     u2281:
   942  000A7E  EFBF  F004         	goto	l2625
   943  000A82                     u2280:
   944  000A82                     
   945                           ; BSR set to: 0
   946                           ;main.c: 179:             _delay((unsigned long)((100)*(64000000/4000.0)));
   947  000A82  0E09               	movlw	9
   948  000A84  6E42               	movwf	(??_main+1)^0,c
   949  000A86  0E1E               	movlw	30
   950  000A88  6E41               	movwf	??_main^0,c
   951  000A8A  0EE4               	movlw	228
   952  000A8C                     u2457:
   953  000A8C  2EE8               	decfsz	wreg,f,c
   954  000A8E  D7FE               	bra	u2457
   955  000A90  2E41               	decfsz	??_main^0,f,c
   956  000A92  D7FC               	bra	u2457
   957  000A94  2E42               	decfsz	(??_main+1)^0,f,c
   958  000A96  D7FA               	bra	u2457
   959  000A98  D000               	nop2	
   960  000A9A                     
   961                           ;main.c: 180:             current = colorclick_readColour(current);
   962  000A9A  EE20  F0BC         	lfsr	2,main@current
   963  000A9E  EE00  F012         	lfsr	0,colorclick_readColour@current
   964  000AA2  0E07               	movlw	7
   965  000AA4                     u2291:
   966  000AA4  CFDB FFEB          	movff	plusw2,plusw0
   967  000AA8  06E8               	decf	wreg,f,c
   968  000AAA  E2FC               	bc	u2291
   969  000AAC  EC71  F00C         	call	_colorclick_readColour	;wreg free
   970  000AB0  EE20  F0BC         	lfsr	2,main@current
   971  000AB4  0E07               	movlw	7
   972  000AB6                     u2301:
   973  000AB6  CFEB FFDB          	movff	plusw0,plusw2
   974  000ABA  06E8               	decf	wreg,f,c
   975  000ABC  E2FC               	bc	u2301
   976  000ABE                     
   977                           ;main.c: 181:             read_card(initial, current, &motorL, &motorR);
   978  000ABE  EE20  F0B4         	lfsr	2,main@initial
   979  000AC2  EE00  F027         	lfsr	0,read_card@initial
   980  000AC6  0E07               	movlw	7
   981  000AC8                     u2311:
   982  000AC8  CFDB FFEB          	movff	plusw2,plusw0
   983  000ACC  06E8               	decf	wreg,f,c
   984  000ACE  E2FC               	bc	u2311
   985  000AD0  EE20  F0BC         	lfsr	2,main@current
   986  000AD4  EE00  F02F         	lfsr	0,read_card@current
   987  000AD8  0E07               	movlw	7
   988  000ADA                     u2321:
   989  000ADA  CFDB FFEB          	movff	plusw2,plusw0
   990  000ADE  06E8               	decf	wreg,f,c
   991  000AE0  E2FC               	bc	u2321
   992  000AE2  0EC4               	movlw	low main@motorL
   993  000AE4  6E37               	movwf	read_card@mL^0,c
   994  000AE6  0E00               	movlw	high main@motorL
   995  000AE8  6E38               	movwf	(read_card@mL+1)^0,c
   996  000AEA  0ECD               	movlw	low main@motorR
   997  000AEC  6E39               	movwf	read_card@mR^0,c
   998  000AEE  0E00               	movlw	high main@motorR
   999  000AF0  6E3A               	movwf	(read_card@mR+1)^0,c
  1000  000AF2  EC15  F000         	call	_read_card	;wreg free
  1001  000AF6                     
  1002                           ;main.c: 182:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1003  000AF6  0E29               	movlw	41
  1004  000AF8  6E42               	movwf	(??_main+1)^0,c
  1005  000AFA  0E96               	movlw	150
  1006  000AFC  6E41               	movwf	??_main^0,c
  1007  000AFE  0E7F               	movlw	127
  1008  000B00                     u2467:
  1009  000B00  2EE8               	decfsz	wreg,f,c
  1010  000B02  D7FE               	bra	u2467
  1011  000B04  2E41               	decfsz	??_main^0,f,c
  1012  000B06  D7FC               	bra	u2467
  1013  000B08  2E42               	decfsz	(??_main+1)^0,f,c
  1014  000B0A  D7FA               	bra	u2467
  1015  000B0C  F000               	nop	
  1016  000B0E                     
  1017                           ;main.c: 183:             current = colorclick_readColour(current);
  1018  000B0E  EE20  F0BC         	lfsr	2,main@current
  1019  000B12  EE00  F012         	lfsr	0,colorclick_readColour@current
  1020  000B16  0E07               	movlw	7
  1021  000B18                     u2331:
  1022  000B18  CFDB FFEB          	movff	plusw2,plusw0
  1023  000B1C  06E8               	decf	wreg,f,c
  1024  000B1E  E2FC               	bc	u2331
  1025  000B20  EC71  F00C         	call	_colorclick_readColour	;wreg free
  1026  000B24  EE20  F0BC         	lfsr	2,main@current
  1027  000B28  0E07               	movlw	7
  1028  000B2A                     u2341:
  1029  000B2A  CFEB FFDB          	movff	plusw0,plusw2
  1030  000B2E  06E8               	decf	wreg,f,c
  1031  000B30  E2FC               	bc	u2341
  1032  000B32                     
  1033                           ;main.c: 184:             clear_lower = current.C - 10;
  1034  000B32  0EF6               	movlw	246
  1035  000B34  0100               	movlb	0	; () banked
  1036  000B36  25C2               	addwf	(main@current+6)& (0+255),w,b
  1037  000B38  6E45               	movwf	_clear_lower^0,c	;volatile
  1038  000B3A  0EFF               	movlw	255
  1039  000B3C  21C3               	addwfc	(main@current+7)& (0+255),w,b
  1040  000B3E  6E46               	movwf	(_clear_lower+1)^0,c	;volatile
  1041  000B40                     
  1042                           ; BSR set to: 0
  1043                           ;main.c: 185:             clear_upper = current.C + 10;
  1044  000B40  0E0A               	movlw	10
  1045  000B42  25C2               	addwf	(main@current+6)& (0+255),w,b
  1046  000B44  6E43               	movwf	_clear_upper^0,c	;volatile
  1047  000B46  0E00               	movlw	0
  1048  000B48  21C3               	addwfc	(main@current+7)& (0+255),w,b
  1049  000B4A  6E44               	movwf	(_clear_upper+1)^0,c	;volatile
  1050  000B4C                     
  1051                           ; BSR set to: 0
  1052                           ;main.c: 186:             card_flag = 0;
  1053  000B4C  0E00               	movlw	0
  1054  000B4E  6FB0               	movwf	_card_flag& (0+255),b	;volatile
  1055  000B50  EFBD  F004         	goto	l2623
  1056  000B54  EF13  F000         	goto	start
  1057  000B58                     __end_of_main:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function _read_card *****************
  1061 ;; Defined at:
  1062 ;;		line 6 in file "color_card.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  initial         8   38[COMRAM] struct .
  1065 ;;  current         8   46[COMRAM] struct .
  1066 ;;  mL              2   54[COMRAM] PTR struct .
  1067 ;;		 -> main@motorL(9), 
  1068 ;;  mR              2   56[COMRAM] PTR struct .
  1069 ;;		 -> main@motorR(9), 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  B_rel           2   62[COMRAM] unsigned int 
  1072 ;;  G_rel           2   60[COMRAM] unsigned int 
  1073 ;;  R_rel           2   58[COMRAM] unsigned int 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1083 ;;      Params:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1086 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1087 ;;Total ram usage:       26 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 10
  1090 ;; This function calls:
  1091 ;;		___flge
  1092 ;;		___lwdiv
  1093 ;;		___xxtofl
  1094 ;;		_reverse
  1095 ;;		_stop
  1096 ;;		_turnLeft
  1097 ;;		_turnRight
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text1
  1104  00002A                     __ptext1:
  1105                           	callstack 0
  1106  00002A                     _read_card:
  1107                           	callstack 20
  1108  00002A                     
  1109                           ;color_card.c: 8:     unsigned int R_rel = current.R/current.C;
  1110  00002A  C02F  F007         	movff	read_card@current,___lwdiv@dividend
  1111  00002E  C030  F008         	movff	read_card@current+1,___lwdiv@dividend+1
  1112  000032  C035  F009         	movff	read_card@current+6,___lwdiv@divisor
  1113  000036  C036  F00A         	movff	read_card@current+7,___lwdiv@divisor+1
  1114  00003A  EC21  F00B         	call	___lwdiv	;wreg free
  1115  00003E  C007  F03B         	movff	?___lwdiv,read_card@R_rel
  1116  000042  C008  F03C         	movff	?___lwdiv+1,read_card@R_rel+1
  1117                           
  1118                           ;color_card.c: 9:     unsigned int G_rel = current.G/current.C;
  1119  000046  C031  F007         	movff	read_card@current+2,___lwdiv@dividend
  1120  00004A  C032  F008         	movff	read_card@current+3,___lwdiv@dividend+1
  1121  00004E  C035  F009         	movff	read_card@current+6,___lwdiv@divisor
  1122  000052  C036  F00A         	movff	read_card@current+7,___lwdiv@divisor+1
  1123  000056  EC21  F00B         	call	___lwdiv	;wreg free
  1124  00005A  C007  F03D         	movff	?___lwdiv,read_card@G_rel
  1125  00005E  C008  F03E         	movff	?___lwdiv+1,read_card@G_rel+1
  1126                           
  1127                           ;color_card.c: 10:     unsigned int B_rel = current.B/current.C;
  1128  000062  C033  F007         	movff	read_card@current+4,___lwdiv@dividend
  1129  000066  C034  F008         	movff	read_card@current+5,___lwdiv@dividend+1
  1130  00006A  C035  F009         	movff	read_card@current+6,___lwdiv@divisor
  1131  00006E  C036  F00A         	movff	read_card@current+7,___lwdiv@divisor+1
  1132  000072  EC21  F00B         	call	___lwdiv	;wreg free
  1133  000076  C007  F03F         	movff	?___lwdiv,read_card@B_rel
  1134  00007A  C008  F040         	movff	?___lwdiv+1,read_card@B_rel+1
  1135                           
  1136                           ;color_card.c: 12:     if ((R_rel>0.54) && (G_rel<0.245) && (B_rel<0.18)) {
  1137  00007E  0E71               	movlw	113
  1138  000080  6E15               	movwf	___flge@ff1^0,c
  1139  000082  0E3D               	movlw	61
  1140  000084  6E16               	movwf	(___flge@ff1+1)^0,c
  1141  000086  0E0A               	movlw	10
  1142  000088  6E17               	movwf	(___flge@ff1+2)^0,c
  1143  00008A  0E3F               	movlw	63
  1144  00008C  6E18               	movwf	(___flge@ff1+3)^0,c
  1145  00008E  C03B  F007         	movff	read_card@R_rel,___xxtofl@val
  1146  000092  C03C  F008         	movff	read_card@R_rel+1,___xxtofl@val+1
  1147  000096  6A09               	clrf	(___xxtofl@val+2)^0,c
  1148  000098  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1149  00009A  0E00               	movlw	0
  1150  00009C  EC7C  F008         	call	___xxtofl
  1151  0000A0  C007  F019         	movff	?___xxtofl,___flge@ff2
  1152  0000A4  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1153  0000A8  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1154  0000AC  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1155  0000B0  EC56  F009         	call	___flge	;wreg free
  1156  0000B4  B0D8               	btfsc	status,0,c
  1157  0000B6  EF5F  F000         	goto	u1941
  1158  0000BA  EF61  F000         	goto	u1940
  1159  0000BE                     u1941:
  1160  0000BE  EFBD  F000         	goto	l2505
  1161  0000C2                     u1940:
  1162  0000C2  C03D  F007         	movff	read_card@G_rel,___xxtofl@val
  1163  0000C6  C03E  F008         	movff	read_card@G_rel+1,___xxtofl@val+1
  1164  0000CA  6A09               	clrf	(___xxtofl@val+2)^0,c
  1165  0000CC  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1166  0000CE  0E00               	movlw	0
  1167  0000D0  EC7C  F008         	call	___xxtofl
  1168  0000D4  C007  F015         	movff	?___xxtofl,___flge@ff1
  1169  0000D8  C008  F016         	movff	?___xxtofl+1,___flge@ff1+1
  1170  0000DC  C009  F017         	movff	?___xxtofl+2,___flge@ff1+2
  1171  0000E0  C00A  F018         	movff	?___xxtofl+3,___flge@ff1+3
  1172  0000E4  0E48               	movlw	72
  1173  0000E6  6E19               	movwf	___flge@ff2^0,c
  1174  0000E8  0EE1               	movlw	225
  1175  0000EA  6E1A               	movwf	(___flge@ff2+1)^0,c
  1176  0000EC  0E7A               	movlw	122
  1177  0000EE  6E1B               	movwf	(___flge@ff2+2)^0,c
  1178  0000F0  0E3E               	movlw	62
  1179  0000F2  6E1C               	movwf	(___flge@ff2+3)^0,c
  1180  0000F4  EC56  F009         	call	___flge	;wreg free
  1181  0000F8  B0D8               	btfsc	status,0,c
  1182  0000FA  EF81  F000         	goto	u1951
  1183  0000FE  EF83  F000         	goto	u1950
  1184  000102                     u1951:
  1185  000102  EFBD  F000         	goto	l2505
  1186  000106                     u1950:
  1187  000106  C03F  F007         	movff	read_card@B_rel,___xxtofl@val
  1188  00010A  C040  F008         	movff	read_card@B_rel+1,___xxtofl@val+1
  1189  00010E  6A09               	clrf	(___xxtofl@val+2)^0,c
  1190  000110  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1191  000112  0E00               	movlw	0
  1192  000114  EC7C  F008         	call	___xxtofl
  1193  000118  C007  F015         	movff	?___xxtofl,___flge@ff1
  1194  00011C  C008  F016         	movff	?___xxtofl+1,___flge@ff1+1
  1195  000120  C009  F017         	movff	?___xxtofl+2,___flge@ff1+2
  1196  000124  C00A  F018         	movff	?___xxtofl+3,___flge@ff1+3
  1197  000128  0EEC               	movlw	236
  1198  00012A  6E19               	movwf	___flge@ff2^0,c
  1199  00012C  0E51               	movlw	81
  1200  00012E  6E1A               	movwf	(___flge@ff2+1)^0,c
  1201  000130  0E38               	movlw	56
  1202  000132  6E1B               	movwf	(___flge@ff2+2)^0,c
  1203  000134  0E3E               	movlw	62
  1204  000136  6E1C               	movwf	(___flge@ff2+3)^0,c
  1205  000138  EC56  F009         	call	___flge	;wreg free
  1206  00013C  B0D8               	btfsc	status,0,c
  1207  00013E  EFA3  F000         	goto	u1961
  1208  000142  EFA5  F000         	goto	u1960
  1209  000146                     u1961:
  1210  000146  EFBD  F000         	goto	l2505
  1211  00014A                     u1960:
  1212  00014A                     
  1213                           ;color_card.c: 14:         turnRight(mL, mR, 90);
  1214  00014A  C037  F020         	movff	read_card@mL,turnRight@mL
  1215  00014E  C038  F021         	movff	read_card@mL+1,turnRight@mL+1
  1216  000152  C039  F022         	movff	read_card@mR,turnRight@mR
  1217  000156  C03A  F023         	movff	read_card@mR+1,turnRight@mR+1
  1218  00015A  0E5A               	movlw	90
  1219  00015C  6E24               	movwf	turnRight@deg^0,c
  1220  00015E  ECAC  F005         	call	_turnRight	;wreg free
  1221                           
  1222                           ;color_card.c: 15:         stop(mL, mR);
  1223  000162  C037  F020         	movff	read_card@mL,stop@mL
  1224  000166  C038  F021         	movff	read_card@mL+1,stop@mL+1
  1225  00016A  C039  F022         	movff	read_card@mR,stop@mR
  1226  00016E  C03A  F023         	movff	read_card@mR+1,stop@mR+1
  1227  000172  ECD6  F00A         	call	_stop	;wreg free
  1228                           
  1229                           ;color_card.c: 17:     } else if ((R_rel<0.435) && (G_rel>0.31) && (B_rel>0.195)) {
  1230  000176  EF45  F004         	goto	l509
  1231  00017A                     l2505:
  1232  00017A  C03B  F007         	movff	read_card@R_rel,___xxtofl@val
  1233  00017E  C03C  F008         	movff	read_card@R_rel+1,___xxtofl@val+1
  1234  000182  6A09               	clrf	(___xxtofl@val+2)^0,c
  1235  000184  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1236  000186  0E00               	movlw	0
  1237  000188  EC7C  F008         	call	___xxtofl
  1238  00018C  C007  F015         	movff	?___xxtofl,___flge@ff1
  1239  000190  C008  F016         	movff	?___xxtofl+1,___flge@ff1+1
  1240  000194  C009  F017         	movff	?___xxtofl+2,___flge@ff1+2
  1241  000198  C00A  F018         	movff	?___xxtofl+3,___flge@ff1+3
  1242  00019C  0E52               	movlw	82
  1243  00019E  6E19               	movwf	___flge@ff2^0,c
  1244  0001A0  0EB8               	movlw	184
  1245  0001A2  6E1A               	movwf	(___flge@ff2+1)^0,c
  1246  0001A4  0EDE               	movlw	222
  1247  0001A6  6E1B               	movwf	(___flge@ff2+2)^0,c
  1248  0001A8  0E3E               	movlw	62
  1249  0001AA  6E1C               	movwf	(___flge@ff2+3)^0,c
  1250  0001AC  EC56  F009         	call	___flge	;wreg free
  1251  0001B0  B0D8               	btfsc	status,0,c
  1252  0001B2  EFDD  F000         	goto	u1971
  1253  0001B6  EFDF  F000         	goto	u1970
  1254  0001BA                     u1971:
  1255  0001BA  EF3B  F001         	goto	l2513
  1256  0001BE                     u1970:
  1257  0001BE  0E52               	movlw	82
  1258  0001C0  6E15               	movwf	___flge@ff1^0,c
  1259  0001C2  0EB8               	movlw	184
  1260  0001C4  6E16               	movwf	(___flge@ff1+1)^0,c
  1261  0001C6  0E9E               	movlw	158
  1262  0001C8  6E17               	movwf	(___flge@ff1+2)^0,c
  1263  0001CA  0E3E               	movlw	62
  1264  0001CC  6E18               	movwf	(___flge@ff1+3)^0,c
  1265  0001CE  C03D  F007         	movff	read_card@G_rel,___xxtofl@val
  1266  0001D2  C03E  F008         	movff	read_card@G_rel+1,___xxtofl@val+1
  1267  0001D6  6A09               	clrf	(___xxtofl@val+2)^0,c
  1268  0001D8  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1269  0001DA  0E00               	movlw	0
  1270  0001DC  EC7C  F008         	call	___xxtofl
  1271  0001E0  C007  F019         	movff	?___xxtofl,___flge@ff2
  1272  0001E4  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1273  0001E8  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1274  0001EC  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1275  0001F0  EC56  F009         	call	___flge	;wreg free
  1276  0001F4  B0D8               	btfsc	status,0,c
  1277  0001F6  EFFF  F000         	goto	u1981
  1278  0001FA  EF01  F001         	goto	u1980
  1279  0001FE                     u1981:
  1280  0001FE  EF3B  F001         	goto	l2513
  1281  000202                     u1980:
  1282  000202  0E14               	movlw	20
  1283  000204  6E15               	movwf	___flge@ff1^0,c
  1284  000206  0EAE               	movlw	174
  1285  000208  6E16               	movwf	(___flge@ff1+1)^0,c
  1286  00020A  0E47               	movlw	71
  1287  00020C  6E17               	movwf	(___flge@ff1+2)^0,c
  1288  00020E  0E3E               	movlw	62
  1289  000210  6E18               	movwf	(___flge@ff1+3)^0,c
  1290  000212  C03F  F007         	movff	read_card@B_rel,___xxtofl@val
  1291  000216  C040  F008         	movff	read_card@B_rel+1,___xxtofl@val+1
  1292  00021A  6A09               	clrf	(___xxtofl@val+2)^0,c
  1293  00021C  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1294  00021E  0E00               	movlw	0
  1295  000220  EC7C  F008         	call	___xxtofl
  1296  000224  C007  F019         	movff	?___xxtofl,___flge@ff2
  1297  000228  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1298  00022C  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1299  000230  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1300  000234  EC56  F009         	call	___flge	;wreg free
  1301  000238  B0D8               	btfsc	status,0,c
  1302  00023A  EF21  F001         	goto	u1991
  1303  00023E  EF23  F001         	goto	u1990
  1304  000242                     u1991:
  1305  000242  EF3B  F001         	goto	l2513
  1306  000246                     u1990:
  1307  000246                     
  1308                           ;color_card.c: 19:         turnLeft(mL, mR, 90);
  1309  000246  C037  F020         	movff	read_card@mL,turnLeft@mL
  1310  00024A  C038  F021         	movff	read_card@mL+1,turnLeft@mL+1
  1311  00024E  C039  F022         	movff	read_card@mR,turnLeft@mR
  1312  000252  C03A  F023         	movff	read_card@mR+1,turnLeft@mR+1
  1313  000256  0E5A               	movlw	90
  1314  000258  6E24               	movwf	turnLeft@deg^0,c
  1315  00025A  EC9F  F006         	call	_turnLeft	;wreg free
  1316                           
  1317                           ;color_card.c: 20:         stop(mL, mR);
  1318  00025E  C037  F020         	movff	read_card@mL,stop@mL
  1319  000262  C038  F021         	movff	read_card@mL+1,stop@mL+1
  1320  000266  C039  F022         	movff	read_card@mR,stop@mR
  1321  00026A  C03A  F023         	movff	read_card@mR+1,stop@mR+1
  1322  00026E  ECD6  F00A         	call	_stop	;wreg free
  1323                           
  1324                           ;color_card.c: 22:     } else if ((R_rel<0.43) && (G_rel>0.30) && (B_rel>0.21)) {
  1325  000272  EF45  F004         	goto	l509
  1326  000276                     l2513:
  1327  000276  C03B  F007         	movff	read_card@R_rel,___xxtofl@val
  1328  00027A  C03C  F008         	movff	read_card@R_rel+1,___xxtofl@val+1
  1329  00027E  6A09               	clrf	(___xxtofl@val+2)^0,c
  1330  000280  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1331  000282  0E00               	movlw	0
  1332  000284  EC7C  F008         	call	___xxtofl
  1333  000288  C007  F015         	movff	?___xxtofl,___flge@ff1
  1334  00028C  C008  F016         	movff	?___xxtofl+1,___flge@ff1+1
  1335  000290  C009  F017         	movff	?___xxtofl+2,___flge@ff1+2
  1336  000294  C00A  F018         	movff	?___xxtofl+3,___flge@ff1+3
  1337  000298  0EF6               	movlw	246
  1338  00029A  6E19               	movwf	___flge@ff2^0,c
  1339  00029C  0E28               	movlw	40
  1340  00029E  6E1A               	movwf	(___flge@ff2+1)^0,c
  1341  0002A0  0EDC               	movlw	220
  1342  0002A2  6E1B               	movwf	(___flge@ff2+2)^0,c
  1343  0002A4  0E3E               	movlw	62
  1344  0002A6  6E1C               	movwf	(___flge@ff2+3)^0,c
  1345  0002A8  EC56  F009         	call	___flge	;wreg free
  1346  0002AC  B0D8               	btfsc	status,0,c
  1347  0002AE  EF5B  F001         	goto	u2001
  1348  0002B2  EF5D  F001         	goto	u2000
  1349  0002B6                     u2001:
  1350  0002B6  EFB9  F001         	goto	l2521
  1351  0002BA                     u2000:
  1352  0002BA  0E9A               	movlw	154
  1353  0002BC  6E15               	movwf	___flge@ff1^0,c
  1354  0002BE  0E99               	movlw	153
  1355  0002C0  6E16               	movwf	(___flge@ff1+1)^0,c
  1356  0002C2  0E99               	movlw	153
  1357  0002C4  6E17               	movwf	(___flge@ff1+2)^0,c
  1358  0002C6  0E3E               	movlw	62
  1359  0002C8  6E18               	movwf	(___flge@ff1+3)^0,c
  1360  0002CA  C03D  F007         	movff	read_card@G_rel,___xxtofl@val
  1361  0002CE  C03E  F008         	movff	read_card@G_rel+1,___xxtofl@val+1
  1362  0002D2  6A09               	clrf	(___xxtofl@val+2)^0,c
  1363  0002D4  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1364  0002D6  0E00               	movlw	0
  1365  0002D8  EC7C  F008         	call	___xxtofl
  1366  0002DC  C007  F019         	movff	?___xxtofl,___flge@ff2
  1367  0002E0  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1368  0002E4  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1369  0002E8  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1370  0002EC  EC56  F009         	call	___flge	;wreg free
  1371  0002F0  B0D8               	btfsc	status,0,c
  1372  0002F2  EF7D  F001         	goto	u2011
  1373  0002F6  EF7F  F001         	goto	u2010
  1374  0002FA                     u2011:
  1375  0002FA  EFB9  F001         	goto	l2521
  1376  0002FE                     u2010:
  1377  0002FE  0E3D               	movlw	61
  1378  000300  6E15               	movwf	___flge@ff1^0,c
  1379  000302  0E0A               	movlw	10
  1380  000304  6E16               	movwf	(___flge@ff1+1)^0,c
  1381  000306  0E57               	movlw	87
  1382  000308  6E17               	movwf	(___flge@ff1+2)^0,c
  1383  00030A  0E3E               	movlw	62
  1384  00030C  6E18               	movwf	(___flge@ff1+3)^0,c
  1385  00030E  C03F  F007         	movff	read_card@B_rel,___xxtofl@val
  1386  000312  C040  F008         	movff	read_card@B_rel+1,___xxtofl@val+1
  1387  000316  6A09               	clrf	(___xxtofl@val+2)^0,c
  1388  000318  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1389  00031A  0E00               	movlw	0
  1390  00031C  EC7C  F008         	call	___xxtofl
  1391  000320  C007  F019         	movff	?___xxtofl,___flge@ff2
  1392  000324  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1393  000328  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1394  00032C  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1395  000330  EC56  F009         	call	___flge	;wreg free
  1396  000334  B0D8               	btfsc	status,0,c
  1397  000336  EF9F  F001         	goto	u2021
  1398  00033A  EFA1  F001         	goto	u2020
  1399  00033E                     u2021:
  1400  00033E  EFB9  F001         	goto	l2521
  1401  000342                     u2020:
  1402  000342                     l2519:
  1403                           
  1404                           ;color_card.c: 24:         turnRight(mL, mR, 180);
  1405  000342  C037  F020         	movff	read_card@mL,turnRight@mL
  1406  000346  C038  F021         	movff	read_card@mL+1,turnRight@mL+1
  1407  00034A  C039  F022         	movff	read_card@mR,turnRight@mR
  1408  00034E  C03A  F023         	movff	read_card@mR+1,turnRight@mR+1
  1409  000352  0EB4               	movlw	180
  1410  000354  6E24               	movwf	turnRight@deg^0,c
  1411  000356  ECAC  F005         	call	_turnRight	;wreg free
  1412                           
  1413                           ;color_card.c: 25:         stop(mL, mR);
  1414  00035A  C037  F020         	movff	read_card@mL,stop@mL
  1415  00035E  C038  F021         	movff	read_card@mL+1,stop@mL+1
  1416  000362  C039  F022         	movff	read_card@mR,stop@mR
  1417  000366  C03A  F023         	movff	read_card@mR+1,stop@mR+1
  1418  00036A  ECD6  F00A         	call	_stop	;wreg free
  1419                           
  1420                           ;color_card.c: 27:     } else if ((R_rel>0.49) && (G_rel>0.285) && (B_rel>0.18)) {
  1421  00036E  EF45  F004         	goto	l509
  1422  000372                     l2521:
  1423  000372  0E48               	movlw	72
  1424  000374  6E15               	movwf	___flge@ff1^0,c
  1425  000376  0EE1               	movlw	225
  1426  000378  6E16               	movwf	(___flge@ff1+1)^0,c
  1427  00037A  0EFA               	movlw	250
  1428  00037C  6E17               	movwf	(___flge@ff1+2)^0,c
  1429  00037E  0E3E               	movlw	62
  1430  000380  6E18               	movwf	(___flge@ff1+3)^0,c
  1431  000382  C03B  F007         	movff	read_card@R_rel,___xxtofl@val
  1432  000386  C03C  F008         	movff	read_card@R_rel+1,___xxtofl@val+1
  1433  00038A  6A09               	clrf	(___xxtofl@val+2)^0,c
  1434  00038C  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1435  00038E  0E00               	movlw	0
  1436  000390  EC7C  F008         	call	___xxtofl
  1437  000394  C007  F019         	movff	?___xxtofl,___flge@ff2
  1438  000398  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1439  00039C  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1440  0003A0  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1441  0003A4  EC56  F009         	call	___flge	;wreg free
  1442  0003A8  B0D8               	btfsc	status,0,c
  1443  0003AA  EFD9  F001         	goto	u2031
  1444  0003AE  EFDB  F001         	goto	u2030
  1445  0003B2                     u2031:
  1446  0003B2  EF41  F002         	goto	l2529
  1447  0003B6                     u2030:
  1448  0003B6  0E85               	movlw	133
  1449  0003B8  6E15               	movwf	___flge@ff1^0,c
  1450  0003BA  0EEB               	movlw	235
  1451  0003BC  6E16               	movwf	(___flge@ff1+1)^0,c
  1452  0003BE  0E91               	movlw	145
  1453  0003C0  6E17               	movwf	(___flge@ff1+2)^0,c
  1454  0003C2  0E3E               	movlw	62
  1455  0003C4  6E18               	movwf	(___flge@ff1+3)^0,c
  1456  0003C6  C03D  F007         	movff	read_card@G_rel,___xxtofl@val
  1457  0003CA  C03E  F008         	movff	read_card@G_rel+1,___xxtofl@val+1
  1458  0003CE  6A09               	clrf	(___xxtofl@val+2)^0,c
  1459  0003D0  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1460  0003D2  0E00               	movlw	0
  1461  0003D4  EC7C  F008         	call	___xxtofl
  1462  0003D8  C007  F019         	movff	?___xxtofl,___flge@ff2
  1463  0003DC  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1464  0003E0  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1465  0003E4  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1466  0003E8  EC56  F009         	call	___flge	;wreg free
  1467  0003EC  B0D8               	btfsc	status,0,c
  1468  0003EE  EFFB  F001         	goto	u2041
  1469  0003F2  EFFD  F001         	goto	u2040
  1470  0003F6                     u2041:
  1471  0003F6  EF41  F002         	goto	l2529
  1472  0003FA                     u2040:
  1473  0003FA  0EEC               	movlw	236
  1474  0003FC  6E15               	movwf	___flge@ff1^0,c
  1475  0003FE  0E51               	movlw	81
  1476  000400  6E16               	movwf	(___flge@ff1+1)^0,c
  1477  000402  0E38               	movlw	56
  1478  000404  6E17               	movwf	(___flge@ff1+2)^0,c
  1479  000406  0E3E               	movlw	62
  1480  000408  6E18               	movwf	(___flge@ff1+3)^0,c
  1481  00040A  C03F  F007         	movff	read_card@B_rel,___xxtofl@val
  1482  00040E  C040  F008         	movff	read_card@B_rel+1,___xxtofl@val+1
  1483  000412  6A09               	clrf	(___xxtofl@val+2)^0,c
  1484  000414  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1485  000416  0E00               	movlw	0
  1486  000418  EC7C  F008         	call	___xxtofl
  1487  00041C  C007  F019         	movff	?___xxtofl,___flge@ff2
  1488  000420  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1489  000424  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1490  000428  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1491  00042C  EC56  F009         	call	___flge	;wreg free
  1492  000430  B0D8               	btfsc	status,0,c
  1493  000432  EF1D  F002         	goto	u2051
  1494  000436  EF1F  F002         	goto	u2050
  1495  00043A                     u2051:
  1496  00043A  EF41  F002         	goto	l2529
  1497  00043E                     u2050:
  1498  00043E                     
  1499                           ;color_card.c: 29:         reverse(mL, mR);
  1500  00043E  C037  F020         	movff	read_card@mL,reverse@mL
  1501  000442  C038  F021         	movff	read_card@mL+1,reverse@mL+1
  1502  000446  C039  F022         	movff	read_card@mR,reverse@mR
  1503  00044A  C03A  F023         	movff	read_card@mR+1,reverse@mR+1
  1504  00044E  EC89  F00A         	call	_reverse	;wreg free
  1505                           
  1506                           ;color_card.c: 30:         turnRight(mL, mR, 90);
  1507  000452  C037  F020         	movff	read_card@mL,turnRight@mL
  1508  000456  C038  F021         	movff	read_card@mL+1,turnRight@mL+1
  1509  00045A  C039  F022         	movff	read_card@mR,turnRight@mR
  1510  00045E  C03A  F023         	movff	read_card@mR+1,turnRight@mR+1
  1511  000462  0E5A               	movlw	90
  1512  000464  6E24               	movwf	turnRight@deg^0,c
  1513  000466  ECAC  F005         	call	_turnRight	;wreg free
  1514                           
  1515                           ;color_card.c: 31:         stop(mL, mR);
  1516  00046A  C037  F020         	movff	read_card@mL,stop@mL
  1517  00046E  C038  F021         	movff	read_card@mL+1,stop@mL+1
  1518  000472  C039  F022         	movff	read_card@mR,stop@mR
  1519  000476  C03A  F023         	movff	read_card@mR+1,stop@mR+1
  1520  00047A  ECD6  F00A         	call	_stop	;wreg free
  1521                           
  1522                           ;color_card.c: 33:     } else if ((R_rel>0.49) && (G_rel<0.275) && (B_rel>0.195)) {
  1523  00047E  EF45  F004         	goto	l509
  1524  000482                     l2529:
  1525  000482  0E48               	movlw	72
  1526  000484  6E15               	movwf	___flge@ff1^0,c
  1527  000486  0EE1               	movlw	225
  1528  000488  6E16               	movwf	(___flge@ff1+1)^0,c
  1529  00048A  0EFA               	movlw	250
  1530  00048C  6E17               	movwf	(___flge@ff1+2)^0,c
  1531  00048E  0E3E               	movlw	62
  1532  000490  6E18               	movwf	(___flge@ff1+3)^0,c
  1533  000492  C03B  F007         	movff	read_card@R_rel,___xxtofl@val
  1534  000496  C03C  F008         	movff	read_card@R_rel+1,___xxtofl@val+1
  1535  00049A  6A09               	clrf	(___xxtofl@val+2)^0,c
  1536  00049C  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1537  00049E  0E00               	movlw	0
  1538  0004A0  EC7C  F008         	call	___xxtofl
  1539  0004A4  C007  F019         	movff	?___xxtofl,___flge@ff2
  1540  0004A8  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1541  0004AC  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1542  0004B0  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1543  0004B4  EC56  F009         	call	___flge	;wreg free
  1544  0004B8  B0D8               	btfsc	status,0,c
  1545  0004BA  EF61  F002         	goto	u2061
  1546  0004BE  EF63  F002         	goto	u2060
  1547  0004C2                     u2061:
  1548  0004C2  EFC9  F002         	goto	l2537
  1549  0004C6                     u2060:
  1550  0004C6  C03D  F007         	movff	read_card@G_rel,___xxtofl@val
  1551  0004CA  C03E  F008         	movff	read_card@G_rel+1,___xxtofl@val+1
  1552  0004CE  6A09               	clrf	(___xxtofl@val+2)^0,c
  1553  0004D0  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1554  0004D2  0E00               	movlw	0
  1555  0004D4  EC7C  F008         	call	___xxtofl
  1556  0004D8  C007  F015         	movff	?___xxtofl,___flge@ff1
  1557  0004DC  C008  F016         	movff	?___xxtofl+1,___flge@ff1+1
  1558  0004E0  C009  F017         	movff	?___xxtofl+2,___flge@ff1+2
  1559  0004E4  C00A  F018         	movff	?___xxtofl+3,___flge@ff1+3
  1560  0004E8  0ECD               	movlw	205
  1561  0004EA  6E19               	movwf	___flge@ff2^0,c
  1562  0004EC  0ECC               	movlw	204
  1563  0004EE  6E1A               	movwf	(___flge@ff2+1)^0,c
  1564  0004F0  0E8C               	movlw	140
  1565  0004F2  6E1B               	movwf	(___flge@ff2+2)^0,c
  1566  0004F4  0E3E               	movlw	62
  1567  0004F6  6E1C               	movwf	(___flge@ff2+3)^0,c
  1568  0004F8  EC56  F009         	call	___flge	;wreg free
  1569  0004FC  B0D8               	btfsc	status,0,c
  1570  0004FE  EF83  F002         	goto	u2071
  1571  000502  EF85  F002         	goto	u2070
  1572  000506                     u2071:
  1573  000506  EFC9  F002         	goto	l2537
  1574  00050A                     u2070:
  1575  00050A  0E14               	movlw	20
  1576  00050C  6E15               	movwf	___flge@ff1^0,c
  1577  00050E  0EAE               	movlw	174
  1578  000510  6E16               	movwf	(___flge@ff1+1)^0,c
  1579  000512  0E47               	movlw	71
  1580  000514  6E17               	movwf	(___flge@ff1+2)^0,c
  1581  000516  0E3E               	movlw	62
  1582  000518  6E18               	movwf	(___flge@ff1+3)^0,c
  1583  00051A  C03F  F007         	movff	read_card@B_rel,___xxtofl@val
  1584  00051E  C040  F008         	movff	read_card@B_rel+1,___xxtofl@val+1
  1585  000522  6A09               	clrf	(___xxtofl@val+2)^0,c
  1586  000524  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1587  000526  0E00               	movlw	0
  1588  000528  EC7C  F008         	call	___xxtofl
  1589  00052C  C007  F019         	movff	?___xxtofl,___flge@ff2
  1590  000530  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1591  000534  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1592  000538  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1593  00053C  EC56  F009         	call	___flge	;wreg free
  1594  000540  B0D8               	btfsc	status,0,c
  1595  000542  EFA5  F002         	goto	u2081
  1596  000546  EFA7  F002         	goto	u2080
  1597  00054A                     u2081:
  1598  00054A  EFC9  F002         	goto	l2537
  1599  00054E                     u2080:
  1600  00054E                     
  1601                           ;color_card.c: 35:         reverse(mL, mR);
  1602  00054E  C037  F020         	movff	read_card@mL,reverse@mL
  1603  000552  C038  F021         	movff	read_card@mL+1,reverse@mL+1
  1604  000556  C039  F022         	movff	read_card@mR,reverse@mR
  1605  00055A  C03A  F023         	movff	read_card@mR+1,reverse@mR+1
  1606  00055E  EC89  F00A         	call	_reverse	;wreg free
  1607                           
  1608                           ;color_card.c: 36:         turnLeft(mL, mR, 90);
  1609  000562  C037  F020         	movff	read_card@mL,turnLeft@mL
  1610  000566  C038  F021         	movff	read_card@mL+1,turnLeft@mL+1
  1611  00056A  C039  F022         	movff	read_card@mR,turnLeft@mR
  1612  00056E  C03A  F023         	movff	read_card@mR+1,turnLeft@mR+1
  1613  000572  0E5A               	movlw	90
  1614  000574  6E24               	movwf	turnLeft@deg^0,c
  1615  000576  EC9F  F006         	call	_turnLeft	;wreg free
  1616                           
  1617                           ;color_card.c: 37:         stop(mL, mR);
  1618  00057A  C037  F020         	movff	read_card@mL,stop@mL
  1619  00057E  C038  F021         	movff	read_card@mL+1,stop@mL+1
  1620  000582  C039  F022         	movff	read_card@mR,stop@mR
  1621  000586  C03A  F023         	movff	read_card@mR+1,stop@mR+1
  1622  00058A  ECD6  F00A         	call	_stop	;wreg free
  1623                           
  1624                           ;color_card.c: 39:     } else if ((R_rel>0.54) && (G_rel<0.24) && (B_rel<0.18)) {
  1625  00058E  EF45  F004         	goto	l509
  1626  000592                     l2537:
  1627  000592  0E71               	movlw	113
  1628  000594  6E15               	movwf	___flge@ff1^0,c
  1629  000596  0E3D               	movlw	61
  1630  000598  6E16               	movwf	(___flge@ff1+1)^0,c
  1631  00059A  0E0A               	movlw	10
  1632  00059C  6E17               	movwf	(___flge@ff1+2)^0,c
  1633  00059E  0E3F               	movlw	63
  1634  0005A0  6E18               	movwf	(___flge@ff1+3)^0,c
  1635  0005A2  C03B  F007         	movff	read_card@R_rel,___xxtofl@val
  1636  0005A6  C03C  F008         	movff	read_card@R_rel+1,___xxtofl@val+1
  1637  0005AA  6A09               	clrf	(___xxtofl@val+2)^0,c
  1638  0005AC  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1639  0005AE  0E00               	movlw	0
  1640  0005B0  EC7C  F008         	call	___xxtofl
  1641  0005B4  C007  F019         	movff	?___xxtofl,___flge@ff2
  1642  0005B8  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1643  0005BC  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1644  0005C0  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1645  0005C4  EC56  F009         	call	___flge	;wreg free
  1646  0005C8  B0D8               	btfsc	status,0,c
  1647  0005CA  EFE9  F002         	goto	u2091
  1648  0005CE  EFEB  F002         	goto	u2090
  1649  0005D2                     u2091:
  1650  0005D2  EF47  F003         	goto	l2545
  1651  0005D6                     u2090:
  1652  0005D6  C03D  F007         	movff	read_card@G_rel,___xxtofl@val
  1653  0005DA  C03E  F008         	movff	read_card@G_rel+1,___xxtofl@val+1
  1654  0005DE  6A09               	clrf	(___xxtofl@val+2)^0,c
  1655  0005E0  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1656  0005E2  0E00               	movlw	0
  1657  0005E4  EC7C  F008         	call	___xxtofl
  1658  0005E8  C007  F015         	movff	?___xxtofl,___flge@ff1
  1659  0005EC  C008  F016         	movff	?___xxtofl+1,___flge@ff1+1
  1660  0005F0  C009  F017         	movff	?___xxtofl+2,___flge@ff1+2
  1661  0005F4  C00A  F018         	movff	?___xxtofl+3,___flge@ff1+3
  1662  0005F8  0E8F               	movlw	143
  1663  0005FA  6E19               	movwf	___flge@ff2^0,c
  1664  0005FC  0EC2               	movlw	194
  1665  0005FE  6E1A               	movwf	(___flge@ff2+1)^0,c
  1666  000600  0E75               	movlw	117
  1667  000602  6E1B               	movwf	(___flge@ff2+2)^0,c
  1668  000604  0E3E               	movlw	62
  1669  000606  6E1C               	movwf	(___flge@ff2+3)^0,c
  1670  000608  EC56  F009         	call	___flge	;wreg free
  1671  00060C  B0D8               	btfsc	status,0,c
  1672  00060E  EF0B  F003         	goto	u2101
  1673  000612  EF0D  F003         	goto	u2100
  1674  000616                     u2101:
  1675  000616  EF47  F003         	goto	l2545
  1676  00061A                     u2100:
  1677  00061A  C03F  F007         	movff	read_card@B_rel,___xxtofl@val
  1678  00061E  C040  F008         	movff	read_card@B_rel+1,___xxtofl@val+1
  1679  000622  6A09               	clrf	(___xxtofl@val+2)^0,c
  1680  000624  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1681  000626  0E00               	movlw	0
  1682  000628  EC7C  F008         	call	___xxtofl
  1683  00062C  C007  F015         	movff	?___xxtofl,___flge@ff1
  1684  000630  C008  F016         	movff	?___xxtofl+1,___flge@ff1+1
  1685  000634  C009  F017         	movff	?___xxtofl+2,___flge@ff1+2
  1686  000638  C00A  F018         	movff	?___xxtofl+3,___flge@ff1+3
  1687  00063C  0EEC               	movlw	236
  1688  00063E  6E19               	movwf	___flge@ff2^0,c
  1689  000640  0E51               	movlw	81
  1690  000642  6E1A               	movwf	(___flge@ff2+1)^0,c
  1691  000644  0E38               	movlw	56
  1692  000646  6E1B               	movwf	(___flge@ff2+2)^0,c
  1693  000648  0E3E               	movlw	62
  1694  00064A  6E1C               	movwf	(___flge@ff2+3)^0,c
  1695  00064C  EC56  F009         	call	___flge	;wreg free
  1696  000650  B0D8               	btfsc	status,0,c
  1697  000652  EF2D  F003         	goto	u2111
  1698  000656  EF2F  F003         	goto	u2110
  1699  00065A                     u2111:
  1700  00065A  EF47  F003         	goto	l2545
  1701  00065E                     u2110:
  1702  00065E                     
  1703                           ;color_card.c: 41:         turnRight(mL, mR, 135);
  1704  00065E  C037  F020         	movff	read_card@mL,turnRight@mL
  1705  000662  C038  F021         	movff	read_card@mL+1,turnRight@mL+1
  1706  000666  C039  F022         	movff	read_card@mR,turnRight@mR
  1707  00066A  C03A  F023         	movff	read_card@mR+1,turnRight@mR+1
  1708  00066E  0E87               	movlw	135
  1709  000670  6E24               	movwf	turnRight@deg^0,c
  1710  000672  ECAC  F005         	call	_turnRight	;wreg free
  1711                           
  1712                           ;color_card.c: 42:         stop(mL, mR);
  1713  000676  C037  F020         	movff	read_card@mL,stop@mL
  1714  00067A  C038  F021         	movff	read_card@mL+1,stop@mL+1
  1715  00067E  C039  F022         	movff	read_card@mR,stop@mR
  1716  000682  C03A  F023         	movff	read_card@mR+1,stop@mR+1
  1717  000686  ECD6  F00A         	call	_stop	;wreg free
  1718                           
  1719                           ;color_card.c: 44:     } else if ((R_rel<0.44) && (G_rel>0.305) && (B_rel>0.21)) {
  1720  00068A  EF45  F004         	goto	l509
  1721  00068E                     l2545:
  1722  00068E  C03B  F007         	movff	read_card@R_rel,___xxtofl@val
  1723  000692  C03C  F008         	movff	read_card@R_rel+1,___xxtofl@val+1
  1724  000696  6A09               	clrf	(___xxtofl@val+2)^0,c
  1725  000698  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1726  00069A  0E00               	movlw	0
  1727  00069C  EC7C  F008         	call	___xxtofl
  1728  0006A0  C007  F015         	movff	?___xxtofl,___flge@ff1
  1729  0006A4  C008  F016         	movff	?___xxtofl+1,___flge@ff1+1
  1730  0006A8  C009  F017         	movff	?___xxtofl+2,___flge@ff1+2
  1731  0006AC  C00A  F018         	movff	?___xxtofl+3,___flge@ff1+3
  1732  0006B0  0EAE               	movlw	174
  1733  0006B2  6E19               	movwf	___flge@ff2^0,c
  1734  0006B4  0E47               	movlw	71
  1735  0006B6  6E1A               	movwf	(___flge@ff2+1)^0,c
  1736  0006B8  0EE1               	movlw	225
  1737  0006BA  6E1B               	movwf	(___flge@ff2+2)^0,c
  1738  0006BC  0E3E               	movlw	62
  1739  0006BE  6E1C               	movwf	(___flge@ff2+3)^0,c
  1740  0006C0  EC56  F009         	call	___flge	;wreg free
  1741  0006C4  B0D8               	btfsc	status,0,c
  1742  0006C6  EF67  F003         	goto	u2121
  1743  0006CA  EF69  F003         	goto	u2120
  1744  0006CE                     u2121:
  1745  0006CE  EFC5  F003         	goto	l2553
  1746  0006D2                     u2120:
  1747  0006D2  0EF6               	movlw	246
  1748  0006D4  6E15               	movwf	___flge@ff1^0,c
  1749  0006D6  0E28               	movlw	40
  1750  0006D8  6E16               	movwf	(___flge@ff1+1)^0,c
  1751  0006DA  0E9C               	movlw	156
  1752  0006DC  6E17               	movwf	(___flge@ff1+2)^0,c
  1753  0006DE  0E3E               	movlw	62
  1754  0006E0  6E18               	movwf	(___flge@ff1+3)^0,c
  1755  0006E2  C03D  F007         	movff	read_card@G_rel,___xxtofl@val
  1756  0006E6  C03E  F008         	movff	read_card@G_rel+1,___xxtofl@val+1
  1757  0006EA  6A09               	clrf	(___xxtofl@val+2)^0,c
  1758  0006EC  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1759  0006EE  0E00               	movlw	0
  1760  0006F0  EC7C  F008         	call	___xxtofl
  1761  0006F4  C007  F019         	movff	?___xxtofl,___flge@ff2
  1762  0006F8  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1763  0006FC  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1764  000700  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1765  000704  EC56  F009         	call	___flge	;wreg free
  1766  000708  B0D8               	btfsc	status,0,c
  1767  00070A  EF89  F003         	goto	u2131
  1768  00070E  EF8B  F003         	goto	u2130
  1769  000712                     u2131:
  1770  000712  EFC5  F003         	goto	l2553
  1771  000716                     u2130:
  1772  000716  0E3D               	movlw	61
  1773  000718  6E15               	movwf	___flge@ff1^0,c
  1774  00071A  0E0A               	movlw	10
  1775  00071C  6E16               	movwf	(___flge@ff1+1)^0,c
  1776  00071E  0E57               	movlw	87
  1777  000720  6E17               	movwf	(___flge@ff1+2)^0,c
  1778  000722  0E3E               	movlw	62
  1779  000724  6E18               	movwf	(___flge@ff1+3)^0,c
  1780  000726  C03F  F007         	movff	read_card@B_rel,___xxtofl@val
  1781  00072A  C040  F008         	movff	read_card@B_rel+1,___xxtofl@val+1
  1782  00072E  6A09               	clrf	(___xxtofl@val+2)^0,c
  1783  000730  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1784  000732  0E00               	movlw	0
  1785  000734  EC7C  F008         	call	___xxtofl
  1786  000738  C007  F019         	movff	?___xxtofl,___flge@ff2
  1787  00073C  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1788  000740  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1789  000744  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1790  000748  EC56  F009         	call	___flge	;wreg free
  1791  00074C  B0D8               	btfsc	status,0,c
  1792  00074E  EFAB  F003         	goto	u2141
  1793  000752  EFAD  F003         	goto	u2140
  1794  000756                     u2141:
  1795  000756  EFC5  F003         	goto	l2553
  1796  00075A                     u2140:
  1797  00075A                     
  1798                           ;color_card.c: 46:         turnLeft(mL, mR, 135);
  1799  00075A  C037  F020         	movff	read_card@mL,turnLeft@mL
  1800  00075E  C038  F021         	movff	read_card@mL+1,turnLeft@mL+1
  1801  000762  C039  F022         	movff	read_card@mR,turnLeft@mR
  1802  000766  C03A  F023         	movff	read_card@mR+1,turnLeft@mR+1
  1803  00076A  0E87               	movlw	135
  1804  00076C  6E24               	movwf	turnLeft@deg^0,c
  1805  00076E  EC9F  F006         	call	_turnLeft	;wreg free
  1806                           
  1807                           ;color_card.c: 47:         stop(mL, mR);
  1808  000772  C037  F020         	movff	read_card@mL,stop@mL
  1809  000776  C038  F021         	movff	read_card@mL+1,stop@mL+1
  1810  00077A  C039  F022         	movff	read_card@mR,stop@mR
  1811  00077E  C03A  F023         	movff	read_card@mR+1,stop@mR+1
  1812  000782  ECD6  F00A         	call	_stop	;wreg free
  1813                           
  1814                           ;color_card.c: 49:     } else if ((R_rel<0.46) && (G_rel>0.295) && (B_rel>0.21)) {
  1815  000786  EF45  F004         	goto	l509
  1816  00078A                     l2553:
  1817  00078A  C03B  F007         	movff	read_card@R_rel,___xxtofl@val
  1818  00078E  C03C  F008         	movff	read_card@R_rel+1,___xxtofl@val+1
  1819  000792  6A09               	clrf	(___xxtofl@val+2)^0,c
  1820  000794  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1821  000796  0E00               	movlw	0
  1822  000798  EC7C  F008         	call	___xxtofl
  1823  00079C  C007  F015         	movff	?___xxtofl,___flge@ff1
  1824  0007A0  C008  F016         	movff	?___xxtofl+1,___flge@ff1+1
  1825  0007A4  C009  F017         	movff	?___xxtofl+2,___flge@ff1+2
  1826  0007A8  C00A  F018         	movff	?___xxtofl+3,___flge@ff1+3
  1827  0007AC  0E1F               	movlw	31
  1828  0007AE  6E19               	movwf	___flge@ff2^0,c
  1829  0007B0  0E85               	movlw	133
  1830  0007B2  6E1A               	movwf	(___flge@ff2+1)^0,c
  1831  0007B4  0EEB               	movlw	235
  1832  0007B6  6E1B               	movwf	(___flge@ff2+2)^0,c
  1833  0007B8  0E3E               	movlw	62
  1834  0007BA  6E1C               	movwf	(___flge@ff2+3)^0,c
  1835  0007BC  EC56  F009         	call	___flge	;wreg free
  1836  0007C0  B0D8               	btfsc	status,0,c
  1837  0007C2  EFE5  F003         	goto	u2151
  1838  0007C6  EFE7  F003         	goto	u2150
  1839  0007CA                     u2151:
  1840  0007CA  EF2D  F004         	goto	l2561
  1841  0007CE                     u2150:
  1842  0007CE  0E3D               	movlw	61
  1843  0007D0  6E15               	movwf	___flge@ff1^0,c
  1844  0007D2  0E0A               	movlw	10
  1845  0007D4  6E16               	movwf	(___flge@ff1+1)^0,c
  1846  0007D6  0E97               	movlw	151
  1847  0007D8  6E17               	movwf	(___flge@ff1+2)^0,c
  1848  0007DA  0E3E               	movlw	62
  1849  0007DC  6E18               	movwf	(___flge@ff1+3)^0,c
  1850  0007DE  C03D  F007         	movff	read_card@G_rel,___xxtofl@val
  1851  0007E2  C03E  F008         	movff	read_card@G_rel+1,___xxtofl@val+1
  1852  0007E6  6A09               	clrf	(___xxtofl@val+2)^0,c
  1853  0007E8  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1854  0007EA  0E00               	movlw	0
  1855  0007EC  EC7C  F008         	call	___xxtofl
  1856  0007F0  C007  F019         	movff	?___xxtofl,___flge@ff2
  1857  0007F4  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1858  0007F8  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1859  0007FC  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1860  000800  EC56  F009         	call	___flge	;wreg free
  1861  000804  B0D8               	btfsc	status,0,c
  1862  000806  EF07  F004         	goto	u2161
  1863  00080A  EF09  F004         	goto	u2160
  1864  00080E                     u2161:
  1865  00080E  EF2D  F004         	goto	l2561
  1866  000812                     u2160:
  1867  000812  0E3D               	movlw	61
  1868  000814  6E15               	movwf	___flge@ff1^0,c
  1869  000816  0E0A               	movlw	10
  1870  000818  6E16               	movwf	(___flge@ff1+1)^0,c
  1871  00081A  0E57               	movlw	87
  1872  00081C  6E17               	movwf	(___flge@ff1+2)^0,c
  1873  00081E  0E3E               	movlw	62
  1874  000820  6E18               	movwf	(___flge@ff1+3)^0,c
  1875  000822  C03F  F007         	movff	read_card@B_rel,___xxtofl@val
  1876  000826  C040  F008         	movff	read_card@B_rel+1,___xxtofl@val+1
  1877  00082A  6A09               	clrf	(___xxtofl@val+2)^0,c
  1878  00082C  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1879  00082E  0E00               	movlw	0
  1880  000830  EC7C  F008         	call	___xxtofl
  1881  000834  C007  F019         	movff	?___xxtofl,___flge@ff2
  1882  000838  C008  F01A         	movff	?___xxtofl+1,___flge@ff2+1
  1883  00083C  C009  F01B         	movff	?___xxtofl+2,___flge@ff2+2
  1884  000840  C00A  F01C         	movff	?___xxtofl+3,___flge@ff2+3
  1885  000844  EC56  F009         	call	___flge	;wreg free
  1886  000848  B0D8               	btfsc	status,0,c
  1887  00084A  EF29  F004         	goto	u2171
  1888  00084E  EF2B  F004         	goto	u2170
  1889  000852                     u2171:
  1890  000852  EF2D  F004         	goto	l2561
  1891  000856                     u2170:
  1892  000856  EFA1  F001         	goto	l2519
  1893  00085A                     l2561:
  1894                           
  1895                           ;color_card.c: 56:         returnhome_flag = 1;
  1896  00085A  0E01               	movlw	1
  1897  00085C  6E4B               	movwf	_returnhome_flag^0,c	;volatile
  1898  00085E                     
  1899                           ;color_card.c: 57:         turnRight(mL, mR, 180);
  1900  00085E  C037  F020         	movff	read_card@mL,turnRight@mL
  1901  000862  C038  F021         	movff	read_card@mL+1,turnRight@mL+1
  1902  000866  C039  F022         	movff	read_card@mR,turnRight@mR
  1903  00086A  C03A  F023         	movff	read_card@mR+1,turnRight@mR+1
  1904  00086E  0EB4               	movlw	180
  1905  000870  6E24               	movwf	turnRight@deg^0,c
  1906  000872  ECAC  F005         	call	_turnRight	;wreg free
  1907  000876                     
  1908                           ;color_card.c: 58:         stop(mL, mR);
  1909  000876  C037  F020         	movff	read_card@mL,stop@mL
  1910  00087A  C038  F021         	movff	read_card@mL+1,stop@mL+1
  1911  00087E  C039  F022         	movff	read_card@mR,stop@mR
  1912  000882  C03A  F023         	movff	read_card@mR+1,stop@mR+1
  1913  000886  ECD6  F00A         	call	_stop	;wreg free
  1914  00088A                     l509:
  1915  00088A  0012               	return		;funcret
  1916  00088C                     __end_of_read_card:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function _turnRight *****************
  1920 ;; Defined at:
  1921 ;;		line 246 in file "dc_motor.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  mL              2   31[COMRAM] PTR struct .
  1924 ;;		 -> main@motorL(9), 
  1925 ;;  mR              2   33[COMRAM] PTR struct .
  1926 ;;		 -> main@motorR(9), 
  1927 ;;  deg             1   35[COMRAM] unsigned char 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1939 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1942 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1943 ;;Total ram usage:        7 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 9
  1946 ;; This function calls:
  1947 ;;		_setMotorPWM
  1948 ;; This function is called by:
  1949 ;;		_read_card
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text2
  1954  000B58                     __ptext2:
  1955                           	callstack 0
  1956  000B58                     _turnRight:
  1957                           	callstack 20
  1958  000B58                     
  1959                           ;dc_motor.c: 246: void turnRight(DC_motor *mL, DC_motor *mR, unsigned char deg);dc_motor
      +                          .c: 247: {;dc_motor.c: 248:     if (returnhome_flag==0) {
  1960  000B58  504B               	movf	_returnhome_flag^0,w,c	;volatile
  1961  000B5A  A4D8               	btfss	status,2,c
  1962  000B5C  EFB2  F005         	goto	u1601
  1963  000B60  EFB4  F005         	goto	u1600
  1964  000B64                     u1601:
  1965  000B64  EF2A  F006         	goto	l2235
  1966  000B68                     u1600:
  1967  000B68                     
  1968                           ;dc_motor.c: 250:         mL->direction = 1;
  1969  000B68  EE20 F001          	lfsr	2,1
  1970  000B6C  5020               	movf	turnRight@mL^0,w,c
  1971  000B6E  26D9               	addwf	fsr2l,f,c
  1972  000B70  5021               	movf	(turnRight@mL+1)^0,w,c
  1973  000B72  22DA               	addwfc	fsr2h,f,c
  1974  000B74  0E01               	movlw	1
  1975  000B76  6EDF               	movwf	indf2,c
  1976                           
  1977                           ;dc_motor.c: 251:         mR->direction = 0;
  1978  000B78  EE20 F001          	lfsr	2,1
  1979  000B7C  5022               	movf	turnRight@mR^0,w,c
  1980  000B7E  26D9               	addwf	fsr2l,f,c
  1981  000B80  5023               	movf	(turnRight@mR+1)^0,w,c
  1982  000B82  22DA               	addwfc	fsr2h,f,c
  1983  000B84  0E00               	movlw	0
  1984  000B86  6EDF               	movwf	indf2,c
  1985                           
  1986                           ;dc_motor.c: 254:         while(((mL->power)<50) || ((mR->power)<50)){
  1987  000B88  EF0F  F006         	goto	l246
  1988  000B8C                     l2217:
  1989                           
  1990                           ;dc_motor.c: 256:             LATHbits.LATH0 = !LATHbits.LATH0;
  1991  000B8C  A080               	btfss	128,0,c	;volatile
  1992  000B8E  EFCB  F005         	goto	u1611
  1993  000B92  EFCF  F005         	goto	u1610
  1994  000B96                     u1611:
  1995  000B96  6A25               	clrf	??_turnRight^0,c
  1996  000B98  2A25               	incf	??_turnRight^0,f,c
  1997  000B9A  EFD0  F005         	goto	u1628
  1998  000B9E                     u1610:
  1999  000B9E  6A25               	clrf	??_turnRight^0,c
  2000  000BA0                     u1628:
  2001  000BA0  5080               	movf	128,w,c	;volatile
  2002  000BA2  1825               	xorwf	??_turnRight^0,w,c
  2003  000BA4  0BFE               	andlw	-2
  2004  000BA6  1825               	xorwf	??_turnRight^0,w,c
  2005  000BA8  6E80               	movwf	128,c	;volatile
  2006  000BAA                     
  2007                           ;dc_motor.c: 259:             if (mL->power<50) {mL->power+=1;}
  2008  000BAA  C020  FFD9         	movff	turnRight@mL,fsr2l
  2009  000BAE  C021  FFDA         	movff	turnRight@mL+1,fsr2h
  2010  000BB2  0E32               	movlw	50
  2011  000BB4  60DF               	cpfslt	indf2,c
  2012  000BB6  EFDF  F005         	goto	u1631
  2013  000BBA  EFE1  F005         	goto	u1630
  2014  000BBE                     u1631:
  2015  000BBE  EFE6  F005         	goto	l2223
  2016  000BC2                     u1630:
  2017  000BC2  C020  FFD9         	movff	turnRight@mL,fsr2l
  2018  000BC6  C021  FFDA         	movff	turnRight@mL+1,fsr2h
  2019  000BCA  2ADF               	incf	indf2,f,c
  2020  000BCC                     l2223:
  2021                           
  2022                           ;dc_motor.c: 260:             if (mR->power<50) {mR->power+=1;}
  2023  000BCC  C022  FFD9         	movff	turnRight@mR,fsr2l
  2024  000BD0  C023  FFDA         	movff	turnRight@mR+1,fsr2h
  2025  000BD4  0E32               	movlw	50
  2026  000BD6  60DF               	cpfslt	indf2,c
  2027  000BD8  EFF0  F005         	goto	u1641
  2028  000BDC  EFF2  F005         	goto	u1640
  2029  000BE0                     u1641:
  2030  000BE0  EFF7  F005         	goto	l2227
  2031  000BE4                     u1640:
  2032  000BE4  C022  FFD9         	movff	turnRight@mR,fsr2l
  2033  000BE8  C023  FFDA         	movff	turnRight@mR+1,fsr2h
  2034  000BEC  2ADF               	incf	indf2,f,c
  2035  000BEE                     l2227:
  2036                           
  2037                           ;dc_motor.c: 263:             setMotorPWM(mL);
  2038  000BEE  C020  F015         	movff	turnRight@mL,setMotorPWM@m
  2039  000BF2  C021  F016         	movff	turnRight@mL+1,setMotorPWM@m+1
  2040  000BF6  EC92  F007         	call	_setMotorPWM	;wreg free
  2041  000BFA                     
  2042                           ;dc_motor.c: 264:             setMotorPWM(mR);
  2043  000BFA  C022  F015         	movff	turnRight@mR,setMotorPWM@m
  2044  000BFE  C023  F016         	movff	turnRight@mR+1,setMotorPWM@m+1
  2045  000C02  EC92  F007         	call	_setMotorPWM	;wreg free
  2046  000C06                     
  2047                           ;dc_motor.c: 265:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2048  000C06  0E09               	movlw	9
  2049  000C08  6E26               	movwf	(??_turnRight+1)^0,c
  2050  000C0A  0E1E               	movlw	30
  2051  000C0C  6E25               	movwf	??_turnRight^0,c
  2052  000C0E  0EE4               	movlw	228
  2053  000C10                     u2477:
  2054  000C10  2EE8               	decfsz	wreg,f,c
  2055  000C12  D7FE               	bra	u2477
  2056  000C14  2E25               	decfsz	??_turnRight^0,f,c
  2057  000C16  D7FC               	bra	u2477
  2058  000C18  2E26               	decfsz	(??_turnRight+1)^0,f,c
  2059  000C1A  D7FA               	bra	u2477
  2060  000C1C  D000               	nop2	
  2061  000C1E                     l246:
  2062                           
  2063                           ;dc_motor.c: 254:         while(((mL->power)<50) || ((mR->power)<50)){
  2064  000C1E  C020  FFD9         	movff	turnRight@mL,fsr2l
  2065  000C22  C021  FFDA         	movff	turnRight@mL+1,fsr2h
  2066  000C26  0E31               	movlw	49
  2067  000C28  64DF               	cpfsgt	indf2,c
  2068  000C2A  EF19  F006         	goto	u1651
  2069  000C2E  EF1B  F006         	goto	u1650
  2070  000C32                     u1651:
  2071  000C32  EFC6  F005         	goto	l2217
  2072  000C36                     u1650:
  2073  000C36  C022  FFD9         	movff	turnRight@mR,fsr2l
  2074  000C3A  C023  FFDA         	movff	turnRight@mR+1,fsr2h
  2075  000C3E  0E31               	movlw	49
  2076  000C40  64DF               	cpfsgt	indf2,c
  2077  000C42  EF25  F006         	goto	u1661
  2078  000C46  EF27  F006         	goto	u1660
  2079  000C4A                     u1661:
  2080  000C4A  EFC6  F005         	goto	l2217
  2081  000C4E                     u1660:
  2082  000C4E                     
  2083                           ;dc_motor.c: 268:         LATHbits.LATH0 = 0;
  2084  000C4E  9080               	bcf	128,0,c	;volatile
  2085                           
  2086                           ;dc_motor.c: 270:     } else {
  2087  000C50  EF9E  F006         	goto	l257
  2088  000C54                     l2235:
  2089                           
  2090                           ;dc_motor.c: 272:         mL->direction = 0;
  2091  000C54  EE20 F001          	lfsr	2,1
  2092  000C58  5020               	movf	turnRight@mL^0,w,c
  2093  000C5A  26D9               	addwf	fsr2l,f,c
  2094  000C5C  5021               	movf	(turnRight@mL+1)^0,w,c
  2095  000C5E  22DA               	addwfc	fsr2h,f,c
  2096  000C60  0E00               	movlw	0
  2097  000C62  6EDF               	movwf	indf2,c
  2098                           
  2099                           ;dc_motor.c: 273:         mR->direction = 1;
  2100  000C64  EE20 F001          	lfsr	2,1
  2101  000C68  5022               	movf	turnRight@mR^0,w,c
  2102  000C6A  26D9               	addwf	fsr2l,f,c
  2103  000C6C  5023               	movf	(turnRight@mR+1)^0,w,c
  2104  000C6E  22DA               	addwfc	fsr2h,f,c
  2105  000C70  0E01               	movlw	1
  2106  000C72  6EDF               	movwf	indf2,c
  2107                           
  2108                           ;dc_motor.c: 276:         while(((mL->power)<50) || ((mR->power)<50)){
  2109  000C74  EF85  F006         	goto	l252
  2110  000C78                     l2237:
  2111                           
  2112                           ;dc_motor.c: 278:             LATFbits.LATF0 = !LATFbits.LATF0;
  2113  000C78  A07E               	btfss	126,0,c	;volatile
  2114  000C7A  EF41  F006         	goto	u1671
  2115  000C7E  EF45  F006         	goto	u1670
  2116  000C82                     u1671:
  2117  000C82  6A25               	clrf	??_turnRight^0,c
  2118  000C84  2A25               	incf	??_turnRight^0,f,c
  2119  000C86  EF46  F006         	goto	u1688
  2120  000C8A                     u1670:
  2121  000C8A  6A25               	clrf	??_turnRight^0,c
  2122  000C8C                     u1688:
  2123  000C8C  507E               	movf	126,w,c	;volatile
  2124  000C8E  1825               	xorwf	??_turnRight^0,w,c
  2125  000C90  0BFE               	andlw	-2
  2126  000C92  1825               	xorwf	??_turnRight^0,w,c
  2127  000C94  6E7E               	movwf	126,c	;volatile
  2128  000C96                     
  2129                           ;dc_motor.c: 281:             if (mL->power<50) {mL->power+=1;}
  2130  000C96  C020  FFD9         	movff	turnRight@mL,fsr2l
  2131  000C9A  C021  FFDA         	movff	turnRight@mL+1,fsr2h
  2132  000C9E  0E32               	movlw	50
  2133  000CA0  60DF               	cpfslt	indf2,c
  2134  000CA2  EF55  F006         	goto	u1691
  2135  000CA6  EF57  F006         	goto	u1690
  2136  000CAA                     u1691:
  2137  000CAA  EF5C  F006         	goto	l2243
  2138  000CAE                     u1690:
  2139  000CAE  C020  FFD9         	movff	turnRight@mL,fsr2l
  2140  000CB2  C021  FFDA         	movff	turnRight@mL+1,fsr2h
  2141  000CB6  2ADF               	incf	indf2,f,c
  2142  000CB8                     l2243:
  2143                           
  2144                           ;dc_motor.c: 282:             if (mR->power<50) {mR->power+=1;}
  2145  000CB8  C022  FFD9         	movff	turnRight@mR,fsr2l
  2146  000CBC  C023  FFDA         	movff	turnRight@mR+1,fsr2h
  2147  000CC0  0E32               	movlw	50
  2148  000CC2  60DF               	cpfslt	indf2,c
  2149  000CC4  EF66  F006         	goto	u1701
  2150  000CC8  EF68  F006         	goto	u1700
  2151  000CCC                     u1701:
  2152  000CCC  EF6D  F006         	goto	l2247
  2153  000CD0                     u1700:
  2154  000CD0  C022  FFD9         	movff	turnRight@mR,fsr2l
  2155  000CD4  C023  FFDA         	movff	turnRight@mR+1,fsr2h
  2156  000CD8  2ADF               	incf	indf2,f,c
  2157  000CDA                     l2247:
  2158                           
  2159                           ;dc_motor.c: 285:             setMotorPWM(mL);
  2160  000CDA  C020  F015         	movff	turnRight@mL,setMotorPWM@m
  2161  000CDE  C021  F016         	movff	turnRight@mL+1,setMotorPWM@m+1
  2162  000CE2  EC92  F007         	call	_setMotorPWM	;wreg free
  2163  000CE6                     
  2164                           ;dc_motor.c: 286:             setMotorPWM(mR);
  2165  000CE6  C022  F015         	movff	turnRight@mR,setMotorPWM@m
  2166  000CEA  C023  F016         	movff	turnRight@mR+1,setMotorPWM@m+1
  2167  000CEE  EC92  F007         	call	_setMotorPWM	;wreg free
  2168  000CF2                     
  2169                           ;dc_motor.c: 287:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2170  000CF2  0E09               	movlw	9
  2171  000CF4  6E26               	movwf	(??_turnRight+1)^0,c
  2172  000CF6  0E1E               	movlw	30
  2173  000CF8  6E25               	movwf	??_turnRight^0,c
  2174  000CFA  0EE4               	movlw	228
  2175  000CFC                     u2487:
  2176  000CFC  2EE8               	decfsz	wreg,f,c
  2177  000CFE  D7FE               	bra	u2487
  2178  000D00  2E25               	decfsz	??_turnRight^0,f,c
  2179  000D02  D7FC               	bra	u2487
  2180  000D04  2E26               	decfsz	(??_turnRight+1)^0,f,c
  2181  000D06  D7FA               	bra	u2487
  2182  000D08  D000               	nop2	
  2183  000D0A                     l252:
  2184                           
  2185                           ;dc_motor.c: 276:         while(((mL->power)<50) || ((mR->power)<50)){
  2186  000D0A  C020  FFD9         	movff	turnRight@mL,fsr2l
  2187  000D0E  C021  FFDA         	movff	turnRight@mL+1,fsr2h
  2188  000D12  0E31               	movlw	49
  2189  000D14  64DF               	cpfsgt	indf2,c
  2190  000D16  EF8F  F006         	goto	u1711
  2191  000D1A  EF91  F006         	goto	u1710
  2192  000D1E                     u1711:
  2193  000D1E  EF3C  F006         	goto	l2237
  2194  000D22                     u1710:
  2195  000D22  C022  FFD9         	movff	turnRight@mR,fsr2l
  2196  000D26  C023  FFDA         	movff	turnRight@mR+1,fsr2h
  2197  000D2A  0E31               	movlw	49
  2198  000D2C  64DF               	cpfsgt	indf2,c
  2199  000D2E  EF9B  F006         	goto	u1721
  2200  000D32  EF9D  F006         	goto	u1720
  2201  000D36                     u1721:
  2202  000D36  EF3C  F006         	goto	l2237
  2203  000D3A                     u1720:
  2204  000D3A                     
  2205                           ;dc_motor.c: 290:         LATFbits.LATF0 = 0;
  2206  000D3A  907E               	bcf	126,0,c	;volatile
  2207  000D3C                     l257:
  2208  000D3C  0012               	return		;funcret
  2209  000D3E                     __end_of_turnRight:
  2210                           	callstack 0
  2211                           
  2212 ;; *************** function _turnLeft *****************
  2213 ;; Defined at:
  2214 ;;		line 194 in file "dc_motor.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  mL              2   31[COMRAM] PTR struct .
  2217 ;;		 -> main@motorL(9), 
  2218 ;;  mR              2   33[COMRAM] PTR struct .
  2219 ;;		 -> main@motorR(9), 
  2220 ;;  deg             1   35[COMRAM] unsigned char 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2232 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2235 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2236 ;;Total ram usage:        7 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 9
  2239 ;; This function calls:
  2240 ;;		_setMotorPWM
  2241 ;; This function is called by:
  2242 ;;		_read_card
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text3
  2247  000D3E                     __ptext3:
  2248                           	callstack 0
  2249  000D3E                     _turnLeft:
  2250                           	callstack 20
  2251  000D3E                     
  2252                           ;dc_motor.c: 194: void turnLeft(DC_motor *mL, DC_motor *mR, unsigned char deg);dc_motor.
      +                          c: 195: {;dc_motor.c: 196:     if (returnhome_flag==0) {
  2253  000D3E  504B               	movf	_returnhome_flag^0,w,c	;volatile
  2254  000D40  A4D8               	btfss	status,2,c
  2255  000D42  EFA5  F006         	goto	u1471
  2256  000D46  EFA7  F006         	goto	u1470
  2257  000D4A                     u1471:
  2258  000D4A  EF1D  F007         	goto	l2193
  2259  000D4E                     u1470:
  2260  000D4E                     
  2261                           ;dc_motor.c: 198:         mL->direction = 0;
  2262  000D4E  EE20 F001          	lfsr	2,1
  2263  000D52  5020               	movf	turnLeft@mL^0,w,c
  2264  000D54  26D9               	addwf	fsr2l,f,c
  2265  000D56  5021               	movf	(turnLeft@mL+1)^0,w,c
  2266  000D58  22DA               	addwfc	fsr2h,f,c
  2267  000D5A  0E00               	movlw	0
  2268  000D5C  6EDF               	movwf	indf2,c
  2269                           
  2270                           ;dc_motor.c: 199:         mR->direction = 1;
  2271  000D5E  EE20 F001          	lfsr	2,1
  2272  000D62  5022               	movf	turnLeft@mR^0,w,c
  2273  000D64  26D9               	addwf	fsr2l,f,c
  2274  000D66  5023               	movf	(turnLeft@mR+1)^0,w,c
  2275  000D68  22DA               	addwfc	fsr2h,f,c
  2276  000D6A  0E01               	movlw	1
  2277  000D6C  6EDF               	movwf	indf2,c
  2278                           
  2279                           ;dc_motor.c: 202:         while(((mL->power)<50) || ((mR->power)<50)){
  2280  000D6E  EF02  F007         	goto	l231
  2281  000D72                     l2175:
  2282                           
  2283                           ;dc_motor.c: 204:             LATFbits.LATF0 = !LATFbits.LATF0;
  2284  000D72  A07E               	btfss	126,0,c	;volatile
  2285  000D74  EFBE  F006         	goto	u1481
  2286  000D78  EFC2  F006         	goto	u1480
  2287  000D7C                     u1481:
  2288  000D7C  6A25               	clrf	??_turnLeft^0,c
  2289  000D7E  2A25               	incf	??_turnLeft^0,f,c
  2290  000D80  EFC3  F006         	goto	u1498
  2291  000D84                     u1480:
  2292  000D84  6A25               	clrf	??_turnLeft^0,c
  2293  000D86                     u1498:
  2294  000D86  507E               	movf	126,w,c	;volatile
  2295  000D88  1825               	xorwf	??_turnLeft^0,w,c
  2296  000D8A  0BFE               	andlw	-2
  2297  000D8C  1825               	xorwf	??_turnLeft^0,w,c
  2298  000D8E  6E7E               	movwf	126,c	;volatile
  2299  000D90                     
  2300                           ;dc_motor.c: 207:             if (mL->power<50) {mL->power+=1;}
  2301  000D90  C020  FFD9         	movff	turnLeft@mL,fsr2l
  2302  000D94  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
  2303  000D98  0E32               	movlw	50
  2304  000D9A  60DF               	cpfslt	indf2,c
  2305  000D9C  EFD2  F006         	goto	u1501
  2306  000DA0  EFD4  F006         	goto	u1500
  2307  000DA4                     u1501:
  2308  000DA4  EFD9  F006         	goto	l2181
  2309  000DA8                     u1500:
  2310  000DA8  C020  FFD9         	movff	turnLeft@mL,fsr2l
  2311  000DAC  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
  2312  000DB0  2ADF               	incf	indf2,f,c
  2313  000DB2                     l2181:
  2314                           
  2315                           ;dc_motor.c: 208:             if (mR->power<50) {mR->power+=1;}
  2316  000DB2  C022  FFD9         	movff	turnLeft@mR,fsr2l
  2317  000DB6  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
  2318  000DBA  0E32               	movlw	50
  2319  000DBC  60DF               	cpfslt	indf2,c
  2320  000DBE  EFE3  F006         	goto	u1511
  2321  000DC2  EFE5  F006         	goto	u1510
  2322  000DC6                     u1511:
  2323  000DC6  EFEA  F006         	goto	l2185
  2324  000DCA                     u1510:
  2325  000DCA  C022  FFD9         	movff	turnLeft@mR,fsr2l
  2326  000DCE  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
  2327  000DD2  2ADF               	incf	indf2,f,c
  2328  000DD4                     l2185:
  2329                           
  2330                           ;dc_motor.c: 211:             setMotorPWM(mL);
  2331  000DD4  C020  F015         	movff	turnLeft@mL,setMotorPWM@m
  2332  000DD8  C021  F016         	movff	turnLeft@mL+1,setMotorPWM@m+1
  2333  000DDC  EC92  F007         	call	_setMotorPWM	;wreg free
  2334  000DE0                     
  2335                           ;dc_motor.c: 212:             setMotorPWM(mR);
  2336  000DE0  C022  F015         	movff	turnLeft@mR,setMotorPWM@m
  2337  000DE4  C023  F016         	movff	turnLeft@mR+1,setMotorPWM@m+1
  2338  000DE8  EC92  F007         	call	_setMotorPWM	;wreg free
  2339  000DEC                     
  2340                           ;dc_motor.c: 213:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2341  000DEC  0E09               	movlw	9
  2342  000DEE  6E26               	movwf	(??_turnLeft+1)^0,c
  2343  000DF0  0E1E               	movlw	30
  2344  000DF2  6E25               	movwf	??_turnLeft^0,c
  2345  000DF4  0EE4               	movlw	228
  2346  000DF6                     u2497:
  2347  000DF6  2EE8               	decfsz	wreg,f,c
  2348  000DF8  D7FE               	bra	u2497
  2349  000DFA  2E25               	decfsz	??_turnLeft^0,f,c
  2350  000DFC  D7FC               	bra	u2497
  2351  000DFE  2E26               	decfsz	(??_turnLeft+1)^0,f,c
  2352  000E00  D7FA               	bra	u2497
  2353  000E02  D000               	nop2	
  2354  000E04                     l231:
  2355                           
  2356                           ;dc_motor.c: 202:         while(((mL->power)<50) || ((mR->power)<50)){
  2357  000E04  C020  FFD9         	movff	turnLeft@mL,fsr2l
  2358  000E08  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
  2359  000E0C  0E31               	movlw	49
  2360  000E0E  64DF               	cpfsgt	indf2,c
  2361  000E10  EF0C  F007         	goto	u1521
  2362  000E14  EF0E  F007         	goto	u1520
  2363  000E18                     u1521:
  2364  000E18  EFB9  F006         	goto	l2175
  2365  000E1C                     u1520:
  2366  000E1C  C022  FFD9         	movff	turnLeft@mR,fsr2l
  2367  000E20  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
  2368  000E24  0E31               	movlw	49
  2369  000E26  64DF               	cpfsgt	indf2,c
  2370  000E28  EF18  F007         	goto	u1531
  2371  000E2C  EF1A  F007         	goto	u1530
  2372  000E30                     u1531:
  2373  000E30  EFB9  F006         	goto	l2175
  2374  000E34                     u1530:
  2375  000E34                     
  2376                           ;dc_motor.c: 216:         LATFbits.LATF0 = 0;
  2377  000E34  907E               	bcf	126,0,c	;volatile
  2378                           
  2379                           ;dc_motor.c: 218:     } else {
  2380  000E36  EF91  F007         	goto	l242
  2381  000E3A                     l2193:
  2382                           
  2383                           ;dc_motor.c: 220:         mL->direction = 1;
  2384  000E3A  EE20 F001          	lfsr	2,1
  2385  000E3E  5020               	movf	turnLeft@mL^0,w,c
  2386  000E40  26D9               	addwf	fsr2l,f,c
  2387  000E42  5021               	movf	(turnLeft@mL+1)^0,w,c
  2388  000E44  22DA               	addwfc	fsr2h,f,c
  2389  000E46  0E01               	movlw	1
  2390  000E48  6EDF               	movwf	indf2,c
  2391                           
  2392                           ;dc_motor.c: 221:         mR->direction = 0;
  2393  000E4A  EE20 F001          	lfsr	2,1
  2394  000E4E  5022               	movf	turnLeft@mR^0,w,c
  2395  000E50  26D9               	addwf	fsr2l,f,c
  2396  000E52  5023               	movf	(turnLeft@mR+1)^0,w,c
  2397  000E54  22DA               	addwfc	fsr2h,f,c
  2398  000E56  0E00               	movlw	0
  2399  000E58  6EDF               	movwf	indf2,c
  2400                           
  2401                           ;dc_motor.c: 224:         while(((mL->power)<50) || ((mR->power)<50)){
  2402  000E5A  EF78  F007         	goto	l237
  2403  000E5E                     l2195:
  2404                           
  2405                           ;dc_motor.c: 226:             LATHbits.LATH0 = !LATHbits.LATH0;
  2406  000E5E  A080               	btfss	128,0,c	;volatile
  2407  000E60  EF34  F007         	goto	u1541
  2408  000E64  EF38  F007         	goto	u1540
  2409  000E68                     u1541:
  2410  000E68  6A25               	clrf	??_turnLeft^0,c
  2411  000E6A  2A25               	incf	??_turnLeft^0,f,c
  2412  000E6C  EF39  F007         	goto	u1558
  2413  000E70                     u1540:
  2414  000E70  6A25               	clrf	??_turnLeft^0,c
  2415  000E72                     u1558:
  2416  000E72  5080               	movf	128,w,c	;volatile
  2417  000E74  1825               	xorwf	??_turnLeft^0,w,c
  2418  000E76  0BFE               	andlw	-2
  2419  000E78  1825               	xorwf	??_turnLeft^0,w,c
  2420  000E7A  6E80               	movwf	128,c	;volatile
  2421  000E7C                     
  2422                           ;dc_motor.c: 229:             if (mL->power<50) {mL->power+=1;}
  2423  000E7C  C020  FFD9         	movff	turnLeft@mL,fsr2l
  2424  000E80  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
  2425  000E84  0E32               	movlw	50
  2426  000E86  60DF               	cpfslt	indf2,c
  2427  000E88  EF48  F007         	goto	u1561
  2428  000E8C  EF4A  F007         	goto	u1560
  2429  000E90                     u1561:
  2430  000E90  EF4F  F007         	goto	l2201
  2431  000E94                     u1560:
  2432  000E94  C020  FFD9         	movff	turnLeft@mL,fsr2l
  2433  000E98  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
  2434  000E9C  2ADF               	incf	indf2,f,c
  2435  000E9E                     l2201:
  2436                           
  2437                           ;dc_motor.c: 230:             if (mR->power<50) {mR->power+=1;}
  2438  000E9E  C022  FFD9         	movff	turnLeft@mR,fsr2l
  2439  000EA2  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
  2440  000EA6  0E32               	movlw	50
  2441  000EA8  60DF               	cpfslt	indf2,c
  2442  000EAA  EF59  F007         	goto	u1571
  2443  000EAE  EF5B  F007         	goto	u1570
  2444  000EB2                     u1571:
  2445  000EB2  EF60  F007         	goto	l2205
  2446  000EB6                     u1570:
  2447  000EB6  C022  FFD9         	movff	turnLeft@mR,fsr2l
  2448  000EBA  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
  2449  000EBE  2ADF               	incf	indf2,f,c
  2450  000EC0                     l2205:
  2451                           
  2452                           ;dc_motor.c: 233:             setMotorPWM(mL);
  2453  000EC0  C020  F015         	movff	turnLeft@mL,setMotorPWM@m
  2454  000EC4  C021  F016         	movff	turnLeft@mL+1,setMotorPWM@m+1
  2455  000EC8  EC92  F007         	call	_setMotorPWM	;wreg free
  2456  000ECC                     
  2457                           ;dc_motor.c: 234:             setMotorPWM(mR);
  2458  000ECC  C022  F015         	movff	turnLeft@mR,setMotorPWM@m
  2459  000ED0  C023  F016         	movff	turnLeft@mR+1,setMotorPWM@m+1
  2460  000ED4  EC92  F007         	call	_setMotorPWM	;wreg free
  2461  000ED8                     
  2462                           ;dc_motor.c: 235:             _delay((unsigned long)((100)*(64000000/4000.0)));
  2463  000ED8  0E09               	movlw	9
  2464  000EDA  6E26               	movwf	(??_turnLeft+1)^0,c
  2465  000EDC  0E1E               	movlw	30
  2466  000EDE  6E25               	movwf	??_turnLeft^0,c
  2467  000EE0  0EE4               	movlw	228
  2468  000EE2                     u2507:
  2469  000EE2  2EE8               	decfsz	wreg,f,c
  2470  000EE4  D7FE               	bra	u2507
  2471  000EE6  2E25               	decfsz	??_turnLeft^0,f,c
  2472  000EE8  D7FC               	bra	u2507
  2473  000EEA  2E26               	decfsz	(??_turnLeft+1)^0,f,c
  2474  000EEC  D7FA               	bra	u2507
  2475  000EEE  D000               	nop2	
  2476  000EF0                     l237:
  2477                           
  2478                           ;dc_motor.c: 224:         while(((mL->power)<50) || ((mR->power)<50)){
  2479  000EF0  C020  FFD9         	movff	turnLeft@mL,fsr2l
  2480  000EF4  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
  2481  000EF8  0E31               	movlw	49
  2482  000EFA  64DF               	cpfsgt	indf2,c
  2483  000EFC  EF82  F007         	goto	u1581
  2484  000F00  EF84  F007         	goto	u1580
  2485  000F04                     u1581:
  2486  000F04  EF2F  F007         	goto	l2195
  2487  000F08                     u1580:
  2488  000F08  C022  FFD9         	movff	turnLeft@mR,fsr2l
  2489  000F0C  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
  2490  000F10  0E31               	movlw	49
  2491  000F12  64DF               	cpfsgt	indf2,c
  2492  000F14  EF8E  F007         	goto	u1591
  2493  000F18  EF90  F007         	goto	u1590
  2494  000F1C                     u1591:
  2495  000F1C  EF2F  F007         	goto	l2195
  2496  000F20                     u1590:
  2497  000F20                     
  2498                           ;dc_motor.c: 238:         LATHbits.LATH0 = 0;
  2499  000F20  9080               	bcf	128,0,c	;volatile
  2500  000F22                     l242:
  2501  000F22  0012               	return		;funcret
  2502  000F24                     __end_of_turnLeft:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _stop *****************
  2506 ;; Defined at:
  2507 ;;		line 172 in file "dc_motor.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  mL              2   31[COMRAM] PTR struct .
  2510 ;;		 -> main@motorL(9), 
  2511 ;;  mR              2   33[COMRAM] PTR struct .
  2512 ;;		 -> main@motorR(9), 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2524 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;Total ram usage:        6 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 9
  2531 ;; This function calls:
  2532 ;;		_setMotorPWM
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;;		_read_card
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text4
  2540  0015AC                     __ptext4:
  2541                           	callstack 0
  2542  0015AC                     _stop:
  2543                           	callstack 21
  2544  0015AC                     
  2545                           ;dc_motor.c: 172: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 173: {;dc_motor.c: 1
      +                          74:     LATDbits.LATD4 = 1;
  2546  0015AC  887C               	bsf	124,4,c	;volatile
  2547                           
  2548                           ;dc_motor.c: 177:     while(((mL->power)>0) && ((mR->power)>0)){
  2549  0015AE  EF07  F00B         	goto	l2149
  2550  0015B2                     l2141:
  2551                           
  2552                           ;dc_motor.c: 178:         mL->power = mL->power - 5;
  2553  0015B2  C020  FFD9         	movff	stop@mL,fsr2l
  2554  0015B6  C021  FFDA         	movff	stop@mL+1,fsr2h
  2555  0015BA  50DF               	movf	indf2,w,c
  2556  0015BC  0FFB               	addlw	251
  2557  0015BE  C020  FFD9         	movff	stop@mL,fsr2l
  2558  0015C2  C021  FFDA         	movff	stop@mL+1,fsr2h
  2559  0015C6  6EDF               	movwf	indf2,c
  2560                           
  2561                           ;dc_motor.c: 179:         mR->power = mR->power - 5;
  2562  0015C8  C022  FFD9         	movff	stop@mR,fsr2l
  2563  0015CC  C023  FFDA         	movff	stop@mR+1,fsr2h
  2564  0015D0  50DF               	movf	indf2,w,c
  2565  0015D2  0FFB               	addlw	251
  2566  0015D4  C022  FFD9         	movff	stop@mR,fsr2l
  2567  0015D8  C023  FFDA         	movff	stop@mR+1,fsr2h
  2568  0015DC  6EDF               	movwf	indf2,c
  2569  0015DE                     
  2570                           ;dc_motor.c: 182:         setMotorPWM(mL);
  2571  0015DE  C020  F015         	movff	stop@mL,setMotorPWM@m
  2572  0015E2  C021  F016         	movff	stop@mL+1,setMotorPWM@m+1
  2573  0015E6  EC92  F007         	call	_setMotorPWM	;wreg free
  2574  0015EA                     
  2575                           ;dc_motor.c: 183:         setMotorPWM(mR);
  2576  0015EA  C022  F015         	movff	stop@mR,setMotorPWM@m
  2577  0015EE  C023  F016         	movff	stop@mR+1,setMotorPWM@m+1
  2578  0015F2  EC92  F007         	call	_setMotorPWM	;wreg free
  2579  0015F6                     
  2580                           ;dc_motor.c: 184:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2581  0015F6  0E09               	movlw	9
  2582  0015F8  6E25               	movwf	(??_stop+1)^0,c
  2583  0015FA  0E1E               	movlw	30
  2584  0015FC  6E24               	movwf	??_stop^0,c
  2585  0015FE  0EE4               	movlw	228
  2586  001600                     u2517:
  2587  001600  2EE8               	decfsz	wreg,f,c
  2588  001602  D7FE               	bra	u2517
  2589  001604  2E24               	decfsz	??_stop^0,f,c
  2590  001606  D7FC               	bra	u2517
  2591  001608  2E25               	decfsz	(??_stop+1)^0,f,c
  2592  00160A  D7FA               	bra	u2517
  2593  00160C  D000               	nop2	
  2594  00160E                     l2149:
  2595                           
  2596                           ;dc_motor.c: 177:     while(((mL->power)>0) && ((mR->power)>0)){
  2597  00160E  C020  FFD9         	movff	stop@mL,fsr2l
  2598  001612  C021  FFDA         	movff	stop@mL+1,fsr2h
  2599  001616  50DF               	movf	indf2,w,c
  2600  001618  B4D8               	btfsc	status,2,c
  2601  00161A  EF11  F00B         	goto	u1431
  2602  00161E  EF13  F00B         	goto	u1430
  2603  001622                     u1431:
  2604  001622  EF1F  F00B         	goto	l226
  2605  001626                     u1430:
  2606  001626  C022  FFD9         	movff	stop@mR,fsr2l
  2607  00162A  C023  FFDA         	movff	stop@mR+1,fsr2h
  2608  00162E  50DF               	movf	indf2,w,c
  2609  001630  A4D8               	btfss	status,2,c
  2610  001632  EF1D  F00B         	goto	u1441
  2611  001636  EF1F  F00B         	goto	u1440
  2612  00163A                     u1441:
  2613  00163A  EFD9  F00A         	goto	l2141
  2614  00163E                     u1440:
  2615  00163E                     l226:
  2616                           
  2617                           ;dc_motor.c: 187:     LATDbits.LATD4 = 0;
  2618  00163E  987C               	bcf	124,4,c	;volatile
  2619  001640  0012               	return		;funcret
  2620  001642                     __end_of_stop:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _reverse *****************
  2624 ;; Defined at:
  2625 ;;		line 151 in file "dc_motor.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  mL              2   31[COMRAM] PTR struct .
  2628 ;;		 -> main@motorL(9), 
  2629 ;;  mR              2   33[COMRAM] PTR struct .
  2630 ;;		 -> main@motorR(9), 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2645 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2646 ;;Total ram usage:        6 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 9
  2649 ;; This function calls:
  2650 ;;		_setMotorPWM
  2651 ;; This function is called by:
  2652 ;;		_read_card
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text5
  2657  001512                     __ptext5:
  2658                           	callstack 0
  2659  001512                     _reverse:
  2660                           	callstack 20
  2661  001512                     
  2662                           ;dc_motor.c: 151: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_motor.c
      +                          : 154:     mL->direction = 0;
  2663  001512  EE20 F001          	lfsr	2,1
  2664  001516  5020               	movf	reverse@mL^0,w,c
  2665  001518  26D9               	addwf	fsr2l,f,c
  2666  00151A  5021               	movf	(reverse@mL+1)^0,w,c
  2667  00151C  22DA               	addwfc	fsr2h,f,c
  2668  00151E  0E00               	movlw	0
  2669  001520  6EDF               	movwf	indf2,c
  2670                           
  2671                           ;dc_motor.c: 155:     mR->direction = 0;
  2672  001522  EE20 F001          	lfsr	2,1
  2673  001526  5022               	movf	reverse@mR^0,w,c
  2674  001528  26D9               	addwf	fsr2l,f,c
  2675  00152A  5023               	movf	(reverse@mR+1)^0,w,c
  2676  00152C  22DA               	addwfc	fsr2h,f,c
  2677  00152E  0E00               	movlw	0
  2678  001530  6EDF               	movwf	indf2,c
  2679                           
  2680                           ;dc_motor.c: 158:     while(((mL->power)<100) && ((mR->power)<100)){
  2681  001532  EFBD  F00A         	goto	l214
  2682  001536                     l2161:
  2683                           
  2684                           ;dc_motor.c: 159:         mL->power+=1;
  2685  001536  C020  FFD9         	movff	reverse@mL,fsr2l
  2686  00153A  C021  FFDA         	movff	reverse@mL+1,fsr2h
  2687  00153E  2ADF               	incf	indf2,f,c
  2688                           
  2689                           ;dc_motor.c: 160:         mR->power+=1;
  2690  001540  C022  FFD9         	movff	reverse@mR,fsr2l
  2691  001544  C023  FFDA         	movff	reverse@mR+1,fsr2h
  2692  001548  2ADF               	incf	indf2,f,c
  2693  00154A                     
  2694                           ;dc_motor.c: 162:         setMotorPWM(mL);
  2695  00154A  C020  F015         	movff	reverse@mL,setMotorPWM@m
  2696  00154E  C021  F016         	movff	reverse@mL+1,setMotorPWM@m+1
  2697  001552  EC92  F007         	call	_setMotorPWM	;wreg free
  2698  001556                     
  2699                           ;dc_motor.c: 163:         setMotorPWM(mR);
  2700  001556  C022  F015         	movff	reverse@mR,setMotorPWM@m
  2701  00155A  C023  F016         	movff	reverse@mR+1,setMotorPWM@m+1
  2702  00155E  EC92  F007         	call	_setMotorPWM	;wreg free
  2703  001562                     
  2704                           ;dc_motor.c: 164:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2705  001562  0E09               	movlw	9
  2706  001564  6E25               	movwf	(??_reverse+1)^0,c
  2707  001566  0E1E               	movlw	30
  2708  001568  6E24               	movwf	??_reverse^0,c
  2709  00156A  0EE4               	movlw	228
  2710  00156C                     u2527:
  2711  00156C  2EE8               	decfsz	wreg,f,c
  2712  00156E  D7FE               	bra	u2527
  2713  001570  2E24               	decfsz	??_reverse^0,f,c
  2714  001572  D7FC               	bra	u2527
  2715  001574  2E25               	decfsz	(??_reverse+1)^0,f,c
  2716  001576  D7FA               	bra	u2527
  2717  001578  D000               	nop2	
  2718  00157A                     l214:
  2719                           
  2720                           ;dc_motor.c: 158:     while(((mL->power)<100) && ((mR->power)<100)){
  2721  00157A  C020  FFD9         	movff	reverse@mL,fsr2l
  2722  00157E  C021  FFDA         	movff	reverse@mL+1,fsr2h
  2723  001582  0E64               	movlw	100
  2724  001584  60DF               	cpfslt	indf2,c
  2725  001586  EFC7  F00A         	goto	u1451
  2726  00158A  EFC9  F00A         	goto	u1450
  2727  00158E                     u1451:
  2728  00158E  EFD5  F00A         	goto	l219
  2729  001592                     u1450:
  2730  001592  C022  FFD9         	movff	reverse@mR,fsr2l
  2731  001596  C023  FFDA         	movff	reverse@mR+1,fsr2h
  2732  00159A  0E63               	movlw	99
  2733  00159C  64DF               	cpfsgt	indf2,c
  2734  00159E  EFD3  F00A         	goto	u1461
  2735  0015A2  EFD5  F00A         	goto	u1460
  2736  0015A6                     u1461:
  2737  0015A6  EF9B  F00A         	goto	l2161
  2738  0015AA                     u1460:
  2739  0015AA                     l219:
  2740  0015AA  0012               	return		;funcret
  2741  0015AC                     __end_of_reverse:
  2742                           	callstack 0
  2743                           
  2744 ;; *************** function ___xxtofl *****************
  2745 ;; Defined at:
  2746 ;;		line 10 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  sign            1    wreg     unsigned char 
  2749 ;;  val             4    6[COMRAM] long 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  sign            1   14[COMRAM] unsigned char 
  2752 ;;  arg             4   16[COMRAM] unsigned long 
  2753 ;;  exp             1   15[COMRAM] unsigned char 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  4    6[COMRAM] unsigned char 
  2756 ;; Registers used:
  2757 ;;		wreg, status,2, status,0
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2767 ;;Total ram usage:       14 bytes
  2768 ;; Hardware stack levels used: 1
  2769 ;; Hardware stack levels required when called: 7
  2770 ;; This function calls:
  2771 ;;		Nothing
  2772 ;; This function is called by:
  2773 ;;		_read_card
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text6
  2778  0010F8                     __ptext6:
  2779                           	callstack 0
  2780  0010F8                     ___xxtofl:
  2781                           	callstack 22
  2782                           
  2783                           ;incstack = 0
  2784                           ;___xxtofl@sign stored from wreg
  2785  0010F8  6E0F               	movwf	___xxtofl@sign^0,c
  2786  0010FA  500F               	movf	___xxtofl@sign^0,w,c
  2787  0010FC  B4D8               	btfsc	status,2,c
  2788  0010FE  EF83  F008         	goto	u1811
  2789  001102  EF85  F008         	goto	u1810
  2790  001106                     u1811:
  2791  001106  EFA7  F008         	goto	l1167
  2792  00110A                     u1810:
  2793  00110A  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  2794  00110C  EF8C  F008         	goto	u1820
  2795  001110  EF8A  F008         	goto	u1821
  2796  001114                     u1821:
  2797  001114  EFA7  F008         	goto	l1167
  2798  001118                     u1820:
  2799  001118  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  2800  00111C  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  2801  001120  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  2802  001124  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  2803  001128  1E0B               	comf	??___xxtofl^0,f,c
  2804  00112A  1E0C               	comf	(??___xxtofl+1)^0,f,c
  2805  00112C  1E0D               	comf	(??___xxtofl+2)^0,f,c
  2806  00112E  1E0E               	comf	(??___xxtofl+3)^0,f,c
  2807  001130  2A0B               	incf	??___xxtofl^0,f,c
  2808  001132  0E00               	movlw	0
  2809  001134  220C               	addwfc	(??___xxtofl+1)^0,f,c
  2810  001136  220D               	addwfc	(??___xxtofl+2)^0,f,c
  2811  001138  220E               	addwfc	(??___xxtofl+3)^0,f,c
  2812  00113A  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  2813  00113E  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  2814  001142  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  2815  001146  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  2816  00114A  EFAF  F008         	goto	l2331
  2817  00114E                     l1167:
  2818  00114E  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  2819  001152  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2820  001156  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2821  00115A  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2822  00115E                     l2331:
  2823  00115E  5007               	movf	___xxtofl@val^0,w,c
  2824  001160  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  2825  001162  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  2826  001164  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  2827  001166  A4D8               	btfss	status,2,c
  2828  001168  EFB8  F008         	goto	u1831
  2829  00116C  EFBA  F008         	goto	u1830
  2830  001170                     u1831:
  2831  001170  EFC4  F008         	goto	l2337
  2832  001174                     u1830:
  2833  001174  0E00               	movlw	0
  2834  001176  6E07               	movwf	?___xxtofl^0,c
  2835  001178  0E00               	movlw	0
  2836  00117A  6E08               	movwf	(?___xxtofl+1)^0,c
  2837  00117C  0E00               	movlw	0
  2838  00117E  6E09               	movwf	(?___xxtofl+2)^0,c
  2839  001180  0E00               	movlw	0
  2840  001182  6E0A               	movwf	(?___xxtofl+3)^0,c
  2841  001184  EF55  F009         	goto	l1170
  2842  001188                     l2337:
  2843  001188  0E96               	movlw	150
  2844  00118A  6E10               	movwf	___xxtofl@exp^0,c
  2845  00118C  EFCE  F008         	goto	l2341
  2846  001190                     l2339:
  2847  001190  2A10               	incf	___xxtofl@exp^0,f,c
  2848  001192  90D8               	bcf	status,0,c
  2849  001194  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  2850  001196  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  2851  001198  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  2852  00119A  3211               	rrcf	___xxtofl@arg^0,f,c
  2853  00119C                     l2341:
  2854  00119C  0E00               	movlw	0
  2855  00119E  1411               	andwf	___xxtofl@arg^0,w,c
  2856  0011A0  6E0B               	movwf	??___xxtofl^0,c
  2857  0011A2  0E00               	movlw	0
  2858  0011A4  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  2859  0011A6  6E0C               	movwf	(??___xxtofl+1)^0,c
  2860  0011A8  0E00               	movlw	0
  2861  0011AA  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  2862  0011AC  6E0D               	movwf	(??___xxtofl+2)^0,c
  2863  0011AE  0EFE               	movlw	254
  2864  0011B0  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  2865  0011B2  6E0E               	movwf	(??___xxtofl+3)^0,c
  2866  0011B4  500B               	movf	??___xxtofl^0,w,c
  2867  0011B6  100C               	iorwf	(??___xxtofl+1)^0,w,c
  2868  0011B8  100D               	iorwf	(??___xxtofl+2)^0,w,c
  2869  0011BA  100E               	iorwf	(??___xxtofl+3)^0,w,c
  2870  0011BC  A4D8               	btfss	status,2,c
  2871  0011BE  EFE3  F008         	goto	u1841
  2872  0011C2  EFE5  F008         	goto	u1840
  2873  0011C6                     u1841:
  2874  0011C6  EFC8  F008         	goto	l2339
  2875  0011CA                     u1840:
  2876  0011CA  EFF3  F008         	goto	l1174
  2877  0011CE                     l2343:
  2878  0011CE  2A10               	incf	___xxtofl@exp^0,f,c
  2879  0011D0  0E01               	movlw	1
  2880  0011D2  2611               	addwf	___xxtofl@arg^0,f,c
  2881  0011D4  0E00               	movlw	0
  2882  0011D6  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  2883  0011D8  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  2884  0011DA  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  2885  0011DC  90D8               	bcf	status,0,c
  2886  0011DE  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  2887  0011E0  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  2888  0011E2  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  2889  0011E4  3211               	rrcf	___xxtofl@arg^0,f,c
  2890  0011E6                     l1174:
  2891  0011E6  0E00               	movlw	0
  2892  0011E8  1411               	andwf	___xxtofl@arg^0,w,c
  2893  0011EA  6E0B               	movwf	??___xxtofl^0,c
  2894  0011EC  0E00               	movlw	0
  2895  0011EE  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  2896  0011F0  6E0C               	movwf	(??___xxtofl+1)^0,c
  2897  0011F2  0E00               	movlw	0
  2898  0011F4  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  2899  0011F6  6E0D               	movwf	(??___xxtofl+2)^0,c
  2900  0011F8  0EFF               	movlw	255
  2901  0011FA  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  2902  0011FC  6E0E               	movwf	(??___xxtofl+3)^0,c
  2903  0011FE  500B               	movf	??___xxtofl^0,w,c
  2904  001200  100C               	iorwf	(??___xxtofl+1)^0,w,c
  2905  001202  100D               	iorwf	(??___xxtofl+2)^0,w,c
  2906  001204  100E               	iorwf	(??___xxtofl+3)^0,w,c
  2907  001206  A4D8               	btfss	status,2,c
  2908  001208  EF08  F009         	goto	u1851
  2909  00120C  EF0A  F009         	goto	u1850
  2910  001210                     u1851:
  2911  001210  EFE7  F008         	goto	l2343
  2912  001214                     u1850:
  2913  001214  EF12  F009         	goto	l2351
  2914  001218                     l2349:
  2915  001218  0610               	decf	___xxtofl@exp^0,f,c
  2916  00121A  90D8               	bcf	status,0,c
  2917  00121C  3611               	rlcf	___xxtofl@arg^0,f,c
  2918  00121E  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  2919  001220  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  2920  001222  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  2921  001224                     l2351:
  2922  001224  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  2923  001226  EF17  F009         	goto	u1861
  2924  00122A  EF19  F009         	goto	u1860
  2925  00122E                     u1861:
  2926  00122E  EF21  F009         	goto	l1181
  2927  001232                     u1860:
  2928  001232  0E02               	movlw	2
  2929  001234  6010               	cpfslt	___xxtofl@exp^0,c
  2930  001236  EF1F  F009         	goto	u1871
  2931  00123A  EF21  F009         	goto	u1870
  2932  00123E                     u1871:
  2933  00123E  EF0C  F009         	goto	l2349
  2934  001242                     u1870:
  2935  001242                     l1181:
  2936  001242  B010               	btfsc	___xxtofl@exp^0,0,c
  2937  001244  EF26  F009         	goto	u1881
  2938  001248  EF28  F009         	goto	u1880
  2939  00124C                     u1881:
  2940  00124C  EF29  F009         	goto	l2357
  2941  001250                     u1880:
  2942  001250  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  2943  001252                     l2357:
  2944  001252  90D8               	bcf	status,0,c
  2945  001254  3210               	rrcf	___xxtofl@exp^0,f,c
  2946  001256  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  2947  00125A  6A0C               	clrf	(??___xxtofl+1)^0,c
  2948  00125C  6A0D               	clrf	(??___xxtofl+2)^0,c
  2949  00125E  6A0E               	clrf	(??___xxtofl+3)^0,c
  2950  001260  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  2951  001264  6A0D               	clrf	(??___xxtofl+2)^0,c
  2952  001266  6A0C               	clrf	(??___xxtofl+1)^0,c
  2953  001268  6A0B               	clrf	??___xxtofl^0,c
  2954  00126A  500B               	movf	??___xxtofl^0,w,c
  2955  00126C  1211               	iorwf	___xxtofl@arg^0,f,c
  2956  00126E  500C               	movf	(??___xxtofl+1)^0,w,c
  2957  001270  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  2958  001272  500D               	movf	(??___xxtofl+2)^0,w,c
  2959  001274  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  2960  001276  500E               	movf	(??___xxtofl+3)^0,w,c
  2961  001278  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  2962  00127A  500F               	movf	___xxtofl@sign^0,w,c
  2963  00127C  B4D8               	btfsc	status,2,c
  2964  00127E  EF43  F009         	goto	u1891
  2965  001282  EF45  F009         	goto	u1890
  2966  001286                     u1891:
  2967  001286  EF4D  F009         	goto	l2367
  2968  00128A                     u1890:
  2969  00128A  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  2970  00128C  EF4C  F009         	goto	u1900
  2971  001290  EF4A  F009         	goto	u1901
  2972  001294                     u1901:
  2973  001294  EF4D  F009         	goto	l2367
  2974  001298                     u1900:
  2975  001298  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  2976  00129A                     l2367:
  2977  00129A  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  2978  00129E  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  2979  0012A2  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  2980  0012A6  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  2981  0012AA                     l1170:
  2982  0012AA  0012               	return		;funcret
  2983  0012AC                     __end_of___xxtofl:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function ___lwdiv *****************
  2987 ;; Defined at:
  2988 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  dividend        2    6[COMRAM] unsigned int 
  2991 ;;  divisor         2    8[COMRAM] unsigned int 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  quotient        2   10[COMRAM] unsigned int 
  2994 ;;  counter         1   12[COMRAM] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2    6[COMRAM] unsigned int 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3005 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3007 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3008 ;;Total ram usage:        7 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 7
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_read_card
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text7
  3019  001642                     __ptext7:
  3020                           	callstack 0
  3021  001642                     ___lwdiv:
  3022                           	callstack 22
  3023  001642  0E00               	movlw	0
  3024  001644  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  3025  001646  0E00               	movlw	0
  3026  001648  6E0B               	movwf	___lwdiv@quotient^0,c
  3027  00164A  5009               	movf	___lwdiv@divisor^0,w,c
  3028  00164C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3029  00164E  B4D8               	btfsc	status,2,c
  3030  001650  EF2C  F00B         	goto	u1781
  3031  001654  EF2E  F00B         	goto	u1780
  3032  001658                     u1781:
  3033  001658  EF56  F00B         	goto	l1003
  3034  00165C                     u1780:
  3035  00165C  0E01               	movlw	1
  3036  00165E  6E0D               	movwf	___lwdiv@counter^0,c
  3037  001660  EF36  F00B         	goto	l2311
  3038  001664                     l2309:
  3039  001664  90D8               	bcf	status,0,c
  3040  001666  3609               	rlcf	___lwdiv@divisor^0,f,c
  3041  001668  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3042  00166A  2A0D               	incf	___lwdiv@counter^0,f,c
  3043  00166C                     l2311:
  3044  00166C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3045  00166E  EF3B  F00B         	goto	u1791
  3046  001672  EF3D  F00B         	goto	u1790
  3047  001676                     u1791:
  3048  001676  EF32  F00B         	goto	l2309
  3049  00167A                     u1790:
  3050  00167A                     l2313:
  3051  00167A  90D8               	bcf	status,0,c
  3052  00167C  360B               	rlcf	___lwdiv@quotient^0,f,c
  3053  00167E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3054  001680  5009               	movf	___lwdiv@divisor^0,w,c
  3055  001682  5C07               	subwf	___lwdiv@dividend^0,w,c
  3056  001684  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3057  001686  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3058  001688  A0D8               	btfss	status,0,c
  3059  00168A  EF49  F00B         	goto	u1801
  3060  00168E  EF4B  F00B         	goto	u1800
  3061  001692                     u1801:
  3062  001692  EF50  F00B         	goto	l2321
  3063  001696                     u1800:
  3064  001696  5009               	movf	___lwdiv@divisor^0,w,c
  3065  001698  5E07               	subwf	___lwdiv@dividend^0,f,c
  3066  00169A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3067  00169C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3068  00169E  800B               	bsf	___lwdiv@quotient^0,0,c
  3069  0016A0                     l2321:
  3070  0016A0  90D8               	bcf	status,0,c
  3071  0016A2  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3072  0016A4  3209               	rrcf	___lwdiv@divisor^0,f,c
  3073  0016A6  2E0D               	decfsz	___lwdiv@counter^0,f,c
  3074  0016A8  EF3D  F00B         	goto	l2313
  3075  0016AC                     l1003:
  3076  0016AC  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  3077  0016B0  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3078  0016B4  0012               	return		;funcret
  3079  0016B6                     __end_of___lwdiv:
  3080                           	callstack 0
  3081                           
  3082 ;; *************** function ___flge *****************
  3083 ;; Defined at:
  3084 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  ff1             4   20[COMRAM] unsigned int 
  3087 ;;  ff2             4   24[COMRAM] unsigned int 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;		None               void
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3099 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3101 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;Total ram usage:       12 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 7
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_read_card
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text8
  3114  0012AC                     __ptext8:
  3115                           	callstack 0
  3116  0012AC                     ___flge:
  3117                           	callstack 22
  3118  0012AC  0E00               	movlw	0
  3119  0012AE  1415               	andwf	___flge@ff1^0,w,c
  3120  0012B0  6E1D               	movwf	??___flge^0,c
  3121  0012B2  0E00               	movlw	0
  3122  0012B4  1416               	andwf	(___flge@ff1+1)^0,w,c
  3123  0012B6  6E1E               	movwf	(??___flge+1)^0,c
  3124  0012B8  0E80               	movlw	128
  3125  0012BA  1417               	andwf	(___flge@ff1+2)^0,w,c
  3126  0012BC  6E1F               	movwf	(??___flge+2)^0,c
  3127  0012BE  0E7F               	movlw	127
  3128  0012C0  1418               	andwf	(___flge@ff1+3)^0,w,c
  3129  0012C2  6E20               	movwf	(??___flge+3)^0,c
  3130  0012C4  501D               	movf	??___flge^0,w,c
  3131  0012C6  101E               	iorwf	(??___flge+1)^0,w,c
  3132  0012C8  101F               	iorwf	(??___flge+2)^0,w,c
  3133  0012CA  1020               	iorwf	(??___flge+3)^0,w,c
  3134  0012CC  A4D8               	btfss	status,2,c
  3135  0012CE  EF6B  F009         	goto	u1731
  3136  0012D2  EF6D  F009         	goto	u1730
  3137  0012D6                     u1731:
  3138  0012D6  EF75  F009         	goto	l2285
  3139  0012DA                     u1730:
  3140  0012DA  0E00               	movlw	0
  3141  0012DC  6E15               	movwf	___flge@ff1^0,c
  3142  0012DE  0E00               	movlw	0
  3143  0012E0  6E16               	movwf	(___flge@ff1+1)^0,c
  3144  0012E2  0E00               	movlw	0
  3145  0012E4  6E17               	movwf	(___flge@ff1+2)^0,c
  3146  0012E6  0E00               	movlw	0
  3147  0012E8  6E18               	movwf	(___flge@ff1+3)^0,c
  3148  0012EA                     l2285:
  3149  0012EA  0E00               	movlw	0
  3150  0012EC  1419               	andwf	___flge@ff2^0,w,c
  3151  0012EE  6E1D               	movwf	??___flge^0,c
  3152  0012F0  0E00               	movlw	0
  3153  0012F2  141A               	andwf	(___flge@ff2+1)^0,w,c
  3154  0012F4  6E1E               	movwf	(??___flge+1)^0,c
  3155  0012F6  0E80               	movlw	128
  3156  0012F8  141B               	andwf	(___flge@ff2+2)^0,w,c
  3157  0012FA  6E1F               	movwf	(??___flge+2)^0,c
  3158  0012FC  0E7F               	movlw	127
  3159  0012FE  141C               	andwf	(___flge@ff2+3)^0,w,c
  3160  001300  6E20               	movwf	(??___flge+3)^0,c
  3161  001302  501D               	movf	??___flge^0,w,c
  3162  001304  101E               	iorwf	(??___flge+1)^0,w,c
  3163  001306  101F               	iorwf	(??___flge+2)^0,w,c
  3164  001308  1020               	iorwf	(??___flge+3)^0,w,c
  3165  00130A  A4D8               	btfss	status,2,c
  3166  00130C  EF8A  F009         	goto	u1741
  3167  001310  EF8C  F009         	goto	u1740
  3168  001314                     u1741:
  3169  001314  EF94  F009         	goto	l2289
  3170  001318                     u1740:
  3171  001318  0E00               	movlw	0
  3172  00131A  6E19               	movwf	___flge@ff2^0,c
  3173  00131C  0E00               	movlw	0
  3174  00131E  6E1A               	movwf	(___flge@ff2+1)^0,c
  3175  001320  0E00               	movlw	0
  3176  001322  6E1B               	movwf	(___flge@ff2+2)^0,c
  3177  001324  0E00               	movlw	0
  3178  001326  6E1C               	movwf	(___flge@ff2+3)^0,c
  3179  001328                     l2289:
  3180  001328  AE18               	btfss	(___flge@ff1+3)^0,7,c
  3181  00132A  EF99  F009         	goto	u1751
  3182  00132E  EF9B  F009         	goto	u1750
  3183  001332                     u1751:
  3184  001332  EFA4  F009         	goto	l2293
  3185  001336                     u1750:
  3186  001336  6C15               	negf	___flge@ff1^0,c
  3187  001338  1E16               	comf	(___flge@ff1+1)^0,f,c
  3188  00133A  B0D8               	btfsc	status,0,c
  3189  00133C  2A16               	incf	(___flge@ff1+1)^0,f,c
  3190  00133E  1E17               	comf	(___flge@ff1+2)^0,f,c
  3191  001340  B0D8               	btfsc	status,0,c
  3192  001342  2A17               	incf	(___flge@ff1+2)^0,f,c
  3193  001344  0E80               	movlw	128
  3194  001346  5618               	subfwb	(___flge@ff1+3)^0,f,c
  3195  001348                     l2293:
  3196  001348  AE1C               	btfss	(___flge@ff2+3)^0,7,c
  3197  00134A  EFA9  F009         	goto	u1761
  3198  00134E  EFAB  F009         	goto	u1760
  3199  001352                     u1761:
  3200  001352  EFB4  F009         	goto	l777
  3201  001356                     u1760:
  3202  001356  6C19               	negf	___flge@ff2^0,c
  3203  001358  1E1A               	comf	(___flge@ff2+1)^0,f,c
  3204  00135A  B0D8               	btfsc	status,0,c
  3205  00135C  2A1A               	incf	(___flge@ff2+1)^0,f,c
  3206  00135E  1E1B               	comf	(___flge@ff2+2)^0,f,c
  3207  001360  B0D8               	btfsc	status,0,c
  3208  001362  2A1B               	incf	(___flge@ff2+2)^0,f,c
  3209  001364  0E80               	movlw	128
  3210  001366  561C               	subfwb	(___flge@ff2+3)^0,f,c
  3211  001368                     l777:
  3212  001368  0E00               	movlw	0
  3213  00136A  1A15               	xorwf	___flge@ff1^0,f,c
  3214  00136C  0E00               	movlw	0
  3215  00136E  1A16               	xorwf	(___flge@ff1+1)^0,f,c
  3216  001370  0E00               	movlw	0
  3217  001372  1A17               	xorwf	(___flge@ff1+2)^0,f,c
  3218  001374  0E80               	movlw	128
  3219  001376  1A18               	xorwf	(___flge@ff1+3)^0,f,c
  3220  001378  0E00               	movlw	0
  3221  00137A  1A19               	xorwf	___flge@ff2^0,f,c
  3222  00137C  0E00               	movlw	0
  3223  00137E  1A1A               	xorwf	(___flge@ff2+1)^0,f,c
  3224  001380  0E00               	movlw	0
  3225  001382  1A1B               	xorwf	(___flge@ff2+2)^0,f,c
  3226  001384  0E80               	movlw	128
  3227  001386  1A1C               	xorwf	(___flge@ff2+3)^0,f,c
  3228  001388  5019               	movf	___flge@ff2^0,w,c
  3229  00138A  5C15               	subwf	___flge@ff1^0,w,c
  3230  00138C  501A               	movf	(___flge@ff2+1)^0,w,c
  3231  00138E  5816               	subwfb	(___flge@ff1+1)^0,w,c
  3232  001390  501B               	movf	(___flge@ff2+2)^0,w,c
  3233  001392  5817               	subwfb	(___flge@ff1+2)^0,w,c
  3234  001394  501C               	movf	(___flge@ff2+3)^0,w,c
  3235  001396  5818               	subwfb	(___flge@ff1+3)^0,w,c
  3236  001398  B0D8               	btfsc	status,0,c
  3237  00139A  EFD1  F009         	goto	u1771
  3238  00139E  EFD3  F009         	goto	u1770
  3239  0013A2                     u1771:
  3240  0013A2  EFD6  F009         	goto	l2299
  3241  0013A6                     u1770:
  3242  0013A6  90D8               	bcf	status,0,c
  3243  0013A8  EFD7  F009         	goto	l782
  3244  0013AC                     l2299:
  3245  0013AC  80D8               	bsf	status,0,c
  3246  0013AE                     l782:
  3247  0013AE  0012               	return		;funcret
  3248  0013B0                     __end_of___flge:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _interrupts_init *****************
  3252 ;; Defined at:
  3253 ;;		line 21 in file "interrupts.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;Total ram usage:        0 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 12
  3274 ;; This function calls:
  3275 ;;		_interrupts_clear
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text9
  3282  001AAE                     __ptext9:
  3283                           	callstack 0
  3284  001AAE                     _interrupts_init:
  3285                           	callstack 18
  3286  001AAE                     
  3287                           ;interrupts.c: 22:     TRISBbits.TRISB1 = 1;
  3288  001AAE  8282               	bsf	130,1,c	;volatile
  3289                           
  3290                           ;interrupts.c: 23:     ANSELBbits.ANSELB1 = 0;
  3291  001AB0  010E               	movlb	14	; () banked
  3292  001AB2  939A               	bcf	154,1,b	;volatile
  3293  001AB4                     
  3294                           ; BSR set to: 14
  3295                           ;interrupts.c: 24:     INT1PPS=0x09;
  3296  001AB4  0E09               	movlw	9
  3297  001AB6  010D               	movlb	13	; () banked
  3298  001AB8  6FF1               	movwf	241,b	;volatile
  3299  001ABA                     
  3300                           ; BSR set to: 13
  3301                           ;interrupts.c: 26:     PIE0bits.INT1IE = 1;
  3302  001ABA  010E               	movlb	14	; () banked
  3303  001ABC  8329               	bsf	41,1,b	;volatile
  3304  001ABE                     
  3305                           ; BSR set to: 14
  3306                           ;interrupts.c: 29:     IPR0bits.INT1IP = 1;
  3307  001ABE  831F               	bsf	31,1,b	;volatile
  3308  001AC0                     
  3309                           ; BSR set to: 14
  3310                           ;interrupts.c: 32:     interrupts_clear();
  3311  001AC0  EC97  F00D         	call	_interrupts_clear	;wreg free
  3312  001AC4                     
  3313                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  3314  001AC4  8AF2               	bsf	242,5,c	;volatile
  3315  001AC6                     
  3316                           ;interrupts.c: 35:     INTCONbits.INT1EDG = 0;
  3317  001AC6  92F2               	bcf	242,1,c	;volatile
  3318  001AC8                     
  3319                           ;interrupts.c: 36:     INTCONbits.PEIE = 1;
  3320  001AC8  8CF2               	bsf	242,6,c	;volatile
  3321  001ACA                     
  3322                           ;interrupts.c: 37:     INTCONbits.GIE = 1;
  3323  001ACA  8EF2               	bsf	242,7,c	;volatile
  3324  001ACC  0012               	return		;funcret
  3325  001ACE                     __end_of_interrupts_init:
  3326                           	callstack 0
  3327                           
  3328 ;; *************** function _interrupts_clear *****************
  3329 ;; Defined at:
  3330 ;;		line 43 in file "interrupts.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 11
  3351 ;; This function calls:
  3352 ;;		_I2C_2_Master_Start
  3353 ;;		_I2C_2_Master_Stop
  3354 ;;		_I2C_2_Master_Write
  3355 ;;		_colour_int_init
  3356 ;; This function is called by:
  3357 ;;		_interrupts_init
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text10
  3362  001B2E                     __ptext10:
  3363                           	callstack 0
  3364  001B2E                     _interrupts_clear:
  3365                           	callstack 18
  3366  001B2E                     
  3367                           ;interrupts.c: 44:     I2C_2_Master_Start();
  3368  001B2E  ECE5  F00D         	call	_I2C_2_Master_Start	;wreg free
  3369                           
  3370                           ;interrupts.c: 45:     I2C_2_Master_Write(0x52 | 0x00);
  3371  001B32  0E52               	movlw	82
  3372  001B34  ECC9  F00D         	call	_I2C_2_Master_Write
  3373                           
  3374                           ;interrupts.c: 46:     I2C_2_Master_Write(0b11100110);
  3375  001B38  0EE6               	movlw	230
  3376  001B3A  ECC9  F00D         	call	_I2C_2_Master_Write
  3377                           
  3378                           ;interrupts.c: 47:     I2C_2_Master_Stop();
  3379  001B3E  ECE0  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3380                           
  3381                           ;interrupts.c: 48:     colour_int_init();
  3382  001B42  EC23  F00C         	call	_colour_int_init	;wreg free
  3383  001B46  0012               	return		;funcret
  3384  001B48                     __end_of_interrupts_clear:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function _colour_int_init *****************
  3388 ;; Defined at:
  3389 ;;		line 51 in file "interrupts.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3407 ;;Total ram usage:        1 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 10
  3410 ;; This function calls:
  3411 ;;		_colorclick_writetoaddr
  3412 ;; This function is called by:
  3413 ;;		_interrupts_clear
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text11
  3418  001846                     __ptext11:
  3419                           	callstack 0
  3420  001846                     _colour_int_init:
  3421                           	callstack 18
  3422  001846                     
  3423                           ;interrupts.c: 52:     colorclick_writetoaddr(0x00, 0b10011);
  3424  001846  0E13               	movlw	19
  3425  001848  6E09               	movwf	colorclick_writetoaddr@value^0,c
  3426  00184A  0E00               	movlw	0
  3427  00184C  EC67  F00D         	call	_colorclick_writetoaddr
  3428  001850                     
  3429                           ;interrupts.c: 53:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3430  001850  0E3F               	movlw	63
  3431  001852  6E0B               	movwf	??_colour_int_init^0,c
  3432  001854  0E55               	movlw	85
  3433  001856                     u2537:
  3434  001856  2EE8               	decfsz	wreg,f,c
  3435  001858  D7FE               	bra	u2537
  3436  00185A  2E0B               	decfsz	??_colour_int_init^0,f,c
  3437  00185C  D7FC               	bra	u2537
  3438  00185E  F000               	nop	
  3439  001860                     
  3440                           ;interrupts.c: 54:     colorclick_writetoaddr(0x0C, 0b0100);
  3441  001860  0E04               	movlw	4
  3442  001862  6E09               	movwf	colorclick_writetoaddr@value^0,c
  3443  001864  0E0C               	movlw	12
  3444  001866  EC67  F00D         	call	_colorclick_writetoaddr
  3445  00186A                     
  3446                           ;interrupts.c: 55:     colorclick_writetoaddr(0x04, (clear_lower&0b11111111));
  3447  00186A  C045  F009         	movff	_clear_lower,colorclick_writetoaddr@value	;volatile
  3448  00186E  0E04               	movlw	4
  3449  001870  EC67  F00D         	call	_colorclick_writetoaddr
  3450  001874                     
  3451                           ;interrupts.c: 56:     colorclick_writetoaddr(0x05, (clear_lower>>8));
  3452  001874  5046               	movf	(_clear_lower+1)^0,w,c	;volatile
  3453  001876  6E09               	movwf	colorclick_writetoaddr@value^0,c
  3454  001878  0E05               	movlw	5
  3455  00187A  EC67  F00D         	call	_colorclick_writetoaddr
  3456  00187E                     
  3457                           ;interrupts.c: 57:     colorclick_writetoaddr(0x06, (clear_upper&0b11111111));
  3458  00187E  C043  F009         	movff	_clear_upper,colorclick_writetoaddr@value	;volatile
  3459  001882  0E06               	movlw	6
  3460  001884  EC67  F00D         	call	_colorclick_writetoaddr
  3461  001888                     
  3462                           ;interrupts.c: 58:     colorclick_writetoaddr(0x07, (clear_upper>>8));
  3463  001888  5044               	movf	(_clear_upper+1)^0,w,c	;volatile
  3464  00188A  6E09               	movwf	colorclick_writetoaddr@value^0,c
  3465  00188C  0E07               	movlw	7
  3466  00188E  EC67  F00D         	call	_colorclick_writetoaddr
  3467  001892  0012               	return		;funcret
  3468  001894                     __end_of_colour_int_init:
  3469                           	callstack 0
  3470                           
  3471 ;; *************** function _forward *****************
  3472 ;; Defined at:
  3473 ;;		line 130 in file "dc_motor.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  mL              2   31[COMRAM] PTR struct .
  3476 ;;		 -> main@motorL(9), 
  3477 ;;  mR              2   33[COMRAM] PTR struct .
  3478 ;;		 -> main@motorR(9), 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3493 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3494 ;;Total ram usage:        6 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; Hardware stack levels required when called: 9
  3497 ;; This function calls:
  3498 ;;		_setMotorPWM
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text12
  3505  001474                     __ptext12:
  3506                           	callstack 0
  3507  001474                     _forward:
  3508                           	callstack 21
  3509  001474                     
  3510                           ;dc_motor.c: 130: void forward(DC_motor *mL, DC_motor *mR);dc_motor.c: 131: {;dc_motor.c
      +                          : 133:     mL->direction = 1;
  3511  001474  EE20 F001          	lfsr	2,1
  3512  001478  5020               	movf	forward@mL^0,w,c
  3513  00147A  26D9               	addwf	fsr2l,f,c
  3514  00147C  5021               	movf	(forward@mL+1)^0,w,c
  3515  00147E  22DA               	addwfc	fsr2h,f,c
  3516  001480  0E01               	movlw	1
  3517  001482  6EDF               	movwf	indf2,c
  3518                           
  3519                           ;dc_motor.c: 134:     mR->direction = 1;
  3520  001484  EE20 F001          	lfsr	2,1
  3521  001488  5022               	movf	forward@mR^0,w,c
  3522  00148A  26D9               	addwf	fsr2l,f,c
  3523  00148C  5023               	movf	(forward@mR+1)^0,w,c
  3524  00148E  22DA               	addwfc	fsr2h,f,c
  3525  001490  0E01               	movlw	1
  3526  001492  6EDF               	movwf	indf2,c
  3527                           
  3528                           ;dc_motor.c: 137:     while(((mL->power)<30) && ((mR->power)<30)){
  3529  001494  EF70  F00A         	goto	l2493
  3530  001498                     l2485:
  3531                           
  3532                           ;dc_motor.c: 138:         mL->power+=5;
  3533  001498  C020  FFD9         	movff	forward@mL,fsr2l
  3534  00149C  C021  FFDA         	movff	forward@mL+1,fsr2h
  3535  0014A0  0E05               	movlw	5
  3536  0014A2  26DF               	addwf	indf2,f,c
  3537                           
  3538                           ;dc_motor.c: 139:         mR->power+=5;
  3539  0014A4  C022  FFD9         	movff	forward@mR,fsr2l
  3540  0014A8  C023  FFDA         	movff	forward@mR+1,fsr2h
  3541  0014AC  0E05               	movlw	5
  3542  0014AE  26DF               	addwf	indf2,f,c
  3543  0014B0                     
  3544                           ;dc_motor.c: 141:         setMotorPWM(mL);
  3545  0014B0  C020  F015         	movff	forward@mL,setMotorPWM@m
  3546  0014B4  C021  F016         	movff	forward@mL+1,setMotorPWM@m+1
  3547  0014B8  EC92  F007         	call	_setMotorPWM	;wreg free
  3548  0014BC                     
  3549                           ;dc_motor.c: 142:         setMotorPWM(mR);
  3550  0014BC  C022  F015         	movff	forward@mR,setMotorPWM@m
  3551  0014C0  C023  F016         	movff	forward@mR+1,setMotorPWM@m+1
  3552  0014C4  EC92  F007         	call	_setMotorPWM	;wreg free
  3553  0014C8                     
  3554                           ;dc_motor.c: 143:         _delay((unsigned long)((50)*(64000000/4000.0)));
  3555  0014C8  0E05               	movlw	5
  3556  0014CA  6E25               	movwf	(??_forward+1)^0,c
  3557  0014CC  0E0F               	movlw	15
  3558  0014CE  6E24               	movwf	??_forward^0,c
  3559  0014D0  0EF1               	movlw	241
  3560  0014D2                     u2547:
  3561  0014D2  2EE8               	decfsz	wreg,f,c
  3562  0014D4  D7FE               	bra	u2547
  3563  0014D6  2E24               	decfsz	??_forward^0,f,c
  3564  0014D8  D7FC               	bra	u2547
  3565  0014DA  2E25               	decfsz	(??_forward+1)^0,f,c
  3566  0014DC  D7FA               	bra	u2547
  3567  0014DE  F000               	nop	
  3568  0014E0                     l2493:
  3569                           
  3570                           ;dc_motor.c: 137:     while(((mL->power)<30) && ((mR->power)<30)){
  3571  0014E0  C020  FFD9         	movff	forward@mL,fsr2l
  3572  0014E4  C021  FFDA         	movff	forward@mL+1,fsr2h
  3573  0014E8  0E1E               	movlw	30
  3574  0014EA  60DF               	cpfslt	indf2,c
  3575  0014EC  EF7A  F00A         	goto	u1921
  3576  0014F0  EF7C  F00A         	goto	u1920
  3577  0014F4                     u1921:
  3578  0014F4  EF88  F00A         	goto	l211
  3579  0014F8                     u1920:
  3580  0014F8  C022  FFD9         	movff	forward@mR,fsr2l
  3581  0014FC  C023  FFDA         	movff	forward@mR+1,fsr2h
  3582  001500  0E1D               	movlw	29
  3583  001502  64DF               	cpfsgt	indf2,c
  3584  001504  EF86  F00A         	goto	u1931
  3585  001508  EF88  F00A         	goto	u1930
  3586  00150C                     u1931:
  3587  00150C  EF4C  F00A         	goto	l2485
  3588  001510                     u1930:
  3589  001510                     l211:
  3590  001510  0012               	return		;funcret
  3591  001512                     __end_of_forward:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _setMotorPWM *****************
  3595 ;; Defined at:
  3596 ;;		line 52 in file "dc_motor.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  m               2   20[COMRAM] PTR struct .
  3599 ;;		 -> main@motorR(9), main@motorL(9), 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  PWMduty         2   29[COMRAM] int 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3613 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3614 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3615 ;;Total ram usage:       11 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 8
  3618 ;; This function calls:
  3619 ;;		___awdiv
  3620 ;;		___wmul
  3621 ;; This function is called by:
  3622 ;;		_forward
  3623 ;;		_reverse
  3624 ;;		_stop
  3625 ;;		_turnLeft
  3626 ;;		_turnRight
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text13
  3631  000F24                     __ptext13:
  3632                           	callstack 0
  3633  000F24                     _setMotorPWM:
  3634                           	callstack 21
  3635  000F24                     
  3636                           ;dc_motor.c: 52: void setMotorPWM(DC_motor *m);dc_motor.c: 53: {;dc_motor.c: 54:  int PW
      +                          Mduty;;dc_motor.c: 56:  if (m->direction){
  3637  000F24  EE20 F001          	lfsr	2,1
  3638  000F28  5015               	movf	setMotorPWM@m^0,w,c
  3639  000F2A  26D9               	addwf	fsr2l,f,c
  3640  000F2C  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3641  000F2E  22DA               	addwfc	fsr2h,f,c
  3642  000F30  50DF               	movf	indf2,w,c
  3643  000F32  B4D8               	btfsc	status,2,c
  3644  000F34  EF9E  F007         	goto	u1361
  3645  000F38  EFA0  F007         	goto	u1360
  3646  000F3C                     u1361:
  3647  000F3C  EFD1  F007         	goto	l2099
  3648  000F40                     u1360:
  3649  000F40                     
  3650                           ;dc_motor.c: 57:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  3651  000F40  C015  FFD9         	movff	setMotorPWM@m,fsr2l
  3652  000F44  C016  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3653  000F48  50DF               	movf	indf2,w,c
  3654  000F4A  6E17               	movwf	??_setMotorPWM^0,c
  3655  000F4C  5017               	movf	??_setMotorPWM^0,w,c
  3656  000F4E  6E07               	movwf	___wmul@multiplier^0,c
  3657  000F50  6A08               	clrf	(___wmul@multiplier+1)^0,c
  3658  000F52  EE20 F007          	lfsr	2,7
  3659  000F56  5015               	movf	setMotorPWM@m^0,w,c
  3660  000F58  26D9               	addwf	fsr2l,f,c
  3661  000F5A  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3662  000F5C  22DA               	addwfc	fsr2h,f,c
  3663  000F5E  CFDE F009          	movff	postinc2,___wmul@multiplicand
  3664  000F62  CFDD F00A          	movff	postdec2,___wmul@multiplicand+1
  3665  000F66  EC11  F00D         	call	___wmul	;wreg free
  3666  000F6A  C007  F00D         	movff	?___wmul,___awdiv@dividend
  3667  000F6E  C008  F00E         	movff	?___wmul+1,___awdiv@dividend+1
  3668  000F72  0E00               	movlw	0
  3669  000F74  6E10               	movwf	(___awdiv@divisor+1)^0,c
  3670  000F76  0E64               	movlw	100
  3671  000F78  6E0F               	movwf	___awdiv@divisor^0,c
  3672  000F7A  ECD8  F009         	call	___awdiv	;wreg free
  3673  000F7E  EE20 F007          	lfsr	2,7
  3674  000F82  5015               	movf	setMotorPWM@m^0,w,c
  3675  000F84  26D9               	addwf	fsr2l,f,c
  3676  000F86  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3677  000F88  22DA               	addwfc	fsr2h,f,c
  3678  000F8A  CFDE F018          	movff	postinc2,??_setMotorPWM+1
  3679  000F8E  CFDD F019          	movff	postdec2,??_setMotorPWM+2
  3680  000F92  500D               	movf	?___awdiv^0,w,c
  3681  000F94  5C18               	subwf	(??_setMotorPWM+1)^0,w,c
  3682  000F96  6E1E               	movwf	setMotorPWM@PWMduty^0,c
  3683  000F98  500E               	movf	(?___awdiv+1)^0,w,c
  3684  000F9A  5819               	subwfb	(??_setMotorPWM+2)^0,w,c
  3685  000F9C  6E1F               	movwf	(setMotorPWM@PWMduty+1)^0,c
  3686                           
  3687                           ;dc_motor.c: 58:  } else {
  3688  000F9E  EFF4  F007         	goto	l2101
  3689  000FA2                     l2099:
  3690                           
  3691                           ;dc_motor.c: 59:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  3692  000FA2  C015  FFD9         	movff	setMotorPWM@m,fsr2l
  3693  000FA6  C016  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3694  000FAA  50DF               	movf	indf2,w,c
  3695  000FAC  6E17               	movwf	??_setMotorPWM^0,c
  3696  000FAE  5017               	movf	??_setMotorPWM^0,w,c
  3697  000FB0  6E07               	movwf	___wmul@multiplier^0,c
  3698  000FB2  6A08               	clrf	(___wmul@multiplier+1)^0,c
  3699  000FB4  EE20 F007          	lfsr	2,7
  3700  000FB8  5015               	movf	setMotorPWM@m^0,w,c
  3701  000FBA  26D9               	addwf	fsr2l,f,c
  3702  000FBC  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3703  000FBE  22DA               	addwfc	fsr2h,f,c
  3704  000FC0  CFDE F009          	movff	postinc2,___wmul@multiplicand
  3705  000FC4  CFDD F00A          	movff	postdec2,___wmul@multiplicand+1
  3706  000FC8  EC11  F00D         	call	___wmul	;wreg free
  3707  000FCC  C007  F00D         	movff	?___wmul,___awdiv@dividend
  3708  000FD0  C008  F00E         	movff	?___wmul+1,___awdiv@dividend+1
  3709  000FD4  0E00               	movlw	0
  3710  000FD6  6E10               	movwf	(___awdiv@divisor+1)^0,c
  3711  000FD8  0E64               	movlw	100
  3712  000FDA  6E0F               	movwf	___awdiv@divisor^0,c
  3713  000FDC  ECD8  F009         	call	___awdiv	;wreg free
  3714  000FE0  C00D  F01E         	movff	?___awdiv,setMotorPWM@PWMduty
  3715  000FE4  C00E  F01F         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  3716  000FE8                     l2101:
  3717                           
  3718                           ;dc_motor.c: 62:  *(m->dutyHighByte) = (unsigned char)(PWMduty);
  3719  000FE8  EE20 F002          	lfsr	2,2
  3720  000FEC  5015               	movf	setMotorPWM@m^0,w,c
  3721  000FEE  26D9               	addwf	fsr2l,f,c
  3722  000FF0  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3723  000FF2  22DA               	addwfc	fsr2h,f,c
  3724  000FF4  CFDE F017          	movff	postinc2,??_setMotorPWM
  3725  000FF8  CFDD F018          	movff	postdec2,??_setMotorPWM+1
  3726  000FFC  C017  FFD9         	movff	??_setMotorPWM,fsr2l
  3727  001000  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3728  001004  C01E  FFDF         	movff	setMotorPWM@PWMduty,indf2
  3729  001008                     
  3730                           ;dc_motor.c: 64:  if (m->direction){
  3731  001008  EE20 F001          	lfsr	2,1
  3732  00100C  5015               	movf	setMotorPWM@m^0,w,c
  3733  00100E  26D9               	addwf	fsr2l,f,c
  3734  001010  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3735  001012  22DA               	addwfc	fsr2h,f,c
  3736  001014  50DF               	movf	indf2,w,c
  3737  001016  B4D8               	btfsc	status,2,c
  3738  001018  EF10  F008         	goto	u1371
  3739  00101C  EF12  F008         	goto	u1370
  3740  001020                     u1371:
  3741  001020  EF47  F008         	goto	l2107
  3742  001024                     u1370:
  3743  001024                     
  3744                           ;dc_motor.c: 65:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) | (1<<(m->dir_pin)));
  3745  001024  EE20 F004          	lfsr	2,4
  3746  001028  5015               	movf	setMotorPWM@m^0,w,c
  3747  00102A  26D9               	addwf	fsr2l,f,c
  3748  00102C  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3749  00102E  22DA               	addwfc	fsr2h,f,c
  3750  001030  CFDE F017          	movff	postinc2,??_setMotorPWM
  3751  001034  CFDD F018          	movff	postdec2,??_setMotorPWM+1
  3752  001038  C017  FFD9         	movff	??_setMotorPWM,fsr2l
  3753  00103C  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3754  001040  EE10 F004          	lfsr	1,4
  3755  001044  5015               	movf	setMotorPWM@m^0,w,c
  3756  001046  26E1               	addwf	fsr1l,f,c
  3757  001048  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3758  00104A  22E2               	addwfc	fsr1h,f,c
  3759  00104C  CFE6 F019          	movff	postinc1,??_setMotorPWM+2
  3760  001050  CFE5 F01A          	movff	postdec1,??_setMotorPWM+3
  3761  001054  C019  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3762  001058  C01A  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3763  00105C  50E7               	movf	indf1,w,c
  3764  00105E  6E1B               	movwf	(??_setMotorPWM+4)^0,c
  3765  001060  EE10 F006          	lfsr	1,6
  3766  001064  5015               	movf	setMotorPWM@m^0,w,c
  3767  001066  26E1               	addwf	fsr1l,f,c
  3768  001068  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3769  00106A  22E2               	addwfc	fsr1h,f,c
  3770  00106C  50E7               	movf	indf1,w,c
  3771  00106E  6E1C               	movwf	(??_setMotorPWM+5)^0,c
  3772  001070  0E01               	movlw	1
  3773  001072  6E1D               	movwf	(??_setMotorPWM+6)^0,c
  3774  001074  2A1C               	incf	(??_setMotorPWM+5)^0,f,c
  3775  001076  EF3F  F008         	goto	u1384
  3776  00107A                     u1385:
  3777  00107A  90D8               	bcf	status,0,c
  3778  00107C  361D               	rlcf	(??_setMotorPWM+6)^0,f,c
  3779  00107E                     u1384:
  3780  00107E  2E1C               	decfsz	(??_setMotorPWM+5)^0,f,c
  3781  001080  EF3D  F008         	goto	u1385
  3782  001084  501D               	movf	(??_setMotorPWM+6)^0,w,c
  3783  001086  101B               	iorwf	(??_setMotorPWM+4)^0,w,c
  3784  001088  6EDF               	movwf	indf2,c
  3785                           
  3786                           ;dc_motor.c: 66:  } else {
  3787  00108A  EF7B  F008         	goto	l191
  3788  00108E                     l2107:
  3789                           
  3790                           ;dc_motor.c: 67:   *(m->dir_LAT) = (unsigned char)(*(m->dir_LAT) & (~(1<<(m->dir_pin))))
      +                          ;
  3791  00108E  EE20 F004          	lfsr	2,4
  3792  001092  5015               	movf	setMotorPWM@m^0,w,c
  3793  001094  26D9               	addwf	fsr2l,f,c
  3794  001096  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3795  001098  22DA               	addwfc	fsr2h,f,c
  3796  00109A  CFDE F017          	movff	postinc2,??_setMotorPWM
  3797  00109E  CFDD F018          	movff	postdec2,??_setMotorPWM+1
  3798  0010A2  C017  FFD9         	movff	??_setMotorPWM,fsr2l
  3799  0010A6  C018  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3800  0010AA  EE10 F004          	lfsr	1,4
  3801  0010AE  5015               	movf	setMotorPWM@m^0,w,c
  3802  0010B0  26E1               	addwf	fsr1l,f,c
  3803  0010B2  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3804  0010B4  22E2               	addwfc	fsr1h,f,c
  3805  0010B6  CFE6 F019          	movff	postinc1,??_setMotorPWM+2
  3806  0010BA  CFE5 F01A          	movff	postdec1,??_setMotorPWM+3
  3807  0010BE  C019  FFE1         	movff	??_setMotorPWM+2,fsr1l
  3808  0010C2  C01A  FFE2         	movff	??_setMotorPWM+3,fsr1h
  3809  0010C6  50E7               	movf	indf1,w,c
  3810  0010C8  6E1B               	movwf	(??_setMotorPWM+4)^0,c
  3811  0010CA  EE10 F006          	lfsr	1,6
  3812  0010CE  5015               	movf	setMotorPWM@m^0,w,c
  3813  0010D0  26E1               	addwf	fsr1l,f,c
  3814  0010D2  5016               	movf	(setMotorPWM@m+1)^0,w,c
  3815  0010D4  22E2               	addwfc	fsr1h,f,c
  3816  0010D6  50E7               	movf	indf1,w,c
  3817  0010D8  6E1C               	movwf	(??_setMotorPWM+5)^0,c
  3818  0010DA  0E01               	movlw	1
  3819  0010DC  6E1D               	movwf	(??_setMotorPWM+6)^0,c
  3820  0010DE  2A1C               	incf	(??_setMotorPWM+5)^0,f,c
  3821  0010E0  EF74  F008         	goto	u1394
  3822  0010E4                     u1395:
  3823  0010E4  90D8               	bcf	status,0,c
  3824  0010E6  361D               	rlcf	(??_setMotorPWM+6)^0,f,c
  3825  0010E8                     u1394:
  3826  0010E8  2E1C               	decfsz	(??_setMotorPWM+5)^0,f,c
  3827  0010EA  EF72  F008         	goto	u1395
  3828  0010EE  501D               	movf	(??_setMotorPWM+6)^0,w,c
  3829  0010F0  0AFF               	xorlw	255
  3830  0010F2  141B               	andwf	(??_setMotorPWM+4)^0,w,c
  3831  0010F4  6EDF               	movwf	indf2,c
  3832  0010F6                     l191:
  3833  0010F6  0012               	return		;funcret
  3834  0010F8                     __end_of_setMotorPWM:
  3835                           	callstack 0
  3836                           
  3837 ;; *************** function ___wmul *****************
  3838 ;; Defined at:
  3839 ;;		line 15 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  multiplier      2    6[COMRAM] unsigned int 
  3842 ;;  multiplicand    2    8[COMRAM] unsigned int 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  product         2   10[COMRAM] unsigned int 
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  2    6[COMRAM] unsigned int 
  3847 ;; Registers used:
  3848 ;;		wreg, status,2, status,0, prodl, prodh
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3855 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3857 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3858 ;;Total ram usage:        6 bytes
  3859 ;; Hardware stack levels used: 1
  3860 ;; Hardware stack levels required when called: 7
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_setMotorPWM
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text14
  3869  001A22                     __ptext14:
  3870                           	callstack 0
  3871  001A22                     ___wmul:
  3872                           	callstack 21
  3873  001A22  5007               	movf	___wmul@multiplier^0,w,c
  3874  001A24  0209               	mulwf	___wmul@multiplicand^0,c
  3875  001A26  CFF3 F00B          	movff	prodl,___wmul@product
  3876  001A2A  CFF4 F00C          	movff	prodh,___wmul@product+1
  3877  001A2E  5007               	movf	___wmul@multiplier^0,w,c
  3878  001A30  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  3879  001A32  50F3               	movf	243,w,c
  3880  001A34  260C               	addwf	(___wmul@product+1)^0,f,c
  3881  001A36  5008               	movf	(___wmul@multiplier+1)^0,w,c
  3882  001A38  0209               	mulwf	___wmul@multiplicand^0,c
  3883  001A3A  50F3               	movf	243,w,c
  3884  001A3C  260C               	addwf	(___wmul@product+1)^0,f,c
  3885  001A3E  C00B  F007         	movff	___wmul@product,?___wmul
  3886  001A42  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  3887  001A46  0012               	return		;funcret
  3888  001A48                     __end_of___wmul:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function ___awdiv *****************
  3892 ;; Defined at:
  3893 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/awdiv.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  dividend        2   12[COMRAM] int 
  3896 ;;  divisor         2   14[COMRAM] int 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  quotient        2   18[COMRAM] int 
  3899 ;;  sign            1   17[COMRAM] unsigned char 
  3900 ;;  counter         1   16[COMRAM] unsigned char 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  2   12[COMRAM] int 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3911 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3913 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3914 ;;Total ram usage:        8 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; Hardware stack levels required when called: 7
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_setMotorPWM
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text15
  3925  0013B0                     __ptext15:
  3926                           	callstack 0
  3927  0013B0                     ___awdiv:
  3928                           	callstack 21
  3929  0013B0  0E00               	movlw	0
  3930  0013B2  6E12               	movwf	___awdiv@sign^0,c
  3931  0013B4  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  3932  0013B6  EFE1  F009         	goto	u1280
  3933  0013BA  EFDF  F009         	goto	u1281
  3934  0013BE                     u1281:
  3935  0013BE  EFE7  F009         	goto	l2029
  3936  0013C2                     u1280:
  3937  0013C2  6C0F               	negf	___awdiv@divisor^0,c
  3938  0013C4  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  3939  0013C6  B0D8               	btfsc	status,0,c
  3940  0013C8  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  3941  0013CA  0E01               	movlw	1
  3942  0013CC  6E12               	movwf	___awdiv@sign^0,c
  3943  0013CE                     l2029:
  3944  0013CE  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  3945  0013D0  EFEE  F009         	goto	u1290
  3946  0013D4  EFEC  F009         	goto	u1291
  3947  0013D8                     u1291:
  3948  0013D8  EFF4  F009         	goto	l2035
  3949  0013DC                     u1290:
  3950  0013DC  6C0D               	negf	___awdiv@dividend^0,c
  3951  0013DE  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  3952  0013E0  B0D8               	btfsc	status,0,c
  3953  0013E2  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  3954  0013E4  0E01               	movlw	1
  3955  0013E6  1A12               	xorwf	___awdiv@sign^0,f,c
  3956  0013E8                     l2035:
  3957  0013E8  0E00               	movlw	0
  3958  0013EA  6E14               	movwf	(___awdiv@quotient+1)^0,c
  3959  0013EC  0E00               	movlw	0
  3960  0013EE  6E13               	movwf	___awdiv@quotient^0,c
  3961  0013F0  500F               	movf	___awdiv@divisor^0,w,c
  3962  0013F2  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  3963  0013F4  B4D8               	btfsc	status,2,c
  3964  0013F6  EFFF  F009         	goto	u1301
  3965  0013FA  EF01  F00A         	goto	u1300
  3966  0013FE                     u1301:
  3967  0013FE  EF29  F00A         	goto	l2057
  3968  001402                     u1300:
  3969  001402  0E01               	movlw	1
  3970  001404  6E11               	movwf	___awdiv@counter^0,c
  3971  001406  EF09  F00A         	goto	l2043
  3972  00140A                     l2041:
  3973  00140A  90D8               	bcf	status,0,c
  3974  00140C  360F               	rlcf	___awdiv@divisor^0,f,c
  3975  00140E  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  3976  001410  2A11               	incf	___awdiv@counter^0,f,c
  3977  001412                     l2043:
  3978  001412  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  3979  001414  EF0E  F00A         	goto	u1311
  3980  001418  EF10  F00A         	goto	u1310
  3981  00141C                     u1311:
  3982  00141C  EF05  F00A         	goto	l2041
  3983  001420                     u1310:
  3984  001420                     l2045:
  3985  001420  90D8               	bcf	status,0,c
  3986  001422  3613               	rlcf	___awdiv@quotient^0,f,c
  3987  001424  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  3988  001426  500F               	movf	___awdiv@divisor^0,w,c
  3989  001428  5C0D               	subwf	___awdiv@dividend^0,w,c
  3990  00142A  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3991  00142C  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  3992  00142E  A0D8               	btfss	status,0,c
  3993  001430  EF1C  F00A         	goto	u1321
  3994  001434  EF1E  F00A         	goto	u1320
  3995  001438                     u1321:
  3996  001438  EF23  F00A         	goto	l2053
  3997  00143C                     u1320:
  3998  00143C  500F               	movf	___awdiv@divisor^0,w,c
  3999  00143E  5E0D               	subwf	___awdiv@dividend^0,f,c
  4000  001440  5010               	movf	(___awdiv@divisor+1)^0,w,c
  4001  001442  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  4002  001444  8013               	bsf	___awdiv@quotient^0,0,c
  4003  001446                     l2053:
  4004  001446  90D8               	bcf	status,0,c
  4005  001448  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  4006  00144A  320F               	rrcf	___awdiv@divisor^0,f,c
  4007  00144C  2E11               	decfsz	___awdiv@counter^0,f,c
  4008  00144E  EF10  F00A         	goto	l2045
  4009  001452                     l2057:
  4010  001452  5012               	movf	___awdiv@sign^0,w,c
  4011  001454  B4D8               	btfsc	status,2,c
  4012  001456  EF2F  F00A         	goto	u1331
  4013  00145A  EF31  F00A         	goto	u1330
  4014  00145E                     u1331:
  4015  00145E  EF35  F00A         	goto	l2061
  4016  001462                     u1330:
  4017  001462  6C13               	negf	___awdiv@quotient^0,c
  4018  001464  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  4019  001466  B0D8               	btfsc	status,0,c
  4020  001468  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  4021  00146A                     l2061:
  4022  00146A  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  4023  00146E  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  4024  001472  0012               	return		;funcret
  4025  001474                     __end_of___awdiv:
  4026                           	callstack 0
  4027                           
  4028 ;; *************** function _colorclick_readColour *****************
  4029 ;; Defined at:
  4030 ;;		line 161 in file "color_click.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  current         8   17[COMRAM] struct .
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  8   17[COMRAM] struct .
  4037 ;; Registers used:
  4038 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4044 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4047 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4048 ;;Total ram usage:        8 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; Hardware stack levels required when called: 10
  4051 ;; This function calls:
  4052 ;;		_colorclick_readBlue
  4053 ;;		_colorclick_readClear
  4054 ;;		_colorclick_readGreen
  4055 ;;		_colorclick_readRed
  4056 ;; This function is called by:
  4057 ;;		_main
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text16
  4062  0018E2                     __ptext16:
  4063                           	callstack 0
  4064  0018E2                     _colorclick_readColour:
  4065                           	callstack 20
  4066  0018E2                     
  4067                           ;color_click.c: 161: RGB_val colorclick_readColour(RGB_val current);color_click.c: 162: 
      +                          {;color_click.c: 163:     current.R = colorclick_readRed();
  4068  0018E2  EC5B  F00B         	call	_colorclick_readRed	;wreg free
  4069  0018E6  C00B  F012         	movff	?_colorclick_readRed,colorclick_readColour@current
  4070  0018EA  C00C  F013         	movff	?_colorclick_readRed+1,colorclick_readColour@current+1
  4071                           
  4072                           ;color_click.c: 164:     current.G = colorclick_readGreen();
  4073  0018EE  EC83  F00B         	call	_colorclick_readGreen	;wreg free
  4074  0018F2  C00B  F014         	movff	?_colorclick_readGreen,colorclick_readColour@current+2
  4075  0018F6  C00C  F015         	movff	?_colorclick_readGreen+1,colorclick_readColour@current+3
  4076                           
  4077                           ;color_click.c: 165:     current.B = colorclick_readBlue();
  4078  0018FA  ECD3  F00B         	call	_colorclick_readBlue	;wreg free
  4079  0018FE  C00B  F016         	movff	?_colorclick_readBlue,colorclick_readColour@current+4
  4080  001902  C00C  F017         	movff	?_colorclick_readBlue+1,colorclick_readColour@current+5
  4081                           
  4082                           ;color_click.c: 166:     current.C = colorclick_readClear();
  4083  001906  ECAB  F00B         	call	_colorclick_readClear	;wreg free
  4084  00190A  C00B  F018         	movff	?_colorclick_readClear,colorclick_readColour@current+6
  4085  00190E  C00C  F019         	movff	?_colorclick_readClear+1,colorclick_readColour@current+7
  4086  001912                     
  4087                           ;color_click.c: 168:     return current;
  4088  001912  EE20  F012         	lfsr	2,colorclick_readColour@current
  4089  001916  EE00  F012         	lfsr	0,?_colorclick_readColour
  4090  00191A  0E07               	movlw	7
  4091  00191C                     u1911:
  4092  00191C  CFDB FFEB          	movff	plusw2,plusw0
  4093  001920  06E8               	decf	wreg,f,c
  4094  001922  E2FC               	bc	u1911
  4095  001924  0012               	return		;funcret
  4096  001926                     __end_of_colorclick_readColour:
  4097                           	callstack 0
  4098                           
  4099 ;; *************** function _colorclick_readRed *****************
  4100 ;; Defined at:
  4101 ;;		line 86 in file "color_click.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;		None
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  tmp             2   15[COMRAM] unsigned int 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  2   10[COMRAM] unsigned int 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, status,0, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4117 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;Total ram usage:        7 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 9
  4122 ;; This function calls:
  4123 ;;		_I2C_2_Master_Read
  4124 ;;		_I2C_2_Master_RepStart
  4125 ;;		_I2C_2_Master_Start
  4126 ;;		_I2C_2_Master_Stop
  4127 ;;		_I2C_2_Master_Write
  4128 ;; This function is called by:
  4129 ;;		_colorclick_readColour
  4130 ;;		_colorclick_readColourRGBCLED
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text17
  4135  0016B6                     __ptext17:
  4136                           	callstack 0
  4137  0016B6                     _colorclick_readRed:
  4138                           	callstack 20
  4139  0016B6                     
  4140                           ;color_click.c: 88:  unsigned int tmp;;color_click.c: 89:  I2C_2_Master_Start();
  4141  0016B6  ECE5  F00D         	call	_I2C_2_Master_Start	;wreg free
  4142                           
  4143                           ;color_click.c: 90:  I2C_2_Master_Write(0x52 | 0x00);
  4144  0016BA  0E52               	movlw	82
  4145  0016BC  ECC9  F00D         	call	_I2C_2_Master_Write
  4146                           
  4147                           ;color_click.c: 91:  I2C_2_Master_Write(0xA0 | 0x16);
  4148  0016C0  0EB6               	movlw	182
  4149  0016C2  ECC9  F00D         	call	_I2C_2_Master_Write
  4150                           
  4151                           ;color_click.c: 92:  I2C_2_Master_RepStart();
  4152  0016C6  ECDB  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  4153                           
  4154                           ;color_click.c: 93:  I2C_2_Master_Write(0x52 | 0x01);
  4155  0016CA  0E53               	movlw	83
  4156  0016CC  ECC9  F00D         	call	_I2C_2_Master_Write
  4157                           
  4158                           ;color_click.c: 94:  tmp=I2C_2_Master_Read(1);
  4159  0016D0  0E01               	movlw	1
  4160  0016D2  EC93  F00C         	call	_I2C_2_Master_Read
  4161  0016D6  6E0D               	movwf	??_colorclick_readRed^0,c
  4162  0016D8  500D               	movf	??_colorclick_readRed^0,w,c
  4163  0016DA  6E10               	movwf	colorclick_readRed@tmp^0,c
  4164  0016DC  6A11               	clrf	(colorclick_readRed@tmp+1)^0,c
  4165                           
  4166                           ;color_click.c: 95:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4167  0016DE  0E00               	movlw	0
  4168  0016E0  EC93  F00C         	call	_I2C_2_Master_Read
  4169  0016E4  6E0D               	movwf	??_colorclick_readRed^0,c
  4170  0016E6  500D               	movf	??_colorclick_readRed^0,w,c
  4171  0016E8  6E0F               	movwf	(??_colorclick_readRed+2)^0,c
  4172  0016EA  6A0E               	clrf	(??_colorclick_readRed+1)^0,c
  4173  0016EC  5010               	movf	colorclick_readRed@tmp^0,w,c
  4174  0016EE  100E               	iorwf	(??_colorclick_readRed+1)^0,w,c
  4175  0016F0  6E10               	movwf	colorclick_readRed@tmp^0,c
  4176  0016F2  5011               	movf	(colorclick_readRed@tmp+1)^0,w,c
  4177  0016F4  100F               	iorwf	(??_colorclick_readRed+2)^0,w,c
  4178  0016F6  6E11               	movwf	(colorclick_readRed@tmp+1)^0,c
  4179                           
  4180                           ;color_click.c: 96:  I2C_2_Master_Stop();
  4181  0016F8  ECE0  F00D         	call	_I2C_2_Master_Stop	;wreg free
  4182  0016FC                     
  4183                           ;color_click.c: 97:  return tmp;
  4184  0016FC  C010  F00B         	movff	colorclick_readRed@tmp,?_colorclick_readRed
  4185  001700  C011  F00C         	movff	colorclick_readRed@tmp+1,?_colorclick_readRed+1
  4186  001704  0012               	return		;funcret
  4187  001706                     __end_of_colorclick_readRed:
  4188                           	callstack 0
  4189                           
  4190 ;; *************** function _colorclick_readGreen *****************
  4191 ;; Defined at:
  4192 ;;		line 105 in file "color_click.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  tmp             2   15[COMRAM] unsigned int 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  2   10[COMRAM] unsigned int 
  4199 ;; Registers used:
  4200 ;;		wreg, status,2, status,0, cstack
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4208 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4209 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4210 ;;Total ram usage:        7 bytes
  4211 ;; Hardware stack levels used: 1
  4212 ;; Hardware stack levels required when called: 9
  4213 ;; This function calls:
  4214 ;;		_I2C_2_Master_Read
  4215 ;;		_I2C_2_Master_RepStart
  4216 ;;		_I2C_2_Master_Start
  4217 ;;		_I2C_2_Master_Stop
  4218 ;;		_I2C_2_Master_Write
  4219 ;; This function is called by:
  4220 ;;		_colorclick_readColour
  4221 ;;		_colorclick_readColourRGBCLED
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text18
  4226  001706                     __ptext18:
  4227                           	callstack 0
  4228  001706                     _colorclick_readGreen:
  4229                           	callstack 20
  4230  001706                     
  4231                           ;color_click.c: 107:  unsigned int tmp;;color_click.c: 108:  I2C_2_Master_Start();
  4232  001706  ECE5  F00D         	call	_I2C_2_Master_Start	;wreg free
  4233                           
  4234                           ;color_click.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  4235  00170A  0E52               	movlw	82
  4236  00170C  ECC9  F00D         	call	_I2C_2_Master_Write
  4237                           
  4238                           ;color_click.c: 110:  I2C_2_Master_Write(0xA0 | 0x18);
  4239  001710  0EB8               	movlw	184
  4240  001712  ECC9  F00D         	call	_I2C_2_Master_Write
  4241                           
  4242                           ;color_click.c: 111:  I2C_2_Master_RepStart();
  4243  001716  ECDB  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  4244                           
  4245                           ;color_click.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  4246  00171A  0E53               	movlw	83
  4247  00171C  ECC9  F00D         	call	_I2C_2_Master_Write
  4248                           
  4249                           ;color_click.c: 113:  tmp=I2C_2_Master_Read(1);
  4250  001720  0E01               	movlw	1
  4251  001722  EC93  F00C         	call	_I2C_2_Master_Read
  4252  001726  6E0D               	movwf	??_colorclick_readGreen^0,c
  4253  001728  500D               	movf	??_colorclick_readGreen^0,w,c
  4254  00172A  6E10               	movwf	colorclick_readGreen@tmp^0,c
  4255  00172C  6A11               	clrf	(colorclick_readGreen@tmp+1)^0,c
  4256                           
  4257                           ;color_click.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4258  00172E  0E00               	movlw	0
  4259  001730  EC93  F00C         	call	_I2C_2_Master_Read
  4260  001734  6E0D               	movwf	??_colorclick_readGreen^0,c
  4261  001736  500D               	movf	??_colorclick_readGreen^0,w,c
  4262  001738  6E0F               	movwf	(??_colorclick_readGreen+2)^0,c
  4263  00173A  6A0E               	clrf	(??_colorclick_readGreen+1)^0,c
  4264  00173C  5010               	movf	colorclick_readGreen@tmp^0,w,c
  4265  00173E  100E               	iorwf	(??_colorclick_readGreen+1)^0,w,c
  4266  001740  6E10               	movwf	colorclick_readGreen@tmp^0,c
  4267  001742  5011               	movf	(colorclick_readGreen@tmp+1)^0,w,c
  4268  001744  100F               	iorwf	(??_colorclick_readGreen+2)^0,w,c
  4269  001746  6E11               	movwf	(colorclick_readGreen@tmp+1)^0,c
  4270                           
  4271                           ;color_click.c: 115:  I2C_2_Master_Stop();
  4272  001748  ECE0  F00D         	call	_I2C_2_Master_Stop	;wreg free
  4273  00174C                     
  4274                           ;color_click.c: 116:  return tmp;
  4275  00174C  C010  F00B         	movff	colorclick_readGreen@tmp,?_colorclick_readGreen
  4276  001750  C011  F00C         	movff	colorclick_readGreen@tmp+1,?_colorclick_readGreen+1
  4277  001754  0012               	return		;funcret
  4278  001756                     __end_of_colorclick_readGreen:
  4279                           	callstack 0
  4280                           
  4281 ;; *************** function _colorclick_readClear *****************
  4282 ;; Defined at:
  4283 ;;		line 143 in file "color_click.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  tmp             2   15[COMRAM] unsigned int 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  2   10[COMRAM] unsigned int 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4298 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4299 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4300 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;Total ram usage:        7 bytes
  4302 ;; Hardware stack levels used: 1
  4303 ;; Hardware stack levels required when called: 9
  4304 ;; This function calls:
  4305 ;;		_I2C_2_Master_Read
  4306 ;;		_I2C_2_Master_RepStart
  4307 ;;		_I2C_2_Master_Start
  4308 ;;		_I2C_2_Master_Stop
  4309 ;;		_I2C_2_Master_Write
  4310 ;; This function is called by:
  4311 ;;		_colorclick_readColour
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text19
  4316  001756                     __ptext19:
  4317                           	callstack 0
  4318  001756                     _colorclick_readClear:
  4319                           	callstack 20
  4320  001756                     
  4321                           ;color_click.c: 145:  unsigned int tmp;;color_click.c: 146:  I2C_2_Master_Start();
  4322  001756  ECE5  F00D         	call	_I2C_2_Master_Start	;wreg free
  4323                           
  4324                           ;color_click.c: 147:  I2C_2_Master_Write(0x52 | 0x00);
  4325  00175A  0E52               	movlw	82
  4326  00175C  ECC9  F00D         	call	_I2C_2_Master_Write
  4327                           
  4328                           ;color_click.c: 148:  I2C_2_Master_Write(0xA0 | 0x14);
  4329  001760  0EB4               	movlw	180
  4330  001762  ECC9  F00D         	call	_I2C_2_Master_Write
  4331                           
  4332                           ;color_click.c: 149:  I2C_2_Master_RepStart();
  4333  001766  ECDB  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  4334                           
  4335                           ;color_click.c: 150:  I2C_2_Master_Write(0x52 | 0x01);
  4336  00176A  0E53               	movlw	83
  4337  00176C  ECC9  F00D         	call	_I2C_2_Master_Write
  4338                           
  4339                           ;color_click.c: 151:  tmp=I2C_2_Master_Read(1);
  4340  001770  0E01               	movlw	1
  4341  001772  EC93  F00C         	call	_I2C_2_Master_Read
  4342  001776  6E0D               	movwf	??_colorclick_readClear^0,c
  4343  001778  500D               	movf	??_colorclick_readClear^0,w,c
  4344  00177A  6E10               	movwf	colorclick_readClear@tmp^0,c
  4345  00177C  6A11               	clrf	(colorclick_readClear@tmp+1)^0,c
  4346                           
  4347                           ;color_click.c: 152:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4348  00177E  0E00               	movlw	0
  4349  001780  EC93  F00C         	call	_I2C_2_Master_Read
  4350  001784  6E0D               	movwf	??_colorclick_readClear^0,c
  4351  001786  500D               	movf	??_colorclick_readClear^0,w,c
  4352  001788  6E0F               	movwf	(??_colorclick_readClear+2)^0,c
  4353  00178A  6A0E               	clrf	(??_colorclick_readClear+1)^0,c
  4354  00178C  5010               	movf	colorclick_readClear@tmp^0,w,c
  4355  00178E  100E               	iorwf	(??_colorclick_readClear+1)^0,w,c
  4356  001790  6E10               	movwf	colorclick_readClear@tmp^0,c
  4357  001792  5011               	movf	(colorclick_readClear@tmp+1)^0,w,c
  4358  001794  100F               	iorwf	(??_colorclick_readClear+2)^0,w,c
  4359  001796  6E11               	movwf	(colorclick_readClear@tmp+1)^0,c
  4360                           
  4361                           ;color_click.c: 153:  I2C_2_Master_Stop();
  4362  001798  ECE0  F00D         	call	_I2C_2_Master_Stop	;wreg free
  4363  00179C                     
  4364                           ;color_click.c: 154:  return tmp;
  4365  00179C  C010  F00B         	movff	colorclick_readClear@tmp,?_colorclick_readClear
  4366  0017A0  C011  F00C         	movff	colorclick_readClear@tmp+1,?_colorclick_readClear+1
  4367  0017A4  0012               	return		;funcret
  4368  0017A6                     __end_of_colorclick_readClear:
  4369                           	callstack 0
  4370                           
  4371 ;; *************** function _colorclick_readBlue *****************
  4372 ;; Defined at:
  4373 ;;		line 124 in file "color_click.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  tmp             2   15[COMRAM] unsigned int 
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  2   10[COMRAM] unsigned int 
  4380 ;; Registers used:
  4381 ;;		wreg, status,2, status,0, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;Total ram usage:        7 bytes
  4392 ;; Hardware stack levels used: 1
  4393 ;; Hardware stack levels required when called: 9
  4394 ;; This function calls:
  4395 ;;		_I2C_2_Master_Read
  4396 ;;		_I2C_2_Master_RepStart
  4397 ;;		_I2C_2_Master_Start
  4398 ;;		_I2C_2_Master_Stop
  4399 ;;		_I2C_2_Master_Write
  4400 ;; This function is called by:
  4401 ;;		_colorclick_readColour
  4402 ;;		_colorclick_readColourRGBCLED
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text20
  4407  0017A6                     __ptext20:
  4408                           	callstack 0
  4409  0017A6                     _colorclick_readBlue:
  4410                           	callstack 20
  4411  0017A6                     
  4412                           ;color_click.c: 126:  unsigned int tmp;;color_click.c: 127:  I2C_2_Master_Start();
  4413  0017A6  ECE5  F00D         	call	_I2C_2_Master_Start	;wreg free
  4414                           
  4415                           ;color_click.c: 128:  I2C_2_Master_Write(0x52 | 0x00);
  4416  0017AA  0E52               	movlw	82
  4417  0017AC  ECC9  F00D         	call	_I2C_2_Master_Write
  4418                           
  4419                           ;color_click.c: 129:  I2C_2_Master_Write(0xA0 | 0x1A);
  4420  0017B0  0EBA               	movlw	186
  4421  0017B2  ECC9  F00D         	call	_I2C_2_Master_Write
  4422                           
  4423                           ;color_click.c: 130:  I2C_2_Master_RepStart();
  4424  0017B6  ECDB  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  4425                           
  4426                           ;color_click.c: 131:  I2C_2_Master_Write(0x52 | 0x01);
  4427  0017BA  0E53               	movlw	83
  4428  0017BC  ECC9  F00D         	call	_I2C_2_Master_Write
  4429                           
  4430                           ;color_click.c: 132:  tmp=I2C_2_Master_Read(1);
  4431  0017C0  0E01               	movlw	1
  4432  0017C2  EC93  F00C         	call	_I2C_2_Master_Read
  4433  0017C6  6E0D               	movwf	??_colorclick_readBlue^0,c
  4434  0017C8  500D               	movf	??_colorclick_readBlue^0,w,c
  4435  0017CA  6E10               	movwf	colorclick_readBlue@tmp^0,c
  4436  0017CC  6A11               	clrf	(colorclick_readBlue@tmp+1)^0,c
  4437                           
  4438                           ;color_click.c: 133:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4439  0017CE  0E00               	movlw	0
  4440  0017D0  EC93  F00C         	call	_I2C_2_Master_Read
  4441  0017D4  6E0D               	movwf	??_colorclick_readBlue^0,c
  4442  0017D6  500D               	movf	??_colorclick_readBlue^0,w,c
  4443  0017D8  6E0F               	movwf	(??_colorclick_readBlue+2)^0,c
  4444  0017DA  6A0E               	clrf	(??_colorclick_readBlue+1)^0,c
  4445  0017DC  5010               	movf	colorclick_readBlue@tmp^0,w,c
  4446  0017DE  100E               	iorwf	(??_colorclick_readBlue+1)^0,w,c
  4447  0017E0  6E10               	movwf	colorclick_readBlue@tmp^0,c
  4448  0017E2  5011               	movf	(colorclick_readBlue@tmp+1)^0,w,c
  4449  0017E4  100F               	iorwf	(??_colorclick_readBlue+2)^0,w,c
  4450  0017E6  6E11               	movwf	(colorclick_readBlue@tmp+1)^0,c
  4451                           
  4452                           ;color_click.c: 134:  I2C_2_Master_Stop();
  4453  0017E8  ECE0  F00D         	call	_I2C_2_Master_Stop	;wreg free
  4454  0017EC                     
  4455                           ;color_click.c: 135:  return tmp;
  4456  0017EC  C010  F00B         	movff	colorclick_readBlue@tmp,?_colorclick_readBlue
  4457  0017F0  C011  F00C         	movff	colorclick_readBlue@tmp+1,?_colorclick_readBlue+1
  4458  0017F4  0012               	return		;funcret
  4459  0017F6                     __end_of_colorclick_readBlue:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _I2C_2_Master_RepStart *****************
  4463 ;; Defined at:
  4464 ;;		line 49 in file "i2c.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;Total ram usage:        0 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; Hardware stack levels required when called: 8
  4485 ;; This function calls:
  4486 ;;		_I2C_2_Master_Idle
  4487 ;; This function is called by:
  4488 ;;		_colorclick_readRed
  4489 ;;		_colorclick_readGreen
  4490 ;;		_colorclick_readBlue
  4491 ;;		_colorclick_readClear
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text21
  4496  001BB6                     __ptext21:
  4497                           	callstack 0
  4498  001BB6                     _I2C_2_Master_RepStart:
  4499                           	callstack 20
  4500  001BB6                     
  4501                           ;i2c.c: 51:   I2C_2_Master_Idle();
  4502  001BB6  ECE9  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4503  001BBA                     
  4504                           ;i2c.c: 52:   SSP2CON2bits.RSEN = 1;
  4505  001BBA  010E               	movlb	14	; () banked
  4506  001BBC  83DA               	bsf	218,1,b	;volatile
  4507  001BBE                     
  4508                           ; BSR set to: 14
  4509  001BBE  0012               	return		;funcret
  4510  001BC0                     __end_of_I2C_2_Master_RepStart:
  4511                           	callstack 0
  4512                           
  4513 ;; *************** function _I2C_2_Master_Read *****************
  4514 ;; Defined at:
  4515 ;;		line 79 in file "i2c.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  ack             1    wreg     unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  ack             1    8[COMRAM] unsigned char 
  4520 ;;  tmp             1    9[COMRAM] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      unsigned char 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4533 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4534 ;;Total ram usage:        3 bytes
  4535 ;; Hardware stack levels used: 1
  4536 ;; Hardware stack levels required when called: 8
  4537 ;; This function calls:
  4538 ;;		_I2C_2_Master_Idle
  4539 ;; This function is called by:
  4540 ;;		_colorclick_readRed
  4541 ;;		_colorclick_readGreen
  4542 ;;		_colorclick_readBlue
  4543 ;;		_colorclick_readClear
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text22
  4548  001926                     __ptext22:
  4549                           	callstack 0
  4550  001926                     _I2C_2_Master_Read:
  4551                           	callstack 20
  4552                           
  4553                           ; BSR set to: 14
  4554                           ;incstack = 0
  4555                           ;I2C_2_Master_Read@ack stored from wreg
  4556  001926  6E09               	movwf	I2C_2_Master_Read@ack^0,c
  4557  001928                     
  4558                           ;i2c.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 80: {;i2c.c: 81:  
      +                           unsigned char tmp;;i2c.c: 82:   I2C_2_Master_Idle();
  4559  001928  ECE9  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4560  00192C                     
  4561                           ;i2c.c: 83:   SSP2CON2bits.RCEN = 1;
  4562  00192C  010E               	movlb	14	; () banked
  4563  00192E  87DA               	bsf	218,3,b	;volatile
  4564                           
  4565                           ;i2c.c: 84:   I2C_2_Master_Idle();
  4566  001930  ECE9  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4567  001934                     
  4568                           ;i2c.c: 85:   tmp = SSP2BUF;
  4569  001934  CED5 F00A          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4570                           
  4571                           ;i2c.c: 86:   I2C_2_Master_Idle();
  4572  001938  ECE9  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4573  00193C                     
  4574                           ;i2c.c: 87:   SSP2CON2bits.ACKDT = !ack;
  4575  00193C  5009               	movf	I2C_2_Master_Read@ack^0,w,c
  4576  00193E  B4D8               	btfsc	status,2,c
  4577  001940  EFA4  F00C         	goto	u1341
  4578  001944  EFA8  F00C         	goto	u1340
  4579  001948                     u1341:
  4580  001948  6A08               	clrf	??_I2C_2_Master_Read^0,c
  4581  00194A  2A08               	incf	??_I2C_2_Master_Read^0,f,c
  4582  00194C  EFA9  F00C         	goto	u1358
  4583  001950                     u1340:
  4584  001950  6A08               	clrf	??_I2C_2_Master_Read^0,c
  4585  001952                     u1358:
  4586  001952  3A08               	swapf	??_I2C_2_Master_Read^0,f,c
  4587  001954  4608               	rlncf	??_I2C_2_Master_Read^0,f,c
  4588  001956  010E               	movlb	14	; () banked
  4589  001958  51DA               	movf	218,w,b	;volatile
  4590  00195A  1808               	xorwf	??_I2C_2_Master_Read^0,w,c
  4591  00195C  0BDF               	andlw	-33
  4592  00195E  1808               	xorwf	??_I2C_2_Master_Read^0,w,c
  4593  001960  6FDA               	movwf	218,b	;volatile
  4594  001962                     
  4595                           ; BSR set to: 14
  4596                           ;i2c.c: 88:   SSP2CON2bits.ACKEN = 1;
  4597  001962  89DA               	bsf	218,4,b	;volatile
  4598  001964                     
  4599                           ; BSR set to: 14
  4600                           ;i2c.c: 89:   return tmp;
  4601  001964  500A               	movf	I2C_2_Master_Read@tmp^0,w,c
  4602  001966                     
  4603                           ; BSR set to: 14
  4604  001966  0012               	return		;funcret
  4605  001968                     __end_of_I2C_2_Master_Read:
  4606                           	callstack 0
  4607                           
  4608 ;; *************** function _colorclick_init *****************
  4609 ;; Defined at:
  4610 ;;		line 9 in file "color_click.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;		None
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;		None
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4628 ;;Total ram usage:        1 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 10
  4631 ;; This function calls:
  4632 ;;		_I2C_2_Master_Init
  4633 ;;		_colorclick_toggleClearLED
  4634 ;;		_colorclick_writetoaddr
  4635 ;; This function is called by:
  4636 ;;		_main
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text23
  4641  001968                     __ptext23:
  4642                           	callstack 0
  4643  001968                     _colorclick_init:
  4644                           	callstack 20
  4645  001968                     
  4646                           ;color_click.c: 12:     I2C_2_Master_Init();
  4647  001968  ECD4  F00C         	call	_I2C_2_Master_Init	;wreg free
  4648  00196C                     
  4649                           ;color_click.c: 15:   colorclick_writetoaddr(0x00, 0x01);
  4650  00196C  0E01               	movlw	1
  4651  00196E  6E09               	movwf	colorclick_writetoaddr@value^0,c
  4652  001970  0E00               	movlw	0
  4653  001972  EC67  F00D         	call	_colorclick_writetoaddr
  4654  001976                     
  4655                           ;color_click.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4656  001976  0E3F               	movlw	63
  4657  001978  6E0B               	movwf	??_colorclick_init^0,c
  4658  00197A  0E55               	movlw	85
  4659  00197C                     u2557:
  4660  00197C  2EE8               	decfsz	wreg,f,c
  4661  00197E  D7FE               	bra	u2557
  4662  001980  2E0B               	decfsz	??_colorclick_init^0,f,c
  4663  001982  D7FC               	bra	u2557
  4664  001984  F000               	nop	
  4665  001986                     
  4666                           ;color_click.c: 19:  colorclick_writetoaddr(0x00, 0x03);
  4667  001986  0E03               	movlw	3
  4668  001988  6E09               	movwf	colorclick_writetoaddr@value^0,c
  4669  00198A  0E00               	movlw	0
  4670  00198C  EC67  F00D         	call	_colorclick_writetoaddr
  4671  001990                     
  4672                           ;color_click.c: 22:  colorclick_writetoaddr(0x01, 0xD5);
  4673  001990  0ED5               	movlw	213
  4674  001992  6E09               	movwf	colorclick_writetoaddr@value^0,c
  4675  001994  0E01               	movlw	1
  4676  001996  EC67  F00D         	call	_colorclick_writetoaddr
  4677  00199A                     
  4678                           ;color_click.c: 25:     TRISGbits.TRISG1 = 0;
  4679  00199A  9287               	bcf	135,1,c	;volatile
  4680  00199C                     
  4681                           ;color_click.c: 26:     TRISAbits.TRISA4 = 0;
  4682  00199C  9881               	bcf	129,4,c	;volatile
  4683  00199E                     
  4684                           ;color_click.c: 27:     TRISFbits.TRISF7 = 0;
  4685  00199E  9E86               	bcf	134,7,c	;volatile
  4686  0019A0                     
  4687                           ;color_click.c: 30:     colorclick_toggleClearLED(0);
  4688  0019A0  0E00               	movlw	0
  4689  0019A2  EC35  F00D         	call	_colorclick_toggleClearLED
  4690  0019A6  0012               	return		;funcret
  4691  0019A8                     __end_of_colorclick_init:
  4692                           	callstack 0
  4693                           
  4694 ;; *************** function _colorclick_writetoaddr *****************
  4695 ;; Defined at:
  4696 ;;		line 72 in file "color_click.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  address         1    wreg     unsigned char 
  4699 ;;  value           1    8[COMRAM] unsigned char 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  address         1    9[COMRAM] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4711 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4715 ;;Total ram usage:        2 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; Hardware stack levels required when called: 9
  4718 ;; This function calls:
  4719 ;;		_I2C_2_Master_Start
  4720 ;;		_I2C_2_Master_Stop
  4721 ;;		_I2C_2_Master_Write
  4722 ;; This function is called by:
  4723 ;;		_colour_int_init
  4724 ;;		_colorclick_init
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text24
  4729  001ACE                     __ptext24:
  4730                           	callstack 0
  4731  001ACE                     _colorclick_writetoaddr:
  4732                           	callstack 18
  4733                           
  4734                           ;incstack = 0
  4735                           ;colorclick_writetoaddr@address stored from wreg
  4736  001ACE  6E0A               	movwf	colorclick_writetoaddr@address^0,c
  4737  001AD0                     
  4738                           ;color_click.c: 72: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           73: {;color_click.c: 74:     I2C_2_Master_Start();
  4739  001AD0  ECE5  F00D         	call	_I2C_2_Master_Start	;wreg free
  4740                           
  4741                           ;color_click.c: 75:     I2C_2_Master_Write(0x52 | 0x00);
  4742  001AD4  0E52               	movlw	82
  4743  001AD6  ECC9  F00D         	call	_I2C_2_Master_Write
  4744                           
  4745                           ;color_click.c: 76:     I2C_2_Master_Write(0x80 | address);
  4746  001ADA  500A               	movf	colorclick_writetoaddr@address^0,w,c
  4747  001ADC  0980               	iorlw	128
  4748  001ADE  ECC9  F00D         	call	_I2C_2_Master_Write
  4749                           
  4750                           ;color_click.c: 77:     I2C_2_Master_Write(value);
  4751  001AE2  5009               	movf	colorclick_writetoaddr@value^0,w,c
  4752  001AE4  ECC9  F00D         	call	_I2C_2_Master_Write
  4753                           
  4754                           ;color_click.c: 78:     I2C_2_Master_Stop();
  4755  001AE8  ECE0  F00D         	call	_I2C_2_Master_Stop	;wreg free
  4756  001AEC  0012               	return		;funcret
  4757  001AEE                     __end_of_colorclick_writetoaddr:
  4758                           	callstack 0
  4759                           
  4760 ;; *************** function _I2C_2_Master_Write *****************
  4761 ;; Defined at:
  4762 ;;		line 69 in file "i2c.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  data_byte       1    wreg     unsigned char 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  data_byte       1    7[COMRAM] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4780 ;;Total ram usage:        1 bytes
  4781 ;; Hardware stack levels used: 1
  4782 ;; Hardware stack levels required when called: 8
  4783 ;; This function calls:
  4784 ;;		_I2C_2_Master_Idle
  4785 ;; This function is called by:
  4786 ;;		_interrupts_clear
  4787 ;;		_colorclick_writetoaddr
  4788 ;;		_colorclick_readRed
  4789 ;;		_colorclick_readGreen
  4790 ;;		_colorclick_readBlue
  4791 ;;		_colorclick_readClear
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text25
  4796  001B92                     __ptext25:
  4797                           	callstack 0
  4798  001B92                     _I2C_2_Master_Write:
  4799                           	callstack 18
  4800                           
  4801                           ;incstack = 0
  4802                           ;I2C_2_Master_Write@data_byte stored from wreg
  4803  001B92  6E08               	movwf	I2C_2_Master_Write@data_byte^0,c
  4804  001B94                     
  4805                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  4806  001B94  ECE9  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4807  001B98                     
  4808                           ;i2c.c: 72:   SSP2BUF = data_byte;
  4809  001B98  C008  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4810  001B9C  0012               	return		;funcret
  4811  001B9E                     __end_of_I2C_2_Master_Write:
  4812                           	callstack 0
  4813                           
  4814 ;; *************** function _I2C_2_Master_Stop *****************
  4815 ;; Defined at:
  4816 ;;		line 59 in file "i2c.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;Total ram usage:        0 bytes
  4835 ;; Hardware stack levels used: 1
  4836 ;; Hardware stack levels required when called: 8
  4837 ;; This function calls:
  4838 ;;		_I2C_2_Master_Idle
  4839 ;; This function is called by:
  4840 ;;		_interrupts_clear
  4841 ;;		_colorclick_writetoaddr
  4842 ;;		_colorclick_readRed
  4843 ;;		_colorclick_readGreen
  4844 ;;		_colorclick_readBlue
  4845 ;;		_colorclick_readClear
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text26
  4850  001BC0                     __ptext26:
  4851                           	callstack 0
  4852  001BC0                     _I2C_2_Master_Stop:
  4853                           	callstack 18
  4854  001BC0                     
  4855                           ;i2c.c: 61:   I2C_2_Master_Idle();
  4856  001BC0  ECE9  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4857  001BC4                     
  4858                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  4859  001BC4  010E               	movlb	14	; () banked
  4860  001BC6  85DA               	bsf	218,2,b	;volatile
  4861  001BC8                     
  4862                           ; BSR set to: 14
  4863  001BC8  0012               	return		;funcret
  4864  001BCA                     __end_of_I2C_2_Master_Stop:
  4865                           	callstack 0
  4866                           
  4867 ;; *************** function _I2C_2_Master_Start *****************
  4868 ;; Defined at:
  4869 ;;		line 39 in file "i2c.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;		None
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4887 ;;Total ram usage:        0 bytes
  4888 ;; Hardware stack levels used: 1
  4889 ;; Hardware stack levels required when called: 8
  4890 ;; This function calls:
  4891 ;;		_I2C_2_Master_Idle
  4892 ;; This function is called by:
  4893 ;;		_interrupts_clear
  4894 ;;		_colorclick_writetoaddr
  4895 ;;		_colorclick_readRed
  4896 ;;		_colorclick_readGreen
  4897 ;;		_colorclick_readBlue
  4898 ;;		_colorclick_readClear
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text27
  4903  001BCA                     __ptext27:
  4904                           	callstack 0
  4905  001BCA                     _I2C_2_Master_Start:
  4906                           	callstack 18
  4907  001BCA                     
  4908                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4909  001BCA  ECE9  F00C         	call	_I2C_2_Master_Idle	;wreg free
  4910  001BCE                     
  4911                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  4912  001BCE  010E               	movlb	14	; () banked
  4913  001BD0  81DA               	bsf	218,0,b	;volatile
  4914  001BD2                     
  4915                           ; BSR set to: 14
  4916  001BD2  0012               	return		;funcret
  4917  001BD4                     __end_of_I2C_2_Master_Start:
  4918                           	callstack 0
  4919                           
  4920 ;; *************** function _I2C_2_Master_Idle *****************
  4921 ;; Defined at:
  4922 ;;		line 30 in file "i2c.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  1    wreg      void 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4940 ;;Total ram usage:        1 bytes
  4941 ;; Hardware stack levels used: 1
  4942 ;; Hardware stack levels required when called: 7
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_I2C_2_Master_Start
  4947 ;;		_I2C_2_Master_RepStart
  4948 ;;		_I2C_2_Master_Stop
  4949 ;;		_I2C_2_Master_Write
  4950 ;;		_I2C_2_Master_Read
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text28
  4955  0019D2                     __ptext28:
  4956                           	callstack 0
  4957  0019D2                     _I2C_2_Master_Idle:
  4958                           	callstack 18
  4959  0019D2                     l30:
  4960  0019D2  010E               	movlb	14	; () banked
  4961  0019D4  B5D8               	btfsc	216,2,b	;volatile
  4962  0019D6  EFEF  F00C         	goto	u1241
  4963  0019DA  EFF1  F00C         	goto	u1240
  4964  0019DE                     u1241:
  4965  0019DE  EFE9  F00C         	goto	l30
  4966  0019E2                     u1240:
  4967  0019E2                     
  4968                           ; BSR set to: 14
  4969  0019E2  CEDA F007          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4970  0019E6  0E1F               	movlw	31
  4971  0019E8  1607               	andwf	??_I2C_2_Master_Idle^0,f,c
  4972  0019EA  A4D8               	btfss	status,2,c
  4973  0019EC  EFFA  F00C         	goto	u1251
  4974  0019F0  EFFC  F00C         	goto	u1250
  4975  0019F4                     u1251:
  4976  0019F4  EFE9  F00C         	goto	l30
  4977  0019F8                     u1250:
  4978  0019F8                     
  4979                           ; BSR set to: 14
  4980  0019F8  0012               	return		;funcret
  4981  0019FA                     __end_of_I2C_2_Master_Idle:
  4982                           	callstack 0
  4983                           
  4984 ;; *************** function _colorclick_toggleClearLED *****************
  4985 ;; Defined at:
  4986 ;;		line 59 in file "color_click.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  toggle          1    wreg     unsigned char 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;  toggle          1    6[COMRAM] unsigned char 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5004 ;;Total ram usage:        1 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 7
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_main
  5011 ;;		_colorclick_init
  5012 ;;		_colorclick_readColourRGBCLED
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text29
  5017  001A6A                     __ptext29:
  5018                           	callstack 0
  5019  001A6A                     _colorclick_toggleClearLED:
  5020                           	callstack 23
  5021                           
  5022                           ; BSR set to: 14
  5023                           ;incstack = 0
  5024                           ;colorclick_toggleClearLED@toggle stored from wreg
  5025  001A6A  6E07               	movwf	colorclick_toggleClearLED@toggle^0,c
  5026  001A6C                     
  5027                           ;color_click.c: 59: void colorclick_toggleClearLED(unsigned char toggle);color_click.c: 
      +                          60: {;color_click.c: 61:     LATGbits.LATG1 = toggle;
  5028  001A6C  B007               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  5029  001A6E  D002               	bra	u1405
  5030  001A70  927F               	bcf	127,1,c	;volatile
  5031  001A72  D001               	bra	u1406
  5032  001A74                     u1405:
  5033  001A74  827F               	bsf	127,1,c	;volatile
  5034  001A76                     u1406:
  5035                           
  5036                           ;color_click.c: 62:     LATFbits.LATF7 = toggle;
  5037  001A76  B007               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  5038  001A78  D002               	bra	u1415
  5039  001A7A  9E7E               	bcf	126,7,c	;volatile
  5040  001A7C  D001               	bra	u1416
  5041  001A7E                     u1415:
  5042  001A7E  8E7E               	bsf	126,7,c	;volatile
  5043  001A80                     u1416:
  5044                           
  5045                           ;color_click.c: 63:     LATAbits.LATA4 = toggle;
  5046  001A80  B007               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  5047  001A82  D002               	bra	u1425
  5048  001A84  9879               	bcf	121,4,c	;volatile
  5049  001A86  D001               	bra	u1426
  5050  001A88                     u1425:
  5051  001A88  8879               	bsf	121,4,c	;volatile
  5052  001A8A                     u1426:
  5053  001A8A  0012               	return		;funcret
  5054  001A8C                     __end_of_colorclick_toggleClearLED:
  5055                           	callstack 0
  5056                           
  5057 ;; *************** function _I2C_2_Master_Init *****************
  5058 ;; Defined at:
  5059 ;;		line 8 in file "i2c.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 7
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_colorclick_init
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text30
  5088  0019A8                     __ptext30:
  5089                           	callstack 0
  5090  0019A8                     _I2C_2_Master_Init:
  5091                           	callstack 22
  5092  0019A8                     
  5093                           ;i2c.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  5094  0019A8  010E               	movlb	14	; () banked
  5095  0019AA  51D9               	movf	217,w,b	;volatile
  5096  0019AC  0BF0               	andlw	-16
  5097  0019AE  0908               	iorlw	8
  5098  0019B0  6FD9               	movwf	217,b	;volatile
  5099  0019B2                     
  5100                           ; BSR set to: 14
  5101                           ;i2c.c: 12:   SSP2CON1bits.SSPEN = 1;
  5102  0019B2  8BD9               	bsf	217,5,b	;volatile
  5103                           
  5104                           ;i2c.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  5105  0019B4  0E9F               	movlw	159
  5106  0019B6  6FD6               	movwf	214,b	;volatile
  5107  0019B8                     
  5108                           ; BSR set to: 14
  5109                           ;i2c.c: 16:   TRISDbits.TRISD5 = 1;
  5110  0019B8  8A84               	bsf	132,5,c	;volatile
  5111  0019BA                     
  5112                           ; BSR set to: 14
  5113                           ;i2c.c: 17:   TRISDbits.TRISD6 = 1;
  5114  0019BA  8C84               	bsf	132,6,c	;volatile
  5115  0019BC                     
  5116                           ; BSR set to: 14
  5117                           ;i2c.c: 18:   ANSELDbits.ANSELD5=0;
  5118  0019BC  9BA7               	bcf	167,5,b	;volatile
  5119  0019BE                     
  5120                           ; BSR set to: 14
  5121                           ;i2c.c: 19:   ANSELDbits.ANSELD6=0;
  5122  0019BE  9DA7               	bcf	167,6,b	;volatile
  5123                           
  5124                           ;i2c.c: 20:   SSP2DATPPS=0x1D;
  5125  0019C0  0E1D               	movlw	29
  5126  0019C2  6F1D               	movwf	29,b	;volatile
  5127                           
  5128                           ;i2c.c: 21:   SSP2CLKPPS=0x1E;
  5129  0019C4  0E1E               	movlw	30
  5130  0019C6  6F1C               	movwf	28,b	;volatile
  5131                           
  5132                           ;i2c.c: 22:   RD5PPS=0x1C;
  5133  0019C8  0E1C               	movlw	28
  5134  0019CA  6F6F               	movwf	111,b	;volatile
  5135                           
  5136                           ;i2c.c: 23:   RD6PPS=0x1B;
  5137  0019CC  0E1B               	movlw	27
  5138  0019CE  6F70               	movwf	112,b	;volatile
  5139  0019D0                     
  5140                           ; BSR set to: 14
  5141  0019D0  0012               	return		;funcret
  5142  0019D2                     __end_of_I2C_2_Master_Init:
  5143                           	callstack 0
  5144                           
  5145 ;; *************** function _USART4_init *****************
  5146 ;; Defined at:
  5147 ;;		line 7 in file "serial.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;		None
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;		None
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1    wreg      void 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5165 ;;Total ram usage:        0 bytes
  5166 ;; Hardware stack levels used: 1
  5167 ;; Hardware stack levels required when called: 7
  5168 ;; This function calls:
  5169 ;;		Nothing
  5170 ;; This function is called by:
  5171 ;;		_main
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text31
  5176  001AEE                     __ptext31:
  5177                           	callstack 0
  5178  001AEE                     _USART4_init:
  5179                           	callstack 23
  5180  001AEE                     
  5181                           ;serial.c: 10:     RC0PPS = 0x12;
  5182  001AEE  0E12               	movlw	18
  5183  001AF0  010E               	movlb	14	; () banked
  5184  001AF2  6F62               	movwf	98,b	;volatile
  5185                           
  5186                           ;serial.c: 11:     RX4PPS = 0x11;
  5187  001AF4  0E11               	movlw	17
  5188  001AF6  6F15               	movwf	21,b	;volatile
  5189  001AF8                     
  5190                           ; BSR set to: 14
  5191                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  5192  001AF8  8283               	bsf	131,1,c	;volatile
  5193  001AFA                     
  5194                           ; BSR set to: 14
  5195                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  5196  001AFA  97E9               	bcf	233,3,b	;volatile
  5197  001AFC                     
  5198                           ; BSR set to: 14
  5199                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  5200  001AFC  95E8               	bcf	232,2,b	;volatile
  5201                           
  5202                           ;serial.c: 16:     SP4BRGL = 51;
  5203  001AFE  0E33               	movlw	51
  5204  001B00  6FE5               	movwf	229,b	;volatile
  5205                           
  5206                           ;serial.c: 17:     SP4BRGH = 0;
  5207  001B02  0E00               	movlw	0
  5208  001B04  6FE6               	movwf	230,b	;volatile
  5209  001B06                     
  5210                           ; BSR set to: 14
  5211                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  5212  001B06  89E7               	bsf	231,4,b	;volatile
  5213  001B08                     
  5214                           ; BSR set to: 14
  5215                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  5216  001B08  8BE8               	bsf	232,5,b	;volatile
  5217  001B0A                     
  5218                           ; BSR set to: 14
  5219                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  5220  001B0A  8FE7               	bsf	231,7,b	;volatile
  5221  001B0C                     
  5222                           ; BSR set to: 14
  5223  001B0C  0012               	return		;funcret
  5224  001B0E                     __end_of_USART4_init:
  5225                           	callstack 0
  5226                           
  5227 ;; *************** function _DCmotors_init *****************
  5228 ;; Defined at:
  5229 ;;		line 11 in file "dc_motor.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  PWMperiod       1    wreg     unsigned char 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  PWMperiod       1    6[COMRAM] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      void 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, cstack
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;Total ram usage:        1 bytes
  5248 ;; Hardware stack levels used: 1
  5249 ;; Hardware stack levels required when called: 8
  5250 ;; This function calls:
  5251 ;;		_buggyLEDs_init
  5252 ;;		_clicker2LEDs_init
  5253 ;;		_clicker2buttons_init
  5254 ;; This function is called by:
  5255 ;;		_main
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text32
  5260  0017F6                     __ptext32:
  5261                           	callstack 0
  5262  0017F6                     _DCmotors_init:
  5263                           	callstack 22
  5264                           
  5265                           ; BSR set to: 14
  5266                           ;incstack = 0
  5267                           ;DCmotors_init@PWMperiod stored from wreg
  5268  0017F6  6E07               	movwf	DCmotors_init@PWMperiod^0,c
  5269  0017F8                     
  5270                           ;dc_motor.c: 11: void DCmotors_init(unsigned char PWMperiod);dc_motor.c: 12: {;dc_motor.
      +                          c: 14:     T2CONbits.CKPS=0b100;
  5271  0017F8  50BD               	movf	189,w,c	;volatile
  5272  0017FA  0B8F               	andlw	-113
  5273  0017FC  0940               	iorlw	64
  5274  0017FE  6EBD               	movwf	189,c	;volatile
  5275                           
  5276                           ;dc_motor.c: 15:     T2HLTbits.MODE=0b00000;
  5277  001800  0EE0               	movlw	-32
  5278  001802  16BE               	andwf	190,f,c	;volatile
  5279                           
  5280                           ;dc_motor.c: 16:     T2CLKCONbits.CS=0b0001;
  5281  001804  50BF               	movf	191,w,c	;volatile
  5282  001806  0BF0               	andlw	-16
  5283  001808  0901               	iorlw	1
  5284  00180A  6EBF               	movwf	191,c	;volatile
  5285  00180C                     
  5286                           ;dc_motor.c: 19:     T2PR=PWMperiod;
  5287  00180C  C007  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  5288  001810                     
  5289                           ;dc_motor.c: 20:     T2CONbits.ON=1;
  5290  001810  8EBD               	bsf	189,7,c	;volatile
  5291  001812                     
  5292                           ;dc_motor.c: 23:     TRISEbits.TRISE2=0;
  5293  001812  9485               	bcf	133,2,c	;volatile
  5294  001814                     
  5295                           ;dc_motor.c: 24:     TRISEbits.TRISE4=0;
  5296  001814  9885               	bcf	133,4,c	;volatile
  5297  001816                     
  5298                           ;dc_motor.c: 25:     TRISCbits.TRISC7=0;
  5299  001816  9E83               	bcf	131,7,c	;volatile
  5300  001818                     
  5301                           ;dc_motor.c: 26:     TRISGbits.TRISG6=0;
  5302  001818  9C87               	bcf	135,6,c	;volatile
  5303  00181A                     
  5304                           ;dc_motor.c: 28:     LATEbits.LATE2=0;
  5305  00181A  947D               	bcf	125,2,c	;volatile
  5306  00181C                     
  5307                           ;dc_motor.c: 29:     LATEbits.LATE4=0;
  5308  00181C  987D               	bcf	125,4,c	;volatile
  5309  00181E                     
  5310                           ;dc_motor.c: 30:     LATCbits.LATC7=0;
  5311  00181E  9E7B               	bcf	123,7,c	;volatile
  5312  001820                     
  5313                           ;dc_motor.c: 31:     LATGbits.LATG6=0;
  5314  001820  9C7F               	bcf	127,6,c	;volatile
  5315                           
  5316                           ;dc_motor.c: 33:     PWM6DCH=0;
  5317  001822  0E00               	movlw	0
  5318  001824  6EA3               	movwf	163,c	;volatile
  5319                           
  5320                           ;dc_motor.c: 34:     PWM7DCH=0;
  5321  001826  0E00               	movlw	0
  5322  001828  6EA0               	movwf	160,c	;volatile
  5323  00182A                     
  5324                           ;dc_motor.c: 36:     PWM6CONbits.EN = 1;
  5325  00182A  8EA4               	bsf	164,7,c	;volatile
  5326  00182C                     
  5327                           ;dc_motor.c: 37:     PWM7CONbits.EN = 1;
  5328  00182C  8EA1               	bsf	161,7,c	;volatile
  5329                           
  5330                           ;dc_motor.c: 39:     RE2PPS=0x0A;
  5331  00182E  0E0A               	movlw	10
  5332  001830  010E               	movlb	14	; () banked
  5333  001832  6F74               	movwf	116,b	;volatile
  5334                           
  5335                           ;dc_motor.c: 40:     RC7PPS=0x0B;
  5336  001834  0E0B               	movlw	11
  5337  001836  6F69               	movwf	105,b	;volatile
  5338  001838                     
  5339                           ; BSR set to: 14
  5340                           ;dc_motor.c: 43:     clicker2buttons_init();
  5341  001838  ECCF  F00D         	call	_clicker2buttons_init	;wreg free
  5342  00183C                     
  5343                           ;dc_motor.c: 44:     clicker2LEDs_init();
  5344  00183C  ECEA  F00D         	call	_clicker2LEDs_init	;wreg free
  5345  001840                     
  5346                           ;dc_motor.c: 45:     buggyLEDs_init();
  5347  001840  ECBE  F00D         	call	_buggyLEDs_init	;wreg free
  5348  001844  0012               	return		;funcret
  5349  001846                     __end_of_DCmotors_init:
  5350                           	callstack 0
  5351                           
  5352 ;; *************** function _clicker2buttons_init *****************
  5353 ;; Defined at:
  5354 ;;		line 74 in file "dc_motor.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		None
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5372 ;;Total ram usage:        0 bytes
  5373 ;; Hardware stack levels used: 1
  5374 ;; Hardware stack levels required when called: 7
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_DCmotors_init
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text33
  5383  001B9E                     __ptext33:
  5384                           	callstack 0
  5385  001B9E                     _clicker2buttons_init:
  5386                           	callstack 22
  5387  001B9E                     
  5388                           ;dc_motor.c: 77:     TRISFbits.TRISF2=1;
  5389  001B9E  8486               	bsf	134,2,c	;volatile
  5390                           
  5391                           ;dc_motor.c: 78:     TRISFbits.TRISF3=1;
  5392  001BA0  8686               	bsf	134,3,c	;volatile
  5393                           
  5394                           ;dc_motor.c: 79:     ANSELFbits.ANSELF2=0;
  5395  001BA2  010E               	movlb	14	; () banked
  5396  001BA4  95B4               	bcf	180,2,b	;volatile
  5397                           
  5398                           ;dc_motor.c: 80:     ANSELFbits.ANSELF3=0;
  5399  001BA6  97B4               	bcf	180,3,b	;volatile
  5400  001BA8                     
  5401                           ; BSR set to: 14
  5402  001BA8  0012               	return		;funcret
  5403  001BAA                     __end_of_clicker2buttons_init:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function _clicker2LEDs_init *****************
  5407 ;; Defined at:
  5408 ;;		line 86 in file "dc_motor.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		None
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used: 1
  5428 ;; Hardware stack levels required when called: 7
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_DCmotors_init
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text34
  5437  001BD4                     __ptext34:
  5438                           	callstack 0
  5439  001BD4                     _clicker2LEDs_init:
  5440                           	callstack 22
  5441  001BD4                     
  5442                           ;dc_motor.c: 88:     TRISDbits.TRISD7 = 0;
  5443  001BD4  9E84               	bcf	132,7,c	;volatile
  5444                           
  5445                           ;dc_motor.c: 89:     TRISHbits.TRISH3 = 0;
  5446  001BD6  9688               	bcf	136,3,c	;volatile
  5447                           
  5448                           ;dc_motor.c: 91:     LATDbits.LATD7 = 0;
  5449  001BD8  9E7C               	bcf	124,7,c	;volatile
  5450                           
  5451                           ;dc_motor.c: 92:     LATHbits.LATH3 = 0;
  5452  001BDA  9680               	bcf	128,3,c	;volatile
  5453  001BDC  0012               	return		;funcret
  5454  001BDE                     __end_of_clicker2LEDs_init:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function _buggyLEDs_init *****************
  5458 ;; Defined at:
  5459 ;;		line 98 in file "dc_motor.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;		None
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;		None
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  1    wreg      void 
  5466 ;; Registers used:
  5467 ;;		None
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5477 ;;Total ram usage:        0 bytes
  5478 ;; Hardware stack levels used: 1
  5479 ;; Hardware stack levels required when called: 7
  5480 ;; This function calls:
  5481 ;;		Nothing
  5482 ;; This function is called by:
  5483 ;;		_DCmotors_init
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text35
  5488  001B7C                     __ptext35:
  5489                           	callstack 0
  5490  001B7C                     _buggyLEDs_init:
  5491                           	callstack 22
  5492  001B7C                     
  5493                           ;dc_motor.c: 100:     TRISHbits.TRISH1 = 0;
  5494  001B7C  9288               	bcf	136,1,c	;volatile
  5495                           
  5496                           ;dc_motor.c: 101:     TRISDbits.TRISD3 = 0;
  5497  001B7E  9684               	bcf	132,3,c	;volatile
  5498                           
  5499                           ;dc_motor.c: 102:     TRISDbits.TRISD4 = 0;
  5500  001B80  9884               	bcf	132,4,c	;volatile
  5501                           
  5502                           ;dc_motor.c: 103:     TRISFbits.TRISF0 = 0;
  5503  001B82  9086               	bcf	134,0,c	;volatile
  5504                           
  5505                           ;dc_motor.c: 104:     TRISHbits.TRISH0 = 0;
  5506  001B84  9088               	bcf	136,0,c	;volatile
  5507                           
  5508                           ;dc_motor.c: 106:     LATHbits.LATH1 = 0;
  5509  001B86  9280               	bcf	128,1,c	;volatile
  5510                           
  5511                           ;dc_motor.c: 107:     LATDbits.LATD3 = 0;
  5512  001B88  967C               	bcf	124,3,c	;volatile
  5513                           
  5514                           ;dc_motor.c: 108:     LATDbits.LATD4 = 0;
  5515  001B8A  987C               	bcf	124,4,c	;volatile
  5516                           
  5517                           ;dc_motor.c: 109:     LATFbits.LATF0 = 0;
  5518  001B8C  907E               	bcf	126,0,c	;volatile
  5519                           
  5520                           ;dc_motor.c: 110:     LATHbits.LATH0 = 0;
  5521  001B8E  9080               	bcf	128,0,c	;volatile
  5522  001B90  0012               	return		;funcret
  5523  001B92                     __end_of_buggyLEDs_init:
  5524                           	callstack 0
  5525                           
  5526 ;; *************** function _ADC_init *****************
  5527 ;; Defined at:
  5528 ;;		line 8 in file "ADC.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;		None
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  1    wreg      void 
  5535 ;; Registers used:
  5536 ;;		wreg, status,2
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5546 ;;Total ram usage:        0 bytes
  5547 ;; Hardware stack levels used: 1
  5548 ;; Hardware stack levels required when called: 7
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_main
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text36
  5557  001B48                     __ptext36:
  5558                           	callstack 0
  5559  001B48                     _ADC_init:
  5560                           	callstack 23
  5561  001B48                     
  5562                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  5563  001B48  8C86               	bsf	134,6,c	;volatile
  5564                           
  5565                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  5566  001B4A  010E               	movlb	14	; () banked
  5567  001B4C  8DB4               	bsf	180,6,b	;volatile
  5568                           
  5569                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  5570  001B4E  010F               	movlb	15	; () banked
  5571  001B50  9958               	bcf	88,4,b	;volatile
  5572  001B52                     
  5573                           ; BSR set to: 15
  5574                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  5575  001B52  0EFC               	movlw	-4
  5576  001B54  1758               	andwf	88,f,b	;volatile
  5577                           
  5578                           ;ADC.c: 16:     ADPCH=0b101110;
  5579  001B56  0E2E               	movlw	46
  5580  001B58  6F5F               	movwf	95,b	;volatile
  5581  001B5A                     
  5582                           ; BSR set to: 15
  5583                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  5584  001B5A  9460               	bcf	96,2,c	;volatile
  5585  001B5C                     
  5586                           ; BSR set to: 15
  5587                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  5588  001B5C  8860               	bsf	96,4,c	;volatile
  5589  001B5E                     
  5590                           ; BSR set to: 15
  5591                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  5592  001B5E  8E60               	bsf	96,7,c	;volatile
  5593  001B60                     
  5594                           ; BSR set to: 15
  5595  001B60  0012               	return		;funcret
  5596  001B62                     __end_of_ADC_init:
  5597                           	callstack 0
  5598                           
  5599 ;; *************** function _LowISR *****************
  5600 ;; Defined at:
  5601 ;;		line 82 in file "interrupts.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;		None
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		None
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5619 ;;Total ram usage:        1 bytes
  5620 ;; Hardware stack levels used: 1
  5621 ;; Hardware stack levels required when called: 6
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		Interrupt level 1
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	intcodelo
  5630  000018                     __pintcodelo:
  5631                           	callstack 0
  5632  000018                     _LowISR:
  5633                           	callstack 18
  5634                           
  5635                           ; BSR set to: 15
  5636                           ;incstack = 0
  5637  000018  804C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5638  00001A  CFE0 F006          	movff	bsr,??_LowISR
  5639  00001E  C006  FFE0         	movff	??_LowISR,bsr
  5640  000022  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5641  000024  0010               	retfie	
  5642  000026                     __end_of_LowISR:
  5643                           	callstack 0
  5644                           
  5645 ;; *************** function _HighISR *****************
  5646 ;; Defined at:
  5647 ;;		line 67 in file "interrupts.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5665 ;;Total ram usage:        0 bytes
  5666 ;; Hardware stack levels used: 1
  5667 ;; Hardware stack levels required when called: 5
  5668 ;; This function calls:
  5669 ;;		i2_interrupts_clear
  5670 ;; This function is called by:
  5671 ;;		Interrupt level 2
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	intcode
  5676  000008                     __pintcode:
  5677                           	callstack 0
  5678  000008                     _HighISR:
  5679                           	callstack 18
  5680                           
  5681                           ;incstack = 0
  5682  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5683  00000A  EF46  F00D         	goto	int_func
  5684                           
  5685                           	psect	intcode_body
  5686  001A8C                     __pintcode_body:
  5687                           	callstack 18
  5688  001A8C                     int_func:
  5689                           	callstack 18
  5690  001A8C                     
  5691                           ;interrupts.c: 68:     if (PIR0bits.INT1IF) {
  5692  001A8C  010E               	movlb	14	; () banked
  5693  001A8E  A333               	btfss	51,1,b	;volatile
  5694  001A90  EF4C  F00D         	goto	i2u235_41
  5695  001A94  EF4E  F00D         	goto	i2u235_40
  5696  001A98                     i2u235_41:
  5697  001A98  EF55  F00D         	goto	i2l308
  5698  001A9C                     i2u235_40:
  5699  001A9C                     
  5700                           ; BSR set to: 14
  5701                           ;interrupts.c: 69:         card_flag = 1;
  5702  001A9C  0E01               	movlw	1
  5703  001A9E  0100               	movlb	0	; () banked
  5704  001AA0  6FB0               	movwf	_card_flag& (0+255),b	;volatile
  5705  001AA2                     
  5706                           ; BSR set to: 0
  5707                           ;interrupts.c: 71:         interrupts_clear();
  5708  001AA2  ECB1  F00D         	call	i2_interrupts_clear	;wreg free
  5709  001AA6                     
  5710                           ;interrupts.c: 72:         PIR0bits.INT1IF = 0;
  5711  001AA6  010E               	movlb	14	; () banked
  5712  001AA8  9333               	bcf	51,1,b	;volatile
  5713  001AAA                     i2l308:
  5714                           
  5715                           ; BSR set to: 14
  5716  001AAA  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5717  001AAC  0011               	retfie		f
  5718  001AAE                     __end_of_HighISR:
  5719                           	callstack 0
  5720                           
  5721 ;; *************** function i2_interrupts_clear *****************
  5722 ;; Defined at:
  5723 ;;		line 43 in file "interrupts.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;		None
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;		None
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  1    wreg      void 
  5730 ;; Registers used:
  5731 ;;		wreg, status,2, status,0, cstack
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5741 ;;Total ram usage:        0 bytes
  5742 ;; Hardware stack levels used: 1
  5743 ;; Hardware stack levels required when called: 4
  5744 ;; This function calls:
  5745 ;;		i2_I2C_2_Master_Start
  5746 ;;		i2_I2C_2_Master_Stop
  5747 ;;		i2_I2C_2_Master_Write
  5748 ;;		i2_colour_int_init
  5749 ;; This function is called by:
  5750 ;;		_HighISR
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text39
  5755  001B62                     __ptext39:
  5756                           	callstack 0
  5757  001B62                     i2_interrupts_clear:
  5758                           	callstack 18
  5759  001B62                     
  5760                           ;interrupts.c: 44:     I2C_2_Master_Start();
  5761  001B62  ECF4  F00D         	call	i2_I2C_2_Master_Start	;wreg free
  5762                           
  5763                           ;interrupts.c: 45:     I2C_2_Master_Write(0x52 | 0x00);
  5764  001B66  0E52               	movlw	82
  5765  001B68  ECD5  F00D         	call	i2_I2C_2_Master_Write
  5766                           
  5767                           ;interrupts.c: 46:     I2C_2_Master_Write(0b11100110);
  5768  001B6C  0EE6               	movlw	230
  5769  001B6E  ECD5  F00D         	call	i2_I2C_2_Master_Write
  5770                           
  5771                           ;interrupts.c: 47:     I2C_2_Master_Stop();
  5772  001B72  ECEF  F00D         	call	i2_I2C_2_Master_Stop	;wreg free
  5773                           
  5774                           ;interrupts.c: 48:     colour_int_init();
  5775  001B76  EC4A  F00C         	call	i2_colour_int_init	;wreg free
  5776  001B7A  0012               	return		;funcret
  5777  001B7C                     __end_ofi2_interrupts_clear:
  5778                           	callstack 0
  5779                           
  5780 ;; *************** function i2_colour_int_init *****************
  5781 ;; Defined at:
  5782 ;;		line 51 in file "interrupts.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;		None
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;		None
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1    wreg      void 
  5789 ;; Registers used:
  5790 ;;		wreg, status,2, status,0, cstack
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5798 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5799 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5800 ;;Total ram usage:        1 bytes
  5801 ;; Hardware stack levels used: 1
  5802 ;; Hardware stack levels required when called: 3
  5803 ;; This function calls:
  5804 ;;		i2_colorclick_writetoaddr
  5805 ;; This function is called by:
  5806 ;;		i2_interrupts_clear
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text40
  5811  001894                     __ptext40:
  5812                           	callstack 0
  5813  001894                     i2_colour_int_init:
  5814                           	callstack 18
  5815  001894                     
  5816                           ;interrupts.c: 52:     colorclick_writetoaddr(0x00, 0b10011);
  5817  001894  0E13               	movlw	19
  5818  001896  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  5819  001898  0E00               	movlw	0
  5820  00189A  EC87  F00D         	call	i2_colorclick_writetoaddr
  5821  00189E                     
  5822                           ;interrupts.c: 53:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5823  00189E  0E3F               	movlw	63
  5824  0018A0  6E05               	movwf	??i2_colour_int_init^0,c
  5825  0018A2  0E55               	movlw	85
  5826  0018A4                     i2u256_47:
  5827  0018A4  2EE8               	decfsz	wreg,f,c
  5828  0018A6  D7FE               	bra	i2u256_47
  5829  0018A8  2E05               	decfsz	??i2_colour_int_init^0,f,c
  5830  0018AA  D7FC               	bra	i2u256_47
  5831  0018AC  F000               	nop	
  5832  0018AE                     
  5833                           ;interrupts.c: 54:     colorclick_writetoaddr(0x0C, 0b0100);
  5834  0018AE  0E04               	movlw	4
  5835  0018B0  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  5836  0018B2  0E0C               	movlw	12
  5837  0018B4  EC87  F00D         	call	i2_colorclick_writetoaddr
  5838  0018B8                     
  5839                           ;interrupts.c: 55:     colorclick_writetoaddr(0x04, (clear_lower&0b11111111));
  5840  0018B8  C045  F003         	movff	_clear_lower,i2colorclick_writetoaddr@value	;volatile
  5841  0018BC  0E04               	movlw	4
  5842  0018BE  EC87  F00D         	call	i2_colorclick_writetoaddr
  5843  0018C2                     
  5844                           ;interrupts.c: 56:     colorclick_writetoaddr(0x05, (clear_lower>>8));
  5845  0018C2  5046               	movf	(_clear_lower+1)^0,w,c	;volatile
  5846  0018C4  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  5847  0018C6  0E05               	movlw	5
  5848  0018C8  EC87  F00D         	call	i2_colorclick_writetoaddr
  5849  0018CC                     
  5850                           ;interrupts.c: 57:     colorclick_writetoaddr(0x06, (clear_upper&0b11111111));
  5851  0018CC  C043  F003         	movff	_clear_upper,i2colorclick_writetoaddr@value	;volatile
  5852  0018D0  0E06               	movlw	6
  5853  0018D2  EC87  F00D         	call	i2_colorclick_writetoaddr
  5854  0018D6                     
  5855                           ;interrupts.c: 58:     colorclick_writetoaddr(0x07, (clear_upper>>8));
  5856  0018D6  5044               	movf	(_clear_upper+1)^0,w,c	;volatile
  5857  0018D8  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  5858  0018DA  0E07               	movlw	7
  5859  0018DC  EC87  F00D         	call	i2_colorclick_writetoaddr
  5860  0018E0  0012               	return		;funcret
  5861  0018E2                     __end_ofi2_colour_int_init:
  5862                           	callstack 0
  5863                           
  5864 ;; *************** function i2_colorclick_writetoaddr *****************
  5865 ;; Defined at:
  5866 ;;		line 72 in file "color_click.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  address         1    wreg     unsigned char 
  5869 ;;  value           1    2[COMRAM] unsigned char 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  address         1    3[COMRAM] unsigned char 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5881 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5885 ;;Total ram usage:        2 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 2
  5888 ;; This function calls:
  5889 ;;		i2_I2C_2_Master_Start
  5890 ;;		i2_I2C_2_Master_Stop
  5891 ;;		i2_I2C_2_Master_Write
  5892 ;; This function is called by:
  5893 ;;		i2_colour_int_init
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text41
  5898  001B0E                     __ptext41:
  5899                           	callstack 0
  5900  001B0E                     i2_colorclick_writetoaddr:
  5901                           	callstack 18
  5902                           
  5903                           ;incstack = 0
  5904                           ;i2colorclick_writetoaddr@address stored from wreg
  5905  001B0E  6E04               	movwf	i2colorclick_writetoaddr@address^0,c
  5906  001B10                     
  5907                           ;color_click.c: 72: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           73: {;color_click.c: 74:     I2C_2_Master_Start();
  5908  001B10  ECF4  F00D         	call	i2_I2C_2_Master_Start	;wreg free
  5909                           
  5910                           ;color_click.c: 75:     I2C_2_Master_Write(0x52 | 0x00);
  5911  001B14  0E52               	movlw	82
  5912  001B16  ECD5  F00D         	call	i2_I2C_2_Master_Write
  5913                           
  5914                           ;color_click.c: 76:     I2C_2_Master_Write(0x80 | address);
  5915  001B1A  5004               	movf	i2colorclick_writetoaddr@address^0,w,c
  5916  001B1C  0980               	iorlw	128
  5917  001B1E  ECD5  F00D         	call	i2_I2C_2_Master_Write
  5918                           
  5919                           ;color_click.c: 77:     I2C_2_Master_Write(value);
  5920  001B22  5003               	movf	i2colorclick_writetoaddr@value^0,w,c
  5921  001B24  ECD5  F00D         	call	i2_I2C_2_Master_Write
  5922                           
  5923                           ;color_click.c: 78:     I2C_2_Master_Stop();
  5924  001B28  ECEF  F00D         	call	i2_I2C_2_Master_Stop	;wreg free
  5925  001B2C  0012               	return		;funcret
  5926  001B2E                     __end_ofi2_colorclick_writetoaddr:
  5927                           	callstack 0
  5928                           
  5929 ;; *************** function i2_I2C_2_Master_Write *****************
  5930 ;; Defined at:
  5931 ;;		line 69 in file "i2c.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  data_byte       1    wreg     unsigned char 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  data_byte       1    1[COMRAM] unsigned char 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, status,2, status,0, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;Total ram usage:        1 bytes
  5950 ;; Hardware stack levels used: 1
  5951 ;; Hardware stack levels required when called: 1
  5952 ;; This function calls:
  5953 ;;		i2_I2C_2_Master_Idle
  5954 ;; This function is called by:
  5955 ;;		i2_interrupts_clear
  5956 ;;		i2_colorclick_writetoaddr
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text42
  5961  001BAA                     __ptext42:
  5962                           	callstack 0
  5963  001BAA                     i2_I2C_2_Master_Write:
  5964                           	callstack 18
  5965                           
  5966                           ;incstack = 0
  5967                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  5968  001BAA  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  5969  001BAC                     
  5970                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  5971  001BAC  ECFD  F00C         	call	i2_I2C_2_Master_Idle	;wreg free
  5972  001BB0                     
  5973                           ;i2c.c: 72:   SSP2BUF = data_byte;
  5974  001BB0  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  5975  001BB4  0012               	return		;funcret
  5976  001BB6                     __end_ofi2_I2C_2_Master_Write:
  5977                           	callstack 0
  5978                           
  5979 ;; *************** function i2_I2C_2_Master_Stop *****************
  5980 ;; Defined at:
  5981 ;;		line 59 in file "i2c.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5999 ;;Total ram usage:        0 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; Hardware stack levels required when called: 1
  6002 ;; This function calls:
  6003 ;;		i2_I2C_2_Master_Idle
  6004 ;; This function is called by:
  6005 ;;		i2_interrupts_clear
  6006 ;;		i2_colorclick_writetoaddr
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text43
  6011  001BDE                     __ptext43:
  6012                           	callstack 0
  6013  001BDE                     i2_I2C_2_Master_Stop:
  6014                           	callstack 18
  6015  001BDE                     
  6016                           ;i2c.c: 61:   I2C_2_Master_Idle();
  6017  001BDE  ECFD  F00C         	call	i2_I2C_2_Master_Idle	;wreg free
  6018  001BE2                     
  6019                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  6020  001BE2  010E               	movlb	14	; () banked
  6021  001BE4  85DA               	bsf	218,2,b	;volatile
  6022  001BE6                     
  6023                           ; BSR set to: 14
  6024  001BE6  0012               	return		;funcret
  6025  001BE8                     __end_ofi2_I2C_2_Master_Stop:
  6026                           	callstack 0
  6027                           
  6028 ;; *************** function i2_I2C_2_Master_Start *****************
  6029 ;; Defined at:
  6030 ;;		line 39 in file "i2c.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;		None
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;		None
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1    wreg      void 
  6037 ;; Registers used:
  6038 ;;		wreg, status,2, status,0, cstack
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6048 ;;Total ram usage:        0 bytes
  6049 ;; Hardware stack levels used: 1
  6050 ;; Hardware stack levels required when called: 1
  6051 ;; This function calls:
  6052 ;;		i2_I2C_2_Master_Idle
  6053 ;; This function is called by:
  6054 ;;		i2_interrupts_clear
  6055 ;;		i2_colorclick_writetoaddr
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text44
  6060  001BE8                     __ptext44:
  6061                           	callstack 0
  6062  001BE8                     i2_I2C_2_Master_Start:
  6063                           	callstack 18
  6064  001BE8                     
  6065                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6066  001BE8  ECFD  F00C         	call	i2_I2C_2_Master_Idle	;wreg free
  6067  001BEC                     
  6068                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  6069  001BEC  010E               	movlb	14	; () banked
  6070  001BEE  81DA               	bsf	218,0,b	;volatile
  6071  001BF0                     
  6072                           ; BSR set to: 14
  6073  001BF0  0012               	return		;funcret
  6074  001BF2                     __end_ofi2_I2C_2_Master_Start:
  6075                           	callstack 0
  6076                           
  6077 ;; *************** function i2_I2C_2_Master_Idle *****************
  6078 ;; Defined at:
  6079 ;;		line 30 in file "i2c.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;		None
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;		None
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      void 
  6086 ;; Registers used:
  6087 ;;		wreg, status,2, status,0
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6096 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6097 ;;Total ram usage:        1 bytes
  6098 ;; Hardware stack levels used: 1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		i2_I2C_2_Master_Start
  6103 ;;		i2_I2C_2_Master_Stop
  6104 ;;		i2_I2C_2_Master_Write
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text45
  6109  0019FA                     __ptext45:
  6110                           	callstack 0
  6111  0019FA                     i2_I2C_2_Master_Idle:
  6112                           	callstack 18
  6113  0019FA                     i2l30:
  6114  0019FA  010E               	movlb	14	; () banked
  6115  0019FC  B5D8               	btfsc	216,2,b	;volatile
  6116  0019FE  EF03  F00D         	goto	i2u126_41
  6117  001A02  EF05  F00D         	goto	i2u126_40
  6118  001A06                     i2u126_41:
  6119  001A06  EFFD  F00C         	goto	i2l30
  6120  001A0A                     i2u126_40:
  6121  001A0A                     
  6122                           ; BSR set to: 14
  6123  001A0A  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  6124  001A0E  0E1F               	movlw	31
  6125  001A10  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  6126  001A12  A4D8               	btfss	status,2,c
  6127  001A14  EF0E  F00D         	goto	i2u127_41
  6128  001A18  EF10  F00D         	goto	i2u127_40
  6129  001A1C                     i2u127_41:
  6130  001A1C  EFFD  F00C         	goto	i2l30
  6131  001A20                     i2u127_40:
  6132  001A20                     
  6133                           ; BSR set to: 14
  6134  001A20  0012               	return		;funcret
  6135  001A22                     __end_ofi2_I2C_2_Master_Idle:
  6136                           	callstack 0
  6137  0000                     
  6138                           	psect	rparam
  6139  0000                     
  6140                           	psect	temp
  6141  00004C                     btemp:
  6142                           	callstack 0
  6143  00004C                     	ds	1
  6144  0000                     int$flags	set	btemp
  6145  0000                     wtemp8	set	btemp+1
  6146  0000                     ttemp5	set	btemp+1
  6147  0000                     ttemp6	set	btemp+4
  6148  0000                     ttemp7	set	btemp+8
  6149                           
  6150                           	psect	idloc
  6151                           
  6152                           ;Config register IDLOC0 @ 0x200000
  6153                           ;	unspecified, using default values
  6154  200000                     	org	2097152
  6155  200000  0FFF               	dw	4095
  6156                           
  6157                           ;Config register IDLOC1 @ 0x200002
  6158                           ;	unspecified, using default values
  6159  200002                     	org	2097154
  6160  200002  0FFF               	dw	4095
  6161                           
  6162                           ;Config register IDLOC2 @ 0x200004
  6163                           ;	unspecified, using default values
  6164  200004                     	org	2097156
  6165  200004  0FFF               	dw	4095
  6166                           
  6167                           ;Config register IDLOC3 @ 0x200006
  6168                           ;	unspecified, using default values
  6169  200006                     	org	2097158
  6170  200006  0FFF               	dw	4095
  6171                           
  6172                           ;Config register IDLOC4 @ 0x200008
  6173                           ;	unspecified, using default values
  6174  200008                     	org	2097160
  6175  200008  0FFF               	dw	4095
  6176                           
  6177                           ;Config register IDLOC5 @ 0x20000A
  6178                           ;	unspecified, using default values
  6179  20000A                     	org	2097162
  6180  20000A  0FFF               	dw	4095
  6181                           
  6182                           ;Config register IDLOC6 @ 0x20000C
  6183                           ;	unspecified, using default values
  6184  20000C                     	org	2097164
  6185  20000C  0FFF               	dw	4095
  6186                           
  6187                           ;Config register IDLOC7 @ 0x20000E
  6188                           ;	unspecified, using default values
  6189  20000E                     	org	2097166
  6190  20000E  0FFF               	dw	4095
  6191                           
  6192                           	psect	config
  6193                           
  6194                           ;Config register CONFIG1L @ 0x300000
  6195                           ;	External Oscillator mode Selection bits
  6196                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6197                           ;	Power-up default value for COSC bits
  6198                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6199  300000                     	org	3145728
  6200  300000  AA                 	db	170
  6201                           
  6202                           ;Config register CONFIG1H @ 0x300001
  6203                           ;	unspecified, using default values
  6204                           ;	Clock Out Enable bit
  6205                           ;	CLKOUTEN = 0x1, unprogrammed default
  6206                           ;	Clock Switch Enable bit
  6207                           ;	CSWEN = 0x1, unprogrammed default
  6208                           ;	Fail-Safe Clock Monitor Enable bit
  6209                           ;	FCMEN = 0x1, unprogrammed default
  6210  300001                     	org	3145729
  6211  300001  FF                 	db	255
  6212                           
  6213                           ;Config register CONFIG2L @ 0x300002
  6214                           ;	unspecified, using default values
  6215                           ;	Master Clear Enable bit
  6216                           ;	MCLRE = 0x1, unprogrammed default
  6217                           ;	Power-up Timer Enable bit
  6218                           ;	PWRTE = 0x1, unprogrammed default
  6219                           ;	Low-power BOR enable bit
  6220                           ;	LPBOREN = 0x1, unprogrammed default
  6221                           ;	Brown-out Reset Enable bits
  6222                           ;	BOREN = 0x3, unprogrammed default
  6223  300002                     	org	3145730
  6224  300002  FF                 	db	255
  6225                           
  6226                           ;Config register CONFIG2H @ 0x300003
  6227                           ;	unspecified, using default values
  6228                           ;	Brown Out Reset Voltage selection bits
  6229                           ;	BORV = 0x3, unprogrammed default
  6230                           ;	ZCD Disable bit
  6231                           ;	ZCD = 0x1, unprogrammed default
  6232                           ;	PPSLOCK bit One-Way Set Enable bit
  6233                           ;	PPS1WAY = 0x1, unprogrammed default
  6234                           ;	Stack Full/Underflow Reset Enable bit
  6235                           ;	STVREN = 0x1, unprogrammed default
  6236                           ;	Debugger Enable bit
  6237                           ;	DEBUG = 0x1, unprogrammed default
  6238                           ;	Extended Instruction Set Enable bit
  6239                           ;	XINST = 0x1, unprogrammed default
  6240  300003                     	org	3145731
  6241  300003  FF                 	db	255
  6242                           
  6243                           ;Config register CONFIG3L @ 0x300004
  6244                           ;	WDT Period Select bits
  6245                           ;	WDTCPS = 0x1F, unprogrammed default
  6246                           ;	WDT operating mode
  6247                           ;	WDTE = OFF, WDT Disabled
  6248  300004                     	org	3145732
  6249  300004  9F                 	db	159
  6250                           
  6251                           ;Config register CONFIG3H @ 0x300005
  6252                           ;	unspecified, using default values
  6253                           ;	WDT Window Select bits
  6254                           ;	WDTCWS = 0x7, unprogrammed default
  6255                           ;	WDT input clock selector
  6256                           ;	WDTCCS = 0x7, unprogrammed default
  6257  300005                     	org	3145733
  6258  300005  FF                 	db	255
  6259                           
  6260                           ;Config register CONFIG4L @ 0x300006
  6261                           ;	unspecified, using default values
  6262                           ;	Write Protection Block 0
  6263                           ;	WRT0 = 0x1, unprogrammed default
  6264                           ;	Write Protection Block 1
  6265                           ;	WRT1 = 0x1, unprogrammed default
  6266                           ;	Write Protection Block 2
  6267                           ;	WRT2 = 0x1, unprogrammed default
  6268                           ;	Write Protection Block 3
  6269                           ;	WRT3 = 0x1, unprogrammed default
  6270                           ;	Write Protection Block 3
  6271                           ;	WRT4 = 0x1, unprogrammed default
  6272                           ;	Write Protection Block 3
  6273                           ;	WRT5 = 0x1, unprogrammed default
  6274                           ;	Write Protection Block 3
  6275                           ;	WRT6 = 0x1, unprogrammed default
  6276                           ;	Write Protection Block 3
  6277                           ;	WRT7 = 0x1, unprogrammed default
  6278  300006                     	org	3145734
  6279  300006  FF                 	db	255
  6280                           
  6281                           ;Config register CONFIG4H @ 0x300007
  6282                           ;	unspecified, using default values
  6283                           ;	Configuration Register Write Protection bit
  6284                           ;	WRTC = 0x1, unprogrammed default
  6285                           ;	Boot Block Write Protection bit
  6286                           ;	WRTB = 0x1, unprogrammed default
  6287                           ;	Data EEPROM Write Protection bit
  6288                           ;	WRTD = 0x1, unprogrammed default
  6289                           ;	Scanner Enable bit
  6290                           ;	SCANE = 0x1, unprogrammed default
  6291                           ;	Low Voltage Programming Enable bit
  6292                           ;	LVP = 0x1, unprogrammed default
  6293  300007                     	org	3145735
  6294  300007  FF                 	db	255
  6295                           
  6296                           ;Config register CONFIG5L @ 0x300008
  6297                           ;	unspecified, using default values
  6298                           ;	UserNVM Program Memory Code Protection bit
  6299                           ;	CP = 0x1, unprogrammed default
  6300                           ;	DataNVM Memory Code Protection bit
  6301                           ;	CPD = 0x1, unprogrammed default
  6302  300008                     	org	3145736
  6303  300008  FF                 	db	255
  6304                           
  6305                           ;Config register CONFIG5H @ 0x300009
  6306                           ;	unspecified, using default values
  6307  300009                     	org	3145737
  6308  300009  FF                 	db	255
  6309                           
  6310                           ;Config register CONFIG6L @ 0x30000A
  6311                           ;	unspecified, using default values
  6312                           ;	Table Read Protection Block 0
  6313                           ;	EBTR0 = 0x1, unprogrammed default
  6314                           ;	Table Read Protection Block 1
  6315                           ;	EBTR1 = 0x1, unprogrammed default
  6316                           ;	Table Read Protection Block 2
  6317                           ;	EBTR2 = 0x1, unprogrammed default
  6318                           ;	Table Read Protection Block 3
  6319                           ;	EBTR3 = 0x1, unprogrammed default
  6320                           ;	Table Read Protection Block 4
  6321                           ;	EBTR4 = 0x1, unprogrammed default
  6322                           ;	Table Read Protection Block 5
  6323                           ;	EBTR5 = 0x1, unprogrammed default
  6324                           ;	Table Read Protection Block 6
  6325                           ;	EBTR6 = 0x1, unprogrammed default
  6326                           ;	Table Read Protection Block 7
  6327                           ;	EBTR7 = 0x1, unprogrammed default
  6328  30000A                     	org	3145738
  6329  30000A  FF                 	db	255
  6330                           
  6331                           ;Config register CONFIG6H @ 0x30000B
  6332                           ;	unspecified, using default values
  6333                           ;	Boot Block Table Read Protection bit
  6334                           ;	EBTRB = 0x1, unprogrammed default
  6335  30000B                     	org	3145739
  6336  30000B  FF                 	db	255
  6337                           tosu	equ	0xFFF
  6338                           tosh	equ	0xFFE
  6339                           tosl	equ	0xFFD
  6340                           stkptr	equ	0xFFC
  6341                           pclatu	equ	0xFFB
  6342                           pclath	equ	0xFFA
  6343                           pcl	equ	0xFF9
  6344                           tblptru	equ	0xFF8
  6345                           tblptrh	equ	0xFF7
  6346                           tblptrl	equ	0xFF6
  6347                           tablat	equ	0xFF5
  6348                           prodh	equ	0xFF4
  6349                           prodl	equ	0xFF3
  6350                           indf0	equ	0xFEF
  6351                           postinc0	equ	0xFEE
  6352                           postdec0	equ	0xFED
  6353                           preinc0	equ	0xFEC
  6354                           plusw0	equ	0xFEB
  6355                           fsr0h	equ	0xFEA
  6356                           fsr0l	equ	0xFE9
  6357                           wreg	equ	0xFE8
  6358                           indf1	equ	0xFE7
  6359                           postinc1	equ	0xFE6
  6360                           postdec1	equ	0xFE5
  6361                           preinc1	equ	0xFE4
  6362                           plusw1	equ	0xFE3
  6363                           fsr1h	equ	0xFE2
  6364                           fsr1l	equ	0xFE1
  6365                           bsr	equ	0xFE0
  6366                           indf2	equ	0xFDF
  6367                           postinc2	equ	0xFDE
  6368                           postdec2	equ	0xFDD
  6369                           preinc2	equ	0xFDC
  6370                           plusw2	equ	0xFDB
  6371                           fsr2h	equ	0xFDA
  6372                           fsr2l	equ	0xFD9
  6373                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     66      75
    BANK0           160     36     118
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    read_card@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    read_card@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct . size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m	PTR struct . size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S255$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S255$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_read_card
    _read_card->_turnLeft
    _read_card->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _reverse->_setMotorPWM
    ___flge->___xxtofl
    _interrupts_clear->_colour_int_init
    _colour_int_init->_colorclick_writetoaddr
    _forward->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _colorclick_readColour->_colorclick_readBlue
    _colorclick_readColour->_colorclick_readClear
    _colorclick_readColour->_colorclick_readGreen
    _colorclick_readColour->_colorclick_readRed
    _colorclick_readRed->_I2C_2_Master_Read
    _colorclick_readGreen->_I2C_2_Master_Read
    _colorclick_readClear->_I2C_2_Master_Read
    _colorclick_readBlue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colorclick_init->_colorclick_writetoaddr
    _colorclick_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear->i2_colour_int_init
    i2_colour_int_init->i2_colorclick_writetoaddr
    i2_colorclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   32376
                                             64 COMRAM     2     2      0
                                              0 BANK0     36    36      0
                           _ADC_init
                      _DCmotors_init
                        _USART4_init
                    _colorclick_init
              _colorclick_readColour
          _colorclick_toggleClearLED
                            _forward
                    _interrupts_init
                          _read_card
                               _stop
 ---------------------------------------------------------------------------------
 (1) _read_card                                           26     6     20   22542
                                             38 COMRAM    26     6     20
                             ___flge
                            ___lwdiv
                           ___xxtofl
                            _reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            7     2      5    4055
                                             31 COMRAM     7     2      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                             7     2      5    3371
                                             31 COMRAM     7     2      5
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3943
                                             31 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              6     2      4    2727
                                             31 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    2146
                                              6 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              6 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3830
                                             20 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     772
                   _interrupts_clear
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear                                     0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                    _colour_int_init
 ---------------------------------------------------------------------------------
 (3) _colour_int_init                                      1     1      0     750
                                             10 COMRAM     1     1      0
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _forward                                              6     2      4    2575
                                             31 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2247
                                             20 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                             12 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _colorclick_readColour                                8     0      8     775
                                             17 COMRAM     8     0      8
                _colorclick_readBlue
               _colorclick_readClear
               _colorclick_readGreen
                 _colorclick_readRed
 ---------------------------------------------------------------------------------
 (2) _colorclick_readRed                                   7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readGreen                                 7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readClear                                 7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readBlue                                  7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              7 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _colorclick_init                                      1     1      0     816
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Init
          _colorclick_toggleClearLED
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colorclick_writetoaddr                               2     1      1     750
                                              8 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              7 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colorclick_toggleClearLED                            1     1      0      66
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              6 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowISR                                               1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              0     0      0     244
                 i2_interrupts_clear
 ---------------------------------------------------------------------------------
 (9) i2_interrupts_clear                                   0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
                  i2_colour_int_init
 ---------------------------------------------------------------------------------
 (10) i2_colour_int_init                                   1     1      0     222
                                              4 COMRAM     1     1      0
           i2_colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (11) i2_colorclick_writetoaddr                            2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _USART4_init
   _colorclick_init
     _I2C_2_Master_Init
     _colorclick_toggleClearLED
     _colorclick_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colorclick_readColour
     _colorclick_readBlue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readClear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readGreen
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readRed
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colorclick_toggleClearLED
   _forward
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _interrupts_init
     _interrupts_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _colour_int_init
         _colorclick_writetoaddr
   _read_card
     ___flge
       ___xxtofl (ARG)
     ___lwdiv
     ___xxtofl
     _reverse
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_colour_int_init
       i2_colorclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      76       5       73.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     42      4B       1       79.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1       8        0.0%
DATA                 0      0      C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 23:04:02 2021

        __end_of_colorclick_readRed 1706         __end_of_colorclick_readBlue 17F6  
      __end_of_colorclick_readClear 17A6        __end_of_colorclick_readGreen 1756  
                                l30 19D2                                  l33 19F8  
                                l42 1BC8                                  l27 19D0  
                                l36 1BD2                                  l45 1B9C  
                                l39 1BBE                                  l48 1966  
             __end_of_DCmotors_init 1846                        ___awdiv@sign 0012  
                                bsr 000FE0                 ___wmul@multiplicand 0009  
    __size_of_colorclick_readColour 0044   __size_ofi2_colorclick_writetoaddr 0020  
     __end_of_colorclick_readColour 1926           ?i2_colorclick_writetoaddr 0003  
            _colorclick_writetoaddr 1ACE                                 l200 1B90  
                               l211 1510                                 l302 1892  
                               l214 157A                                 l231 0E04  
                               l241 0F20                                 l226 163E  
                               l242 0F22                                 l250 0C4E  
                               l219 15AA                                 l227 1640  
                               l235 0E34                                 l252 0D0A  
                               l237 0EF0                                 l246 0C1E  
                               l191 10F6                                 l328 1B60  
                               l184 1844                                 l512 1A46  
                               l256 0D3A                                 l257 0D3C  
                               l194 1BA8                                 l197 1BDC  
                               l373 1B0C                                 l453 19A6  
                               l509 088A                                 l462 1AEC  
                               l471 17F4                                 l296 1ACC  
                               l465 1704                                 l474 17A4  
                               l459 1A8A                                 l299 1B46  
                               l468 1754                                 l477 1924  
                               l743 1472                                 l782 13AE  
                               l777 1368                                 wreg 000FE8  
                   _colorclick_init 1968                                l1010 16B4  
                              l1003 16AC                                l2001 1BC0  
                              l2003 1BC4                                l2005 1B94  
                              l2013 1AD0                                l2021 13B0  
                              l2101 0FE8                                l2007 1B98  
                              l2031 13DC                                l2023 13B4  
                              l2015 1A22                                l2103 1008  
                              l2111 1850                                l2041 140A  
                              l2033 13E4                                l2025 13C2  
                              l2017 1A3E                                l2105 1024  
                              l2121 1888                                l2113 1860  
                              l2201 0E9E                                l1170 12AA  
                              l2131 19BA                                l2051 1444  
                              l2043 1412                                l2035 13E8  
                              l2027 13CA                                l2107 108E  
                              l2115 186A                                l2211 0F08  
                              l2203 0EB6                                l2133 19BC  
                              l2125 19A8                                l2061 146A  
                              l2053 1446                                l2045 1420  
                              l2037 13F0                                l2029 13CE  
                              l2117 1874                                l2109 1846  
                              l1181 1242                                l2141 15B2  
                              l2205 0EC0                                l2221 0BC2  
                              l2213 0B58                                l1174 11E6  
                              l2135 19BE                                l2127 19B2  
                              l2055 144C                                l2047 1426  
                              l2039 1402                                l2119 187E  
                              l2311 166C                                l2303 1642  
                              l1167 114E                                l2151 1626  
                              l2143 15DE                                l2207 0ECC  
                              l2231 0C06                                l2223 0BCC  
                              l2215 0B68          __size_ofi2_colour_int_init 004E  
                              l2153 1B9E                                l2129 19B8  
                              l2137 1A6C                                l2401 1986  
                              l2081 1928                                l2049 143C  
                              l2057 1452                                l2321 16A0  
                              l2313 167A                                l2305 164A  
                              l2161 1536                                l2145 15EA  
                              l2209 0ED8                                l2241 0CAE  
                              l2233 0C36                                l2225 0BE4  
                              l2217 0B8C                                l2155 1BD4  
                              l2411 19A0                                l2403 1990  
                              l2091 1964                                l2083 192C  
                              l2059 1462                                l2323 16A6  
                              l2315 1680                                l2307 165C  
                              l2331 115E                                l2163 154A  
                              l2147 15F6                                l2139 15AC  
                              l2171 0D3E                                l2251 0CF2  
                              l2243 0CB8                                l2227 0BEE  
                              l2219 0BAA                                l2235 0C54  
                              l2157 1B7C                                l2421 1814  
                              l2413 17F8                                l2405 199A  
                              l2085 1934                                l2077 1BB6  
                              l2317 1696                                l2309 1664  
                              l2341 119C                                l2333 1174  
                              l2325 10FA                                l2165 1556  
                              l2149 160E                                l2181 0DB2  
                              l2173 0D4E                                l2253 0D22  
                              l2245 0CD0                                l2237 0C78  
                              l2229 0BFA                                l2501 0106  
                              l2431 181E                                l2423 1816  
                              l2415 180C                                l2407 199C  
                              l2087 193C                                l2079 1BBA  
                              l2271 17EC                                l2263 1706  
                              l2095 0F24                                l2255 1B2E  
                              l2319 169E                                l2351 1224  
                              l2343 11CE                                l2327 110A  
                              l2167 1562                                l2159 1512  
                              l2191 0E1C                                l2183 0DCA  
                              l2175 0D72                                l2247 0CDA  
                              l2239 0C96                                l2511 0246  
                              l2503 014A                                l2441 183C  
                              l2433 1820                                l2425 1818  
                              l2417 1810                                l2409 199E  
                              l2089 1962                                l2265 174C  
                              l2257 16B6                                l2097 0F40  
                              l2281 12AC                                l2361 127A  
                              l2353 1232                                l2345 11D0  
                              l2337 1188                                l2329 1118  
                              l2169 1592                                l2185 0DD4  
                              l2177 0D90                                l2193 0E3A  
                              l2249 0CE6                                l2521 0372  
                              l2513 0276                                l2505 017A  
                              l2601 08F8                                l2443 1840  
                              l2435 182A                                l2427 181A  
                              l2419 1812                                l2451 1AFC  
                              l2275 1756                                l2259 16FC  
                              l2099 0FA2                                l2291 1336  
                              l2283 12DA                                l2363 128A  
                              l2355 1250                                l2347 11DC  
                              l2339 1190                                l2195 0E5E  
                              l2187 0DE0                                l2179 0DA8  
                              l2531 04C6                                l2523 03B6  
                              l2515 02BA                                l2507 01BE  
                              l2611 093E                                l2603 08FA  
                              l2437 182C                                l2429 181C  
                              l2453 1B06                                l2445 1AEE  
                              l2269 17A6                                l2277 179C  
                              l2461 1912                                l2293 1348  
                              l2285 12EA                                l2365 1298  
                              l2357 1252                                l2349 1218  
                              l2197 0E7C                                l2189 0DEC  
                              l2541 061A                                l2533 050A  
                              l2525 03FA                                l2517 02FE  
                              l2509 0202                                l2621 0974  
                              l2613 094C                                l2605 08FC  
                              l2391 1B5C                                l2439 1838  
                              l2455 1B08                                l2447 1AF8  
                              l2471 1ABE                                l2295 1356  
                              l2287 1318                                l2367 129A  
                              l2359 1256                                l2199 0E94  
                              l2551 075A                                l2543 065E  
                              l2535 054E                                l2527 043E  
                              l2519 0342                                l2631 09A0  
                              l2623 097A                                l2607 0902  
                              l2393 1B5E                                l2385 1B48  
                              l2457 1B0A                                l2449 1AFA  
                              l2481 1ACA                                l2473 1AC0  
                              l2465 1AAE                                l2297 13A6  
                              l2289 1328                                l2561 085A  
                              l2553 078A                                l2545 068E  
                              l2537 0592                                l2529 0482  
                              l2641 09F4                                l2633 09B2  
                              l2625 097E                                l2617 0958  
                              l2609 091A                                l2387 1B52  
                              l2395 1968                                l2459 18E2  
                              l2491 14C8                                l2483 1474  
                              l2475 1AC4                                l2467 1AB4  
                              l2299 13AC                                l2563 085E  
                              l2555 07CE                                l2547 06D2  
                              l2539 05D6                                l2651 0A56  
                              l2643 0A04                                l2635 09C2  
                              l2627 0988                                l2619 0970  
                              l2571 089A                                l2389 1B5A  
                              l2397 196C                                l2485 1498  
                              l2493 14E0                                l2477 1AC6  
                              l2469 1ABA                                l2565 0876  
                              l2557 0812                                l2549 0716  
                              l2661 0ABE                                l2653 0A6C  
                              l2645 0A1C                                l2637 09CA  
                              l2629 0994                                l2581 08B2  
                              l2573 089E                                l2399 1976  
                              l2495 14F8                                l2487 14B0  
                              l2479 1AC8                                l2671 0B4C  
                              l2663 0AF6                                l2647 0A30  
                              l2655 0A72                                l2639 09E2  
                              l2591 08DA                                l2583 08C6  
                              l2575 08A2                                l2489 14BC  
                              l2497 002A                                l2665 0B0E  
                              l2657 0A82                                l2649 0A42  
                              l2593 08E2                                l2585 08CA  
                              l2577 08A8                                l2569 088C  
                              l2499 00C2                                l2667 0B32  
                              l2659 0A9A                                l2595 08EA  
                              l2587 08D2                                l2579 08AC  
                              l2669 0B40                                l2597 08EE  
                              l2589 08D6                                l2599 08F6  
                              l1993 19D2                                l1995 19E2  
                              l1997 1BCA                                l1999 1BCE  
                              u2000 02BA                                u2001 02B6  
                              u2010 02FE                                u2011 02FA  
                              u1300 1402                                u2100 061A  
                              u2020 0342                                u1301 13FE  
                              u2101 0616                                u2021 033E  
                              u1310 1420                                u2110 065E  
                              u2030 03B6                                u1311 141C  
                              u2111 065A                                u2031 03B2  
                              u1240 19E2                                u1320 143C  
                              u2120 06D2                                u2040 03FA  
                              u1241 19DE                                u1321 1438  
                              u2121 06CE                                u2041 03F6  
                              u1250 19F8                                u1330 1462  
                              u2130 0716                                u2050 043E  
                              u1251 19F4                                u1331 145E  
                              u2131 0712                                u2051 043A  
                              u1340 1950                                u1500 0DA8  
                              u2140 075A                                u2060 04C6  
                              u1405 1A74                                u1341 1948  
                              u1501 0DA4                                u2141 0756  
                              u2061 04C2                                u2301 0AB6  
                              u2205 0986                                u1406 1A76  
                              u1430 1626                                u1510 0DCA  
                              u2150 07CE                                u2070 050A  
                              u2230 09B2                                u2206 0988  
                              u1415 1A7E                                u1431 1622  
                              u1511 0DC6                                u2151 07CA  
                              u2071 0506                                u2311 0AC8  
                              u2231 09AE                                u2215 0992  
                              u1416 1A80                                u1280 13C2  
                              u1360 0F40                                u1440 163E  
                              u1520 0E1C                                u1600 0B68  
                              u2160 0812                                u2080 054E  
                              u2240 09C2                                u2216 0994  
                      _BAUD4CONbits 000EE9                                u1425 1A88  
                              u1281 13BE                                u1361 0F3C  
                              u1441 163A                                u1521 0E18  
                              u1601 0B64                                u2161 080E  
                              u2081 054A                                u2321 0ADA  
                              u2241 09BE                                u2225 099E  
                              _LATE 000F7D                                u1426 1A8A  
                              u1290 13DC                                u1370 1024  
                              u1450 1592                                u1530 0E34  
                              u1610 0B9E                                u2170 0856  
                              u2090 05D6                                u2250 09F4  
                              u2226 09A0                                u1291 13D8  
                              u1371 1020                                u1451 158E  
                              u1531 0E30                                u1611 0B96  
                              u2171 0852                                u2091 05D2  
                              u2331 0B18                                u2251 09F0  
                              _LATG 000F7F                                u1460 15AA  
                              u1540 0E70                                u1700 0CD0  
                              u2260 0A04                                u1461 15A6  
                              u1541 0E68                                u1701 0CCC  
                              u2341 0B2A                                u2261 0A00  
                              u2181 0924                                u1358 1952  
                              u1470 0D4E                                u1710 0D22  
                              u1630 0BC2                                u2270 0A42  
                              u1471 0D4A                                u1711 0D1E  
                              u1631 0BBE                                u2271 0A3E  
                              u2191 0936                                u2407 090C  
                              u1384 107E                                u1800 1696  
                              u1560 0E94                                u1480 0D84  
                              u1720 0D3A                                u1640 0BE4  
                              u2280 0A82                                u1385 107A  
                              u1801 1692                                u1561 0E90  
                              u1481 0D7C                                u1721 0D36  
                              u1641 0BE0                                u2281 0A7E  
                              u2417 0962                                u1394 10E8  
                              u1730 12DA                                u1810 110A  
                              u1570 0EB6                                u1650 0C36  
                              _T2PR 000FBC                                u1395 10E4  
                              u1731 12D6                                u1811 1106  
                              u2507 0EE2                                u1571 0EB2  
                              u1651 0C32                                u2291 0AA4  
                              u2427 09D4                                u1740 1318  
                              u1900 1298                                u1820 1118  
                              u1580 0F08                                u1660 0C4E  
                              u1628 0BA0                                u1741 1314  
                              u1901 1294                                u1821 1114  
                              u2517 1600                                u1581 0F04  
                              u1661 0C4A                                u2437 0A0E  
                              u1750 1336                                u1830 1174  
                              u1590 0F20                                u1558 0E72  
                              u1670 0C8A                                u1911 191C  
                              u1751 1332                                u1831 1170  
                              u2527 156C                                u1591 0F1C  
                              u1671 0C82                                u2447 0A60  
                              u1920 14F8                                u1760 1356  
                              u1840 11CA                                u1921 14F4  
                              u2537 1856                                u1761 1352  
                              u1841 11C6                                u2457 0A8C  
                              u1930 1510                                u1770 13A6  
                              u1850 1214                                u1498 0D86  
                              u1690 0CAE                                u1931 150C  
                              u2547 14D2                                u1771 13A2  
                              u1851 1210                                u1691 0CAA  
                              u2467 0B00                                u1780 165C  
                              u1860 1232                                u1940 00C2  
                              u2557 197C                                u1781 1658  
                              u1861 122E                                u2477 0C10  
                              u1941 00BE                                u1790 167A  
                              u1870 1242                                u1950 0106  
                              u1791 1676                                u1871 123E  
                              u2487 0CFC                                u1951 0102  
                              u1880 1250                                u1688 0C8C  
                              u1960 014A                                u1881 124C  
                              u2497 0DF6                                u1961 0146  
                              u1890 128A                                u1970 01BE  
                              u1891 1286                                u1971 01BA  
                              u1980 0202                                u1981 01FE  
                              u1990 0246                                u1991 0242  
                              i2l30 19FA                                i2l33 1A20  
                              i2l42 1BE6                                i2l36 1BF0  
                              i2l45 1BB4       colorclick_writetoaddr@address 000A  
   i2colorclick_writetoaddr@address 0004                         main@current 00BC  
                       main@initial 00B4   __end_of_colorclick_toggleClearLED 1A8C  
           __end_of_interrupts_init 1ACE                                _main 088C  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 004C                                _stop 15AC  
                              prodh 000FF4                                prodl 000FF3  
                              start 0026                    __end_of_ADC_init 1B62  
                   __end_of_HighISR 1AAE                        ___param_bank 000000  
            ??_clicker2buttons_init 0007                               ?_main 0001  
                             _ADPCH 000F5F                     __end_of___awdiv 1474  
                             ?_stop 0020                     ___awdiv@divisor 000F  
                   __end_of___lwdiv 16B6                               i1l313 001E  
                             i2l302 18E0                               i2l308 1AAA  
                             i2l462 1B2C                               i2l299 1B7A  
                   ___awdiv@counter 0011            __end_of_interrupts_clear 1B48  
        __end_of_I2C_2_Master_Start 1BD4          __end_of_I2C_2_Master_Write 1B9E  
                   __end_of_forward 1512                   _clicker2LEDs_init 1BD4  
                   __end_of_reverse 15AC                               plusw0 000FEB  
                             plusw2 000FDB              DCmotors_init@PWMperiod 0007  
                ?_clicker2LEDs_init 0001                               ttemp5 004D  
                             ttemp6 0050                               ttemp7 0054  
                             status 000FD8                               wtemp8 004D  
             _I2C_2_Master_RepStart 1BB6                     __initialization 1A48  
               ??_clicker2LEDs_init 0007                        __end_of_main 0B58  
                      __end_of_stop 1642                              ??_main 0041  
           __end_of_colorclick_init 19A8                              ??_stop 0024  
                     __activetblptr 000000        __size_ofi2_I2C_2_Master_Idle 0028  
      __size_ofi2_I2C_2_Master_Stop 000A           __end_of_clicker2LEDs_init 1BDE  
                      ?_setMotorPWM 0015                              _ADRESH 000F64  
                  ___awdiv@dividend 000D                     _colour_int_init 1846  
              _colorclick_readClear 1756                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            i2l2011 1A0A                              _RD6PPS 000E70  
                            i2l2009 19FA                              i2l2123 1B10  
                            i2l2071 1BE2                              i2l2065 1BE8  
                            i2l2073 1BAC                              i2l2067 1BEC  
                            i2l2075 1BB0                              i2l2069 1BDE  
                            i2l2371 1894                              i2l2381 18CC  
                            i2l2373 189E                              i2l2383 18D6  
                            i2l2375 18AE                _colorclick_readGreen 1706  
                            i2l2377 18B8                              i2l2379 18C2  
                            i2l2567 1B62                              i2l2681 1AA6  
                            i2l2675 1A8C                              i2l2677 1A9C  
                            i2l2679 1AA2                    ?_interrupts_init 0001  
                         ??_HighISR 0006                              _RX4PPS 000E15  
                            _TX4REG 000EE4                    __end_of___xxtofl 12AC  
                            _LowISR 0018                    read_card@current 002F  
                  read_card@initial 0027                              ___flge 12AC  
                            ___wmul 1A22                           ??___awdiv 0011  
                         ??___lwdiv 000B                    ??_buggyLEDs_init 0007  
                i2_interrupts_clear 1B62                              clear_0 1A4E  
                            clear_1 1A5A                    ___awdiv@quotient 0013  
                            isa$std 000001                         read_card@mL 0037  
                       read_card@mR 0039                           ??_forward 0024  
               ?i2_interrupts_clear 0001     colorclick_toggleClearLED@toggle 0007  
                         ?_ADC_init 0001                           ??_reverse 0024  
                            stop@mL 0020                              stop@mR 0022  
                      ?_USART4_init 0001               ?_colorclick_readClear 000B  
             ?_colorclick_readGreen 000B                    __end_of_turnLeft 0F24  
                        ___flge@ff1 0015                          ___flge@ff2 0019  
                      ___xxtofl@arg 0011                        ___xxtofl@exp 0010  
                      ___xxtofl@val 0007                          __accesstop 0060  
           __end_of__initialization 1A60              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001    __end_ofi2_colorclick_writetoaddr 1B2E  
              ??i2_interrupts_clear 0006                      __pcstackCOMRAM 0001  
           ?_colorclick_writetoaddr 0009                    ?_colorclick_init 0001  
           __end_of_colour_int_init 1894                  _colorclick_readRed 16B6  
                        ??_ADC_init 0007          __size_of_clicker2LEDs_init 000A  
               ?_colorclick_readRed 000B                          __pbssBANK0 0060  
                      _battery_flag 00B1       __size_ofi2_I2C_2_Master_Start 000A  
                __size_of_read_card 0862       __size_ofi2_I2C_2_Master_Write 000C  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
    __end_of_colorclick_writetoaddr 1AEE                             ?___flge 0015  
                           ?___wmul 0007                ??_colorclick_readRed 000D  
      __size_of_colorclick_readBlue 0050                             _INT1PPS 000DF1  
             _colorclick_readColour 18E2                           ?___xxtofl 0007  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                 ?_interrupts_clear 0001                             _PWM6DCH 000FA3  
                           _PWM7DCH 000FA0                             _SSP2ADD 000ED6  
            ??_colorclick_readClear 000D                             _SSP2BUF 000ED5  
            ??_colorclick_readGreen 000D                  ??_interrupts_clear 000C  
              __size_of_setMotorPWM 01D4              __size_of_DCmotors_init 0050  
                           _HighISR 0008          ?_colorclick_toggleClearLED 0001  
                __size_of_turnRight 01E6                           _ADREFbits 000F58  
                _I2C_2_Master_Start 1BCA                 i2_I2C_2_Master_Idle 19FA  
                _I2C_2_Master_Write 1B92                             __Hparam 0000  
               i2_I2C_2_Master_Stop 1BDE                             __Lparam 0000  
                   __size_of_LowISR 000E                     __size_of___flge 0104  
          i2_colorclick_writetoaddr 1B0E                             ___awdiv 13B0  
                   __size_of___wmul 0026                 ?_I2C_2_Master_Start 0001  
                           ___lwdiv 1642                 ?_I2C_2_Master_Write 0001  
                           __pcinit 1A48             colorclick_readClear@tmp 0010  
                           __ramtop 0E00                           ?_turnLeft 0020  
                           __ptext0 088C                             __ptext1 002A  
                           __ptext2 0B58                             __ptext3 0D3E  
                           __ptext4 15AC                             __ptext5 1512  
                           __ptext6 10F8                             __ptext7 1642  
                           __ptext8 12AC                             __ptext9 1AAE  
     __size_of_clicker2buttons_init 000C                ?i2_I2C_2_Master_Idle 0001  
                         _T2CONbits 000FBD                             _forward 1474  
                        ??___xxtofl 000B                   __end_of_read_card 088C  
                  ?_colour_int_init 0001                ?i2_I2C_2_Master_Stop 0001  
                         _T2HLTbits 000FBE                             _reverse 1512  
                     _RxBufWriteCnt 004A                ??_I2C_2_Master_Start 0008  
              ??_I2C_2_Master_Write 0008                      __pintcode_body 1A8C  
              end_of_initialization 1A60                  setMotorPWM@PWMduty 001E  
           colorclick_readGreen@tmp 0010                __size_of_USART4_init 0020  
                           int_func 1A8C                        turnRight@deg 0024  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                       _DCmotors_init 17F6  
                        ??_turnLeft 0025              ?_colorclick_readColour 0012  
             ??i2_I2C_2_Master_Idle 0001                   __end_of_turnRight 0D3E  
             ??i2_I2C_2_Master_Stop 0002                       ___xxtofl@sign 000F  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 0008  
                      _EUSART4RXbuf 009C                        _EUSART4TXbuf 0060  
                        main@motorL 00C4                          main@motorR 00CD  
                    __end_of_LowISR 0026            __size_of_interrupts_init 0020  
                    __end_of___flge 13B0                      ?_DCmotors_init 0001  
                    __end_of___wmul 1A48                 start_initialization 1A48  
                     _TxBufWriteCnt 0048       i2colorclick_writetoaddr@value 0003  
                   _returnhome_flag 004B                 _colorclick_readBlue 17A6  
       __size_ofi2_interrupts_clear 001A                            ??_LowISR 0006  
                          ??___flge 001D                            ??___wmul 000B  
     i2I2C_2_Master_Write@data_byte 0002        __end_ofi2_I2C_2_Master_Start 1BF2  
              ?_colorclick_readBlue 000B        __end_ofi2_I2C_2_Master_Write 1BB6  
                       __pbssCOMRAM 0043                       __pcstackBANK0 00B2  
           __size_of_buggyLEDs_init 0016                   __size_of___xxtofl 01B4  
          __size_of_colorclick_init 0040                            ?_HighISR 0001  
        ??i2_colorclick_writetoaddr 0004                           _card_flag 00B0  
       ??_colorclick_toggleClearLED 0007           __size_of_interrupts_clear 001A  
                  ___lwdiv@dividend 0007                         _clear_lower 0045  
                       _clear_upper 0043                           __pintcode 0008  
                   ??_DCmotors_init 0007                            ?___awdiv 000D  
                          ?___lwdiv 0007         __size_of_colorclick_readRed 0050  
                       __pintcodelo 0018               ??_colorclick_readBlue 000D  
              I2C_2_Master_Read@ack 0009                   ??_interrupts_init 000C  
              I2C_2_Master_Read@tmp 000A                            ?_forward 0020  
                 __size_of_turnLeft 01E6                   _I2C_2_Master_Idle 19D2  
                 _I2C_2_Master_Init 19A8                   _I2C_2_Master_Read 1926  
                 _I2C_2_Master_Stop 1BC0                        _RxBufReadCnt 0049  
                          _ADC_init 1B48                            ?_reverse 0020  
                ?_I2C_2_Master_Idle 0001                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0017  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 000B  
                         _read_card 002A       __size_of_colorclick_readClear 0050  
            colorclick_readBlue@tmp 0010                         turnLeft@deg 0024  
     __size_of_colorclick_readGreen 0050        __end_of_clicker2buttons_init 1BAA  
               ??_I2C_2_Master_Idle 0007                 ??_I2C_2_Master_Init 0007  
               ??_I2C_2_Master_Read 0008                      ___wmul@product 000B  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0008  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F         colorclick_writetoaddr@value 0009  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                            _PIE4bits 000E2D  
                          i2u126_40 1A0A                            i2u126_41 1A06  
                       turnRight@mL 0020                            i2u127_40 1A20  
                          i2u127_41 1A1C                         turnRight@mR 0022  
                          i2u235_40 1A9C                            i2u235_41 1A98  
                          _PIR0bits 000E33                            i2u256_47 18A4  
                          _PIR4bits 000E37                            _SSP2CON2 000EDA  
                          _SSP2STAT 000ED8             ??_colorclick_readColour 001A  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 19FA  
         _colorclick_toggleClearLED 1A6A           __end_of_I2C_2_Master_Init 19D2  
         __end_of_I2C_2_Master_Read 1968                   ___wmul@multiplier 0007  
         __end_of_I2C_2_Master_Stop 1BCA                        setMotorPWM@m 0015  
       I2C_2_Master_Write@data_byte 0008                           main@start 00B3  
                      _TxBufReadCnt 0047                           _turnRight 0B58  
                     ??_USART4_init 0007                          ?_read_card 0027  
       __size_of_I2C_2_Master_Start 000A         __size_of_I2C_2_Master_Write 000C  
          __size_of_colour_int_init 004E        colorclick_readColour@current 0012  
    __size_of_I2C_2_Master_RepStart 000A       __end_of_I2C_2_Master_RepStart 1BC0  
          ??_colorclick_writetoaddr 000A                 __end_of_setMotorPWM 10F8  
                    read_card@B_rel 003F                    __size_of_HighISR 1AA6  
                    read_card@G_rel 003D                i2_I2C_2_Master_Start 1BE8  
                    read_card@R_rel 003B                   ??_colorclick_init 000B  
              i2_I2C_2_Master_Write 1BAA                            __Hrparam 0000  
                          __Lrparam 0000                           forward@mL 0020  
                         forward@mR 0022         __end_ofi2_I2C_2_Master_Idle 1A22  
       __end_ofi2_I2C_2_Master_Stop 1BE8                    __size_of___awdiv 00C4  
                  __size_of___lwdiv 0074                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                          _ANSELFbits 000EB4  
                          ___xxtofl 10F8                      _buggyLEDs_init 1B7C  
                  __size_of_forward 009E                     ___lwdiv@divisor 0009  
                   ___lwdiv@counter 000D                          ?_turnRight 0020  
                          __ptext10 1B2E                            __ptext11 1846  
                          __ptext20 17A6                            __ptext12 1474  
                          __ptext21 1BB6                            __ptext13 0F24  
                          __ptext30 19A8                            __ptext22 1926  
                          __ptext14 1A22                            __ptext31 1AEE  
                          __ptext23 1968                            __ptext15 13B0  
                          __ptext40 1894                            __ptext32 17F6  
                          __ptext24 1ACE                            __ptext16 18E2  
                          __ptext41 1B0E                            __ptext33 1B9E  
                          __ptext25 1B92                            __ptext17 16B6  
                          __ptext42 1BAA                            __ptext34 1BD4  
                          __ptext26 1BC0                            __ptext18 1706  
                          __ptext43 1BDE                            __ptext35 1B7C  
                          __ptext27 1BCA                            __ptext19 1756  
                          __ptext44 1BE8                            __ptext36 1B48  
                          __ptext28 19D2                            __ptext45 19FA  
                          __ptext29 1A6A                            __ptext39 1B62  
                  __size_of_reverse 009A                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                   i2_colour_int_init 1894  
                     __size_of_main 02CC                       __size_of_stop 0096  
                        turnLeft@mL 0020                          turnLeft@mR 0022  
             ?i2_I2C_2_Master_Start 0001               ?i2_I2C_2_Master_Write 0001  
               __end_of_USART4_init 1B0E                  ?i2_colour_int_init 0001  
                  _interrupts_clear 1B2E               colorclick_readRed@tmp 0010  
                         reverse@mL 0020                           reverse@mR 0022  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 004C                 ??i2_colour_int_init 0005  
                          main@move 00B2                            _turnLeft 0D3E  
        __size_of_I2C_2_Master_Idle 0028          __size_of_I2C_2_Master_Init 002A  
        __size_of_I2C_2_Master_Read 0042                _clicker2buttons_init 1B9E  
        __size_of_I2C_2_Master_Stop 000A              __end_of_buggyLEDs_init 1B92  
                        _INTCONbits 000FF2                         _setMotorPWM 0F24  
                       ??_read_card 003B                         _PWM6CONbits 000FA4  
         __end_ofi2_colour_int_init 18E2                         _PWM7CONbits 000FA1  
                          intlevel1 0000                            intlevel2 0000  
        __end_ofi2_interrupts_clear 1B7C     __size_of_colorclick_writetoaddr 0020  
                   _interrupts_init 1AAE                   ??_colour_int_init 000B  
             ?_clicker2buttons_init 0001                     ?_buggyLEDs_init 0001  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                       ??_turnRight 0025  __size_of_colorclick_toggleClearLED 0022  
                       _USART4_init 1AEE                          _TX4STAbits 000EE8  
            ??i2_I2C_2_Master_Start 0002              ??i2_I2C_2_Master_Write 0002  
