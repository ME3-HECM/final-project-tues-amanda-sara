

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 07 09:36:33 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 05/05/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     _PIE4bits	set	3629
    89  0000                     _TX4REG	set	3812
    90  0000                     _RC4REG	set	3811
    91  0000                     _PIR4bits	set	3639
    92  0000                     _RC4STAbits	set	3815
    93  0000                     _SP4BRGH	set	3814
    94  0000                     _SP4BRGL	set	3813
    95  0000                     _TX4STAbits	set	3816
    96  0000                     _BAUD4CONbits	set	3817
    97  0000                     _RX4PPS	set	3605
    98  0000                     _RC0PPS	set	3682
    99  0000                     _ANSELFbits	set	3764
   100  0000                     _IPR0bits	set	3615
   101  0000                     _PIE0bits	set	3625
   102  0000                     _ANSELBbits	set	3738
   103  0000                     _RC7PPS	set	3689
   104  0000                     _RE2PPS	set	3700
   105  0000                     _SSP2BUF	set	3797
   106  0000                     _SSP2CON2bits	set	3802
   107  0000                     _SSP2CON2	set	3802
   108  0000                     _SSP2STAT	set	3800
   109  0000                     _RD6PPS	set	3696
   110  0000                     _RD5PPS	set	3695
   111  0000                     _SSP2CLKPPS	set	3612
   112  0000                     _SSP2DATPPS	set	3613
   113  0000                     _ANSELDbits	set	3751
   114  0000                     _SSP2ADD	set	3798
   115  0000                     _SSP2CON1bits	set	3801
   116  0000                     _ADPCH	set	3935
   117  0000                     _ADREFbits	set	3928
   118  0000                     _LATAbits	set	3961
   119  0000                     _TRISAbits	set	3969
   120  0000                     _ADRESH	set	3940
   121  0000                     _ADCON0bits	set	3936
   122  0000                     _INTCONbits	set	4082
   123  0000                     _TRISBbits	set	3970
   124  0000                     _LATHbits	set	3968
   125  0000                     _TRISHbits	set	3976
   126  0000                     _LATFbits	set	3966
   127  0000                     _TRISFbits	set	3974
   128  0000                     _LATDbits	set	3964
   129  0000                     _PWM7CONbits	set	4001
   130  0000                     _PWM6CONbits	set	4004
   131  0000                     _PWM7DCH	set	4000
   132  0000                     _PWM6DCH	set	4003
   133  0000                     _LATGbits	set	3967
   134  0000                     _LATCbits	set	3963
   135  0000                     _LATEbits	set	3965
   136  0000                     _TRISGbits	set	3975
   137  0000                     _TRISCbits	set	3971
   138  0000                     _TRISEbits	set	3973
   139  0000                     _T2PR	set	4028
   140  0000                     _T2CLKCONbits	set	4031
   141  0000                     _T2HLTbits	set	4030
   142  0000                     _T2CONbits	set	4029
   143  0000                     _TRISDbits	set	3972
   144                           
   145                           	psect	smallconst
   146  000E00                     __psmallconst:
   147                           	callstack 0
   148  000E00  00                 	db	0
   149  000E01                     STR_1:
   150  000E01  25                 	db	37
   151  000E02  69                 	db	105	;'i'
   152  000E03  20                 	db	32
   153  000E04  25                 	db	37
   154  000E05  69                 	db	105	;'i'
   155  000E06  20                 	db	32
   156  000E07  25                 	db	37
   157  000E08  69                 	db	105	;'i'
   158  000E09  20                 	db	32
   159  000E0A  25                 	db	37
   160  000E0B  69                 	db	105	;'i'
   161  000E0C  0A                 	db	10
   162  000E0D  00                 	db	0
   163  000E0E  00                 	db	0	; dummy byte at the end
   164  0000                     
   165                           ; #config settings
   166                           
   167                           	psect	cinit
   168  001BE4                     __pcinit:
   169                           	callstack 0
   170  001BE4                     start_initialization:
   171                           	callstack 0
   172  001BE4                     __initialization:
   173                           	callstack 0
   174                           
   175                           ; Clear objects allocated to BANK1 (60 bytes)
   176  001BE4  EE01  F000         	lfsr	0,__pbssBANK1
   177  001BE8  0E3C               	movlw	60
   178  001BEA                     clear_0:
   179  001BEA  6AEE               	clrf	postinc0,c
   180  001BEC  06E8               	decf	wreg,f,c
   181  001BEE  E1FD               	bnz	clear_0
   182                           
   183                           ; Clear objects allocated to BANK0 (62 bytes)
   184  001BF0  EE00  F0B6         	lfsr	0,__pbssBANK0
   185  001BF4  0E3E               	movlw	62
   186  001BF6                     clear_1:
   187  001BF6  6AEE               	clrf	postinc0,c
   188  001BF8  06E8               	decf	wreg,f,c
   189  001BFA  E1FD               	bnz	clear_1
   190                           
   191                           ; Clear objects allocated to COMRAM (4 bytes)
   192  001BFC  6A5C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   193  001BFE  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   194  001C00  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   195  001C02  6A59               	clrf	__pbssCOMRAM& (0+255),c
   196  001C04                     end_of_initialization:
   197                           	callstack 0
   198  001C04                     __end_of__initialization:
   199                           	callstack 0
   200  001C04  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   201  001C06  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   202  001C08  0E00               	movlw	low (__Lsmallconst shr (0+16))
   203  001C0A  6EF8               	movwf	tblptru,c
   204  001C0C  0E0E               	movlw	high __Lsmallconst
   205  001C0E  6EF7               	movwf	tblptrh,c
   206  001C10  0100               	movlb	0
   207  001C12  EFC9  F00A         	goto	_main	;jump to C main() function
   208                           
   209                           	psect	bssCOMRAM
   210  000059                     __pbssCOMRAM:
   211                           	callstack 0
   212  000059                     _TxBufReadCnt:
   213                           	callstack 0
   214  000059                     	ds	1
   215  00005A                     _TxBufWriteCnt:
   216                           	callstack 0
   217  00005A                     	ds	1
   218  00005B                     _RxBufReadCnt:
   219                           	callstack 0
   220  00005B                     	ds	1
   221  00005C                     _RxBufWriteCnt:
   222                           	callstack 0
   223  00005C                     	ds	1
   224                           
   225                           	psect	bssBANK0
   226  0000B6                     __pbssBANK0:
   227                           	callstack 0
   228  0000B6                     _EUSART4RXbuf:
   229                           	callstack 0
   230  0000B6                     	ds	20
   231  0000CA                     _nout:
   232                           	callstack 0
   233  0000CA                     	ds	2
   234  0000CC                     _width:
   235                           	callstack 0
   236  0000CC                     	ds	2
   237  0000CE                     _prec:
   238                           	callstack 0
   239  0000CE                     	ds	2
   240  0000D0                     _flags:
   241                           	callstack 0
   242  0000D0                     	ds	2
   243  0000D2                     _battery_flag:
   244                           	callstack 0
   245  0000D2                     	ds	1
   246  0000D3                     _card_flag:
   247                           	callstack 0
   248  0000D3                     	ds	1
   249  0000D4                     _dbuf:
   250                           	callstack 0
   251  0000D4                     	ds	32
   252                           
   253                           	psect	bssBANK1
   254  000100                     __pbssBANK1:
   255                           	callstack 0
   256  000100                     _EUSART4TXbuf:
   257                           	callstack 0
   258  000100                     	ds	60
   259                           
   260                           	psect	cstackBANK0
   261  000060                     __pcstackBANK0:
   262                           	callstack 0
   263  000060                     ?_sprintf:
   264                           	callstack 0
   265  000060                     sprintf@s:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x0
   269  000060                     	ds	2
   270  000062                     sprintf@fmt:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x2
   274  000062                     	ds	10
   275  00006C                     sprintf@ap:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xC
   279  00006C                     	ds	2
   280  00006E                     sprintf@f:
   281                           	callstack 0
   282                           
   283                           ; 6 bytes @ 0xE
   284  00006E                     	ds	6
   285  000074                     ??_main:
   286                           
   287                           ; 1 bytes @ 0x14
   288  000074                     	ds	2
   289  000076                     main@buf:
   290                           	callstack 0
   291                           
   292                           ; 40 bytes @ 0x16
   293  000076                     	ds	40
   294  00009E                     main@initial:
   295                           	callstack 0
   296                           
   297                           ; 8 bytes @ 0x3E
   298  00009E                     	ds	8
   299  0000A6                     main@tmpR:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x46
   303  0000A6                     	ds	2
   304  0000A8                     main@tmpG:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x48
   308  0000A8                     	ds	2
   309  0000AA                     main@tmpB:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x4A
   313  0000AA                     	ds	2
   314  0000AC                     main@tmpC:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x4C
   318  0000AC                     	ds	2
   319  0000AE                     main@current:
   320                           	callstack 0
   321                           
   322                           ; 8 bytes @ 0x4E
   323  0000AE                     	ds	8
   324                           
   325                           	psect	cstackCOMRAM
   326  000001                     __pcstackCOMRAM:
   327                           	callstack 0
   328  000001                     ??_LowISR:
   329  000001                     
   330                           ; 1 bytes @ 0x0
   331  000001                     	ds	1
   332  000002                     ??_I2C_2_Master_Idle:
   333  000002                     ?_strlen:
   334                           	callstack 0
   335  000002                     ?___aodiv:
   336                           	callstack 0
   337  000002                     ?___aomod:
   338                           	callstack 0
   339  000002                     colorclick_toggleClearLED@toggle:
   340                           	callstack 0
   341  000002                     sendCharSerial4@charToSend:
   342                           	callstack 0
   343  000002                     fputc@c:
   344                           	callstack 0
   345  000002                     strlen@s:
   346                           	callstack 0
   347  000002                     ___aodiv@dividend:
   348                           	callstack 0
   349  000002                     ___aomod@dividend:
   350                           	callstack 0
   351                           
   352                           ; 8 bytes @ 0x1
   353  000002                     	ds	1
   354  000003                     ??_I2C_2_Master_Read:
   355  000003                     I2C_2_Master_Write@data_byte:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x2
   359  000003                     	ds	1
   360  000004                     I2C_2_Master_Read@ack:
   361                           	callstack 0
   362  000004                     colorclick_writetoaddr@value:
   363                           	callstack 0
   364  000004                     sendStringSerial4@string:
   365                           	callstack 0
   366  000004                     fputc@fp:
   367                           	callstack 0
   368  000004                     strlen@a:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x3
   372  000004                     	ds	1
   373  000005                     I2C_2_Master_Read@tmp:
   374                           	callstack 0
   375  000005                     colorclick_writetoaddr@address:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x4
   379  000005                     	ds	1
   380  000006                     ??_colorclick_init:
   381  000006                     ??_sendStringSerial4:
   382  000006                     ??_fputc:
   383  000006                     ?_colorclick_readRed:
   384                           	callstack 0
   385  000006                     ?_colorclick_readGreen:
   386                           	callstack 0
   387  000006                     ?_colorclick_readBlue:
   388                           	callstack 0
   389  000006                     ?_colorclick_readClear:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x5
   393  000006                     	ds	2
   394  000008                     ??_colorclick_readRed:
   395  000008                     ??_colorclick_readGreen:
   396  000008                     ??_colorclick_readBlue:
   397  000008                     ??_colorclick_readClear:
   398                           
   399                           ; 1 bytes @ 0x7
   400  000008                     	ds	2
   401  00000A                     ___aodiv@divisor:
   402                           	callstack 0
   403  00000A                     ___aomod@divisor:
   404                           	callstack 0
   405                           
   406                           ; 8 bytes @ 0x9
   407  00000A                     	ds	1
   408  00000B                     colorclick_readRed@tmp:
   409                           	callstack 0
   410  00000B                     colorclick_readGreen@tmp:
   411                           	callstack 0
   412  00000B                     colorclick_readBlue@tmp:
   413                           	callstack 0
   414  00000B                     colorclick_readClear@tmp:
   415                           	callstack 0
   416  00000B                     fputs@s:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0xA
   420  00000B                     	ds	2
   421  00000D                     ?_colorclick_readColour:
   422                           	callstack 0
   423  00000D                     fputs@fp:
   424                           	callstack 0
   425  00000D                     colorclick_readColour@current:
   426                           	callstack 0
   427                           
   428                           ; 8 bytes @ 0xC
   429  00000D                     	ds	2
   430  00000F                     fputs@c:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0xE
   434  00000F                     	ds	1
   435  000010                     fputs@i:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xF
   439  000010                     	ds	2
   440  000012                     ?_pad:
   441                           	callstack 0
   442  000012                     ___aodiv@counter:
   443                           	callstack 0
   444  000012                     ___aomod@counter:
   445                           	callstack 0
   446  000012                     pad@fp:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x11
   450  000012                     	ds	1
   451  000013                     ___aodiv@sign:
   452                           	callstack 0
   453  000013                     ___aomod@sign:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x12
   457  000013                     	ds	1
   458  000014                     ?_abs:
   459                           	callstack 0
   460  000014                     pad@buf:
   461                           	callstack 0
   462  000014                     abs@a:
   463                           	callstack 0
   464  000014                     ___aodiv@quotient:
   465                           	callstack 0
   466                           
   467                           ; 8 bytes @ 0x13
   468  000014                     	ds	1
   469  000015                     
   470                           ; 1 bytes @ 0x14
   471  000015                     	ds	1
   472  000016                     ??_abs:
   473  000016                     pad@p:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x15
   477  000016                     	ds	2
   478  000018                     ??_pad:
   479                           
   480                           ; 1 bytes @ 0x17
   481  000018                     	ds	1
   482  000019                     pad@i:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x18
   486  000019                     	ds	2
   487  00001B                     pad@w:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x1A
   491  00001B                     	ds	2
   492  00001D                     ?_dtoa:
   493                           	callstack 0
   494  00001D                     dtoa@fp:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x1C
   498  00001D                     	ds	2
   499  00001F                     dtoa@d:
   500                           	callstack 0
   501                           
   502                           ; 8 bytes @ 0x1E
   503  00001F                     	ds	8
   504  000027                     ??_dtoa:
   505                           
   506                           ; 1 bytes @ 0x26
   507  000027                     	ds	8
   508  00002F                     _dtoa$2369:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x2E
   512  00002F                     	ds	2
   513  000031                     dtoa@p:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x30
   517  000031                     	ds	2
   518  000033                     dtoa@w:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x32
   522  000033                     	ds	2
   523  000035                     dtoa@s:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x34
   527  000035                     	ds	2
   528  000037                     dtoa@n:
   529                           	callstack 0
   530                           
   531                           ; 8 bytes @ 0x36
   532  000037                     	ds	8
   533  00003F                     dtoa@i:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x3E
   537  00003F                     	ds	2
   538  000041                     ?_vfpfcnvrt:
   539                           	callstack 0
   540  000041                     vfpfcnvrt@fp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x40
   544  000041                     	ds	2
   545  000043                     vfpfcnvrt@fmt:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x42
   549  000043                     	ds	2
   550  000045                     vfpfcnvrt@ap:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x44
   554  000045                     	ds	2
   555  000047                     ??_vfpfcnvrt:
   556                           
   557                           ; 1 bytes @ 0x46
   558  000047                     	ds	2
   559  000049                     vfpfcnvrt@ll:
   560                           	callstack 0
   561                           
   562                           ; 8 bytes @ 0x48
   563  000049                     	ds	8
   564  000051                     ?_vfprintf:
   565                           	callstack 0
   566  000051                     vfprintf@fp:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x50
   570  000051                     	ds	2
   571  000053                     vfprintf@fmt:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x52
   575  000053                     	ds	2
   576  000055                     vfprintf@ap:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x54
   580  000055                     	ds	2
   581  000057                     vfprintf@cfmt:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x56
   585  000057                     	ds	2
   586  000059                     
   587                           ; 1 bytes @ 0x58
   588 ;;
   589 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   590 ;;
   591 ;; *************** function _main *****************
   592 ;; Defined at:
   593 ;;		line 37 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  buf            40   22[BANK0 ] unsigned char [40]
   598 ;;  tmpC            2   76[BANK0 ] unsigned int 
   599 ;;  tmpB            2   74[BANK0 ] unsigned int 
   600 ;;  tmpG            2   72[BANK0 ] unsigned int 
   601 ;;  tmpR            2   70[BANK0 ] unsigned int 
   602 ;;  current         8   78[BANK0 ] struct .
   603 ;;  initial         8   62[BANK0 ] struct .
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   614 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   616 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   617 ;;Total ram usage:       66 bytes
   618 ;; Hardware stack levels required when called: 10
   619 ;; This function calls:
   620 ;;		_ADC_init
   621 ;;		_USART4_init
   622 ;;		_colorclick_init
   623 ;;		_colorclick_readColour
   624 ;;		_interrupts_init
   625 ;;		_sendStringSerial4
   626 ;;		_sprintf
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text0
   633  001592                     __ptext0:
   634                           	callstack 0
   635  001592                     _main:
   636                           	callstack 21
   637  001592                     
   638                           ;main.c: 39:     ADC_init();
   639  001592  EC65  F00E         	call	_ADC_init	;wreg free
   640  001596                     
   641                           ;main.c: 40:     colorclick_init();
   642  001596  EC7D  F00D         	call	_colorclick_init	;wreg free
   643  00159A                     
   644                           ;main.c: 41:     interrupts_init();
   645  00159A  EC9D  F00D         	call	_interrupts_init	;wreg free
   646                           
   647                           ;main.c: 43:     USART4_init();
   648  00159E  EC55  F00E         	call	_USART4_init	;wreg free
   649  0015A2                     
   650                           ;main.c: 46:     RGB_val initial;;main.c: 47:     RGB_val current;;main.c: 48:     initi
      +                          al = colorclick_readColour(initial);
   651  0015A2  EE20  F09E         	lfsr	2,main@initial
   652  0015A6  EE00  F00D         	lfsr	0,colorclick_readColour@current
   653  0015AA  0E07               	movlw	7
   654  0015AC                     u1481:
   655  0015AC  CFDB FFEB          	movff	plusw2,plusw0
   656  0015B0  06E8               	decf	wreg,f,c
   657  0015B2  E2FC               	bc	u1481
   658  0015B4  EC1A  F00D         	call	_colorclick_readColour	;wreg free
   659  0015B8  EE20  F09E         	lfsr	2,main@initial
   660  0015BC  0E07               	movlw	7
   661  0015BE                     u1491:
   662  0015BE  CFEB FFDB          	movff	plusw0,plusw2
   663  0015C2  06E8               	decf	wreg,f,c
   664  0015C4  E2FC               	bc	u1491
   665  0015C6                     l2359:
   666                           
   667                           ;main.c: 54:         current = colorclick_readColour(current);
   668  0015C6  EE20  F0AE         	lfsr	2,main@current
   669  0015CA  EE00  F00D         	lfsr	0,colorclick_readColour@current
   670  0015CE  0E07               	movlw	7
   671  0015D0                     u1501:
   672  0015D0  CFDB FFEB          	movff	plusw2,plusw0
   673  0015D4  06E8               	decf	wreg,f,c
   674  0015D6  E2FC               	bc	u1501
   675  0015D8  EC1A  F00D         	call	_colorclick_readColour	;wreg free
   676  0015DC  EE20  F0AE         	lfsr	2,main@current
   677  0015E0  0E07               	movlw	7
   678  0015E2                     u1511:
   679  0015E2  CFEB FFDB          	movff	plusw0,plusw2
   680  0015E6  06E8               	decf	wreg,f,c
   681  0015E8  E2FC               	bc	u1511
   682  0015EA                     
   683                           ;main.c: 57:         char buf[40];;main.c: 58:         unsigned int tmpR = current.R;
   684  0015EA  C0AE  F0A6         	movff	main@current,main@tmpR
   685  0015EE  C0AF  F0A7         	movff	main@current+1,main@tmpR+1
   686  0015F2                     
   687                           ;main.c: 59:         unsigned int tmpG = current.G;
   688  0015F2  C0B0  F0A8         	movff	main@current+2,main@tmpG
   689  0015F6  C0B1  F0A9         	movff	main@current+3,main@tmpG+1
   690  0015FA                     
   691                           ;main.c: 60:         unsigned int tmpB = current.B;
   692  0015FA  C0B2  F0AA         	movff	main@current+4,main@tmpB
   693  0015FE  C0B3  F0AB         	movff	main@current+5,main@tmpB+1
   694  001602                     
   695                           ;main.c: 61:         unsigned int tmpC = current.C;
   696  001602  C0B4  F0AC         	movff	main@current+6,main@tmpC
   697  001606  C0B5  F0AD         	movff	main@current+7,main@tmpC+1
   698  00160A                     
   699                           ;main.c: 62:         sprintf(buf,"%i %i %i %i\n",tmpR,tmpG,tmpB,tmpC);
   700  00160A  0E76               	movlw	low main@buf
   701  00160C  0100               	movlb	0	; () banked
   702  00160E  6F60               	movwf	sprintf@s& (0+255),b
   703  001610  0E00               	movlw	high main@buf
   704  001612  6F61               	movwf	(sprintf@s+1)& (0+255),b
   705  001614  0E01               	movlw	low STR_1
   706  001616  6F62               	movwf	sprintf@fmt& (0+255),b
   707  001618  0E0E               	movlw	high STR_1
   708  00161A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   709  00161C  C0A6  F064         	movff	main@tmpR,?_sprintf+4
   710  001620  C0A7  F065         	movff	main@tmpR+1,?_sprintf+5
   711  001624  C0A8  F066         	movff	main@tmpG,?_sprintf+6
   712  001628  C0A9  F067         	movff	main@tmpG+1,?_sprintf+7
   713  00162C  C0AA  F068         	movff	main@tmpB,?_sprintf+8
   714  001630  C0AB  F069         	movff	main@tmpB+1,?_sprintf+9
   715  001634  C0AC  F06A         	movff	main@tmpC,?_sprintf+10
   716  001638  C0AD  F06B         	movff	main@tmpC+1,?_sprintf+11
   717  00163C  EC2F  F00C         	call	_sprintf	;wreg free
   718  001640                     
   719                           ;main.c: 63:         sendStringSerial4(buf);
   720  001640  0E76               	movlw	low main@buf
   721  001642  6E04               	movwf	sendStringSerial4@string^0,c
   722  001644  0E00               	movlw	high main@buf
   723  001646  6E05               	movwf	(sendStringSerial4@string+1)^0,c
   724  001648  ECBB  F00D         	call	_sendStringSerial4	;wreg free
   725  00164C                     
   726                           ;main.c: 64:         _delay((unsigned long)((500)*(64000000/4000.0)));
   727  00164C  0E29               	movlw	41
   728  00164E  0100               	movlb	0	; () banked
   729  001650  6F75               	movwf	(??_main+1)& (0+255),b
   730  001652  0E96               	movlw	150
   731  001654  6F74               	movwf	??_main& (0+255),b
   732  001656  0E7F               	movlw	127
   733  001658                     u1527:
   734  001658  2EE8               	decfsz	wreg,f,c
   735  00165A  D7FE               	bra	u1527
   736  00165C  2F74               	decfsz	??_main& (0+255),f,b
   737  00165E  D7FC               	bra	u1527
   738  001660  2F75               	decfsz	(??_main+1)& (0+255),f,b
   739  001662  D7FA               	bra	u1527
   740  001664  EFE3  F00A         	goto	l2359
   741  001668  EF13  F000         	goto	start
   742  00166C                     __end_of_main:
   743                           	callstack 0
   744                           
   745 ;; *************** function _sprintf *****************
   746 ;; Defined at:
   747 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  s               2    0[BANK0 ] PTR unsigned char 
   750 ;;		 -> main@buf(40), 
   751 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   752 ;;		 -> STR_1(13), 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  f               6   14[BANK0 ] struct _IO_FILE
   755 ;;  ap              2   12[BANK0 ] PTR void [1]
   756 ;;		 -> ?_sprintf(2), 
   757 ;;  ret             2    0        int 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  2    0[BANK0 ] int 
   760 ;; Registers used:
   761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   767 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   768 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   770 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   771 ;;Total ram usage:       20 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; Hardware stack levels required when called: 9
   774 ;; This function calls:
   775 ;;		_vfprintf
   776 ;; This function is called by:
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	text1
   782  00185E                     __ptext1:
   783                           	callstack 0
   784  00185E                     _sprintf:
   785                           	callstack 21
   786  00185E  0E64               	movlw	low (?_sprintf+4)
   787  001860  0100               	movlb	0	; () banked
   788  001862  6F6C               	movwf	sprintf@ap& (0+255),b
   789  001864  0E00               	movlw	high (?_sprintf+4)
   790  001866  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
   791  001868  C060  F06E         	movff	sprintf@s,sprintf@f
   792  00186C  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
   793  001870                     
   794                           ; BSR set to: 0
   795  001870  0E00               	movlw	0
   796  001872  6F71               	movwf	(sprintf@f+3)& (0+255),b
   797  001874  0E00               	movlw	0
   798  001876  6F70               	movwf	(sprintf@f+2)& (0+255),b
   799  001878                     
   800                           ; BSR set to: 0
   801  001878  0E00               	movlw	0
   802  00187A  6F73               	movwf	(sprintf@f+5)& (0+255),b
   803  00187C  0E00               	movlw	0
   804  00187E  6F72               	movwf	(sprintf@f+4)& (0+255),b
   805  001880                     
   806                           ; BSR set to: 0
   807  001880  0E6E               	movlw	low sprintf@f
   808  001882  6E51               	movwf	vfprintf@fp^0,c
   809  001884  0E00               	movlw	high sprintf@f
   810  001886  6E52               	movwf	(vfprintf@fp+1)^0,c
   811  001888  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
   812  00188C  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
   813  001890  0E6C               	movlw	low sprintf@ap
   814  001892  6E55               	movwf	vfprintf@ap^0,c
   815  001894  0E00               	movlw	high sprintf@ap
   816  001896  6E56               	movwf	(vfprintf@ap+1)^0,c
   817  001898  ECFE  F00B         	call	_vfprintf	;wreg free
   818  00189C  0100               	movlb	0	; () banked
   819  00189E  5170               	movf	(sprintf@f+2)& (0+255),w,b
   820  0018A0  2560               	addwf	sprintf@s& (0+255),w,b
   821  0018A2  6ED9               	movwf	fsr2l,c
   822  0018A4  5171               	movf	(sprintf@f+3)& (0+255),w,b
   823  0018A6  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
   824  0018A8  6EDA               	movwf	fsr2h,c
   825  0018AA  0E00               	movlw	0
   826  0018AC  6EDF               	movwf	indf2,c
   827  0018AE                     
   828                           ; BSR set to: 0
   829  0018AE  0012               	return		;funcret
   830  0018B0                     __end_of_sprintf:
   831                           	callstack 0
   832                           
   833 ;; *************** function _vfprintf *****************
   834 ;; Defined at:
   835 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
   838 ;;		 -> sprintf@f(6), 
   839 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
   840 ;;		 -> STR_1(13), 
   841 ;;  ap              2   84[COMRAM] PTR PTR void 
   842 ;;		 -> sprintf@ap(2), 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
   845 ;;		 -> STR_1(13), 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  2   80[COMRAM] int 
   848 ;; Registers used:
   849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   855 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   858 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   859 ;;Total ram usage:        8 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 8
   862 ;; This function calls:
   863 ;;		_vfpfcnvrt
   864 ;; This function is called by:
   865 ;;		_sprintf
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text2
   870  0017FC                     __ptext2:
   871                           	callstack 0
   872  0017FC                     _vfprintf:
   873                           	callstack 21
   874  0017FC                     
   875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   876  0017FC  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
   877  001800  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   878  001804                     
   879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   880  001804  0E00               	movlw	0
   881  001806  0100               	movlb	0	; () banked
   882  001808  6FCB               	movwf	(_nout+1)& (0+255),b
   883  00180A  0E00               	movlw	0
   884  00180C  6FCA               	movwf	_nout& (0+255),b
   885                           
   886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   887  00180E  EF1C  F00C         	goto	l2179
   888  001812                     l2177:
   889                           
   890                           ; BSR set to: 0
   891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   892  001812  C051  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
   893  001816  C052  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   894  00181A  0E57               	movlw	low vfprintf@cfmt
   895  00181C  6E43               	movwf	vfpfcnvrt@fmt^0,c
   896  00181E  0E00               	movlw	high vfprintf@cfmt
   897  001820  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
   898  001822  C055  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
   899  001826  C056  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   900  00182A  EC79  F008         	call	_vfpfcnvrt	;wreg free
   901  00182E  5041               	movf	?_vfpfcnvrt^0,w,c
   902  001830  0100               	movlb	0	; () banked
   903  001832  27CA               	addwf	_nout& (0+255),f,b
   904  001834  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
   905  001836  23CB               	addwfc	(_nout+1)& (0+255),f,b
   906  001838                     l2179:
   907                           
   908                           ; BSR set to: 0
   909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   910  001838  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
   911  00183C  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   912  001840                     	if	0	;tblptru may be non-zero
   913  001840                     	endif
   914  001840                     	if	0	;tblptru may be non-zero
   915  001840                     	endif
   916  001840  0008               	tblrd		*
   917  001842  50F5               	movf	tablat,w,c
   918  001844  0900               	iorlw	0
   919  001846  A4D8               	btfss	status,2,c
   920  001848  EF28  F00C         	goto	u1371
   921  00184C  EF2A  F00C         	goto	u1370
   922  001850                     u1371:
   923  001850  EF09  F00C         	goto	l2177
   924  001854                     u1370:
   925  001854                     
   926                           ; BSR set to: 0
   927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   928  001854  C0CA  F051         	movff	_nout,?_vfprintf
   929  001858  C0CB  F052         	movff	_nout+1,?_vfprintf+1
   930  00185C                     
   931                           ; BSR set to: 0
   932  00185C  0012               	return		;funcret
   933  00185E                     __end_of_vfprintf:
   934                           	callstack 0
   935                           
   936 ;; *************** function _vfpfcnvrt *****************
   937 ;; Defined at:
   938 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
   941 ;;		 -> sprintf@f(6), 
   942 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
   943 ;;		 -> vfprintf@cfmt(2), 
   944 ;;  ap              2   68[COMRAM] PTR PTR void 
   945 ;;		 -> sprintf@ap(2), 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  ll              8   72[COMRAM] long long 
   948 ;;  llu             8    0        unsigned long long 
   949 ;;  f               4    0        unsigned long long 
   950 ;;  vp              3    0        PTR void 
   951 ;;  ct              3    0        unsigned char [3]
   952 ;;  cp              3    0        PTR unsigned char 
   953 ;;  i               2    0        int 
   954 ;;  done            2    0        int 
   955 ;;  c               1    0        unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  2   64[COMRAM] int 
   958 ;; Registers used:
   959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   965 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   966 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   968 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   969 ;;Total ram usage:       16 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 7
   972 ;; This function calls:
   973 ;;		_dtoa
   974 ;;		_fputc
   975 ;; This function is called by:
   976 ;;		_vfprintf
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text3
   981  0010F2                     __ptext3:
   982                           	callstack 0
   983  0010F2                     _vfpfcnvrt:
   984                           	callstack 21
   985  0010F2                     
   986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   987  0010F2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   988  0010F6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   989  0010FA  CFDE FFF6          	movff	postinc2,tblptrl
   990  0010FE  CFDD FFF7          	movff	postdec2,tblptrh
   991  001102                     	if	0	;tblptru may be non-zero
   992  001102                     	endif
   993  001102                     	if	0	;tblptru may be non-zero
   994  001102                     	endif
   995  001102  0008               	tblrd		*
   996  001104  50F5               	movf	tablat,w,c
   997  001106  0A25               	xorlw	37
   998  001108  A4D8               	btfss	status,2,c
   999  00110A  EF89  F008         	goto	u1291
  1000  00110E  EF8B  F008         	goto	u1290
  1001  001112                     u1291:
  1002  001112  EF37  F009         	goto	l2123
  1003  001116                     u1290:
  1004  001116                     
  1005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1006  001116  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1007  00111A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1008  00111E  2ADE               	incf	postinc2,f,c
  1009  001120  0E00               	movlw	0
  1010  001122  22DD               	addwfc	postdec2,f,c
  1011  001124                     
  1012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1013  001124  0E00               	movlw	0
  1014  001126  0100               	movlb	0	; () banked
  1015  001128  6FCD               	movwf	(_width+1)& (0+255),b
  1016  00112A  0E00               	movlw	0
  1017  00112C  6FCC               	movwf	_width& (0+255),b
  1018  00112E  C0CC  F0D0         	movff	_width,_flags
  1019  001132  C0CD  F0D1         	movff	_width+1,_flags+1
  1020  001136                     
  1021                           ; BSR set to: 0
  1022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1023  001136  69CE               	setf	_prec& (0+255),b
  1024  001138  69CF               	setf	(_prec+1)& (0+255),b
  1025  00113A                     
  1026                           ; BSR set to: 0
  1027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1028  00113A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1029  00113E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1030  001142  CFDE FFF6          	movff	postinc2,tblptrl
  1031  001146  CFDD FFF7          	movff	postdec2,tblptrh
  1032  00114A                     	if	0	;tblptru may be non-zero
  1033  00114A                     	endif
  1034  00114A                     	if	0	;tblptru may be non-zero
  1035  00114A                     	endif
  1036  00114A  0008               	tblrd		*
  1037  00114C  50F5               	movf	tablat,w,c
  1038  00114E  0A64               	xorlw	100
  1039  001150  B4D8               	btfsc	status,2,c
  1040  001152  EFAD  F008         	goto	u1301
  1041  001156  EFAF  F008         	goto	u1300
  1042  00115A                     u1301:
  1043  00115A  EFC1  F008         	goto	l2101
  1044  00115E                     u1300:
  1045  00115E                     
  1046                           ; BSR set to: 0
  1047  00115E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1048  001162  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1049  001166  CFDE FFF6          	movff	postinc2,tblptrl
  1050  00116A  CFDD FFF7          	movff	postdec2,tblptrh
  1051  00116E                     	if	0	;tblptru may be non-zero
  1052  00116E                     	endif
  1053  00116E                     	if	0	;tblptru may be non-zero
  1054  00116E                     	endif
  1055  00116E  0008               	tblrd		*
  1056  001170  50F5               	movf	tablat,w,c
  1057  001172  0A69               	xorlw	105
  1058  001174  A4D8               	btfss	status,2,c
  1059  001176  EFBF  F008         	goto	u1311
  1060  00117A  EFC1  F008         	goto	u1310
  1061  00117E                     u1311:
  1062  00117E  EF01  F009         	goto	l2107
  1063  001182                     u1310:
  1064  001182                     l2101:
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1068  001182  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1069  001186  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1070  00118A  2ADE               	incf	postinc2,f,c
  1071  00118C  0E00               	movlw	0
  1072  00118E  22DD               	addwfc	postdec2,f,c
  1073                           
  1074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1075  001190  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1076  001194  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1077  001198  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1078  00119C  0E02               	movlw	2
  1079  00119E  26DE               	addwf	postinc2,f,c
  1080  0011A0  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1081  0011A4  0E00               	movlw	0
  1082  0011A6  22DD               	addwfc	postdec2,f,c
  1083  0011A8  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1084  0011AC  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1085  0011B0  CFDE F049          	movff	postinc2,vfpfcnvrt@ll
  1086  0011B4  CFDD F04A          	movff	postdec2,vfpfcnvrt@ll+1
  1087  0011B8  0E00               	movlw	0
  1088  0011BA  BE4A               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1089  0011BC  0EFF               	movlw	-1
  1090  0011BE  6E4B               	movwf	(vfpfcnvrt@ll+2)^0,c
  1091  0011C0  6E4C               	movwf	(vfpfcnvrt@ll+3)^0,c
  1092  0011C2  6E4D               	movwf	(vfpfcnvrt@ll+4)^0,c
  1093  0011C4  6E4E               	movwf	(vfpfcnvrt@ll+5)^0,c
  1094  0011C6  6E4F               	movwf	(vfpfcnvrt@ll+6)^0,c
  1095  0011C8  6E50               	movwf	(vfpfcnvrt@ll+7)^0,c
  1096  0011CA                     
  1097                           ; BSR set to: 0
  1098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1099  0011CA  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  1100  0011CE  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1101  0011D2  C049  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  1102  0011D6  C04A  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1103  0011DA  C04B  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1104  0011DE  C04C  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1105  0011E2  C04D  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1106  0011E6  C04E  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1107  0011EA  C04F  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1108  0011EE  C050  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1109  0011F2  EC08  F007         	call	_dtoa	;wreg free
  1110  0011F6  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  1111  0011FA  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1112  0011FE  EF52  F009         	goto	l1164
  1113  001202                     l2107:
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1117  001202  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1118  001206  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1119  00120A  CFDE FFF6          	movff	postinc2,tblptrl
  1120  00120E  CFDD FFF7          	movff	postdec2,tblptrh
  1121  001212                     	if	0	;tblptru may be non-zero
  1122  001212                     	endif
  1123  001212                     	if	0	;tblptru may be non-zero
  1124  001212                     	endif
  1125  001212  0008               	tblrd		*
  1126  001214  50F5               	movf	tablat,w,c
  1127  001216  0A25               	xorlw	37
  1128  001218  A4D8               	btfss	status,2,c
  1129  00121A  EF11  F009         	goto	u1321
  1130  00121E  EF13  F009         	goto	u1320
  1131  001222                     u1321:
  1132  001222  EF2A  F009         	goto	l2117
  1133  001226                     u1320:
  1134  001226                     
  1135                           ; BSR set to: 0
  1136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1137  001226  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1138  00122A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1139  00122E  2ADE               	incf	postinc2,f,c
  1140  001230  0E00               	movlw	0
  1141  001232  22DD               	addwfc	postdec2,f,c
  1142  001234                     
  1143                           ; BSR set to: 0
  1144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1145  001234  0E00               	movlw	0
  1146  001236  6E03               	movwf	(fputc@c+1)^0,c
  1147  001238  0E25               	movlw	37
  1148  00123A  6E02               	movwf	fputc@c^0,c
  1149  00123C  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1150  001240  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1151  001244  EC36  F00B         	call	_fputc	;wreg free
  1152  001248                     l2113:
  1153                           
  1154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1155  001248  0E00               	movlw	0
  1156  00124A  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  1157  00124C  0E01               	movlw	1
  1158  00124E  6E41               	movwf	?_vfpfcnvrt^0,c
  1159  001250  EF52  F009         	goto	l1164
  1160  001254                     l2117:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1164  001254  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1165  001258  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1166  00125C  2ADE               	incf	postinc2,f,c
  1167  00125E  0E00               	movlw	0
  1168  001260  22DD               	addwfc	postdec2,f,c
  1169  001262                     
  1170                           ; BSR set to: 0
  1171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1172  001262  0E00               	movlw	0
  1173  001264  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  1174  001266  0E00               	movlw	0
  1175  001268  6E41               	movwf	?_vfpfcnvrt^0,c
  1176  00126A  EF52  F009         	goto	l1164
  1177  00126E                     l2123:
  1178                           
  1179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1180  00126E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1181  001272  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1182  001276  CFDE FFF6          	movff	postinc2,tblptrl
  1183  00127A  CFDD FFF7          	movff	postdec2,tblptrh
  1184  00127E                     	if	0	;tblptru may be non-zero
  1185  00127E                     	endif
  1186  00127E                     	if	0	;tblptru may be non-zero
  1187  00127E                     	endif
  1188  00127E  0008               	tblrd		*
  1189  001280  50F5               	movf	tablat,w,c
  1190  001282  6E02               	movwf	fputc@c^0,c
  1191  001284  6A03               	clrf	(fputc@c+1)^0,c
  1192  001286  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1193  00128A  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1194  00128E  EC36  F00B         	call	_fputc	;wreg free
  1195  001292                     
  1196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1197  001292  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1198  001296  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1199  00129A  2ADE               	incf	postinc2,f,c
  1200  00129C  0E00               	movlw	0
  1201  00129E  22DD               	addwfc	postdec2,f,c
  1202  0012A0  EF24  F009         	goto	l2113
  1203  0012A4                     l1164:
  1204  0012A4  0012               	return		;funcret
  1205  0012A6                     __end_of_vfpfcnvrt:
  1206                           	callstack 0
  1207                           
  1208 ;; *************** function _dtoa *****************
  1209 ;; Defined at:
  1210 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1213 ;;		 -> sprintf@f(6), 
  1214 ;;  d               8   30[COMRAM] long long 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  n               8   54[COMRAM] long long 
  1217 ;;  i               2   62[COMRAM] int 
  1218 ;;  s               2   52[COMRAM] int 
  1219 ;;  w               2   50[COMRAM] int 
  1220 ;;  p               2   48[COMRAM] int 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  2   28[COMRAM] int 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1230 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;Total ram usage:       36 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 6
  1237 ;; This function calls:
  1238 ;;		___aodiv
  1239 ;;		___aomod
  1240 ;;		_abs
  1241 ;;		_pad
  1242 ;; This function is called by:
  1243 ;;		_vfpfcnvrt
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text4
  1248  000E10                     __ptext4:
  1249                           	callstack 0
  1250  000E10                     _dtoa:
  1251                           	callstack 21
  1252  000E10                     
  1253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1254  000E10  C01F  F037         	movff	dtoa@d,dtoa@n
  1255  000E14  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  1256  000E18  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  1257  000E1C  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  1258  000E20  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  1259  000E24  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  1260  000E28  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  1261  000E2C  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  1262  000E30                     
  1263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1264  000E30  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  1265  000E32  EF1D  F007         	goto	u1121
  1266  000E36  EF20  F007         	goto	u1120
  1267  000E3A                     u1121:
  1268  000E3A  0E01               	movlw	1
  1269  000E3C  EF21  F007         	goto	u1130
  1270  000E40                     u1120:
  1271  000E40  0E00               	movlw	0
  1272  000E42                     u1130:
  1273  000E42  6E35               	movwf	dtoa@s^0,c
  1274  000E44  6A36               	clrf	(dtoa@s+1)^0,c
  1275                           
  1276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1277  000E46  5035               	movf	dtoa@s^0,w,c
  1278  000E48  1036               	iorwf	(dtoa@s+1)^0,w,c
  1279  000E4A  B4D8               	btfsc	status,2,c
  1280  000E4C  EF2A  F007         	goto	u1141
  1281  000E50  EF2C  F007         	goto	u1140
  1282  000E54                     u1141:
  1283  000E54  EF3C  F007         	goto	l2003
  1284  000E58                     u1140:
  1285  000E58                     
  1286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1287  000E58  1E3E               	comf	(dtoa@n+7)^0,f,c
  1288  000E5A  1E3D               	comf	(dtoa@n+6)^0,f,c
  1289  000E5C  1E3C               	comf	(dtoa@n+5)^0,f,c
  1290  000E5E  1E3B               	comf	(dtoa@n+4)^0,f,c
  1291  000E60  1E3A               	comf	(dtoa@n+3)^0,f,c
  1292  000E62  1E39               	comf	(dtoa@n+2)^0,f,c
  1293  000E64  1E38               	comf	(dtoa@n+1)^0,f,c
  1294  000E66  6C37               	negf	dtoa@n^0,c
  1295  000E68  0E00               	movlw	0
  1296  000E6A  2238               	addwfc	(dtoa@n+1)^0,f,c
  1297  000E6C  2239               	addwfc	(dtoa@n+2)^0,f,c
  1298  000E6E  223A               	addwfc	(dtoa@n+3)^0,f,c
  1299  000E70  223B               	addwfc	(dtoa@n+4)^0,f,c
  1300  000E72  223C               	addwfc	(dtoa@n+5)^0,f,c
  1301  000E74  223D               	addwfc	(dtoa@n+6)^0,f,c
  1302  000E76  223E               	addwfc	(dtoa@n+7)^0,f,c
  1303  000E78                     l2003:
  1304                           
  1305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1306  000E78  0100               	movlb	0	; () banked
  1307  000E7A  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  1308  000E7C  EF42  F007         	goto	u1151
  1309  000E80  EF44  F007         	goto	u1150
  1310  000E84                     u1151:
  1311  000E84  EF45  F007         	goto	l2007
  1312  000E88                     u1150:
  1313  000E88                     
  1314                           ; BSR set to: 0
  1315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1316  000E88  93D0               	bcf	_flags& (0+255),1,b
  1317  000E8A                     l2007:
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1321  000E8A  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  1322  000E8C  EF52  F007         	goto	u1160
  1323  000E90  51CF               	movf	(_prec+1)& (0+255),w,b
  1324  000E92  E106               	bnz	u1161
  1325  000E94  05CE               	decf	_prec& (0+255),w,b
  1326  000E96  B0D8               	btfsc	status,0,c
  1327  000E98  EF50  F007         	goto	u1161
  1328  000E9C  EF52  F007         	goto	u1160
  1329  000EA0                     u1161:
  1330  000EA0  EF58  F007         	goto	l1137
  1331  000EA4                     u1160:
  1332  000EA4                     
  1333                           ; BSR set to: 0
  1334  000EA4  0E00               	movlw	0
  1335  000EA6  6E32               	movwf	(dtoa@p+1)^0,c
  1336  000EA8  0E01               	movlw	1
  1337  000EAA  6E31               	movwf	dtoa@p^0,c
  1338  000EAC  EF5C  F007         	goto	l1139
  1339  000EB0                     l1137:
  1340                           
  1341                           ; BSR set to: 0
  1342  000EB0  C0CE  F031         	movff	_prec,dtoa@p
  1343  000EB4  C0CF  F032         	movff	_prec+1,dtoa@p+1
  1344  000EB8                     l1139:
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1348  000EB8  C0CC  F033         	movff	_width,dtoa@w
  1349  000EBC  C0CD  F034         	movff	_width+1,dtoa@w+1
  1350  000EC0                     
  1351                           ; BSR set to: 0
  1352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1353  000EC0  5035               	movf	dtoa@s^0,w,c
  1354  000EC2  1036               	iorwf	(dtoa@s+1)^0,w,c
  1355  000EC4  A4D8               	btfss	status,2,c
  1356  000EC6  EF67  F007         	goto	u1171
  1357  000ECA  EF69  F007         	goto	u1170
  1358  000ECE                     u1171:
  1359  000ECE  EF70  F007         	goto	l2015
  1360  000ED2                     u1170:
  1361  000ED2                     
  1362                           ; BSR set to: 0
  1363  000ED2  A5D0               	btfss	_flags& (0+255),2,b
  1364  000ED4  EF6E  F007         	goto	u1181
  1365  000ED8  EF70  F007         	goto	u1180
  1366  000EDC                     u1181:
  1367  000EDC  EF73  F007         	goto	l2017
  1368  000EE0                     u1180:
  1369  000EE0                     l2015:
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1373  000EE0  0633               	decf	dtoa@w^0,f,c
  1374  000EE2  A0D8               	btfss	status,0,c
  1375  000EE4  0634               	decf	(dtoa@w+1)^0,f,c
  1376  000EE6                     l2017:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1380  000EE6  0E00               	movlw	0
  1381  000EE8  6E40               	movwf	(dtoa@i+1)^0,c
  1382  000EEA  0E1F               	movlw	31
  1383  000EEC  6E3F               	movwf	dtoa@i^0,c
  1384  000EEE                     
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1387  000EEE  0E00               	movlw	0
  1388  000EF0  6FF3               	movwf	(_dbuf+31)& (0+255),b
  1389                           
  1390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1391  000EF2  EFF7  F007         	goto	l2031
  1392  000EF6                     l2021:
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1395  000EF6  063F               	decf	dtoa@i^0,f,c
  1396  000EF8  A0D8               	btfss	status,0,c
  1397  000EFA  0640               	decf	(dtoa@i+1)^0,f,c
  1398  000EFC                     
  1399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1400  000EFC  0ED4               	movlw	low _dbuf
  1401  000EFE  243F               	addwf	dtoa@i^0,w,c
  1402  000F00  6ED9               	movwf	fsr2l,c
  1403  000F02  0E00               	movlw	high _dbuf
  1404  000F04  2040               	addwfc	(dtoa@i+1)^0,w,c
  1405  000F06  6EDA               	movwf	fsr2h,c
  1406  000F08  C037  F002         	movff	dtoa@n,___aomod@dividend
  1407  000F0C  C038  F003         	movff	dtoa@n+1,___aomod@dividend+1
  1408  000F10  C039  F004         	movff	dtoa@n+2,___aomod@dividend+2
  1409  000F14  C03A  F005         	movff	dtoa@n+3,___aomod@dividend+3
  1410  000F18  C03B  F006         	movff	dtoa@n+4,___aomod@dividend+4
  1411  000F1C  C03C  F007         	movff	dtoa@n+5,___aomod@dividend+5
  1412  000F20  C03D  F008         	movff	dtoa@n+6,___aomod@dividend+6
  1413  000F24  C03E  F009         	movff	dtoa@n+7,___aomod@dividend+7
  1414  000F28  0E0A               	movlw	10
  1415  000F2A  6E0A               	movwf	___aomod@divisor^0,c
  1416  000F2C  0E00               	movlw	0
  1417  000F2E  6E0B               	movwf	(___aomod@divisor+1)^0,c
  1418  000F30  0E00               	movlw	0
  1419  000F32  6E0C               	movwf	(___aomod@divisor+2)^0,c
  1420  000F34  0E00               	movlw	0
  1421  000F36  6E0D               	movwf	(___aomod@divisor+3)^0,c
  1422  000F38  0E00               	movlw	0
  1423  000F3A  6E0E               	movwf	(___aomod@divisor+4)^0,c
  1424  000F3C  0E00               	movlw	0
  1425  000F3E  6E0F               	movwf	(___aomod@divisor+5)^0,c
  1426  000F40  0E00               	movlw	0
  1427  000F42  6E10               	movwf	(___aomod@divisor+6)^0,c
  1428  000F44  0E00               	movlw	0
  1429  000F46  6E11               	movwf	(___aomod@divisor+7)^0,c
  1430  000F48  EC17  F00A         	call	___aomod	;wreg free
  1431  000F4C  C002  F027         	movff	?___aomod,??_dtoa
  1432  000F50  C003  F028         	movff	?___aomod+1,??_dtoa+1
  1433  000F54  C004  F029         	movff	?___aomod+2,??_dtoa+2
  1434  000F58  C005  F02A         	movff	?___aomod+3,??_dtoa+3
  1435  000F5C  C006  F02B         	movff	?___aomod+4,??_dtoa+4
  1436  000F60  C007  F02C         	movff	?___aomod+5,??_dtoa+5
  1437  000F64  C008  F02D         	movff	?___aomod+6,??_dtoa+6
  1438  000F68  C009  F02E         	movff	?___aomod+7,??_dtoa+7
  1439  000F6C  C027  F014         	movff	??_dtoa,abs@a
  1440  000F70  C029  F015         	movff	??_dtoa+2,abs@a+1
  1441  000F74  EC5D  F00D         	call	_abs	;wreg free
  1442  000F78  5014               	movf	?_abs^0,w,c
  1443  000F7A  0F30               	addlw	48
  1444  000F7C  6EDF               	movwf	indf2,c
  1445  000F7E                     
  1446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1447  000F7E  0631               	decf	dtoa@p^0,f,c
  1448  000F80  A0D8               	btfss	status,0,c
  1449  000F82  0632               	decf	(dtoa@p+1)^0,f,c
  1450  000F84                     
  1451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1452  000F84  0633               	decf	dtoa@w^0,f,c
  1453  000F86  A0D8               	btfss	status,0,c
  1454  000F88  0634               	decf	(dtoa@w+1)^0,f,c
  1455  000F8A                     
  1456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1457  000F8A  C037  F002         	movff	dtoa@n,___aodiv@dividend
  1458  000F8E  C038  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  1459  000F92  C039  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  1460  000F96  C03A  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  1461  000F9A  C03B  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  1462  000F9E  C03C  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  1463  000FA2  C03D  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  1464  000FA6  C03E  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  1465  000FAA  0E0A               	movlw	10
  1466  000FAC  6E0A               	movwf	___aodiv@divisor^0,c
  1467  000FAE  0E00               	movlw	0
  1468  000FB0  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  1469  000FB2  0E00               	movlw	0
  1470  000FB4  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  1471  000FB6  0E00               	movlw	0
  1472  000FB8  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  1473  000FBA  0E00               	movlw	0
  1474  000FBC  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  1475  000FBE  0E00               	movlw	0
  1476  000FC0  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  1477  000FC2  0E00               	movlw	0
  1478  000FC4  6E10               	movwf	(___aodiv@divisor+6)^0,c
  1479  000FC6  0E00               	movlw	0
  1480  000FC8  6E11               	movwf	(___aodiv@divisor+7)^0,c
  1481  000FCA  EC53  F009         	call	___aodiv	;wreg free
  1482  000FCE  C002  F037         	movff	?___aodiv,dtoa@n
  1483  000FD2  C003  F038         	movff	?___aodiv+1,dtoa@n+1
  1484  000FD6  C004  F039         	movff	?___aodiv+2,dtoa@n+2
  1485  000FDA  C005  F03A         	movff	?___aodiv+3,dtoa@n+3
  1486  000FDE  C006  F03B         	movff	?___aodiv+4,dtoa@n+4
  1487  000FE2  C007  F03C         	movff	?___aodiv+5,dtoa@n+5
  1488  000FE6  C008  F03D         	movff	?___aodiv+6,dtoa@n+6
  1489  000FEA  C009  F03E         	movff	?___aodiv+7,dtoa@n+7
  1490  000FEE                     l2031:
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1493  000FEE  BE40               	btfsc	(dtoa@i+1)^0,7,c
  1494  000FF0  EF02  F008         	goto	u1191
  1495  000FF4  5040               	movf	(dtoa@i+1)^0,w,c
  1496  000FF6  E108               	bnz	u1190
  1497  000FF8  043F               	decf	dtoa@i^0,w,c
  1498  000FFA  A0D8               	btfss	status,0,c
  1499  000FFC  EF02  F008         	goto	u1191
  1500  001000  EF04  F008         	goto	u1190
  1501  001004                     u1191:
  1502  001004  EF35  F008         	goto	l2041
  1503  001008                     u1190:
  1504  001008  5037               	movf	dtoa@n^0,w,c
  1505  00100A  1038               	iorwf	(dtoa@n+1)^0,w,c
  1506  00100C  1039               	iorwf	(dtoa@n+2)^0,w,c
  1507  00100E  103A               	iorwf	(dtoa@n+3)^0,w,c
  1508  001010  103B               	iorwf	(dtoa@n+4)^0,w,c
  1509  001012  103C               	iorwf	(dtoa@n+5)^0,w,c
  1510  001014  103D               	iorwf	(dtoa@n+6)^0,w,c
  1511  001016  103E               	iorwf	(dtoa@n+7)^0,w,c
  1512  001018  A4D8               	btfss	status,2,c
  1513  00101A  EF11  F008         	goto	u1201
  1514  00101E  EF13  F008         	goto	u1200
  1515  001022                     u1201:
  1516  001022  EF7B  F007         	goto	l2021
  1517  001026                     u1200:
  1518  001026  BE32               	btfsc	(dtoa@p+1)^0,7,c
  1519  001028  EF20  F008         	goto	u1210
  1520  00102C  5032               	movf	(dtoa@p+1)^0,w,c
  1521  00102E  E106               	bnz	u1211
  1522  001030  0431               	decf	dtoa@p^0,w,c
  1523  001032  B0D8               	btfsc	status,0,c
  1524  001034  EF1E  F008         	goto	u1211
  1525  001038  EF20  F008         	goto	u1210
  1526  00103C                     u1211:
  1527  00103C  EF7B  F007         	goto	l2021
  1528  001040                     u1210:
  1529  001040  BE34               	btfsc	(dtoa@w+1)^0,7,c
  1530  001042  EF2B  F008         	goto	u1221
  1531  001046  5034               	movf	(dtoa@w+1)^0,w,c
  1532  001048  E108               	bnz	u1220
  1533  00104A  0433               	decf	dtoa@w^0,w,c
  1534  00104C  A0D8               	btfss	status,0,c
  1535  00104E  EF2B  F008         	goto	u1221
  1536  001052  EF2D  F008         	goto	u1220
  1537  001056                     u1221:
  1538  001056  EF35  F008         	goto	l2041
  1539  00105A                     u1220:
  1540  00105A  0100               	movlb	0	; () banked
  1541  00105C  B3D0               	btfsc	_flags& (0+255),1,b
  1542  00105E  EF33  F008         	goto	u1231
  1543  001062  EF35  F008         	goto	u1230
  1544  001066                     u1231:
  1545  001066  EF7B  F007         	goto	l2021
  1546  00106A                     u1230:
  1547  00106A                     l2041:
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1550  00106A  5035               	movf	dtoa@s^0,w,c
  1551  00106C  1036               	iorwf	(dtoa@s+1)^0,w,c
  1552  00106E  A4D8               	btfss	status,2,c
  1553  001070  EF3C  F008         	goto	u1241
  1554  001074  EF3E  F008         	goto	u1240
  1555  001078                     u1241:
  1556  001078  EF46  F008         	goto	l2045
  1557  00107C                     u1240:
  1558  00107C  0100               	movlb	0	; () banked
  1559  00107E  A5D0               	btfss	_flags& (0+255),2,b
  1560  001080  EF44  F008         	goto	u1251
  1561  001084  EF46  F008         	goto	u1250
  1562  001088                     u1251:
  1563  001088  EF64  F008         	goto	l2055
  1564  00108C                     u1250:
  1565  00108C                     l2045:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1568  00108C  063F               	decf	dtoa@i^0,f,c
  1569  00108E  A0D8               	btfss	status,0,c
  1570  001090  0640               	decf	(dtoa@i+1)^0,f,c
  1571  001092                     
  1572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1573  001092  5035               	movf	dtoa@s^0,w,c
  1574  001094  1036               	iorwf	(dtoa@s+1)^0,w,c
  1575  001096  A4D8               	btfss	status,2,c
  1576  001098  EF50  F008         	goto	u1261
  1577  00109C  EF52  F008         	goto	u1260
  1578  0010A0                     u1261:
  1579  0010A0  EF58  F008         	goto	l2051
  1580  0010A4                     u1260:
  1581  0010A4  0E00               	movlw	0
  1582  0010A6  6E30               	movwf	(_dtoa$2369+1)^0,c
  1583  0010A8  0E2B               	movlw	43
  1584  0010AA  6E2F               	movwf	_dtoa$2369^0,c
  1585  0010AC  EF5C  F008         	goto	l2053
  1586  0010B0                     l2051:
  1587  0010B0  0E00               	movlw	0
  1588  0010B2  6E30               	movwf	(_dtoa$2369+1)^0,c
  1589  0010B4  0E2D               	movlw	45
  1590  0010B6  6E2F               	movwf	_dtoa$2369^0,c
  1591  0010B8                     l2053:
  1592  0010B8  0ED4               	movlw	low _dbuf
  1593  0010BA  243F               	addwf	dtoa@i^0,w,c
  1594  0010BC  6ED9               	movwf	fsr2l,c
  1595  0010BE  0E00               	movlw	high _dbuf
  1596  0010C0  2040               	addwfc	(dtoa@i+1)^0,w,c
  1597  0010C2  6EDA               	movwf	fsr2h,c
  1598  0010C4  C02F  FFDF         	movff	_dtoa$2369,indf2
  1599  0010C8                     l2055:
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1602  0010C8  C01D  F012         	movff	dtoa@fp,pad@fp
  1603  0010CC  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  1604  0010D0  0ED4               	movlw	low _dbuf
  1605  0010D2  243F               	addwf	dtoa@i^0,w,c
  1606  0010D4  6E14               	movwf	pad@buf^0,c
  1607  0010D6  0E00               	movlw	high _dbuf
  1608  0010D8  2040               	addwfc	(dtoa@i+1)^0,w,c
  1609  0010DA  6E15               	movwf	(pad@buf+1)^0,c
  1610  0010DC  C033  F016         	movff	dtoa@w,pad@p
  1611  0010E0  C034  F017         	movff	dtoa@w+1,pad@p+1
  1612  0010E4  EC9B  F00B         	call	_pad	;wreg free
  1613  0010E8  C012  F01D         	movff	?_pad,?_dtoa
  1614  0010EC  C013  F01E         	movff	?_pad+1,?_dtoa+1
  1615  0010F0  0012               	return		;funcret
  1616  0010F2                     __end_of_dtoa:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _pad *****************
  1620 ;; Defined at:
  1621 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1624 ;;		 -> sprintf@f(6), 
  1625 ;;  buf             2   19[COMRAM] PTR unsigned char 
  1626 ;;		 -> dbuf(32), 
  1627 ;;  p               2   21[COMRAM] int 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  w               2   26[COMRAM] int 
  1630 ;;  i               2   24[COMRAM] int 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  2   17[COMRAM] int 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1640 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1641 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1643 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1644 ;;Total ram usage:       11 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 5
  1647 ;; This function calls:
  1648 ;;		_fputc
  1649 ;;		_fputs
  1650 ;;		_strlen
  1651 ;; This function is called by:
  1652 ;;		_dtoa
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text5
  1657  001736                     __ptext5:
  1658                           	callstack 0
  1659  001736                     _pad:
  1660                           	callstack 21
  1661  001736                     
  1662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1663  001736  0100               	movlb	0	; () banked
  1664  001738  A1D0               	btfss	_flags& (0+255),0,b
  1665  00173A  EFA1  F00B         	goto	u1051
  1666  00173E  EFA3  F00B         	goto	u1050
  1667  001742                     u1051:
  1668  001742  EFAD  F00B         	goto	l1971
  1669  001746                     u1050:
  1670  001746                     
  1671                           ; BSR set to: 0
  1672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1673  001746  C014  F00B         	movff	pad@buf,fputs@s
  1674  00174A  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1675  00174E  C012  F00D         	movff	pad@fp,fputs@fp
  1676  001752  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1677  001756  ECF8  F00C         	call	_fputs	;wreg free
  1678  00175A                     l1971:
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1681  00175A  BE17               	btfsc	(pad@p+1)^0,7,c
  1682  00175C  EFB2  F00B         	goto	u1061
  1683  001760  EFB4  F00B         	goto	u1060
  1684  001764                     u1061:
  1685  001764  EFBA  F00B         	goto	l1975
  1686  001768                     u1060:
  1687  001768  C016  F01B         	movff	pad@p,pad@w
  1688  00176C  C017  F01C         	movff	pad@p+1,pad@w+1
  1689  001770  EFBE  F00B         	goto	l1126
  1690  001774                     l1975:
  1691  001774  0E00               	movlw	0
  1692  001776  6E1C               	movwf	(pad@w+1)^0,c
  1693  001778  0E00               	movlw	0
  1694  00177A  6E1B               	movwf	pad@w^0,c
  1695  00177C                     l1126:
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1698  00177C  0E00               	movlw	0
  1699  00177E  6E1A               	movwf	(pad@i+1)^0,c
  1700  001780  0E00               	movlw	0
  1701  001782  6E19               	movwf	pad@i^0,c
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1704  001784  EFD0  F00B         	goto	l1981
  1705  001788                     l1977:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1708  001788  0E00               	movlw	0
  1709  00178A  6E03               	movwf	(fputc@c+1)^0,c
  1710  00178C  0E20               	movlw	32
  1711  00178E  6E02               	movwf	fputc@c^0,c
  1712  001790  C012  F004         	movff	pad@fp,fputc@fp
  1713  001794  C013  F005         	movff	pad@fp+1,fputc@fp+1
  1714  001798  EC36  F00B         	call	_fputc	;wreg free
  1715  00179C                     
  1716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1717  00179C  4A19               	infsnz	pad@i^0,f,c
  1718  00179E  2A1A               	incf	(pad@i+1)^0,f,c
  1719  0017A0                     l1981:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1722  0017A0  501B               	movf	pad@w^0,w,c
  1723  0017A2  5C19               	subwf	pad@i^0,w,c
  1724  0017A4  501A               	movf	(pad@i+1)^0,w,c
  1725  0017A6  0A80               	xorlw	128
  1726  0017A8  6E18               	movwf	??_pad^0,c
  1727  0017AA  501C               	movf	(pad@w+1)^0,w,c
  1728  0017AC  0A80               	xorlw	128
  1729  0017AE  5818               	subwfb	??_pad^0,w,c
  1730  0017B0  A0D8               	btfss	status,0,c
  1731  0017B2  EFDD  F00B         	goto	u1071
  1732  0017B6  EFDF  F00B         	goto	u1070
  1733  0017BA                     u1071:
  1734  0017BA  EFC4  F00B         	goto	l1977
  1735  0017BE                     u1070:
  1736  0017BE                     
  1737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1738  0017BE  0100               	movlb	0	; () banked
  1739  0017C0  B1D0               	btfsc	_flags& (0+255),0,b
  1740  0017C2  EFE5  F00B         	goto	u1081
  1741  0017C6  EFE7  F00B         	goto	u1080
  1742  0017CA                     u1081:
  1743  0017CA  EFF1  F00B         	goto	l1985
  1744  0017CE                     u1080:
  1745  0017CE                     
  1746                           ; BSR set to: 0
  1747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1748  0017CE  C014  F00B         	movff	pad@buf,fputs@s
  1749  0017D2  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1750  0017D6  C012  F00D         	movff	pad@fp,fputs@fp
  1751  0017DA  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1752  0017DE  ECF8  F00C         	call	_fputs	;wreg free
  1753  0017E2                     l1985:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1756  0017E2  C014  F002         	movff	pad@buf,strlen@s
  1757  0017E6  C015  F003         	movff	pad@buf+1,strlen@s+1
  1758  0017EA  ECD7  F00D         	call	_strlen	;wreg free
  1759  0017EE  501B               	movf	pad@w^0,w,c
  1760  0017F0  2402               	addwf	?_strlen^0,w,c
  1761  0017F2  6E12               	movwf	?_pad^0,c
  1762  0017F4  501C               	movf	(pad@w+1)^0,w,c
  1763  0017F6  2003               	addwfc	(?_strlen+1)^0,w,c
  1764  0017F8  6E13               	movwf	(?_pad+1)^0,c
  1765  0017FA  0012               	return		;funcret
  1766  0017FC                     __end_of_pad:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _strlen *****************
  1770 ;; Defined at:
  1771 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  s               2    1[COMRAM] PTR const unsigned char 
  1774 ;;		 -> dbuf(32), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  a               2    3[COMRAM] PTR const unsigned char 
  1777 ;;		 -> dbuf(32), 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  2    1[COMRAM] unsigned int 
  1780 ;; Registers used:
  1781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1790 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;Total ram usage:        4 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 2
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_pad
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text6
  1802  001BAE                     __ptext6:
  1803                           	callstack 0
  1804  001BAE                     _strlen:
  1805                           	callstack 23
  1806  001BAE  C002  F004         	movff	strlen@s,strlen@a
  1807  001BB2  C003  F005         	movff	strlen@s+1,strlen@a+1
  1808  001BB6  EFDF  F00D         	goto	l1881
  1809  001BBA                     l1879:
  1810  001BBA  4A02               	infsnz	strlen@s^0,f,c
  1811  001BBC  2A03               	incf	(strlen@s+1)^0,f,c
  1812  001BBE                     l1881:
  1813  001BBE  C002  FFD9         	movff	strlen@s,fsr2l
  1814  001BC2  C003  FFDA         	movff	strlen@s+1,fsr2h
  1815  001BC6  50DF               	movf	indf2,w,c
  1816  001BC8  A4D8               	btfss	status,2,c
  1817  001BCA  EFE9  F00D         	goto	u911
  1818  001BCE  EFEB  F00D         	goto	u910
  1819  001BD2                     u911:
  1820  001BD2  EFDD  F00D         	goto	l1879
  1821  001BD6                     u910:
  1822  001BD6  5004               	movf	strlen@a^0,w,c
  1823  001BD8  5C02               	subwf	strlen@s^0,w,c
  1824  001BDA  6E02               	movwf	?_strlen^0,c
  1825  001BDC  5005               	movf	(strlen@a+1)^0,w,c
  1826  001BDE  5803               	subwfb	(strlen@s+1)^0,w,c
  1827  001BE0  6E03               	movwf	(?_strlen+1)^0,c
  1828  001BE2  0012               	return		;funcret
  1829  001BE4                     __end_of_strlen:
  1830                           	callstack 0
  1831                           
  1832 ;; *************** function _fputs *****************
  1833 ;; Defined at:
  1834 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1837 ;;		 -> dbuf(32), 
  1838 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  1839 ;;		 -> sprintf@f(6), 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  i               2   15[COMRAM] int 
  1842 ;;  c               1   14[COMRAM] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  2   10[COMRAM] int 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1852 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1855 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;Total ram usage:        7 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 4
  1859 ;; This function calls:
  1860 ;;		_fputc
  1861 ;; This function is called by:
  1862 ;;		_pad
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text7
  1867  0019F0                     __ptext7:
  1868                           	callstack 0
  1869  0019F0                     _fputs:
  1870                           	callstack 21
  1871  0019F0  0E00               	movlw	0
  1872  0019F2  6E11               	movwf	(fputs@i+1)^0,c
  1873  0019F4  0E00               	movlw	0
  1874  0019F6  6E10               	movwf	fputs@i^0,c
  1875  0019F8  EF09  F00D         	goto	l1875
  1876  0019FC                     l1871:
  1877  0019FC  C00F  F002         	movff	fputs@c,fputc@c
  1878  001A00  6A03               	clrf	(fputc@c+1)^0,c
  1879  001A02  C00D  F004         	movff	fputs@fp,fputc@fp
  1880  001A06  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  1881  001A0A  EC36  F00B         	call	_fputc	;wreg free
  1882  001A0E  4A10               	infsnz	fputs@i^0,f,c
  1883  001A10  2A11               	incf	(fputs@i+1)^0,f,c
  1884  001A12                     l1875:
  1885  001A12  5010               	movf	fputs@i^0,w,c
  1886  001A14  240B               	addwf	fputs@s^0,w,c
  1887  001A16  6ED9               	movwf	fsr2l,c
  1888  001A18  5011               	movf	(fputs@i+1)^0,w,c
  1889  001A1A  200C               	addwfc	(fputs@s+1)^0,w,c
  1890  001A1C  6EDA               	movwf	fsr2h,c
  1891  001A1E  50DF               	movf	indf2,w,c
  1892  001A20  6E0F               	movwf	fputs@c^0,c
  1893  001A22  500F               	movf	fputs@c^0,w,c
  1894  001A24  A4D8               	btfss	status,2,c
  1895  001A26  EF17  F00D         	goto	u901
  1896  001A2A  EF19  F00D         	goto	u900
  1897  001A2E                     u901:
  1898  001A2E  EFFE  F00C         	goto	l1871
  1899  001A32                     u900:
  1900  001A32  0012               	return		;funcret
  1901  001A34                     __end_of_fputs:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _fputc *****************
  1905 ;; Defined at:
  1906 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  c               2    1[COMRAM] int 
  1909 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  1910 ;;		 -> sprintf@f(6), 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  2    1[COMRAM] int 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;Total ram usage:        9 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 3
  1929 ;; This function calls:
  1930 ;;		_putch
  1931 ;; This function is called by:
  1932 ;;		_pad
  1933 ;;		_vfpfcnvrt
  1934 ;;		_fputs
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text8
  1939  00166C                     __ptext8:
  1940                           	callstack 0
  1941  00166C                     _fputc:
  1942                           	callstack 24
  1943  00166C  5004               	movf	fputc@fp^0,w,c
  1944  00166E  1005               	iorwf	(fputc@fp+1)^0,w,c
  1945  001670  B4D8               	btfsc	status,2,c
  1946  001672  EF3D  F00B         	goto	u861
  1947  001676  EF3F  F00B         	goto	u860
  1948  00167A                     u861:
  1949  00167A  EF48  F00B         	goto	l1859
  1950  00167E                     u860:
  1951  00167E  5004               	movf	fputc@fp^0,w,c
  1952  001680  1005               	iorwf	(fputc@fp+1)^0,w,c
  1953  001682  A4D8               	btfss	status,2,c
  1954  001684  EF46  F00B         	goto	u871
  1955  001688  EF48  F00B         	goto	u870
  1956  00168C                     u871:
  1957  00168C  EF4D  F00B         	goto	l1861
  1958  001690                     u870:
  1959  001690                     l1859:
  1960  001690  5002               	movf	fputc@c^0,w,c
  1961  001692  EC94  F00E         	call	_putch
  1962  001696  EF9A  F00B         	goto	l1190
  1963  00169A                     l1861:
  1964  00169A  EE20 F004          	lfsr	2,4
  1965  00169E  5004               	movf	fputc@fp^0,w,c
  1966  0016A0  26D9               	addwf	fsr2l,f,c
  1967  0016A2  5005               	movf	(fputc@fp+1)^0,w,c
  1968  0016A4  22DA               	addwfc	fsr2h,f,c
  1969  0016A6  50DE               	movf	postinc2,w,c
  1970  0016A8  10DE               	iorwf	postinc2,w,c
  1971  0016AA  B4D8               	btfsc	status,2,c
  1972  0016AC  EF5A  F00B         	goto	u881
  1973  0016B0  EF5C  F00B         	goto	u880
  1974  0016B4                     u881:
  1975  0016B4  EF77  F00B         	goto	l1865
  1976  0016B8                     u880:
  1977  0016B8  EE20 F004          	lfsr	2,4
  1978  0016BC  5004               	movf	fputc@fp^0,w,c
  1979  0016BE  26D9               	addwf	fsr2l,f,c
  1980  0016C0  5005               	movf	(fputc@fp+1)^0,w,c
  1981  0016C2  22DA               	addwfc	fsr2h,f,c
  1982  0016C4  EE10 F002          	lfsr	1,2
  1983  0016C8  5004               	movf	fputc@fp^0,w,c
  1984  0016CA  26E1               	addwf	fsr1l,f,c
  1985  0016CC  5005               	movf	(fputc@fp+1)^0,w,c
  1986  0016CE  22E2               	addwfc	fsr1h,f,c
  1987  0016D0  50DE               	movf	postinc2,w,c
  1988  0016D2  5CE6               	subwf	postinc1,w,c
  1989  0016D4  50E6               	movf	postinc1,w,c
  1990  0016D6  0A80               	xorlw	128
  1991  0016D8  6E0A               	movwf	(??_fputc+4)^0,c
  1992  0016DA  50DE               	movf	postinc2,w,c
  1993  0016DC  0A80               	xorlw	128
  1994  0016DE  580A               	subwfb	(??_fputc+4)^0,w,c
  1995  0016E0  B0D8               	btfsc	status,0,c
  1996  0016E2  EF75  F00B         	goto	u891
  1997  0016E6  EF77  F00B         	goto	u890
  1998  0016EA                     u891:
  1999  0016EA  EF9A  F00B         	goto	l1190
  2000  0016EE                     u890:
  2001  0016EE                     l1865:
  2002  0016EE  EE20 F002          	lfsr	2,2
  2003  0016F2  5004               	movf	fputc@fp^0,w,c
  2004  0016F4  26D9               	addwf	fsr2l,f,c
  2005  0016F6  5005               	movf	(fputc@fp+1)^0,w,c
  2006  0016F8  22DA               	addwfc	fsr2h,f,c
  2007  0016FA  CFDE F006          	movff	postinc2,??_fputc
  2008  0016FE  CFDD F007          	movff	postdec2,??_fputc+1
  2009  001702  C004  FFD9         	movff	fputc@fp,fsr2l
  2010  001706  C005  FFDA         	movff	fputc@fp+1,fsr2h
  2011  00170A  CFDE F008          	movff	postinc2,??_fputc+2
  2012  00170E  CFDD F009          	movff	postdec2,??_fputc+3
  2013  001712  5006               	movf	??_fputc^0,w,c
  2014  001714  2408               	addwf	(??_fputc+2)^0,w,c
  2015  001716  6ED9               	movwf	fsr2l,c
  2016  001718  5007               	movf	(??_fputc+1)^0,w,c
  2017  00171A  2009               	addwfc	(??_fputc+3)^0,w,c
  2018  00171C  6EDA               	movwf	fsr2h,c
  2019  00171E  C002  FFDF         	movff	fputc@c,indf2
  2020  001722  EE20 F002          	lfsr	2,2
  2021  001726  5004               	movf	fputc@fp^0,w,c
  2022  001728  26D9               	addwf	fsr2l,f,c
  2023  00172A  5005               	movf	(fputc@fp+1)^0,w,c
  2024  00172C  22DA               	addwfc	fsr2h,f,c
  2025  00172E  2ADE               	incf	postinc2,f,c
  2026  001730  0E00               	movlw	0
  2027  001732  22DD               	addwfc	postdec2,f,c
  2028  001734                     l1190:
  2029  001734  0012               	return		;funcret
  2030  001736                     __end_of_fputc:
  2031                           	callstack 0
  2032                           
  2033 ;; *************** function _putch *****************
  2034 ;; Defined at:
  2035 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  c               1    wreg     unsigned char 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  c               1    0[COMRAM] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2053 ;;Total ram usage:        0 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 2
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_fputc
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text9
  2064  001D28                     __ptext9:
  2065                           	callstack 0
  2066  001D28                     _putch:
  2067                           	callstack 24
  2068  001D28  0012               	return		;funcret
  2069  001D2A                     __end_of_putch:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function _abs *****************
  2073 ;; Defined at:
  2074 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  a               2   19[COMRAM] int 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  2   19[COMRAM] int 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;Total ram usage:        4 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 2
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_dtoa
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text10
  2103  001ABA                     __ptext10:
  2104                           	callstack 0
  2105  001ABA                     _abs:
  2106                           	callstack 24
  2107  001ABA  BE15               	btfsc	(abs@a+1)^0,7,c
  2108  001ABC  EF6A  F00D         	goto	u1090
  2109  001AC0  5015               	movf	(abs@a+1)^0,w,c
  2110  001AC2  E106               	bnz	u1091
  2111  001AC4  0414               	decf	abs@a^0,w,c
  2112  001AC6  B0D8               	btfsc	status,0,c
  2113  001AC8  EF68  F00D         	goto	u1091
  2114  001ACC  EF6A  F00D         	goto	u1090
  2115  001AD0                     u1091:
  2116  001AD0  EF78  F00D         	goto	l1175
  2117  001AD4                     u1090:
  2118  001AD4  C014  F016         	movff	abs@a,??_abs
  2119  001AD8  C015  F017         	movff	abs@a+1,??_abs+1
  2120  001ADC  1E16               	comf	??_abs^0,f,c
  2121  001ADE  1E17               	comf	(??_abs+1)^0,f,c
  2122  001AE0  4A16               	infsnz	??_abs^0,f,c
  2123  001AE2  2A17               	incf	(??_abs+1)^0,f,c
  2124  001AE4  C016  F014         	movff	??_abs,?_abs
  2125  001AE8  C017  F015         	movff	??_abs+1,?_abs+1
  2126  001AEC  EF7C  F00D         	goto	l1178
  2127  001AF0                     l1175:
  2128  001AF0  C014  F014         	movff	abs@a,?_abs
  2129  001AF4  C015  F015         	movff	abs@a+1,?_abs+1
  2130  001AF8                     l1178:
  2131  001AF8  0012               	return		;funcret
  2132  001AFA                     __end_of_abs:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function ___aomod *****************
  2136 ;; Defined at:
  2137 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  dividend        8    1[COMRAM] long long 
  2140 ;;  divisor         8    9[COMRAM] long long 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  sign            1   18[COMRAM] unsigned char 
  2143 ;;  counter         1   17[COMRAM] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  8    1[COMRAM] long long 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2153 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;Total ram usage:       18 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 2
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_dtoa
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text11
  2168  00142E                     __ptext11:
  2169                           	callstack 0
  2170  00142E                     ___aomod:
  2171                           	callstack 24
  2172  00142E  0E00               	movlw	0
  2173  001430  6E13               	movwf	___aomod@sign^0,c
  2174  001432  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  2175  001434  EF20  F00A         	goto	u990
  2176  001438  EF1E  F00A         	goto	u991
  2177  00143C                     u991:
  2178  00143C  EF32  F00A         	goto	l1939
  2179  001440                     u990:
  2180  001440  1E09               	comf	(___aomod@dividend+7)^0,f,c
  2181  001442  1E08               	comf	(___aomod@dividend+6)^0,f,c
  2182  001444  1E07               	comf	(___aomod@dividend+5)^0,f,c
  2183  001446  1E06               	comf	(___aomod@dividend+4)^0,f,c
  2184  001448  1E05               	comf	(___aomod@dividend+3)^0,f,c
  2185  00144A  1E04               	comf	(___aomod@dividend+2)^0,f,c
  2186  00144C  1E03               	comf	(___aomod@dividend+1)^0,f,c
  2187  00144E  6C02               	negf	___aomod@dividend^0,c
  2188  001450  0E00               	movlw	0
  2189  001452  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  2190  001454  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  2191  001456  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  2192  001458  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  2193  00145A  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  2194  00145C  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  2195  00145E  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  2196  001460  0E01               	movlw	1
  2197  001462  6E13               	movwf	___aomod@sign^0,c
  2198  001464                     l1939:
  2199  001464  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  2200  001466  EF39  F00A         	goto	u1000
  2201  00146A  EF37  F00A         	goto	u1001
  2202  00146E                     u1001:
  2203  00146E  EF49  F00A         	goto	l1943
  2204  001472                     u1000:
  2205  001472  1E11               	comf	(___aomod@divisor+7)^0,f,c
  2206  001474  1E10               	comf	(___aomod@divisor+6)^0,f,c
  2207  001476  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  2208  001478  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  2209  00147A  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  2210  00147C  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  2211  00147E  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  2212  001480  6C0A               	negf	___aomod@divisor^0,c
  2213  001482  0E00               	movlw	0
  2214  001484  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  2215  001486  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  2216  001488  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  2217  00148A  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  2218  00148C  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  2219  00148E  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  2220  001490  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  2221  001492                     l1943:
  2222  001492  500A               	movf	___aomod@divisor^0,w,c
  2223  001494  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  2224  001496  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  2225  001498  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  2226  00149A  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  2227  00149C  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  2228  00149E  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  2229  0014A0  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  2230  0014A2  B4D8               	btfsc	status,2,c
  2231  0014A4  EF56  F00A         	goto	u1011
  2232  0014A8  EF58  F00A         	goto	u1010
  2233  0014AC                     u1011:
  2234  0014AC  EFA0  F00A         	goto	l1959
  2235  0014B0                     u1010:
  2236  0014B0  0E01               	movlw	1
  2237  0014B2  6E12               	movwf	___aomod@counter^0,c
  2238  0014B4  EF66  F00A         	goto	l1949
  2239  0014B8                     l1947:
  2240  0014B8  90D8               	bcf	status,0,c
  2241  0014BA  360A               	rlcf	___aomod@divisor^0,f,c
  2242  0014BC  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  2243  0014BE  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  2244  0014C0  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  2245  0014C2  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  2246  0014C4  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  2247  0014C6  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  2248  0014C8  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  2249  0014CA  2A12               	incf	___aomod@counter^0,f,c
  2250  0014CC                     l1949:
  2251  0014CC  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  2252  0014CE  EF6B  F00A         	goto	u1021
  2253  0014D2  EF6D  F00A         	goto	u1020
  2254  0014D6                     u1021:
  2255  0014D6  EF5C  F00A         	goto	l1947
  2256  0014DA                     u1020:
  2257  0014DA                     l1951:
  2258  0014DA  500A               	movf	___aomod@divisor^0,w,c
  2259  0014DC  5C02               	subwf	___aomod@dividend^0,w,c
  2260  0014DE  500B               	movf	(___aomod@divisor+1)^0,w,c
  2261  0014E0  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  2262  0014E2  500C               	movf	(___aomod@divisor+2)^0,w,c
  2263  0014E4  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  2264  0014E6  500D               	movf	(___aomod@divisor+3)^0,w,c
  2265  0014E8  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  2266  0014EA  500E               	movf	(___aomod@divisor+4)^0,w,c
  2267  0014EC  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  2268  0014EE  500F               	movf	(___aomod@divisor+5)^0,w,c
  2269  0014F0  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  2270  0014F2  5010               	movf	(___aomod@divisor+6)^0,w,c
  2271  0014F4  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  2272  0014F6  5011               	movf	(___aomod@divisor+7)^0,w,c
  2273  0014F8  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  2274  0014FA  A0D8               	btfss	status,0,c
  2275  0014FC  EF82  F00A         	goto	u1031
  2276  001500  EF84  F00A         	goto	u1030
  2277  001504                     u1031:
  2278  001504  EF94  F00A         	goto	l1955
  2279  001508                     u1030:
  2280  001508  500A               	movf	___aomod@divisor^0,w,c
  2281  00150A  5E02               	subwf	___aomod@dividend^0,f,c
  2282  00150C  500B               	movf	(___aomod@divisor+1)^0,w,c
  2283  00150E  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  2284  001510  500C               	movf	(___aomod@divisor+2)^0,w,c
  2285  001512  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  2286  001514  500D               	movf	(___aomod@divisor+3)^0,w,c
  2287  001516  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  2288  001518  500E               	movf	(___aomod@divisor+4)^0,w,c
  2289  00151A  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  2290  00151C  500F               	movf	(___aomod@divisor+5)^0,w,c
  2291  00151E  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  2292  001520  5010               	movf	(___aomod@divisor+6)^0,w,c
  2293  001522  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  2294  001524  5011               	movf	(___aomod@divisor+7)^0,w,c
  2295  001526  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  2296  001528                     l1955:
  2297  001528  90D8               	bcf	status,0,c
  2298  00152A  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  2299  00152C  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  2300  00152E  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  2301  001530  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  2302  001532  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  2303  001534  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  2304  001536  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  2305  001538  320A               	rrcf	___aomod@divisor^0,f,c
  2306  00153A  2E12               	decfsz	___aomod@counter^0,f,c
  2307  00153C  EF6D  F00A         	goto	l1951
  2308  001540                     l1959:
  2309  001540  5013               	movf	___aomod@sign^0,w,c
  2310  001542  B4D8               	btfsc	status,2,c
  2311  001544  EFA6  F00A         	goto	u1041
  2312  001548  EFA8  F00A         	goto	u1040
  2313  00154C                     u1041:
  2314  00154C  EFB8  F00A         	goto	l1963
  2315  001550                     u1040:
  2316  001550  1E09               	comf	(___aomod@dividend+7)^0,f,c
  2317  001552  1E08               	comf	(___aomod@dividend+6)^0,f,c
  2318  001554  1E07               	comf	(___aomod@dividend+5)^0,f,c
  2319  001556  1E06               	comf	(___aomod@dividend+4)^0,f,c
  2320  001558  1E05               	comf	(___aomod@dividend+3)^0,f,c
  2321  00155A  1E04               	comf	(___aomod@dividend+2)^0,f,c
  2322  00155C  1E03               	comf	(___aomod@dividend+1)^0,f,c
  2323  00155E  6C02               	negf	___aomod@dividend^0,c
  2324  001560  0E00               	movlw	0
  2325  001562  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  2326  001564  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  2327  001566  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  2328  001568  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  2329  00156A  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  2330  00156C  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  2331  00156E  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  2332  001570                     l1963:
  2333  001570  C002  F002         	movff	___aomod@dividend,?___aomod
  2334  001574  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  2335  001578  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  2336  00157C  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  2337  001580  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  2338  001584  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  2339  001588  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  2340  00158C  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  2341  001590  0012               	return		;funcret
  2342  001592                     __end_of___aomod:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function ___aodiv *****************
  2346 ;; Defined at:
  2347 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  dividend        8    1[COMRAM] long long 
  2350 ;;  divisor         8    9[COMRAM] long long 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  quotient        8   19[COMRAM] long long 
  2353 ;;  sign            1   18[COMRAM] unsigned char 
  2354 ;;  counter         1   17[COMRAM] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  8    1[COMRAM] long long 
  2357 ;; Registers used:
  2358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2364 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;Total ram usage:       26 bytes
  2369 ;; Hardware stack levels used: 1
  2370 ;; Hardware stack levels required when called: 2
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_dtoa
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text12
  2379  0012A6                     __ptext12:
  2380                           	callstack 0
  2381  0012A6                     ___aodiv:
  2382                           	callstack 24
  2383  0012A6  0E00               	movlw	0
  2384  0012A8  6E13               	movwf	___aodiv@sign^0,c
  2385  0012AA  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  2386  0012AC  EF5C  F009         	goto	u920
  2387  0012B0  EF5A  F009         	goto	u921
  2388  0012B4                     u921:
  2389  0012B4  EF6E  F009         	goto	l1895
  2390  0012B8                     u920:
  2391  0012B8  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  2392  0012BA  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  2393  0012BC  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  2394  0012BE  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  2395  0012C0  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  2396  0012C2  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  2397  0012C4  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  2398  0012C6  6C0A               	negf	___aodiv@divisor^0,c
  2399  0012C8  0E00               	movlw	0
  2400  0012CA  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  2401  0012CC  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  2402  0012CE  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  2403  0012D0  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  2404  0012D2  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  2405  0012D4  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  2406  0012D6  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  2407  0012D8  0E01               	movlw	1
  2408  0012DA  6E13               	movwf	___aodiv@sign^0,c
  2409  0012DC                     l1895:
  2410  0012DC  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  2411  0012DE  EF75  F009         	goto	u930
  2412  0012E2  EF73  F009         	goto	u931
  2413  0012E6                     u931:
  2414  0012E6  EF87  F009         	goto	l1901
  2415  0012EA                     u930:
  2416  0012EA  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  2417  0012EC  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  2418  0012EE  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  2419  0012F0  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  2420  0012F2  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  2421  0012F4  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  2422  0012F6  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  2423  0012F8  6C02               	negf	___aodiv@dividend^0,c
  2424  0012FA  0E00               	movlw	0
  2425  0012FC  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  2426  0012FE  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  2427  001300  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  2428  001302  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  2429  001304  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  2430  001306  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  2431  001308  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  2432  00130A  0E01               	movlw	1
  2433  00130C  1A13               	xorwf	___aodiv@sign^0,f,c
  2434  00130E                     l1901:
  2435  00130E  EE20  F014         	lfsr	2,___aodiv@quotient
  2436  001312  0E07               	movlw	7
  2437  001314                     u941:
  2438  001314  6ADE               	clrf	postinc2,c
  2439  001316  06E8               	decf	wreg,f,c
  2440  001318  E2FD               	bc	u941
  2441  00131A  500A               	movf	___aodiv@divisor^0,w,c
  2442  00131C  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  2443  00131E  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  2444  001320  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  2445  001322  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  2446  001324  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  2447  001326  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  2448  001328  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  2449  00132A  B4D8               	btfsc	status,2,c
  2450  00132C  EF9A  F009         	goto	u951
  2451  001330  EF9C  F009         	goto	u950
  2452  001334                     u951:
  2453  001334  EFEE  F009         	goto	l1923
  2454  001338                     u950:
  2455  001338  0E01               	movlw	1
  2456  00133A  6E12               	movwf	___aodiv@counter^0,c
  2457  00133C  EFAA  F009         	goto	l1909
  2458  001340                     l1907:
  2459  001340  90D8               	bcf	status,0,c
  2460  001342  360A               	rlcf	___aodiv@divisor^0,f,c
  2461  001344  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  2462  001346  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  2463  001348  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  2464  00134A  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  2465  00134C  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  2466  00134E  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  2467  001350  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  2468  001352  2A12               	incf	___aodiv@counter^0,f,c
  2469  001354                     l1909:
  2470  001354  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  2471  001356  EFAF  F009         	goto	u961
  2472  00135A  EFB1  F009         	goto	u960
  2473  00135E                     u961:
  2474  00135E  EFA0  F009         	goto	l1907
  2475  001362                     u960:
  2476  001362                     l1911:
  2477  001362  90D8               	bcf	status,0,c
  2478  001364  3614               	rlcf	___aodiv@quotient^0,f,c
  2479  001366  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  2480  001368  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  2481  00136A  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  2482  00136C  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  2483  00136E  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  2484  001370  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  2485  001372  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  2486  001374  500A               	movf	___aodiv@divisor^0,w,c
  2487  001376  5C02               	subwf	___aodiv@dividend^0,w,c
  2488  001378  500B               	movf	(___aodiv@divisor+1)^0,w,c
  2489  00137A  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  2490  00137C  500C               	movf	(___aodiv@divisor+2)^0,w,c
  2491  00137E  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  2492  001380  500D               	movf	(___aodiv@divisor+3)^0,w,c
  2493  001382  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  2494  001384  500E               	movf	(___aodiv@divisor+4)^0,w,c
  2495  001386  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  2496  001388  500F               	movf	(___aodiv@divisor+5)^0,w,c
  2497  00138A  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  2498  00138C  5010               	movf	(___aodiv@divisor+6)^0,w,c
  2499  00138E  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  2500  001390  5011               	movf	(___aodiv@divisor+7)^0,w,c
  2501  001392  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  2502  001394  A0D8               	btfss	status,0,c
  2503  001396  EFCF  F009         	goto	u971
  2504  00139A  EFD1  F009         	goto	u970
  2505  00139E                     u971:
  2506  00139E  EFE2  F009         	goto	l1919
  2507  0013A2                     u970:
  2508  0013A2  500A               	movf	___aodiv@divisor^0,w,c
  2509  0013A4  5E02               	subwf	___aodiv@dividend^0,f,c
  2510  0013A6  500B               	movf	(___aodiv@divisor+1)^0,w,c
  2511  0013A8  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  2512  0013AA  500C               	movf	(___aodiv@divisor+2)^0,w,c
  2513  0013AC  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  2514  0013AE  500D               	movf	(___aodiv@divisor+3)^0,w,c
  2515  0013B0  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  2516  0013B2  500E               	movf	(___aodiv@divisor+4)^0,w,c
  2517  0013B4  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  2518  0013B6  500F               	movf	(___aodiv@divisor+5)^0,w,c
  2519  0013B8  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  2520  0013BA  5010               	movf	(___aodiv@divisor+6)^0,w,c
  2521  0013BC  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  2522  0013BE  5011               	movf	(___aodiv@divisor+7)^0,w,c
  2523  0013C0  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  2524  0013C2  8014               	bsf	___aodiv@quotient^0,0,c
  2525  0013C4                     l1919:
  2526  0013C4  90D8               	bcf	status,0,c
  2527  0013C6  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  2528  0013C8  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  2529  0013CA  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  2530  0013CC  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  2531  0013CE  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  2532  0013D0  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  2533  0013D2  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  2534  0013D4  320A               	rrcf	___aodiv@divisor^0,f,c
  2535  0013D6  2E12               	decfsz	___aodiv@counter^0,f,c
  2536  0013D8  EFB1  F009         	goto	l1911
  2537  0013DC                     l1923:
  2538  0013DC  5013               	movf	___aodiv@sign^0,w,c
  2539  0013DE  B4D8               	btfsc	status,2,c
  2540  0013E0  EFF4  F009         	goto	u981
  2541  0013E4  EFF6  F009         	goto	u980
  2542  0013E8                     u981:
  2543  0013E8  EF06  F00A         	goto	l1927
  2544  0013EC                     u980:
  2545  0013EC  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  2546  0013EE  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  2547  0013F0  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  2548  0013F2  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  2549  0013F4  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  2550  0013F6  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  2551  0013F8  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  2552  0013FA  6C14               	negf	___aodiv@quotient^0,c
  2553  0013FC  0E00               	movlw	0
  2554  0013FE  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  2555  001400  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  2556  001402  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  2557  001404  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  2558  001406  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  2559  001408  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  2560  00140A  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  2561  00140C                     l1927:
  2562  00140C  C014  F002         	movff	___aodiv@quotient,?___aodiv
  2563  001410  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  2564  001414  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  2565  001418  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  2566  00141C  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  2567  001420  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  2568  001424  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  2569  001428  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  2570  00142C  0012               	return		;funcret
  2571  00142E                     __end_of___aodiv:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _sendStringSerial4 *****************
  2575 ;; Defined at:
  2576 ;;		line 46 in file "serial.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  string          2    3[COMRAM] PTR unsigned char 
  2579 ;;		 -> main@buf(40), 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;Total ram usage:        3 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 3
  2598 ;; This function calls:
  2599 ;;		_sendCharSerial4
  2600 ;; This function is called by:
  2601 ;;		_main
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text13
  2606  001B76                     __ptext13:
  2607                           	callstack 0
  2608  001B76                     _sendStringSerial4:
  2609                           	callstack 27
  2610  001B76                     
  2611                           ;serial.c: 48:     while (*string != 0) {
  2612  001B76  EFCA  F00D         	goto	l2261
  2613  001B7A                     l2257:
  2614                           
  2615                           ;serial.c: 49:         sendCharSerial4(*string++);
  2616  001B7A  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2617  001B7E  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2618  001B82  50DF               	movf	indf2,w,c
  2619  001B84  6E06               	movwf	??_sendStringSerial4^0,c
  2620  001B86  5006               	movf	??_sendStringSerial4^0,w,c
  2621  001B88  6E02               	movwf	sendCharSerial4@charToSend^0,c
  2622  001B8A  6A03               	clrf	(sendCharSerial4@charToSend+1)^0,c
  2623  001B8C  EC72  F00E         	call	_sendCharSerial4	;wreg free
  2624  001B90  4A04               	infsnz	sendStringSerial4@string^0,f,c
  2625  001B92  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  2626  001B94                     l2261:
  2627                           
  2628                           ;serial.c: 48:     while (*string != 0) {
  2629  001B94  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2630  001B98  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2631  001B9C  50DF               	movf	indf2,w,c
  2632  001B9E  A4D8               	btfss	status,2,c
  2633  001BA0  EFD4  F00D         	goto	u1391
  2634  001BA4  EFD6  F00D         	goto	u1390
  2635  001BA8                     u1391:
  2636  001BA8  EFBD  F00D         	goto	l2257
  2637  001BAC                     u1390:
  2638  001BAC  0012               	return		;funcret
  2639  001BAE                     __end_of_sendStringSerial4:
  2640                           	callstack 0
  2641                           
  2642 ;; *************** function _sendCharSerial4 *****************
  2643 ;; Defined at:
  2644 ;;		line 37 in file "serial.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  charToSend      2    1[COMRAM] unsigned int 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		None
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;Total ram usage:        2 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 2
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_sendStringSerial4
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text14
  2673  001CE4                     __ptext14:
  2674                           	callstack 0
  2675  001CE4                     _sendCharSerial4:
  2676                           	callstack 27
  2677  001CE4                     l300:
  2678  001CE4  010E               	movlb	14	; () banked
  2679  001CE6  A537               	btfss	55,2,b	;volatile
  2680  001CE8  EF78  F00E         	goto	u1331
  2681  001CEC  EF7A  F00E         	goto	u1330
  2682  001CF0                     u1331:
  2683  001CF0  EF72  F00E         	goto	l300
  2684  001CF4                     u1330:
  2685  001CF4                     
  2686                           ; BSR set to: 14
  2687                           ;serial.c: 39:     TX4REG = charToSend;
  2688  001CF4  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2689  001CF8                     
  2690                           ; BSR set to: 14
  2691  001CF8  0012               	return		;funcret
  2692  001CFA                     __end_of_sendCharSerial4:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _interrupts_init *****************
  2696 ;; Defined at:
  2697 ;;		line 12 in file "interrupts.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 5
  2718 ;; This function calls:
  2719 ;;		_colorclick_writetoaddr
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text15
  2726  001B3A                     __ptext15:
  2727                           	callstack 0
  2728  001B3A                     _interrupts_init:
  2729                           	callstack 25
  2730  001B3A                     
  2731                           ;interrupts.c: 13:     TRISBbits.TRISB1 = 1;
  2732  001B3A  8282               	bsf	130,1,c	;volatile
  2733                           
  2734                           ;interrupts.c: 14:     ANSELBbits.ANSELB1 = 0;
  2735  001B3C  010E               	movlb	14	; () banked
  2736  001B3E  939A               	bcf	154,1,b	;volatile
  2737  001B40                     
  2738                           ; BSR set to: 14
  2739                           ;interrupts.c: 17:     colorclick_writetoaddr(0x04, 0x14);
  2740  001B40  0E14               	movlw	20
  2741  001B42  6E04               	movwf	colorclick_writetoaddr@value^0,c
  2742  001B44  0E04               	movlw	4
  2743  001B46  EC45  F00E         	call	_colorclick_writetoaddr
  2744                           
  2745                           ;interrupts.c: 18:     colorclick_writetoaddr(0x05, 0x05);
  2746  001B4A  0E05               	movlw	5
  2747  001B4C  6E04               	movwf	colorclick_writetoaddr@value^0,c
  2748  001B4E  0E05               	movlw	5
  2749  001B50  EC45  F00E         	call	_colorclick_writetoaddr
  2750                           
  2751                           ;interrupts.c: 19:     colorclick_writetoaddr(0x06, 0x6C);
  2752  001B54  0E6C               	movlw	108
  2753  001B56  6E04               	movwf	colorclick_writetoaddr@value^0,c
  2754  001B58  0E06               	movlw	6
  2755  001B5A  EC45  F00E         	call	_colorclick_writetoaddr
  2756                           
  2757                           ;interrupts.c: 20:     colorclick_writetoaddr(0x07, 0x07);
  2758  001B5E  0E07               	movlw	7
  2759  001B60  6E04               	movwf	colorclick_writetoaddr@value^0,c
  2760  001B62  0E07               	movlw	7
  2761  001B64  EC45  F00E         	call	_colorclick_writetoaddr
  2762  001B68                     
  2763                           ;interrupts.c: 22:     PIE0bits.INT1IE = 1;
  2764  001B68  010E               	movlb	14	; () banked
  2765  001B6A  8329               	bsf	41,1,b	;volatile
  2766  001B6C                     
  2767                           ; BSR set to: 14
  2768                           ;interrupts.c: 25:     IPR0bits.INT1IP = 1;
  2769  001B6C  831F               	bsf	31,1,b	;volatile
  2770  001B6E                     
  2771                           ; BSR set to: 14
  2772                           ;interrupts.c: 28:     INTCONbits.IPEN = 1;
  2773  001B6E  8AF2               	bsf	242,5,c	;volatile
  2774  001B70                     
  2775                           ; BSR set to: 14
  2776                           ;interrupts.c: 29:     INTCONbits.PEIE = 1;
  2777  001B70  8CF2               	bsf	242,6,c	;volatile
  2778  001B72                     
  2779                           ; BSR set to: 14
  2780                           ;interrupts.c: 30:     INTCONbits.GIE = 1;
  2781  001B72  8EF2               	bsf	242,7,c	;volatile
  2782  001B74                     
  2783                           ; BSR set to: 14
  2784  001B74  0012               	return		;funcret
  2785  001B76                     __end_of_interrupts_init:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _colorclick_readColour *****************
  2789 ;; Defined at:
  2790 ;;		line 161 in file "color_click.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  current         8   12[COMRAM] struct .
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  8   12[COMRAM] struct .
  2797 ;; Registers used:
  2798 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2804 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;Total ram usage:        8 bytes
  2809 ;; Hardware stack levels used: 1
  2810 ;; Hardware stack levels required when called: 5
  2811 ;; This function calls:
  2812 ;;		_colorclick_readBlue
  2813 ;;		_colorclick_readClear
  2814 ;;		_colorclick_readGreen
  2815 ;;		_colorclick_readRed
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text16
  2822  001A34                     __ptext16:
  2823                           	callstack 0
  2824  001A34                     _colorclick_readColour:
  2825                           	callstack 25
  2826  001A34                     
  2827                           ;color_click.c: 161: RGB_val colorclick_readColour(RGB_val current);color_click.c: 162: 
      +                          {;color_click.c: 163:     current.R = colorclick_readRed();
  2828  001A34  EC58  F00C         	call	_colorclick_readRed	;wreg free
  2829  001A38  C006  F00D         	movff	?_colorclick_readRed,colorclick_readColour@current
  2830  001A3C  C007  F00E         	movff	?_colorclick_readRed+1,colorclick_readColour@current+1
  2831                           
  2832                           ;color_click.c: 164:     current.G = colorclick_readGreen();
  2833  001A40  EC80  F00C         	call	_colorclick_readGreen	;wreg free
  2834  001A44  C006  F00F         	movff	?_colorclick_readGreen,colorclick_readColour@current+2
  2835  001A48  C007  F010         	movff	?_colorclick_readGreen+1,colorclick_readColour@current+3
  2836                           
  2837                           ;color_click.c: 165:     current.B = colorclick_readBlue();
  2838  001A4C  ECD0  F00C         	call	_colorclick_readBlue	;wreg free
  2839  001A50  C006  F011         	movff	?_colorclick_readBlue,colorclick_readColour@current+4
  2840  001A54  C007  F012         	movff	?_colorclick_readBlue+1,colorclick_readColour@current+5
  2841                           
  2842                           ;color_click.c: 166:     current.C = colorclick_readClear();
  2843  001A58  ECA8  F00C         	call	_colorclick_readClear	;wreg free
  2844  001A5C  C006  F013         	movff	?_colorclick_readClear,colorclick_readColour@current+6
  2845  001A60  C007  F014         	movff	?_colorclick_readClear+1,colorclick_readColour@current+7
  2846  001A64                     
  2847                           ;color_click.c: 168:     return current;
  2848  001A64  EE20  F00D         	lfsr	2,colorclick_readColour@current
  2849  001A68  EE00  F00D         	lfsr	0,?_colorclick_readColour
  2850  001A6C  0E07               	movlw	7
  2851  001A6E                     u1381:
  2852  001A6E  CFDB FFEB          	movff	plusw2,plusw0
  2853  001A72  06E8               	decf	wreg,f,c
  2854  001A74  E2FC               	bc	u1381
  2855  001A76  0012               	return		;funcret
  2856  001A78                     __end_of_colorclick_readColour:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _colorclick_readRed *****************
  2860 ;; Defined at:
  2861 ;;		line 86 in file "color_click.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  tmp             2   10[COMRAM] unsigned int 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  2    5[COMRAM] unsigned int 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;Total ram usage:        7 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 4
  2882 ;; This function calls:
  2883 ;;		_I2C_2_Master_Read
  2884 ;;		_I2C_2_Master_RepStart
  2885 ;;		_I2C_2_Master_Start
  2886 ;;		_I2C_2_Master_Stop
  2887 ;;		_I2C_2_Master_Write
  2888 ;; This function is called by:
  2889 ;;		_colorclick_readColour
  2890 ;;		_read_card
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text17
  2895  0018B0                     __ptext17:
  2896                           	callstack 0
  2897  0018B0                     _colorclick_readRed:
  2898                           	callstack 25
  2899  0018B0                     
  2900                           ;color_click.c: 88:  unsigned int tmp;;color_click.c: 89:  I2C_2_Master_Start();
  2901  0018B0  EC8D  F00E         	call	_I2C_2_Master_Start	;wreg free
  2902                           
  2903                           ;color_click.c: 90:  I2C_2_Master_Write(0x52 | 0x00);
  2904  0018B4  0E52               	movlw	82
  2905  0018B6  EC7D  F00E         	call	_I2C_2_Master_Write
  2906                           
  2907                           ;color_click.c: 91:  I2C_2_Master_Write(0xA0 | 0x16);
  2908  0018BA  0EB6               	movlw	182
  2909  0018BC  EC7D  F00E         	call	_I2C_2_Master_Write
  2910                           
  2911                           ;color_click.c: 92:  I2C_2_Master_RepStart();
  2912  0018C0  EC83  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2913                           
  2914                           ;color_click.c: 93:  I2C_2_Master_Write(0x52 | 0x01);
  2915  0018C4  0E53               	movlw	83
  2916  0018C6  EC7D  F00E         	call	_I2C_2_Master_Write
  2917                           
  2918                           ;color_click.c: 94:  tmp=I2C_2_Master_Read(1);
  2919  0018CA  0E01               	movlw	1
  2920  0018CC  EC3C  F00D         	call	_I2C_2_Master_Read
  2921  0018D0  6E08               	movwf	??_colorclick_readRed^0,c
  2922  0018D2  5008               	movf	??_colorclick_readRed^0,w,c
  2923  0018D4  6E0B               	movwf	colorclick_readRed@tmp^0,c
  2924  0018D6  6A0C               	clrf	(colorclick_readRed@tmp+1)^0,c
  2925                           
  2926                           ;color_click.c: 95:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2927  0018D8  0E00               	movlw	0
  2928  0018DA  EC3C  F00D         	call	_I2C_2_Master_Read
  2929  0018DE  6E08               	movwf	??_colorclick_readRed^0,c
  2930  0018E0  5008               	movf	??_colorclick_readRed^0,w,c
  2931  0018E2  6E0A               	movwf	(??_colorclick_readRed+2)^0,c
  2932  0018E4  6A09               	clrf	(??_colorclick_readRed+1)^0,c
  2933  0018E6  500B               	movf	colorclick_readRed@tmp^0,w,c
  2934  0018E8  1009               	iorwf	(??_colorclick_readRed+1)^0,w,c
  2935  0018EA  6E0B               	movwf	colorclick_readRed@tmp^0,c
  2936  0018EC  500C               	movf	(colorclick_readRed@tmp+1)^0,w,c
  2937  0018EE  100A               	iorwf	(??_colorclick_readRed+2)^0,w,c
  2938  0018F0  6E0C               	movwf	(colorclick_readRed@tmp+1)^0,c
  2939                           
  2940                           ;color_click.c: 96:  I2C_2_Master_Stop();
  2941  0018F2  EC88  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2942  0018F6                     
  2943                           ;color_click.c: 97:  return tmp;
  2944  0018F6  C00B  F006         	movff	colorclick_readRed@tmp,?_colorclick_readRed
  2945  0018FA  C00C  F007         	movff	colorclick_readRed@tmp+1,?_colorclick_readRed+1
  2946  0018FE  0012               	return		;funcret
  2947  001900                     __end_of_colorclick_readRed:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _colorclick_readGreen *****************
  2951 ;; Defined at:
  2952 ;;		line 105 in file "color_click.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  tmp             2   10[COMRAM] unsigned int 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2    5[COMRAM] unsigned int 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;Total ram usage:        7 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 4
  2973 ;; This function calls:
  2974 ;;		_I2C_2_Master_Read
  2975 ;;		_I2C_2_Master_RepStart
  2976 ;;		_I2C_2_Master_Start
  2977 ;;		_I2C_2_Master_Stop
  2978 ;;		_I2C_2_Master_Write
  2979 ;; This function is called by:
  2980 ;;		_colorclick_readColour
  2981 ;;		_read_card
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text18
  2986  001900                     __ptext18:
  2987                           	callstack 0
  2988  001900                     _colorclick_readGreen:
  2989                           	callstack 25
  2990  001900                     
  2991                           ;color_click.c: 107:  unsigned int tmp;;color_click.c: 108:  I2C_2_Master_Start();
  2992  001900  EC8D  F00E         	call	_I2C_2_Master_Start	;wreg free
  2993                           
  2994                           ;color_click.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  2995  001904  0E52               	movlw	82
  2996  001906  EC7D  F00E         	call	_I2C_2_Master_Write
  2997                           
  2998                           ;color_click.c: 110:  I2C_2_Master_Write(0xA0 | 0x18);
  2999  00190A  0EB8               	movlw	184
  3000  00190C  EC7D  F00E         	call	_I2C_2_Master_Write
  3001                           
  3002                           ;color_click.c: 111:  I2C_2_Master_RepStart();
  3003  001910  EC83  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3004                           
  3005                           ;color_click.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  3006  001914  0E53               	movlw	83
  3007  001916  EC7D  F00E         	call	_I2C_2_Master_Write
  3008                           
  3009                           ;color_click.c: 113:  tmp=I2C_2_Master_Read(1);
  3010  00191A  0E01               	movlw	1
  3011  00191C  EC3C  F00D         	call	_I2C_2_Master_Read
  3012  001920  6E08               	movwf	??_colorclick_readGreen^0,c
  3013  001922  5008               	movf	??_colorclick_readGreen^0,w,c
  3014  001924  6E0B               	movwf	colorclick_readGreen@tmp^0,c
  3015  001926  6A0C               	clrf	(colorclick_readGreen@tmp+1)^0,c
  3016                           
  3017                           ;color_click.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3018  001928  0E00               	movlw	0
  3019  00192A  EC3C  F00D         	call	_I2C_2_Master_Read
  3020  00192E  6E08               	movwf	??_colorclick_readGreen^0,c
  3021  001930  5008               	movf	??_colorclick_readGreen^0,w,c
  3022  001932  6E0A               	movwf	(??_colorclick_readGreen+2)^0,c
  3023  001934  6A09               	clrf	(??_colorclick_readGreen+1)^0,c
  3024  001936  500B               	movf	colorclick_readGreen@tmp^0,w,c
  3025  001938  1009               	iorwf	(??_colorclick_readGreen+1)^0,w,c
  3026  00193A  6E0B               	movwf	colorclick_readGreen@tmp^0,c
  3027  00193C  500C               	movf	(colorclick_readGreen@tmp+1)^0,w,c
  3028  00193E  100A               	iorwf	(??_colorclick_readGreen+2)^0,w,c
  3029  001940  6E0C               	movwf	(colorclick_readGreen@tmp+1)^0,c
  3030                           
  3031                           ;color_click.c: 115:  I2C_2_Master_Stop();
  3032  001942  EC88  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3033  001946                     
  3034                           ;color_click.c: 116:  return tmp;
  3035  001946  C00B  F006         	movff	colorclick_readGreen@tmp,?_colorclick_readGreen
  3036  00194A  C00C  F007         	movff	colorclick_readGreen@tmp+1,?_colorclick_readGreen+1
  3037  00194E  0012               	return		;funcret
  3038  001950                     __end_of_colorclick_readGreen:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _colorclick_readClear *****************
  3042 ;; Defined at:
  3043 ;;		line 143 in file "color_click.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  tmp             2   10[COMRAM] unsigned int 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  2    5[COMRAM] unsigned int 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3059 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3060 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;Total ram usage:        7 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; Hardware stack levels required when called: 4
  3064 ;; This function calls:
  3065 ;;		_I2C_2_Master_Read
  3066 ;;		_I2C_2_Master_RepStart
  3067 ;;		_I2C_2_Master_Start
  3068 ;;		_I2C_2_Master_Stop
  3069 ;;		_I2C_2_Master_Write
  3070 ;; This function is called by:
  3071 ;;		_colorclick_readColour
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text19
  3076  001950                     __ptext19:
  3077                           	callstack 0
  3078  001950                     _colorclick_readClear:
  3079                           	callstack 25
  3080  001950                     
  3081                           ;color_click.c: 145:  unsigned int tmp;;color_click.c: 146:  I2C_2_Master_Start();
  3082  001950  EC8D  F00E         	call	_I2C_2_Master_Start	;wreg free
  3083                           
  3084                           ;color_click.c: 147:  I2C_2_Master_Write(0x52 | 0x00);
  3085  001954  0E52               	movlw	82
  3086  001956  EC7D  F00E         	call	_I2C_2_Master_Write
  3087                           
  3088                           ;color_click.c: 148:  I2C_2_Master_Write(0xA0 | 0x14);
  3089  00195A  0EB4               	movlw	180
  3090  00195C  EC7D  F00E         	call	_I2C_2_Master_Write
  3091                           
  3092                           ;color_click.c: 149:  I2C_2_Master_RepStart();
  3093  001960  EC83  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3094                           
  3095                           ;color_click.c: 150:  I2C_2_Master_Write(0x52 | 0x01);
  3096  001964  0E53               	movlw	83
  3097  001966  EC7D  F00E         	call	_I2C_2_Master_Write
  3098                           
  3099                           ;color_click.c: 151:  tmp=I2C_2_Master_Read(1);
  3100  00196A  0E01               	movlw	1
  3101  00196C  EC3C  F00D         	call	_I2C_2_Master_Read
  3102  001970  6E08               	movwf	??_colorclick_readClear^0,c
  3103  001972  5008               	movf	??_colorclick_readClear^0,w,c
  3104  001974  6E0B               	movwf	colorclick_readClear@tmp^0,c
  3105  001976  6A0C               	clrf	(colorclick_readClear@tmp+1)^0,c
  3106                           
  3107                           ;color_click.c: 152:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3108  001978  0E00               	movlw	0
  3109  00197A  EC3C  F00D         	call	_I2C_2_Master_Read
  3110  00197E  6E08               	movwf	??_colorclick_readClear^0,c
  3111  001980  5008               	movf	??_colorclick_readClear^0,w,c
  3112  001982  6E0A               	movwf	(??_colorclick_readClear+2)^0,c
  3113  001984  6A09               	clrf	(??_colorclick_readClear+1)^0,c
  3114  001986  500B               	movf	colorclick_readClear@tmp^0,w,c
  3115  001988  1009               	iorwf	(??_colorclick_readClear+1)^0,w,c
  3116  00198A  6E0B               	movwf	colorclick_readClear@tmp^0,c
  3117  00198C  500C               	movf	(colorclick_readClear@tmp+1)^0,w,c
  3118  00198E  100A               	iorwf	(??_colorclick_readClear+2)^0,w,c
  3119  001990  6E0C               	movwf	(colorclick_readClear@tmp+1)^0,c
  3120                           
  3121                           ;color_click.c: 153:  I2C_2_Master_Stop();
  3122  001992  EC88  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3123  001996                     
  3124                           ;color_click.c: 154:  return tmp;
  3125  001996  C00B  F006         	movff	colorclick_readClear@tmp,?_colorclick_readClear
  3126  00199A  C00C  F007         	movff	colorclick_readClear@tmp+1,?_colorclick_readClear+1
  3127  00199E  0012               	return		;funcret
  3128  0019A0                     __end_of_colorclick_readClear:
  3129                           	callstack 0
  3130                           
  3131 ;; *************** function _colorclick_readBlue *****************
  3132 ;; Defined at:
  3133 ;;		line 124 in file "color_click.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  tmp             2   10[COMRAM] unsigned int 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  2    5[COMRAM] unsigned int 
  3140 ;; Registers used:
  3141 ;;		wreg, status,2, status,0, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3148 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3149 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;Total ram usage:        7 bytes
  3152 ;; Hardware stack levels used: 1
  3153 ;; Hardware stack levels required when called: 4
  3154 ;; This function calls:
  3155 ;;		_I2C_2_Master_Read
  3156 ;;		_I2C_2_Master_RepStart
  3157 ;;		_I2C_2_Master_Start
  3158 ;;		_I2C_2_Master_Stop
  3159 ;;		_I2C_2_Master_Write
  3160 ;; This function is called by:
  3161 ;;		_colorclick_readColour
  3162 ;;		_read_card
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text20
  3167  0019A0                     __ptext20:
  3168                           	callstack 0
  3169  0019A0                     _colorclick_readBlue:
  3170                           	callstack 25
  3171  0019A0                     
  3172                           ;color_click.c: 126:  unsigned int tmp;;color_click.c: 127:  I2C_2_Master_Start();
  3173  0019A0  EC8D  F00E         	call	_I2C_2_Master_Start	;wreg free
  3174                           
  3175                           ;color_click.c: 128:  I2C_2_Master_Write(0x52 | 0x00);
  3176  0019A4  0E52               	movlw	82
  3177  0019A6  EC7D  F00E         	call	_I2C_2_Master_Write
  3178                           
  3179                           ;color_click.c: 129:  I2C_2_Master_Write(0xA0 | 0x1A);
  3180  0019AA  0EBA               	movlw	186
  3181  0019AC  EC7D  F00E         	call	_I2C_2_Master_Write
  3182                           
  3183                           ;color_click.c: 130:  I2C_2_Master_RepStart();
  3184  0019B0  EC83  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3185                           
  3186                           ;color_click.c: 131:  I2C_2_Master_Write(0x52 | 0x01);
  3187  0019B4  0E53               	movlw	83
  3188  0019B6  EC7D  F00E         	call	_I2C_2_Master_Write
  3189                           
  3190                           ;color_click.c: 132:  tmp=I2C_2_Master_Read(1);
  3191  0019BA  0E01               	movlw	1
  3192  0019BC  EC3C  F00D         	call	_I2C_2_Master_Read
  3193  0019C0  6E08               	movwf	??_colorclick_readBlue^0,c
  3194  0019C2  5008               	movf	??_colorclick_readBlue^0,w,c
  3195  0019C4  6E0B               	movwf	colorclick_readBlue@tmp^0,c
  3196  0019C6  6A0C               	clrf	(colorclick_readBlue@tmp+1)^0,c
  3197                           
  3198                           ;color_click.c: 133:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3199  0019C8  0E00               	movlw	0
  3200  0019CA  EC3C  F00D         	call	_I2C_2_Master_Read
  3201  0019CE  6E08               	movwf	??_colorclick_readBlue^0,c
  3202  0019D0  5008               	movf	??_colorclick_readBlue^0,w,c
  3203  0019D2  6E0A               	movwf	(??_colorclick_readBlue+2)^0,c
  3204  0019D4  6A09               	clrf	(??_colorclick_readBlue+1)^0,c
  3205  0019D6  500B               	movf	colorclick_readBlue@tmp^0,w,c
  3206  0019D8  1009               	iorwf	(??_colorclick_readBlue+1)^0,w,c
  3207  0019DA  6E0B               	movwf	colorclick_readBlue@tmp^0,c
  3208  0019DC  500C               	movf	(colorclick_readBlue@tmp+1)^0,w,c
  3209  0019DE  100A               	iorwf	(??_colorclick_readBlue+2)^0,w,c
  3210  0019E0  6E0C               	movwf	(colorclick_readBlue@tmp+1)^0,c
  3211                           
  3212                           ;color_click.c: 134:  I2C_2_Master_Stop();
  3213  0019E2  EC88  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3214  0019E6                     
  3215                           ;color_click.c: 135:  return tmp;
  3216  0019E6  C00B  F006         	movff	colorclick_readBlue@tmp,?_colorclick_readBlue
  3217  0019EA  C00C  F007         	movff	colorclick_readBlue@tmp+1,?_colorclick_readBlue+1
  3218  0019EE  0012               	return		;funcret
  3219  0019F0                     __end_of_colorclick_readBlue:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function _I2C_2_Master_RepStart *****************
  3223 ;; Defined at:
  3224 ;;		line 49 in file "i2c.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      void 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3242 ;;Total ram usage:        0 bytes
  3243 ;; Hardware stack levels used: 1
  3244 ;; Hardware stack levels required when called: 3
  3245 ;; This function calls:
  3246 ;;		_I2C_2_Master_Idle
  3247 ;; This function is called by:
  3248 ;;		_colorclick_readRed
  3249 ;;		_colorclick_readGreen
  3250 ;;		_colorclick_readBlue
  3251 ;;		_colorclick_readClear
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text21
  3256  001D06                     __ptext21:
  3257                           	callstack 0
  3258  001D06                     _I2C_2_Master_RepStart:
  3259                           	callstack 25
  3260  001D06                     
  3261                           ;i2c.c: 51:   I2C_2_Master_Idle();
  3262  001D06  EC20  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3263  001D0A                     
  3264                           ;i2c.c: 52:   SSP2CON2bits.RSEN = 1;
  3265  001D0A  010E               	movlb	14	; () banked
  3266  001D0C  83DA               	bsf	218,1,b	;volatile
  3267  001D0E                     
  3268                           ; BSR set to: 14
  3269  001D0E  0012               	return		;funcret
  3270  001D10                     __end_of_I2C_2_Master_RepStart:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _I2C_2_Master_Read *****************
  3274 ;; Defined at:
  3275 ;;		line 79 in file "i2c.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  ack             1    wreg     unsigned char 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  ack             1    3[COMRAM] unsigned char 
  3280 ;;  tmp             1    4[COMRAM] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      unsigned char 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;Total ram usage:        3 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; Hardware stack levels required when called: 3
  3297 ;; This function calls:
  3298 ;;		_I2C_2_Master_Idle
  3299 ;; This function is called by:
  3300 ;;		_colorclick_readRed
  3301 ;;		_colorclick_readGreen
  3302 ;;		_colorclick_readBlue
  3303 ;;		_colorclick_readClear
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text22
  3308  001A78                     __ptext22:
  3309                           	callstack 0
  3310  001A78                     _I2C_2_Master_Read:
  3311                           	callstack 25
  3312                           
  3313                           ; BSR set to: 14
  3314                           ;incstack = 0
  3315                           ;I2C_2_Master_Read@ack stored from wreg
  3316  001A78  6E04               	movwf	I2C_2_Master_Read@ack^0,c
  3317  001A7A                     
  3318                           ;i2c.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 80: {;i2c.c: 81:  
      +                           unsigned char tmp;;i2c.c: 82:   I2C_2_Master_Idle();
  3319  001A7A  EC20  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3320  001A7E                     
  3321                           ;i2c.c: 83:   SSP2CON2bits.RCEN = 1;
  3322  001A7E  010E               	movlb	14	; () banked
  3323  001A80  87DA               	bsf	218,3,b	;volatile
  3324                           
  3325                           ;i2c.c: 84:   I2C_2_Master_Idle();
  3326  001A82  EC20  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3327  001A86                     
  3328                           ;i2c.c: 85:   tmp = SSP2BUF;
  3329  001A86  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3330                           
  3331                           ;i2c.c: 86:   I2C_2_Master_Idle();
  3332  001A8A  EC20  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3333  001A8E                     
  3334                           ;i2c.c: 87:   SSP2CON2bits.ACKDT = !ack;
  3335  001A8E  5004               	movf	I2C_2_Master_Read@ack^0,w,c
  3336  001A90  B4D8               	btfsc	status,2,c
  3337  001A92  EF4D  F00D         	goto	u1271
  3338  001A96  EF51  F00D         	goto	u1270
  3339  001A9A                     u1271:
  3340  001A9A  6A03               	clrf	??_I2C_2_Master_Read^0,c
  3341  001A9C  2A03               	incf	??_I2C_2_Master_Read^0,f,c
  3342  001A9E  EF52  F00D         	goto	u1288
  3343  001AA2                     u1270:
  3344  001AA2  6A03               	clrf	??_I2C_2_Master_Read^0,c
  3345  001AA4                     u1288:
  3346  001AA4  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
  3347  001AA6  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
  3348  001AA8  010E               	movlb	14	; () banked
  3349  001AAA  51DA               	movf	218,w,b	;volatile
  3350  001AAC  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  3351  001AAE  0BDF               	andlw	-33
  3352  001AB0  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  3353  001AB2  6FDA               	movwf	218,b	;volatile
  3354  001AB4                     
  3355                           ; BSR set to: 14
  3356                           ;i2c.c: 88:   SSP2CON2bits.ACKEN = 1;
  3357  001AB4  89DA               	bsf	218,4,b	;volatile
  3358  001AB6                     
  3359                           ; BSR set to: 14
  3360                           ;i2c.c: 89:   return tmp;
  3361  001AB6  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
  3362  001AB8                     
  3363                           ; BSR set to: 14
  3364  001AB8  0012               	return		;funcret
  3365  001ABA                     __end_of_I2C_2_Master_Read:
  3366                           	callstack 0
  3367                           
  3368 ;; *************** function _colorclick_init *****************
  3369 ;; Defined at:
  3370 ;;		line 9 in file "color_click.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3388 ;;Total ram usage:        1 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 5
  3391 ;; This function calls:
  3392 ;;		_I2C_2_Master_Init
  3393 ;;		_colorclick_toggleClearLED
  3394 ;;		_colorclick_writetoaddr
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text23
  3401  001AFA                     __ptext23:
  3402                           	callstack 0
  3403  001AFA                     _colorclick_init:
  3404                           	callstack 25
  3405  001AFA                     
  3406                           ;color_click.c: 12:     I2C_2_Master_Init();
  3407  001AFA  EC0B  F00E         	call	_I2C_2_Master_Init	;wreg free
  3408  001AFE                     
  3409                           ;color_click.c: 15:   colorclick_writetoaddr(0x00, 0x01);
  3410  001AFE  0E01               	movlw	1
  3411  001B00  6E04               	movwf	colorclick_writetoaddr@value^0,c
  3412  001B02  0E00               	movlw	0
  3413  001B04  EC45  F00E         	call	_colorclick_writetoaddr
  3414  001B08                     
  3415                           ;color_click.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3416  001B08  0E3F               	movlw	63
  3417  001B0A  6E06               	movwf	??_colorclick_init^0,c
  3418  001B0C  0E55               	movlw	85
  3419  001B0E                     u1537:
  3420  001B0E  2EE8               	decfsz	wreg,f,c
  3421  001B10  D7FE               	bra	u1537
  3422  001B12  2E06               	decfsz	??_colorclick_init^0,f,c
  3423  001B14  D7FC               	bra	u1537
  3424  001B16  F000               	nop	
  3425  001B18                     
  3426                           ;color_click.c: 19:  colorclick_writetoaddr(0x00, 0x03);
  3427  001B18  0E03               	movlw	3
  3428  001B1A  6E04               	movwf	colorclick_writetoaddr@value^0,c
  3429  001B1C  0E00               	movlw	0
  3430  001B1E  EC45  F00E         	call	_colorclick_writetoaddr
  3431  001B22                     
  3432                           ;color_click.c: 22:  colorclick_writetoaddr(0x01, 0xD5);
  3433  001B22  0ED5               	movlw	213
  3434  001B24  6E04               	movwf	colorclick_writetoaddr@value^0,c
  3435  001B26  0E01               	movlw	1
  3436  001B28  EC45  F00E         	call	_colorclick_writetoaddr
  3437  001B2C                     
  3438                           ;color_click.c: 25:     TRISGbits.TRISG1 = 0;
  3439  001B2C  9287               	bcf	135,1,c	;volatile
  3440  001B2E                     
  3441                           ;color_click.c: 26:     TRISAbits.TRISA4 = 0;
  3442  001B2E  9881               	bcf	129,4,c	;volatile
  3443  001B30                     
  3444                           ;color_click.c: 27:     TRISFbits.TRISF7 = 0;
  3445  001B30  9E86               	bcf	134,7,c	;volatile
  3446  001B32                     
  3447                           ;color_click.c: 30:     colorclick_toggleClearLED(1);
  3448  001B32  0E01               	movlw	1
  3449  001B34  EC34  F00E         	call	_colorclick_toggleClearLED
  3450  001B38  0012               	return		;funcret
  3451  001B3A                     __end_of_colorclick_init:
  3452                           	callstack 0
  3453                           
  3454 ;; *************** function _colorclick_writetoaddr *****************
  3455 ;; Defined at:
  3456 ;;		line 72 in file "color_click.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  address         1    wreg     unsigned char 
  3459 ;;  value           1    3[COMRAM] unsigned char 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  address         1    4[COMRAM] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3471 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3475 ;;Total ram usage:        2 bytes
  3476 ;; Hardware stack levels used: 1
  3477 ;; Hardware stack levels required when called: 4
  3478 ;; This function calls:
  3479 ;;		_I2C_2_Master_Start
  3480 ;;		_I2C_2_Master_Stop
  3481 ;;		_I2C_2_Master_Write
  3482 ;; This function is called by:
  3483 ;;		_interrupts_init
  3484 ;;		_colorclick_init
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text24
  3489  001C8A                     __ptext24:
  3490                           	callstack 0
  3491  001C8A                     _colorclick_writetoaddr:
  3492                           	callstack 25
  3493                           
  3494                           ;incstack = 0
  3495                           ;colorclick_writetoaddr@address stored from wreg
  3496  001C8A  6E05               	movwf	colorclick_writetoaddr@address^0,c
  3497  001C8C                     
  3498                           ;color_click.c: 72: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           73: {;color_click.c: 74:     I2C_2_Master_Start();
  3499  001C8C  EC8D  F00E         	call	_I2C_2_Master_Start	;wreg free
  3500                           
  3501                           ;color_click.c: 75:     I2C_2_Master_Write(0x52 | 0x00);
  3502  001C90  0E52               	movlw	82
  3503  001C92  EC7D  F00E         	call	_I2C_2_Master_Write
  3504                           
  3505                           ;color_click.c: 76:     I2C_2_Master_Write(0x80 | address);
  3506  001C96  5005               	movf	colorclick_writetoaddr@address^0,w,c
  3507  001C98  0980               	iorlw	128
  3508  001C9A  EC7D  F00E         	call	_I2C_2_Master_Write
  3509                           
  3510                           ;color_click.c: 77:     I2C_2_Master_Write(value);
  3511  001C9E  5004               	movf	colorclick_writetoaddr@value^0,w,c
  3512  001CA0  EC7D  F00E         	call	_I2C_2_Master_Write
  3513                           
  3514                           ;color_click.c: 78:     I2C_2_Master_Stop();
  3515  001CA4  EC88  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3516  001CA8  0012               	return		;funcret
  3517  001CAA                     __end_of_colorclick_writetoaddr:
  3518                           	callstack 0
  3519                           
  3520 ;; *************** function _I2C_2_Master_Write *****************
  3521 ;; Defined at:
  3522 ;;		line 69 in file "i2c.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  data_byte       1    wreg     unsigned char 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  data_byte       1    2[COMRAM] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3540 ;;Total ram usage:        1 bytes
  3541 ;; Hardware stack levels used: 1
  3542 ;; Hardware stack levels required when called: 3
  3543 ;; This function calls:
  3544 ;;		_I2C_2_Master_Idle
  3545 ;; This function is called by:
  3546 ;;		_colorclick_writetoaddr
  3547 ;;		_colorclick_readRed
  3548 ;;		_colorclick_readGreen
  3549 ;;		_colorclick_readBlue
  3550 ;;		_colorclick_readClear
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text25
  3555  001CFA                     __ptext25:
  3556                           	callstack 0
  3557  001CFA                     _I2C_2_Master_Write:
  3558                           	callstack 25
  3559                           
  3560                           ;incstack = 0
  3561                           ;I2C_2_Master_Write@data_byte stored from wreg
  3562  001CFA  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
  3563  001CFC                     
  3564                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  3565  001CFC  EC20  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3566  001D00                     
  3567                           ;i2c.c: 72:   SSP2BUF = data_byte;
  3568  001D00  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3569  001D04  0012               	return		;funcret
  3570  001D06                     __end_of_I2C_2_Master_Write:
  3571                           	callstack 0
  3572                           
  3573 ;; *************** function _I2C_2_Master_Stop *****************
  3574 ;; Defined at:
  3575 ;;		line 59 in file "i2c.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 3
  3596 ;; This function calls:
  3597 ;;		_I2C_2_Master_Idle
  3598 ;; This function is called by:
  3599 ;;		_colorclick_writetoaddr
  3600 ;;		_colorclick_readRed
  3601 ;;		_colorclick_readGreen
  3602 ;;		_colorclick_readBlue
  3603 ;;		_colorclick_readClear
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text26
  3608  001D10                     __ptext26:
  3609                           	callstack 0
  3610  001D10                     _I2C_2_Master_Stop:
  3611                           	callstack 25
  3612  001D10                     
  3613                           ;i2c.c: 61:   I2C_2_Master_Idle();
  3614  001D10  EC20  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3615  001D14                     
  3616                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  3617  001D14  010E               	movlb	14	; () banked
  3618  001D16  85DA               	bsf	218,2,b	;volatile
  3619  001D18                     
  3620                           ; BSR set to: 14
  3621  001D18  0012               	return		;funcret
  3622  001D1A                     __end_of_I2C_2_Master_Stop:
  3623                           	callstack 0
  3624                           
  3625 ;; *************** function _I2C_2_Master_Start *****************
  3626 ;; Defined at:
  3627 ;;		line 39 in file "i2c.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;Total ram usage:        0 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; Hardware stack levels required when called: 3
  3648 ;; This function calls:
  3649 ;;		_I2C_2_Master_Idle
  3650 ;; This function is called by:
  3651 ;;		_colorclick_writetoaddr
  3652 ;;		_colorclick_readRed
  3653 ;;		_colorclick_readGreen
  3654 ;;		_colorclick_readBlue
  3655 ;;		_colorclick_readClear
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text27
  3660  001D1A                     __ptext27:
  3661                           	callstack 0
  3662  001D1A                     _I2C_2_Master_Start:
  3663                           	callstack 25
  3664  001D1A                     
  3665                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3666  001D1A  EC20  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3667  001D1E                     
  3668                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  3669  001D1E  010E               	movlb	14	; () banked
  3670  001D20  81DA               	bsf	218,0,b	;volatile
  3671  001D22                     
  3672                           ; BSR set to: 14
  3673  001D22  0012               	return		;funcret
  3674  001D24                     __end_of_I2C_2_Master_Start:
  3675                           	callstack 0
  3676                           
  3677 ;; *************** function _I2C_2_Master_Idle *****************
  3678 ;; Defined at:
  3679 ;;		line 30 in file "i2c.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;Total ram usage:        1 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; Hardware stack levels required when called: 2
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_I2C_2_Master_Start
  3704 ;;		_I2C_2_Master_RepStart
  3705 ;;		_I2C_2_Master_Stop
  3706 ;;		_I2C_2_Master_Write
  3707 ;;		_I2C_2_Master_Read
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text28
  3712  001C40                     __ptext28:
  3713                           	callstack 0
  3714  001C40                     _I2C_2_Master_Idle:
  3715                           	callstack 25
  3716  001C40                     l30:
  3717  001C40  010E               	movlb	14	; () banked
  3718  001C42  B5D8               	btfsc	216,2,b	;volatile
  3719  001C44  EF26  F00E         	goto	u1101
  3720  001C48  EF28  F00E         	goto	u1100
  3721  001C4C                     u1101:
  3722  001C4C  EF20  F00E         	goto	l30
  3723  001C50                     u1100:
  3724  001C50                     
  3725                           ; BSR set to: 14
  3726  001C50  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3727  001C54  0E1F               	movlw	31
  3728  001C56  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
  3729  001C58  A4D8               	btfss	status,2,c
  3730  001C5A  EF31  F00E         	goto	u1111
  3731  001C5E  EF33  F00E         	goto	u1110
  3732  001C62                     u1111:
  3733  001C62  EF20  F00E         	goto	l30
  3734  001C66                     u1110:
  3735  001C66                     
  3736                           ; BSR set to: 14
  3737  001C66  0012               	return		;funcret
  3738  001C68                     __end_of_I2C_2_Master_Idle:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function _colorclick_toggleClearLED *****************
  3742 ;; Defined at:
  3743 ;;		line 59 in file "color_click.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  toggle          1    wreg     unsigned char 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  toggle          1    1[COMRAM] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3761 ;;Total ram usage:        1 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 2
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_colorclick_init
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text29
  3772  001C68                     __ptext29:
  3773                           	callstack 0
  3774  001C68                     _colorclick_toggleClearLED:
  3775                           	callstack 27
  3776                           
  3777                           ; BSR set to: 14
  3778                           ;incstack = 0
  3779                           ;colorclick_toggleClearLED@toggle stored from wreg
  3780  001C68  6E02               	movwf	colorclick_toggleClearLED@toggle^0,c
  3781  001C6A                     
  3782                           ;color_click.c: 59: void colorclick_toggleClearLED(unsigned char toggle);color_click.c: 
      +                          60: {;color_click.c: 61:     LATGbits.LATG1 = toggle;
  3783  001C6A  B002               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  3784  001C6C  D002               	bra	u1345
  3785  001C6E  927F               	bcf	127,1,c	;volatile
  3786  001C70  D001               	bra	u1346
  3787  001C72                     u1345:
  3788  001C72  827F               	bsf	127,1,c	;volatile
  3789  001C74                     u1346:
  3790                           
  3791                           ;color_click.c: 62:     LATFbits.LATF7 = toggle;
  3792  001C74  B002               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  3793  001C76  D002               	bra	u1355
  3794  001C78  9E7E               	bcf	126,7,c	;volatile
  3795  001C7A  D001               	bra	u1356
  3796  001C7C                     u1355:
  3797  001C7C  8E7E               	bsf	126,7,c	;volatile
  3798  001C7E                     u1356:
  3799                           
  3800                           ;color_click.c: 63:     LATAbits.LATA4 = toggle;
  3801  001C7E  B002               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  3802  001C80  D002               	bra	u1365
  3803  001C82  9879               	bcf	121,4,c	;volatile
  3804  001C84  D001               	bra	u1366
  3805  001C86                     u1365:
  3806  001C86  8879               	bsf	121,4,c	;volatile
  3807  001C88                     u1366:
  3808  001C88  0012               	return		;funcret
  3809  001C8A                     __end_of_colorclick_toggleClearLED:
  3810                           	callstack 0
  3811                           
  3812 ;; *************** function _I2C_2_Master_Init *****************
  3813 ;; Defined at:
  3814 ;;		line 8 in file "i2c.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;		None
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;Total ram usage:        0 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; Hardware stack levels required when called: 2
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_colorclick_init
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text30
  3843  001C16                     __ptext30:
  3844                           	callstack 0
  3845  001C16                     _I2C_2_Master_Init:
  3846                           	callstack 27
  3847  001C16                     
  3848                           ;i2c.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  3849  001C16  010E               	movlb	14	; () banked
  3850  001C18  51D9               	movf	217,w,b	;volatile
  3851  001C1A  0BF0               	andlw	-16
  3852  001C1C  0908               	iorlw	8
  3853  001C1E  6FD9               	movwf	217,b	;volatile
  3854  001C20                     
  3855                           ; BSR set to: 14
  3856                           ;i2c.c: 12:   SSP2CON1bits.SSPEN = 1;
  3857  001C20  8BD9               	bsf	217,5,b	;volatile
  3858                           
  3859                           ;i2c.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  3860  001C22  0E9F               	movlw	159
  3861  001C24  6FD6               	movwf	214,b	;volatile
  3862  001C26                     
  3863                           ; BSR set to: 14
  3864                           ;i2c.c: 16:   TRISDbits.TRISD5 = 1;
  3865  001C26  8A84               	bsf	132,5,c	;volatile
  3866  001C28                     
  3867                           ; BSR set to: 14
  3868                           ;i2c.c: 17:   TRISDbits.TRISD6 = 1;
  3869  001C28  8C84               	bsf	132,6,c	;volatile
  3870  001C2A                     
  3871                           ; BSR set to: 14
  3872                           ;i2c.c: 18:   ANSELDbits.ANSELD5=0;
  3873  001C2A  9BA7               	bcf	167,5,b	;volatile
  3874  001C2C                     
  3875                           ; BSR set to: 14
  3876                           ;i2c.c: 19:   ANSELDbits.ANSELD6=0;
  3877  001C2C  9DA7               	bcf	167,6,b	;volatile
  3878                           
  3879                           ;i2c.c: 20:   SSP2DATPPS=0x1D;
  3880  001C2E  0E1D               	movlw	29
  3881  001C30  6F1D               	movwf	29,b	;volatile
  3882                           
  3883                           ;i2c.c: 21:   SSP2CLKPPS=0x1E;
  3884  001C32  0E1E               	movlw	30
  3885  001C34  6F1C               	movwf	28,b	;volatile
  3886                           
  3887                           ;i2c.c: 22:   RD5PPS=0x1C;
  3888  001C36  0E1C               	movlw	28
  3889  001C38  6F6F               	movwf	111,b	;volatile
  3890                           
  3891                           ;i2c.c: 23:   RD6PPS=0x1B;
  3892  001C3A  0E1B               	movlw	27
  3893  001C3C  6F70               	movwf	112,b	;volatile
  3894  001C3E                     
  3895                           ; BSR set to: 14
  3896  001C3E  0012               	return		;funcret
  3897  001C40                     __end_of_I2C_2_Master_Init:
  3898                           	callstack 0
  3899                           
  3900 ;; *************** function _USART4_init *****************
  3901 ;; Defined at:
  3902 ;;		line 7 in file "serial.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 2
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text31
  3931  001CAA                     __ptext31:
  3932                           	callstack 0
  3933  001CAA                     _USART4_init:
  3934                           	callstack 28
  3935  001CAA                     
  3936                           ;serial.c: 10:     RC0PPS = 0x12;
  3937  001CAA  0E12               	movlw	18
  3938  001CAC  010E               	movlb	14	; () banked
  3939  001CAE  6F62               	movwf	98,b	;volatile
  3940                           
  3941                           ;serial.c: 11:     RX4PPS = 0x11;
  3942  001CB0  0E11               	movlw	17
  3943  001CB2  6F15               	movwf	21,b	;volatile
  3944  001CB4                     
  3945                           ; BSR set to: 14
  3946                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  3947  001CB4  8283               	bsf	131,1,c	;volatile
  3948  001CB6                     
  3949                           ; BSR set to: 14
  3950                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  3951  001CB6  97E9               	bcf	233,3,b	;volatile
  3952  001CB8                     
  3953                           ; BSR set to: 14
  3954                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  3955  001CB8  95E8               	bcf	232,2,b	;volatile
  3956                           
  3957                           ;serial.c: 16:     SP4BRGL = 51;
  3958  001CBA  0E33               	movlw	51
  3959  001CBC  6FE5               	movwf	229,b	;volatile
  3960                           
  3961                           ;serial.c: 17:     SP4BRGH = 0;
  3962  001CBE  0E00               	movlw	0
  3963  001CC0  6FE6               	movwf	230,b	;volatile
  3964  001CC2                     
  3965                           ; BSR set to: 14
  3966                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  3967  001CC2  89E7               	bsf	231,4,b	;volatile
  3968  001CC4                     
  3969                           ; BSR set to: 14
  3970                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  3971  001CC4  8BE8               	bsf	232,5,b	;volatile
  3972  001CC6                     
  3973                           ; BSR set to: 14
  3974                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  3975  001CC6  8FE7               	bsf	231,7,b	;volatile
  3976  001CC8                     
  3977                           ; BSR set to: 14
  3978  001CC8  0012               	return		;funcret
  3979  001CCA                     __end_of_USART4_init:
  3980                           	callstack 0
  3981                           
  3982 ;; *************** function _ADC_init *****************
  3983 ;; Defined at:
  3984 ;;		line 8 in file "ADC.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 2
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_main
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text32
  4013  001CCA                     __ptext32:
  4014                           	callstack 0
  4015  001CCA                     _ADC_init:
  4016                           	callstack 28
  4017  001CCA                     
  4018                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  4019  001CCA  8C86               	bsf	134,6,c	;volatile
  4020                           
  4021                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  4022  001CCC  010E               	movlb	14	; () banked
  4023  001CCE  8DB4               	bsf	180,6,b	;volatile
  4024                           
  4025                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  4026  001CD0  010F               	movlb	15	; () banked
  4027  001CD2  9958               	bcf	88,4,b	;volatile
  4028  001CD4                     
  4029                           ; BSR set to: 15
  4030                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  4031  001CD4  0EFC               	movlw	-4
  4032  001CD6  1758               	andwf	88,f,b	;volatile
  4033                           
  4034                           ;ADC.c: 16:     ADPCH=0b101110;
  4035  001CD8  0E2E               	movlw	46
  4036  001CDA  6F5F               	movwf	95,b	;volatile
  4037  001CDC                     
  4038                           ; BSR set to: 15
  4039                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  4040  001CDC  9460               	bcf	96,2,c	;volatile
  4041  001CDE                     
  4042                           ; BSR set to: 15
  4043                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  4044  001CDE  8860               	bsf	96,4,c	;volatile
  4045  001CE0                     
  4046                           ; BSR set to: 15
  4047                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  4048  001CE0  8E60               	bsf	96,7,c	;volatile
  4049  001CE2                     
  4050                           ; BSR set to: 15
  4051  001CE2  0012               	return		;funcret
  4052  001CE4                     __end_of_ADC_init:
  4053                           	callstack 0
  4054                           
  4055 ;; *************** function _LowISR *****************
  4056 ;; Defined at:
  4057 ;;		line 52 in file "interrupts.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		None
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4075 ;;Total ram usage:        1 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 1
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		Interrupt level 1
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	intcodelo
  4086  000018                     __pintcodelo:
  4087                           	callstack 0
  4088  000018                     _LowISR:
  4089                           	callstack 21
  4090                           
  4091                           ; BSR set to: 15
  4092                           ;incstack = 0
  4093  000018  805D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4094  00001A  CFE0 F001          	movff	bsr,??_LowISR
  4095  00001E  C001  FFE0         	movff	??_LowISR,bsr
  4096  000022  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4097  000024  0010               	retfie	
  4098  000026                     __end_of_LowISR:
  4099                           	callstack 0
  4100                           
  4101 ;; *************** function _HighISR *****************
  4102 ;; Defined at:
  4103 ;;		line 39 in file "interrupts.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;		None
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		None
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;Total ram usage:        0 bytes
  4122 ;; Hardware stack levels used: 1
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		Interrupt level 2
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	intcode
  4131  000008                     __pintcode:
  4132                           	callstack 0
  4133  000008                     _HighISR:
  4134                           	callstack 21
  4135                           
  4136                           ;incstack = 0
  4137  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4138  00000A  EF92  F00E         	goto	int_func
  4139                           
  4140                           	psect	intcode_body
  4141  001D24                     __pintcode_body:
  4142                           	callstack 21
  4143  001D24                     int_func:
  4144                           	callstack 21
  4145  001D24  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4146  001D26  0011               	retfie		f
  4147  001D28                     __end_of_HighISR:
  4148                           	callstack 0
  4149                           
  4150                           	psect	rparam
  4151  0000                     
  4152                           	psect	temp
  4153  00005D                     btemp:
  4154                           	callstack 0
  4155  00005D                     	ds	1
  4156  0000                     int$flags	set	btemp
  4157  0000                     wtemp8	set	btemp+1
  4158  0000                     ttemp5	set	btemp+1
  4159  0000                     ttemp6	set	btemp+4
  4160  0000                     ttemp7	set	btemp+8
  4161                           
  4162                           	psect	idloc
  4163                           
  4164                           ;Config register IDLOC0 @ 0x200000
  4165                           ;	unspecified, using default values
  4166  200000                     	org	2097152
  4167  200000  0FFF               	dw	4095
  4168                           
  4169                           ;Config register IDLOC1 @ 0x200002
  4170                           ;	unspecified, using default values
  4171  200002                     	org	2097154
  4172  200002  0FFF               	dw	4095
  4173                           
  4174                           ;Config register IDLOC2 @ 0x200004
  4175                           ;	unspecified, using default values
  4176  200004                     	org	2097156
  4177  200004  0FFF               	dw	4095
  4178                           
  4179                           ;Config register IDLOC3 @ 0x200006
  4180                           ;	unspecified, using default values
  4181  200006                     	org	2097158
  4182  200006  0FFF               	dw	4095
  4183                           
  4184                           ;Config register IDLOC4 @ 0x200008
  4185                           ;	unspecified, using default values
  4186  200008                     	org	2097160
  4187  200008  0FFF               	dw	4095
  4188                           
  4189                           ;Config register IDLOC5 @ 0x20000A
  4190                           ;	unspecified, using default values
  4191  20000A                     	org	2097162
  4192  20000A  0FFF               	dw	4095
  4193                           
  4194                           ;Config register IDLOC6 @ 0x20000C
  4195                           ;	unspecified, using default values
  4196  20000C                     	org	2097164
  4197  20000C  0FFF               	dw	4095
  4198                           
  4199                           ;Config register IDLOC7 @ 0x20000E
  4200                           ;	unspecified, using default values
  4201  20000E                     	org	2097166
  4202  20000E  0FFF               	dw	4095
  4203                           
  4204                           	psect	config
  4205                           
  4206                           ;Config register CONFIG1L @ 0x300000
  4207                           ;	External Oscillator mode Selection bits
  4208                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4209                           ;	Power-up default value for COSC bits
  4210                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4211  300000                     	org	3145728
  4212  300000  AA                 	db	170
  4213                           
  4214                           ;Config register CONFIG1H @ 0x300001
  4215                           ;	unspecified, using default values
  4216                           ;	Clock Out Enable bit
  4217                           ;	CLKOUTEN = 0x1, unprogrammed default
  4218                           ;	Clock Switch Enable bit
  4219                           ;	CSWEN = 0x1, unprogrammed default
  4220                           ;	Fail-Safe Clock Monitor Enable bit
  4221                           ;	FCMEN = 0x1, unprogrammed default
  4222  300001                     	org	3145729
  4223  300001  FF                 	db	255
  4224                           
  4225                           ;Config register CONFIG2L @ 0x300002
  4226                           ;	unspecified, using default values
  4227                           ;	Master Clear Enable bit
  4228                           ;	MCLRE = 0x1, unprogrammed default
  4229                           ;	Power-up Timer Enable bit
  4230                           ;	PWRTE = 0x1, unprogrammed default
  4231                           ;	Low-power BOR enable bit
  4232                           ;	LPBOREN = 0x1, unprogrammed default
  4233                           ;	Brown-out Reset Enable bits
  4234                           ;	BOREN = 0x3, unprogrammed default
  4235  300002                     	org	3145730
  4236  300002  FF                 	db	255
  4237                           
  4238                           ;Config register CONFIG2H @ 0x300003
  4239                           ;	unspecified, using default values
  4240                           ;	Brown Out Reset Voltage selection bits
  4241                           ;	BORV = 0x3, unprogrammed default
  4242                           ;	ZCD Disable bit
  4243                           ;	ZCD = 0x1, unprogrammed default
  4244                           ;	PPSLOCK bit One-Way Set Enable bit
  4245                           ;	PPS1WAY = 0x1, unprogrammed default
  4246                           ;	Stack Full/Underflow Reset Enable bit
  4247                           ;	STVREN = 0x1, unprogrammed default
  4248                           ;	Debugger Enable bit
  4249                           ;	DEBUG = 0x1, unprogrammed default
  4250                           ;	Extended Instruction Set Enable bit
  4251                           ;	XINST = 0x1, unprogrammed default
  4252  300003                     	org	3145731
  4253  300003  FF                 	db	255
  4254                           
  4255                           ;Config register CONFIG3L @ 0x300004
  4256                           ;	WDT Period Select bits
  4257                           ;	WDTCPS = 0x1F, unprogrammed default
  4258                           ;	WDT operating mode
  4259                           ;	WDTE = OFF, WDT Disabled
  4260  300004                     	org	3145732
  4261  300004  9F                 	db	159
  4262                           
  4263                           ;Config register CONFIG3H @ 0x300005
  4264                           ;	unspecified, using default values
  4265                           ;	WDT Window Select bits
  4266                           ;	WDTCWS = 0x7, unprogrammed default
  4267                           ;	WDT input clock selector
  4268                           ;	WDTCCS = 0x7, unprogrammed default
  4269  300005                     	org	3145733
  4270  300005  FF                 	db	255
  4271                           
  4272                           ;Config register CONFIG4L @ 0x300006
  4273                           ;	unspecified, using default values
  4274                           ;	Write Protection Block 0
  4275                           ;	WRT0 = 0x1, unprogrammed default
  4276                           ;	Write Protection Block 1
  4277                           ;	WRT1 = 0x1, unprogrammed default
  4278                           ;	Write Protection Block 2
  4279                           ;	WRT2 = 0x1, unprogrammed default
  4280                           ;	Write Protection Block 3
  4281                           ;	WRT3 = 0x1, unprogrammed default
  4282                           ;	Write Protection Block 3
  4283                           ;	WRT4 = 0x1, unprogrammed default
  4284                           ;	Write Protection Block 3
  4285                           ;	WRT5 = 0x1, unprogrammed default
  4286                           ;	Write Protection Block 3
  4287                           ;	WRT6 = 0x1, unprogrammed default
  4288                           ;	Write Protection Block 3
  4289                           ;	WRT7 = 0x1, unprogrammed default
  4290  300006                     	org	3145734
  4291  300006  FF                 	db	255
  4292                           
  4293                           ;Config register CONFIG4H @ 0x300007
  4294                           ;	unspecified, using default values
  4295                           ;	Configuration Register Write Protection bit
  4296                           ;	WRTC = 0x1, unprogrammed default
  4297                           ;	Boot Block Write Protection bit
  4298                           ;	WRTB = 0x1, unprogrammed default
  4299                           ;	Data EEPROM Write Protection bit
  4300                           ;	WRTD = 0x1, unprogrammed default
  4301                           ;	Scanner Enable bit
  4302                           ;	SCANE = 0x1, unprogrammed default
  4303                           ;	Low Voltage Programming Enable bit
  4304                           ;	LVP = 0x1, unprogrammed default
  4305  300007                     	org	3145735
  4306  300007  FF                 	db	255
  4307                           
  4308                           ;Config register CONFIG5L @ 0x300008
  4309                           ;	unspecified, using default values
  4310                           ;	UserNVM Program Memory Code Protection bit
  4311                           ;	CP = 0x1, unprogrammed default
  4312                           ;	DataNVM Memory Code Protection bit
  4313                           ;	CPD = 0x1, unprogrammed default
  4314  300008                     	org	3145736
  4315  300008  FF                 	db	255
  4316                           
  4317                           ;Config register CONFIG5H @ 0x300009
  4318                           ;	unspecified, using default values
  4319  300009                     	org	3145737
  4320  300009  FF                 	db	255
  4321                           
  4322                           ;Config register CONFIG6L @ 0x30000A
  4323                           ;	unspecified, using default values
  4324                           ;	Table Read Protection Block 0
  4325                           ;	EBTR0 = 0x1, unprogrammed default
  4326                           ;	Table Read Protection Block 1
  4327                           ;	EBTR1 = 0x1, unprogrammed default
  4328                           ;	Table Read Protection Block 2
  4329                           ;	EBTR2 = 0x1, unprogrammed default
  4330                           ;	Table Read Protection Block 3
  4331                           ;	EBTR3 = 0x1, unprogrammed default
  4332                           ;	Table Read Protection Block 4
  4333                           ;	EBTR4 = 0x1, unprogrammed default
  4334                           ;	Table Read Protection Block 5
  4335                           ;	EBTR5 = 0x1, unprogrammed default
  4336                           ;	Table Read Protection Block 6
  4337                           ;	EBTR6 = 0x1, unprogrammed default
  4338                           ;	Table Read Protection Block 7
  4339                           ;	EBTR7 = 0x1, unprogrammed default
  4340  30000A                     	org	3145738
  4341  30000A  FF                 	db	255
  4342                           
  4343                           ;Config register CONFIG6H @ 0x30000B
  4344                           ;	unspecified, using default values
  4345                           ;	Boot Block Table Read Protection bit
  4346                           ;	EBTRB = 0x1, unprogrammed default
  4347  30000B                     	org	3145739
  4348  30000B  FF                 	db	255
  4349                           tosu	equ	0xFFF
  4350                           tosh	equ	0xFFE
  4351                           tosl	equ	0xFFD
  4352                           stkptr	equ	0xFFC
  4353                           pclatu	equ	0xFFB
  4354                           pclath	equ	0xFFA
  4355                           pcl	equ	0xFF9
  4356                           tblptru	equ	0xFF8
  4357                           tblptrh	equ	0xFF7
  4358                           tblptrl	equ	0xFF6
  4359                           tablat	equ	0xFF5
  4360                           prodh	equ	0xFF4
  4361                           prodl	equ	0xFF3
  4362                           indf0	equ	0xFEF
  4363                           postinc0	equ	0xFEE
  4364                           postdec0	equ	0xFED
  4365                           preinc0	equ	0xFEC
  4366                           plusw0	equ	0xFEB
  4367                           fsr0h	equ	0xFEA
  4368                           fsr0l	equ	0xFE9
  4369                           wreg	equ	0xFE8
  4370                           indf1	equ	0xFE7
  4371                           postinc1	equ	0xFE6
  4372                           postdec1	equ	0xFE5
  4373                           preinc1	equ	0xFE4
  4374                           plusw1	equ	0xFE3
  4375                           fsr1h	equ	0xFE2
  4376                           fsr1l	equ	0xFE1
  4377                           bsr	equ	0xFE0
  4378                           indf2	equ	0xFDF
  4379                           postinc2	equ	0xFDE
  4380                           postdec2	equ	0xFDD
  4381                           preinc2	equ	0xFDC
  4382                           plusw2	equ	0xFDB
  4383                           fsr2h	equ	0xFDA
  4384                           fsr2l	equ	0xFD9
  4385                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      92
    BANK0           160     86     148
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2296_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S738$dir_LAT	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    S738$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _interrupts_init->_colorclick_writetoaddr
    _colorclick_readColour->_colorclick_readBlue
    _colorclick_readColour->_colorclick_readClear
    _colorclick_readColour->_colorclick_readGreen
    _colorclick_readColour->_colorclick_readRed
    _colorclick_readRed->_I2C_2_Master_Read
    _colorclick_readGreen->_I2C_2_Master_Read
    _colorclick_readClear->_I2C_2_Master_Read
    _colorclick_readBlue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colorclick_init->_colorclick_writetoaddr
    _colorclick_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0    9053
                                             20 BANK0     66    66      0
                           _ADC_init
                        _USART4_init
                    _colorclick_init
              _colorclick_readColour
                    _interrupts_init
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12    6456
                                              0 BANK0     20     8     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             64 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    3     1      2     219
                                              3 COMRAM     3     1      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      2     0      2      98
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     598
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colorclick_readColour                                8     0      8     699
                                             12 COMRAM     8     0      8
                _colorclick_readBlue
               _colorclick_readClear
               _colorclick_readGreen
                 _colorclick_readRed
 ---------------------------------------------------------------------------------
 (2) _colorclick_readRed                                   7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readGreen                                 7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readClear                                 7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readBlue                                  7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _colorclick_init                                      1     1      0     664
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
          _colorclick_toggleClearLED
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colorclick_writetoaddr                               2     1      1     598
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _colorclick_toggleClearLED                            1     1      0      66
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _USART4_init
   _colorclick_init
     _I2C_2_Master_Init
     _colorclick_toggleClearLED
     _colorclick_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colorclick_readColour
     _colorclick_readBlue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readClear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readGreen
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readRed
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _interrupts_init
     _colorclick_writetoaddr
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     56      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5C       1       97.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C       8        0.0%
DATA                 0      0     12C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 07 09:36:33 2021

        __end_of_colorclick_readRed 1900         __end_of_colorclick_readBlue 19F0  
      __end_of_colorclick_readClear 19A0        __end_of_colorclick_readGreen 1950  
                                l30 1C40                                  l33 1C66  
                                l42 1D18                                  l27 1C3E  
                                l36 1D22                                  l45 1D04  
                                l39 1D0E                                  l48 1AB8  
                                bsr 000FE0      __size_of_colorclick_readColour 0044  
     __end_of_colorclick_readColour 1A78              _colorclick_writetoaddr 1C8A  
                               l300 1CE4                                 l221 1B74  
                               l302 1CF4                                 l303 1CF8  
                               l309 1BAC                                 l246 1CE2  
                               l291 1CC8                                 l371 1B38  
                               l380 1CA8                                 l383 18FE  
                               l535 142C                                 l392 199E  
                               l377 1C88                                 l386 194E  
                               l395 1A76                                 l548 1590  
                               l389 19EE                                 u900 1A32  
                               u901 1A2E                                 u910 1BD6  
                               u911 1BD2                                 u920 12B8  
                               u921 12B4                                 u930 12EA  
                               u931 12E6                                 u860 167E  
                               u941 1314                                 u861 167A  
                               u950 1338                                 u870 1690  
                               u951 1334                                 u871 168C  
                               u960 1362                                 u880 16B8  
                               u961 135E                                 u881 16B4  
                               u970 13A2                                 u890 16EE  
                               u971 139E                                 u891 16EA  
                               u980 13EC                                 u981 13E8  
                               u990 1440                                 u991 143C  
                               _abs 1ABA                                 _pad 1736  
                               wreg 000FE8                     _colorclick_init 1AFA  
                              l1201 1D28                                l2001 0E58  
                              l1131 17FA                                l2011 0EC0  
                              l2003 0E78                                ?_abs 0014  
                              l2021 0EF6                                l2013 0ED2  
                              l2005 0E88                                l2101 1182  
                              l1126 177C                                l1207 1BE2  
                              l2023 0EFC                                l2031 0FEE  
                              l2015 0EE0                                l2007 0E8A  
                              l2111 1234                                l2103 11CA  
                              l2201 1B2C                                l1129 17BE  
                              l2033 1008                                l2041 106A  
                              l2025 0F7E                                l2017 0EE6  
                              l2009 0EA4                                l1137 0EB0  
                              l2113 1248                                l1170 1854  
                              l2131 1C16                                l2203 1B2E  
                              l2211 1B40                                l2051 10B0  
                              l2043 107C                                l2035 1026  
                              l2027 0F84                                l2019 0EEE  
                              l1139 0EB8                                l2107 1202  
                              l2123 126E                                l1171 185C  
                              l1164 12A4                                l2141 1C2C  
                              l2133 1C20                                l2061 1D1E  
                              l2205 1B30                                l2221 1B72  
                              l2213 1B68                                l1157 10F0  
                              l2053 10B8                                l2045 108C  
                              l2037 1040                                l2029 0F8A  
                              l2125 1292                                l2109 1226  
                              l2117 1254                                l1190 1734  
                              l2231 1CC2                                l2223 1CAA  
                              l2135 1C26                                l2071 1CFC  
                              l2143 1C8C                                l2207 1B32  
                              l2063 1D06                                l2151 18F6  
                              l2215 1B6C                                l1175 1AF0  
                              l2047 1092                                l2055 10C8  
                              l2039 105A                                l2119 1262  
                              l2233 1CC4                                l2225 1CB4  
                              l2137 1C28                                l2073 1D00  
                              l2081 1A8E                                l2065 1D0A  
                              l2161 19A0                                l2217 1B6E  
                              l2209 1B3A                                l2145 1CE4  
                              l2049 10A4                                l1178 1AF8  
                              l2235 1CC6                                l2227 1CB6  
                              l2139 1C2A                                l2147 1C6A  
                              l2059 1D1A                                l2067 1D10  
                              l2083 1AB4                                l2075 1A7A  
                              l2163 19E6                                l2155 1900  
                              l2219 1B70                                l2091 1116  
                              l1099 18AE                                l2251 189C  
                              l2243 185E                                l2181 1CCA  
                              l2229 1CB8                                l2069 1D14  
                              l2085 1AB6                                l2077 1A7E  
                              l2157 1946                                l2149 18B0  
                              l2237 1A34                                l2261 1B94  
                              l2093 1124                                l2173 17FC  
                              l2245 1870                                l1198 1A32  
                              l2183 1CD4                                l2191 1AFA  
                              l2079 1A86                                l2167 1950  
                              l2239 1A64                                l2255 1B76  
                              l2095 1136                                l2175 1804  
                              l2247 1878                                l2351 1592  
                              l2185 1CDC                                l2193 1AFE  
                              l2169 1996                                l2257 1B7A  
                              l2097 113A                                l2089 10F2  
                              l2177 1812                                l2249 1880  
                              l2361 15EA                                l2353 1596  
                              l2187 1CDE                                l2195 1B08  
                              l2259 1B90                                l2099 115E  
                              l2179 1838                                l2371 1640  
                              l2363 15F2                                l2355 159A  
                              l2189 1CE0                                l2197 1B18  
                              l1901 130E                                l2373 164C  
                              l2365 15FA                                l2357 15A2  
                              l2199 1B22                                l1911 1362  
                              l1903 131A                                l2367 1602  
                              l2359 15C6                                l1921 13D6  
                              l1913 1374                                l1905 1338  
                              l2369 160A                                l1915 13A2  
                              l1907 1340                                l1923 13DC  
                              l1931 142E                                l1925 13EC  
                              l1917 13C2                                l1909 1354  
                              l1941 1472                                l1933 1432  
                              l1861 169A                                l1927 140C  
                              l1919 13C4                                l1951 14DA  
                              l1943 1492                                l1935 1440  
                              l1863 16B8                                l1855 166C  
                              l1871 19FC                                l1961 1550  
                              l1953 1508                                l1945 14B0  
                              l1937 1460                                l1865 16EE  
                              l1857 167E                                l1873 1A0E  
                              l1881 1BBE                                l1891 12B8  
                              l1963 1570                                l1955 1528  
                              l1947 14B8                                l1939 1464  
                              l1859 1690                                l1875 1A12  
                              l1883 1BD6                                l1971 175A  
                              l1893 12D8                                l1957 153A  
                              l1949 14CC                                l1869 19F0  
                              l1877 1BAE                                l1981 17A0  
                              l1973 1768                                ?_pad 0012  
                              l1895 12DC                                l1887 12A6  
                              l1959 1540                                l1991 1AD4  
                              l1879 1BBA                                l1983 17CE  
                              l1975 1774                                l1967 1736  
                              l1993 1C40                                l1897 12EA  
                              l1889 12AA                                l1985 17E2  
                              l1977 1788                                l1969 1746  
                              l1995 1C50                                l1899 130A  
                              l1979 179C                                l1989 1ABA  
                              l1997 0E10                                l1999 0E30  
                              STR_1 0E01                                u1000 1472  
                              u1001 146E                                u1010 14B0  
                              u1011 14AC                                u1100 1C50  
                              u1020 14DA                                u1101 1C4C  
                              u1021 14D6                                u1110 1C66  
                              u1030 1508                                u1111 1C62  
                              u1031 1504                                u1040 1550  
                              u1200 1026                                u1120 0E40  
                              u1041 154C                                u1201 1022  
                              u1121 0E3A                                u1050 1746  
                              u1210 1040                                u1130 0E42  
                              u1051 1742                                u1211 103C  
                              u1060 1768                                u1220 105A  
                              u1140 0E58                                u1300 115E  
                              u1061 1764                                u1221 1056  
                              u1141 0E54                                u1301 115A  
                              u1070 17BE                                u1230 106A  
                              u1150 0E88                                u1310 1182  
                              u1071 17BA                                u1231 1066  
                              u1151 0E84                                u1311 117E  
                              u1080 17CE                                u1240 107C  
                              u1160 0EA4                                u1320 1226  
                              u1081 17CA                                u1241 1078  
                              u1161 0EA0                                u1321 1222  
                              u1330 1CF4                                u1090 1AD4  
                              u1250 108C                                u1170 0ED2  
                              u1331 1CF0                                u1091 1AD0  
                              u1251 1088                                u1171 0ECE  
                              u1260 10A4                                u1180 0EE0  
                              u1261 10A0                                u1181 0EDC  
                              u1501 15D0                                u1270 1AA2  
                              u1190 1008                                u1271 1A9A  
                              u1191 1004                                u1511 15E2  
                      _BAUD4CONbits 000EE9                                u1345 1C72  
                              u1346 1C74                                u1290 1116  
                              u1370 1854                                u1355 1C7C  
                              u1291 1112                                u1371 1850  
                              u1356 1C7E                                u1365 1C86  
                              u1381 1A6E                                u1366 1C88  
                              u1390 1BAC                                u1391 1BA8  
                              u1527 1658                                u1288 1AA4  
                              u1537 1B0E                                u1481 15AC  
                              _T2PR 000FBC                                u1491 15BE  
     colorclick_writetoaddr@address 0005                         main@current 00AE  
                       main@initial 009E   __end_of_colorclick_toggleClearLED 1C8A  
           __end_of_interrupts_init 1B76                                abs@a 0014  
                              _dbuf 00D4                                _main 1592  
                              _dtoa 0E10                                _prec 00CE  
                              _nout 00CA                                pad@i 0019  
                              pad@p 0016                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 001B  
                              fsr2l 000FD9                                btemp 005D  
                              start 0026                    __end_of_ADC_init 1CE4  
                   __end_of_HighISR 1D28                        ___param_bank 000000  
                             ??_abs 0016                               ??_pad 0018  
                   __end_of___aodiv 142E                               ?_main 0001  
                             ?_dtoa 001D                     __end_of___aomod 1592  
                             _ADPCH 000F5F                               i1l231 001E  
                             i2l226 1D24                        vfpfcnvrt@fmt 0043  
           __end_of_sendCharSerial4 1CFA          __end_of_I2C_2_Master_Start 1D24  
        __end_of_I2C_2_Master_Write 1D06                               _flags 00D0  
                             _fputc 166C                               _fputs 19F0  
                             pad@fp 0012                               _width 00CC  
                             _putch 1D28                               dtoa@d 001F  
                             dtoa@i 003F                               dtoa@n 0037  
                             dtoa@p 0031                               dtoa@s 0035  
                             dtoa@w 0033                               tablat 000FF5  
                             plusw0 000FEB                               plusw2 000FDB  
                             ttemp5 005E                               ttemp6 0061  
                             ttemp7 0065                               status 000FD8  
                             wtemp8 005E                     __end_of_sprintf 18B0  
             _I2C_2_Master_RepStart 1D06                     __initialization 1BE4  
                      __end_of_main 166C                        __end_of_dtoa 10F2  
                            ??_main 0074                              ??_dtoa 0027  
           __end_of_colorclick_init 1B3A                       __activetblptr 000001  
                            ?_fputc 0002                              ?_fputs 000B  
                            _ADRESH 000F64                              ?_putch 0001  
              _colorclick_readClear 1950                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RD6PPS 000E70                _colorclick_readGreen 1900  
                  ?_interrupts_init 0001                           ??_HighISR 0001  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                            _LowISR 0018                        vfprintf@cfmt 0057  
                         ??___aodiv 0012                           ??___aomod 0012  
                            clear_0 1BEA                              clear_1 1BF6  
                            isa$std 000001                              pad@buf 0014  
                            dtoa@fp 001D                              _strlen 1BAE  
                            fputc@c 0002                              fputs@c 000F  
                            fputs@i 0010                              fputs@s 000B  
   colorclick_toggleClearLED@toggle 0002                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                           ?_ADC_init 0001  
                  ?_sendCharSerial4 0002                              putch@c 0001  
                  __end_of_vfprintf 185E                           ??_sprintf 0059  
                      ?_USART4_init 0001               ?_colorclick_readClear 0006  
             ?_colorclick_readGreen 0006                          __accesstop 0060  
           __end_of__initialization 1C04              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                      __pcstackCOMRAM 0001  
           ?_colorclick_writetoaddr 0004                       __end_of_fputc 1736  
                     __end_of_fputs 1A34                       __end_of_putch 1D2A  
                  ?_colorclick_init 0001                  _colorclick_readRed 18B0  
                        ??_ADC_init 0002                             ??_fputc 0006  
                           ??_fputs 000F                             ??_putch 0002  
               ?_colorclick_readRed 0006                          __pbssBANK0 00B6  
                        __pbssBANK1 0100                        _battery_flag 00D2  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
    __end_of_colorclick_writetoaddr 1CAA                ??_colorclick_readRed 0008  
                           ?_strlen 0002        __size_of_colorclick_readBlue 0050  
             _colorclick_readColour 1A34                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                  __size_of_vfpfcnvrt 01B4  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6              ??_colorclick_readClear 0008  
                           _SSP2BUF 000ED5              ??_colorclick_readGreen 0008  
                           _HighISR 0008          ?_colorclick_toggleClearLED 0001  
                         _ADREFbits 000F58                  _I2C_2_Master_Start 1D1A  
                _I2C_2_Master_Write 1CFA                             __Hparam 0000  
                           __Lparam 0000                     __size_of_LowISR 000E  
           sendStringSerial4@string 0004                             ___aodiv 12A6  
                           ___aomod 142E                 ?_I2C_2_Master_Start 0001  
               ?_I2C_2_Master_Write 0001                           ?_vfprintf 0051  
                      __psmallconst 0E00                             __pcinit 1BE4  
           colorclick_readClear@tmp 000B                             __ramtop 0E00  
                           __ptext0 1592                             __ptext1 185E  
                           __ptext2 17FC                             __ptext3 10F2  
                           __ptext4 0E10                             __ptext5 1736  
                           __ptext6 1BAE                             __ptext7 19F0  
                           __ptext8 166C                             __ptext9 1D28  
                   __size_of_strlen 0036                           _T2CONbits 000FBD  
                      __size_of_abs 0040                        __size_of_pad 00C6  
                         _T2HLTbits 000FBE                       _RxBufWriteCnt 005C  
                           main@buf 0076                             _sprintf 185E  
              ??_I2C_2_Master_Start 0003                ??_I2C_2_Master_Write 0003  
                    __pintcode_body 1D24                end_of_initialization 1C04  
           colorclick_readGreen@tmp 000B                             fputc@fp 0004  
              __size_of_USART4_init 0020                             int_func 1D24  
                           fputs@fp 000D                   __end_of_vfpfcnvrt 12A6  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
                        ??_vfprintf 0057                             strlen@a 0004  
                           strlen@s 0002              ?_colorclick_readColour 000D  
                         _TRISAbits 000F81                           _TRISBbits 000F82  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 0003  
                      _EUSART4RXbuf 00B6                        _EUSART4TXbuf 0100  
         sendCharSerial4@charToSend 0002                      __end_of_LowISR 0026  
          __size_of_interrupts_init 003C                         vfpfcnvrt@ap 0045  
                       vfpfcnvrt@fp 0041                         vfpfcnvrt@ll 0049  
                    __end_of_strlen 1BE4                 start_initialization 1BE4  
                       __end_of_abs 1AFA                         __end_of_pad 17FC  
                     _TxBufWriteCnt 005A            __size_of_sendCharSerial4 0016  
               _colorclick_readBlue 19A0                            ??_LowISR 0001  
                       vfprintf@fmt 0053                            ??_strlen 0004  
              ?_colorclick_readBlue 0006                         __pbssCOMRAM 0059  
                     __pcstackBANK0 0060                    ___aodiv@dividend 0002  
          __size_of_colorclick_init 0040                            ?_HighISR 0001  
                         _card_flag 00D3         ??_colorclick_toggleClearLED 0002  
                         _dtoa$2369 002F                           __pintcode 0008  
                          ?___aodiv 0002                            ?___aomod 0002  
                  ___aodiv@quotient 0014         __size_of_colorclick_readRed 0050  
                       __pintcodelo 0018               ??_colorclick_readBlue 0008  
              I2C_2_Master_Read@ack 0004                   __size_of_vfprintf 0062  
                 ??_interrupts_init 0006                I2C_2_Master_Read@tmp 0005  
                       __smallconst 0E00                   _I2C_2_Master_Idle 1C40  
                 _I2C_2_Master_Init 1C16                   _I2C_2_Master_Read 1A78  
                 _I2C_2_Master_Stop 1D10                        _RxBufReadCnt 005B  
                          _ADC_init 1CCA                  ?_I2C_2_Master_Idle 0001  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                ?_I2C_2_Master_Stop 0001                            ?_sprintf 0060  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
                    __size_of_putch 0002       __size_of_colorclick_readClear 0050  
            colorclick_readBlue@tmp 000B       __size_of_colorclick_readGreen 0050  
                 _sendStringSerial4 1B76                 ??_I2C_2_Master_Idle 0002  
               ??_I2C_2_Master_Init 0002                 ??_I2C_2_Master_Read 0003  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0003  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F         colorclick_writetoaddr@value 0004  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                  ?_sendStringSerial4 0004  
                          _PIE4bits 000E2D                            _PIR4bits 000E37  
                 ??_sendCharSerial4 0004                            _SSP2CON2 000EDA  
               ??_sendStringSerial4 0006                            _SSP2STAT 000ED8  
           ??_colorclick_readColour 0015                           _vfpfcnvrt 10F2  
                        _ADCON0bits 000F60           __end_of_I2C_2_Master_Idle 1C68  
         _colorclick_toggleClearLED 1C68           __end_of_I2C_2_Master_Init 1C40  
         __end_of_I2C_2_Master_Read 1ABA           __end_of_I2C_2_Master_Stop 1D1A  
       I2C_2_Master_Write@data_byte 0003                        _TxBufReadCnt 0059  
                     ??_USART4_init 0002           __end_of_sendStringSerial4 1BAE  
       __size_of_I2C_2_Master_Start 000A         __size_of_I2C_2_Master_Write 000C  
      colorclick_readColour@current 000D      __size_of_I2C_2_Master_RepStart 000A  
     __end_of_I2C_2_Master_RepStart 1D10            ??_colorclick_writetoaddr 0005  
                  __size_of_HighISR 1D20                   ??_colorclick_init 0006  
                          __Hrparam 0000                          vfprintf@ap 0055  
                          __Lrparam 0000                          vfprintf@fp 0051  
                      __Lsmallconst 0E00                    __size_of___aodiv 0188  
                  __size_of___aomod 0164                          ?_vfpfcnvrt 0041  
                   ___aodiv@divisor 000A                     ___aodiv@counter 0012  
                        _ANSELBbits 000E9A                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                          sprintf@fmt 0062  
                          __ptext10 1ABA                            __ptext11 142E  
                          __ptext20 19A0                            __ptext12 12A6  
                          __ptext21 1D06                            __ptext13 1B76  
                          __ptext30 1C16                            __ptext22 1A78  
                          __ptext14 1CE4                            __ptext31 1CAA  
                          __ptext23 1AFA                            __ptext15 1B3A  
                          __ptext32 1CCA                            __ptext24 1C8A  
                          __ptext16 1A34                            __ptext25 1CFA  
                          __ptext17 18B0                            __ptext26 1D10  
                          __ptext18 1900                            __ptext27 1D1A  
                          __ptext19 1950                            __ptext28 1C40  
                          __ptext29 1C68                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                    __size_of_sprintf 0052  
                     __size_of_main 00DA                       __size_of_dtoa 02E2  
               __end_of_USART4_init 1CCA               colorclick_readRed@tmp 000B  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 005D                            _vfprintf 17FC  
                          main@tmpB 00AA                            main@tmpC 00AC  
                          main@tmpG 00A8                            main@tmpR 00A6  
        __size_of_I2C_2_Master_Idle 0028          __size_of_I2C_2_Master_Init 002A  
        __size_of_I2C_2_Master_Read 0042                    ___aomod@dividend 0002  
        __size_of_I2C_2_Master_Stop 000A                          _INTCONbits 000FF2  
                       _PWM6CONbits 000FA4          __size_of_sendStringSerial4 0038  
                       _PWM7CONbits 000FA1                            intlevel1 0000  
                          intlevel2 0000                           sprintf@ap 006C  
   __size_of_colorclick_writetoaddr 0020                     _interrupts_init 1B3A  
                   ___aomod@divisor 000A                         ??_vfpfcnvrt 0047  
                   ___aomod@counter 0012                            sprintf@f 006E  
                          sprintf@s 0060                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C  __size_of_colorclick_toggleClearLED 0022  
                       _USART4_init 1CAA                          _TX4STAbits 000EE8  
                      ___aodiv@sign 0013                     _sendCharSerial4 1CE4  
                      ___aomod@sign 0013  
