

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 18:11:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 05/05/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F67K40 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     _PIE4bits	set	3629
    99  0000                     _TX4REG	set	3812
   100  0000                     _RC4REG	set	3811
   101  0000                     _PIR4bits	set	3639
   102  0000                     _RC4STAbits	set	3815
   103  0000                     _SP4BRGH	set	3814
   104  0000                     _SP4BRGL	set	3813
   105  0000                     _TX4STAbits	set	3816
   106  0000                     _BAUD4CONbits	set	3817
   107  0000                     _RX4PPS	set	3605
   108  0000                     _RC0PPS	set	3682
   109  0000                     _PIR0bits	set	3635
   110  0000                     _IPR0bits	set	3615
   111  0000                     _PIE0bits	set	3625
   112  0000                     _ANSELFbits	set	3764
   113  0000                     _RC7PPS	set	3689
   114  0000                     _RE2PPS	set	3700
   115  0000                     _SSP2BUF	set	3797
   116  0000                     _SSP2CON2bits	set	3802
   117  0000                     _SSP2CON2	set	3802
   118  0000                     _SSP2STAT	set	3800
   119  0000                     _RD6PPS	set	3696
   120  0000                     _RD5PPS	set	3695
   121  0000                     _SSP2CLKPPS	set	3612
   122  0000                     _SSP2DATPPS	set	3613
   123  0000                     _ANSELDbits	set	3751
   124  0000                     _SSP2ADD	set	3798
   125  0000                     _SSP2CON1bits	set	3801
   126  0000                     _ADPCH	set	3935
   127  0000                     _ADREFbits	set	3928
   128  0000                     _LATAbits	set	3961
   129  0000                     _TRISAbits	set	3969
   130  0000                     _ADRESH	set	3940
   131  0000                     _ADCON0bits	set	3936
   132  0000                     _INTCONbits	set	4082
   133  0000                     _TMR0L	set	4051
   134  0000                     _TMR0H	set	4052
   135  0000                     _T0CON0bits	set	4053
   136  0000                     _T0CON1bits	set	4054
   137  0000                     _LATFbits	set	3966
   138  0000                     _TRISHbits	set	3976
   139  0000                     _TRISFbits	set	3974
   140  0000                     _PWM7CONbits	set	4001
   141  0000                     _PWM6CONbits	set	4004
   142  0000                     _LATGbits	set	3967
   143  0000                     _LATCbits	set	3963
   144  0000                     _LATEbits	set	3965
   145  0000                     _TRISGbits	set	3975
   146  0000                     _TRISCbits	set	3971
   147  0000                     _TRISEbits	set	3973
   148  0000                     _T2PR	set	4028
   149  0000                     _T2CLKCONbits	set	4031
   150  0000                     _T2HLTbits	set	4030
   151  0000                     _T2CONbits	set	4029
   152  0000                     _LATHbits	set	3968
   153  0000                     _LATDbits	set	3964
   154  0000                     _TRISDbits	set	3972
   155  0000                     _LATG	set	3967
   156  0000                     _PWM7DCH	set	4000
   157  0000                     _LATE	set	3965
   158  0000                     _PWM6DCH	set	4003
   159                           
   160                           	psect	smallconst
   161  000E00                     __psmallconst:
   162                           	callstack 0
   163  000E00  00                 	db	0
   164  000E01                     STR_1:
   165                           
   166                           ; BSR set to: 14
   167  000E01  25                 	db	37
   168  000E02  69                 	db	105	;'i'
   169  000E03  20                 	db	32
   170  000E04  25                 	db	37
   171  000E05  69                 	db	105	;'i'
   172  000E06  20                 	db	32
   173  000E07  25                 	db	37
   174  000E08  69                 	db	105	;'i'
   175  000E09  20                 	db	32
   176  000E0A  25                 	db	37
   177  000E0B  69                 	db	105	;'i'
   178  000E0C  0A                 	db	10
   179  000E0D  00                 	db	0
   180  000E0E  00                 	db	0	; dummy byte at the end
   181  0000                     
   182                           ; #config settings
   183                           
   184                           	psect	cinit
   185  002644                     __pcinit:
   186                           	callstack 0
   187  002644                     start_initialization:
   188                           	callstack 0
   189  002644                     __initialization:
   190                           	callstack 0
   191                           
   192                           ; Clear objects allocated to BANK1 (92 bytes)
   193  002644  EE01  F000         	lfsr	0,__pbssBANK1
   194  002648  0E5C               	movlw	92
   195  00264A                     clear_0:
   196  00264A  6AEE               	clrf	postinc0,c
   197  00264C  06E8               	decf	wreg,f,c
   198  00264E  E1FD               	bnz	clear_0
   199                           
   200                           ; Clear objects allocated to BANK0 (36 bytes)
   201  002650  EE00  F0C2         	lfsr	0,__pbssBANK0
   202  002654  0E24               	movlw	36
   203  002656                     clear_1:
   204  002656  6AEE               	clrf	postinc0,c
   205  002658  06E8               	decf	wreg,f,c
   206  00265A  E1FD               	bnz	clear_1
   207                           
   208                           ; Clear objects allocated to COMRAM (4 bytes)
   209  00265C  6A5C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   210  00265E  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   211  002660  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   212  002662  6A59               	clrf	__pbssCOMRAM& (0+255),c
   213  002664                     end_of_initialization:
   214                           	callstack 0
   215  002664                     __end_of__initialization:
   216                           	callstack 0
   217  002664  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   218  002666  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   219  002668  0E00               	movlw	low (__Lsmallconst shr (0+16))
   220  00266A  6EF8               	movwf	tblptru,c
   221  00266C  0E0E               	movlw	high __Lsmallconst
   222  00266E  6EF7               	movwf	tblptrh,c
   223  002670  0100               	movlb	0
   224  002672  EFFB  F00C         	goto	_main	;jump to C main() function
   225                           
   226                           	psect	bssCOMRAM
   227  000059                     __pbssCOMRAM:
   228                           	callstack 0
   229  000059                     _TxBufReadCnt:
   230                           	callstack 0
   231  000059                     	ds	1
   232  00005A                     _TxBufWriteCnt:
   233                           	callstack 0
   234  00005A                     	ds	1
   235  00005B                     _RxBufWriteCnt:
   236                           	callstack 0
   237  00005B                     	ds	1
   238  00005C                     _returnhome_flag:
   239                           	callstack 0
   240  00005C                     	ds	1
   241                           
   242                           	psect	bssBANK0
   243  0000C2                     __pbssBANK0:
   244                           	callstack 0
   245  0000C2                     _EUSART4RXbuf:
   246                           	callstack 0
   247  0000C2                     	ds	20
   248  0000D6                     _nout:
   249                           	callstack 0
   250  0000D6                     	ds	2
   251  0000D8                     _width:
   252                           	callstack 0
   253  0000D8                     	ds	2
   254  0000DA                     _prec:
   255                           	callstack 0
   256  0000DA                     	ds	2
   257  0000DC                     _flags:
   258                           	callstack 0
   259  0000DC                     	ds	2
   260  0000DE                     _clear_upper:
   261                           	callstack 0
   262  0000DE                     	ds	2
   263  0000E0                     _clear_lower:
   264                           	callstack 0
   265  0000E0                     	ds	2
   266  0000E2                     _read_val:
   267                           	callstack 0
   268  0000E2                     	ds	1
   269  0000E3                     _card_flag:
   270                           	callstack 0
   271  0000E3                     	ds	1
   272  0000E4                     _RxBufReadCnt:
   273                           	callstack 0
   274  0000E4                     	ds	1
   275  0000E5                     _battery_flag:
   276                           	callstack 0
   277  0000E5                     	ds	1
   278                           
   279                           	psect	bssBANK1
   280  000100                     __pbssBANK1:
   281                           	callstack 0
   282  000100                     _EUSART4TXbuf:
   283                           	callstack 0
   284  000100                     	ds	60
   285  00013C                     _dbuf:
   286                           	callstack 0
   287  00013C                     	ds	32
   288                           
   289                           	psect	cstackBANK0
   290  000060                     __pcstackBANK0:
   291                           	callstack 0
   292  000060                     ?_sprintf:
   293                           	callstack 0
   294  000060                     sprintf@s:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x0
   298  000060                     	ds	2
   299  000062                     sprintf@fmt:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x2
   303  000062                     	ds	10
   304  00006C                     sprintf@ap:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0xC
   308  00006C                     	ds	2
   309  00006E                     sprintf@f:
   310                           	callstack 0
   311                           
   312                           ; 6 bytes @ 0xE
   313  00006E                     	ds	6
   314  000074                     ??_main:
   315                           
   316                           ; 1 bytes @ 0x14
   317  000074                     	ds	2
   318  000076                     main@buf:
   319                           	callstack 0
   320                           
   321                           ; 40 bytes @ 0x16
   322  000076                     	ds	40
   323  00009E                     main@tmpC:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x3E
   327  00009E                     	ds	2
   328  0000A0                     main@initial:
   329                           	callstack 0
   330                           
   331                           ; 8 bytes @ 0x40
   332  0000A0                     	ds	8
   333  0000A8                     main@current:
   334                           	callstack 0
   335                           
   336                           ; 8 bytes @ 0x48
   337  0000A8                     	ds	8
   338  0000B0                     main@motorL:
   339                           	callstack 0
   340                           
   341                           ; 9 bytes @ 0x50
   342  0000B0                     	ds	9
   343  0000B9                     main@motorR:
   344                           	callstack 0
   345                           
   346                           ; 9 bytes @ 0x59
   347  0000B9                     	ds	9
   348                           
   349                           	psect	cstackCOMRAM
   350  000001                     __pcstackCOMRAM:
   351                           	callstack 0
   352  000001                     ??_LowISR:
   353  000001                     
   354                           ; 1 bytes @ 0x0
   355  000001                     	ds	1
   356  000002                     ??_I2C_2_Master_Idle:
   357  000002                     ?_strlen:
   358                           	callstack 0
   359  000002                     ?___lwdiv:
   360                           	callstack 0
   361  000002                     ?___fltol:
   362                           	callstack 0
   363  000002                     ?___aodiv:
   364                           	callstack 0
   365  000002                     ?___aomod:
   366                           	callstack 0
   367  000002                     DCmotors_init@PWMperiod:
   368                           	callstack 0
   369  000002                     sendCharSerial4@charToSend:
   370                           	callstack 0
   371  000002                     colorclick_toggleClearLED@toggle:
   372                           	callstack 0
   373  000002                     ___lwdiv@dividend:
   374                           	callstack 0
   375  000002                     fputc@c:
   376                           	callstack 0
   377  000002                     strlen@s:
   378                           	callstack 0
   379  000002                     ___flge@ff1:
   380                           	callstack 0
   381  000002                     ___fltol@f1:
   382                           	callstack 0
   383  000002                     ___aodiv@dividend:
   384                           	callstack 0
   385  000002                     ___aomod@dividend:
   386                           	callstack 0
   387                           
   388                           ; 8 bytes @ 0x1
   389  000002                     	ds	1
   390  000003                     ??_I2C_2_Master_Read:
   391  000003                     I2C_2_Master_Write@data_byte:
   392                           	callstack 0
   393  000003                     sendStringSerial4@string:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x2
   397  000003                     	ds	1
   398  000004                     I2C_2_Master_Read@ack:
   399                           	callstack 0
   400  000004                     colorclick_writetoaddr@value:
   401                           	callstack 0
   402  000004                     ___lwdiv@divisor:
   403                           	callstack 0
   404  000004                     fputc@fp:
   405                           	callstack 0
   406  000004                     strlen@a:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x3
   410  000004                     	ds	1
   411  000005                     I2C_2_Master_Read@tmp:
   412                           	callstack 0
   413  000005                     colorclick_writetoaddr@address:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x4
   417  000005                     	ds	1
   418  000006                     ??_colorclick_init:
   419  000006                     ??_fputc:
   420  000006                     ??___fltol:
   421  000006                     ?_colorclick_readRed:
   422                           	callstack 0
   423  000006                     ?_colorclick_readGreen:
   424                           	callstack 0
   425  000006                     ?_colorclick_readBlue:
   426                           	callstack 0
   427  000006                     ?_colorclick_readClear:
   428                           	callstack 0
   429  000006                     ___lwdiv@quotient:
   430                           	callstack 0
   431  000006                     ___flge@ff2:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x5
   435  000006                     	ds	2
   436  000008                     ??_colorclick_readRed:
   437  000008                     ??_colorclick_readGreen:
   438  000008                     ??_colorclick_readBlue:
   439  000008                     ??_colorclick_readClear:
   440  000008                     ___lwdiv@counter:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x7
   444  000008                     	ds	1
   445  000009                     ?___xxtofl:
   446                           	callstack 0
   447  000009                     ___xxtofl@val:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x8
   451  000009                     	ds	1
   452  00000A                     ??___flge:
   453  00000A                     ___fltol@sign1:
   454                           	callstack 0
   455  00000A                     ___aodiv@divisor:
   456                           	callstack 0
   457  00000A                     ___aomod@divisor:
   458                           	callstack 0
   459                           
   460                           ; 8 bytes @ 0x9
   461  00000A                     	ds	1
   462  00000B                     ___fltol@exp1:
   463                           	callstack 0
   464  00000B                     colorclick_readRed@tmp:
   465                           	callstack 0
   466  00000B                     colorclick_readGreen@tmp:
   467                           	callstack 0
   468  00000B                     colorclick_readBlue@tmp:
   469                           	callstack 0
   470  00000B                     colorclick_readClear@tmp:
   471                           	callstack 0
   472  00000B                     fputs@s:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xA
   476  00000B                     	ds	2
   477  00000D                     ??___xxtofl:
   478  00000D                     ?_colorclick_readColour:
   479                           	callstack 0
   480  00000D                     fputs@fp:
   481                           	callstack 0
   482  00000D                     colorclick_readColour@current:
   483                           	callstack 0
   484                           
   485                           ; 8 bytes @ 0xC
   486  00000D                     	ds	2
   487  00000F                     fputs@c:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0xE
   491  00000F                     	ds	1
   492  000010                     fputs@i:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0xF
   496  000010                     	ds	1
   497  000011                     ___xxtofl@sign:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x10
   501  000011                     	ds	1
   502  000012                     ?_pad:
   503                           	callstack 0
   504  000012                     ___aodiv@counter:
   505                           	callstack 0
   506  000012                     ___aomod@counter:
   507                           	callstack 0
   508  000012                     ___xxtofl@exp:
   509                           	callstack 0
   510  000012                     pad@fp:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x11
   514  000012                     	ds	1
   515  000013                     ___aodiv@sign:
   516                           	callstack 0
   517  000013                     ___aomod@sign:
   518                           	callstack 0
   519  000013                     ___xxtofl@arg:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x12
   523  000013                     	ds	1
   524  000014                     ?_abs:
   525                           	callstack 0
   526  000014                     pad@buf:
   527                           	callstack 0
   528  000014                     abs@a:
   529                           	callstack 0
   530  000014                     ___aodiv@quotient:
   531                           	callstack 0
   532                           
   533                           ; 8 bytes @ 0x13
   534  000014                     	ds	1
   535  000015                     
   536                           ; 1 bytes @ 0x14
   537  000015                     	ds	1
   538  000016                     ??_abs:
   539  000016                     pad@p:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x15
   543  000016                     	ds	1
   544  000017                     stop_check@current:
   545                           	callstack 0
   546                           
   547                           ; 8 bytes @ 0x16
   548  000017                     	ds	1
   549  000018                     ??_pad:
   550                           
   551                           ; 1 bytes @ 0x17
   552  000018                     	ds	1
   553  000019                     pad@i:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x18
   557  000019                     	ds	2
   558  00001B                     pad@w:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1A
   562  00001B                     	ds	2
   563  00001D                     ?_dtoa:
   564                           	callstack 0
   565  00001D                     dtoa@fp:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x1C
   569  00001D                     	ds	2
   570  00001F                     stop_check@stop_pls:
   571                           	callstack 0
   572  00001F                     dtoa@d:
   573                           	callstack 0
   574                           
   575                           ; 8 bytes @ 0x1E
   576  00001F                     	ds	4
   577  000023                     stop_check@R_rel:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x22
   581  000023                     	ds	4
   582  000027                     ??_dtoa:
   583  000027                     stop_check@G_rel:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x26
   587  000027                     	ds	4
   588  00002B                     stop_check@B_rel:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0x2A
   592  00002B                     	ds	4
   593  00002F                     _dtoa$2490:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x2E
   597  00002F                     	ds	2
   598  000031                     dtoa@p:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x30
   602  000031                     	ds	2
   603  000033                     dtoa@w:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x32
   607  000033                     	ds	2
   608  000035                     dtoa@s:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x34
   612  000035                     	ds	2
   613  000037                     dtoa@n:
   614                           	callstack 0
   615                           
   616                           ; 8 bytes @ 0x36
   617  000037                     	ds	8
   618  00003F                     dtoa@i:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x3E
   622  00003F                     	ds	2
   623  000041                     ?_vfpfcnvrt:
   624                           	callstack 0
   625  000041                     vfpfcnvrt@fp:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x40
   629  000041                     	ds	2
   630  000043                     vfpfcnvrt@fmt:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x42
   634  000043                     	ds	2
   635  000045                     vfpfcnvrt@ap:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x44
   639  000045                     	ds	2
   640  000047                     ??_vfpfcnvrt:
   641                           
   642                           ; 1 bytes @ 0x46
   643  000047                     	ds	2
   644  000049                     vfpfcnvrt@ll:
   645                           	callstack 0
   646                           
   647                           ; 8 bytes @ 0x48
   648  000049                     	ds	8
   649  000051                     ?_vfprintf:
   650                           	callstack 0
   651  000051                     vfprintf@fp:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x50
   655  000051                     	ds	2
   656  000053                     vfprintf@fmt:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x52
   660  000053                     	ds	2
   661  000055                     vfprintf@ap:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x54
   665  000055                     	ds	2
   666  000057                     vfprintf@cfmt:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x56
   670  000057                     	ds	2
   671  000059                     
   672                           ; 1 bytes @ 0x58
   673 ;;
   674 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   675 ;;
   676 ;; *************** function _main *****************
   677 ;; Defined at:
   678 ;;		line 12 in file "main.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  buf            40   22[BANK0 ] unsigned char [40]
   683 ;;  tmpC            2   62[BANK0 ] unsigned int 
   684 ;;  tmpB            2    0        unsigned int 
   685 ;;  tmpG            2    0        unsigned int 
   686 ;;  tmpR            2    0        unsigned int 
   687 ;;  motorR          9   89[BANK0 ] struct .
   688 ;;  motorL          9   80[BANK0 ] struct .
   689 ;;  current         8   72[BANK0 ] struct .
   690 ;;  initial         8   64[BANK0 ] struct .
   691 ;;  PWMperiod       1    0        unsigned char 
   692 ;;  move            1    0        unsigned char 
   693 ;;  start           1    0        unsigned char 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   704 ;;      Locals:         0      76       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   705 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   706 ;;      Totals:         0      78       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   707 ;;Total ram usage:       78 bytes
   708 ;; Hardware stack levels required when called: 10
   709 ;; This function calls:
   710 ;;		_ADC_init
   711 ;;		_DCmotors_init
   712 ;;		_Timer0_init
   713 ;;		_USART4_init
   714 ;;		_colorclick_init
   715 ;;		_colorclick_readColour
   716 ;;		_colorclick_toggleClearLED
   717 ;;		_interrupts_init
   718 ;;		_sendStringSerial4
   719 ;;		_sprintf
   720 ;;		_stop_check
   721 ;; This function is called by:
   722 ;;		Startup code after reset
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text0
   727  0019F6                     __ptext0:
   728                           	callstack 0
   729  0019F6                     _main:
   730                           	callstack 21
   731  0019F6                     
   732                           ;main.c: 17:     card_flag = 0;
   733  0019F6  0E00               	movlw	0
   734  0019F8  0100               	movlb	0	; () banked
   735  0019FA  6FE3               	movwf	_card_flag& (0+255),b	;volatile
   736                           
   737                           ;main.c: 18:     battery_flag = 0;
   738  0019FC  0E00               	movlw	0
   739  0019FE  6FE5               	movwf	_battery_flag& (0+255),b	;volatile
   740                           
   741                           ;main.c: 19:     returnhome_flag = 0;
   742  001A00  0E00               	movlw	0
   743  001A02  6E5C               	movwf	_returnhome_flag^0,c	;volatile
   744  001A04                     
   745                           ; BSR set to: 0
   746                           ;main.c: 20:     ADC_init();
   747  001A04  ECD0  F013         	call	_ADC_init	;wreg free
   748  001A08                     
   749                           ;main.c: 21:     colorclick_init();
   750  001A08  ECE7  F012         	call	_colorclick_init	;wreg free
   751  001A0C                     
   752                           ;main.c: 22:     DCmotors_init(PWMperiod);
   753  001A0C  0E63               	movlw	99
   754  001A0E  EC3A  F012         	call	_DCmotors_init
   755  001A12                     
   756                           ;main.c: 23:     USART4_init();
   757  001A12  ECB0  F013         	call	_USART4_init	;wreg free
   758  001A16                     
   759                           ;main.c: 24:     Timer0_init();
   760  001A16  ECC0  F013         	call	_Timer0_init	;wreg free
   761  001A1A                     
   762                           ;main.c: 29:     DC_motor motorL;;main.c: 30:     motorL.power=0;
   763  001A1A  0E00               	movlw	0
   764  001A1C  0100               	movlb	0	; () banked
   765  001A1E  6FB0               	movwf	main@motorL& (0+255),b
   766  001A20                     
   767                           ; BSR set to: 0
   768                           ;main.c: 31:     motorL.direction=1;
   769  001A20  0E01               	movlw	1
   770  001A22  6FB1               	movwf	(main@motorL+1)& (0+255),b
   771  001A24                     
   772                           ; BSR set to: 0
   773                           ;main.c: 32:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   774  001A24  0EA3               	movlw	163
   775  001A26  6FB2               	movwf	(main@motorL+2)& (0+255),b
   776  001A28  0E0F               	movlw	15
   777  001A2A  6FB3               	movwf	(main@motorL+3)& (0+255),b
   778  001A2C                     
   779                           ; BSR set to: 0
   780                           ;main.c: 33:     motorL.dir_LAT=(unsigned char *)(&LATE);
   781  001A2C  0E7D               	movlw	125
   782  001A2E  6FB4               	movwf	(main@motorL+4)& (0+255),b
   783  001A30  0E0F               	movlw	15
   784  001A32  6FB5               	movwf	(main@motorL+5)& (0+255),b
   785  001A34                     
   786                           ; BSR set to: 0
   787                           ;main.c: 34:     motorL.dir_pin=4;
   788  001A34  0E04               	movlw	4
   789  001A36  6FB6               	movwf	(main@motorL+6)& (0+255),b
   790  001A38                     
   791                           ; BSR set to: 0
   792                           ;main.c: 35:     motorL.PWMperiod=PWMperiod;
   793  001A38  0E00               	movlw	0
   794  001A3A  6FB8               	movwf	(main@motorL+8)& (0+255),b
   795  001A3C  0E63               	movlw	99
   796  001A3E  6FB7               	movwf	(main@motorL+7)& (0+255),b
   797  001A40                     
   798                           ; BSR set to: 0
   799                           ;main.c: 38:     DC_motor motorR;;main.c: 39:     motorR.power=0;
   800  001A40  0E00               	movlw	0
   801  001A42  6FB9               	movwf	main@motorR& (0+255),b
   802  001A44                     
   803                           ; BSR set to: 0
   804                           ;main.c: 40:     motorR.direction=1;
   805  001A44  0E01               	movlw	1
   806  001A46  6FBA               	movwf	(main@motorR+1)& (0+255),b
   807  001A48                     
   808                           ; BSR set to: 0
   809                           ;main.c: 41:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   810  001A48  0EA0               	movlw	160
   811  001A4A  6FBB               	movwf	(main@motorR+2)& (0+255),b
   812  001A4C  0E0F               	movlw	15
   813  001A4E  6FBC               	movwf	(main@motorR+3)& (0+255),b
   814  001A50                     
   815                           ; BSR set to: 0
   816                           ;main.c: 42:     motorR.dir_LAT=(unsigned char *)(&LATG);
   817  001A50  0E7F               	movlw	127
   818  001A52  6FBD               	movwf	(main@motorR+4)& (0+255),b
   819  001A54  0E0F               	movlw	15
   820  001A56  6FBE               	movwf	(main@motorR+5)& (0+255),b
   821  001A58                     
   822                           ; BSR set to: 0
   823                           ;main.c: 43:     motorR.dir_pin=6;
   824  001A58  0E06               	movlw	6
   825  001A5A  6FBF               	movwf	(main@motorR+6)& (0+255),b
   826  001A5C                     
   827                           ; BSR set to: 0
   828                           ;main.c: 44:     motorR.PWMperiod=PWMperiod;
   829  001A5C  0E00               	movlw	0
   830  001A5E  6FC1               	movwf	(main@motorR+8)& (0+255),b
   831  001A60  0E63               	movlw	99
   832  001A62  6FC0               	movwf	(main@motorR+7)& (0+255),b
   833  001A64                     
   834                           ; BSR set to: 0
   835                           ;main.c: 54:     LATDbits.LATD7 = 0;
   836  001A64  9E7C               	bcf	124,7,c	;volatile
   837  001A66                     
   838                           ; BSR set to: 0
   839                           ;main.c: 55:     LATHbits.LATH3 = 0;
   840  001A66  9680               	bcf	128,3,c	;volatile
   841  001A68                     
   842                           ; BSR set to: 0
   843                           ;main.c: 57:     LATDbits.LATD3 = 1;
   844  001A68  867C               	bsf	124,3,c	;volatile
   845  001A6A                     
   846                           ; BSR set to: 0
   847                           ;main.c: 58:     colorclick_toggleClearLED(1);
   848  001A6A  0E01               	movlw	1
   849  001A6C  EC8F  F013         	call	_colorclick_toggleClearLED
   850  001A70                     
   851                           ;main.c: 60:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   852  001A70  0E52               	movlw	82
   853  001A72  0100               	movlb	0	; () banked
   854  001A74  6F75               	movwf	(??_main+1)& (0+255),b
   855  001A76  0E2B               	movlw	43
   856  001A78  6F74               	movwf	??_main& (0+255),b
   857  001A7A  0E00               	movlw	0
   858  001A7C                     u3417:
   859  001A7C  2EE8               	decfsz	wreg,f,c
   860  001A7E  D7FE               	bra	u3417
   861  001A80  2F74               	decfsz	??_main& (0+255),f,b
   862  001A82  D7FC               	bra	u3417
   863  001A84  2F75               	decfsz	(??_main+1)& (0+255),f,b
   864  001A86  D7FA               	bra	u3417
   865  001A88  F000               	nop	
   866  001A8A                     
   867                           ;main.c: 62:     RGB_val initial;;main.c: 63:     initial = colorclick_readColour(initia
      +                          l);
   868  001A8A  EE20  F0A0         	lfsr	2,main@initial
   869  001A8E  EE00  F00D         	lfsr	0,colorclick_readColour@current
   870  001A92  0E07               	movlw	7
   871  001A94                     u3361:
   872  001A94  CFDB FFEB          	movff	plusw2,plusw0
   873  001A98  06E8               	decf	wreg,f,c
   874  001A9A  E2FC               	bc	u3361
   875  001A9C  EC84  F012         	call	_colorclick_readColour	;wreg free
   876  001AA0  EE20  F0A0         	lfsr	2,main@initial
   877  001AA4  0E07               	movlw	7
   878  001AA6                     u3371:
   879  001AA6  CFEB FFDB          	movff	plusw0,plusw2
   880  001AAA  06E8               	decf	wreg,f,c
   881  001AAC  E2FC               	bc	u3371
   882  001AAE                     
   883                           ;main.c: 64:     _delay((unsigned long)((100)*(64000000/4000.0)));
   884  001AAE  0E09               	movlw	9
   885  001AB0  0100               	movlb	0	; () banked
   886  001AB2  6F75               	movwf	(??_main+1)& (0+255),b
   887  001AB4  0E1E               	movlw	30
   888  001AB6  6F74               	movwf	??_main& (0+255),b
   889  001AB8  0EE4               	movlw	228
   890  001ABA                     u3427:
   891  001ABA  2EE8               	decfsz	wreg,f,c
   892  001ABC  D7FE               	bra	u3427
   893  001ABE  2F74               	decfsz	??_main& (0+255),f,b
   894  001AC0  D7FC               	bra	u3427
   895  001AC2  2F75               	decfsz	(??_main+1)& (0+255),f,b
   896  001AC4  D7FA               	bra	u3427
   897  001AC6  F000               	nop	
   898  001AC8                     
   899                           ;main.c: 67:     interrupts_init();
   900  001AC8  ECF4  F013         	call	_interrupts_init	;wreg free
   901  001ACC                     l3455:
   902                           
   903                           ;main.c: 128:         current = colorclick_readColour(current);
   904  001ACC  EE20  F0A8         	lfsr	2,main@current
   905  001AD0  EE00  F00D         	lfsr	0,colorclick_readColour@current
   906  001AD4  0E07               	movlw	7
   907  001AD6                     u3381:
   908  001AD6  CFDB FFEB          	movff	plusw2,plusw0
   909  001ADA  06E8               	decf	wreg,f,c
   910  001ADC  E2FC               	bc	u3381
   911  001ADE  EC84  F012         	call	_colorclick_readColour	;wreg free
   912  001AE2  EE20  F0A8         	lfsr	2,main@current
   913  001AE6  0E07               	movlw	7
   914  001AE8                     u3391:
   915  001AE8  CFEB FFDB          	movff	plusw0,plusw2
   916  001AEC  06E8               	decf	wreg,f,c
   917  001AEE  E2FC               	bc	u3391
   918  001AF0                     
   919                           ;main.c: 133:         unsigned int tmpC = current.C;
   920  001AF0  C0AE  F09E         	movff	main@current+6,main@tmpC
   921  001AF4  C0AF  F09F         	movff	main@current+7,main@tmpC+1
   922  001AF8                     
   923                           ;main.c: 134:         sprintf(buf,"%i %i %i %i\n",clear_lower,clear_upper,initial.C,tmpC
      +                          );
   924  001AF8  0E76               	movlw	low main@buf
   925  001AFA  0100               	movlb	0	; () banked
   926  001AFC  6F60               	movwf	sprintf@s& (0+255),b
   927  001AFE  0E00               	movlw	high main@buf
   928  001B00  6F61               	movwf	(sprintf@s+1)& (0+255),b
   929  001B02  0E01               	movlw	low STR_1
   930  001B04  6F62               	movwf	sprintf@fmt& (0+255),b
   931  001B06  0E0E               	movlw	high STR_1
   932  001B08  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   933  001B0A  C0E0  F064         	movff	_clear_lower,?_sprintf+4	;volatile
   934  001B0E  C0E1  F065         	movff	_clear_lower+1,?_sprintf+5	;volatile
   935  001B12  C0DE  F066         	movff	_clear_upper,?_sprintf+6	;volatile
   936  001B16  C0DF  F067         	movff	_clear_upper+1,?_sprintf+7	;volatile
   937  001B1A  C0A6  F068         	movff	main@initial+6,?_sprintf+8
   938  001B1E  C0A7  F069         	movff	main@initial+7,?_sprintf+9
   939  001B22  C09E  F06A         	movff	main@tmpC,?_sprintf+10
   940  001B26  C09F  F06B         	movff	main@tmpC+1,?_sprintf+11
   941  001B2A  EC71  F011         	call	_sprintf	;wreg free
   942  001B2E                     
   943                           ;main.c: 135:         sendStringSerial4(buf);
   944  001B2E  0E76               	movlw	low main@buf
   945  001B30  6E03               	movwf	sendStringSerial4@string^0,c
   946  001B32  0E00               	movlw	high main@buf
   947  001B34  6E04               	movwf	(sendStringSerial4@string+1)^0,c
   948  001B36  EC3B  F013         	call	_sendStringSerial4	;wreg free
   949  001B3A                     
   950                           ;main.c: 136:         _delay((unsigned long)((300)*(64000000/4000.0)));
   951  001B3A  0E19               	movlw	25
   952  001B3C  0100               	movlb	0	; () banked
   953  001B3E  6F75               	movwf	(??_main+1)& (0+255),b
   954  001B40  0E5A               	movlw	90
   955  001B42  6F74               	movwf	??_main& (0+255),b
   956  001B44  0EB1               	movlw	177
   957  001B46                     u3437:
   958  001B46  2EE8               	decfsz	wreg,f,c
   959  001B48  D7FE               	bra	u3437
   960  001B4A  2F74               	decfsz	??_main& (0+255),f,b
   961  001B4C  D7FC               	bra	u3437
   962  001B4E  2F75               	decfsz	(??_main+1)& (0+255),f,b
   963  001B50  D7FA               	bra	u3437
   964  001B52  D000               	nop2	
   965  001B54                     
   966                           ;main.c: 194:         LATHbits.LATH3 = stop_check(current);
   967  001B54  EE20  F0A8         	lfsr	2,main@current
   968  001B58  EE00  F017         	lfsr	0,stop_check@current
   969  001B5C  0E07               	movlw	7
   970  001B5E                     u3401:
   971  001B5E  CFDB FFEB          	movff	plusw2,plusw0
   972  001B62  06E8               	decf	wreg,f,c
   973  001B64  E2FC               	bc	u3401
   974  001B66  EC08  F007         	call	_stop_check	;wreg free
   975  001B6A  0100               	movlb	0	; () banked
   976  001B6C  6F74               	movwf	??_main& (0+255),b
   977  001B6E  4774               	rlncf	??_main& (0+255),f,b
   978  001B70  4774               	rlncf	??_main& (0+255),f,b
   979  001B72  4774               	rlncf	??_main& (0+255),f,b
   980  001B74  5080               	movf	128,w,c	;volatile
   981  001B76  1974               	xorwf	??_main& (0+255),w,b
   982  001B78  0BF7               	andlw	-9
   983  001B7A  1974               	xorwf	??_main& (0+255),w,b
   984  001B7C  6E80               	movwf	128,c	;volatile
   985  001B7E  EF66  F00D         	goto	l3455
   986  001B82  EF13  F000         	goto	start
   987  001B86                     __end_of_main:
   988                           	callstack 0
   989                           
   990 ;; *************** function _stop_check *****************
   991 ;; Defined at:
   992 ;;		line 62 in file "color_card.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  current         8   22[COMRAM] struct .
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  B_rel           4   42[COMRAM] float 
   997 ;;  G_rel           4   38[COMRAM] float 
   998 ;;  R_rel           4   34[COMRAM] float 
   999 ;;  stop_pls        4   30[COMRAM] float 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      unsigned char 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1009 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1012 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1013 ;;Total ram usage:       24 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 3
  1016 ;; This function calls:
  1017 ;;		___flge
  1018 ;;		___fltol
  1019 ;;		___lwdiv
  1020 ;;		___xxtofl
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text1
  1027  000E10                     __ptext1:
  1028                           	callstack 0
  1029  000E10                     _stop_check:
  1030                           	callstack 27
  1031  000E10                     
  1032                           ;color_card.c: 64:     float R_rel = current.R/current.C;
  1033  000E10  C01D  F004         	movff	stop_check@current+6,___lwdiv@divisor
  1034  000E14  C01E  F005         	movff	stop_check@current+7,___lwdiv@divisor+1
  1035  000E18  C017  F002         	movff	stop_check@current,___lwdiv@dividend
  1036  000E1C  C018  F003         	movff	stop_check@current+1,___lwdiv@dividend+1
  1037  000E20  EC06  F011         	call	___lwdiv	;wreg free
  1038  000E24  C002  F009         	movff	?___lwdiv,___xxtofl@val
  1039  000E28  C003  F00A         	movff	?___lwdiv+1,___xxtofl@val+1
  1040  000E2C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1041  000E2E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1042  000E30  0E00               	movlw	0
  1043  000E32  EC47  F00B         	call	___xxtofl
  1044  000E36  C009  F023         	movff	?___xxtofl,stop_check@R_rel
  1045  000E3A  C00A  F024         	movff	?___xxtofl+1,stop_check@R_rel+1
  1046  000E3E  C00B  F025         	movff	?___xxtofl+2,stop_check@R_rel+2
  1047  000E42  C00C  F026         	movff	?___xxtofl+3,stop_check@R_rel+3
  1048                           
  1049                           ;color_card.c: 65:     float G_rel = current.G/current.C;
  1050  000E46  C01D  F004         	movff	stop_check@current+6,___lwdiv@divisor
  1051  000E4A  C01E  F005         	movff	stop_check@current+7,___lwdiv@divisor+1
  1052  000E4E  C019  F002         	movff	stop_check@current+2,___lwdiv@dividend
  1053  000E52  C01A  F003         	movff	stop_check@current+3,___lwdiv@dividend+1
  1054  000E56  EC06  F011         	call	___lwdiv	;wreg free
  1055  000E5A  C002  F009         	movff	?___lwdiv,___xxtofl@val
  1056  000E5E  C003  F00A         	movff	?___lwdiv+1,___xxtofl@val+1
  1057  000E62  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1058  000E64  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1059  000E66  0E00               	movlw	0
  1060  000E68  EC47  F00B         	call	___xxtofl
  1061  000E6C  C009  F027         	movff	?___xxtofl,stop_check@G_rel
  1062  000E70  C00A  F028         	movff	?___xxtofl+1,stop_check@G_rel+1
  1063  000E74  C00B  F029         	movff	?___xxtofl+2,stop_check@G_rel+2
  1064  000E78  C00C  F02A         	movff	?___xxtofl+3,stop_check@G_rel+3
  1065                           
  1066                           ;color_card.c: 66:     float B_rel = current.B/current.C;
  1067  000E7C  C01D  F004         	movff	stop_check@current+6,___lwdiv@divisor
  1068  000E80  C01E  F005         	movff	stop_check@current+7,___lwdiv@divisor+1
  1069  000E84  C01B  F002         	movff	stop_check@current+4,___lwdiv@dividend
  1070  000E88  C01C  F003         	movff	stop_check@current+5,___lwdiv@dividend+1
  1071  000E8C  EC06  F011         	call	___lwdiv	;wreg free
  1072  000E90  C002  F009         	movff	?___lwdiv,___xxtofl@val
  1073  000E94  C003  F00A         	movff	?___lwdiv+1,___xxtofl@val+1
  1074  000E98  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1075  000E9A  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1076  000E9C  0E00               	movlw	0
  1077  000E9E  EC47  F00B         	call	___xxtofl
  1078  000EA2  C009  F02B         	movff	?___xxtofl,stop_check@B_rel
  1079  000EA6  C00A  F02C         	movff	?___xxtofl+1,stop_check@B_rel+1
  1080  000EAA  C00B  F02D         	movff	?___xxtofl+2,stop_check@B_rel+2
  1081  000EAE  C00C  F02E         	movff	?___xxtofl+3,stop_check@B_rel+3
  1082  000EB2                     
  1083                           ;color_card.c: 69:     if ((R_rel>0.474) && (G_rel<0.272) && (B_rel<0.193)) {
  1084  000EB2  0E21               	movlw	33
  1085  000EB4  6E02               	movwf	___flge@ff1^0,c
  1086  000EB6  0EB0               	movlw	176
  1087  000EB8  6E03               	movwf	(___flge@ff1+1)^0,c
  1088  000EBA  0EF2               	movlw	242
  1089  000EBC  6E04               	movwf	(___flge@ff1+2)^0,c
  1090  000EBE  0E3E               	movlw	62
  1091  000EC0  6E05               	movwf	(___flge@ff1+3)^0,c
  1092  000EC2  C023  F006         	movff	stop_check@R_rel,___flge@ff2
  1093  000EC6  C024  F007         	movff	stop_check@R_rel+1,___flge@ff2+1
  1094  000ECA  C025  F008         	movff	stop_check@R_rel+2,___flge@ff2+2
  1095  000ECE  C026  F009         	movff	stop_check@R_rel+3,___flge@ff2+3
  1096  000ED2  ECBC  F00F         	call	___flge	;wreg free
  1097  000ED6  B0D8               	btfsc	status,0,c
  1098  000ED8  EF70  F007         	goto	u2481
  1099  000EDC  EF72  F007         	goto	u2480
  1100  000EE0                     u2481:
  1101  000EE0  EFA6  F007         	goto	l2955
  1102  000EE4                     u2480:
  1103  000EE4  C027  F002         	movff	stop_check@G_rel,___flge@ff1
  1104  000EE8  C028  F003         	movff	stop_check@G_rel+1,___flge@ff1+1
  1105  000EEC  C029  F004         	movff	stop_check@G_rel+2,___flge@ff1+2
  1106  000EF0  C02A  F005         	movff	stop_check@G_rel+3,___flge@ff1+3
  1107  000EF4  0E96               	movlw	150
  1108  000EF6  6E06               	movwf	___flge@ff2^0,c
  1109  000EF8  0E43               	movlw	67
  1110  000EFA  6E07               	movwf	(___flge@ff2+1)^0,c
  1111  000EFC  0E8B               	movlw	139
  1112  000EFE  6E08               	movwf	(___flge@ff2+2)^0,c
  1113  000F00  0E3E               	movlw	62
  1114  000F02  6E09               	movwf	(___flge@ff2+3)^0,c
  1115  000F04  ECBC  F00F         	call	___flge	;wreg free
  1116  000F08  B0D8               	btfsc	status,0,c
  1117  000F0A  EF89  F007         	goto	u2491
  1118  000F0E  EF8B  F007         	goto	u2490
  1119  000F12                     u2491:
  1120  000F12  EFA6  F007         	goto	l2955
  1121  000F16                     u2490:
  1122  000F16  C02B  F002         	movff	stop_check@B_rel,___flge@ff1
  1123  000F1A  C02C  F003         	movff	stop_check@B_rel+1,___flge@ff1+1
  1124  000F1E  C02D  F004         	movff	stop_check@B_rel+2,___flge@ff1+2
  1125  000F22  C02E  F005         	movff	stop_check@B_rel+3,___flge@ff1+3
  1126  000F26  0ECB               	movlw	203
  1127  000F28  6E06               	movwf	___flge@ff2^0,c
  1128  000F2A  0EA1               	movlw	161
  1129  000F2C  6E07               	movwf	(___flge@ff2+1)^0,c
  1130  000F2E  0E45               	movlw	69
  1131  000F30  6E08               	movwf	(___flge@ff2+2)^0,c
  1132  000F32  0E3E               	movlw	62
  1133  000F34  6E09               	movwf	(___flge@ff2+3)^0,c
  1134  000F36  ECBC  F00F         	call	___flge	;wreg free
  1135  000F3A  B0D8               	btfsc	status,0,c
  1136  000F3C  EFA2  F007         	goto	u2501
  1137  000F40  EFA4  F007         	goto	u2500
  1138  000F44                     u2501:
  1139  000F44  EFA6  F007         	goto	l2955
  1140  000F48                     u2500:
  1141  000F48                     
  1142                           ;color_card.c: 73:     } else if ((R_rel<0.453) && (G_rel>0.284) && (B_rel>0.193)) {
  1143  000F48  EFC1  F009         	goto	l3013
  1144  000F4C                     l2955:
  1145  000F4C  C023  F002         	movff	stop_check@R_rel,___flge@ff1
  1146  000F50  C024  F003         	movff	stop_check@R_rel+1,___flge@ff1+1
  1147  000F54  C025  F004         	movff	stop_check@R_rel+2,___flge@ff1+2
  1148  000F58  C026  F005         	movff	stop_check@R_rel+3,___flge@ff1+3
  1149  000F5C  0E9E               	movlw	158
  1150  000F5E  6E06               	movwf	___flge@ff2^0,c
  1151  000F60  0EEF               	movlw	239
  1152  000F62  6E07               	movwf	(___flge@ff2+1)^0,c
  1153  000F64  0EE7               	movlw	231
  1154  000F66  6E08               	movwf	(___flge@ff2+2)^0,c
  1155  000F68  0E3E               	movlw	62
  1156  000F6A  6E09               	movwf	(___flge@ff2+3)^0,c
  1157  000F6C  ECBC  F00F         	call	___flge	;wreg free
  1158  000F70  B0D8               	btfsc	status,0,c
  1159  000F72  EFBD  F007         	goto	u2511
  1160  000F76  EFBF  F007         	goto	u2510
  1161  000F7A                     u2511:
  1162  000F7A  EFF3  F007         	goto	l2963
  1163  000F7E                     u2510:
  1164  000F7E  0E73               	movlw	115
  1165  000F80  6E02               	movwf	___flge@ff1^0,c
  1166  000F82  0E68               	movlw	104
  1167  000F84  6E03               	movwf	(___flge@ff1+1)^0,c
  1168  000F86  0E91               	movlw	145
  1169  000F88  6E04               	movwf	(___flge@ff1+2)^0,c
  1170  000F8A  0E3E               	movlw	62
  1171  000F8C  6E05               	movwf	(___flge@ff1+3)^0,c
  1172  000F8E  C027  F006         	movff	stop_check@G_rel,___flge@ff2
  1173  000F92  C028  F007         	movff	stop_check@G_rel+1,___flge@ff2+1
  1174  000F96  C029  F008         	movff	stop_check@G_rel+2,___flge@ff2+2
  1175  000F9A  C02A  F009         	movff	stop_check@G_rel+3,___flge@ff2+3
  1176  000F9E  ECBC  F00F         	call	___flge	;wreg free
  1177  000FA2  B0D8               	btfsc	status,0,c
  1178  000FA4  EFD6  F007         	goto	u2521
  1179  000FA8  EFD8  F007         	goto	u2520
  1180  000FAC                     u2521:
  1181  000FAC  EFF3  F007         	goto	l2963
  1182  000FB0                     u2520:
  1183  000FB0  0ECB               	movlw	203
  1184  000FB2  6E02               	movwf	___flge@ff1^0,c
  1185  000FB4  0EA1               	movlw	161
  1186  000FB6  6E03               	movwf	(___flge@ff1+1)^0,c
  1187  000FB8  0E45               	movlw	69
  1188  000FBA  6E04               	movwf	(___flge@ff1+2)^0,c
  1189  000FBC  0E3E               	movlw	62
  1190  000FBE  6E05               	movwf	(___flge@ff1+3)^0,c
  1191  000FC0  C02B  F006         	movff	stop_check@B_rel,___flge@ff2
  1192  000FC4  C02C  F007         	movff	stop_check@B_rel+1,___flge@ff2+1
  1193  000FC8  C02D  F008         	movff	stop_check@B_rel+2,___flge@ff2+2
  1194  000FCC  C02E  F009         	movff	stop_check@B_rel+3,___flge@ff2+3
  1195  000FD0  ECBC  F00F         	call	___flge	;wreg free
  1196  000FD4  B0D8               	btfsc	status,0,c
  1197  000FD6  EFEF  F007         	goto	u2531
  1198  000FDA  EFF1  F007         	goto	u2530
  1199  000FDE                     u2531:
  1200  000FDE  EFF3  F007         	goto	l2963
  1201  000FE2                     u2530:
  1202  000FE2                     
  1203                           ;color_card.c: 77:     } else if ((R_rel<0.452) && (G_rel>0.282) && (B_rel>0.196)) {
  1204  000FE2  EFC1  F009         	goto	l3013
  1205  000FE6                     l2963:
  1206  000FE6  C023  F002         	movff	stop_check@R_rel,___flge@ff1
  1207  000FEA  C024  F003         	movff	stop_check@R_rel+1,___flge@ff1+1
  1208  000FEE  C025  F004         	movff	stop_check@R_rel+2,___flge@ff1+2
  1209  000FF2  C026  F005         	movff	stop_check@R_rel+3,___flge@ff1+3
  1210  000FF6  0E8B               	movlw	139
  1211  000FF8  6E06               	movwf	___flge@ff2^0,c
  1212  000FFA  0E6C               	movlw	108
  1213  000FFC  6E07               	movwf	(___flge@ff2+1)^0,c
  1214  000FFE  0EE7               	movlw	231
  1215  001000  6E08               	movwf	(___flge@ff2+2)^0,c
  1216  001002  0E3E               	movlw	62
  1217  001004  6E09               	movwf	(___flge@ff2+3)^0,c
  1218  001006  ECBC  F00F         	call	___flge	;wreg free
  1219  00100A  B0D8               	btfsc	status,0,c
  1220  00100C  EF0A  F008         	goto	u2541
  1221  001010  EF0C  F008         	goto	u2540
  1222  001014                     u2541:
  1223  001014  EF40  F008         	goto	l2971
  1224  001018                     u2540:
  1225  001018  0E4E               	movlw	78
  1226  00101A  6E02               	movwf	___flge@ff1^0,c
  1227  00101C  0E62               	movlw	98
  1228  00101E  6E03               	movwf	(___flge@ff1+1)^0,c
  1229  001020  0E90               	movlw	144
  1230  001022  6E04               	movwf	(___flge@ff1+2)^0,c
  1231  001024  0E3E               	movlw	62
  1232  001026  6E05               	movwf	(___flge@ff1+3)^0,c
  1233  001028  C027  F006         	movff	stop_check@G_rel,___flge@ff2
  1234  00102C  C028  F007         	movff	stop_check@G_rel+1,___flge@ff2+1
  1235  001030  C029  F008         	movff	stop_check@G_rel+2,___flge@ff2+2
  1236  001034  C02A  F009         	movff	stop_check@G_rel+3,___flge@ff2+3
  1237  001038  ECBC  F00F         	call	___flge	;wreg free
  1238  00103C  B0D8               	btfsc	status,0,c
  1239  00103E  EF23  F008         	goto	u2551
  1240  001042  EF25  F008         	goto	u2550
  1241  001046                     u2551:
  1242  001046  EF40  F008         	goto	l2971
  1243  00104A                     u2550:
  1244  00104A  0E39               	movlw	57
  1245  00104C  6E02               	movwf	___flge@ff1^0,c
  1246  00104E  0EB4               	movlw	180
  1247  001050  6E03               	movwf	(___flge@ff1+1)^0,c
  1248  001052  0E48               	movlw	72
  1249  001054  6E04               	movwf	(___flge@ff1+2)^0,c
  1250  001056  0E3E               	movlw	62
  1251  001058  6E05               	movwf	(___flge@ff1+3)^0,c
  1252  00105A  C02B  F006         	movff	stop_check@B_rel,___flge@ff2
  1253  00105E  C02C  F007         	movff	stop_check@B_rel+1,___flge@ff2+1
  1254  001062  C02D  F008         	movff	stop_check@B_rel+2,___flge@ff2+2
  1255  001066  C02E  F009         	movff	stop_check@B_rel+3,___flge@ff2+3
  1256  00106A  ECBC  F00F         	call	___flge	;wreg free
  1257  00106E  B0D8               	btfsc	status,0,c
  1258  001070  EF3C  F008         	goto	u2561
  1259  001074  EF3E  F008         	goto	u2560
  1260  001078                     u2561:
  1261  001078  EF40  F008         	goto	l2971
  1262  00107C                     u2560:
  1263  00107C                     
  1264                           ;color_card.c: 81:     } else if ((R_rel<0.466) && (G_rel>0.281) && (B_rel>0.190)) {
  1265  00107C  EFC1  F009         	goto	l3013
  1266  001080                     l2971:
  1267  001080  C023  F002         	movff	stop_check@R_rel,___flge@ff1
  1268  001084  C024  F003         	movff	stop_check@R_rel+1,___flge@ff1+1
  1269  001088  C025  F004         	movff	stop_check@R_rel+2,___flge@ff1+2
  1270  00108C  C026  F005         	movff	stop_check@R_rel+3,___flge@ff1+3
  1271  001090  0E8D               	movlw	141
  1272  001092  6E06               	movwf	___flge@ff2^0,c
  1273  001094  0E97               	movlw	151
  1274  001096  6E07               	movwf	(___flge@ff2+1)^0,c
  1275  001098  0EEE               	movlw	238
  1276  00109A  6E08               	movwf	(___flge@ff2+2)^0,c
  1277  00109C  0E3E               	movlw	62
  1278  00109E  6E09               	movwf	(___flge@ff2+3)^0,c
  1279  0010A0  ECBC  F00F         	call	___flge	;wreg free
  1280  0010A4  B0D8               	btfsc	status,0,c
  1281  0010A6  EF57  F008         	goto	u2571
  1282  0010AA  EF59  F008         	goto	u2570
  1283  0010AE                     u2571:
  1284  0010AE  EF8D  F008         	goto	l2979
  1285  0010B2                     u2570:
  1286  0010B2  0E3B               	movlw	59
  1287  0010B4  6E02               	movwf	___flge@ff1^0,c
  1288  0010B6  0EDF               	movlw	223
  1289  0010B8  6E03               	movwf	(___flge@ff1+1)^0,c
  1290  0010BA  0E8F               	movlw	143
  1291  0010BC  6E04               	movwf	(___flge@ff1+2)^0,c
  1292  0010BE  0E3E               	movlw	62
  1293  0010C0  6E05               	movwf	(___flge@ff1+3)^0,c
  1294  0010C2  C027  F006         	movff	stop_check@G_rel,___flge@ff2
  1295  0010C6  C028  F007         	movff	stop_check@G_rel+1,___flge@ff2+1
  1296  0010CA  C029  F008         	movff	stop_check@G_rel+2,___flge@ff2+2
  1297  0010CE  C02A  F009         	movff	stop_check@G_rel+3,___flge@ff2+3
  1298  0010D2  ECBC  F00F         	call	___flge	;wreg free
  1299  0010D6  B0D8               	btfsc	status,0,c
  1300  0010D8  EF70  F008         	goto	u2581
  1301  0010DC  EF72  F008         	goto	u2580
  1302  0010E0                     u2581:
  1303  0010E0  EF8D  F008         	goto	l2979
  1304  0010E4                     u2580:
  1305  0010E4  0E5C               	movlw	92
  1306  0010E6  6E02               	movwf	___flge@ff1^0,c
  1307  0010E8  0E8F               	movlw	143
  1308  0010EA  6E03               	movwf	(___flge@ff1+1)^0,c
  1309  0010EC  0E42               	movlw	66
  1310  0010EE  6E04               	movwf	(___flge@ff1+2)^0,c
  1311  0010F0  0E3E               	movlw	62
  1312  0010F2  6E05               	movwf	(___flge@ff1+3)^0,c
  1313  0010F4  C02B  F006         	movff	stop_check@B_rel,___flge@ff2
  1314  0010F8  C02C  F007         	movff	stop_check@B_rel+1,___flge@ff2+1
  1315  0010FC  C02D  F008         	movff	stop_check@B_rel+2,___flge@ff2+2
  1316  001100  C02E  F009         	movff	stop_check@B_rel+3,___flge@ff2+3
  1317  001104  ECBC  F00F         	call	___flge	;wreg free
  1318  001108  B0D8               	btfsc	status,0,c
  1319  00110A  EF89  F008         	goto	u2591
  1320  00110E  EF8B  F008         	goto	u2590
  1321  001112                     u2591:
  1322  001112  EF8D  F008         	goto	l2979
  1323  001116                     u2590:
  1324  001116                     
  1325                           ;color_card.c: 85:     } else if ((R_rel<0.474) && (G_rel>0.272) && (B_rel>0.189)) {
  1326  001116  EFC1  F009         	goto	l3013
  1327  00111A                     l2979:
  1328  00111A  C023  F002         	movff	stop_check@R_rel,___flge@ff1
  1329  00111E  C024  F003         	movff	stop_check@R_rel+1,___flge@ff1+1
  1330  001122  C025  F004         	movff	stop_check@R_rel+2,___flge@ff1+2
  1331  001126  C026  F005         	movff	stop_check@R_rel+3,___flge@ff1+3
  1332  00112A  0E21               	movlw	33
  1333  00112C  6E06               	movwf	___flge@ff2^0,c
  1334  00112E  0EB0               	movlw	176
  1335  001130  6E07               	movwf	(___flge@ff2+1)^0,c
  1336  001132  0EF2               	movlw	242
  1337  001134  6E08               	movwf	(___flge@ff2+2)^0,c
  1338  001136  0E3E               	movlw	62
  1339  001138  6E09               	movwf	(___flge@ff2+3)^0,c
  1340  00113A  ECBC  F00F         	call	___flge	;wreg free
  1341  00113E  B0D8               	btfsc	status,0,c
  1342  001140  EFA4  F008         	goto	u2601
  1343  001144  EFA6  F008         	goto	u2600
  1344  001148                     u2601:
  1345  001148  EFDA  F008         	goto	l2987
  1346  00114C                     u2600:
  1347  00114C  0E96               	movlw	150
  1348  00114E  6E02               	movwf	___flge@ff1^0,c
  1349  001150  0E43               	movlw	67
  1350  001152  6E03               	movwf	(___flge@ff1+1)^0,c
  1351  001154  0E8B               	movlw	139
  1352  001156  6E04               	movwf	(___flge@ff1+2)^0,c
  1353  001158  0E3E               	movlw	62
  1354  00115A  6E05               	movwf	(___flge@ff1+3)^0,c
  1355  00115C  C027  F006         	movff	stop_check@G_rel,___flge@ff2
  1356  001160  C028  F007         	movff	stop_check@G_rel+1,___flge@ff2+1
  1357  001164  C029  F008         	movff	stop_check@G_rel+2,___flge@ff2+2
  1358  001168  C02A  F009         	movff	stop_check@G_rel+3,___flge@ff2+3
  1359  00116C  ECBC  F00F         	call	___flge	;wreg free
  1360  001170  B0D8               	btfsc	status,0,c
  1361  001172  EFBD  F008         	goto	u2611
  1362  001176  EFBF  F008         	goto	u2610
  1363  00117A                     u2611:
  1364  00117A  EFDA  F008         	goto	l2987
  1365  00117E                     u2610:
  1366  00117E  0E37               	movlw	55
  1367  001180  6E02               	movwf	___flge@ff1^0,c
  1368  001182  0E89               	movlw	137
  1369  001184  6E03               	movwf	(___flge@ff1+1)^0,c
  1370  001186  0E41               	movlw	65
  1371  001188  6E04               	movwf	(___flge@ff1+2)^0,c
  1372  00118A  0E3E               	movlw	62
  1373  00118C  6E05               	movwf	(___flge@ff1+3)^0,c
  1374  00118E  C02B  F006         	movff	stop_check@B_rel,___flge@ff2
  1375  001192  C02C  F007         	movff	stop_check@B_rel+1,___flge@ff2+1
  1376  001196  C02D  F008         	movff	stop_check@B_rel+2,___flge@ff2+2
  1377  00119A  C02E  F009         	movff	stop_check@B_rel+3,___flge@ff2+3
  1378  00119E  ECBC  F00F         	call	___flge	;wreg free
  1379  0011A2  B0D8               	btfsc	status,0,c
  1380  0011A4  EFD6  F008         	goto	u2621
  1381  0011A8  EFD8  F008         	goto	u2620
  1382  0011AC                     u2621:
  1383  0011AC  EFDA  F008         	goto	l2987
  1384  0011B0                     u2620:
  1385  0011B0                     
  1386                           ;color_card.c: 89:     } else if ((R_rel<0.466) && (G_rel>0.277) && (B_rel>0.194)) {
  1387  0011B0  EFC1  F009         	goto	l3013
  1388  0011B4                     l2987:
  1389  0011B4  C023  F002         	movff	stop_check@R_rel,___flge@ff1
  1390  0011B8  C024  F003         	movff	stop_check@R_rel+1,___flge@ff1+1
  1391  0011BC  C025  F004         	movff	stop_check@R_rel+2,___flge@ff1+2
  1392  0011C0  C026  F005         	movff	stop_check@R_rel+3,___flge@ff1+3
  1393  0011C4  0E8D               	movlw	141
  1394  0011C6  6E06               	movwf	___flge@ff2^0,c
  1395  0011C8  0E97               	movlw	151
  1396  0011CA  6E07               	movwf	(___flge@ff2+1)^0,c
  1397  0011CC  0EEE               	movlw	238
  1398  0011CE  6E08               	movwf	(___flge@ff2+2)^0,c
  1399  0011D0  0E3E               	movlw	62
  1400  0011D2  6E09               	movwf	(___flge@ff2+3)^0,c
  1401  0011D4  ECBC  F00F         	call	___flge	;wreg free
  1402  0011D8  B0D8               	btfsc	status,0,c
  1403  0011DA  EFF1  F008         	goto	u2631
  1404  0011DE  EFF3  F008         	goto	u2630
  1405  0011E2                     u2631:
  1406  0011E2  EF27  F009         	goto	l2995
  1407  0011E6                     u2630:
  1408  0011E6  0EF2               	movlw	242
  1409  0011E8  6E02               	movwf	___flge@ff1^0,c
  1410  0011EA  0ED2               	movlw	210
  1411  0011EC  6E03               	movwf	(___flge@ff1+1)^0,c
  1412  0011EE  0E8D               	movlw	141
  1413  0011F0  6E04               	movwf	(___flge@ff1+2)^0,c
  1414  0011F2  0E3E               	movlw	62
  1415  0011F4  6E05               	movwf	(___flge@ff1+3)^0,c
  1416  0011F6  C027  F006         	movff	stop_check@G_rel,___flge@ff2
  1417  0011FA  C028  F007         	movff	stop_check@G_rel+1,___flge@ff2+1
  1418  0011FE  C029  F008         	movff	stop_check@G_rel+2,___flge@ff2+2
  1419  001202  C02A  F009         	movff	stop_check@G_rel+3,___flge@ff2+3
  1420  001206  ECBC  F00F         	call	___flge	;wreg free
  1421  00120A  B0D8               	btfsc	status,0,c
  1422  00120C  EF0A  F009         	goto	u2641
  1423  001210  EF0C  F009         	goto	u2640
  1424  001214                     u2641:
  1425  001214  EF27  F009         	goto	l2995
  1426  001218                     u2640:
  1427  001218  0EF0               	movlw	240
  1428  00121A  6E02               	movwf	___flge@ff1^0,c
  1429  00121C  0EA7               	movlw	167
  1430  00121E  6E03               	movwf	(___flge@ff1+1)^0,c
  1431  001220  0E46               	movlw	70
  1432  001222  6E04               	movwf	(___flge@ff1+2)^0,c
  1433  001224  0E3E               	movlw	62
  1434  001226  6E05               	movwf	(___flge@ff1+3)^0,c
  1435  001228  C02B  F006         	movff	stop_check@B_rel,___flge@ff2
  1436  00122C  C02C  F007         	movff	stop_check@B_rel+1,___flge@ff2+1
  1437  001230  C02D  F008         	movff	stop_check@B_rel+2,___flge@ff2+2
  1438  001234  C02E  F009         	movff	stop_check@B_rel+3,___flge@ff2+3
  1439  001238  ECBC  F00F         	call	___flge	;wreg free
  1440  00123C  B0D8               	btfsc	status,0,c
  1441  00123E  EF23  F009         	goto	u2651
  1442  001242  EF25  F009         	goto	u2650
  1443  001246                     u2651:
  1444  001246  EF27  F009         	goto	l2995
  1445  00124A                     u2650:
  1446  00124A                     
  1447                           ;color_card.c: 93:     } else if ((R_rel<0.453) && (G_rel>0.284) && (B_rel>0.197)) {
  1448  00124A  EFC1  F009         	goto	l3013
  1449  00124E                     l2995:
  1450  00124E  C023  F002         	movff	stop_check@R_rel,___flge@ff1
  1451  001252  C024  F003         	movff	stop_check@R_rel+1,___flge@ff1+1
  1452  001256  C025  F004         	movff	stop_check@R_rel+2,___flge@ff1+2
  1453  00125A  C026  F005         	movff	stop_check@R_rel+3,___flge@ff1+3
  1454  00125E  0E9E               	movlw	158
  1455  001260  6E06               	movwf	___flge@ff2^0,c
  1456  001262  0EEF               	movlw	239
  1457  001264  6E07               	movwf	(___flge@ff2+1)^0,c
  1458  001266  0EE7               	movlw	231
  1459  001268  6E08               	movwf	(___flge@ff2+2)^0,c
  1460  00126A  0E3E               	movlw	62
  1461  00126C  6E09               	movwf	(___flge@ff2+3)^0,c
  1462  00126E  ECBC  F00F         	call	___flge	;wreg free
  1463  001272  B0D8               	btfsc	status,0,c
  1464  001274  EF3E  F009         	goto	u2661
  1465  001278  EF40  F009         	goto	u2660
  1466  00127C                     u2661:
  1467  00127C  EF74  F009         	goto	l3003
  1468  001280                     u2660:
  1469  001280  0E73               	movlw	115
  1470  001282  6E02               	movwf	___flge@ff1^0,c
  1471  001284  0E68               	movlw	104
  1472  001286  6E03               	movwf	(___flge@ff1+1)^0,c
  1473  001288  0E91               	movlw	145
  1474  00128A  6E04               	movwf	(___flge@ff1+2)^0,c
  1475  00128C  0E3E               	movlw	62
  1476  00128E  6E05               	movwf	(___flge@ff1+3)^0,c
  1477  001290  C027  F006         	movff	stop_check@G_rel,___flge@ff2
  1478  001294  C028  F007         	movff	stop_check@G_rel+1,___flge@ff2+1
  1479  001298  C029  F008         	movff	stop_check@G_rel+2,___flge@ff2+2
  1480  00129C  C02A  F009         	movff	stop_check@G_rel+3,___flge@ff2+3
  1481  0012A0  ECBC  F00F         	call	___flge	;wreg free
  1482  0012A4  B0D8               	btfsc	status,0,c
  1483  0012A6  EF57  F009         	goto	u2671
  1484  0012AA  EF59  F009         	goto	u2670
  1485  0012AE                     u2671:
  1486  0012AE  EF74  F009         	goto	l3003
  1487  0012B2                     u2670:
  1488  0012B2  0E5E               	movlw	94
  1489  0012B4  6E02               	movwf	___flge@ff1^0,c
  1490  0012B6  0EBA               	movlw	186
  1491  0012B8  6E03               	movwf	(___flge@ff1+1)^0,c
  1492  0012BA  0E49               	movlw	73
  1493  0012BC  6E04               	movwf	(___flge@ff1+2)^0,c
  1494  0012BE  0E3E               	movlw	62
  1495  0012C0  6E05               	movwf	(___flge@ff1+3)^0,c
  1496  0012C2  C02B  F006         	movff	stop_check@B_rel,___flge@ff2
  1497  0012C6  C02C  F007         	movff	stop_check@B_rel+1,___flge@ff2+1
  1498  0012CA  C02D  F008         	movff	stop_check@B_rel+2,___flge@ff2+2
  1499  0012CE  C02E  F009         	movff	stop_check@B_rel+3,___flge@ff2+3
  1500  0012D2  ECBC  F00F         	call	___flge	;wreg free
  1501  0012D6  B0D8               	btfsc	status,0,c
  1502  0012D8  EF70  F009         	goto	u2681
  1503  0012DC  EF72  F009         	goto	u2680
  1504  0012E0                     u2681:
  1505  0012E0  EF74  F009         	goto	l3003
  1506  0012E4                     u2680:
  1507  0012E4                     
  1508                           ;color_card.c: 97:     } else if ((R_rel<0.459) && (G_rel>0.283) && (B_rel>0.196)) {
  1509  0012E4  EFC1  F009         	goto	l3013
  1510  0012E8                     l3003:
  1511  0012E8  C023  F002         	movff	stop_check@R_rel,___flge@ff1
  1512  0012EC  C024  F003         	movff	stop_check@R_rel+1,___flge@ff1+1
  1513  0012F0  C025  F004         	movff	stop_check@R_rel+2,___flge@ff1+2
  1514  0012F4  C026  F005         	movff	stop_check@R_rel+3,___flge@ff1+3
  1515  0012F8  0E0C               	movlw	12
  1516  0012FA  6E06               	movwf	___flge@ff2^0,c
  1517  0012FC  0E02               	movlw	2
  1518  0012FE  6E07               	movwf	(___flge@ff2+1)^0,c
  1519  001300  0EEB               	movlw	235
  1520  001302  6E08               	movwf	(___flge@ff2+2)^0,c
  1521  001304  0E3E               	movlw	62
  1522  001306  6E09               	movwf	(___flge@ff2+3)^0,c
  1523  001308  ECBC  F00F         	call	___flge	;wreg free
  1524  00130C  B0D8               	btfsc	status,0,c
  1525  00130E  EF8B  F009         	goto	u2691
  1526  001312  EF8D  F009         	goto	u2690
  1527  001316                     u2691:
  1528  001316  EFC1  F009         	goto	l3011
  1529  00131A                     u2690:
  1530  00131A  0E60               	movlw	96
  1531  00131C  6E02               	movwf	___flge@ff1^0,c
  1532  00131E  0EE5               	movlw	229
  1533  001320  6E03               	movwf	(___flge@ff1+1)^0,c
  1534  001322  0E90               	movlw	144
  1535  001324  6E04               	movwf	(___flge@ff1+2)^0,c
  1536  001326  0E3E               	movlw	62
  1537  001328  6E05               	movwf	(___flge@ff1+3)^0,c
  1538  00132A  C027  F006         	movff	stop_check@G_rel,___flge@ff2
  1539  00132E  C028  F007         	movff	stop_check@G_rel+1,___flge@ff2+1
  1540  001332  C029  F008         	movff	stop_check@G_rel+2,___flge@ff2+2
  1541  001336  C02A  F009         	movff	stop_check@G_rel+3,___flge@ff2+3
  1542  00133A  ECBC  F00F         	call	___flge	;wreg free
  1543  00133E  B0D8               	btfsc	status,0,c
  1544  001340  EFA4  F009         	goto	u2701
  1545  001344  EFA6  F009         	goto	u2700
  1546  001348                     u2701:
  1547  001348  EFC1  F009         	goto	l3011
  1548  00134C                     u2700:
  1549  00134C  0E39               	movlw	57
  1550  00134E  6E02               	movwf	___flge@ff1^0,c
  1551  001350  0EB4               	movlw	180
  1552  001352  6E03               	movwf	(___flge@ff1+1)^0,c
  1553  001354  0E48               	movlw	72
  1554  001356  6E04               	movwf	(___flge@ff1+2)^0,c
  1555  001358  0E3E               	movlw	62
  1556  00135A  6E05               	movwf	(___flge@ff1+3)^0,c
  1557  00135C  C02B  F006         	movff	stop_check@B_rel,___flge@ff2
  1558  001360  C02C  F007         	movff	stop_check@B_rel+1,___flge@ff2+1
  1559  001364  C02D  F008         	movff	stop_check@B_rel+2,___flge@ff2+2
  1560  001368  C02E  F009         	movff	stop_check@B_rel+3,___flge@ff2+3
  1561  00136C  ECBC  F00F         	call	___flge	;wreg free
  1562  001370  B0D8               	btfsc	status,0,c
  1563  001372  EFBD  F009         	goto	u2711
  1564  001376  EFBF  F009         	goto	u2710
  1565  00137A                     u2711:
  1566  00137A  EFC1  F009         	goto	l3011
  1567  00137E                     u2710:
  1568  00137E                     
  1569                           ;color_card.c: 101:     } else {
  1570  00137E  EFC1  F009         	goto	l3013
  1571  001382                     l3011:
  1572  001382                     l3013:
  1573                           
  1574                           ;color_card.c: 105:     return stop_pls = 0;
  1575  001382  0E00               	movlw	0
  1576  001384  6E1F               	movwf	stop_check@stop_pls^0,c
  1577  001386  0E00               	movlw	0
  1578  001388  6E20               	movwf	(stop_check@stop_pls+1)^0,c
  1579  00138A  0E00               	movlw	0
  1580  00138C  6E21               	movwf	(stop_check@stop_pls+2)^0,c
  1581  00138E  0E00               	movlw	0
  1582  001390  6E22               	movwf	(stop_check@stop_pls+3)^0,c
  1583  001392  C01F  F002         	movff	stop_check@stop_pls,___fltol@f1
  1584  001396  C020  F003         	movff	stop_check@stop_pls+1,___fltol@f1+1
  1585  00139A  C021  F004         	movff	stop_check@stop_pls+2,___fltol@f1+2
  1586  00139E  C022  F005         	movff	stop_check@stop_pls+3,___fltol@f1+3
  1587  0013A2  EC39  F00F         	call	___fltol	;wreg free
  1588  0013A6  5002               	movf	?___fltol^0,w,c
  1589  0013A8  0012               	return		;funcret
  1590  0013AA                     __end_of_stop_check:
  1591                           	callstack 0
  1592                           
  1593 ;; *************** function ___xxtofl *****************
  1594 ;; Defined at:
  1595 ;;		line 10 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/xxtofl.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  sign            1    wreg     unsigned char 
  1598 ;;  val             4    8[COMRAM] long 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  sign            1   16[COMRAM] unsigned char 
  1601 ;;  arg             4   18[COMRAM] unsigned long 
  1602 ;;  exp             1   17[COMRAM] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  4    8[COMRAM] unsigned char 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1613 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1614 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1615 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1616 ;;Total ram usage:       14 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; Hardware stack levels required when called: 2
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_stop_check
  1623 ;;		_read_card
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text2
  1628  00168E                     __ptext2:
  1629                           	callstack 0
  1630  00168E                     ___xxtofl:
  1631                           	callstack 27
  1632                           
  1633                           ;incstack = 0
  1634                           ;___xxtofl@sign stored from wreg
  1635  00168E  6E11               	movwf	___xxtofl@sign^0,c
  1636  001690  5011               	movf	___xxtofl@sign^0,w,c
  1637  001692  B4D8               	btfsc	status,2,c
  1638  001694  EF4E  F00B         	goto	u2351
  1639  001698  EF50  F00B         	goto	u2350
  1640  00169C                     u2351:
  1641  00169C  EF72  F00B         	goto	l1192
  1642  0016A0                     u2350:
  1643  0016A0  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  1644  0016A2  EF57  F00B         	goto	u2360
  1645  0016A6  EF55  F00B         	goto	u2361
  1646  0016AA                     u2361:
  1647  0016AA  EF72  F00B         	goto	l1192
  1648  0016AE                     u2360:
  1649  0016AE  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  1650  0016B2  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  1651  0016B6  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  1652  0016BA  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  1653  0016BE  1E0D               	comf	??___xxtofl^0,f,c
  1654  0016C0  1E0E               	comf	(??___xxtofl+1)^0,f,c
  1655  0016C2  1E0F               	comf	(??___xxtofl+2)^0,f,c
  1656  0016C4  1E10               	comf	(??___xxtofl+3)^0,f,c
  1657  0016C6  2A0D               	incf	??___xxtofl^0,f,c
  1658  0016C8  0E00               	movlw	0
  1659  0016CA  220E               	addwfc	(??___xxtofl+1)^0,f,c
  1660  0016CC  220F               	addwfc	(??___xxtofl+2)^0,f,c
  1661  0016CE  2210               	addwfc	(??___xxtofl+3)^0,f,c
  1662  0016D0  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  1663  0016D4  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  1664  0016D8  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  1665  0016DC  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  1666  0016E0  EF7A  F00B         	goto	l2785
  1667  0016E4                     l1192:
  1668  0016E4  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  1669  0016E8  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1670  0016EC  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1671  0016F0  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1672  0016F4                     l2785:
  1673  0016F4  5009               	movf	___xxtofl@val^0,w,c
  1674  0016F6  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  1675  0016F8  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  1676  0016FA  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  1677  0016FC  A4D8               	btfss	status,2,c
  1678  0016FE  EF83  F00B         	goto	u2371
  1679  001702  EF85  F00B         	goto	u2370
  1680  001706                     u2371:
  1681  001706  EF8F  F00B         	goto	l2791
  1682  00170A                     u2370:
  1683  00170A  0E00               	movlw	0
  1684  00170C  6E09               	movwf	?___xxtofl^0,c
  1685  00170E  0E00               	movlw	0
  1686  001710  6E0A               	movwf	(?___xxtofl+1)^0,c
  1687  001712  0E00               	movlw	0
  1688  001714  6E0B               	movwf	(?___xxtofl+2)^0,c
  1689  001716  0E00               	movlw	0
  1690  001718  6E0C               	movwf	(?___xxtofl+3)^0,c
  1691  00171A  EF20  F00C         	goto	l1195
  1692  00171E                     l2791:
  1693  00171E  0E96               	movlw	150
  1694  001720  6E12               	movwf	___xxtofl@exp^0,c
  1695  001722  EF99  F00B         	goto	l2795
  1696  001726                     l2793:
  1697  001726  2A12               	incf	___xxtofl@exp^0,f,c
  1698  001728  90D8               	bcf	status,0,c
  1699  00172A  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  1700  00172C  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  1701  00172E  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  1702  001730  3213               	rrcf	___xxtofl@arg^0,f,c
  1703  001732                     l2795:
  1704  001732  0E00               	movlw	0
  1705  001734  1413               	andwf	___xxtofl@arg^0,w,c
  1706  001736  6E0D               	movwf	??___xxtofl^0,c
  1707  001738  0E00               	movlw	0
  1708  00173A  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  1709  00173C  6E0E               	movwf	(??___xxtofl+1)^0,c
  1710  00173E  0E00               	movlw	0
  1711  001740  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  1712  001742  6E0F               	movwf	(??___xxtofl+2)^0,c
  1713  001744  0EFE               	movlw	254
  1714  001746  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  1715  001748  6E10               	movwf	(??___xxtofl+3)^0,c
  1716  00174A  500D               	movf	??___xxtofl^0,w,c
  1717  00174C  100E               	iorwf	(??___xxtofl+1)^0,w,c
  1718  00174E  100F               	iorwf	(??___xxtofl+2)^0,w,c
  1719  001750  1010               	iorwf	(??___xxtofl+3)^0,w,c
  1720  001752  A4D8               	btfss	status,2,c
  1721  001754  EFAE  F00B         	goto	u2381
  1722  001758  EFB0  F00B         	goto	u2380
  1723  00175C                     u2381:
  1724  00175C  EF93  F00B         	goto	l2793
  1725  001760                     u2380:
  1726  001760  EFBE  F00B         	goto	l1199
  1727  001764                     l2797:
  1728  001764  2A12               	incf	___xxtofl@exp^0,f,c
  1729  001766  0E01               	movlw	1
  1730  001768  2613               	addwf	___xxtofl@arg^0,f,c
  1731  00176A  0E00               	movlw	0
  1732  00176C  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  1733  00176E  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  1734  001770  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  1735  001772  90D8               	bcf	status,0,c
  1736  001774  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  1737  001776  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  1738  001778  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  1739  00177A  3213               	rrcf	___xxtofl@arg^0,f,c
  1740  00177C                     l1199:
  1741  00177C  0E00               	movlw	0
  1742  00177E  1413               	andwf	___xxtofl@arg^0,w,c
  1743  001780  6E0D               	movwf	??___xxtofl^0,c
  1744  001782  0E00               	movlw	0
  1745  001784  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  1746  001786  6E0E               	movwf	(??___xxtofl+1)^0,c
  1747  001788  0E00               	movlw	0
  1748  00178A  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  1749  00178C  6E0F               	movwf	(??___xxtofl+2)^0,c
  1750  00178E  0EFF               	movlw	255
  1751  001790  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  1752  001792  6E10               	movwf	(??___xxtofl+3)^0,c
  1753  001794  500D               	movf	??___xxtofl^0,w,c
  1754  001796  100E               	iorwf	(??___xxtofl+1)^0,w,c
  1755  001798  100F               	iorwf	(??___xxtofl+2)^0,w,c
  1756  00179A  1010               	iorwf	(??___xxtofl+3)^0,w,c
  1757  00179C  A4D8               	btfss	status,2,c
  1758  00179E  EFD3  F00B         	goto	u2391
  1759  0017A2  EFD5  F00B         	goto	u2390
  1760  0017A6                     u2391:
  1761  0017A6  EFB2  F00B         	goto	l2797
  1762  0017AA                     u2390:
  1763  0017AA  EFDD  F00B         	goto	l2805
  1764  0017AE                     l2803:
  1765  0017AE  0612               	decf	___xxtofl@exp^0,f,c
  1766  0017B0  90D8               	bcf	status,0,c
  1767  0017B2  3613               	rlcf	___xxtofl@arg^0,f,c
  1768  0017B4  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  1769  0017B6  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  1770  0017B8  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  1771  0017BA                     l2805:
  1772  0017BA  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  1773  0017BC  EFE2  F00B         	goto	u2401
  1774  0017C0  EFE4  F00B         	goto	u2400
  1775  0017C4                     u2401:
  1776  0017C4  EFEC  F00B         	goto	l1206
  1777  0017C8                     u2400:
  1778  0017C8  0E02               	movlw	2
  1779  0017CA  6012               	cpfslt	___xxtofl@exp^0,c
  1780  0017CC  EFEA  F00B         	goto	u2411
  1781  0017D0  EFEC  F00B         	goto	u2410
  1782  0017D4                     u2411:
  1783  0017D4  EFD7  F00B         	goto	l2803
  1784  0017D8                     u2410:
  1785  0017D8                     l1206:
  1786  0017D8  B012               	btfsc	___xxtofl@exp^0,0,c
  1787  0017DA  EFF1  F00B         	goto	u2421
  1788  0017DE  EFF3  F00B         	goto	u2420
  1789  0017E2                     u2421:
  1790  0017E2  EFF4  F00B         	goto	l2811
  1791  0017E6                     u2420:
  1792  0017E6  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  1793  0017E8                     l2811:
  1794  0017E8  90D8               	bcf	status,0,c
  1795  0017EA  3212               	rrcf	___xxtofl@exp^0,f,c
  1796  0017EC  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  1797  0017F0  6A0E               	clrf	(??___xxtofl+1)^0,c
  1798  0017F2  6A0F               	clrf	(??___xxtofl+2)^0,c
  1799  0017F4  6A10               	clrf	(??___xxtofl+3)^0,c
  1800  0017F6  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  1801  0017FA  6A0F               	clrf	(??___xxtofl+2)^0,c
  1802  0017FC  6A0E               	clrf	(??___xxtofl+1)^0,c
  1803  0017FE  6A0D               	clrf	??___xxtofl^0,c
  1804  001800  500D               	movf	??___xxtofl^0,w,c
  1805  001802  1213               	iorwf	___xxtofl@arg^0,f,c
  1806  001804  500E               	movf	(??___xxtofl+1)^0,w,c
  1807  001806  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  1808  001808  500F               	movf	(??___xxtofl+2)^0,w,c
  1809  00180A  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  1810  00180C  5010               	movf	(??___xxtofl+3)^0,w,c
  1811  00180E  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  1812  001810  5011               	movf	___xxtofl@sign^0,w,c
  1813  001812  B4D8               	btfsc	status,2,c
  1814  001814  EF0E  F00C         	goto	u2431
  1815  001818  EF10  F00C         	goto	u2430
  1816  00181C                     u2431:
  1817  00181C  EF18  F00C         	goto	l2821
  1818  001820                     u2430:
  1819  001820  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  1820  001822  EF17  F00C         	goto	u2440
  1821  001826  EF15  F00C         	goto	u2441
  1822  00182A                     u2441:
  1823  00182A  EF18  F00C         	goto	l2821
  1824  00182E                     u2440:
  1825  00182E  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  1826  001830                     l2821:
  1827  001830  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  1828  001834  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  1829  001838  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  1830  00183C  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  1831  001840                     l1195:
  1832  001840  0012               	return		;funcret
  1833  001842                     __end_of___xxtofl:
  1834                           	callstack 0
  1835                           
  1836 ;; *************** function ___lwdiv *****************
  1837 ;; Defined at:
  1838 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  dividend        2    1[COMRAM] unsigned int 
  1841 ;;  divisor         2    3[COMRAM] unsigned int 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  quotient        2    5[COMRAM] unsigned int 
  1844 ;;  counter         1    7[COMRAM] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  2    1[COMRAM] unsigned int 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1855 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;Total ram usage:        7 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 2
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_stop_check
  1865 ;;		_read_card
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text3
  1870  00220C                     __ptext3:
  1871                           	callstack 0
  1872  00220C                     ___lwdiv:
  1873                           	callstack 27
  1874  00220C  0E00               	movlw	0
  1875  00220E  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  1876  002210  0E00               	movlw	0
  1877  002212  6E06               	movwf	___lwdiv@quotient^0,c
  1878  002214  5004               	movf	___lwdiv@divisor^0,w,c
  1879  002216  1005               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1880  002218  B4D8               	btfsc	status,2,c
  1881  00221A  EF11  F011         	goto	u2321
  1882  00221E  EF13  F011         	goto	u2320
  1883  002222                     u2321:
  1884  002222  EF3B  F011         	goto	l1028
  1885  002226                     u2320:
  1886  002226  0E01               	movlw	1
  1887  002228  6E08               	movwf	___lwdiv@counter^0,c
  1888  00222A  EF1B  F011         	goto	l2765
  1889  00222E                     l2763:
  1890  00222E  90D8               	bcf	status,0,c
  1891  002230  3604               	rlcf	___lwdiv@divisor^0,f,c
  1892  002232  3605               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1893  002234  2A08               	incf	___lwdiv@counter^0,f,c
  1894  002236                     l2765:
  1895  002236  AE05               	btfss	(___lwdiv@divisor+1)^0,7,c
  1896  002238  EF20  F011         	goto	u2331
  1897  00223C  EF22  F011         	goto	u2330
  1898  002240                     u2331:
  1899  002240  EF17  F011         	goto	l2763
  1900  002244                     u2330:
  1901  002244                     l2767:
  1902  002244  90D8               	bcf	status,0,c
  1903  002246  3606               	rlcf	___lwdiv@quotient^0,f,c
  1904  002248  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1905  00224A  5004               	movf	___lwdiv@divisor^0,w,c
  1906  00224C  5C02               	subwf	___lwdiv@dividend^0,w,c
  1907  00224E  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  1908  002250  5803               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1909  002252  A0D8               	btfss	status,0,c
  1910  002254  EF2E  F011         	goto	u2341
  1911  002258  EF30  F011         	goto	u2340
  1912  00225C                     u2341:
  1913  00225C  EF35  F011         	goto	l2775
  1914  002260                     u2340:
  1915  002260  5004               	movf	___lwdiv@divisor^0,w,c
  1916  002262  5E02               	subwf	___lwdiv@dividend^0,f,c
  1917  002264  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  1918  002266  5A03               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1919  002268  8006               	bsf	___lwdiv@quotient^0,0,c
  1920  00226A                     l2775:
  1921  00226A  90D8               	bcf	status,0,c
  1922  00226C  3205               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1923  00226E  3204               	rrcf	___lwdiv@divisor^0,f,c
  1924  002270  2E08               	decfsz	___lwdiv@counter^0,f,c
  1925  002272  EF22  F011         	goto	l2767
  1926  002276                     l1028:
  1927  002276  C006  F002         	movff	___lwdiv@quotient,?___lwdiv
  1928  00227A  C007  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1929  00227E  0012               	return		;funcret
  1930  002280                     __end_of___lwdiv:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function ___fltol *****************
  1934 ;; Defined at:
  1935 ;;		line 43 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/fltol.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  f1              4    1[COMRAM] unsigned int 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  exp1            1   10[COMRAM] unsigned char 
  1940 ;;  sign1           1    9[COMRAM] unsigned char 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  4    1[COMRAM] long 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1951 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1952 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1953 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;Total ram usage:       10 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 2
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_stop_check
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text4
  1965  001E72                     __ptext4:
  1966                           	callstack 0
  1967  001E72                     ___fltol:
  1968                           	callstack 27
  1969  001E72  3404               	rlcf	(___fltol@f1+2)^0,w,c
  1970  001E74  3405               	rlcf	(___fltol@f1+3)^0,w,c
  1971  001E76  6E0B               	movwf	___fltol@exp1^0,c
  1972  001E78  500B               	movf	___fltol@exp1^0,w,c
  1973  001E7A  A4D8               	btfss	status,2,c
  1974  001E7C  EF42  F00F         	goto	u2251
  1975  001E80  EF44  F00F         	goto	u2250
  1976  001E84                     u2251:
  1977  001E84  EF4E  F00F         	goto	l2719
  1978  001E88                     u2250:
  1979  001E88                     l2715:
  1980  001E88  0E00               	movlw	0
  1981  001E8A  6E02               	movwf	?___fltol^0,c
  1982  001E8C  0E00               	movlw	0
  1983  001E8E  6E03               	movwf	(?___fltol+1)^0,c
  1984  001E90  0E00               	movlw	0
  1985  001E92  6E04               	movwf	(?___fltol+2)^0,c
  1986  001E94  0E00               	movlw	0
  1987  001E96  6E05               	movwf	(?___fltol+3)^0,c
  1988  001E98  EFBB  F00F         	goto	l834
  1989  001E9C                     l2719:
  1990  001E9C  C002  F006         	movff	___fltol@f1,??___fltol
  1991  001EA0  C003  F007         	movff	___fltol@f1+1,??___fltol+1
  1992  001EA4  C004  F008         	movff	___fltol@f1+2,??___fltol+2
  1993  001EA8  C005  F009         	movff	___fltol@f1+3,??___fltol+3
  1994  001EAC  0E20               	movlw	32
  1995  001EAE  EF5E  F00F         	goto	u2260
  1996  001EB2                     u2265:
  1997  001EB2  90D8               	bcf	status,0,c
  1998  001EB4  3209               	rrcf	(??___fltol+3)^0,f,c
  1999  001EB6  3208               	rrcf	(??___fltol+2)^0,f,c
  2000  001EB8  3207               	rrcf	(??___fltol+1)^0,f,c
  2001  001EBA  3206               	rrcf	??___fltol^0,f,c
  2002  001EBC                     u2260:
  2003  001EBC  2EE8               	decfsz	wreg,f,c
  2004  001EBE  EF59  F00F         	goto	u2265
  2005  001EC2  5006               	movf	??___fltol^0,w,c
  2006  001EC4  6E0A               	movwf	___fltol@sign1^0,c
  2007  001EC6  8E04               	bsf	(___fltol@f1+2)^0,7,c
  2008  001EC8  0EFF               	movlw	255
  2009  001ECA  1602               	andwf	___fltol@f1^0,f,c
  2010  001ECC  0EFF               	movlw	255
  2011  001ECE  1603               	andwf	(___fltol@f1+1)^0,f,c
  2012  001ED0  0EFF               	movlw	255
  2013  001ED2  1604               	andwf	(___fltol@f1+2)^0,f,c
  2014  001ED4  0E00               	movlw	0
  2015  001ED6  1605               	andwf	(___fltol@f1+3)^0,f,c
  2016  001ED8  0E96               	movlw	150
  2017  001EDA  5E0B               	subwf	___fltol@exp1^0,f,c
  2018  001EDC  BE0B               	btfsc	___fltol@exp1^0,7,c
  2019  001EDE  EF75  F00F         	goto	u2270
  2020  001EE2  EF73  F00F         	goto	u2271
  2021  001EE6                     u2271:
  2022  001EE6  EF8B  F00F         	goto	l2739
  2023  001EEA                     u2270:
  2024  001EEA  500B               	movf	___fltol@exp1^0,w,c
  2025  001EEC  0A80               	xorlw	128
  2026  001EEE  0F97               	addlw	151
  2027  001EF0  B0D8               	btfsc	status,0,c
  2028  001EF2  EF7D  F00F         	goto	u2281
  2029  001EF6  EF7F  F00F         	goto	u2280
  2030  001EFA                     u2281:
  2031  001EFA  EF81  F00F         	goto	l2735
  2032  001EFE                     u2280:
  2033  001EFE  EF44  F00F         	goto	l2715
  2034  001F02                     l2735:
  2035  001F02  90D8               	bcf	status,0,c
  2036  001F04  3205               	rrcf	(___fltol@f1+3)^0,f,c
  2037  001F06  3204               	rrcf	(___fltol@f1+2)^0,f,c
  2038  001F08  3203               	rrcf	(___fltol@f1+1)^0,f,c
  2039  001F0A  3202               	rrcf	___fltol@f1^0,f,c
  2040  001F0C  3E0B               	incfsz	___fltol@exp1^0,f,c
  2041  001F0E  EF81  F00F         	goto	l2735
  2042  001F12  EFA3  F00F         	goto	l2749
  2043  001F16                     l2739:
  2044  001F16  0E1F               	movlw	31
  2045  001F18  640B               	cpfsgt	___fltol@exp1^0,c
  2046  001F1A  EF91  F00F         	goto	u2291
  2047  001F1E  EF93  F00F         	goto	u2290
  2048  001F22                     u2291:
  2049  001F22  EF9B  F00F         	goto	l2747
  2050  001F26                     u2290:
  2051  001F26  EF44  F00F         	goto	l2715
  2052  001F2A                     l2745:
  2053  001F2A  90D8               	bcf	status,0,c
  2054  001F2C  3602               	rlcf	___fltol@f1^0,f,c
  2055  001F2E  3603               	rlcf	(___fltol@f1+1)^0,f,c
  2056  001F30  3604               	rlcf	(___fltol@f1+2)^0,f,c
  2057  001F32  3605               	rlcf	(___fltol@f1+3)^0,f,c
  2058  001F34  060B               	decf	___fltol@exp1^0,f,c
  2059  001F36                     l2747:
  2060  001F36  500B               	movf	___fltol@exp1^0,w,c
  2061  001F38  A4D8               	btfss	status,2,c
  2062  001F3A  EFA1  F00F         	goto	u2301
  2063  001F3E  EFA3  F00F         	goto	u2300
  2064  001F42                     u2301:
  2065  001F42  EF95  F00F         	goto	l2745
  2066  001F46                     u2300:
  2067  001F46                     l2749:
  2068  001F46  500A               	movf	___fltol@sign1^0,w,c
  2069  001F48  B4D8               	btfsc	status,2,c
  2070  001F4A  EFA9  F00F         	goto	u2311
  2071  001F4E  EFAB  F00F         	goto	u2310
  2072  001F52                     u2311:
  2073  001F52  EFB3  F00F         	goto	l2753
  2074  001F56                     u2310:
  2075  001F56  1E05               	comf	(___fltol@f1+3)^0,f,c
  2076  001F58  1E04               	comf	(___fltol@f1+2)^0,f,c
  2077  001F5A  1E03               	comf	(___fltol@f1+1)^0,f,c
  2078  001F5C  6C02               	negf	___fltol@f1^0,c
  2079  001F5E  0E00               	movlw	0
  2080  001F60  2203               	addwfc	(___fltol@f1+1)^0,f,c
  2081  001F62  2204               	addwfc	(___fltol@f1+2)^0,f,c
  2082  001F64  2205               	addwfc	(___fltol@f1+3)^0,f,c
  2083  001F66                     l2753:
  2084  001F66  C002  F002         	movff	___fltol@f1,?___fltol
  2085  001F6A  C003  F003         	movff	___fltol@f1+1,?___fltol+1
  2086  001F6E  C004  F004         	movff	___fltol@f1+2,?___fltol+2
  2087  001F72  C005  F005         	movff	___fltol@f1+3,?___fltol+3
  2088  001F76                     l834:
  2089  001F76  0012               	return		;funcret
  2090  001F78                     __end_of___fltol:
  2091                           	callstack 0
  2092                           
  2093 ;; *************** function ___flge *****************
  2094 ;; Defined at:
  2095 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  ff1             4    1[COMRAM] long 
  2098 ;;  ff2             4    5[COMRAM] long 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;		None               void
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2110 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;Total ram usage:       12 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 2
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_stop_check
  2121 ;;		_read_card
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text5
  2126  001F78                     __ptext5:
  2127                           	callstack 0
  2128  001F78                     ___flge:
  2129                           	callstack 27
  2130  001F78  0E00               	movlw	0
  2131  001F7A  1402               	andwf	___flge@ff1^0,w,c
  2132  001F7C  6E0A               	movwf	??___flge^0,c
  2133  001F7E  0E00               	movlw	0
  2134  001F80  1403               	andwf	(___flge@ff1+1)^0,w,c
  2135  001F82  6E0B               	movwf	(??___flge+1)^0,c
  2136  001F84  0E80               	movlw	128
  2137  001F86  1404               	andwf	(___flge@ff1+2)^0,w,c
  2138  001F88  6E0C               	movwf	(??___flge+2)^0,c
  2139  001F8A  0E7F               	movlw	127
  2140  001F8C  1405               	andwf	(___flge@ff1+3)^0,w,c
  2141  001F8E  6E0D               	movwf	(??___flge+3)^0,c
  2142  001F90  500A               	movf	??___flge^0,w,c
  2143  001F92  100B               	iorwf	(??___flge+1)^0,w,c
  2144  001F94  100C               	iorwf	(??___flge+2)^0,w,c
  2145  001F96  100D               	iorwf	(??___flge+3)^0,w,c
  2146  001F98  A4D8               	btfss	status,2,c
  2147  001F9A  EFD1  F00F         	goto	u2201
  2148  001F9E  EFD3  F00F         	goto	u2200
  2149  001FA2                     u2201:
  2150  001FA2  EFDB  F00F         	goto	l2695
  2151  001FA6                     u2200:
  2152  001FA6  0E00               	movlw	0
  2153  001FA8  6E02               	movwf	___flge@ff1^0,c
  2154  001FAA  0E00               	movlw	0
  2155  001FAC  6E03               	movwf	(___flge@ff1+1)^0,c
  2156  001FAE  0E00               	movlw	0
  2157  001FB0  6E04               	movwf	(___flge@ff1+2)^0,c
  2158  001FB2  0E00               	movlw	0
  2159  001FB4  6E05               	movwf	(___flge@ff1+3)^0,c
  2160  001FB6                     l2695:
  2161  001FB6  0E00               	movlw	0
  2162  001FB8  1406               	andwf	___flge@ff2^0,w,c
  2163  001FBA  6E0A               	movwf	??___flge^0,c
  2164  001FBC  0E00               	movlw	0
  2165  001FBE  1407               	andwf	(___flge@ff2+1)^0,w,c
  2166  001FC0  6E0B               	movwf	(??___flge+1)^0,c
  2167  001FC2  0E80               	movlw	128
  2168  001FC4  1408               	andwf	(___flge@ff2+2)^0,w,c
  2169  001FC6  6E0C               	movwf	(??___flge+2)^0,c
  2170  001FC8  0E7F               	movlw	127
  2171  001FCA  1409               	andwf	(___flge@ff2+3)^0,w,c
  2172  001FCC  6E0D               	movwf	(??___flge+3)^0,c
  2173  001FCE  500A               	movf	??___flge^0,w,c
  2174  001FD0  100B               	iorwf	(??___flge+1)^0,w,c
  2175  001FD2  100C               	iorwf	(??___flge+2)^0,w,c
  2176  001FD4  100D               	iorwf	(??___flge+3)^0,w,c
  2177  001FD6  A4D8               	btfss	status,2,c
  2178  001FD8  EFF0  F00F         	goto	u2211
  2179  001FDC  EFF2  F00F         	goto	u2210
  2180  001FE0                     u2211:
  2181  001FE0  EFFA  F00F         	goto	l2699
  2182  001FE4                     u2210:
  2183  001FE4  0E00               	movlw	0
  2184  001FE6  6E06               	movwf	___flge@ff2^0,c
  2185  001FE8  0E00               	movlw	0
  2186  001FEA  6E07               	movwf	(___flge@ff2+1)^0,c
  2187  001FEC  0E00               	movlw	0
  2188  001FEE  6E08               	movwf	(___flge@ff2+2)^0,c
  2189  001FF0  0E00               	movlw	0
  2190  001FF2  6E09               	movwf	(___flge@ff2+3)^0,c
  2191  001FF4                     l2699:
  2192  001FF4  AE05               	btfss	(___flge@ff1+3)^0,7,c
  2193  001FF6  EFFF  F00F         	goto	u2221
  2194  001FFA  EF01  F010         	goto	u2220
  2195  001FFE                     u2221:
  2196  001FFE  EF0A  F010         	goto	l2703
  2197  002002                     u2220:
  2198  002002  6C02               	negf	___flge@ff1^0,c
  2199  002004  1E03               	comf	(___flge@ff1+1)^0,f,c
  2200  002006  B0D8               	btfsc	status,0,c
  2201  002008  2A03               	incf	(___flge@ff1+1)^0,f,c
  2202  00200A  1E04               	comf	(___flge@ff1+2)^0,f,c
  2203  00200C  B0D8               	btfsc	status,0,c
  2204  00200E  2A04               	incf	(___flge@ff1+2)^0,f,c
  2205  002010  0E80               	movlw	128
  2206  002012  5605               	subfwb	(___flge@ff1+3)^0,f,c
  2207  002014                     l2703:
  2208  002014  AE09               	btfss	(___flge@ff2+3)^0,7,c
  2209  002016  EF0F  F010         	goto	u2231
  2210  00201A  EF11  F010         	goto	u2230
  2211  00201E                     u2231:
  2212  00201E  EF1A  F010         	goto	l802
  2213  002022                     u2230:
  2214  002022  6C06               	negf	___flge@ff2^0,c
  2215  002024  1E07               	comf	(___flge@ff2+1)^0,f,c
  2216  002026  B0D8               	btfsc	status,0,c
  2217  002028  2A07               	incf	(___flge@ff2+1)^0,f,c
  2218  00202A  1E08               	comf	(___flge@ff2+2)^0,f,c
  2219  00202C  B0D8               	btfsc	status,0,c
  2220  00202E  2A08               	incf	(___flge@ff2+2)^0,f,c
  2221  002030  0E80               	movlw	128
  2222  002032  5609               	subfwb	(___flge@ff2+3)^0,f,c
  2223  002034                     l802:
  2224  002034  0E00               	movlw	0
  2225  002036  1A02               	xorwf	___flge@ff1^0,f,c
  2226  002038  0E00               	movlw	0
  2227  00203A  1A03               	xorwf	(___flge@ff1+1)^0,f,c
  2228  00203C  0E00               	movlw	0
  2229  00203E  1A04               	xorwf	(___flge@ff1+2)^0,f,c
  2230  002040  0E80               	movlw	128
  2231  002042  1A05               	xorwf	(___flge@ff1+3)^0,f,c
  2232  002044  0E00               	movlw	0
  2233  002046  1A06               	xorwf	___flge@ff2^0,f,c
  2234  002048  0E00               	movlw	0
  2235  00204A  1A07               	xorwf	(___flge@ff2+1)^0,f,c
  2236  00204C  0E00               	movlw	0
  2237  00204E  1A08               	xorwf	(___flge@ff2+2)^0,f,c
  2238  002050  0E80               	movlw	128
  2239  002052  1A09               	xorwf	(___flge@ff2+3)^0,f,c
  2240  002054  5006               	movf	___flge@ff2^0,w,c
  2241  002056  5C02               	subwf	___flge@ff1^0,w,c
  2242  002058  5007               	movf	(___flge@ff2+1)^0,w,c
  2243  00205A  5803               	subwfb	(___flge@ff1+1)^0,w,c
  2244  00205C  5008               	movf	(___flge@ff2+2)^0,w,c
  2245  00205E  5804               	subwfb	(___flge@ff1+2)^0,w,c
  2246  002060  5009               	movf	(___flge@ff2+3)^0,w,c
  2247  002062  5805               	subwfb	(___flge@ff1+3)^0,w,c
  2248  002064  B0D8               	btfsc	status,0,c
  2249  002066  EF37  F010         	goto	u2241
  2250  00206A  EF39  F010         	goto	u2240
  2251  00206E                     u2241:
  2252  00206E  EF3C  F010         	goto	l2709
  2253  002072                     u2240:
  2254  002072  90D8               	bcf	status,0,c
  2255  002074  EF3D  F010         	goto	l807
  2256  002078                     l2709:
  2257  002078  80D8               	bsf	status,0,c
  2258  00207A                     l807:
  2259  00207A  0012               	return		;funcret
  2260  00207C                     __end_of___flge:
  2261                           	callstack 0
  2262                           
  2263 ;; *************** function _sprintf *****************
  2264 ;; Defined at:
  2265 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_sprintf.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2268 ;;		 -> main@buf(40), 
  2269 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2270 ;;		 -> STR_1(13), 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  f               6   14[BANK0 ] struct _IO_FILE
  2273 ;;  ap              2   12[BANK0 ] PTR void [1]
  2274 ;;		 -> ?_sprintf(2), 
  2275 ;;  ret             2    0        int 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  2    0[BANK0 ] int 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2285 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2288 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2289 ;;Total ram usage:       20 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 9
  2292 ;; This function calls:
  2293 ;;		_vfprintf
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text6
  2300  0022E2                     __ptext6:
  2301                           	callstack 0
  2302  0022E2                     _sprintf:
  2303                           	callstack 21
  2304  0022E2  0E64               	movlw	low (?_sprintf+4)
  2305  0022E4  0100               	movlb	0	; () banked
  2306  0022E6  6F6C               	movwf	sprintf@ap& (0+255),b
  2307  0022E8  0E00               	movlw	high (?_sprintf+4)
  2308  0022EA  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2309  0022EC  C060  F06E         	movff	sprintf@s,sprintf@f
  2310  0022F0  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2311  0022F4                     
  2312                           ; BSR set to: 0
  2313  0022F4  0E00               	movlw	0
  2314  0022F6  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2315  0022F8  0E00               	movlw	0
  2316  0022FA  6F70               	movwf	(sprintf@f+2)& (0+255),b
  2317  0022FC                     
  2318                           ; BSR set to: 0
  2319  0022FC  0E00               	movlw	0
  2320  0022FE  6F73               	movwf	(sprintf@f+5)& (0+255),b
  2321  002300  0E00               	movlw	0
  2322  002302  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2323  002304                     
  2324                           ; BSR set to: 0
  2325  002304  0E6E               	movlw	low sprintf@f
  2326  002306  6E51               	movwf	vfprintf@fp^0,c
  2327  002308  0E00               	movlw	high sprintf@f
  2328  00230A  6E52               	movwf	(vfprintf@fp+1)^0,c
  2329  00230C  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2330  002310  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2331  002314  0E6C               	movlw	low sprintf@ap
  2332  002316  6E55               	movwf	vfprintf@ap^0,c
  2333  002318  0E00               	movlw	high sprintf@ap
  2334  00231A  6E56               	movwf	(vfprintf@ap+1)^0,c
  2335  00231C  EC40  F011         	call	_vfprintf	;wreg free
  2336  002320  0100               	movlb	0	; () banked
  2337  002322  5170               	movf	(sprintf@f+2)& (0+255),w,b
  2338  002324  2560               	addwf	sprintf@s& (0+255),w,b
  2339  002326  6ED9               	movwf	fsr2l,c
  2340  002328  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2341  00232A  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2342  00232C  6EDA               	movwf	fsr2h,c
  2343  00232E  0E00               	movlw	0
  2344  002330  6EDF               	movwf	indf2,c
  2345  002332                     
  2346                           ; BSR set to: 0
  2347  002332  0012               	return		;funcret
  2348  002334                     __end_of_sprintf:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _vfprintf *****************
  2352 ;; Defined at:
  2353 ;;		line 1390 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2356 ;;		 -> sprintf@f(6), 
  2357 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2358 ;;		 -> STR_1(13), 
  2359 ;;  ap              2   84[COMRAM] PTR PTR void 
  2360 ;;		 -> sprintf@ap(2), 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2363 ;;		 -> STR_1(13), 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  2   80[COMRAM] int 
  2366 ;; Registers used:
  2367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2373 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2376 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2377 ;;Total ram usage:        8 bytes
  2378 ;; Hardware stack levels used: 1
  2379 ;; Hardware stack levels required when called: 8
  2380 ;; This function calls:
  2381 ;;		_vfpfcnvrt
  2382 ;; This function is called by:
  2383 ;;		_sprintf
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text7
  2388  002280                     __ptext7:
  2389                           	callstack 0
  2390  002280                     _vfprintf:
  2391                           	callstack 21
  2392  002280                     
  2393                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
  2394  002280  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2395  002284  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2396  002288                     
  2397                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  2398  002288  0E00               	movlw	0
  2399  00228A  0100               	movlb	0	; () banked
  2400  00228C  6FD7               	movwf	(_nout+1)& (0+255),b
  2401  00228E  0E00               	movlw	0
  2402  002290  6FD6               	movwf	_nout& (0+255),b
  2403                           
  2404                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  2405  002292  EF5E  F011         	goto	l2831
  2406  002296                     l2829:
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  2410  002296  C051  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  2411  00229A  C052  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2412  00229E  0E57               	movlw	low vfprintf@cfmt
  2413  0022A0  6E43               	movwf	vfpfcnvrt@fmt^0,c
  2414  0022A2  0E00               	movlw	high vfprintf@cfmt
  2415  0022A4  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2416  0022A6  C055  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  2417  0022AA  C056  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2418  0022AE  EC21  F00C         	call	_vfpfcnvrt	;wreg free
  2419  0022B2  5041               	movf	?_vfpfcnvrt^0,w,c
  2420  0022B4  0100               	movlb	0	; () banked
  2421  0022B6  27D6               	addwf	_nout& (0+255),f,b
  2422  0022B8  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
  2423  0022BA  23D7               	addwfc	(_nout+1)& (0+255),f,b
  2424  0022BC                     l2831:
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  2428  0022BC  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2429  0022C0  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2430  0022C4                     	if	0	;tblptru may be non-zero
  2431  0022C4                     	endif
  2432  0022C4                     	if	0	;tblptru may be non-zero
  2433  0022C4                     	endif
  2434  0022C4  0008               	tblrd		*
  2435  0022C6  50F5               	movf	tablat,w,c
  2436  0022C8  0900               	iorlw	0
  2437  0022CA  A4D8               	btfss	status,2,c
  2438  0022CC  EF6A  F011         	goto	u2451
  2439  0022D0  EF6C  F011         	goto	u2450
  2440  0022D4                     u2451:
  2441  0022D4  EF4B  F011         	goto	l2829
  2442  0022D8                     u2450:
  2443  0022D8                     
  2444                           ; BSR set to: 0
  2445                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
  2446  0022D8  C0D6  F051         	movff	_nout,?_vfprintf
  2447  0022DC  C0D7  F052         	movff	_nout+1,?_vfprintf+1
  2448  0022E0                     
  2449                           ; BSR set to: 0
  2450  0022E0  0012               	return		;funcret
  2451  0022E2                     __end_of_vfprintf:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function _vfpfcnvrt *****************
  2455 ;; Defined at:
  2456 ;;		line 692 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  2459 ;;		 -> sprintf@f(6), 
  2460 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  2461 ;;		 -> vfprintf@cfmt(2), 
  2462 ;;  ap              2   68[COMRAM] PTR PTR void 
  2463 ;;		 -> sprintf@ap(2), 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  ll              8   72[COMRAM] long long 
  2466 ;;  llu             8    0        unsigned long long 
  2467 ;;  f               4    0        unsigned long long 
  2468 ;;  vp              3    0        PTR void 
  2469 ;;  ct              3    0        unsigned char [3]
  2470 ;;  cp              3    0        PTR unsigned char 
  2471 ;;  i               2    0        int 
  2472 ;;  done            2    0        int 
  2473 ;;  c               1    0        unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  2   64[COMRAM] int 
  2476 ;; Registers used:
  2477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2483 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2484 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;Total ram usage:       16 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 7
  2490 ;; This function calls:
  2491 ;;		_dtoa
  2492 ;;		_fputc
  2493 ;; This function is called by:
  2494 ;;		_vfprintf
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text8
  2499  001842                     __ptext8:
  2500                           	callstack 0
  2501  001842                     _vfpfcnvrt:
  2502                           	callstack 21
  2503  001842                     
  2504                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.32/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.32/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  2505  001842  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2506  001846  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2507  00184A  CFDE FFF6          	movff	postinc2,tblptrl
  2508  00184E  CFDD FFF7          	movff	postdec2,tblptrh
  2509  001852                     	if	0	;tblptru may be non-zero
  2510  001852                     	endif
  2511  001852                     	if	0	;tblptru may be non-zero
  2512  001852                     	endif
  2513  001852  0008               	tblrd		*
  2514  001854  50F5               	movf	tablat,w,c
  2515  001856  0A25               	xorlw	37
  2516  001858  A4D8               	btfss	status,2,c
  2517  00185A  EF31  F00C         	goto	u2111
  2518  00185E  EF33  F00C         	goto	u2110
  2519  001862                     u2111:
  2520  001862  EFDF  F00C         	goto	l2623
  2521  001866                     u2110:
  2522  001866                     
  2523                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2524  001866  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2525  00186A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2526  00186E  2ADE               	incf	postinc2,f,c
  2527  001870  0E00               	movlw	0
  2528  001872  22DD               	addwfc	postdec2,f,c
  2529  001874                     
  2530                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  2531  001874  0E00               	movlw	0
  2532  001876  0100               	movlb	0	; () banked
  2533  001878  6FD9               	movwf	(_width+1)& (0+255),b
  2534  00187A  0E00               	movlw	0
  2535  00187C  6FD8               	movwf	_width& (0+255),b
  2536  00187E  C0D8  F0DC         	movff	_width,_flags
  2537  001882  C0D9  F0DD         	movff	_width+1,_flags+1
  2538  001886                     
  2539                           ; BSR set to: 0
  2540                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  2541  001886  69DA               	setf	_prec& (0+255),b
  2542  001888  69DB               	setf	(_prec+1)& (0+255),b
  2543  00188A                     
  2544                           ; BSR set to: 0
  2545                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  2546  00188A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2547  00188E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2548  001892  CFDE FFF6          	movff	postinc2,tblptrl
  2549  001896  CFDD FFF7          	movff	postdec2,tblptrh
  2550  00189A                     	if	0	;tblptru may be non-zero
  2551  00189A                     	endif
  2552  00189A                     	if	0	;tblptru may be non-zero
  2553  00189A                     	endif
  2554  00189A  0008               	tblrd		*
  2555  00189C  50F5               	movf	tablat,w,c
  2556  00189E  0A64               	xorlw	100
  2557  0018A0  B4D8               	btfsc	status,2,c
  2558  0018A2  EF55  F00C         	goto	u2121
  2559  0018A6  EF57  F00C         	goto	u2120
  2560  0018AA                     u2121:
  2561  0018AA  EF69  F00C         	goto	l2601
  2562  0018AE                     u2120:
  2563  0018AE                     
  2564                           ; BSR set to: 0
  2565  0018AE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2566  0018B2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2567  0018B6  CFDE FFF6          	movff	postinc2,tblptrl
  2568  0018BA  CFDD FFF7          	movff	postdec2,tblptrh
  2569  0018BE                     	if	0	;tblptru may be non-zero
  2570  0018BE                     	endif
  2571  0018BE                     	if	0	;tblptru may be non-zero
  2572  0018BE                     	endif
  2573  0018BE  0008               	tblrd		*
  2574  0018C0  50F5               	movf	tablat,w,c
  2575  0018C2  0A69               	xorlw	105
  2576  0018C4  A4D8               	btfss	status,2,c
  2577  0018C6  EF67  F00C         	goto	u2131
  2578  0018CA  EF69  F00C         	goto	u2130
  2579  0018CE                     u2131:
  2580  0018CE  EFA9  F00C         	goto	l2607
  2581  0018D2                     u2130:
  2582  0018D2                     l2601:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
  2586  0018D2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2587  0018D6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2588  0018DA  2ADE               	incf	postinc2,f,c
  2589  0018DC  0E00               	movlw	0
  2590  0018DE  22DD               	addwfc	postdec2,f,c
  2591                           
  2592                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2593  0018E0  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2594  0018E4  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2595  0018E8  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2596  0018EC  0E02               	movlw	2
  2597  0018EE  26DE               	addwf	postinc2,f,c
  2598  0018F0  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2599  0018F4  0E00               	movlw	0
  2600  0018F6  22DD               	addwfc	postdec2,f,c
  2601  0018F8  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2602  0018FC  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2603  001900  CFDE F049          	movff	postinc2,vfpfcnvrt@ll
  2604  001904  CFDD F04A          	movff	postdec2,vfpfcnvrt@ll+1
  2605  001908  0E00               	movlw	0
  2606  00190A  BE4A               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2607  00190C  0EFF               	movlw	-1
  2608  00190E  6E4B               	movwf	(vfpfcnvrt@ll+2)^0,c
  2609  001910  6E4C               	movwf	(vfpfcnvrt@ll+3)^0,c
  2610  001912  6E4D               	movwf	(vfpfcnvrt@ll+4)^0,c
  2611  001914  6E4E               	movwf	(vfpfcnvrt@ll+5)^0,c
  2612  001916  6E4F               	movwf	(vfpfcnvrt@ll+6)^0,c
  2613  001918  6E50               	movwf	(vfpfcnvrt@ll+7)^0,c
  2614  00191A                     
  2615                           ; BSR set to: 0
  2616                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
  2617  00191A  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  2618  00191E  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2619  001922  C049  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  2620  001926  C04A  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2621  00192A  C04B  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2622  00192E  C04C  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2623  001932  C04D  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2624  001936  C04E  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2625  00193A  C04F  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2626  00193E  C050  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2627  001942  ECD5  F009         	call	_dtoa	;wreg free
  2628  001946  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  2629  00194A  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2630  00194E  EFFA  F00C         	goto	l1280
  2631  001952                     l2607:
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
  2635  001952  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2636  001956  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2637  00195A  CFDE FFF6          	movff	postinc2,tblptrl
  2638  00195E  CFDD FFF7          	movff	postdec2,tblptrh
  2639  001962                     	if	0	;tblptru may be non-zero
  2640  001962                     	endif
  2641  001962                     	if	0	;tblptru may be non-zero
  2642  001962                     	endif
  2643  001962  0008               	tblrd		*
  2644  001964  50F5               	movf	tablat,w,c
  2645  001966  0A25               	xorlw	37
  2646  001968  A4D8               	btfss	status,2,c
  2647  00196A  EFB9  F00C         	goto	u2141
  2648  00196E  EFBB  F00C         	goto	u2140
  2649  001972                     u2141:
  2650  001972  EFD2  F00C         	goto	l2617
  2651  001976                     u2140:
  2652  001976                     
  2653                           ; BSR set to: 0
  2654                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
  2655  001976  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2656  00197A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2657  00197E  2ADE               	incf	postinc2,f,c
  2658  001980  0E00               	movlw	0
  2659  001982  22DD               	addwfc	postdec2,f,c
  2660  001984                     
  2661                           ; BSR set to: 0
  2662                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
  2663  001984  0E00               	movlw	0
  2664  001986  6E03               	movwf	(fputc@c+1)^0,c
  2665  001988  0E25               	movlw	37
  2666  00198A  6E02               	movwf	fputc@c^0,c
  2667  00198C  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2668  001990  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2669  001994  EC3E  F010         	call	_fputc	;wreg free
  2670  001998                     l2613:
  2671                           
  2672                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
  2673  001998  0E00               	movlw	0
  2674  00199A  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2675  00199C  0E01               	movlw	1
  2676  00199E  6E41               	movwf	?_vfpfcnvrt^0,c
  2677  0019A0  EFFA  F00C         	goto	l1280
  2678  0019A4                     l2617:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
  2682  0019A4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2683  0019A8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2684  0019AC  2ADE               	incf	postinc2,f,c
  2685  0019AE  0E00               	movlw	0
  2686  0019B0  22DD               	addwfc	postdec2,f,c
  2687  0019B2                     
  2688                           ; BSR set to: 0
  2689                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
  2690  0019B2  0E00               	movlw	0
  2691  0019B4  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2692  0019B6  0E00               	movlw	0
  2693  0019B8  6E41               	movwf	?_vfpfcnvrt^0,c
  2694  0019BA  EFFA  F00C         	goto	l1280
  2695  0019BE                     l2623:
  2696                           
  2697                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
  2698  0019BE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2699  0019C2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2700  0019C6  CFDE FFF6          	movff	postinc2,tblptrl
  2701  0019CA  CFDD FFF7          	movff	postdec2,tblptrh
  2702  0019CE                     	if	0	;tblptru may be non-zero
  2703  0019CE                     	endif
  2704  0019CE                     	if	0	;tblptru may be non-zero
  2705  0019CE                     	endif
  2706  0019CE  0008               	tblrd		*
  2707  0019D0  50F5               	movf	tablat,w,c
  2708  0019D2  6E02               	movwf	fputc@c^0,c
  2709  0019D4  6A03               	clrf	(fputc@c+1)^0,c
  2710  0019D6  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2711  0019DA  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2712  0019DE  EC3E  F010         	call	_fputc	;wreg free
  2713  0019E2                     
  2714                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  2715  0019E2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2716  0019E6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2717  0019EA  2ADE               	incf	postinc2,f,c
  2718  0019EC  0E00               	movlw	0
  2719  0019EE  22DD               	addwfc	postdec2,f,c
  2720  0019F0  EFCC  F00C         	goto	l2613
  2721  0019F4                     l1280:
  2722  0019F4  0012               	return		;funcret
  2723  0019F6                     __end_of_vfpfcnvrt:
  2724                           	callstack 0
  2725                           
  2726 ;; *************** function _dtoa *****************
  2727 ;; Defined at:
  2728 ;;		line 287 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2731 ;;		 -> sprintf@f(6), 
  2732 ;;  d               8   30[COMRAM] long long 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  n               8   54[COMRAM] long long 
  2735 ;;  i               2   62[COMRAM] int 
  2736 ;;  s               2   52[COMRAM] int 
  2737 ;;  w               2   50[COMRAM] int 
  2738 ;;  p               2   48[COMRAM] int 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  2   28[COMRAM] int 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2748 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;Total ram usage:       36 bytes
  2753 ;; Hardware stack levels used: 1
  2754 ;; Hardware stack levels required when called: 6
  2755 ;; This function calls:
  2756 ;;		___aodiv
  2757 ;;		___aomod
  2758 ;;		_abs
  2759 ;;		_pad
  2760 ;; This function is called by:
  2761 ;;		_vfpfcnvrt
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text9
  2766  0013AA                     __ptext9:
  2767                           	callstack 0
  2768  0013AA                     _dtoa:
  2769                           	callstack 21
  2770  0013AA                     
  2771                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
  2772  0013AA  C01F  F037         	movff	dtoa@d,dtoa@n
  2773  0013AE  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  2774  0013B2  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  2775  0013B6  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  2776  0013BA  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  2777  0013BE  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  2778  0013C2  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  2779  0013C6  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  2780  0013CA                     
  2781                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
  2782  0013CA  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  2783  0013CC  EFEA  F009         	goto	u1941
  2784  0013D0  EFED  F009         	goto	u1940
  2785  0013D4                     u1941:
  2786  0013D4  0E01               	movlw	1
  2787  0013D6  EFEE  F009         	goto	u1950
  2788  0013DA                     u1940:
  2789  0013DA  0E00               	movlw	0
  2790  0013DC                     u1950:
  2791  0013DC  6E35               	movwf	dtoa@s^0,c
  2792  0013DE  6A36               	clrf	(dtoa@s+1)^0,c
  2793                           
  2794                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  2795  0013E0  5035               	movf	dtoa@s^0,w,c
  2796  0013E2  1036               	iorwf	(dtoa@s+1)^0,w,c
  2797  0013E4  B4D8               	btfsc	status,2,c
  2798  0013E6  EFF7  F009         	goto	u1961
  2799  0013EA  EFF9  F009         	goto	u1960
  2800  0013EE                     u1961:
  2801  0013EE  EF09  F00A         	goto	l2503
  2802  0013F2                     u1960:
  2803  0013F2                     
  2804                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  2805  0013F2  1E3E               	comf	(dtoa@n+7)^0,f,c
  2806  0013F4  1E3D               	comf	(dtoa@n+6)^0,f,c
  2807  0013F6  1E3C               	comf	(dtoa@n+5)^0,f,c
  2808  0013F8  1E3B               	comf	(dtoa@n+4)^0,f,c
  2809  0013FA  1E3A               	comf	(dtoa@n+3)^0,f,c
  2810  0013FC  1E39               	comf	(dtoa@n+2)^0,f,c
  2811  0013FE  1E38               	comf	(dtoa@n+1)^0,f,c
  2812  001400  6C37               	negf	dtoa@n^0,c
  2813  001402  0E00               	movlw	0
  2814  001404  2238               	addwfc	(dtoa@n+1)^0,f,c
  2815  001406  2239               	addwfc	(dtoa@n+2)^0,f,c
  2816  001408  223A               	addwfc	(dtoa@n+3)^0,f,c
  2817  00140A  223B               	addwfc	(dtoa@n+4)^0,f,c
  2818  00140C  223C               	addwfc	(dtoa@n+5)^0,f,c
  2819  00140E  223D               	addwfc	(dtoa@n+6)^0,f,c
  2820  001410  223E               	addwfc	(dtoa@n+7)^0,f,c
  2821  001412                     l2503:
  2822                           
  2823                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
  2824  001412  0100               	movlb	0	; () banked
  2825  001414  BFDB               	btfsc	(_prec+1)& (0+255),7,b
  2826  001416  EF0F  F00A         	goto	u1971
  2827  00141A  EF11  F00A         	goto	u1970
  2828  00141E                     u1971:
  2829  00141E  EF12  F00A         	goto	l2507
  2830  001422                     u1970:
  2831  001422                     
  2832                           ; BSR set to: 0
  2833                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
  2834  001422  93DC               	bcf	_flags& (0+255),1,b
  2835  001424                     l2507:
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
  2839  001424  BFDB               	btfsc	(_prec+1)& (0+255),7,b
  2840  001426  EF1F  F00A         	goto	u1980
  2841  00142A  51DB               	movf	(_prec+1)& (0+255),w,b
  2842  00142C  E106               	bnz	u1981
  2843  00142E  05DA               	decf	_prec& (0+255),w,b
  2844  001430  B0D8               	btfsc	status,0,c
  2845  001432  EF1D  F00A         	goto	u1981
  2846  001436  EF1F  F00A         	goto	u1980
  2847  00143A                     u1981:
  2848  00143A  EF25  F00A         	goto	l1253
  2849  00143E                     u1980:
  2850  00143E                     
  2851                           ; BSR set to: 0
  2852  00143E  0E00               	movlw	0
  2853  001440  6E32               	movwf	(dtoa@p+1)^0,c
  2854  001442  0E01               	movlw	1
  2855  001444  6E31               	movwf	dtoa@p^0,c
  2856  001446  EF29  F00A         	goto	l1255
  2857  00144A                     l1253:
  2858                           
  2859                           ; BSR set to: 0
  2860  00144A  C0DA  F031         	movff	_prec,dtoa@p
  2861  00144E  C0DB  F032         	movff	_prec+1,dtoa@p+1
  2862  001452                     l1255:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 304:     w = width;
  2866  001452  C0D8  F033         	movff	_width,dtoa@w
  2867  001456  C0D9  F034         	movff	_width+1,dtoa@w+1
  2868  00145A                     
  2869                           ; BSR set to: 0
  2870                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
  2871  00145A  5035               	movf	dtoa@s^0,w,c
  2872  00145C  1036               	iorwf	(dtoa@s+1)^0,w,c
  2873  00145E  A4D8               	btfss	status,2,c
  2874  001460  EF34  F00A         	goto	u1991
  2875  001464  EF36  F00A         	goto	u1990
  2876  001468                     u1991:
  2877  001468  EF3D  F00A         	goto	l2515
  2878  00146C                     u1990:
  2879  00146C                     
  2880                           ; BSR set to: 0
  2881  00146C  A5DC               	btfss	_flags& (0+255),2,b
  2882  00146E  EF3B  F00A         	goto	u2001
  2883  001472  EF3D  F00A         	goto	u2000
  2884  001476                     u2001:
  2885  001476  EF40  F00A         	goto	l2517
  2886  00147A                     u2000:
  2887  00147A                     l2515:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 306:         --w;
  2891  00147A  0633               	decf	dtoa@w^0,f,c
  2892  00147C  A0D8               	btfss	status,0,c
  2893  00147E  0634               	decf	(dtoa@w+1)^0,f,c
  2894  001480                     l2517:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
  2898  001480  0E00               	movlw	0
  2899  001482  6E40               	movwf	(dtoa@i+1)^0,c
  2900  001484  0E1F               	movlw	31
  2901  001486  6E3F               	movwf	dtoa@i^0,c
  2902  001488                     
  2903                           ; BSR set to: 0
  2904                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
  2905  001488  0E00               	movlw	0
  2906  00148A  0101               	movlb	1	; () banked
  2907  00148C  6F5B               	movwf	(_dbuf+31)& (0+255),b
  2908                           
  2909                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2910  00148E  EFC5  F00A         	goto	l2531
  2911  001492                     l2521:
  2912                           
  2913                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 313:         --i;
  2914  001492  063F               	decf	dtoa@i^0,f,c
  2915  001494  A0D8               	btfss	status,0,c
  2916  001496  0640               	decf	(dtoa@i+1)^0,f,c
  2917  001498                     
  2918                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
  2919  001498  0E3C               	movlw	low _dbuf
  2920  00149A  243F               	addwf	dtoa@i^0,w,c
  2921  00149C  6ED9               	movwf	fsr2l,c
  2922  00149E  0E01               	movlw	high _dbuf
  2923  0014A0  2040               	addwfc	(dtoa@i+1)^0,w,c
  2924  0014A2  6EDA               	movwf	fsr2h,c
  2925  0014A4  C037  F002         	movff	dtoa@n,___aomod@dividend
  2926  0014A8  C038  F003         	movff	dtoa@n+1,___aomod@dividend+1
  2927  0014AC  C039  F004         	movff	dtoa@n+2,___aomod@dividend+2
  2928  0014B0  C03A  F005         	movff	dtoa@n+3,___aomod@dividend+3
  2929  0014B4  C03B  F006         	movff	dtoa@n+4,___aomod@dividend+4
  2930  0014B8  C03C  F007         	movff	dtoa@n+5,___aomod@dividend+5
  2931  0014BC  C03D  F008         	movff	dtoa@n+6,___aomod@dividend+6
  2932  0014C0  C03E  F009         	movff	dtoa@n+7,___aomod@dividend+7
  2933  0014C4  0E0A               	movlw	10
  2934  0014C6  6E0A               	movwf	___aomod@divisor^0,c
  2935  0014C8  0E00               	movlw	0
  2936  0014CA  6E0B               	movwf	(___aomod@divisor+1)^0,c
  2937  0014CC  0E00               	movlw	0
  2938  0014CE  6E0C               	movwf	(___aomod@divisor+2)^0,c
  2939  0014D0  0E00               	movlw	0
  2940  0014D2  6E0D               	movwf	(___aomod@divisor+3)^0,c
  2941  0014D4  0E00               	movlw	0
  2942  0014D6  6E0E               	movwf	(___aomod@divisor+4)^0,c
  2943  0014D8  0E00               	movlw	0
  2944  0014DA  6E0F               	movwf	(___aomod@divisor+5)^0,c
  2945  0014DC  0E00               	movlw	0
  2946  0014DE  6E10               	movwf	(___aomod@divisor+6)^0,c
  2947  0014E0  0E00               	movlw	0
  2948  0014E2  6E11               	movwf	(___aomod@divisor+7)^0,c
  2949  0014E4  EC87  F00E         	call	___aomod	;wreg free
  2950  0014E8  C002  F027         	movff	?___aomod,??_dtoa
  2951  0014EC  C003  F028         	movff	?___aomod+1,??_dtoa+1
  2952  0014F0  C004  F029         	movff	?___aomod+2,??_dtoa+2
  2953  0014F4  C005  F02A         	movff	?___aomod+3,??_dtoa+3
  2954  0014F8  C006  F02B         	movff	?___aomod+4,??_dtoa+4
  2955  0014FC  C007  F02C         	movff	?___aomod+5,??_dtoa+5
  2956  001500  C008  F02D         	movff	?___aomod+6,??_dtoa+6
  2957  001504  C009  F02E         	movff	?___aomod+7,??_dtoa+7
  2958  001508  C027  F014         	movff	??_dtoa,abs@a
  2959  00150C  C029  F015         	movff	??_dtoa+2,abs@a+1
  2960  001510  ECC7  F012         	call	_abs	;wreg free
  2961  001514  5014               	movf	?_abs^0,w,c
  2962  001516  0F30               	addlw	48
  2963  001518  6EDF               	movwf	indf2,c
  2964  00151A                     
  2965                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 315:         --p;
  2966  00151A  0631               	decf	dtoa@p^0,f,c
  2967  00151C  A0D8               	btfss	status,0,c
  2968  00151E  0632               	decf	(dtoa@p+1)^0,f,c
  2969  001520                     
  2970                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 316:         --w;
  2971  001520  0633               	decf	dtoa@w^0,f,c
  2972  001522  A0D8               	btfss	status,0,c
  2973  001524  0634               	decf	(dtoa@w+1)^0,f,c
  2974  001526                     
  2975                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
  2976  001526  C037  F002         	movff	dtoa@n,___aodiv@dividend
  2977  00152A  C038  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  2978  00152E  C039  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  2979  001532  C03A  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  2980  001536  C03B  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  2981  00153A  C03C  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  2982  00153E  C03D  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  2983  001542  C03E  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  2984  001546  0E0A               	movlw	10
  2985  001548  6E0A               	movwf	___aodiv@divisor^0,c
  2986  00154A  0E00               	movlw	0
  2987  00154C  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  2988  00154E  0E00               	movlw	0
  2989  001550  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  2990  001552  0E00               	movlw	0
  2991  001554  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  2992  001556  0E00               	movlw	0
  2993  001558  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  2994  00155A  0E00               	movlw	0
  2995  00155C  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  2996  00155E  0E00               	movlw	0
  2997  001560  6E10               	movwf	(___aodiv@divisor+6)^0,c
  2998  001562  0E00               	movlw	0
  2999  001564  6E11               	movwf	(___aodiv@divisor+7)^0,c
  3000  001566  ECC3  F00D         	call	___aodiv	;wreg free
  3001  00156A  C002  F037         	movff	?___aodiv,dtoa@n
  3002  00156E  C003  F038         	movff	?___aodiv+1,dtoa@n+1
  3003  001572  C004  F039         	movff	?___aodiv+2,dtoa@n+2
  3004  001576  C005  F03A         	movff	?___aodiv+3,dtoa@n+3
  3005  00157A  C006  F03B         	movff	?___aodiv+4,dtoa@n+4
  3006  00157E  C007  F03C         	movff	?___aodiv+5,dtoa@n+5
  3007  001582  C008  F03D         	movff	?___aodiv+6,dtoa@n+6
  3008  001586  C009  F03E         	movff	?___aodiv+7,dtoa@n+7
  3009  00158A                     l2531:
  3010                           
  3011                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3012  00158A  BE40               	btfsc	(dtoa@i+1)^0,7,c
  3013  00158C  EFD0  F00A         	goto	u2011
  3014  001590  5040               	movf	(dtoa@i+1)^0,w,c
  3015  001592  E108               	bnz	u2010
  3016  001594  043F               	decf	dtoa@i^0,w,c
  3017  001596  A0D8               	btfss	status,0,c
  3018  001598  EFD0  F00A         	goto	u2011
  3019  00159C  EFD2  F00A         	goto	u2010
  3020  0015A0                     u2011:
  3021  0015A0  EF03  F00B         	goto	l2541
  3022  0015A4                     u2010:
  3023  0015A4  5037               	movf	dtoa@n^0,w,c
  3024  0015A6  1038               	iorwf	(dtoa@n+1)^0,w,c
  3025  0015A8  1039               	iorwf	(dtoa@n+2)^0,w,c
  3026  0015AA  103A               	iorwf	(dtoa@n+3)^0,w,c
  3027  0015AC  103B               	iorwf	(dtoa@n+4)^0,w,c
  3028  0015AE  103C               	iorwf	(dtoa@n+5)^0,w,c
  3029  0015B0  103D               	iorwf	(dtoa@n+6)^0,w,c
  3030  0015B2  103E               	iorwf	(dtoa@n+7)^0,w,c
  3031  0015B4  A4D8               	btfss	status,2,c
  3032  0015B6  EFDF  F00A         	goto	u2021
  3033  0015BA  EFE1  F00A         	goto	u2020
  3034  0015BE                     u2021:
  3035  0015BE  EF49  F00A         	goto	l2521
  3036  0015C2                     u2020:
  3037  0015C2  BE32               	btfsc	(dtoa@p+1)^0,7,c
  3038  0015C4  EFEE  F00A         	goto	u2030
  3039  0015C8  5032               	movf	(dtoa@p+1)^0,w,c
  3040  0015CA  E106               	bnz	u2031
  3041  0015CC  0431               	decf	dtoa@p^0,w,c
  3042  0015CE  B0D8               	btfsc	status,0,c
  3043  0015D0  EFEC  F00A         	goto	u2031
  3044  0015D4  EFEE  F00A         	goto	u2030
  3045  0015D8                     u2031:
  3046  0015D8  EF49  F00A         	goto	l2521
  3047  0015DC                     u2030:
  3048  0015DC  BE34               	btfsc	(dtoa@w+1)^0,7,c
  3049  0015DE  EFF9  F00A         	goto	u2041
  3050  0015E2  5034               	movf	(dtoa@w+1)^0,w,c
  3051  0015E4  E108               	bnz	u2040
  3052  0015E6  0433               	decf	dtoa@w^0,w,c
  3053  0015E8  A0D8               	btfss	status,0,c
  3054  0015EA  EFF9  F00A         	goto	u2041
  3055  0015EE  EFFB  F00A         	goto	u2040
  3056  0015F2                     u2041:
  3057  0015F2  EF03  F00B         	goto	l2541
  3058  0015F6                     u2040:
  3059  0015F6  0100               	movlb	0	; () banked
  3060  0015F8  B3DC               	btfsc	_flags& (0+255),1,b
  3061  0015FA  EF01  F00B         	goto	u2051
  3062  0015FE  EF03  F00B         	goto	u2050
  3063  001602                     u2051:
  3064  001602  EF49  F00A         	goto	l2521
  3065  001606                     u2050:
  3066  001606                     l2541:
  3067                           
  3068                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
  3069  001606  5035               	movf	dtoa@s^0,w,c
  3070  001608  1036               	iorwf	(dtoa@s+1)^0,w,c
  3071  00160A  A4D8               	btfss	status,2,c
  3072  00160C  EF0A  F00B         	goto	u2061
  3073  001610  EF0C  F00B         	goto	u2060
  3074  001614                     u2061:
  3075  001614  EF14  F00B         	goto	l2545
  3076  001618                     u2060:
  3077  001618  0100               	movlb	0	; () banked
  3078  00161A  A5DC               	btfss	_flags& (0+255),2,b
  3079  00161C  EF12  F00B         	goto	u2071
  3080  001620  EF14  F00B         	goto	u2070
  3081  001624                     u2071:
  3082  001624  EF32  F00B         	goto	l2555
  3083  001628                     u2070:
  3084  001628                     l2545:
  3085                           
  3086                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 322:         --i;
  3087  001628  063F               	decf	dtoa@i^0,f,c
  3088  00162A  A0D8               	btfss	status,0,c
  3089  00162C  0640               	decf	(dtoa@i+1)^0,f,c
  3090  00162E                     
  3091                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
  3092  00162E  5035               	movf	dtoa@s^0,w,c
  3093  001630  1036               	iorwf	(dtoa@s+1)^0,w,c
  3094  001632  A4D8               	btfss	status,2,c
  3095  001634  EF1E  F00B         	goto	u2081
  3096  001638  EF20  F00B         	goto	u2080
  3097  00163C                     u2081:
  3098  00163C  EF26  F00B         	goto	l2551
  3099  001640                     u2080:
  3100  001640  0E00               	movlw	0
  3101  001642  6E30               	movwf	(_dtoa$2490+1)^0,c
  3102  001644  0E2B               	movlw	43
  3103  001646  6E2F               	movwf	_dtoa$2490^0,c
  3104  001648  EF2A  F00B         	goto	l2553
  3105  00164C                     l2551:
  3106  00164C  0E00               	movlw	0
  3107  00164E  6E30               	movwf	(_dtoa$2490+1)^0,c
  3108  001650  0E2D               	movlw	45
  3109  001652  6E2F               	movwf	_dtoa$2490^0,c
  3110  001654                     l2553:
  3111  001654  0E3C               	movlw	low _dbuf
  3112  001656  243F               	addwf	dtoa@i^0,w,c
  3113  001658  6ED9               	movwf	fsr2l,c
  3114  00165A  0E01               	movlw	high _dbuf
  3115  00165C  2040               	addwfc	(dtoa@i+1)^0,w,c
  3116  00165E  6EDA               	movwf	fsr2h,c
  3117  001660  C02F  FFDF         	movff	_dtoa$2490,indf2
  3118  001664                     l2555:
  3119                           
  3120                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
  3121  001664  C01D  F012         	movff	dtoa@fp,pad@fp
  3122  001668  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  3123  00166C  0E3C               	movlw	low _dbuf
  3124  00166E  243F               	addwf	dtoa@i^0,w,c
  3125  001670  6E14               	movwf	pad@buf^0,c
  3126  001672  0E01               	movlw	high _dbuf
  3127  001674  2040               	addwfc	(dtoa@i+1)^0,w,c
  3128  001676  6E15               	movwf	(pad@buf+1)^0,c
  3129  001678  C033  F016         	movff	dtoa@w,pad@p
  3130  00167C  C034  F017         	movff	dtoa@w+1,pad@p+1
  3131  001680  ECA3  F010         	call	_pad	;wreg free
  3132  001684  C012  F01D         	movff	?_pad,?_dtoa
  3133  001688  C013  F01E         	movff	?_pad+1,?_dtoa+1
  3134  00168C  0012               	return		;funcret
  3135  00168E                     __end_of_dtoa:
  3136                           	callstack 0
  3137                           
  3138 ;; *************** function _pad *****************
  3139 ;; Defined at:
  3140 ;;		line 72 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3143 ;;		 -> sprintf@f(6), 
  3144 ;;  buf             2   19[COMRAM] PTR unsigned char 
  3145 ;;		 -> dbuf(32), 
  3146 ;;  p               2   21[COMRAM] int 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  w               2   26[COMRAM] int 
  3149 ;;  i               2   24[COMRAM] int 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  2   17[COMRAM] int 
  3152 ;; Registers used:
  3153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3159 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;Total ram usage:       11 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 5
  3166 ;; This function calls:
  3167 ;;		_fputc
  3168 ;;		_fputs
  3169 ;;		_strlen
  3170 ;; This function is called by:
  3171 ;;		_dtoa
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text10
  3176  002146                     __ptext10:
  3177                           	callstack 0
  3178  002146                     _pad:
  3179                           	callstack 21
  3180  002146                     
  3181                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  3182  002146  0100               	movlb	0	; () banked
  3183  002148  A1DC               	btfss	_flags& (0+255),0,b
  3184  00214A  EFA9  F010         	goto	u1871
  3185  00214E  EFAB  F010         	goto	u1870
  3186  002152                     u1871:
  3187  002152  EFB5  F010         	goto	l2471
  3188  002156                     u1870:
  3189  002156                     
  3190                           ; BSR set to: 0
  3191                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  3192  002156  C014  F00B         	movff	pad@buf,fputs@s
  3193  00215A  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3194  00215E  C012  F00D         	movff	pad@fp,fputs@fp
  3195  002162  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3196  002166  EC62  F012         	call	_fputs	;wreg free
  3197  00216A                     l2471:
  3198                           
  3199                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  3200  00216A  BE17               	btfsc	(pad@p+1)^0,7,c
  3201  00216C  EFBA  F010         	goto	u1881
  3202  002170  EFBC  F010         	goto	u1880
  3203  002174                     u1881:
  3204  002174  EFC2  F010         	goto	l2475
  3205  002178                     u1880:
  3206  002178  C016  F01B         	movff	pad@p,pad@w
  3207  00217C  C017  F01C         	movff	pad@p+1,pad@w+1
  3208  002180  EFC6  F010         	goto	l1242
  3209  002184                     l2475:
  3210  002184  0E00               	movlw	0
  3211  002186  6E1C               	movwf	(pad@w+1)^0,c
  3212  002188  0E00               	movlw	0
  3213  00218A  6E1B               	movwf	pad@w^0,c
  3214  00218C                     l1242:
  3215                           
  3216                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3217  00218C  0E00               	movlw	0
  3218  00218E  6E1A               	movwf	(pad@i+1)^0,c
  3219  002190  0E00               	movlw	0
  3220  002192  6E19               	movwf	pad@i^0,c
  3221                           
  3222                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3223  002194  EFD8  F010         	goto	l2481
  3224  002198                     l2477:
  3225                           
  3226                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  3227  002198  0E00               	movlw	0
  3228  00219A  6E03               	movwf	(fputc@c+1)^0,c
  3229  00219C  0E20               	movlw	32
  3230  00219E  6E02               	movwf	fputc@c^0,c
  3231  0021A0  C012  F004         	movff	pad@fp,fputc@fp
  3232  0021A4  C013  F005         	movff	pad@fp+1,fputc@fp+1
  3233  0021A8  EC3E  F010         	call	_fputc	;wreg free
  3234  0021AC                     
  3235                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3236  0021AC  4A19               	infsnz	pad@i^0,f,c
  3237  0021AE  2A1A               	incf	(pad@i+1)^0,f,c
  3238  0021B0                     l2481:
  3239                           
  3240                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3241  0021B0  501B               	movf	pad@w^0,w,c
  3242  0021B2  5C19               	subwf	pad@i^0,w,c
  3243  0021B4  501A               	movf	(pad@i+1)^0,w,c
  3244  0021B6  0A80               	xorlw	128
  3245  0021B8  6E18               	movwf	??_pad^0,c
  3246  0021BA  501C               	movf	(pad@w+1)^0,w,c
  3247  0021BC  0A80               	xorlw	128
  3248  0021BE  5818               	subwfb	??_pad^0,w,c
  3249  0021C0  A0D8               	btfss	status,0,c
  3250  0021C2  EFE5  F010         	goto	u1891
  3251  0021C6  EFE7  F010         	goto	u1890
  3252  0021CA                     u1891:
  3253  0021CA  EFCC  F010         	goto	l2477
  3254  0021CE                     u1890:
  3255  0021CE                     
  3256                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  3257  0021CE  0100               	movlb	0	; () banked
  3258  0021D0  B1DC               	btfsc	_flags& (0+255),0,b
  3259  0021D2  EFED  F010         	goto	u1901
  3260  0021D6  EFEF  F010         	goto	u1900
  3261  0021DA                     u1901:
  3262  0021DA  EFF9  F010         	goto	l2485
  3263  0021DE                     u1900:
  3264  0021DE                     
  3265                           ; BSR set to: 0
  3266                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  3267  0021DE  C014  F00B         	movff	pad@buf,fputs@s
  3268  0021E2  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3269  0021E6  C012  F00D         	movff	pad@fp,fputs@fp
  3270  0021EA  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3271  0021EE  EC62  F012         	call	_fputs	;wreg free
  3272  0021F2                     l2485:
  3273                           
  3274                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
  3275  0021F2  C014  F002         	movff	pad@buf,strlen@s
  3276  0021F6  C015  F003         	movff	pad@buf+1,strlen@s+1
  3277  0021FA  EC07  F013         	call	_strlen	;wreg free
  3278  0021FE  501B               	movf	pad@w^0,w,c
  3279  002200  2402               	addwf	?_strlen^0,w,c
  3280  002202  6E12               	movwf	?_pad^0,c
  3281  002204  501C               	movf	(pad@w+1)^0,w,c
  3282  002206  2003               	addwfc	(?_strlen+1)^0,w,c
  3283  002208  6E13               	movwf	(?_pad+1)^0,c
  3284  00220A  0012               	return		;funcret
  3285  00220C                     __end_of_pad:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function _strlen *****************
  3289 ;; Defined at:
  3290 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  s               2    1[COMRAM] PTR const unsigned char 
  3293 ;;		 -> dbuf(32), 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  a               2    3[COMRAM] PTR const unsigned char 
  3296 ;;		 -> dbuf(32), 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  2    1[COMRAM] unsigned int 
  3299 ;; Registers used:
  3300 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3309 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3310 ;;Total ram usage:        4 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 2
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_pad
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text11
  3321  00260E                     __ptext11:
  3322                           	callstack 0
  3323  00260E                     _strlen:
  3324                           	callstack 23
  3325  00260E  C002  F004         	movff	strlen@s,strlen@a
  3326  002612  C003  F005         	movff	strlen@s+1,strlen@a+1
  3327  002616  EF0F  F013         	goto	l2381
  3328  00261A                     l2379:
  3329  00261A  4A02               	infsnz	strlen@s^0,f,c
  3330  00261C  2A03               	incf	(strlen@s+1)^0,f,c
  3331  00261E                     l2381:
  3332  00261E  C002  FFD9         	movff	strlen@s,fsr2l
  3333  002622  C003  FFDA         	movff	strlen@s+1,fsr2h
  3334  002626  50DF               	movf	indf2,w,c
  3335  002628  A4D8               	btfss	status,2,c
  3336  00262A  EF19  F013         	goto	u1731
  3337  00262E  EF1B  F013         	goto	u1730
  3338  002632                     u1731:
  3339  002632  EF0D  F013         	goto	l2379
  3340  002636                     u1730:
  3341  002636  5004               	movf	strlen@a^0,w,c
  3342  002638  5C02               	subwf	strlen@s^0,w,c
  3343  00263A  6E02               	movwf	?_strlen^0,c
  3344  00263C  5005               	movf	(strlen@a+1)^0,w,c
  3345  00263E  5803               	subwfb	(strlen@s+1)^0,w,c
  3346  002640  6E03               	movwf	(?_strlen+1)^0,c
  3347  002642  0012               	return		;funcret
  3348  002644                     __end_of_strlen:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function _fputs *****************
  3352 ;; Defined at:
  3353 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputs.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3356 ;;		 -> dbuf(32), 
  3357 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3358 ;;		 -> sprintf@f(6), 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  i               2   15[COMRAM] int 
  3361 ;;  c               1   14[COMRAM] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  2   10[COMRAM] int 
  3364 ;; Registers used:
  3365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;Total ram usage:        7 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 4
  3378 ;; This function calls:
  3379 ;;		_fputc
  3380 ;; This function is called by:
  3381 ;;		_pad
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text12
  3386  0024C4                     __ptext12:
  3387                           	callstack 0
  3388  0024C4                     _fputs:
  3389                           	callstack 21
  3390  0024C4  0E00               	movlw	0
  3391  0024C6  6E11               	movwf	(fputs@i+1)^0,c
  3392  0024C8  0E00               	movlw	0
  3393  0024CA  6E10               	movwf	fputs@i^0,c
  3394  0024CC  EF73  F012         	goto	l2375
  3395  0024D0                     l2371:
  3396  0024D0  C00F  F002         	movff	fputs@c,fputc@c
  3397  0024D4  6A03               	clrf	(fputc@c+1)^0,c
  3398  0024D6  C00D  F004         	movff	fputs@fp,fputc@fp
  3399  0024DA  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3400  0024DE  EC3E  F010         	call	_fputc	;wreg free
  3401  0024E2  4A10               	infsnz	fputs@i^0,f,c
  3402  0024E4  2A11               	incf	(fputs@i+1)^0,f,c
  3403  0024E6                     l2375:
  3404  0024E6  5010               	movf	fputs@i^0,w,c
  3405  0024E8  240B               	addwf	fputs@s^0,w,c
  3406  0024EA  6ED9               	movwf	fsr2l,c
  3407  0024EC  5011               	movf	(fputs@i+1)^0,w,c
  3408  0024EE  200C               	addwfc	(fputs@s+1)^0,w,c
  3409  0024F0  6EDA               	movwf	fsr2h,c
  3410  0024F2  50DF               	movf	indf2,w,c
  3411  0024F4  6E0F               	movwf	fputs@c^0,c
  3412  0024F6  500F               	movf	fputs@c^0,w,c
  3413  0024F8  A4D8               	btfss	status,2,c
  3414  0024FA  EF81  F012         	goto	u1721
  3415  0024FE  EF83  F012         	goto	u1720
  3416  002502                     u1721:
  3417  002502  EF68  F012         	goto	l2371
  3418  002506                     u1720:
  3419  002506  0012               	return		;funcret
  3420  002508                     __end_of_fputs:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _fputc *****************
  3424 ;; Defined at:
  3425 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputc.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  c               2    1[COMRAM] int 
  3428 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  3429 ;;		 -> sprintf@f(6), 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  2    1[COMRAM] int 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;Total ram usage:        9 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 3
  3448 ;; This function calls:
  3449 ;;		_putch
  3450 ;; This function is called by:
  3451 ;;		_pad
  3452 ;;		_vfpfcnvrt
  3453 ;;		_fputs
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text13
  3458  00207C                     __ptext13:
  3459                           	callstack 0
  3460  00207C                     _fputc:
  3461                           	callstack 24
  3462  00207C  5004               	movf	fputc@fp^0,w,c
  3463  00207E  1005               	iorwf	(fputc@fp+1)^0,w,c
  3464  002080  B4D8               	btfsc	status,2,c
  3465  002082  EF45  F010         	goto	u1681
  3466  002086  EF47  F010         	goto	u1680
  3467  00208A                     u1681:
  3468  00208A  EF50  F010         	goto	l2359
  3469  00208E                     u1680:
  3470  00208E  5004               	movf	fputc@fp^0,w,c
  3471  002090  1005               	iorwf	(fputc@fp+1)^0,w,c
  3472  002092  A4D8               	btfss	status,2,c
  3473  002094  EF4E  F010         	goto	u1691
  3474  002098  EF50  F010         	goto	u1690
  3475  00209C                     u1691:
  3476  00209C  EF55  F010         	goto	l2361
  3477  0020A0                     u1690:
  3478  0020A0                     l2359:
  3479  0020A0  5002               	movf	fputc@c^0,w,c
  3480  0020A2  EC1B  F014         	call	_putch
  3481  0020A6  EFA2  F010         	goto	l1306
  3482  0020AA                     l2361:
  3483  0020AA  EE20 F004          	lfsr	2,4
  3484  0020AE  5004               	movf	fputc@fp^0,w,c
  3485  0020B0  26D9               	addwf	fsr2l,f,c
  3486  0020B2  5005               	movf	(fputc@fp+1)^0,w,c
  3487  0020B4  22DA               	addwfc	fsr2h,f,c
  3488  0020B6  50DE               	movf	postinc2,w,c
  3489  0020B8  10DE               	iorwf	postinc2,w,c
  3490  0020BA  B4D8               	btfsc	status,2,c
  3491  0020BC  EF62  F010         	goto	u1701
  3492  0020C0  EF64  F010         	goto	u1700
  3493  0020C4                     u1701:
  3494  0020C4  EF7F  F010         	goto	l2365
  3495  0020C8                     u1700:
  3496  0020C8  EE20 F004          	lfsr	2,4
  3497  0020CC  5004               	movf	fputc@fp^0,w,c
  3498  0020CE  26D9               	addwf	fsr2l,f,c
  3499  0020D0  5005               	movf	(fputc@fp+1)^0,w,c
  3500  0020D2  22DA               	addwfc	fsr2h,f,c
  3501  0020D4  EE10 F002          	lfsr	1,2
  3502  0020D8  5004               	movf	fputc@fp^0,w,c
  3503  0020DA  26E1               	addwf	fsr1l,f,c
  3504  0020DC  5005               	movf	(fputc@fp+1)^0,w,c
  3505  0020DE  22E2               	addwfc	fsr1h,f,c
  3506  0020E0  50DE               	movf	postinc2,w,c
  3507  0020E2  5CE6               	subwf	postinc1,w,c
  3508  0020E4  50E6               	movf	postinc1,w,c
  3509  0020E6  0A80               	xorlw	128
  3510  0020E8  6E0A               	movwf	(??_fputc+4)^0,c
  3511  0020EA  50DE               	movf	postinc2,w,c
  3512  0020EC  0A80               	xorlw	128
  3513  0020EE  580A               	subwfb	(??_fputc+4)^0,w,c
  3514  0020F0  B0D8               	btfsc	status,0,c
  3515  0020F2  EF7D  F010         	goto	u1711
  3516  0020F6  EF7F  F010         	goto	u1710
  3517  0020FA                     u1711:
  3518  0020FA  EFA2  F010         	goto	l1306
  3519  0020FE                     u1710:
  3520  0020FE                     l2365:
  3521  0020FE  EE20 F002          	lfsr	2,2
  3522  002102  5004               	movf	fputc@fp^0,w,c
  3523  002104  26D9               	addwf	fsr2l,f,c
  3524  002106  5005               	movf	(fputc@fp+1)^0,w,c
  3525  002108  22DA               	addwfc	fsr2h,f,c
  3526  00210A  CFDE F006          	movff	postinc2,??_fputc
  3527  00210E  CFDD F007          	movff	postdec2,??_fputc+1
  3528  002112  C004  FFD9         	movff	fputc@fp,fsr2l
  3529  002116  C005  FFDA         	movff	fputc@fp+1,fsr2h
  3530  00211A  CFDE F008          	movff	postinc2,??_fputc+2
  3531  00211E  CFDD F009          	movff	postdec2,??_fputc+3
  3532  002122  5006               	movf	??_fputc^0,w,c
  3533  002124  2408               	addwf	(??_fputc+2)^0,w,c
  3534  002126  6ED9               	movwf	fsr2l,c
  3535  002128  5007               	movf	(??_fputc+1)^0,w,c
  3536  00212A  2009               	addwfc	(??_fputc+3)^0,w,c
  3537  00212C  6EDA               	movwf	fsr2h,c
  3538  00212E  C002  FFDF         	movff	fputc@c,indf2
  3539  002132  EE20 F002          	lfsr	2,2
  3540  002136  5004               	movf	fputc@fp^0,w,c
  3541  002138  26D9               	addwf	fsr2l,f,c
  3542  00213A  5005               	movf	(fputc@fp+1)^0,w,c
  3543  00213C  22DA               	addwfc	fsr2h,f,c
  3544  00213E  2ADE               	incf	postinc2,f,c
  3545  002140  0E00               	movlw	0
  3546  002142  22DD               	addwfc	postdec2,f,c
  3547  002144                     l1306:
  3548  002144  0012               	return		;funcret
  3549  002146                     __end_of_fputc:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _putch *****************
  3553 ;; Defined at:
  3554 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/putch.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  c               1    wreg     unsigned char 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  c               1    0[COMRAM] unsigned char 
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;Total ram usage:        0 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; Hardware stack levels required when called: 2
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_fputc
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text14
  3583  002836                     __ptext14:
  3584                           	callstack 0
  3585  002836                     _putch:
  3586                           	callstack 24
  3587  002836  0012               	return		;funcret
  3588  002838                     __end_of_putch:
  3589                           	callstack 0
  3590                           
  3591 ;; *************** function _abs *****************
  3592 ;; Defined at:
  3593 ;;		line 1 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  a               2   19[COMRAM] int 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  2   19[COMRAM] int 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3611 ;;Total ram usage:        4 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 2
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_dtoa
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text15
  3622  00258E                     __ptext15:
  3623                           	callstack 0
  3624  00258E                     _abs:
  3625                           	callstack 24
  3626  00258E  BE15               	btfsc	(abs@a+1)^0,7,c
  3627  002590  EFD4  F012         	goto	u1910
  3628  002594  5015               	movf	(abs@a+1)^0,w,c
  3629  002596  E106               	bnz	u1911
  3630  002598  0414               	decf	abs@a^0,w,c
  3631  00259A  B0D8               	btfsc	status,0,c
  3632  00259C  EFD2  F012         	goto	u1911
  3633  0025A0  EFD4  F012         	goto	u1910
  3634  0025A4                     u1911:
  3635  0025A4  EFE2  F012         	goto	l1291
  3636  0025A8                     u1910:
  3637  0025A8  C014  F016         	movff	abs@a,??_abs
  3638  0025AC  C015  F017         	movff	abs@a+1,??_abs+1
  3639  0025B0  1E16               	comf	??_abs^0,f,c
  3640  0025B2  1E17               	comf	(??_abs+1)^0,f,c
  3641  0025B4  4A16               	infsnz	??_abs^0,f,c
  3642  0025B6  2A17               	incf	(??_abs+1)^0,f,c
  3643  0025B8  C016  F014         	movff	??_abs,?_abs
  3644  0025BC  C017  F015         	movff	??_abs+1,?_abs+1
  3645  0025C0  EFE6  F012         	goto	l1294
  3646  0025C4                     l1291:
  3647  0025C4  C014  F014         	movff	abs@a,?_abs
  3648  0025C8  C015  F015         	movff	abs@a+1,?_abs+1
  3649  0025CC                     l1294:
  3650  0025CC  0012               	return		;funcret
  3651  0025CE                     __end_of_abs:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function ___aomod *****************
  3655 ;; Defined at:
  3656 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aomod.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  dividend        8    1[COMRAM] long long 
  3659 ;;  divisor         8    9[COMRAM] long long 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  sign            1   18[COMRAM] unsigned char 
  3662 ;;  counter         1   17[COMRAM] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  8    1[COMRAM] long long 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3672 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3675 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3676 ;;Total ram usage:       18 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 2
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_dtoa
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text16
  3687  001D0E                     __ptext16:
  3688                           	callstack 0
  3689  001D0E                     ___aomod:
  3690                           	callstack 24
  3691  001D0E  0E00               	movlw	0
  3692  001D10  6E13               	movwf	___aomod@sign^0,c
  3693  001D12  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  3694  001D14  EF90  F00E         	goto	u1810
  3695  001D18  EF8E  F00E         	goto	u1811
  3696  001D1C                     u1811:
  3697  001D1C  EFA2  F00E         	goto	l2439
  3698  001D20                     u1810:
  3699  001D20  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3700  001D22  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3701  001D24  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3702  001D26  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3703  001D28  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3704  001D2A  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3705  001D2C  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3706  001D2E  6C02               	negf	___aomod@dividend^0,c
  3707  001D30  0E00               	movlw	0
  3708  001D32  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3709  001D34  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3710  001D36  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3711  001D38  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3712  001D3A  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3713  001D3C  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3714  001D3E  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3715  001D40  0E01               	movlw	1
  3716  001D42  6E13               	movwf	___aomod@sign^0,c
  3717  001D44                     l2439:
  3718  001D44  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  3719  001D46  EFA9  F00E         	goto	u1820
  3720  001D4A  EFA7  F00E         	goto	u1821
  3721  001D4E                     u1821:
  3722  001D4E  EFB9  F00E         	goto	l2443
  3723  001D52                     u1820:
  3724  001D52  1E11               	comf	(___aomod@divisor+7)^0,f,c
  3725  001D54  1E10               	comf	(___aomod@divisor+6)^0,f,c
  3726  001D56  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  3727  001D58  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  3728  001D5A  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  3729  001D5C  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  3730  001D5E  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  3731  001D60  6C0A               	negf	___aomod@divisor^0,c
  3732  001D62  0E00               	movlw	0
  3733  001D64  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  3734  001D66  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  3735  001D68  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  3736  001D6A  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  3737  001D6C  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  3738  001D6E  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  3739  001D70  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  3740  001D72                     l2443:
  3741  001D72  500A               	movf	___aomod@divisor^0,w,c
  3742  001D74  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  3743  001D76  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  3744  001D78  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  3745  001D7A  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  3746  001D7C  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  3747  001D7E  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  3748  001D80  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  3749  001D82  B4D8               	btfsc	status,2,c
  3750  001D84  EFC6  F00E         	goto	u1831
  3751  001D88  EFC8  F00E         	goto	u1830
  3752  001D8C                     u1831:
  3753  001D8C  EF10  F00F         	goto	l2459
  3754  001D90                     u1830:
  3755  001D90  0E01               	movlw	1
  3756  001D92  6E12               	movwf	___aomod@counter^0,c
  3757  001D94  EFD6  F00E         	goto	l2449
  3758  001D98                     l2447:
  3759  001D98  90D8               	bcf	status,0,c
  3760  001D9A  360A               	rlcf	___aomod@divisor^0,f,c
  3761  001D9C  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  3762  001D9E  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  3763  001DA0  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  3764  001DA2  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  3765  001DA4  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  3766  001DA6  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  3767  001DA8  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  3768  001DAA  2A12               	incf	___aomod@counter^0,f,c
  3769  001DAC                     l2449:
  3770  001DAC  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  3771  001DAE  EFDB  F00E         	goto	u1841
  3772  001DB2  EFDD  F00E         	goto	u1840
  3773  001DB6                     u1841:
  3774  001DB6  EFCC  F00E         	goto	l2447
  3775  001DBA                     u1840:
  3776  001DBA                     l2451:
  3777  001DBA  500A               	movf	___aomod@divisor^0,w,c
  3778  001DBC  5C02               	subwf	___aomod@dividend^0,w,c
  3779  001DBE  500B               	movf	(___aomod@divisor+1)^0,w,c
  3780  001DC0  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  3781  001DC2  500C               	movf	(___aomod@divisor+2)^0,w,c
  3782  001DC4  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  3783  001DC6  500D               	movf	(___aomod@divisor+3)^0,w,c
  3784  001DC8  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  3785  001DCA  500E               	movf	(___aomod@divisor+4)^0,w,c
  3786  001DCC  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  3787  001DCE  500F               	movf	(___aomod@divisor+5)^0,w,c
  3788  001DD0  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  3789  001DD2  5010               	movf	(___aomod@divisor+6)^0,w,c
  3790  001DD4  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  3791  001DD6  5011               	movf	(___aomod@divisor+7)^0,w,c
  3792  001DD8  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  3793  001DDA  A0D8               	btfss	status,0,c
  3794  001DDC  EFF2  F00E         	goto	u1851
  3795  001DE0  EFF4  F00E         	goto	u1850
  3796  001DE4                     u1851:
  3797  001DE4  EF04  F00F         	goto	l2455
  3798  001DE8                     u1850:
  3799  001DE8  500A               	movf	___aomod@divisor^0,w,c
  3800  001DEA  5E02               	subwf	___aomod@dividend^0,f,c
  3801  001DEC  500B               	movf	(___aomod@divisor+1)^0,w,c
  3802  001DEE  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  3803  001DF0  500C               	movf	(___aomod@divisor+2)^0,w,c
  3804  001DF2  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  3805  001DF4  500D               	movf	(___aomod@divisor+3)^0,w,c
  3806  001DF6  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  3807  001DF8  500E               	movf	(___aomod@divisor+4)^0,w,c
  3808  001DFA  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  3809  001DFC  500F               	movf	(___aomod@divisor+5)^0,w,c
  3810  001DFE  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  3811  001E00  5010               	movf	(___aomod@divisor+6)^0,w,c
  3812  001E02  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  3813  001E04  5011               	movf	(___aomod@divisor+7)^0,w,c
  3814  001E06  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  3815  001E08                     l2455:
  3816  001E08  90D8               	bcf	status,0,c
  3817  001E0A  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  3818  001E0C  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  3819  001E0E  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  3820  001E10  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  3821  001E12  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  3822  001E14  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  3823  001E16  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  3824  001E18  320A               	rrcf	___aomod@divisor^0,f,c
  3825  001E1A  2E12               	decfsz	___aomod@counter^0,f,c
  3826  001E1C  EFDD  F00E         	goto	l2451
  3827  001E20                     l2459:
  3828  001E20  5013               	movf	___aomod@sign^0,w,c
  3829  001E22  B4D8               	btfsc	status,2,c
  3830  001E24  EF16  F00F         	goto	u1861
  3831  001E28  EF18  F00F         	goto	u1860
  3832  001E2C                     u1861:
  3833  001E2C  EF28  F00F         	goto	l2463
  3834  001E30                     u1860:
  3835  001E30  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3836  001E32  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3837  001E34  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3838  001E36  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3839  001E38  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3840  001E3A  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3841  001E3C  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3842  001E3E  6C02               	negf	___aomod@dividend^0,c
  3843  001E40  0E00               	movlw	0
  3844  001E42  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3845  001E44  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3846  001E46  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3847  001E48  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3848  001E4A  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3849  001E4C  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3850  001E4E  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3851  001E50                     l2463:
  3852  001E50  C002  F002         	movff	___aomod@dividend,?___aomod
  3853  001E54  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  3854  001E58  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  3855  001E5C  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  3856  001E60  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  3857  001E64  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  3858  001E68  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  3859  001E6C  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  3860  001E70  0012               	return		;funcret
  3861  001E72                     __end_of___aomod:
  3862                           	callstack 0
  3863                           
  3864 ;; *************** function ___aodiv *****************
  3865 ;; Defined at:
  3866 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aodiv.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  dividend        8    1[COMRAM] long long 
  3869 ;;  divisor         8    9[COMRAM] long long 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  quotient        8   19[COMRAM] long long 
  3872 ;;  sign            1   18[COMRAM] unsigned char 
  3873 ;;  counter         1   17[COMRAM] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  8    1[COMRAM] long long 
  3876 ;; Registers used:
  3877 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3883 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;Total ram usage:       26 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 2
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_dtoa
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text17
  3898  001B86                     __ptext17:
  3899                           	callstack 0
  3900  001B86                     ___aodiv:
  3901                           	callstack 24
  3902  001B86  0E00               	movlw	0
  3903  001B88  6E13               	movwf	___aodiv@sign^0,c
  3904  001B8A  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  3905  001B8C  EFCC  F00D         	goto	u1740
  3906  001B90  EFCA  F00D         	goto	u1741
  3907  001B94                     u1741:
  3908  001B94  EFDE  F00D         	goto	l2395
  3909  001B98                     u1740:
  3910  001B98  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  3911  001B9A  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  3912  001B9C  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  3913  001B9E  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  3914  001BA0  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  3915  001BA2  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  3916  001BA4  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  3917  001BA6  6C0A               	negf	___aodiv@divisor^0,c
  3918  001BA8  0E00               	movlw	0
  3919  001BAA  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  3920  001BAC  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  3921  001BAE  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  3922  001BB0  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  3923  001BB2  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  3924  001BB4  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  3925  001BB6  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  3926  001BB8  0E01               	movlw	1
  3927  001BBA  6E13               	movwf	___aodiv@sign^0,c
  3928  001BBC                     l2395:
  3929  001BBC  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  3930  001BBE  EFE5  F00D         	goto	u1750
  3931  001BC2  EFE3  F00D         	goto	u1751
  3932  001BC6                     u1751:
  3933  001BC6  EFF7  F00D         	goto	l2401
  3934  001BCA                     u1750:
  3935  001BCA  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  3936  001BCC  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  3937  001BCE  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  3938  001BD0  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  3939  001BD2  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  3940  001BD4  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  3941  001BD6  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  3942  001BD8  6C02               	negf	___aodiv@dividend^0,c
  3943  001BDA  0E00               	movlw	0
  3944  001BDC  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  3945  001BDE  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  3946  001BE0  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  3947  001BE2  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  3948  001BE4  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  3949  001BE6  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  3950  001BE8  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  3951  001BEA  0E01               	movlw	1
  3952  001BEC  1A13               	xorwf	___aodiv@sign^0,f,c
  3953  001BEE                     l2401:
  3954  001BEE  EE20  F014         	lfsr	2,___aodiv@quotient
  3955  001BF2  0E07               	movlw	7
  3956  001BF4                     u1761:
  3957  001BF4  6ADE               	clrf	postinc2,c
  3958  001BF6  06E8               	decf	wreg,f,c
  3959  001BF8  E2FD               	bc	u1761
  3960  001BFA  500A               	movf	___aodiv@divisor^0,w,c
  3961  001BFC  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  3962  001BFE  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  3963  001C00  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  3964  001C02  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  3965  001C04  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  3966  001C06  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  3967  001C08  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  3968  001C0A  B4D8               	btfsc	status,2,c
  3969  001C0C  EF0A  F00E         	goto	u1771
  3970  001C10  EF0C  F00E         	goto	u1770
  3971  001C14                     u1771:
  3972  001C14  EF5E  F00E         	goto	l2423
  3973  001C18                     u1770:
  3974  001C18  0E01               	movlw	1
  3975  001C1A  6E12               	movwf	___aodiv@counter^0,c
  3976  001C1C  EF1A  F00E         	goto	l2409
  3977  001C20                     l2407:
  3978  001C20  90D8               	bcf	status,0,c
  3979  001C22  360A               	rlcf	___aodiv@divisor^0,f,c
  3980  001C24  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  3981  001C26  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  3982  001C28  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  3983  001C2A  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  3984  001C2C  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  3985  001C2E  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  3986  001C30  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  3987  001C32  2A12               	incf	___aodiv@counter^0,f,c
  3988  001C34                     l2409:
  3989  001C34  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  3990  001C36  EF1F  F00E         	goto	u1781
  3991  001C3A  EF21  F00E         	goto	u1780
  3992  001C3E                     u1781:
  3993  001C3E  EF10  F00E         	goto	l2407
  3994  001C42                     u1780:
  3995  001C42                     l2411:
  3996  001C42  90D8               	bcf	status,0,c
  3997  001C44  3614               	rlcf	___aodiv@quotient^0,f,c
  3998  001C46  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  3999  001C48  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  4000  001C4A  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  4001  001C4C  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  4002  001C4E  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  4003  001C50  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  4004  001C52  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  4005  001C54  500A               	movf	___aodiv@divisor^0,w,c
  4006  001C56  5C02               	subwf	___aodiv@dividend^0,w,c
  4007  001C58  500B               	movf	(___aodiv@divisor+1)^0,w,c
  4008  001C5A  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  4009  001C5C  500C               	movf	(___aodiv@divisor+2)^0,w,c
  4010  001C5E  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  4011  001C60  500D               	movf	(___aodiv@divisor+3)^0,w,c
  4012  001C62  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  4013  001C64  500E               	movf	(___aodiv@divisor+4)^0,w,c
  4014  001C66  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  4015  001C68  500F               	movf	(___aodiv@divisor+5)^0,w,c
  4016  001C6A  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  4017  001C6C  5010               	movf	(___aodiv@divisor+6)^0,w,c
  4018  001C6E  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  4019  001C70  5011               	movf	(___aodiv@divisor+7)^0,w,c
  4020  001C72  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  4021  001C74  A0D8               	btfss	status,0,c
  4022  001C76  EF3F  F00E         	goto	u1791
  4023  001C7A  EF41  F00E         	goto	u1790
  4024  001C7E                     u1791:
  4025  001C7E  EF52  F00E         	goto	l2419
  4026  001C82                     u1790:
  4027  001C82  500A               	movf	___aodiv@divisor^0,w,c
  4028  001C84  5E02               	subwf	___aodiv@dividend^0,f,c
  4029  001C86  500B               	movf	(___aodiv@divisor+1)^0,w,c
  4030  001C88  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  4031  001C8A  500C               	movf	(___aodiv@divisor+2)^0,w,c
  4032  001C8C  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  4033  001C8E  500D               	movf	(___aodiv@divisor+3)^0,w,c
  4034  001C90  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  4035  001C92  500E               	movf	(___aodiv@divisor+4)^0,w,c
  4036  001C94  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  4037  001C96  500F               	movf	(___aodiv@divisor+5)^0,w,c
  4038  001C98  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  4039  001C9A  5010               	movf	(___aodiv@divisor+6)^0,w,c
  4040  001C9C  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  4041  001C9E  5011               	movf	(___aodiv@divisor+7)^0,w,c
  4042  001CA0  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  4043  001CA2  8014               	bsf	___aodiv@quotient^0,0,c
  4044  001CA4                     l2419:
  4045  001CA4  90D8               	bcf	status,0,c
  4046  001CA6  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  4047  001CA8  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  4048  001CAA  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  4049  001CAC  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  4050  001CAE  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  4051  001CB0  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  4052  001CB2  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  4053  001CB4  320A               	rrcf	___aodiv@divisor^0,f,c
  4054  001CB6  2E12               	decfsz	___aodiv@counter^0,f,c
  4055  001CB8  EF21  F00E         	goto	l2411
  4056  001CBC                     l2423:
  4057  001CBC  5013               	movf	___aodiv@sign^0,w,c
  4058  001CBE  B4D8               	btfsc	status,2,c
  4059  001CC0  EF64  F00E         	goto	u1801
  4060  001CC4  EF66  F00E         	goto	u1800
  4061  001CC8                     u1801:
  4062  001CC8  EF76  F00E         	goto	l2427
  4063  001CCC                     u1800:
  4064  001CCC  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  4065  001CCE  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  4066  001CD0  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  4067  001CD2  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  4068  001CD4  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  4069  001CD6  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  4070  001CD8  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  4071  001CDA  6C14               	negf	___aodiv@quotient^0,c
  4072  001CDC  0E00               	movlw	0
  4073  001CDE  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  4074  001CE0  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  4075  001CE2  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  4076  001CE4  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  4077  001CE6  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  4078  001CE8  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  4079  001CEA  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  4080  001CEC                     l2427:
  4081  001CEC  C014  F002         	movff	___aodiv@quotient,?___aodiv
  4082  001CF0  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  4083  001CF4  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  4084  001CF8  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  4085  001CFC  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  4086  001D00  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  4087  001D04  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  4088  001D08  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  4089  001D0C  0012               	return		;funcret
  4090  001D0E                     __end_of___aodiv:
  4091                           	callstack 0
  4092                           
  4093 ;; *************** function _sendStringSerial4 *****************
  4094 ;; Defined at:
  4095 ;;		line 46 in file "serial.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  string          2    2[COMRAM] PTR unsigned char 
  4098 ;;		 -> main@buf(40), 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;		None
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4114 ;;Total ram usage:        2 bytes
  4115 ;; Hardware stack levels used: 1
  4116 ;; Hardware stack levels required when called: 3
  4117 ;; This function calls:
  4118 ;;		_sendCharSerial4
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text18
  4125  002676                     __ptext18:
  4126                           	callstack 0
  4127  002676                     _sendStringSerial4:
  4128                           	callstack 27
  4129  002676                     
  4130                           ;serial.c: 48:     while (*string != 0) {
  4131  002676  EF46  F013         	goto	l2941
  4132  00267A                     l2937:
  4133                           
  4134                           ;serial.c: 49:         sendCharSerial4(*string++);
  4135  00267A  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  4136  00267E  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4137  002682  50DF               	movf	indf2,w,c
  4138  002684  ECDD  F013         	call	_sendCharSerial4
  4139  002688  4A03               	infsnz	sendStringSerial4@string^0,f,c
  4140  00268A  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  4141  00268C                     l2941:
  4142                           
  4143                           ;serial.c: 48:     while (*string != 0) {
  4144  00268C  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  4145  002690  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4146  002694  50DF               	movf	indf2,w,c
  4147  002696  A4D8               	btfss	status,2,c
  4148  002698  EF50  F013         	goto	u2471
  4149  00269C  EF52  F013         	goto	u2470
  4150  0026A0                     u2471:
  4151  0026A0  EF3D  F013         	goto	l2937
  4152  0026A4                     u2470:
  4153  0026A4  0012               	return		;funcret
  4154  0026A6                     __end_of_sendStringSerial4:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _sendCharSerial4 *****************
  4158 ;; Defined at:
  4159 ;;		line 37 in file "serial.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  charToSend      1    wreg     unsigned char 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  charToSend      1    1[COMRAM] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;Total ram usage:        1 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 2
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_sendStringSerial4
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text19
  4188  0027BA                     __ptext19:
  4189                           	callstack 0
  4190  0027BA                     _sendCharSerial4:
  4191                           	callstack 27
  4192                           
  4193                           ;incstack = 0
  4194                           ;sendCharSerial4@charToSend stored from wreg
  4195  0027BA  6E02               	movwf	sendCharSerial4@charToSend^0,c
  4196  0027BC                     l388:
  4197  0027BC  010E               	movlb	14	; () banked
  4198  0027BE  A537               	btfss	55,2,b	;volatile
  4199  0027C0  EFE4  F013         	goto	u2191
  4200  0027C4  EFE6  F013         	goto	u2190
  4201  0027C8                     u2191:
  4202  0027C8  EFDE  F013         	goto	l388
  4203  0027CC                     u2190:
  4204  0027CC                     
  4205                           ; BSR set to: 14
  4206                           ;serial.c: 39:     TX4REG = charToSend;
  4207  0027CC  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4208  0027D0                     
  4209                           ; BSR set to: 14
  4210  0027D0  0012               	return		;funcret
  4211  0027D2                     __end_of_sendCharSerial4:
  4212                           	callstack 0
  4213                           
  4214 ;; *************** function _interrupts_init *****************
  4215 ;; Defined at:
  4216 ;;		line 37 in file "interrupts.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;		None
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      void 
  4223 ;; Registers used:
  4224 ;;		None
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;Total ram usage:        0 bytes
  4235 ;; Hardware stack levels used: 1
  4236 ;; Hardware stack levels required when called: 2
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_main
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           	psect	text20
  4245  0027E8                     __ptext20:
  4246                           	callstack 0
  4247  0027E8                     _interrupts_init:
  4248                           	callstack 28
  4249  0027E8                     
  4250                           ;interrupts.c: 43:     PIE0bits.TMR0IE=1;
  4251  0027E8  010E               	movlb	14	; () banked
  4252  0027EA  8B29               	bsf	41,5,b	;volatile
  4253                           
  4254                           ;interrupts.c: 46:     IPR0bits.INT1IP = 1;
  4255  0027EC  831F               	bsf	31,1,b	;volatile
  4256                           
  4257                           ;interrupts.c: 51:     INTCONbits.IPEN = 1;
  4258  0027EE  8AF2               	bsf	242,5,c	;volatile
  4259                           
  4260                           ;interrupts.c: 53:     INTCONbits.PEIE = 1;
  4261  0027F0  8CF2               	bsf	242,6,c	;volatile
  4262                           
  4263                           ;interrupts.c: 54:     INTCONbits.GIE = 1;
  4264  0027F2  8EF2               	bsf	242,7,c	;volatile
  4265  0027F4                     
  4266                           ; BSR set to: 14
  4267  0027F4  0012               	return		;funcret
  4268  0027F6                     __end_of_interrupts_init:
  4269                           	callstack 0
  4270                           
  4271 ;; *************** function _colorclick_readColour *****************
  4272 ;; Defined at:
  4273 ;;		line 161 in file "color_click.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  current         8   12[COMRAM] struct .
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  8   12[COMRAM] struct .
  4280 ;; Registers used:
  4281 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4287 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4290 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;Total ram usage:        8 bytes
  4292 ;; Hardware stack levels used: 1
  4293 ;; Hardware stack levels required when called: 5
  4294 ;; This function calls:
  4295 ;;		_colorclick_readBlue
  4296 ;;		_colorclick_readClear
  4297 ;;		_colorclick_readGreen
  4298 ;;		_colorclick_readRed
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text21
  4305  002508                     __ptext21:
  4306                           	callstack 0
  4307  002508                     _colorclick_readColour:
  4308                           	callstack 25
  4309  002508                     
  4310                           ;color_click.c: 161: RGB_val colorclick_readColour(RGB_val current);color_click.c: 162: 
      +                          {;color_click.c: 163:     current.R = colorclick_readRed();
  4311  002508  EC9A  F011         	call	_colorclick_readRed	;wreg free
  4312  00250C  C006  F00D         	movff	?_colorclick_readRed,colorclick_readColour@current
  4313  002510  C007  F00E         	movff	?_colorclick_readRed+1,colorclick_readColour@current+1
  4314                           
  4315                           ;color_click.c: 164:     current.G = colorclick_readGreen();
  4316  002514  ECC2  F011         	call	_colorclick_readGreen	;wreg free
  4317  002518  C006  F00F         	movff	?_colorclick_readGreen,colorclick_readColour@current+2
  4318  00251C  C007  F010         	movff	?_colorclick_readGreen+1,colorclick_readColour@current+3
  4319                           
  4320                           ;color_click.c: 165:     current.B = colorclick_readBlue();
  4321  002520  EC12  F012         	call	_colorclick_readBlue	;wreg free
  4322  002524  C006  F011         	movff	?_colorclick_readBlue,colorclick_readColour@current+4
  4323  002528  C007  F012         	movff	?_colorclick_readBlue+1,colorclick_readColour@current+5
  4324                           
  4325                           ;color_click.c: 166:     current.C = colorclick_readClear();
  4326  00252C  ECEA  F011         	call	_colorclick_readClear	;wreg free
  4327  002530  C006  F013         	movff	?_colorclick_readClear,colorclick_readColour@current+6
  4328  002534  C007  F014         	movff	?_colorclick_readClear+1,colorclick_readColour@current+7
  4329  002538                     
  4330                           ;color_click.c: 168:     return current;
  4331  002538  EE20  F00D         	lfsr	2,colorclick_readColour@current
  4332  00253C  EE00  F00D         	lfsr	0,?_colorclick_readColour
  4333  002540  0E07               	movlw	7
  4334  002542                     u2461:
  4335  002542  CFDB FFEB          	movff	plusw2,plusw0
  4336  002546  06E8               	decf	wreg,f,c
  4337  002548  E2FC               	bc	u2461
  4338  00254A  0012               	return		;funcret
  4339  00254C                     __end_of_colorclick_readColour:
  4340                           	callstack 0
  4341                           
  4342 ;; *************** function _colorclick_readRed *****************
  4343 ;; Defined at:
  4344 ;;		line 86 in file "color_click.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;		None
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  tmp             2   10[COMRAM] unsigned int 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  2    5[COMRAM] unsigned int 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4361 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4362 ;;Total ram usage:        7 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; Hardware stack levels required when called: 4
  4365 ;; This function calls:
  4366 ;;		_I2C_2_Master_Read
  4367 ;;		_I2C_2_Master_RepStart
  4368 ;;		_I2C_2_Master_Start
  4369 ;;		_I2C_2_Master_Stop
  4370 ;;		_I2C_2_Master_Write
  4371 ;; This function is called by:
  4372 ;;		_colorclick_readColour
  4373 ;;		_colorclick_readColourRGBCLED
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text22
  4378  002334                     __ptext22:
  4379                           	callstack 0
  4380  002334                     _colorclick_readRed:
  4381                           	callstack 25
  4382  002334                     
  4383                           ;color_click.c: 88:  unsigned int tmp;;color_click.c: 89:  I2C_2_Master_Start();
  4384  002334  EC11  F014         	call	_I2C_2_Master_Start	;wreg free
  4385                           
  4386                           ;color_click.c: 90:  I2C_2_Master_Write(0x52 | 0x00);
  4387  002338  0E52               	movlw	82
  4388  00233A  ECFB  F013         	call	_I2C_2_Master_Write
  4389                           
  4390                           ;color_click.c: 91:  I2C_2_Master_Write(0xA0 | 0x16);
  4391  00233E  0EB6               	movlw	182
  4392  002340  ECFB  F013         	call	_I2C_2_Master_Write
  4393                           
  4394                           ;color_click.c: 92:  I2C_2_Master_RepStart();
  4395  002344  EC07  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4396                           
  4397                           ;color_click.c: 93:  I2C_2_Master_Write(0x52 | 0x01);
  4398  002348  0E53               	movlw	83
  4399  00234A  ECFB  F013         	call	_I2C_2_Master_Write
  4400                           
  4401                           ;color_click.c: 94:  tmp=I2C_2_Master_Read(1);
  4402  00234E  0E01               	movlw	1
  4403  002350  ECA6  F012         	call	_I2C_2_Master_Read
  4404  002354  6E08               	movwf	??_colorclick_readRed^0,c
  4405  002356  5008               	movf	??_colorclick_readRed^0,w,c
  4406  002358  6E0B               	movwf	colorclick_readRed@tmp^0,c
  4407  00235A  6A0C               	clrf	(colorclick_readRed@tmp+1)^0,c
  4408                           
  4409                           ;color_click.c: 95:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4410  00235C  0E00               	movlw	0
  4411  00235E  ECA6  F012         	call	_I2C_2_Master_Read
  4412  002362  6E08               	movwf	??_colorclick_readRed^0,c
  4413  002364  5008               	movf	??_colorclick_readRed^0,w,c
  4414  002366  6E0A               	movwf	(??_colorclick_readRed+2)^0,c
  4415  002368  6A09               	clrf	(??_colorclick_readRed+1)^0,c
  4416  00236A  500B               	movf	colorclick_readRed@tmp^0,w,c
  4417  00236C  1009               	iorwf	(??_colorclick_readRed+1)^0,w,c
  4418  00236E  6E0B               	movwf	colorclick_readRed@tmp^0,c
  4419  002370  500C               	movf	(colorclick_readRed@tmp+1)^0,w,c
  4420  002372  100A               	iorwf	(??_colorclick_readRed+2)^0,w,c
  4421  002374  6E0C               	movwf	(colorclick_readRed@tmp+1)^0,c
  4422                           
  4423                           ;color_click.c: 96:  I2C_2_Master_Stop();
  4424  002376  EC0C  F014         	call	_I2C_2_Master_Stop	;wreg free
  4425  00237A                     
  4426                           ;color_click.c: 97:  return tmp;
  4427  00237A  C00B  F006         	movff	colorclick_readRed@tmp,?_colorclick_readRed
  4428  00237E  C00C  F007         	movff	colorclick_readRed@tmp+1,?_colorclick_readRed+1
  4429  002382  0012               	return		;funcret
  4430  002384                     __end_of_colorclick_readRed:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function _colorclick_readGreen *****************
  4434 ;; Defined at:
  4435 ;;		line 105 in file "color_click.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  tmp             2   10[COMRAM] unsigned int 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  2    5[COMRAM] unsigned int 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;Total ram usage:        7 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 4
  4456 ;; This function calls:
  4457 ;;		_I2C_2_Master_Read
  4458 ;;		_I2C_2_Master_RepStart
  4459 ;;		_I2C_2_Master_Start
  4460 ;;		_I2C_2_Master_Stop
  4461 ;;		_I2C_2_Master_Write
  4462 ;; This function is called by:
  4463 ;;		_colorclick_readColour
  4464 ;;		_colorclick_readColourRGBCLED
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text23
  4469  002384                     __ptext23:
  4470                           	callstack 0
  4471  002384                     _colorclick_readGreen:
  4472                           	callstack 25
  4473  002384                     
  4474                           ;color_click.c: 107:  unsigned int tmp;;color_click.c: 108:  I2C_2_Master_Start();
  4475  002384  EC11  F014         	call	_I2C_2_Master_Start	;wreg free
  4476                           
  4477                           ;color_click.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  4478  002388  0E52               	movlw	82
  4479  00238A  ECFB  F013         	call	_I2C_2_Master_Write
  4480                           
  4481                           ;color_click.c: 110:  I2C_2_Master_Write(0xA0 | 0x18);
  4482  00238E  0EB8               	movlw	184
  4483  002390  ECFB  F013         	call	_I2C_2_Master_Write
  4484                           
  4485                           ;color_click.c: 111:  I2C_2_Master_RepStart();
  4486  002394  EC07  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4487                           
  4488                           ;color_click.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  4489  002398  0E53               	movlw	83
  4490  00239A  ECFB  F013         	call	_I2C_2_Master_Write
  4491                           
  4492                           ;color_click.c: 113:  tmp=I2C_2_Master_Read(1);
  4493  00239E  0E01               	movlw	1
  4494  0023A0  ECA6  F012         	call	_I2C_2_Master_Read
  4495  0023A4  6E08               	movwf	??_colorclick_readGreen^0,c
  4496  0023A6  5008               	movf	??_colorclick_readGreen^0,w,c
  4497  0023A8  6E0B               	movwf	colorclick_readGreen@tmp^0,c
  4498  0023AA  6A0C               	clrf	(colorclick_readGreen@tmp+1)^0,c
  4499                           
  4500                           ;color_click.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4501  0023AC  0E00               	movlw	0
  4502  0023AE  ECA6  F012         	call	_I2C_2_Master_Read
  4503  0023B2  6E08               	movwf	??_colorclick_readGreen^0,c
  4504  0023B4  5008               	movf	??_colorclick_readGreen^0,w,c
  4505  0023B6  6E0A               	movwf	(??_colorclick_readGreen+2)^0,c
  4506  0023B8  6A09               	clrf	(??_colorclick_readGreen+1)^0,c
  4507  0023BA  500B               	movf	colorclick_readGreen@tmp^0,w,c
  4508  0023BC  1009               	iorwf	(??_colorclick_readGreen+1)^0,w,c
  4509  0023BE  6E0B               	movwf	colorclick_readGreen@tmp^0,c
  4510  0023C0  500C               	movf	(colorclick_readGreen@tmp+1)^0,w,c
  4511  0023C2  100A               	iorwf	(??_colorclick_readGreen+2)^0,w,c
  4512  0023C4  6E0C               	movwf	(colorclick_readGreen@tmp+1)^0,c
  4513                           
  4514                           ;color_click.c: 115:  I2C_2_Master_Stop();
  4515  0023C6  EC0C  F014         	call	_I2C_2_Master_Stop	;wreg free
  4516  0023CA                     
  4517                           ;color_click.c: 116:  return tmp;
  4518  0023CA  C00B  F006         	movff	colorclick_readGreen@tmp,?_colorclick_readGreen
  4519  0023CE  C00C  F007         	movff	colorclick_readGreen@tmp+1,?_colorclick_readGreen+1
  4520  0023D2  0012               	return		;funcret
  4521  0023D4                     __end_of_colorclick_readGreen:
  4522                           	callstack 0
  4523                           
  4524 ;; *************** function _colorclick_readClear *****************
  4525 ;; Defined at:
  4526 ;;		line 143 in file "color_click.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  tmp             2   10[COMRAM] unsigned int 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  2    5[COMRAM] unsigned int 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4544 ;;Total ram usage:        7 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 4
  4547 ;; This function calls:
  4548 ;;		_I2C_2_Master_Read
  4549 ;;		_I2C_2_Master_RepStart
  4550 ;;		_I2C_2_Master_Start
  4551 ;;		_I2C_2_Master_Stop
  4552 ;;		_I2C_2_Master_Write
  4553 ;; This function is called by:
  4554 ;;		_colorclick_readColour
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text24
  4559  0023D4                     __ptext24:
  4560                           	callstack 0
  4561  0023D4                     _colorclick_readClear:
  4562                           	callstack 25
  4563  0023D4                     
  4564                           ;color_click.c: 145:  unsigned int tmp;;color_click.c: 146:  I2C_2_Master_Start();
  4565  0023D4  EC11  F014         	call	_I2C_2_Master_Start	;wreg free
  4566                           
  4567                           ;color_click.c: 147:  I2C_2_Master_Write(0x52 | 0x00);
  4568  0023D8  0E52               	movlw	82
  4569  0023DA  ECFB  F013         	call	_I2C_2_Master_Write
  4570                           
  4571                           ;color_click.c: 148:  I2C_2_Master_Write(0xA0 | 0x14);
  4572  0023DE  0EB4               	movlw	180
  4573  0023E0  ECFB  F013         	call	_I2C_2_Master_Write
  4574                           
  4575                           ;color_click.c: 149:  I2C_2_Master_RepStart();
  4576  0023E4  EC07  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4577                           
  4578                           ;color_click.c: 150:  I2C_2_Master_Write(0x52 | 0x01);
  4579  0023E8  0E53               	movlw	83
  4580  0023EA  ECFB  F013         	call	_I2C_2_Master_Write
  4581                           
  4582                           ;color_click.c: 151:  tmp=I2C_2_Master_Read(1);
  4583  0023EE  0E01               	movlw	1
  4584  0023F0  ECA6  F012         	call	_I2C_2_Master_Read
  4585  0023F4  6E08               	movwf	??_colorclick_readClear^0,c
  4586  0023F6  5008               	movf	??_colorclick_readClear^0,w,c
  4587  0023F8  6E0B               	movwf	colorclick_readClear@tmp^0,c
  4588  0023FA  6A0C               	clrf	(colorclick_readClear@tmp+1)^0,c
  4589                           
  4590                           ;color_click.c: 152:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4591  0023FC  0E00               	movlw	0
  4592  0023FE  ECA6  F012         	call	_I2C_2_Master_Read
  4593  002402  6E08               	movwf	??_colorclick_readClear^0,c
  4594  002404  5008               	movf	??_colorclick_readClear^0,w,c
  4595  002406  6E0A               	movwf	(??_colorclick_readClear+2)^0,c
  4596  002408  6A09               	clrf	(??_colorclick_readClear+1)^0,c
  4597  00240A  500B               	movf	colorclick_readClear@tmp^0,w,c
  4598  00240C  1009               	iorwf	(??_colorclick_readClear+1)^0,w,c
  4599  00240E  6E0B               	movwf	colorclick_readClear@tmp^0,c
  4600  002410  500C               	movf	(colorclick_readClear@tmp+1)^0,w,c
  4601  002412  100A               	iorwf	(??_colorclick_readClear+2)^0,w,c
  4602  002414  6E0C               	movwf	(colorclick_readClear@tmp+1)^0,c
  4603                           
  4604                           ;color_click.c: 153:  I2C_2_Master_Stop();
  4605  002416  EC0C  F014         	call	_I2C_2_Master_Stop	;wreg free
  4606  00241A                     
  4607                           ;color_click.c: 154:  return tmp;
  4608  00241A  C00B  F006         	movff	colorclick_readClear@tmp,?_colorclick_readClear
  4609  00241E  C00C  F007         	movff	colorclick_readClear@tmp+1,?_colorclick_readClear+1
  4610  002422  0012               	return		;funcret
  4611  002424                     __end_of_colorclick_readClear:
  4612                           	callstack 0
  4613                           
  4614 ;; *************** function _colorclick_readBlue *****************
  4615 ;; Defined at:
  4616 ;;		line 124 in file "color_click.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  tmp             2   10[COMRAM] unsigned int 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  2    5[COMRAM] unsigned int 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4631 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4632 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4633 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4634 ;;Total ram usage:        7 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; Hardware stack levels required when called: 4
  4637 ;; This function calls:
  4638 ;;		_I2C_2_Master_Read
  4639 ;;		_I2C_2_Master_RepStart
  4640 ;;		_I2C_2_Master_Start
  4641 ;;		_I2C_2_Master_Stop
  4642 ;;		_I2C_2_Master_Write
  4643 ;; This function is called by:
  4644 ;;		_colorclick_readColour
  4645 ;;		_colorclick_readColourRGBCLED
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text25
  4650  002424                     __ptext25:
  4651                           	callstack 0
  4652  002424                     _colorclick_readBlue:
  4653                           	callstack 25
  4654  002424                     
  4655                           ;color_click.c: 126:  unsigned int tmp;;color_click.c: 127:  I2C_2_Master_Start();
  4656  002424  EC11  F014         	call	_I2C_2_Master_Start	;wreg free
  4657                           
  4658                           ;color_click.c: 128:  I2C_2_Master_Write(0x52 | 0x00);
  4659  002428  0E52               	movlw	82
  4660  00242A  ECFB  F013         	call	_I2C_2_Master_Write
  4661                           
  4662                           ;color_click.c: 129:  I2C_2_Master_Write(0xA0 | 0x1A);
  4663  00242E  0EBA               	movlw	186
  4664  002430  ECFB  F013         	call	_I2C_2_Master_Write
  4665                           
  4666                           ;color_click.c: 130:  I2C_2_Master_RepStart();
  4667  002434  EC07  F014         	call	_I2C_2_Master_RepStart	;wreg free
  4668                           
  4669                           ;color_click.c: 131:  I2C_2_Master_Write(0x52 | 0x01);
  4670  002438  0E53               	movlw	83
  4671  00243A  ECFB  F013         	call	_I2C_2_Master_Write
  4672                           
  4673                           ;color_click.c: 132:  tmp=I2C_2_Master_Read(1);
  4674  00243E  0E01               	movlw	1
  4675  002440  ECA6  F012         	call	_I2C_2_Master_Read
  4676  002444  6E08               	movwf	??_colorclick_readBlue^0,c
  4677  002446  5008               	movf	??_colorclick_readBlue^0,w,c
  4678  002448  6E0B               	movwf	colorclick_readBlue@tmp^0,c
  4679  00244A  6A0C               	clrf	(colorclick_readBlue@tmp+1)^0,c
  4680                           
  4681                           ;color_click.c: 133:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4682  00244C  0E00               	movlw	0
  4683  00244E  ECA6  F012         	call	_I2C_2_Master_Read
  4684  002452  6E08               	movwf	??_colorclick_readBlue^0,c
  4685  002454  5008               	movf	??_colorclick_readBlue^0,w,c
  4686  002456  6E0A               	movwf	(??_colorclick_readBlue+2)^0,c
  4687  002458  6A09               	clrf	(??_colorclick_readBlue+1)^0,c
  4688  00245A  500B               	movf	colorclick_readBlue@tmp^0,w,c
  4689  00245C  1009               	iorwf	(??_colorclick_readBlue+1)^0,w,c
  4690  00245E  6E0B               	movwf	colorclick_readBlue@tmp^0,c
  4691  002460  500C               	movf	(colorclick_readBlue@tmp+1)^0,w,c
  4692  002462  100A               	iorwf	(??_colorclick_readBlue+2)^0,w,c
  4693  002464  6E0C               	movwf	(colorclick_readBlue@tmp+1)^0,c
  4694                           
  4695                           ;color_click.c: 134:  I2C_2_Master_Stop();
  4696  002466  EC0C  F014         	call	_I2C_2_Master_Stop	;wreg free
  4697  00246A                     
  4698                           ;color_click.c: 135:  return tmp;
  4699  00246A  C00B  F006         	movff	colorclick_readBlue@tmp,?_colorclick_readBlue
  4700  00246E  C00C  F007         	movff	colorclick_readBlue@tmp+1,?_colorclick_readBlue+1
  4701  002472  0012               	return		;funcret
  4702  002474                     __end_of_colorclick_readBlue:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function _I2C_2_Master_RepStart *****************
  4706 ;; Defined at:
  4707 ;;		line 49 in file "i2c.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 3
  4728 ;; This function calls:
  4729 ;;		_I2C_2_Master_Idle
  4730 ;; This function is called by:
  4731 ;;		_colorclick_readRed
  4732 ;;		_colorclick_readGreen
  4733 ;;		_colorclick_readBlue
  4734 ;;		_colorclick_readClear
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text26
  4739  00280E                     __ptext26:
  4740                           	callstack 0
  4741  00280E                     _I2C_2_Master_RepStart:
  4742                           	callstack 25
  4743  00280E                     
  4744                           ;i2c.c: 51:   I2C_2_Master_Idle();
  4745  00280E  EC68  F013         	call	_I2C_2_Master_Idle	;wreg free
  4746  002812                     
  4747                           ;i2c.c: 52:   SSP2CON2bits.RSEN = 1;
  4748  002812  010E               	movlb	14	; () banked
  4749  002814  83DA               	bsf	218,1,b	;volatile
  4750  002816                     
  4751                           ; BSR set to: 14
  4752  002816  0012               	return		;funcret
  4753  002818                     __end_of_I2C_2_Master_RepStart:
  4754                           	callstack 0
  4755                           
  4756 ;; *************** function _I2C_2_Master_Read *****************
  4757 ;; Defined at:
  4758 ;;		line 79 in file "i2c.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  ack             1    wreg     unsigned char 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  ack             1    3[COMRAM] unsigned char 
  4763 ;;  tmp             1    4[COMRAM] unsigned char 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      unsigned char 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4776 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4777 ;;Total ram usage:        3 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 3
  4780 ;; This function calls:
  4781 ;;		_I2C_2_Master_Idle
  4782 ;; This function is called by:
  4783 ;;		_colorclick_readRed
  4784 ;;		_colorclick_readGreen
  4785 ;;		_colorclick_readBlue
  4786 ;;		_colorclick_readClear
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text27
  4791  00254C                     __ptext27:
  4792                           	callstack 0
  4793  00254C                     _I2C_2_Master_Read:
  4794                           	callstack 25
  4795                           
  4796                           ; BSR set to: 14
  4797                           ;incstack = 0
  4798                           ;I2C_2_Master_Read@ack stored from wreg
  4799  00254C  6E04               	movwf	I2C_2_Master_Read@ack^0,c
  4800  00254E                     
  4801                           ;i2c.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 80: {;i2c.c: 81:  
      +                           unsigned char tmp;;i2c.c: 82:   I2C_2_Master_Idle();
  4802  00254E  EC68  F013         	call	_I2C_2_Master_Idle	;wreg free
  4803  002552                     
  4804                           ;i2c.c: 83:   SSP2CON2bits.RCEN = 1;
  4805  002552  010E               	movlb	14	; () banked
  4806  002554  87DA               	bsf	218,3,b	;volatile
  4807                           
  4808                           ;i2c.c: 84:   I2C_2_Master_Idle();
  4809  002556  EC68  F013         	call	_I2C_2_Master_Idle	;wreg free
  4810  00255A                     
  4811                           ;i2c.c: 85:   tmp = SSP2BUF;
  4812  00255A  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4813                           
  4814                           ;i2c.c: 86:   I2C_2_Master_Idle();
  4815  00255E  EC68  F013         	call	_I2C_2_Master_Idle	;wreg free
  4816  002562                     
  4817                           ;i2c.c: 87:   SSP2CON2bits.ACKDT = !ack;
  4818  002562  5004               	movf	I2C_2_Master_Read@ack^0,w,c
  4819  002564  B4D8               	btfsc	status,2,c
  4820  002566  EFB7  F012         	goto	u2091
  4821  00256A  EFBB  F012         	goto	u2090
  4822  00256E                     u2091:
  4823  00256E  6A03               	clrf	??_I2C_2_Master_Read^0,c
  4824  002570  2A03               	incf	??_I2C_2_Master_Read^0,f,c
  4825  002572  EFBC  F012         	goto	u2108
  4826  002576                     u2090:
  4827  002576  6A03               	clrf	??_I2C_2_Master_Read^0,c
  4828  002578                     u2108:
  4829  002578  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
  4830  00257A  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
  4831  00257C  010E               	movlb	14	; () banked
  4832  00257E  51DA               	movf	218,w,b	;volatile
  4833  002580  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  4834  002582  0BDF               	andlw	-33
  4835  002584  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  4836  002586  6FDA               	movwf	218,b	;volatile
  4837  002588                     
  4838                           ; BSR set to: 14
  4839                           ;i2c.c: 88:   SSP2CON2bits.ACKEN = 1;
  4840  002588  89DA               	bsf	218,4,b	;volatile
  4841  00258A                     
  4842                           ; BSR set to: 14
  4843                           ;i2c.c: 89:   return tmp;
  4844  00258A  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
  4845  00258C                     
  4846                           ; BSR set to: 14
  4847  00258C  0012               	return		;funcret
  4848  00258E                     __end_of_I2C_2_Master_Read:
  4849                           	callstack 0
  4850                           
  4851 ;; *************** function _colorclick_init *****************
  4852 ;; Defined at:
  4853 ;;		line 9 in file "color_click.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0, cstack
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;Total ram usage:        1 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; Hardware stack levels required when called: 5
  4874 ;; This function calls:
  4875 ;;		_I2C_2_Master_Init
  4876 ;;		_colorclick_toggleClearLED
  4877 ;;		_colorclick_writetoaddr
  4878 ;; This function is called by:
  4879 ;;		_main
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text28
  4884  0025CE                     __ptext28:
  4885                           	callstack 0
  4886  0025CE                     _colorclick_init:
  4887                           	callstack 25
  4888  0025CE                     
  4889                           ;color_click.c: 12:     I2C_2_Master_Init();
  4890  0025CE  EC53  F013         	call	_I2C_2_Master_Init	;wreg free
  4891  0025D2                     
  4892                           ;color_click.c: 15:   colorclick_writetoaddr(0x00, 0x01);
  4893  0025D2  0E01               	movlw	1
  4894  0025D4  6E04               	movwf	colorclick_writetoaddr@value^0,c
  4895  0025D6  0E00               	movlw	0
  4896  0025D8  ECA0  F013         	call	_colorclick_writetoaddr
  4897  0025DC                     
  4898                           ;color_click.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4899  0025DC  0E3F               	movlw	63
  4900  0025DE  6E06               	movwf	??_colorclick_init^0,c
  4901  0025E0  0E55               	movlw	85
  4902  0025E2                     u3447:
  4903  0025E2  2EE8               	decfsz	wreg,f,c
  4904  0025E4  D7FE               	bra	u3447
  4905  0025E6  2E06               	decfsz	??_colorclick_init^0,f,c
  4906  0025E8  D7FC               	bra	u3447
  4907  0025EA  F000               	nop	
  4908  0025EC                     
  4909                           ;color_click.c: 19:  colorclick_writetoaddr(0x00, 0x03);
  4910  0025EC  0E03               	movlw	3
  4911  0025EE  6E04               	movwf	colorclick_writetoaddr@value^0,c
  4912  0025F0  0E00               	movlw	0
  4913  0025F2  ECA0  F013         	call	_colorclick_writetoaddr
  4914  0025F6                     
  4915                           ;color_click.c: 22:  colorclick_writetoaddr(0x01, 0xD5);
  4916  0025F6  0ED5               	movlw	213
  4917  0025F8  6E04               	movwf	colorclick_writetoaddr@value^0,c
  4918  0025FA  0E01               	movlw	1
  4919  0025FC  ECA0  F013         	call	_colorclick_writetoaddr
  4920  002600                     
  4921                           ;color_click.c: 25:     TRISGbits.TRISG1 = 0;
  4922  002600  9287               	bcf	135,1,c	;volatile
  4923  002602                     
  4924                           ;color_click.c: 26:     TRISAbits.TRISA4 = 0;
  4925  002602  9881               	bcf	129,4,c	;volatile
  4926  002604                     
  4927                           ;color_click.c: 27:     TRISFbits.TRISF7 = 0;
  4928  002604  9E86               	bcf	134,7,c	;volatile
  4929  002606                     
  4930                           ;color_click.c: 30:     colorclick_toggleClearLED(0);
  4931  002606  0E00               	movlw	0
  4932  002608  EC8F  F013         	call	_colorclick_toggleClearLED
  4933  00260C  0012               	return		;funcret
  4934  00260E                     __end_of_colorclick_init:
  4935                           	callstack 0
  4936                           
  4937 ;; *************** function _colorclick_writetoaddr *****************
  4938 ;; Defined at:
  4939 ;;		line 72 in file "color_click.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  address         1    wreg     unsigned char 
  4942 ;;  value           1    3[COMRAM] unsigned char 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  address         1    4[COMRAM] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4954 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;Total ram usage:        2 bytes
  4959 ;; Hardware stack levels used: 1
  4960 ;; Hardware stack levels required when called: 4
  4961 ;; This function calls:
  4962 ;;		_I2C_2_Master_Start
  4963 ;;		_I2C_2_Master_Stop
  4964 ;;		_I2C_2_Master_Write
  4965 ;; This function is called by:
  4966 ;;		_colorclick_init
  4967 ;;		_colour_int_init
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text29
  4972  002740                     __ptext29:
  4973                           	callstack 0
  4974  002740                     _colorclick_writetoaddr:
  4975                           	callstack 25
  4976                           
  4977                           ;incstack = 0
  4978                           ;colorclick_writetoaddr@address stored from wreg
  4979  002740  6E05               	movwf	colorclick_writetoaddr@address^0,c
  4980  002742                     
  4981                           ;color_click.c: 72: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           73: {;color_click.c: 74:     I2C_2_Master_Start();
  4982  002742  EC11  F014         	call	_I2C_2_Master_Start	;wreg free
  4983                           
  4984                           ;color_click.c: 75:     I2C_2_Master_Write(0x52 | 0x00);
  4985  002746  0E52               	movlw	82
  4986  002748  ECFB  F013         	call	_I2C_2_Master_Write
  4987                           
  4988                           ;color_click.c: 76:     I2C_2_Master_Write(0x80 | address);
  4989  00274C  5005               	movf	colorclick_writetoaddr@address^0,w,c
  4990  00274E  0980               	iorlw	128
  4991  002750  ECFB  F013         	call	_I2C_2_Master_Write
  4992                           
  4993                           ;color_click.c: 77:     I2C_2_Master_Write(value);
  4994  002754  5004               	movf	colorclick_writetoaddr@value^0,w,c
  4995  002756  ECFB  F013         	call	_I2C_2_Master_Write
  4996                           
  4997                           ;color_click.c: 78:     I2C_2_Master_Stop();
  4998  00275A  EC0C  F014         	call	_I2C_2_Master_Stop	;wreg free
  4999  00275E  0012               	return		;funcret
  5000  002760                     __end_of_colorclick_writetoaddr:
  5001                           	callstack 0
  5002                           
  5003 ;; *************** function _I2C_2_Master_Write *****************
  5004 ;; Defined at:
  5005 ;;		line 69 in file "i2c.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  data_byte       1    wreg     unsigned char 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  data_byte       1    2[COMRAM] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      void 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5023 ;;Total ram usage:        1 bytes
  5024 ;; Hardware stack levels used: 1
  5025 ;; Hardware stack levels required when called: 3
  5026 ;; This function calls:
  5027 ;;		_I2C_2_Master_Idle
  5028 ;; This function is called by:
  5029 ;;		_colorclick_writetoaddr
  5030 ;;		_colorclick_readRed
  5031 ;;		_colorclick_readGreen
  5032 ;;		_colorclick_readBlue
  5033 ;;		_colorclick_readClear
  5034 ;;		_interrupts_clear
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text30
  5039  0027F6                     __ptext30:
  5040                           	callstack 0
  5041  0027F6                     _I2C_2_Master_Write:
  5042                           	callstack 25
  5043                           
  5044                           ;incstack = 0
  5045                           ;I2C_2_Master_Write@data_byte stored from wreg
  5046  0027F6  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
  5047  0027F8                     
  5048                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  5049  0027F8  EC68  F013         	call	_I2C_2_Master_Idle	;wreg free
  5050  0027FC                     
  5051                           ;i2c.c: 72:   SSP2BUF = data_byte;
  5052  0027FC  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5053  002800  0012               	return		;funcret
  5054  002802                     __end_of_I2C_2_Master_Write:
  5055                           	callstack 0
  5056                           
  5057 ;; *************** function _I2C_2_Master_Stop *****************
  5058 ;; Defined at:
  5059 ;;		line 59 in file "i2c.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 3
  5080 ;; This function calls:
  5081 ;;		_I2C_2_Master_Idle
  5082 ;; This function is called by:
  5083 ;;		_colorclick_writetoaddr
  5084 ;;		_colorclick_readRed
  5085 ;;		_colorclick_readGreen
  5086 ;;		_colorclick_readBlue
  5087 ;;		_colorclick_readClear
  5088 ;;		_interrupts_clear
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text31
  5093  002818                     __ptext31:
  5094                           	callstack 0
  5095  002818                     _I2C_2_Master_Stop:
  5096                           	callstack 25
  5097  002818                     
  5098                           ;i2c.c: 61:   I2C_2_Master_Idle();
  5099  002818  EC68  F013         	call	_I2C_2_Master_Idle	;wreg free
  5100  00281C                     
  5101                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  5102  00281C  010E               	movlb	14	; () banked
  5103  00281E  85DA               	bsf	218,2,b	;volatile
  5104  002820                     
  5105                           ; BSR set to: 14
  5106  002820  0012               	return		;funcret
  5107  002822                     __end_of_I2C_2_Master_Stop:
  5108                           	callstack 0
  5109                           
  5110 ;; *************** function _I2C_2_Master_Start *****************
  5111 ;; Defined at:
  5112 ;;		line 39 in file "i2c.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;		None
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5130 ;;Total ram usage:        0 bytes
  5131 ;; Hardware stack levels used: 1
  5132 ;; Hardware stack levels required when called: 3
  5133 ;; This function calls:
  5134 ;;		_I2C_2_Master_Idle
  5135 ;; This function is called by:
  5136 ;;		_colorclick_writetoaddr
  5137 ;;		_colorclick_readRed
  5138 ;;		_colorclick_readGreen
  5139 ;;		_colorclick_readBlue
  5140 ;;		_colorclick_readClear
  5141 ;;		_interrupts_clear
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text32
  5146  002822                     __ptext32:
  5147                           	callstack 0
  5148  002822                     _I2C_2_Master_Start:
  5149                           	callstack 25
  5150  002822                     
  5151                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5152  002822  EC68  F013         	call	_I2C_2_Master_Idle	;wreg free
  5153  002826                     
  5154                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  5155  002826  010E               	movlb	14	; () banked
  5156  002828  81DA               	bsf	218,0,b	;volatile
  5157  00282A                     
  5158                           ; BSR set to: 14
  5159  00282A  0012               	return		;funcret
  5160  00282C                     __end_of_I2C_2_Master_Start:
  5161                           	callstack 0
  5162                           
  5163 ;; *************** function _I2C_2_Master_Idle *****************
  5164 ;; Defined at:
  5165 ;;		line 30 in file "i2c.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5182 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5183 ;;Total ram usage:        1 bytes
  5184 ;; Hardware stack levels used: 1
  5185 ;; Hardware stack levels required when called: 2
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_I2C_2_Master_Start
  5190 ;;		_I2C_2_Master_RepStart
  5191 ;;		_I2C_2_Master_Stop
  5192 ;;		_I2C_2_Master_Write
  5193 ;;		_I2C_2_Master_Read
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text33
  5198  0026D0                     __ptext33:
  5199                           	callstack 0
  5200  0026D0                     _I2C_2_Master_Idle:
  5201                           	callstack 25
  5202  0026D0                     l30:
  5203  0026D0  010E               	movlb	14	; () banked
  5204  0026D2  B5D8               	btfsc	216,2,b	;volatile
  5205  0026D4  EF6E  F013         	goto	u1921
  5206  0026D8  EF70  F013         	goto	u1920
  5207  0026DC                     u1921:
  5208  0026DC  EF68  F013         	goto	l30
  5209  0026E0                     u1920:
  5210  0026E0                     
  5211                           ; BSR set to: 14
  5212  0026E0  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5213  0026E4  0E1F               	movlw	31
  5214  0026E6  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
  5215  0026E8  A4D8               	btfss	status,2,c
  5216  0026EA  EF79  F013         	goto	u1931
  5217  0026EE  EF7B  F013         	goto	u1930
  5218  0026F2                     u1931:
  5219  0026F2  EF68  F013         	goto	l30
  5220  0026F6                     u1930:
  5221  0026F6                     
  5222                           ; BSR set to: 14
  5223  0026F6  0012               	return		;funcret
  5224  0026F8                     __end_of_I2C_2_Master_Idle:
  5225                           	callstack 0
  5226                           
  5227 ;; *************** function _colorclick_toggleClearLED *****************
  5228 ;; Defined at:
  5229 ;;		line 59 in file "color_click.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  toggle          1    wreg     unsigned char 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  toggle          1    1[COMRAM] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      void 
  5236 ;; Registers used:
  5237 ;;		wreg
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;Total ram usage:        1 bytes
  5248 ;; Hardware stack levels used: 1
  5249 ;; Hardware stack levels required when called: 2
  5250 ;; This function calls:
  5251 ;;		Nothing
  5252 ;; This function is called by:
  5253 ;;		_main
  5254 ;;		_colorclick_init
  5255 ;;		_colorclick_readColourRGBCLED
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text34
  5260  00271E                     __ptext34:
  5261                           	callstack 0
  5262  00271E                     _colorclick_toggleClearLED:
  5263                           	callstack 28
  5264                           
  5265                           ; BSR set to: 14
  5266                           ;incstack = 0
  5267                           ;colorclick_toggleClearLED@toggle stored from wreg
  5268  00271E  6E02               	movwf	colorclick_toggleClearLED@toggle^0,c
  5269  002720                     
  5270                           ;color_click.c: 59: void colorclick_toggleClearLED(unsigned char toggle);color_click.c: 
      +                          60: {;color_click.c: 61:     LATGbits.LATG1 = toggle;
  5271  002720  B002               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  5272  002722  D002               	bra	u2155
  5273  002724  927F               	bcf	127,1,c	;volatile
  5274  002726  D001               	bra	u2156
  5275  002728                     u2155:
  5276  002728  827F               	bsf	127,1,c	;volatile
  5277  00272A                     u2156:
  5278                           
  5279                           ;color_click.c: 62:     LATFbits.LATF7 = toggle;
  5280  00272A  B002               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  5281  00272C  D002               	bra	u2165
  5282  00272E  9E7E               	bcf	126,7,c	;volatile
  5283  002730  D001               	bra	u2166
  5284  002732                     u2165:
  5285  002732  8E7E               	bsf	126,7,c	;volatile
  5286  002734                     u2166:
  5287                           
  5288                           ;color_click.c: 63:     LATAbits.LATA4 = toggle;
  5289  002734  B002               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  5290  002736  D002               	bra	u2175
  5291  002738  9879               	bcf	121,4,c	;volatile
  5292  00273A  D001               	bra	u2176
  5293  00273C                     u2175:
  5294  00273C  8879               	bsf	121,4,c	;volatile
  5295  00273E                     u2176:
  5296  00273E  0012               	return		;funcret
  5297  002740                     __end_of_colorclick_toggleClearLED:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _I2C_2_Master_Init *****************
  5301 ;; Defined at:
  5302 ;;		line 8 in file "i2c.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		wreg, status,2
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5320 ;;Total ram usage:        0 bytes
  5321 ;; Hardware stack levels used: 1
  5322 ;; Hardware stack levels required when called: 2
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_colorclick_init
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text35
  5331  0026A6                     __ptext35:
  5332                           	callstack 0
  5333  0026A6                     _I2C_2_Master_Init:
  5334                           	callstack 27
  5335  0026A6                     
  5336                           ;i2c.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  5337  0026A6  010E               	movlb	14	; () banked
  5338  0026A8  51D9               	movf	217,w,b	;volatile
  5339  0026AA  0BF0               	andlw	-16
  5340  0026AC  0908               	iorlw	8
  5341  0026AE  6FD9               	movwf	217,b	;volatile
  5342  0026B0                     
  5343                           ; BSR set to: 14
  5344                           ;i2c.c: 12:   SSP2CON1bits.SSPEN = 1;
  5345  0026B0  8BD9               	bsf	217,5,b	;volatile
  5346                           
  5347                           ;i2c.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  5348  0026B2  0E9F               	movlw	159
  5349  0026B4  6FD6               	movwf	214,b	;volatile
  5350  0026B6                     
  5351                           ; BSR set to: 14
  5352                           ;i2c.c: 16:   TRISDbits.TRISD5 = 1;
  5353  0026B6  8A84               	bsf	132,5,c	;volatile
  5354  0026B8                     
  5355                           ; BSR set to: 14
  5356                           ;i2c.c: 17:   TRISDbits.TRISD6 = 1;
  5357  0026B8  8C84               	bsf	132,6,c	;volatile
  5358  0026BA                     
  5359                           ; BSR set to: 14
  5360                           ;i2c.c: 18:   ANSELDbits.ANSELD5=0;
  5361  0026BA  9BA7               	bcf	167,5,b	;volatile
  5362  0026BC                     
  5363                           ; BSR set to: 14
  5364                           ;i2c.c: 19:   ANSELDbits.ANSELD6=0;
  5365  0026BC  9DA7               	bcf	167,6,b	;volatile
  5366                           
  5367                           ;i2c.c: 20:   SSP2DATPPS=0x1D;
  5368  0026BE  0E1D               	movlw	29
  5369  0026C0  6F1D               	movwf	29,b	;volatile
  5370                           
  5371                           ;i2c.c: 21:   SSP2CLKPPS=0x1E;
  5372  0026C2  0E1E               	movlw	30
  5373  0026C4  6F1C               	movwf	28,b	;volatile
  5374                           
  5375                           ;i2c.c: 22:   RD5PPS=0x1C;
  5376  0026C6  0E1C               	movlw	28
  5377  0026C8  6F6F               	movwf	111,b	;volatile
  5378                           
  5379                           ;i2c.c: 23:   RD6PPS=0x1B;
  5380  0026CA  0E1B               	movlw	27
  5381  0026CC  6F70               	movwf	112,b	;volatile
  5382  0026CE                     
  5383                           ; BSR set to: 14
  5384  0026CE  0012               	return		;funcret
  5385  0026D0                     __end_of_I2C_2_Master_Init:
  5386                           	callstack 0
  5387                           
  5388 ;; *************** function _USART4_init *****************
  5389 ;; Defined at:
  5390 ;;		line 7 in file "serial.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;		None
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;		None
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  1    wreg      void 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5408 ;;Total ram usage:        0 bytes
  5409 ;; Hardware stack levels used: 1
  5410 ;; Hardware stack levels required when called: 2
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_main
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text36
  5419  002760                     __ptext36:
  5420                           	callstack 0
  5421  002760                     _USART4_init:
  5422                           	callstack 28
  5423  002760                     
  5424                           ;serial.c: 10:     RC0PPS = 0x12;
  5425  002760  0E12               	movlw	18
  5426  002762  010E               	movlb	14	; () banked
  5427  002764  6F62               	movwf	98,b	;volatile
  5428                           
  5429                           ;serial.c: 11:     RX4PPS = 0x11;
  5430  002766  0E11               	movlw	17
  5431  002768  6F15               	movwf	21,b	;volatile
  5432  00276A                     
  5433                           ; BSR set to: 14
  5434                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  5435  00276A  8283               	bsf	131,1,c	;volatile
  5436  00276C                     
  5437                           ; BSR set to: 14
  5438                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  5439  00276C  97E9               	bcf	233,3,b	;volatile
  5440  00276E                     
  5441                           ; BSR set to: 14
  5442                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  5443  00276E  95E8               	bcf	232,2,b	;volatile
  5444                           
  5445                           ;serial.c: 16:     SP4BRGL = 51;
  5446  002770  0E33               	movlw	51
  5447  002772  6FE5               	movwf	229,b	;volatile
  5448                           
  5449                           ;serial.c: 17:     SP4BRGH = 0;
  5450  002774  0E00               	movlw	0
  5451  002776  6FE6               	movwf	230,b	;volatile
  5452  002778                     
  5453                           ; BSR set to: 14
  5454                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  5455  002778  89E7               	bsf	231,4,b	;volatile
  5456  00277A                     
  5457                           ; BSR set to: 14
  5458                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  5459  00277A  8BE8               	bsf	232,5,b	;volatile
  5460  00277C                     
  5461                           ; BSR set to: 14
  5462                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  5463  00277C  8FE7               	bsf	231,7,b	;volatile
  5464  00277E                     
  5465                           ; BSR set to: 14
  5466  00277E  0012               	return		;funcret
  5467  002780                     __end_of_USART4_init:
  5468                           	callstack 0
  5469                           
  5470 ;; *************** function _Timer0_init *****************
  5471 ;; Defined at:
  5472 ;;		line 23 in file "interrupts.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;Total ram usage:        0 bytes
  5491 ;; Hardware stack levels used: 1
  5492 ;; Hardware stack levels required when called: 2
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_main
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text37
  5501  002780                     __ptext37:
  5502                           	callstack 0
  5503  002780                     _Timer0_init:
  5504                           	callstack 28
  5505  002780                     
  5506                           ;interrupts.c: 25:     T0CON1bits.T0CS=0b010;
  5507  002780  50D6               	movf	214,w,c	;volatile
  5508  002782  0B1F               	andlw	-225
  5509  002784  0940               	iorlw	64
  5510  002786  6ED6               	movwf	214,c	;volatile
  5511  002788                     
  5512                           ;interrupts.c: 26:     T0CON1bits.T0ASYNC=1;
  5513  002788  88D6               	bsf	214,4,c	;volatile
  5514                           
  5515                           ;interrupts.c: 27:     T0CON1bits.T0CKPS=0b1000;
  5516  00278A  50D6               	movf	214,w,c	;volatile
  5517  00278C  0BF0               	andlw	-16
  5518  00278E  0908               	iorlw	8
  5519  002790  6ED6               	movwf	214,c	;volatile
  5520  002792                     
  5521                           ;interrupts.c: 28:     T0CON0bits.T016BIT=1;
  5522  002792  88D5               	bsf	213,4,c	;volatile
  5523                           
  5524                           ;interrupts.c: 31:     TMR0H=0xFD;
  5525  002794  0EFD               	movlw	253
  5526  002796  6ED4               	movwf	212,c	;volatile
  5527                           
  5528                           ;interrupts.c: 32:     TMR0L=0x8F;
  5529  002798  0E8F               	movlw	143
  5530  00279A  6ED3               	movwf	211,c	;volatile
  5531  00279C                     
  5532                           ;interrupts.c: 33:     T0CON0bits.T0EN=1;
  5533  00279C  8ED5               	bsf	213,7,c	;volatile
  5534  00279E  0012               	return		;funcret
  5535  0027A0                     __end_of_Timer0_init:
  5536                           	callstack 0
  5537                           
  5538 ;; *************** function _DCmotors_init *****************
  5539 ;; Defined at:
  5540 ;;		line 11 in file "dc_motor.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  PWMperiod       1    wreg     unsigned char 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  PWMperiod       1    1[COMRAM] unsigned char 
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		wreg, status,2, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5558 ;;Total ram usage:        1 bytes
  5559 ;; Hardware stack levels used: 1
  5560 ;; Hardware stack levels required when called: 3
  5561 ;; This function calls:
  5562 ;;		_buggyLEDs_init
  5563 ;;		_clicker2LEDs_init
  5564 ;;		_clicker2buttons_init
  5565 ;; This function is called by:
  5566 ;;		_main
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text38
  5571  002474                     __ptext38:
  5572                           	callstack 0
  5573  002474                     _DCmotors_init:
  5574                           	callstack 27
  5575                           
  5576                           ;incstack = 0
  5577                           ;DCmotors_init@PWMperiod stored from wreg
  5578  002474  6E02               	movwf	DCmotors_init@PWMperiod^0,c
  5579  002476                     
  5580                           ;dc_motor.c: 11: void DCmotors_init(unsigned char PWMperiod);dc_motor.c: 12: {;dc_motor.
      +                          c: 14:     T2CONbits.CKPS=0b100;
  5581  002476  50BD               	movf	189,w,c	;volatile
  5582  002478  0B8F               	andlw	-113
  5583  00247A  0940               	iorlw	64
  5584  00247C  6EBD               	movwf	189,c	;volatile
  5585                           
  5586                           ;dc_motor.c: 15:     T2HLTbits.MODE=0b00000;
  5587  00247E  0EE0               	movlw	-32
  5588  002480  16BE               	andwf	190,f,c	;volatile
  5589                           
  5590                           ;dc_motor.c: 16:     T2CLKCONbits.CS=0b0001;
  5591  002482  50BF               	movf	191,w,c	;volatile
  5592  002484  0BF0               	andlw	-16
  5593  002486  0901               	iorlw	1
  5594  002488  6EBF               	movwf	191,c	;volatile
  5595  00248A                     
  5596                           ;dc_motor.c: 19:     T2PR=PWMperiod;
  5597  00248A  C002  FFBC         	movff	DCmotors_init@PWMperiod,4028	;volatile
  5598  00248E                     
  5599                           ;dc_motor.c: 20:     T2CONbits.ON=1;
  5600  00248E  8EBD               	bsf	189,7,c	;volatile
  5601  002490                     
  5602                           ;dc_motor.c: 23:     TRISEbits.TRISE2=0;
  5603  002490  9485               	bcf	133,2,c	;volatile
  5604  002492                     
  5605                           ;dc_motor.c: 24:     TRISEbits.TRISE4=0;
  5606  002492  9885               	bcf	133,4,c	;volatile
  5607  002494                     
  5608                           ;dc_motor.c: 25:     TRISCbits.TRISC7=0;
  5609  002494  9E83               	bcf	131,7,c	;volatile
  5610  002496                     
  5611                           ;dc_motor.c: 26:     TRISGbits.TRISG6=0;
  5612  002496  9C87               	bcf	135,6,c	;volatile
  5613  002498                     
  5614                           ;dc_motor.c: 28:     LATEbits.LATE2=0;
  5615  002498  947D               	bcf	125,2,c	;volatile
  5616  00249A                     
  5617                           ;dc_motor.c: 29:     LATEbits.LATE4=0;
  5618  00249A  987D               	bcf	125,4,c	;volatile
  5619  00249C                     
  5620                           ;dc_motor.c: 30:     LATCbits.LATC7=0;
  5621  00249C  9E7B               	bcf	123,7,c	;volatile
  5622  00249E                     
  5623                           ;dc_motor.c: 31:     LATGbits.LATG6=0;
  5624  00249E  9C7F               	bcf	127,6,c	;volatile
  5625                           
  5626                           ;dc_motor.c: 33:     PWM6DCH=0;
  5627  0024A0  0E00               	movlw	0
  5628  0024A2  6EA3               	movwf	163,c	;volatile
  5629                           
  5630                           ;dc_motor.c: 34:     PWM7DCH=0;
  5631  0024A4  0E00               	movlw	0
  5632  0024A6  6EA0               	movwf	160,c	;volatile
  5633  0024A8                     
  5634                           ;dc_motor.c: 36:     PWM6CONbits.EN = 1;
  5635  0024A8  8EA4               	bsf	164,7,c	;volatile
  5636  0024AA                     
  5637                           ;dc_motor.c: 37:     PWM7CONbits.EN = 1;
  5638  0024AA  8EA1               	bsf	161,7,c	;volatile
  5639                           
  5640                           ;dc_motor.c: 39:     RE2PPS=0x0A;
  5641  0024AC  0E0A               	movlw	10
  5642  0024AE  010E               	movlb	14	; () banked
  5643  0024B0  6F74               	movwf	116,b	;volatile
  5644                           
  5645                           ;dc_motor.c: 40:     RC7PPS=0x0B;
  5646  0024B2  0E0B               	movlw	11
  5647  0024B4  6F69               	movwf	105,b	;volatile
  5648  0024B6                     
  5649                           ; BSR set to: 14
  5650                           ;dc_motor.c: 43:     clicker2buttons_init();
  5651  0024B6  EC01  F014         	call	_clicker2buttons_init	;wreg free
  5652  0024BA                     
  5653                           ;dc_motor.c: 44:     clicker2LEDs_init();
  5654  0024BA  EC16  F014         	call	_clicker2LEDs_init	;wreg free
  5655  0024BE                     
  5656                           ;dc_motor.c: 45:     buggyLEDs_init();
  5657  0024BE  ECE9  F013         	call	_buggyLEDs_init	;wreg free
  5658  0024C2  0012               	return		;funcret
  5659  0024C4                     __end_of_DCmotors_init:
  5660                           	callstack 0
  5661                           
  5662 ;; *************** function _clicker2buttons_init *****************
  5663 ;; Defined at:
  5664 ;;		line 74 in file "dc_motor.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;		None
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		None
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5682 ;;Total ram usage:        0 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; Hardware stack levels required when called: 2
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_DCmotors_init
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text39
  5693  002802                     __ptext39:
  5694                           	callstack 0
  5695  002802                     _clicker2buttons_init:
  5696                           	callstack 27
  5697  002802                     
  5698                           ;dc_motor.c: 77:     TRISFbits.TRISF2=1;
  5699  002802  8486               	bsf	134,2,c	;volatile
  5700                           
  5701                           ;dc_motor.c: 78:     TRISFbits.TRISF3=1;
  5702  002804  8686               	bsf	134,3,c	;volatile
  5703                           
  5704                           ;dc_motor.c: 79:     ANSELFbits.ANSELF2=0;
  5705  002806  010E               	movlb	14	; () banked
  5706  002808  95B4               	bcf	180,2,b	;volatile
  5707                           
  5708                           ;dc_motor.c: 80:     ANSELFbits.ANSELF3=0;
  5709  00280A  97B4               	bcf	180,3,b	;volatile
  5710  00280C                     
  5711                           ; BSR set to: 14
  5712  00280C  0012               	return		;funcret
  5713  00280E                     __end_of_clicker2buttons_init:
  5714                           	callstack 0
  5715                           
  5716 ;; *************** function _clicker2LEDs_init *****************
  5717 ;; Defined at:
  5718 ;;		line 86 in file "dc_motor.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;		None
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;		None
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  1    wreg      void 
  5725 ;; Registers used:
  5726 ;;		None
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5736 ;;Total ram usage:        0 bytes
  5737 ;; Hardware stack levels used: 1
  5738 ;; Hardware stack levels required when called: 2
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_DCmotors_init
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text40
  5747  00282C                     __ptext40:
  5748                           	callstack 0
  5749  00282C                     _clicker2LEDs_init:
  5750                           	callstack 27
  5751  00282C                     
  5752                           ;dc_motor.c: 88:     TRISDbits.TRISD7 = 0;
  5753  00282C  9E84               	bcf	132,7,c	;volatile
  5754                           
  5755                           ;dc_motor.c: 89:     TRISHbits.TRISH3 = 0;
  5756  00282E  9688               	bcf	136,3,c	;volatile
  5757                           
  5758                           ;dc_motor.c: 91:     LATDbits.LATD7 = 0;
  5759  002830  9E7C               	bcf	124,7,c	;volatile
  5760                           
  5761                           ;dc_motor.c: 92:     LATHbits.LATH3 = 0;
  5762  002832  9680               	bcf	128,3,c	;volatile
  5763  002834  0012               	return		;funcret
  5764  002836                     __end_of_clicker2LEDs_init:
  5765                           	callstack 0
  5766                           
  5767 ;; *************** function _buggyLEDs_init *****************
  5768 ;; Defined at:
  5769 ;;		line 98 in file "dc_motor.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;		None
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;		None
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		None
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5787 ;;Total ram usage:        0 bytes
  5788 ;; Hardware stack levels used: 1
  5789 ;; Hardware stack levels required when called: 2
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_DCmotors_init
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           	psect	text41
  5798  0027D2                     __ptext41:
  5799                           	callstack 0
  5800  0027D2                     _buggyLEDs_init:
  5801                           	callstack 27
  5802  0027D2                     
  5803                           ;dc_motor.c: 100:     TRISHbits.TRISH1 = 0;
  5804  0027D2  9288               	bcf	136,1,c	;volatile
  5805                           
  5806                           ;dc_motor.c: 101:     TRISDbits.TRISD3 = 0;
  5807  0027D4  9684               	bcf	132,3,c	;volatile
  5808                           
  5809                           ;dc_motor.c: 102:     TRISDbits.TRISD4 = 0;
  5810  0027D6  9884               	bcf	132,4,c	;volatile
  5811                           
  5812                           ;dc_motor.c: 103:     TRISFbits.TRISF0 = 0;
  5813  0027D8  9086               	bcf	134,0,c	;volatile
  5814                           
  5815                           ;dc_motor.c: 104:     TRISHbits.TRISH0 = 0;
  5816  0027DA  9088               	bcf	136,0,c	;volatile
  5817                           
  5818                           ;dc_motor.c: 106:     LATHbits.LATH1 = 0;
  5819  0027DC  9280               	bcf	128,1,c	;volatile
  5820                           
  5821                           ;dc_motor.c: 107:     LATDbits.LATD3 = 0;
  5822  0027DE  967C               	bcf	124,3,c	;volatile
  5823                           
  5824                           ;dc_motor.c: 108:     LATDbits.LATD4 = 0;
  5825  0027E0  987C               	bcf	124,4,c	;volatile
  5826                           
  5827                           ;dc_motor.c: 109:     LATFbits.LATF0 = 0;
  5828  0027E2  907E               	bcf	126,0,c	;volatile
  5829                           
  5830                           ;dc_motor.c: 110:     LATHbits.LATH0 = 0;
  5831  0027E4  9080               	bcf	128,0,c	;volatile
  5832  0027E6  0012               	return		;funcret
  5833  0027E8                     __end_of_buggyLEDs_init:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function _ADC_init *****************
  5837 ;; Defined at:
  5838 ;;		line 8 in file "ADC.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;		None
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, status,2
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;Total ram usage:        0 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 2
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_main
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text42
  5867  0027A0                     __ptext42:
  5868                           	callstack 0
  5869  0027A0                     _ADC_init:
  5870                           	callstack 28
  5871  0027A0                     
  5872                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  5873  0027A0  8C86               	bsf	134,6,c	;volatile
  5874                           
  5875                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  5876  0027A2  010E               	movlb	14	; () banked
  5877  0027A4  8DB4               	bsf	180,6,b	;volatile
  5878                           
  5879                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  5880  0027A6  010F               	movlb	15	; () banked
  5881  0027A8  9958               	bcf	88,4,b	;volatile
  5882  0027AA                     
  5883                           ; BSR set to: 15
  5884                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  5885  0027AA  0EFC               	movlw	-4
  5886  0027AC  1758               	andwf	88,f,b	;volatile
  5887                           
  5888                           ;ADC.c: 16:     ADPCH=0b101110;
  5889  0027AE  0E2E               	movlw	46
  5890  0027B0  6F5F               	movwf	95,b	;volatile
  5891  0027B2                     
  5892                           ; BSR set to: 15
  5893                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  5894  0027B2  9460               	bcf	96,2,c	;volatile
  5895  0027B4                     
  5896                           ; BSR set to: 15
  5897                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  5898  0027B4  8860               	bsf	96,4,c	;volatile
  5899  0027B6                     
  5900                           ; BSR set to: 15
  5901                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  5902  0027B6  8E60               	bsf	96,7,c	;volatile
  5903  0027B8                     
  5904                           ; BSR set to: 15
  5905  0027B8  0012               	return		;funcret
  5906  0027BA                     __end_of_ADC_init:
  5907                           	callstack 0
  5908                           
  5909 ;; *************** function _LowISR *****************
  5910 ;; Defined at:
  5911 ;;		line 101 in file "interrupts.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      void 
  5918 ;; Registers used:
  5919 ;;		None
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5929 ;;Total ram usage:        1 bytes
  5930 ;; Hardware stack levels used: 1
  5931 ;; Hardware stack levels required when called: 1
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		Interrupt level 1
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	intcodelo
  5940  000018                     __pintcodelo:
  5941                           	callstack 0
  5942  000018                     _LowISR:
  5943                           	callstack 21
  5944                           
  5945                           ; BSR set to: 15
  5946                           ;incstack = 0
  5947  000018  805D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5948  00001A  CFE0 F001          	movff	bsr,??_LowISR
  5949  00001E  C001  FFE0         	movff	??_LowISR,bsr
  5950  000022  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5951  000024  0010               	retfie	
  5952  000026                     __end_of_LowISR:
  5953                           	callstack 0
  5954                           
  5955 ;; *************** function _HighISR *****************
  5956 ;; Defined at:
  5957 ;;		line 84 in file "interrupts.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;		None
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      void 
  5964 ;; Registers used:
  5965 ;;		wreg, status,2
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5975 ;;Total ram usage:        0 bytes
  5976 ;; Hardware stack levels used: 1
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		Interrupt level 2
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	intcode
  5985  000008                     __pintcode:
  5986                           	callstack 0
  5987  000008                     _HighISR:
  5988                           	callstack 21
  5989                           
  5990                           ;incstack = 0
  5991  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5992  00000A  EF7C  F013         	goto	int_func
  5993                           
  5994                           	psect	intcode_body
  5995  0026F8                     __pintcode_body:
  5996                           	callstack 21
  5997  0026F8                     int_func:
  5998                           	callstack 21
  5999  0026F8                     
  6000                           ;interrupts.c: 85:     if (PIR0bits.TMR0IF) {
  6001  0026F8  010E               	movlb	14	; () banked
  6002  0026FA  AB33               	btfss	51,5,b	;volatile
  6003  0026FC  EF82  F013         	goto	i2u301_41
  6004  002700  EF84  F013         	goto	i2u301_40
  6005  002704                     i2u301_41:
  6006  002704  EF8D  F013         	goto	i2l314
  6007  002708                     i2u301_40:
  6008  002708                     
  6009                           ; BSR set to: 14
  6010                           ;interrupts.c: 86:         read_val = 1;
  6011  002708  0E01               	movlw	1
  6012  00270A  0100               	movlb	0	; () banked
  6013  00270C  6FE2               	movwf	_read_val& (0+255),b	;volatile
  6014                           
  6015                           ;interrupts.c: 87:         TMR0H=0xFD;
  6016  00270E  0EFD               	movlw	253
  6017  002710  6ED4               	movwf	212,c	;volatile
  6018                           
  6019                           ;interrupts.c: 88:         TMR0L=0x8F;
  6020  002712  0E8F               	movlw	143
  6021  002714  6ED3               	movwf	211,c	;volatile
  6022  002716                     
  6023                           ; BSR set to: 0
  6024                           ;interrupts.c: 91:         PIR0bits.TMR0IF = 0;
  6025  002716  010E               	movlb	14	; () banked
  6026  002718  9B33               	bcf	51,5,b	;volatile
  6027  00271A                     i2l314:
  6028                           
  6029                           ; BSR set to: 14
  6030  00271A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6031  00271C  0011               	retfie		f
  6032  00271E                     __end_of_HighISR:
  6033                           	callstack 0
  6034                           
  6035                           	psect	rparam
  6036  0000                     
  6037                           	psect	temp
  6038  00005D                     btemp:
  6039                           	callstack 0
  6040  00005D                     	ds	1
  6041  0000                     int$flags	set	btemp
  6042  0000                     wtemp8	set	btemp+1
  6043  0000                     ttemp5	set	btemp+1
  6044  0000                     ttemp6	set	btemp+4
  6045  0000                     ttemp7	set	btemp+8
  6046                           
  6047                           	psect	idloc
  6048                           
  6049                           ;Config register IDLOC0 @ 0x200000
  6050                           ;	unspecified, using default values
  6051  200000                     	org	2097152
  6052  200000  0FFF               	dw	4095
  6053                           
  6054                           ;Config register IDLOC1 @ 0x200002
  6055                           ;	unspecified, using default values
  6056  200002                     	org	2097154
  6057  200002  0FFF               	dw	4095
  6058                           
  6059                           ;Config register IDLOC2 @ 0x200004
  6060                           ;	unspecified, using default values
  6061  200004                     	org	2097156
  6062  200004  0FFF               	dw	4095
  6063                           
  6064                           ;Config register IDLOC3 @ 0x200006
  6065                           ;	unspecified, using default values
  6066  200006                     	org	2097158
  6067  200006  0FFF               	dw	4095
  6068                           
  6069                           ;Config register IDLOC4 @ 0x200008
  6070                           ;	unspecified, using default values
  6071  200008                     	org	2097160
  6072  200008  0FFF               	dw	4095
  6073                           
  6074                           ;Config register IDLOC5 @ 0x20000A
  6075                           ;	unspecified, using default values
  6076  20000A                     	org	2097162
  6077  20000A  0FFF               	dw	4095
  6078                           
  6079                           ;Config register IDLOC6 @ 0x20000C
  6080                           ;	unspecified, using default values
  6081  20000C                     	org	2097164
  6082  20000C  0FFF               	dw	4095
  6083                           
  6084                           ;Config register IDLOC7 @ 0x20000E
  6085                           ;	unspecified, using default values
  6086  20000E                     	org	2097166
  6087  20000E  0FFF               	dw	4095
  6088                           
  6089                           	psect	config
  6090                           
  6091                           ;Config register CONFIG1L @ 0x300000
  6092                           ;	External Oscillator mode Selection bits
  6093                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6094                           ;	Power-up default value for COSC bits
  6095                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6096  300000                     	org	3145728
  6097  300000  AA                 	db	170
  6098                           
  6099                           ;Config register CONFIG1H @ 0x300001
  6100                           ;	unspecified, using default values
  6101                           ;	Clock Out Enable bit
  6102                           ;	CLKOUTEN = 0x1, unprogrammed default
  6103                           ;	Clock Switch Enable bit
  6104                           ;	CSWEN = 0x1, unprogrammed default
  6105                           ;	Fail-Safe Clock Monitor Enable bit
  6106                           ;	FCMEN = 0x1, unprogrammed default
  6107  300001                     	org	3145729
  6108  300001  FF                 	db	255
  6109                           
  6110                           ;Config register CONFIG2L @ 0x300002
  6111                           ;	unspecified, using default values
  6112                           ;	Master Clear Enable bit
  6113                           ;	MCLRE = 0x1, unprogrammed default
  6114                           ;	Power-up Timer Enable bit
  6115                           ;	PWRTE = 0x1, unprogrammed default
  6116                           ;	Low-power BOR enable bit
  6117                           ;	LPBOREN = 0x1, unprogrammed default
  6118                           ;	Brown-out Reset Enable bits
  6119                           ;	BOREN = 0x3, unprogrammed default
  6120  300002                     	org	3145730
  6121  300002  FF                 	db	255
  6122                           
  6123                           ;Config register CONFIG2H @ 0x300003
  6124                           ;	unspecified, using default values
  6125                           ;	Brown Out Reset Voltage selection bits
  6126                           ;	BORV = 0x3, unprogrammed default
  6127                           ;	ZCD Disable bit
  6128                           ;	ZCD = 0x1, unprogrammed default
  6129                           ;	PPSLOCK bit One-Way Set Enable bit
  6130                           ;	PPS1WAY = 0x1, unprogrammed default
  6131                           ;	Stack Full/Underflow Reset Enable bit
  6132                           ;	STVREN = 0x1, unprogrammed default
  6133                           ;	Debugger Enable bit
  6134                           ;	DEBUG = 0x1, unprogrammed default
  6135                           ;	Extended Instruction Set Enable bit
  6136                           ;	XINST = 0x1, unprogrammed default
  6137  300003                     	org	3145731
  6138  300003  FF                 	db	255
  6139                           
  6140                           ;Config register CONFIG3L @ 0x300004
  6141                           ;	WDT Period Select bits
  6142                           ;	WDTCPS = 0x1F, unprogrammed default
  6143                           ;	WDT operating mode
  6144                           ;	WDTE = OFF, WDT Disabled
  6145  300004                     	org	3145732
  6146  300004  9F                 	db	159
  6147                           
  6148                           ;Config register CONFIG3H @ 0x300005
  6149                           ;	unspecified, using default values
  6150                           ;	WDT Window Select bits
  6151                           ;	WDTCWS = 0x7, unprogrammed default
  6152                           ;	WDT input clock selector
  6153                           ;	WDTCCS = 0x7, unprogrammed default
  6154  300005                     	org	3145733
  6155  300005  FF                 	db	255
  6156                           
  6157                           ;Config register CONFIG4L @ 0x300006
  6158                           ;	unspecified, using default values
  6159                           ;	Write Protection Block 0
  6160                           ;	WRT0 = 0x1, unprogrammed default
  6161                           ;	Write Protection Block 1
  6162                           ;	WRT1 = 0x1, unprogrammed default
  6163                           ;	Write Protection Block 2
  6164                           ;	WRT2 = 0x1, unprogrammed default
  6165                           ;	Write Protection Block 3
  6166                           ;	WRT3 = 0x1, unprogrammed default
  6167                           ;	Write Protection Block 3
  6168                           ;	WRT4 = 0x1, unprogrammed default
  6169                           ;	Write Protection Block 3
  6170                           ;	WRT5 = 0x1, unprogrammed default
  6171                           ;	Write Protection Block 3
  6172                           ;	WRT6 = 0x1, unprogrammed default
  6173                           ;	Write Protection Block 3
  6174                           ;	WRT7 = 0x1, unprogrammed default
  6175  300006                     	org	3145734
  6176  300006  FF                 	db	255
  6177                           
  6178                           ;Config register CONFIG4H @ 0x300007
  6179                           ;	unspecified, using default values
  6180                           ;	Configuration Register Write Protection bit
  6181                           ;	WRTC = 0x1, unprogrammed default
  6182                           ;	Boot Block Write Protection bit
  6183                           ;	WRTB = 0x1, unprogrammed default
  6184                           ;	Data EEPROM Write Protection bit
  6185                           ;	WRTD = 0x1, unprogrammed default
  6186                           ;	Scanner Enable bit
  6187                           ;	SCANE = 0x1, unprogrammed default
  6188                           ;	Low Voltage Programming Enable bit
  6189                           ;	LVP = 0x1, unprogrammed default
  6190  300007                     	org	3145735
  6191  300007  FF                 	db	255
  6192                           
  6193                           ;Config register CONFIG5L @ 0x300008
  6194                           ;	unspecified, using default values
  6195                           ;	UserNVM Program Memory Code Protection bit
  6196                           ;	CP = 0x1, unprogrammed default
  6197                           ;	DataNVM Memory Code Protection bit
  6198                           ;	CPD = 0x1, unprogrammed default
  6199  300008                     	org	3145736
  6200  300008  FF                 	db	255
  6201                           
  6202                           ;Config register CONFIG5H @ 0x300009
  6203                           ;	unspecified, using default values
  6204  300009                     	org	3145737
  6205  300009  FF                 	db	255
  6206                           
  6207                           ;Config register CONFIG6L @ 0x30000A
  6208                           ;	unspecified, using default values
  6209                           ;	Table Read Protection Block 0
  6210                           ;	EBTR0 = 0x1, unprogrammed default
  6211                           ;	Table Read Protection Block 1
  6212                           ;	EBTR1 = 0x1, unprogrammed default
  6213                           ;	Table Read Protection Block 2
  6214                           ;	EBTR2 = 0x1, unprogrammed default
  6215                           ;	Table Read Protection Block 3
  6216                           ;	EBTR3 = 0x1, unprogrammed default
  6217                           ;	Table Read Protection Block 4
  6218                           ;	EBTR4 = 0x1, unprogrammed default
  6219                           ;	Table Read Protection Block 5
  6220                           ;	EBTR5 = 0x1, unprogrammed default
  6221                           ;	Table Read Protection Block 6
  6222                           ;	EBTR6 = 0x1, unprogrammed default
  6223                           ;	Table Read Protection Block 7
  6224                           ;	EBTR7 = 0x1, unprogrammed default
  6225  30000A                     	org	3145738
  6226  30000A  FF                 	db	255
  6227                           
  6228                           ;Config register CONFIG6H @ 0x30000B
  6229                           ;	unspecified, using default values
  6230                           ;	Boot Block Table Read Protection bit
  6231                           ;	EBTRB = 0x1, unprogrammed default
  6232  30000B                     	org	3145739
  6233  30000B  FF                 	db	255
  6234                           tosu	equ	0xFFF
  6235                           tosh	equ	0xFFE
  6236                           tosl	equ	0xFFD
  6237                           stkptr	equ	0xFFC
  6238                           pclatu	equ	0xFFB
  6239                           pclath	equ	0xFFA
  6240                           pcl	equ	0xFF9
  6241                           tblptru	equ	0xFF8
  6242                           tblptrh	equ	0xFF7
  6243                           tblptrl	equ	0xFF6
  6244                           tablat	equ	0xFF5
  6245                           prodh	equ	0xFF4
  6246                           prodl	equ	0xFF3
  6247                           indf0	equ	0xFEF
  6248                           postinc0	equ	0xFEE
  6249                           postdec0	equ	0xFED
  6250                           preinc0	equ	0xFEC
  6251                           plusw0	equ	0xFEB
  6252                           fsr0h	equ	0xFEA
  6253                           fsr0l	equ	0xFE9
  6254                           wreg	equ	0xFE8
  6255                           indf1	equ	0xFE7
  6256                           postinc1	equ	0xFE6
  6257                           postdec1	equ	0xFE5
  6258                           preinc1	equ	0xFE4
  6259                           plusw1	equ	0xFE3
  6260                           fsr1h	equ	0xFE2
  6261                           fsr1l	equ	0xFE1
  6262                           bsr	equ	0xFE0
  6263                           indf2	equ	0xFDF
  6264                           postinc2	equ	0xFDE
  6265                           postdec2	equ	0xFDD
  6266                           preinc2	equ	0xFDC
  6267                           plusw2	equ	0xFDB
  6268                           fsr2h	equ	0xFDA
  6269                           fsr2l	equ	0xFD9
  6270                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         132
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      92
    BANK0           160     98     134
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2417_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    S259$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S259$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _stop_check->___xxtofl
    ___xxtofl->___lwdiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _colorclick_readColour->_colorclick_readBlue
    _colorclick_readColour->_colorclick_readClear
    _colorclick_readColour->_colorclick_readGreen
    _colorclick_readColour->_colorclick_readRed
    _colorclick_readRed->_I2C_2_Master_Read
    _colorclick_readGreen->_I2C_2_Master_Read
    _colorclick_readClear->_I2C_2_Master_Read
    _colorclick_readBlue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colorclick_init->_colorclick_writetoaddr
    _colorclick_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                87    87      0   21055
                                             20 BANK0     78    78      0
                           _ADC_init
                      _DCmotors_init
                        _Timer0_init
                        _USART4_init
                    _colorclick_init
              _colorclick_readColour
          _colorclick_toggleClearLED
                    _interrupts_init
                  _sendStringSerial4
                            _sprintf
                         _stop_check
 ---------------------------------------------------------------------------------
 (1) _stop_check                                          24    16      8   11986
                                             22 COMRAM    24    16      8
                             ___flge
                            ___fltol
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    2374
                                              8 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1074
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              1 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    7478
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12    6456
                                              0 BANK0     20     8     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             64 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              2 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colorclick_readColour                                8     0      8     699
                                             12 COMRAM     8     0      8
                _colorclick_readBlue
               _colorclick_readClear
               _colorclick_readGreen
                 _colorclick_readRed
 ---------------------------------------------------------------------------------
 (2) _colorclick_readRed                                   7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readGreen                                 7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readClear                                 7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readBlue                                  7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _colorclick_init                                      1     1      0     816
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
          _colorclick_toggleClearLED
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _colorclick_writetoaddr                               2     1      1     750
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colorclick_toggleClearLED                            1     1      0      66
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotors_init                                        1     1      0      22
                                              1 COMRAM     1     1      0
                     _buggyLEDs_init
                  _clicker2LEDs_init
               _clicker2buttons_init
 ---------------------------------------------------------------------------------
 (2) _clicker2buttons_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clicker2LEDs_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _DCmotors_init
     _buggyLEDs_init
     _clicker2LEDs_init
     _clicker2buttons_init
   _Timer0_init
   _USART4_init
   _colorclick_init
     _I2C_2_Master_Init
     _colorclick_toggleClearLED
     _colorclick_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colorclick_readColour
     _colorclick_readBlue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readClear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readGreen
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readRed
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colorclick_toggleClearLED
   _interrupts_init
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _stop_check
     ___flge
     ___fltol
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     62      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5C       1       97.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13E       8        0.0%
DATA                 0      0     13E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 18:11:19 2021

        __end_of_colorclick_readRed 2384         __end_of_colorclick_readBlue 2474  
      __end_of_colorclick_readClear 2424        __end_of_colorclick_readGreen 23D4  
                                l30 26D0                                  l33 26F6  
                                l42 2820                                  l27 26CE  
                                l36 282A                                  l45 2800  
                                l39 2816                                  l48 258C  
             __end_of_DCmotors_init 24C4                                  bsr 000FE0  
    __size_of_colorclick_readColour 0044       __end_of_colorclick_readColour 254C  
            _colorclick_writetoaddr 2740                                 l302 27F4  
                               l334 27B8                                 l183 24C2  
                               l193 280C                                 l196 2834  
                               l534 13A8                                 l199 27E6  
                               l471 2382                                 l391 27D0  
                               l480 2422                                 l465 273E  
                               l474 23D2                                 l802 2034  
                               l299 279E                                 l379 277E  
                               l459 260C                                 l483 254A  
                               l651 1D0C                                 l468 275E  
                               l388 27BC                                 l477 2472  
                               l397 26A4                                 l807 207A  
                               l664 1E70                                 l834 1F76  
                               _abs 258E                                 _pad 2146  
                               wreg 000FE8                     _colorclick_init 25CE  
                      ___fltol@exp1 000B                                l1035 227E  
                              ?_abs 0014                                l1028 2276  
                              l1206 17D8                                l1215 2332  
                              l3001 12E4                                l1306 2144  
                              l1314 2506                                l1242 218C  
                              l1323 2642                                l3011 1382  
                              l3003 12E8                                l1317 2836  
                              l1245 21CE                                l1253 144A  
                              l3005 131A                                l3013 1382  
                              l1247 220A                                l1255 1452  
                              l3007 134C                                l1280 19F4  
                              l1192 16E4                                l2401 1BEE  
                              l1273 168C                                l3009 137E  
                              l2411 1C42                                l2403 1BFA  
                              l1291 25C4                                l1195 1840  
                              l2421 1CB6                                l2413 1C54  
                              l2405 1C18                                l2501 13F2  
                              l1294 25CC                                l1286 22D8  
                              l2415 1C82                                l2407 1C20  
                              l2423 1CBC                                l2431 1D0E  
                              l2511 145A                                l2503 1412  
                              l1287 22E0                                l1199 177C  
                              l2425 1CCC                                l2417 1CA2  
                              l2409 1C34                                l2441 1D52  
                              l2433 1D12                                l2361 20AA  
                              l2521 1492                                l2513 146C  
                              l2505 1422                                l2601 18D2  
                              l3401 1A04                                l2427 1CEC  
                              l2419 1CA4                                l2451 1DBA  
                              l2443 1D72                                l2435 1D20  
                              l2363 20C8                                l2355 207C  
                              l2371 24D0                                l2523 1498  
                              l2531 158A                                l2515 147A  
                              l2507 1424                                l2611 1984  
                              l2603 191A                                l3411 1A1A  
                              l3403 1A08                                l2461 1E30  
                              l2453 1DE8                                l2445 1D90  
                              l2437 1D40                                l2365 20FE  
                              l2357 208E                                l2373 24E2  
                              l2381 261E                                l2533 15A4  
                              l2541 1606                                l2525 151A  
                              l2517 1480                                l2509 143E  
                              l2613 1998                                l2701 2002  
                              l3421 1A38                                l3413 1A20  
                              l3405 1A0C                                l2631 26A6  
                              l2391 1B98                                l2463 1E50  
                              l2455 1E08                                l2447 1D98  
                              l2439 1D44                                l2359 20A0  
                              l2375 24E6                                l2383 2636  
                              l2471 216A                                l2551 164C  
                              l2543 1618                                l2535 15C2  
                              l2527 1520                                l2519 1488  
                              l2607 1952                                l2623 19BE  
                              l2703 2014                                l3431 1A58  
                              l3423 1A40                                l3415 1A24  
                              l3407 1A12                                l2641 26BC  
                              l2633 26B0                                l2561 2826  
                              l2393 1BB8                                l2457 1E1A  
                              l2449 1DAC                                l2369 24C4  
                              l2377 260E                                l2481 21B0  
                              l2473 2178                                l2553 1654  
                              l2545 1628                                l2537 15DC  
                              l2529 1526                                l2625 19E2  
                              l2609 1976                                l2617 19A4  
                              l2705 2022                                l2721 1EC6  
                              l2713 1E72                                l2801 1772  
                              l3441 1A6A                                l3433 1A5C  
                              l3425 1A44                                l3417 1A2C  
                              l3409 1A16                                l2635 26B6  
                              l2643 2720                                l2571 27F8  
                              l2563 280E                                l2395 1BBC  
                              l2387 1B86                                l2459 1E20  
                              l2491 25A8                                l2379 261A  
                              l2483 21DE                                l2475 2184  
                              l2467 2146                                l2547 162E  
                              l2555 1664                                l2539 15F6  
                              l2619 19B2                                l2707 2072  
                              l2723 1EC8                                l2715 1E88  
                              l2811 17E8                                l2803 17AE  
                              l3451 1ACC                                l3443 1A70  
                              l3435 1A64                                l3427 1A48  
                              l3419 1A34                                l2645 2802  
                              l2901 2778                                l2637 26B8  
                              l2493 26D0                                l2573 27FC  
                              l2661 2742                                l2581 2562  
                              l2565 2812                                l2397 1BCA  
                              l2389 1B8A                                l2485 21F2  
                              l2477 2198                                l2469 2156  
                              l2549 1640                                l2709 2078  
                              l2725 1ED8                                l2821 1830  
                              l2813 17EC                                l2805 17BA  
                              l3461 1AF0                                l3453 1ACC  
                              l3445 1A8A                                l3437 1A66  
                              l3429 1A50                                l2647 282C  
                              l2911 2792                                l2903 277A  
                              l2639 26BA                                l2495 26E0  
                              l2559 2822                                l2567 2818  
                              l2583 2588                                l2575 254E  
                              l2663 27BC                                l2399 1BEA  
                              l2479 21AC                                l2591 1866  
                              l2831 22BC                                l2751 1F56  
                              l2735 1F02                                l2727 1EDC  
                              l2719 1E9C                                l2815 1810  
                              l2807 17C8                                l3471 1B54  
                              l3463 1AF0                                l3455 1ACC  
                              l3447 1AAE                                l3439 1A68  
                              l2841 27B6                                l2833 27A0  
                              l2649 27D2                                l2913 279C  
                              l2905 277C                                l2569 281C  
                              l2585 258A                                l2577 2552  
                              l2681 246A                                l2673 2384  
                              l2921 27E8                                l2665 27CC  
                              l2489 258E                                l2497 13AA  
                              l2593 1874                                l2825 2280  
                              l2753 1F66                                l2745 1F2A  
                              l2737 1F0C                                l2729 1EEA  
                              l2761 2226                                l2817 1820  
                              l2809 17E6                                l3465 1AF8  
                              l3457 1AF0                                l3449 1AC8  
                              l2835 27AA                                l2907 2780  
                              l2851 25F6                                l2843 25CE  
                              l2579 255A                                l2675 23CA  
                              l2667 2334                                l2915 2508  
                              l2499 13CA                                l2595 1886  
                              l2827 2288                                l2931 2320  
                              l2923 22E2                                l2691 1F78  
                              l2747 1F36                                l2739 1F16  
                              l2771 2260                                l2763 222E  
                              l2819 182E                                l3467 1B2E  
                              l3459 1AF0                                l2837 27B2  
                              l2861 2476                                l2909 2788  
                              l2853 2600                                l2845 25D2  
                              l2685 23D4                                l2669 237A  
                              l2917 2538                                l2941 268C  
                              l2597 188A                                l2589 1842  
                              l2829 2296                                l2925 22F4  
                              l2693 1FA6                                l2749 1F46  
                              l2773 2268                                l2765 2236  
                              l2757 220C                                l2781 16A0  
                              l3469 1B3A                                ?_pad 0012  
                              l2839 27B4                                l2871 2494  
                              l2863 248A                                l2855 2602  
                              l2847 25DC                                l2679 2424  
                              l2687 241A                                l2935 2676  
                              l2599 18AE                                l2927 22FC  
                              l2695 1FB6                                l2775 226A  
                              l2767 2244                                l2759 2214  
                              l2791 171E                                l2783 16AE  
                              l2951 0F16                                l2943 0E10  
                              l3399 19F6                                l2881 249E  
                              l2873 2496                                l2865 248E  
                              l2857 2604                                l2849 25EC  
                              l2937 267A                                l2929 2304  
                              l2697 1FE4                                l2777 2270  
                              l2769 224A                                l2793 1726  
                              l2785 16F4                                l2961 0FE2  
                              l2953 0F48                                l2945 0EB2  
                              l2891 24BE                                l2883 24A8  
                              l2875 2498                                l2867 2490  
                              l2859 2606                                l2939 2688  
                              l2699 1FF4                                l2795 1732  
                              l2787 170A                                l2779 1690  
                              l2971 1080                                l2963 0FE6  
                              l2955 0F4C                                l2947 0EB2  
                              l2885 24AA                                l2877 249A  
                              l2869 2492                                l2893 2760  
                              l2797 1764                                l2981 114C  
                              l2973 10B2                                l2965 1018  
                              l2957 0F7E                                l2949 0EE4  
                              l2887 24B6                                l2879 249C  
                              l2895 276A                                l2799 1766  
                              l2991 1218                                l2983 117E  
                              l2975 10E4                                l2967 104A  
                              l2959 0FB0                                l2889 24BA  
                              l2897 276C                                l2993 124A  
                              l2985 11B0                                l2977 1116  
                              l2969 107C                                l2899 276E  
                              l2995 124E                                l2987 11B4  
                              l2979 111A                                l2997 1280  
                              l2989 11E6                                l2999 12B2  
                              STR_1 0E01                                u2000 147A  
                              u2001 1476                                u2010 15A4  
                              u2011 15A0                                u2020 15C2  
                              u2021 15BE                                u2030 15DC  
                              u2110 1866                                u2031 15D8  
                              u2111 1862                                u2040 15F6  
                              u2120 18AE                                u2200 1FA6  
                              u2041 15F2                                u2121 18AA  
                              u2201 1FA2                                u2050 1606  
                              u2130 18D2                                u2210 1FE4  
                              u2051 1602                                u2131 18CE  
                              u2211 1FE0                                u2108 2578  
                              u2060 1618                                u2140 1976  
                              u2220 2002                                u2300 1F46  
                              u2061 1614                                u2141 1972  
                              u2221 1FFE                                u2301 1F42  
                              u2070 1628                                u2230 2022  
                              u2310 1F56                                u2071 1624  
                              u2231 201E                                u2311 1F52  
                              u2080 1640                                u2240 2072  
                              u2320 2226                                u2400 17C8  
                      _BAUD4CONbits 000EE9                                u2081 163C  
                              u2241 206E                                u2321 2222  
                              u2401 17C4                                _LATE 000F7D  
                              u2090 2576                                u2250 1E88  
                              u2330 2244                                u2410 17D8  
                              u2155 2728                                u2091 256E  
                              u2251 1E84                                u2331 2240  
                              u2411 17D4                                _LATG 000F7F  
                              u2156 272A                                u1700 20C8  
                              u2260 1EBC                                u2340 2260  
                              u2420 17E6                                u2500 0F48  
                              u2165 2732                                u1701 20C4  
                              u2341 225C                                u2421 17E2  
                              u2501 0F44                                u2166 2734  
                              u2190 27CC                                u1710 20FE  
                              u2270 1EEA                                u2430 1820  
                              u2350 16A0                                u2510 0F7E  
                              u2175 273C                                u2191 27C8  
                              u1711 20FA                                u2271 1EE6  
                              u2431 181C                                u2351 169C  
                              u2511 0F7A                                u2176 273E  
                              u1800 1CCC                                u1720 2506  
                              u2280 1EFE                                u2440 182E  
                              u2360 16AE                                u2600 114C  
                              u2520 0FB0                                u1801 1CC8  
                              u1721 2502                                u2281 1EFA  
                              u2265 1EB2                                u2441 182A  
                              u2361 16AA                                u2601 1148  
                              u2521 0FAC                                u3401 1B5E  
                              u1810 1D20                                u1730 2636  
                              u2450 22D8                                u2290 1F26  
                              u2370 170A                                u2610 117E  
                              u2530 0FE2                                _T2PR 000FBC  
                              u1811 1D1C                                u1731 2632  
                              u2451 22D4                                u2291 1F22  
                              u2371 1706                                u2611 117A  
                              u2531 0FDE                                u1740 1B98  
                              u1820 1D52                                u1900 21DE  
                              u2380 1760                                u2700 134C  
                              u2620 11B0                                u2540 1018  
                              u2461 2542                                u1741 1B94  
                              u1821 1D4E                                u1901 21DA  
                              u2381 175C                                u2701 1348  
                              u2621 11AC                                u2541 1014  
                              u2470 26A4                                u1750 1BCA  
                              u1830 1D90                                u1910 25A8  
                              u2390 17AA                                u2710 137E  
                              u2630 11E6                                u2550 104A  
                              u2471 26A0                                u1751 1BC6  
                              u1831 1D8C                                u1911 25A4  
                              u2391 17A6                                u2711 137A  
                              u2631 11E2                                u2551 1046  
                              u1920 26E0                                u1840 1DBA  
                              u1680 208E                                u2640 1218  
                              u2560 107C                                u2480 0EE4  
                              u1921 26DC                                u1761 1BF4  
                              u1841 1DB6                                u1681 208A  
                              u2641 1214                                u2561 1078  
                              u2481 0EE0                                u3361 1A94  
                              u3417 1A7C                                u1930 26F6  
                              u1770 1C18                                u1850 1DE8  
                              u1690 20A0                                u2650 124A  
                              u2570 10B2                                u2490 0F16  
                              u1931 26F2                                u1771 1C14  
                              u1851 1DE4                                u1691 209C  
                              u2651 1246                                u2571 10AE  
                              u2491 0F12                                u3427 1ABA  
                              u3371 1AA6                                u1780 1C42  
                              u1860 1E30                                u1940 13DA  
                              u2660 1280                                u2580 10E4  
                              u1781 1C3E                                u1861 1E2C  
                              u1941 13D4                                u2661 127C  
                              u2581 10E0                                u3437 1B46  
                              u3381 1AD6                                u1790 1C82  
                              u1870 2156                                u1950 13DC  
                              u2670 12B2                                u2590 1116  
                              u3447 25E2                                u1791 1C7E  
                              u1871 2152                                u2671 12AE  
                              u2591 1112                                u3391 1AE8  
                              u1880 2178                                u1960 13F2  
                              u2680 12E4                                u1881 2174  
                              u1961 13EE                                u2681 12E0  
                              u1890 21CE                                u1970 1422  
                              u2690 131A                                u1891 21CA  
                              u1971 141E                                u2691 1316  
                              u1980 143E                                u1981 143A  
                              u1990 146C                                u1991 1468  
     colorclick_writetoaddr@address 0005                         main@current 00A8  
                       main@initial 00A0   __end_of_colorclick_toggleClearLED 2740  
           __end_of_interrupts_init 27F6                                abs@a 0014  
                              _dbuf 013C                                _main 19F6  
                              _dtoa 13AA                                _prec 00DA  
                              _nout 00D6                                pad@i 0019  
                              pad@p 0016                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr1l 000FE1                                pad@w 001B  
                              fsr2l 000FD9                                btemp 005D  
                              start 0026                    __end_of_ADC_init 27BA  
                   __end_of_HighISR 271E                        ___param_bank 000000  
                             ??_abs 0016                               ??_pad 0018  
            ??_clicker2buttons_init 0002                       ___fltol@sign1 000A  
                   __end_of___aodiv 1D0E                               ?_main 0001  
                             ?_dtoa 001D                     __end_of___aomod 1E72  
                             _ADPCH 000F5F                     __end_of___fltol 1F78  
                   __end_of___lwdiv 2280                               i1l319 001E  
                             i2l314 271A                        vfpfcnvrt@fmt 0043  
                             _TMR0H 000FD4                               _TMR0L 000FD3  
           __end_of_sendCharSerial4 27D2          __end_of_I2C_2_Master_Start 282C  
        __end_of_I2C_2_Master_Write 2802                               _flags 00DC  
                             _fputc 207C                               _fputs 24C4  
                             pad@fp 0012                               _width 00D8  
                             _putch 2836                               dtoa@d 001F  
                             dtoa@i 003F                   _clicker2LEDs_init 282C  
                             dtoa@n 0037                               dtoa@p 0031  
                             dtoa@s 0035                               dtoa@w 0033  
                             tablat 000FF5                               plusw0 000FEB  
                             plusw2 000FDB              DCmotors_init@PWMperiod 0002  
                ?_clicker2LEDs_init 0001                               ttemp5 005E  
                             ttemp6 0061                               ttemp7 0065  
                             status 000FD8                               wtemp8 005E  
                   __end_of_sprintf 2334               _I2C_2_Master_RepStart 280E  
                   __initialization 2644                 ??_clicker2LEDs_init 0002  
                      __end_of_main 1B86                        __end_of_dtoa 168E  
                            ??_main 0074                              ??_dtoa 0027  
           __end_of_colorclick_init 260E                       __activetblptr 000001  
         __end_of_clicker2LEDs_init 2836                              ?_fputc 0002  
                            ?_fputs 000B                              _ADRESH 000F64  
                            ?_putch 0001                _colorclick_readClear 23D4  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                            i2l3201 26F8                              i2l3203 2708  
                            i2l3205 2716                _colorclick_readGreen 2384  
                  ?_interrupts_init 0001                           ??_HighISR 0001  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                  __end_of___xxtofl 1842                              _LowISR 0018  
                     ??_Timer0_init 0002                        vfprintf@cfmt 0057  
                            ___flge 1F78                           ??___aodiv 0012  
                         ??___aomod 0012                           ??___fltol 0006  
                         ??___lwdiv 0006                    ??_buggyLEDs_init 0002  
                            clear_0 264A                              clear_1 2656  
                            isa$std 000001                              pad@buf 0014  
                            dtoa@fp 001D                              _strlen 260E  
                            fputc@c 0002                              fputs@c 000F  
                            fputs@i 0010                              fputs@s 000B  
   colorclick_toggleClearLED@toggle 0002                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                           ?_ADC_init 0001  
                  ?_sendCharSerial4 0001                              putch@c 0001  
                  __end_of_vfprintf 22E2                           ??_sprintf 0059  
                      ?_USART4_init 0001               ?_colorclick_readClear 0006  
             ?_colorclick_readGreen 0006                          ___flge@ff1 0002  
                        ___flge@ff2 0006                        ___xxtofl@arg 0013  
                      ___xxtofl@exp 0012                        ___xxtofl@val 0009  
                        __accesstop 0060             __end_of__initialization 2664  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
                        ___fltol@f1 0002                      __pcstackCOMRAM 0001  
           ?_colorclick_writetoaddr 0004                       __end_of_fputc 2146  
                     __end_of_fputs 2508                       __end_of_putch 2838  
               __end_of_Timer0_init 27A0                    ?_colorclick_init 0001  
                _colorclick_readRed 2334                          ??_ADC_init 0002  
        __size_of_clicker2LEDs_init 000A                             ??_fputc 0006  
                           ??_fputs 000F                             ??_putch 0002  
               ?_colorclick_readRed 0006                          __pbssBANK0 00C2  
                        __pbssBANK1 0100                        _battery_flag 00E5  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
    __end_of_colorclick_writetoaddr 2760                             ?___flge 0002  
              ??_colorclick_readRed 0008                             ?_strlen 0002  
      __size_of_colorclick_readBlue 0050               _colorclick_readColour 2508  
                         ?___xxtofl 0009                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                  __size_of_vfpfcnvrt 01B4  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6              ??_colorclick_readClear 0008  
                           _SSP2BUF 000ED5              ??_colorclick_readGreen 0008  
            __size_of_DCmotors_init 0050                             _HighISR 0008  
        ?_colorclick_toggleClearLED 0001                           _ADREFbits 000F58  
                _I2C_2_Master_Start 2822                  _I2C_2_Master_Write 27F6  
                           __Hparam 0000                             __Lparam 0000  
                   __size_of_LowISR 000E                         _Timer0_init 2780  
           sendStringSerial4@string 0003                     __size_of___flge 0104  
                           ___aodiv 1B86                             ___aomod 1D0E  
                           ___fltol 1E72                 ?_I2C_2_Master_Start 0001  
                           ___lwdiv 220C                 ?_I2C_2_Master_Write 0001  
                         ?_vfprintf 0051                        __psmallconst 0E00  
                           __pcinit 2644             colorclick_readClear@tmp 000B  
                           __ramtop 0E00                             __ptext0 19F6  
                           __ptext1 0E10                             __ptext2 168E  
                           __ptext3 220C                             __ptext4 1E72  
                           __ptext5 1F78                             __ptext6 22E2  
                           __ptext7 2280                             __ptext8 1842  
                           __ptext9 13AA       __size_of_clicker2buttons_init 000C  
                   __size_of_strlen 0036                           _T2CONbits 000FBD  
                      __size_of_abs 0040                        __size_of_pad 00C6  
                        ??___xxtofl 000D                           _T2HLTbits 000FBE  
                     _RxBufWriteCnt 005B                             main@buf 0076  
                           _sprintf 22E2                ??_I2C_2_Master_Start 0003  
              ??_I2C_2_Master_Write 0003                      __pintcode_body 26F8  
              end_of_initialization 2664             colorclick_readGreen@tmp 000B  
                           fputc@fp 0004                __size_of_USART4_init 0020  
                           int_func 26F8                             fputs@fp 000D  
                 __end_of_vfpfcnvrt 19F6                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                          ??_vfprintf 0057  
                           strlen@a 0004                             strlen@s 0002  
                     _DCmotors_init 2474              ?_colorclick_readColour 000D  
                     ___xxtofl@sign 0011                           _TRISAbits 000F81  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                 __size_of_ADC_init 001A             ??_I2C_2_Master_RepStart 0003  
                      _EUSART4RXbuf 00C2                        _EUSART4TXbuf 0100  
         sendCharSerial4@charToSend 0002                          main@motorL 00B0  
                        main@motorR 00B9                          _stop_check 0E10  
                    __end_of_LowISR 0026            __size_of_interrupts_init 000E  
                stop_check@stop_pls 001F                      __end_of___flge 207C  
                    ?_DCmotors_init 0001                         vfpfcnvrt@ap 0045  
                       vfpfcnvrt@fp 0041                         vfpfcnvrt@ll 0049  
                    __end_of_strlen 2644                 start_initialization 2644  
                       __end_of_abs 25CE                         __end_of_pad 220C  
                     _TxBufWriteCnt 005A                     _returnhome_flag 005C  
          __size_of_sendCharSerial4 0018                 _colorclick_readBlue 2424  
                          ??_LowISR 0001                         vfprintf@fmt 0053  
                          ??___flge 000A                            ??_strlen 0004  
              ?_colorclick_readBlue 0006                         __pbssCOMRAM 0059  
                     __pcstackBANK0 0060                    ___aodiv@dividend 0002  
           __size_of_buggyLEDs_init 0016                   __size_of___xxtofl 01B4  
          __size_of_colorclick_init 0040                            ?_HighISR 0001  
                         _card_flag 00E3         ??_colorclick_toggleClearLED 0002  
                       ?_stop_check 0017                    ___lwdiv@dividend 0002  
                         _dtoa$2490 002F                        ?_Timer0_init 0001  
                       _clear_lower 00E0                         _clear_upper 00DE  
                         __pintcode 0008                     ??_DCmotors_init 0002  
                          ?___aodiv 0002                            ?___aomod 0002  
                  ___aodiv@quotient 0014                            ?___fltol 0002  
                          ?___lwdiv 0002         __size_of_colorclick_readRed 0050  
                       __pintcodelo 0018               ??_colorclick_readBlue 0008  
              I2C_2_Master_Read@ack 0004                   __size_of_vfprintf 0062  
                 ??_interrupts_init 0002                I2C_2_Master_Read@tmp 0005  
                       __smallconst 0E00                   _I2C_2_Master_Idle 26D0  
                 _I2C_2_Master_Init 26A6                   _I2C_2_Master_Read 254C  
                 _I2C_2_Master_Stop 2818                        _RxBufReadCnt 00E4  
                          _ADC_init 27A0                  ?_I2C_2_Master_Idle 0001  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 0006  
                          ?_sprintf 0060                      __size_of_fputc 00CA  
                    __size_of_fputs 0044                      __size_of_putch 0002  
     __size_of_colorclick_readClear 0050              colorclick_readBlue@tmp 000B  
     __size_of_colorclick_readGreen 0050        __end_of_clicker2buttons_init 280E  
                 _sendStringSerial4 2676                 ??_I2C_2_Master_Idle 0002  
               ??_I2C_2_Master_Init 0002                 ??_I2C_2_Master_Read 0003  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0003  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F         colorclick_writetoaddr@value 0004  
                          _LATHbits 000F80                            _IPR0bits 000E1F  
                          _PIE0bits 000E29                  ?_sendStringSerial4 0003  
                          _PIE4bits 000E2D                            i2u301_40 2708  
                          i2u301_41 2704                            _PIR0bits 000E33  
                          _PIR4bits 000E37                   ??_sendCharSerial4 0002  
                          _SSP2CON2 000EDA                 ??_sendStringSerial4 0005  
                          _SSP2STAT 000ED8             ??_colorclick_readColour 0015  
                         _vfpfcnvrt 1842                          _ADCON0bits 000F60  
         __end_of_I2C_2_Master_Idle 26F8           _colorclick_toggleClearLED 271E  
         __end_of_I2C_2_Master_Init 26D0           __end_of_I2C_2_Master_Read 258E  
         __end_of_I2C_2_Master_Stop 2822                   stop_check@current 0017  
       I2C_2_Master_Write@data_byte 0003                 __size_of_stop_check 059A  
                      _TxBufReadCnt 0059                       ??_USART4_init 0002  
         __end_of_sendStringSerial4 26A6         __size_of_I2C_2_Master_Start 000A  
       __size_of_I2C_2_Master_Write 000C        colorclick_readColour@current 000D  
    __size_of_I2C_2_Master_RepStart 000A       __end_of_I2C_2_Master_RepStart 2818  
          ??_colorclick_writetoaddr 0005                    __size_of_HighISR 2716  
                 ??_colorclick_init 0006                            __Hrparam 0000  
                        vfprintf@ap 0055                            __Lrparam 0000  
                        vfprintf@fp 0051                        __Lsmallconst 0E00  
                  __size_of___aodiv 0188                    __size_of___aomod 0164  
                  __size_of___fltol 0106                          ?_vfpfcnvrt 0041  
                  __size_of___lwdiv 0074                     ___aodiv@divisor 000A  
                   ___aodiv@counter 0012                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                          sprintf@fmt 0062  
                          ___xxtofl 168E                          _T0CON0bits 000FD5  
                        _T0CON1bits 000FD6                      _buggyLEDs_init 27D2  
                   ___lwdiv@divisor 0004                     ___lwdiv@counter 0008  
                          __ptext10 2146                            __ptext11 260E  
                          __ptext20 27E8                            __ptext12 24C4  
                          __ptext21 2508                            __ptext13 207C  
                          __ptext30 27F6                            __ptext22 2334  
                          __ptext14 2836                            __ptext31 2818  
                          __ptext23 2384                            __ptext15 258E  
                          __ptext40 282C                            __ptext32 2822  
                          __ptext24 23D4                            __ptext16 1D0E  
                          __ptext41 27D2                            __ptext33 26D0  
                          __ptext25 2424                            __ptext17 1B86  
                          __ptext42 27A0                            __ptext34 271E  
                          __ptext26 280E                            __ptext18 2676  
                          __ptext35 26A6                            __ptext27 254C  
                          __ptext19 27BA                            __ptext36 2760  
                          __ptext28 25CE                            __ptext37 2780  
                          __ptext29 2740                            __ptext38 2474  
                          __ptext39 2802                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                    __size_of_sprintf 0052  
                     __size_of_main 0190                       __size_of_dtoa 02E4  
                          _read_val 00E2                 __end_of_USART4_init 2780  
             colorclick_readRed@tmp 000B                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 005D  
              __size_of_Timer0_init 0020                            _vfprintf 2280  
                          main@tmpC 009E          __size_of_I2C_2_Master_Idle 0028  
        __size_of_I2C_2_Master_Init 002A          __size_of_I2C_2_Master_Read 0042  
                  ___aomod@dividend 0002                _clicker2buttons_init 2802  
        __size_of_I2C_2_Master_Stop 000A              __end_of_buggyLEDs_init 27E8  
                        _INTCONbits 000FF2                         _PWM6CONbits 000FA4  
        __size_of_sendStringSerial4 0030                         _PWM7CONbits 000FA1  
                          intlevel1 0000                            intlevel2 0000  
                         sprintf@ap 006C     __size_of_colorclick_writetoaddr 0020  
                   stop_check@B_rel 002B                        ??_stop_check 001F  
                   stop_check@G_rel 0027                     stop_check@R_rel 0023  
                   _interrupts_init 27E8                     ___aomod@divisor 000A  
                       ??_vfpfcnvrt 0047                     ___aomod@counter 0012  
             ?_clicker2buttons_init 0001                            sprintf@f 006E  
                          sprintf@s 0060                     ?_buggyLEDs_init 0001  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                __end_of_stop_check 13AA  __size_of_colorclick_toggleClearLED 0022  
                       _USART4_init 2760                          _TX4STAbits 000EE8  
                      ___aodiv@sign 0013                     _sendCharSerial4 27BA  
                      ___aomod@sign 0013  
