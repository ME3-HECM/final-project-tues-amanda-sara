

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec  7 11:26:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64  0000                     
    65                           ; Version 2.20
    66                           ; Generated 05/05/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F67K40 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     _INT1PPS	set	3569
   100  0000                     _PIE4bits	set	3629
   101  0000                     _TX4REG	set	3812
   102  0000                     _RC4REG	set	3811
   103  0000                     _PIR4bits	set	3639
   104  0000                     _RC4STAbits	set	3815
   105  0000                     _SP4BRGH	set	3814
   106  0000                     _SP4BRGL	set	3813
   107  0000                     _TX4STAbits	set	3816
   108  0000                     _BAUD4CONbits	set	3817
   109  0000                     _RX4PPS	set	3605
   110  0000                     _RC0PPS	set	3682
   111  0000                     _ANSELFbits	set	3764
   112  0000                     _PIR0bits	set	3635
   113  0000                     _IPR0bits	set	3615
   114  0000                     _PIE0bits	set	3625
   115  0000                     _ANSELBbits	set	3738
   116  0000                     _RC7PPS	set	3689
   117  0000                     _RE2PPS	set	3700
   118  0000                     _SSP2BUF	set	3797
   119  0000                     _SSP2CON2bits	set	3802
   120  0000                     _SSP2CON2	set	3802
   121  0000                     _SSP2STAT	set	3800
   122  0000                     _RD6PPS	set	3696
   123  0000                     _RD5PPS	set	3695
   124  0000                     _SSP2CLKPPS	set	3612
   125  0000                     _SSP2DATPPS	set	3613
   126  0000                     _ANSELDbits	set	3751
   127  0000                     _SSP2ADD	set	3798
   128  0000                     _SSP2CON1bits	set	3801
   129  0000                     _ADPCH	set	3935
   130  0000                     _ADREFbits	set	3928
   131  0000                     _LATAbits	set	3961
   132  0000                     _TRISAbits	set	3969
   133  0000                     _ADRESH	set	3940
   134  0000                     _ADCON0bits	set	3936
   135  0000                     _INTCONbits	set	4082
   136  0000                     _TRISBbits	set	3970
   137  0000                     _LATFbits	set	3966
   138  0000                     _TRISFbits	set	3974
   139  0000                     _PWM7CONbits	set	4001
   140  0000                     _PWM6CONbits	set	4004
   141  0000                     _PWM7DCH	set	4000
   142  0000                     _PWM6DCH	set	4003
   143  0000                     _LATGbits	set	3967
   144  0000                     _LATCbits	set	3963
   145  0000                     _LATEbits	set	3965
   146  0000                     _TRISGbits	set	3975
   147  0000                     _TRISCbits	set	3971
   148  0000                     _TRISEbits	set	3973
   149  0000                     _T2PR	set	4028
   150  0000                     _T2CLKCONbits	set	4031
   151  0000                     _T2HLTbits	set	4030
   152  0000                     _T2CONbits	set	4029
   153  0000                     _LATDbits	set	3964
   154  0000                     _LATHbits	set	3968
   155  0000                     _TRISHbits	set	3976
   156  0000                     _TRISDbits	set	3972
   157                           
   158                           	psect	smallconst
   159  000E00                     __psmallconst:
   160                           	callstack 0
   161  000E00  00                 	db	0
   162  000E01                     STR_1:
   163                           
   164                           ; BSR set to: 14
   165  000E01  25                 	db	37
   166  000E02  69                 	db	105	;'i'
   167  000E03  20                 	db	32
   168  000E04  25                 	db	37
   169  000E05  69                 	db	105	;'i'
   170  000E06  20                 	db	32
   171  000E07  25                 	db	37
   172  000E08  69                 	db	105	;'i'
   173  000E09  20                 	db	32
   174  000E0A  25                 	db	37
   175  000E0B  69                 	db	105	;'i'
   176  000E0C  0A                 	db	10
   177  000E0D  00                 	db	0
   178  000E0E  00                 	db	0	; dummy byte at the end
   179  0000                     
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183  001D4E                     __pcinit:
   184                           	callstack 0
   185  001D4E                     start_initialization:
   186                           	callstack 0
   187  001D4E                     __initialization:
   188                           	callstack 0
   189                           
   190                           ; Clear objects allocated to BANK1 (60 bytes)
   191  001D4E  EE01  F040         	lfsr	0,__pbssBANK1
   192  001D52  0E3C               	movlw	60
   193  001D54                     clear_0:
   194  001D54  6AEE               	clrf	postinc0,c
   195  001D56  06E8               	decf	wreg,f,c
   196  001D58  E1FD               	bnz	clear_0
   197                           
   198                           ; Clear objects allocated to BANK0 (61 bytes)
   199  001D5A  EE00  F060         	lfsr	0,__pbssBANK0
   200  001D5E  0E3D               	movlw	61
   201  001D60                     clear_1:
   202  001D60  6AEE               	clrf	postinc0,c
   203  001D62  06E8               	decf	wreg,f,c
   204  001D64  E1FD               	bnz	clear_1
   205                           
   206                           ; Clear objects allocated to COMRAM (9 bytes)
   207  001D66  EE00  F04E         	lfsr	0,__pbssCOMRAM
   208  001D6A  0E09               	movlw	9
   209  001D6C                     clear_2:
   210  001D6C  6AEE               	clrf	postinc0,c
   211  001D6E  06E8               	decf	wreg,f,c
   212  001D70  E1FD               	bnz	clear_2
   213  001D72                     end_of_initialization:
   214                           	callstack 0
   215  001D72                     __end_of__initialization:
   216                           	callstack 0
   217  001D72  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   218  001D74  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   219  001D76  0E00               	movlw	low (__Lsmallconst shr (0+16))
   220  001D78  6EF8               	movwf	tblptru,c
   221  001D7A  0E0E               	movlw	high __Lsmallconst
   222  001D7C  6EF7               	movwf	tblptrh,c
   223  001D7E  0100               	movlb	0
   224  001D80  EF53  F009         	goto	_main	;jump to C main() function
   225                           
   226                           	psect	bssCOMRAM
   227  00004E                     __pbssCOMRAM:
   228                           	callstack 0
   229  00004E                     _clear_upper:
   230                           	callstack 0
   231  00004E                     	ds	2
   232  000050                     _clear_lower:
   233                           	callstack 0
   234  000050                     	ds	2
   235  000052                     _battery_flag:
   236                           	callstack 0
   237  000052                     	ds	1
   238  000053                     _TxBufReadCnt:
   239                           	callstack 0
   240  000053                     	ds	1
   241  000054                     _TxBufWriteCnt:
   242                           	callstack 0
   243  000054                     	ds	1
   244  000055                     _RxBufReadCnt:
   245                           	callstack 0
   246  000055                     	ds	1
   247  000056                     _RxBufWriteCnt:
   248                           	callstack 0
   249  000056                     	ds	1
   250                           
   251                           	psect	bssBANK0
   252  000060                     __pbssBANK0:
   253                           	callstack 0
   254  000060                     _EUSART4RXbuf:
   255                           	callstack 0
   256  000060                     	ds	20
   257  000074                     _nout:
   258                           	callstack 0
   259  000074                     	ds	2
   260  000076                     _width:
   261                           	callstack 0
   262  000076                     	ds	2
   263  000078                     _prec:
   264                           	callstack 0
   265  000078                     	ds	2
   266  00007A                     _flags:
   267                           	callstack 0
   268  00007A                     	ds	2
   269  00007C                     _card_flag:
   270                           	callstack 0
   271  00007C                     	ds	1
   272  00007D                     _dbuf:
   273                           	callstack 0
   274  00007D                     	ds	32
   275                           
   276                           	psect	bssBANK1
   277  000140                     __pbssBANK1:
   278                           	callstack 0
   279  000140                     _EUSART4TXbuf:
   280                           	callstack 0
   281  000140                     	ds	60
   282                           
   283                           	psect	cstackBANK1
   284  000100                     __pcstackBANK1:
   285                           	callstack 0
   286  000100                     main@buf:
   287                           	callstack 0
   288                           
   289                           ; 40 bytes @ 0x0
   290  000100                     	ds	40
   291  000128                     main@tmpR:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x28
   295  000128                     	ds	2
   296  00012A                     main@tmpG:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x2A
   300  00012A                     	ds	2
   301  00012C                     main@tmpB:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x2C
   305  00012C                     	ds	2
   306  00012E                     main@tmpC:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x2E
   310  00012E                     	ds	2
   311  000130                     main@current:
   312                           	callstack 0
   313                           
   314                           ; 8 bytes @ 0x30
   315  000130                     	ds	8
   316  000138                     main@initial:
   317                           	callstack 0
   318                           
   319                           ; 8 bytes @ 0x38
   320  000138                     	ds	8
   321                           
   322                           	psect	cstackBANK0
   323  00009D                     __pcstackBANK0:
   324                           	callstack 0
   325  00009D                     ??_vfpfcnvrt:
   326                           
   327                           ; 1 bytes @ 0x0
   328  00009D                     	ds	2
   329  00009F                     vfpfcnvrt@ll:
   330                           	callstack 0
   331                           
   332                           ; 8 bytes @ 0x2
   333  00009F                     	ds	8
   334  0000A7                     ?_vfprintf:
   335                           	callstack 0
   336  0000A7                     vfprintf@fp:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0xA
   340  0000A7                     	ds	2
   341  0000A9                     vfprintf@fmt:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0xC
   345  0000A9                     	ds	2
   346  0000AB                     vfprintf@ap:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0xE
   350  0000AB                     	ds	2
   351  0000AD                     vfprintf@cfmt:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x10
   355  0000AD                     	ds	2
   356  0000AF                     ?_sprintf:
   357                           	callstack 0
   358  0000AF                     sprintf@s:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x12
   362  0000AF                     	ds	2
   363  0000B1                     sprintf@fmt:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x14
   367  0000B1                     	ds	10
   368  0000BB                     sprintf@ap:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x1E
   372  0000BB                     	ds	2
   373  0000BD                     sprintf@f:
   374                           	callstack 0
   375                           
   376                           ; 6 bytes @ 0x20
   377  0000BD                     	ds	6
   378  0000C3                     ??_main:
   379                           
   380                           ; 1 bytes @ 0x26
   381  0000C3                     	ds	2
   382                           
   383                           	psect	cstackCOMRAM
   384  000001                     __pcstackCOMRAM:
   385                           	callstack 0
   386  000001                     ??i2_I2C_2_Master_Idle:
   387  000001                     
   388                           ; 1 bytes @ 0x0
   389  000001                     	ds	1
   390  000002                     i2I2C_2_Master_Write@data_byte:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x1
   394  000002                     	ds	1
   395  000003                     i2colorclick_writetoaddr@value:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x2
   399  000003                     	ds	1
   400  000004                     i2colorclick_writetoaddr@address:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x3
   404  000004                     	ds	1
   405  000005                     ??i2_colorclick_int_init:
   406                           
   407                           ; 1 bytes @ 0x4
   408  000005                     	ds	1
   409  000006                     i2_colorclick_int_init$1848:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x5
   413  000006                     	ds	1
   414  000007                     i2_colorclick_int_init$1849:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x6
   418  000007                     	ds	1
   419  000008                     ??_LowISR:
   420  000008                     
   421                           ; 1 bytes @ 0x7
   422  000008                     	ds	1
   423  000009                     ??_I2C_2_Master_Idle:
   424  000009                     ?_strlen:
   425                           	callstack 0
   426  000009                     ?___aodiv:
   427                           	callstack 0
   428  000009                     ?___aomod:
   429                           	callstack 0
   430  000009                     colorclick_toggleClearLED@toggle:
   431                           	callstack 0
   432  000009                     sendCharSerial4@charToSend:
   433                           	callstack 0
   434  000009                     fputc@c:
   435                           	callstack 0
   436  000009                     strlen@s:
   437                           	callstack 0
   438  000009                     ___aodiv@dividend:
   439                           	callstack 0
   440  000009                     ___aomod@dividend:
   441                           	callstack 0
   442                           
   443                           ; 8 bytes @ 0x8
   444  000009                     	ds	1
   445  00000A                     ??_I2C_2_Master_Read:
   446  00000A                     I2C_2_Master_Write@data_byte:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x9
   450  00000A                     	ds	1
   451  00000B                     I2C_2_Master_Read@ack:
   452                           	callstack 0
   453  00000B                     colorclick_writetoaddr@value:
   454                           	callstack 0
   455  00000B                     sendStringSerial4@string:
   456                           	callstack 0
   457  00000B                     fputc@fp:
   458                           	callstack 0
   459  00000B                     strlen@a:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xA
   463  00000B                     	ds	1
   464  00000C                     I2C_2_Master_Read@tmp:
   465                           	callstack 0
   466  00000C                     colorclick_writetoaddr@address:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0xB
   470  00000C                     	ds	1
   471  00000D                     ??_colorclick_init:
   472  00000D                     ??_sendStringSerial4:
   473  00000D                     ??_colorclick_int_init:
   474  00000D                     ??_fputc:
   475  00000D                     ?_colorclick_readRed:
   476                           	callstack 0
   477  00000D                     ?_colorclick_readGreen:
   478                           	callstack 0
   479  00000D                     ?_colorclick_readBlue:
   480                           	callstack 0
   481  00000D                     ?_colorclick_readClear:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0xC
   485  00000D                     	ds	1
   486  00000E                     _colorclick_int_init$1848:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0xD
   490  00000E                     	ds	1
   491  00000F                     ??_colorclick_readRed:
   492  00000F                     ??_colorclick_readGreen:
   493  00000F                     ??_colorclick_readBlue:
   494  00000F                     ??_colorclick_readClear:
   495  00000F                     _colorclick_int_init$1849:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0xE
   499  00000F                     	ds	1
   500  000010                     
   501                           ; 1 bytes @ 0xF
   502  000010                     	ds	1
   503  000011                     ___aodiv@divisor:
   504                           	callstack 0
   505  000011                     ___aomod@divisor:
   506                           	callstack 0
   507                           
   508                           ; 8 bytes @ 0x10
   509  000011                     	ds	1
   510  000012                     colorclick_readRed@tmp:
   511                           	callstack 0
   512  000012                     colorclick_readGreen@tmp:
   513                           	callstack 0
   514  000012                     colorclick_readBlue@tmp:
   515                           	callstack 0
   516  000012                     colorclick_readClear@tmp:
   517                           	callstack 0
   518  000012                     fputs@s:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x11
   522  000012                     	ds	2
   523  000014                     ?_colorclick_readColour:
   524                           	callstack 0
   525  000014                     fputs@fp:
   526                           	callstack 0
   527  000014                     colorclick_readColour@current:
   528                           	callstack 0
   529                           
   530                           ; 8 bytes @ 0x13
   531  000014                     	ds	2
   532  000016                     fputs@c:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x15
   536  000016                     	ds	1
   537  000017                     fputs@i:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x16
   541  000017                     	ds	2
   542  000019                     ?_pad:
   543                           	callstack 0
   544  000019                     ___aodiv@counter:
   545                           	callstack 0
   546  000019                     ___aomod@counter:
   547                           	callstack 0
   548  000019                     pad@fp:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x18
   552  000019                     	ds	1
   553  00001A                     ___aodiv@sign:
   554                           	callstack 0
   555  00001A                     ___aomod@sign:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x19
   559  00001A                     	ds	1
   560  00001B                     ?_abs:
   561                           	callstack 0
   562  00001B                     pad@buf:
   563                           	callstack 0
   564  00001B                     abs@a:
   565                           	callstack 0
   566  00001B                     ___aodiv@quotient:
   567                           	callstack 0
   568                           
   569                           ; 8 bytes @ 0x1A
   570  00001B                     	ds	1
   571  00001C                     
   572                           ; 1 bytes @ 0x1B
   573  00001C                     	ds	1
   574  00001D                     ??_abs:
   575  00001D                     pad@p:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x1C
   579  00001D                     	ds	2
   580  00001F                     ??_pad:
   581                           
   582                           ; 1 bytes @ 0x1E
   583  00001F                     	ds	1
   584  000020                     pad@i:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x1F
   588  000020                     	ds	2
   589  000022                     pad@w:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x21
   593  000022                     	ds	2
   594  000024                     ?_dtoa:
   595                           	callstack 0
   596  000024                     dtoa@fp:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x23
   600  000024                     	ds	2
   601  000026                     dtoa@d:
   602                           	callstack 0
   603                           
   604                           ; 8 bytes @ 0x25
   605  000026                     	ds	8
   606  00002E                     ??_dtoa:
   607                           
   608                           ; 1 bytes @ 0x2D
   609  00002E                     	ds	8
   610  000036                     _dtoa$2473:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x35
   614  000036                     	ds	2
   615  000038                     dtoa@p:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x37
   619  000038                     	ds	2
   620  00003A                     dtoa@w:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x39
   624  00003A                     	ds	2
   625  00003C                     dtoa@s:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x3B
   629  00003C                     	ds	2
   630  00003E                     dtoa@n:
   631                           	callstack 0
   632                           
   633                           ; 8 bytes @ 0x3D
   634  00003E                     	ds	8
   635  000046                     dtoa@i:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x45
   639  000046                     	ds	2
   640  000048                     ?_vfpfcnvrt:
   641                           	callstack 0
   642  000048                     vfpfcnvrt@fp:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x47
   646  000048                     	ds	2
   647  00004A                     vfpfcnvrt@fmt:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x49
   651  00004A                     	ds	2
   652  00004C                     vfpfcnvrt@ap:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x4B
   656  00004C                     	ds	2
   657  00004E                     
   658                           ; 1 bytes @ 0x4D
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   661 ;;
   662 ;; *************** function _main *****************
   663 ;; Defined at:
   664 ;;		line 41 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  buf            40    0[BANK1 ] unsigned char [40]
   669 ;;  tmpC            2   46[BANK1 ] unsigned int 
   670 ;;  tmpB            2   44[BANK1 ] unsigned int 
   671 ;;  tmpG            2   42[BANK1 ] unsigned int 
   672 ;;  tmpR            2   40[BANK1 ] unsigned int 
   673 ;;  initial         8   56[BANK1 ] struct .
   674 ;;  current         8   48[BANK1 ] struct .
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   685 ;;      Locals:         0       0      64       0       0       0       0       0       0       0       0       0       
      +0       0       0
   686 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   687 ;;      Totals:         0       2      64       0       0       0       0       0       0       0       0       0       
      +0       0       0
   688 ;;Total ram usage:       66 bytes
   689 ;; Hardware stack levels required when called: 15
   690 ;; This function calls:
   691 ;;		_ADC_init
   692 ;;		_USART4_init
   693 ;;		_buggyLEDs_init
   694 ;;		_colorclick_init
   695 ;;		_colorclick_readColour
   696 ;;		_colorclick_toggleClearLED
   697 ;;		_interrupts_init
   698 ;;		_sendStringSerial4
   699 ;;		_sprintf
   700 ;; This function is called by:
   701 ;;		Startup code after reset
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text0
   706  0012A6                     __ptext0:
   707                           	callstack 0
   708  0012A6                     _main:
   709                           	callstack 16
   710  0012A6                     
   711                           ;main.c: 43:     ADC_init();
   712  0012A6  EC89  F00F         	call	_ADC_init	;wreg free
   713  0012AA                     
   714                           ;main.c: 44:     colorclick_init();
   715  0012AA  EC6B  F00E         	call	_colorclick_init	;wreg free
   716  0012AE                     
   717                           ;main.c: 45:     interrupts_init();
   718  0012AE  EC3C  F00F         	call	_interrupts_init	;wreg free
   719                           
   720                           ;main.c: 47:     USART4_init();
   721  0012B2  EC5C  F00F         	call	_USART4_init	;wreg free
   722  0012B6                     
   723                           ;main.c: 48:     buggyLEDs_init();
   724  0012B6  ECAE  F00F         	call	_buggyLEDs_init	;wreg free
   725  0012BA                     
   726                           ;main.c: 50:     TRISHbits.TRISH3 = 0;
   727  0012BA  9688               	bcf	136,3,c	;volatile
   728  0012BC                     
   729                           ;main.c: 51:     LATHbits.LATH3 = 0;
   730  0012BC  9680               	bcf	128,3,c	;volatile
   731  0012BE                     
   732                           ;main.c: 55:     colorclick_toggleClearLED(1);
   733  0012BE  0E01               	movlw	1
   734  0012C0  EC1A  F00F         	call	_colorclick_toggleClearLED
   735  0012C4                     
   736                           ;main.c: 56:     LATDbits.LATD3 = 1;
   737  0012C4  867C               	bsf	124,3,c	;volatile
   738  0012C6                     
   739                           ;main.c: 58:     _delay((unsigned long)((500)*(64000000/4000.0)));
   740  0012C6  0E29               	movlw	41
   741  0012C8  0100               	movlb	0	; () banked
   742  0012CA  6FC4               	movwf	(??_main+1)& (0+255),b
   743  0012CC  0E96               	movlw	150
   744  0012CE  6FC3               	movwf	??_main& (0+255),b
   745  0012D0  0E7F               	movlw	127
   746  0012D2                     u2317:
   747  0012D2  2EE8               	decfsz	wreg,f,c
   748  0012D4  D7FE               	bra	u2317
   749  0012D6  2FC3               	decfsz	??_main& (0+255),f,b
   750  0012D8  D7FC               	bra	u2317
   751  0012DA  2FC4               	decfsz	(??_main+1)& (0+255),f,b
   752  0012DC  D7FA               	bra	u2317
   753  0012DE                     
   754                           ;main.c: 60:     RGB_val initial;;main.c: 61:     RGB_val current;;main.c: 62:     initi
      +                          al = colorclick_readColour(initial);
   755  0012DE  EE21  F038         	lfsr	2,main@initial
   756  0012E2  EE00  F014         	lfsr	0,colorclick_readColour@current
   757  0012E6  0E07               	movlw	7
   758  0012E8                     u2241:
   759  0012E8  CFDB FFEB          	movff	plusw2,plusw0
   760  0012EC  06E8               	decf	wreg,f,c
   761  0012EE  E2FC               	bc	u2241
   762  0012F0  EC08  F00E         	call	_colorclick_readColour	;wreg free
   763  0012F4  EE21  F038         	lfsr	2,main@initial
   764  0012F8  0E07               	movlw	7
   765  0012FA                     u2251:
   766  0012FA  CFEB FFDB          	movff	plusw0,plusw2
   767  0012FE  06E8               	decf	wreg,f,c
   768  001300  E2FC               	bc	u2251
   769  001302                     
   770                           ;main.c: 64:     clear_lower = initial.C - 100;
   771  001302  0E9C               	movlw	156
   772  001304  0101               	movlb	1	; () banked
   773  001306  253E               	addwf	(main@initial+6)& (0+255),w,b
   774  001308  6E50               	movwf	_clear_lower^0,c	;volatile
   775  00130A  0EFF               	movlw	255
   776  00130C  213F               	addwfc	(main@initial+7)& (0+255),w,b
   777  00130E  6E51               	movwf	(_clear_lower+1)^0,c	;volatile
   778  001310                     
   779                           ; BSR set to: 1
   780                           ;main.c: 65:     clear_upper = initial.C + 300;
   781  001310  0E2C               	movlw	44
   782  001312  253E               	addwf	(main@initial+6)& (0+255),w,b
   783  001314  6E4E               	movwf	_clear_upper^0,c	;volatile
   784  001316  0E01               	movlw	1
   785  001318  213F               	addwfc	(main@initial+7)& (0+255),w,b
   786  00131A  6E4F               	movwf	(_clear_upper+1)^0,c	;volatile
   787  00131C                     l3111:
   788                           
   789                           ;main.c: 72:         current = colorclick_readColour(current);
   790  00131C  EE21  F030         	lfsr	2,main@current
   791  001320  EE00  F014         	lfsr	0,colorclick_readColour@current
   792  001324  0E07               	movlw	7
   793  001326                     u2261:
   794  001326  CFDB FFEB          	movff	plusw2,plusw0
   795  00132A  06E8               	decf	wreg,f,c
   796  00132C  E2FC               	bc	u2261
   797  00132E  EC08  F00E         	call	_colorclick_readColour	;wreg free
   798  001332  EE21  F030         	lfsr	2,main@current
   799  001336  0E07               	movlw	7
   800  001338                     u2271:
   801  001338  CFEB FFDB          	movff	plusw0,plusw2
   802  00133C  06E8               	decf	wreg,f,c
   803  00133E  E2FC               	bc	u2271
   804  001340                     
   805                           ;main.c: 75:         char buf[40];;main.c: 76:         unsigned int tmpR = current.R;
   806  001340  C130  F128         	movff	main@current,main@tmpR
   807  001344  C131  F129         	movff	main@current+1,main@tmpR+1
   808  001348                     
   809                           ;main.c: 77:         unsigned int tmpG = current.G;
   810  001348  C132  F12A         	movff	main@current+2,main@tmpG
   811  00134C  C133  F12B         	movff	main@current+3,main@tmpG+1
   812  001350                     
   813                           ;main.c: 78:         unsigned int tmpB = current.B;
   814  001350  C134  F12C         	movff	main@current+4,main@tmpB
   815  001354  C135  F12D         	movff	main@current+5,main@tmpB+1
   816  001358                     
   817                           ;main.c: 79:         unsigned int tmpC = current.C;
   818  001358  C136  F12E         	movff	main@current+6,main@tmpC
   819  00135C  C137  F12F         	movff	main@current+7,main@tmpC+1
   820  001360                     
   821                           ;main.c: 80:         sprintf(buf,"%i %i %i %i\n",tmpR,tmpG,tmpB,tmpC);
   822  001360  0E00               	movlw	low main@buf
   823  001362  0100               	movlb	0	; () banked
   824  001364  6FAF               	movwf	sprintf@s& (0+255),b
   825  001366  0E01               	movlw	high main@buf
   826  001368  6FB0               	movwf	(sprintf@s+1)& (0+255),b
   827  00136A  0E01               	movlw	low STR_1
   828  00136C  6FB1               	movwf	sprintf@fmt& (0+255),b
   829  00136E  0E0E               	movlw	high STR_1
   830  001370  6FB2               	movwf	(sprintf@fmt+1)& (0+255),b
   831  001372  C128  F0B3         	movff	main@tmpR,?_sprintf+4
   832  001376  C129  F0B4         	movff	main@tmpR+1,?_sprintf+5
   833  00137A  C12A  F0B5         	movff	main@tmpG,?_sprintf+6
   834  00137E  C12B  F0B6         	movff	main@tmpG+1,?_sprintf+7
   835  001382  C12C  F0B7         	movff	main@tmpB,?_sprintf+8
   836  001386  C12D  F0B8         	movff	main@tmpB+1,?_sprintf+9
   837  00138A  C12E  F0B9         	movff	main@tmpC,?_sprintf+10
   838  00138E  C12F  F0BA         	movff	main@tmpC+1,?_sprintf+11
   839  001392  EC1D  F00D         	call	_sprintf	;wreg free
   840  001396                     
   841                           ;main.c: 81:         sendStringSerial4(buf);
   842  001396  0E00               	movlw	low main@buf
   843  001398  6E0B               	movwf	sendStringSerial4@string^0,c
   844  00139A  0E01               	movlw	high main@buf
   845  00139C  6E0C               	movwf	(sendStringSerial4@string+1)^0,c
   846  00139E  EC8B  F00E         	call	_sendStringSerial4	;wreg free
   847  0013A2                     
   848                           ;main.c: 82:         _delay((unsigned long)((500)*(64000000/4000.0)));
   849  0013A2  0E29               	movlw	41
   850  0013A4  0100               	movlb	0	; () banked
   851  0013A6  6FC4               	movwf	(??_main+1)& (0+255),b
   852  0013A8  0E96               	movlw	150
   853  0013AA  6FC3               	movwf	??_main& (0+255),b
   854  0013AC  0E7F               	movlw	127
   855  0013AE                     u2327:
   856  0013AE  2EE8               	decfsz	wreg,f,c
   857  0013B0  D7FE               	bra	u2327
   858  0013B2  2FC3               	decfsz	??_main& (0+255),f,b
   859  0013B4  D7FC               	bra	u2327
   860  0013B6  2FC4               	decfsz	(??_main+1)& (0+255),f,b
   861  0013B8  D7FA               	bra	u2327
   862  0013BA                     
   863                           ;main.c: 83:         sprintf(buf,"%i %i %i %i\n",initial.R,initial.G,initial.B,initial.C
      +                          );
   864  0013BA  0E00               	movlw	low main@buf
   865  0013BC  0100               	movlb	0	; () banked
   866  0013BE  6FAF               	movwf	sprintf@s& (0+255),b
   867  0013C0  0E01               	movlw	high main@buf
   868  0013C2  6FB0               	movwf	(sprintf@s+1)& (0+255),b
   869  0013C4  0E01               	movlw	low STR_1
   870  0013C6  6FB1               	movwf	sprintf@fmt& (0+255),b
   871  0013C8  0E0E               	movlw	high STR_1
   872  0013CA  6FB2               	movwf	(sprintf@fmt+1)& (0+255),b
   873  0013CC  C138  F0B3         	movff	main@initial,?_sprintf+4
   874  0013D0  C139  F0B4         	movff	main@initial+1,?_sprintf+5
   875  0013D4  C13A  F0B5         	movff	main@initial+2,?_sprintf+6
   876  0013D8  C13B  F0B6         	movff	main@initial+3,?_sprintf+7
   877  0013DC  C13C  F0B7         	movff	main@initial+4,?_sprintf+8
   878  0013E0  C13D  F0B8         	movff	main@initial+5,?_sprintf+9
   879  0013E4  C13E  F0B9         	movff	main@initial+6,?_sprintf+10
   880  0013E8  C13F  F0BA         	movff	main@initial+7,?_sprintf+11
   881  0013EC  EC1D  F00D         	call	_sprintf	;wreg free
   882  0013F0                     
   883                           ;main.c: 84:         sendStringSerial4(buf);
   884  0013F0  0E00               	movlw	low main@buf
   885  0013F2  6E0B               	movwf	sendStringSerial4@string^0,c
   886  0013F4  0E01               	movlw	high main@buf
   887  0013F6  6E0C               	movwf	(sendStringSerial4@string+1)^0,c
   888  0013F8  EC8B  F00E         	call	_sendStringSerial4	;wreg free
   889  0013FC                     
   890                           ;main.c: 85:         _delay((unsigned long)((500)*(64000000/4000.0)));
   891  0013FC  0E29               	movlw	41
   892  0013FE  0100               	movlb	0	; () banked
   893  001400  6FC4               	movwf	(??_main+1)& (0+255),b
   894  001402  0E96               	movlw	150
   895  001404  6FC3               	movwf	??_main& (0+255),b
   896  001406  0E7F               	movlw	127
   897  001408                     u2337:
   898  001408  2EE8               	decfsz	wreg,f,c
   899  00140A  D7FE               	bra	u2337
   900  00140C  2FC3               	decfsz	??_main& (0+255),f,b
   901  00140E  D7FC               	bra	u2337
   902  001410  2FC4               	decfsz	(??_main+1)& (0+255),f,b
   903  001412  D7FA               	bra	u2337
   904  001414                     
   905                           ;main.c: 87:         if(card_flag==1){
   906  001414  0100               	movlb	0	; () banked
   907  001416  057C               	decf	_card_flag& (0+255),w,b	;volatile
   908  001418  A4D8               	btfss	status,2,c
   909  00141A  EF11  F00A         	goto	u2281
   910  00141E  EF13  F00A         	goto	u2280
   911  001422                     u2281:
   912  001422  EF8E  F009         	goto	l3111
   913  001426                     u2280:
   914  001426                     
   915                           ; BSR set to: 0
   916                           ;main.c: 88:             LATHbits.LATH3 = !LATHbits.LATH3;
   917  001426  A680               	btfss	128,3,c	;volatile
   918  001428  EF18  F00A         	goto	u2291
   919  00142C  EF1C  F00A         	goto	u2290
   920  001430                     u2291:
   921  001430  6BC3               	clrf	??_main& (0+255),b
   922  001432  2BC3               	incf	??_main& (0+255),f,b
   923  001434  EF1E  F00A         	goto	u2308
   924  001438                     u2290:
   925  001438  0100               	movlb	0	; () banked
   926  00143A  6BC3               	clrf	??_main& (0+255),b
   927  00143C                     u2308:
   928  00143C  47C3               	rlncf	??_main& (0+255),f,b
   929  00143E  47C3               	rlncf	??_main& (0+255),f,b
   930  001440  47C3               	rlncf	??_main& (0+255),f,b
   931  001442  5080               	movf	128,w,c	;volatile
   932  001444  19C3               	xorwf	??_main& (0+255),w,b
   933  001446  0BF7               	andlw	-9
   934  001448  19C3               	xorwf	??_main& (0+255),w,b
   935  00144A  6E80               	movwf	128,c	;volatile
   936  00144C                     
   937                           ; BSR set to: 0
   938                           ;main.c: 89:             card_flag = 0;
   939  00144C  0E00               	movlw	0
   940  00144E  6F7C               	movwf	_card_flag& (0+255),b	;volatile
   941  001450  EF8E  F009         	goto	l3111
   942  001454  EF13  F000         	goto	start
   943  001458                     __end_of_main:
   944                           	callstack 0
   945                           
   946 ;; *************** function _sprintf *****************
   947 ;; Defined at:
   948 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_sprintf.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  s               2   18[BANK0 ] PTR unsigned char 
   951 ;;		 -> main@buf(40), 
   952 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
   953 ;;		 -> STR_2(13), STR_1(13), 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  f               6   32[BANK0 ] struct _IO_FILE
   956 ;;  ap              2   30[BANK0 ] PTR void [1]
   957 ;;		 -> ?_sprintf(2), 
   958 ;;  ret             2    0        int 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  2   18[BANK0 ] int 
   961 ;; Registers used:
   962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   968 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   969 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   971 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   972 ;;Total ram usage:       20 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; Hardware stack levels required when called: 14
   975 ;; This function calls:
   976 ;;		_vfprintf
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text1
   983  001A3A                     __ptext1:
   984                           	callstack 0
   985  001A3A                     _sprintf:
   986                           	callstack 16
   987  001A3A  0EB3               	movlw	low (?_sprintf+4)
   988  001A3C  0100               	movlb	0	; () banked
   989  001A3E  6FBB               	movwf	sprintf@ap& (0+255),b
   990  001A40  0E00               	movlw	high (?_sprintf+4)
   991  001A42  6FBC               	movwf	(sprintf@ap+1)& (0+255),b
   992  001A44  C0AF  F0BD         	movff	sprintf@s,sprintf@f
   993  001A48  C0B0  F0BE         	movff	sprintf@s+1,sprintf@f+1
   994  001A4C                     
   995                           ; BSR set to: 0
   996  001A4C  0E00               	movlw	0
   997  001A4E  6FC0               	movwf	(sprintf@f+3)& (0+255),b
   998  001A50  0E00               	movlw	0
   999  001A52  6FBF               	movwf	(sprintf@f+2)& (0+255),b
  1000  001A54                     
  1001                           ; BSR set to: 0
  1002  001A54  0E00               	movlw	0
  1003  001A56  6FC2               	movwf	(sprintf@f+5)& (0+255),b
  1004  001A58  0E00               	movlw	0
  1005  001A5A  6FC1               	movwf	(sprintf@f+4)& (0+255),b
  1006  001A5C                     
  1007                           ; BSR set to: 0
  1008  001A5C  0EBD               	movlw	low sprintf@f
  1009  001A5E  6FA7               	movwf	vfprintf@fp& (0+255),b
  1010  001A60  0E00               	movlw	high sprintf@f
  1011  001A62  6FA8               	movwf	(vfprintf@fp+1)& (0+255),b
  1012  001A64  C0B1  F0A9         	movff	sprintf@fmt,vfprintf@fmt
  1013  001A68  C0B2  F0AA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1014  001A6C  0EBB               	movlw	low sprintf@ap
  1015  001A6E  6FAB               	movwf	vfprintf@ap& (0+255),b
  1016  001A70  0E00               	movlw	high sprintf@ap
  1017  001A72  6FAC               	movwf	(vfprintf@ap+1)& (0+255),b
  1018  001A74  ECEC  F00C         	call	_vfprintf	;wreg free
  1019  001A78  0100               	movlb	0	; () banked
  1020  001A7A  51BF               	movf	(sprintf@f+2)& (0+255),w,b
  1021  001A7C  25AF               	addwf	sprintf@s& (0+255),w,b
  1022  001A7E  6ED9               	movwf	fsr2l,c
  1023  001A80  51C0               	movf	(sprintf@f+3)& (0+255),w,b
  1024  001A82  21B0               	addwfc	(sprintf@s+1)& (0+255),w,b
  1025  001A84  6EDA               	movwf	fsr2h,c
  1026  001A86  0E00               	movlw	0
  1027  001A88  6EDF               	movwf	indf2,c
  1028  001A8A                     
  1029                           ; BSR set to: 0
  1030  001A8A  0012               	return		;funcret
  1031  001A8C                     __end_of_sprintf:
  1032                           	callstack 0
  1033                           
  1034 ;; *************** function _vfprintf *****************
  1035 ;; Defined at:
  1036 ;;		line 1390 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  1039 ;;		 -> sprintf@f(6), 
  1040 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
  1041 ;;		 -> STR_2(13), STR_1(13), 
  1042 ;;  ap              2   14[BANK0 ] PTR PTR void 
  1043 ;;		 -> sprintf@ap(2), 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  cfmt            2   16[BANK0 ] PTR unsigned char 
  1046 ;;		 -> STR_2(13), STR_1(13), 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  2   10[BANK0 ] int 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1056 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1057 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1059 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1060 ;;Total ram usage:        8 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; Hardware stack levels required when called: 13
  1063 ;; This function calls:
  1064 ;;		_vfpfcnvrt
  1065 ;; This function is called by:
  1066 ;;		_sprintf
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text2
  1071  0019D8                     __ptext2:
  1072                           	callstack 0
  1073  0019D8                     _vfprintf:
  1074                           	callstack 16
  1075  0019D8                     
  1076                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
  1077  0019D8  C0A9  F0AD         	movff	vfprintf@fmt,vfprintf@cfmt
  1078  0019DC  C0AA  F0AE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1079  0019E0                     
  1080                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  1081  0019E0  0E00               	movlw	0
  1082  0019E2  0100               	movlb	0	; () banked
  1083  0019E4  6F75               	movwf	(_nout+1)& (0+255),b
  1084  0019E6  0E00               	movlw	0
  1085  0019E8  6F74               	movwf	_nout& (0+255),b
  1086                           
  1087                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  1088  0019EA  EF0A  F00D         	goto	l2997
  1089  0019EE                     l2995:
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  1093  0019EE  C0A7  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  1094  0019F2  C0A8  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1095  0019F6  0EAD               	movlw	low vfprintf@cfmt
  1096  0019F8  6E4A               	movwf	vfpfcnvrt@fmt^0,c
  1097  0019FA  0E00               	movlw	high vfprintf@cfmt
  1098  0019FC  6E4B               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1099  0019FE  C0AB  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1100  001A02  C0AC  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1101  001A06  EC79  F008         	call	_vfpfcnvrt	;wreg free
  1102  001A0A  5048               	movf	?_vfpfcnvrt^0,w,c
  1103  001A0C  0100               	movlb	0	; () banked
  1104  001A0E  2774               	addwf	_nout& (0+255),f,b
  1105  001A10  5049               	movf	(?_vfpfcnvrt+1)^0,w,c
  1106  001A12  2375               	addwfc	(_nout+1)& (0+255),f,b
  1107  001A14                     l2997:
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  1111  001A14  C0AD  FFF6         	movff	vfprintf@cfmt,tblptrl
  1112  001A18  C0AE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1113  001A1C                     	if	0	;tblptru may be non-zero
  1114  001A1C                     	endif
  1115  001A1C                     	if	0	;tblptru may be non-zero
  1116  001A1C                     	endif
  1117  001A1C  0008               	tblrd		*
  1118  001A1E  50F5               	movf	tablat,w,c
  1119  001A20  0900               	iorlw	0
  1120  001A22  A4D8               	btfss	status,2,c
  1121  001A24  EF16  F00D         	goto	u2211
  1122  001A28  EF18  F00D         	goto	u2210
  1123  001A2C                     u2211:
  1124  001A2C  EFF7  F00C         	goto	l2995
  1125  001A30                     u2210:
  1126  001A30                     
  1127                           ; BSR set to: 0
  1128                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
  1129  001A30  C074  F0A7         	movff	_nout,?_vfprintf
  1130  001A34  C075  F0A8         	movff	_nout+1,?_vfprintf+1
  1131  001A38                     
  1132                           ; BSR set to: 0
  1133  001A38  0012               	return		;funcret
  1134  001A3A                     __end_of_vfprintf:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _vfpfcnvrt *****************
  1138 ;; Defined at:
  1139 ;;		line 692 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  1142 ;;		 -> sprintf@f(6), 
  1143 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
  1144 ;;		 -> vfprintf@cfmt(2), 
  1145 ;;  ap              2   75[COMRAM] PTR PTR void 
  1146 ;;		 -> sprintf@ap(2), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  ll              8    2[BANK0 ] long long 
  1149 ;;  llu             8    0        unsigned long long 
  1150 ;;  f               4    0        unsigned long long 
  1151 ;;  vp              3    0        PTR void 
  1152 ;;  ct              3    0        unsigned char [3]
  1153 ;;  cp              3    0        PTR unsigned char 
  1154 ;;  i               2    0        int 
  1155 ;;  done            2    0        int 
  1156 ;;  c               1    0        unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  2   71[COMRAM] int 
  1159 ;; Registers used:
  1160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1166 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1167 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;Total ram usage:       16 bytes
  1171 ;; Hardware stack levels used: 1
  1172 ;; Hardware stack levels required when called: 12
  1173 ;; This function calls:
  1174 ;;		_dtoa
  1175 ;;		_fputc
  1176 ;; This function is called by:
  1177 ;;		_vfprintf
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text3
  1182  0010F2                     __ptext3:
  1183                           	callstack 0
  1184  0010F2                     _vfpfcnvrt:
  1185                           	callstack 16
  1186  0010F2                     
  1187                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.32/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.32/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  1188  0010F2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1189  0010F6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1190  0010FA  CFDE FFF6          	movff	postinc2,tblptrl
  1191  0010FE  CFDD FFF7          	movff	postdec2,tblptrh
  1192  001102                     	if	0	;tblptru may be non-zero
  1193  001102                     	endif
  1194  001102                     	if	0	;tblptru may be non-zero
  1195  001102                     	endif
  1196  001102  0008               	tblrd		*
  1197  001104  50F5               	movf	tablat,w,c
  1198  001106  0A25               	xorlw	37
  1199  001108  A4D8               	btfss	status,2,c
  1200  00110A  EF89  F008         	goto	u2131
  1201  00110E  EF8B  F008         	goto	u2130
  1202  001112                     u2131:
  1203  001112  EF37  F009         	goto	l2941
  1204  001116                     u2130:
  1205  001116                     
  1206                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  1207  001116  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1208  00111A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1209  00111E  2ADE               	incf	postinc2,f,c
  1210  001120  0E00               	movlw	0
  1211  001122  22DD               	addwfc	postdec2,f,c
  1212  001124                     
  1213                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  1214  001124  0E00               	movlw	0
  1215  001126  0100               	movlb	0	; () banked
  1216  001128  6F77               	movwf	(_width+1)& (0+255),b
  1217  00112A  0E00               	movlw	0
  1218  00112C  6F76               	movwf	_width& (0+255),b
  1219  00112E  C076  F07A         	movff	_width,_flags
  1220  001132  C077  F07B         	movff	_width+1,_flags+1
  1221  001136                     
  1222                           ; BSR set to: 0
  1223                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  1224  001136  6978               	setf	_prec& (0+255),b
  1225  001138  6979               	setf	(_prec+1)& (0+255),b
  1226  00113A                     
  1227                           ; BSR set to: 0
  1228                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  1229  00113A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1230  00113E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1231  001142  CFDE FFF6          	movff	postinc2,tblptrl
  1232  001146  CFDD FFF7          	movff	postdec2,tblptrh
  1233  00114A                     	if	0	;tblptru may be non-zero
  1234  00114A                     	endif
  1235  00114A                     	if	0	;tblptru may be non-zero
  1236  00114A                     	endif
  1237  00114A  0008               	tblrd		*
  1238  00114C  50F5               	movf	tablat,w,c
  1239  00114E  0A64               	xorlw	100
  1240  001150  B4D8               	btfsc	status,2,c
  1241  001152  EFAD  F008         	goto	u2141
  1242  001156  EFAF  F008         	goto	u2140
  1243  00115A                     u2141:
  1244  00115A  EFC1  F008         	goto	l2919
  1245  00115E                     u2140:
  1246  00115E                     
  1247                           ; BSR set to: 0
  1248  00115E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1249  001162  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1250  001166  CFDE FFF6          	movff	postinc2,tblptrl
  1251  00116A  CFDD FFF7          	movff	postdec2,tblptrh
  1252  00116E                     	if	0	;tblptru may be non-zero
  1253  00116E                     	endif
  1254  00116E                     	if	0	;tblptru may be non-zero
  1255  00116E                     	endif
  1256  00116E  0008               	tblrd		*
  1257  001170  50F5               	movf	tablat,w,c
  1258  001172  0A69               	xorlw	105
  1259  001174  A4D8               	btfss	status,2,c
  1260  001176  EFBF  F008         	goto	u2151
  1261  00117A  EFC1  F008         	goto	u2150
  1262  00117E                     u2151:
  1263  00117E  EF01  F009         	goto	l2925
  1264  001182                     u2150:
  1265  001182                     l2919:
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
  1269  001182  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1270  001186  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1271  00118A  2ADE               	incf	postinc2,f,c
  1272  00118C  0E00               	movlw	0
  1273  00118E  22DD               	addwfc	postdec2,f,c
  1274                           
  1275                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1276  001190  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1277  001194  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1278  001198  CFDF F09D          	movff	indf2,??_vfpfcnvrt
  1279  00119C  0E02               	movlw	2
  1280  00119E  26DE               	addwf	postinc2,f,c
  1281  0011A0  CFDF F09E          	movff	indf2,??_vfpfcnvrt+1
  1282  0011A4  0E00               	movlw	0
  1283  0011A6  22DD               	addwfc	postdec2,f,c
  1284  0011A8  C09D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1285  0011AC  C09E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1286  0011B0  CFDE F09F          	movff	postinc2,vfpfcnvrt@ll
  1287  0011B4  CFDD F0A0          	movff	postdec2,vfpfcnvrt@ll+1
  1288  0011B8  0E00               	movlw	0
  1289  0011BA  BFA0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1290  0011BC  0EFF               	movlw	-1
  1291  0011BE  6FA1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1292  0011C0  6FA2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1293  0011C2  6FA3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1294  0011C4  6FA4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1295  0011C6  6FA5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1296  0011C8  6FA6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1297  0011CA                     
  1298                           ; BSR set to: 0
  1299                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
  1300  0011CA  C048  F024         	movff	vfpfcnvrt@fp,dtoa@fp
  1301  0011CE  C049  F025         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1302  0011D2  C09F  F026         	movff	vfpfcnvrt@ll,dtoa@d
  1303  0011D6  C0A0  F027         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1304  0011DA  C0A1  F028         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1305  0011DE  C0A2  F029         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1306  0011E2  C0A3  F02A         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1307  0011E6  C0A4  F02B         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1308  0011EA  C0A5  F02C         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1309  0011EE  C0A6  F02D         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1310  0011F2  EC08  F007         	call	_dtoa	;wreg free
  1311  0011F6  C024  F048         	movff	?_dtoa,?_vfpfcnvrt
  1312  0011FA  C025  F049         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1313  0011FE  EF52  F009         	goto	l1204
  1314  001202                     l2925:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
  1318  001202  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1319  001206  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1320  00120A  CFDE FFF6          	movff	postinc2,tblptrl
  1321  00120E  CFDD FFF7          	movff	postdec2,tblptrh
  1322  001212                     	if	0	;tblptru may be non-zero
  1323  001212                     	endif
  1324  001212                     	if	0	;tblptru may be non-zero
  1325  001212                     	endif
  1326  001212  0008               	tblrd		*
  1327  001214  50F5               	movf	tablat,w,c
  1328  001216  0A25               	xorlw	37
  1329  001218  A4D8               	btfss	status,2,c
  1330  00121A  EF11  F009         	goto	u2161
  1331  00121E  EF13  F009         	goto	u2160
  1332  001222                     u2161:
  1333  001222  EF2A  F009         	goto	l2935
  1334  001226                     u2160:
  1335  001226                     
  1336                           ; BSR set to: 0
  1337                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
  1338  001226  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1339  00122A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1340  00122E  2ADE               	incf	postinc2,f,c
  1341  001230  0E00               	movlw	0
  1342  001232  22DD               	addwfc	postdec2,f,c
  1343  001234                     
  1344                           ; BSR set to: 0
  1345                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
  1346  001234  0E00               	movlw	0
  1347  001236  6E0A               	movwf	(fputc@c+1)^0,c
  1348  001238  0E25               	movlw	37
  1349  00123A  6E09               	movwf	fputc@c^0,c
  1350  00123C  C048  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1351  001240  C049  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1352  001244  ECA2  F00B         	call	_fputc	;wreg free
  1353  001248                     l2931:
  1354                           
  1355                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
  1356  001248  0E00               	movlw	0
  1357  00124A  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  1358  00124C  0E01               	movlw	1
  1359  00124E  6E48               	movwf	?_vfpfcnvrt^0,c
  1360  001250  EF52  F009         	goto	l1204
  1361  001254                     l2935:
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
  1365  001254  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1366  001258  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1367  00125C  2ADE               	incf	postinc2,f,c
  1368  00125E  0E00               	movlw	0
  1369  001260  22DD               	addwfc	postdec2,f,c
  1370  001262                     
  1371                           ; BSR set to: 0
  1372                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
  1373  001262  0E00               	movlw	0
  1374  001264  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  1375  001266  0E00               	movlw	0
  1376  001268  6E48               	movwf	?_vfpfcnvrt^0,c
  1377  00126A  EF52  F009         	goto	l1204
  1378  00126E                     l2941:
  1379                           
  1380                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
  1381  00126E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1382  001272  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1383  001276  CFDE FFF6          	movff	postinc2,tblptrl
  1384  00127A  CFDD FFF7          	movff	postdec2,tblptrh
  1385  00127E                     	if	0	;tblptru may be non-zero
  1386  00127E                     	endif
  1387  00127E                     	if	0	;tblptru may be non-zero
  1388  00127E                     	endif
  1389  00127E  0008               	tblrd		*
  1390  001280  50F5               	movf	tablat,w,c
  1391  001282  6E09               	movwf	fputc@c^0,c
  1392  001284  6A0A               	clrf	(fputc@c+1)^0,c
  1393  001286  C048  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1394  00128A  C049  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1395  00128E  ECA2  F00B         	call	_fputc	;wreg free
  1396  001292                     
  1397                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  1398  001292  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1399  001296  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1400  00129A  2ADE               	incf	postinc2,f,c
  1401  00129C  0E00               	movlw	0
  1402  00129E  22DD               	addwfc	postdec2,f,c
  1403  0012A0  EF24  F009         	goto	l2931
  1404  0012A4                     l1204:
  1405  0012A4  0012               	return		;funcret
  1406  0012A6                     __end_of_vfpfcnvrt:
  1407                           	callstack 0
  1408                           
  1409 ;; *************** function _dtoa *****************
  1410 ;; Defined at:
  1411 ;;		line 287 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  1414 ;;		 -> sprintf@f(6), 
  1415 ;;  d               8   37[COMRAM] long long 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  n               8   61[COMRAM] long long 
  1418 ;;  i               2   69[COMRAM] int 
  1419 ;;  s               2   59[COMRAM] int 
  1420 ;;  w               2   57[COMRAM] int 
  1421 ;;  p               2   55[COMRAM] int 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  2   35[COMRAM] int 
  1424 ;; Registers used:
  1425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1431 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1432 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1433 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1434 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1435 ;;Total ram usage:       36 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 11
  1438 ;; This function calls:
  1439 ;;		___aodiv
  1440 ;;		___aomod
  1441 ;;		_abs
  1442 ;;		_pad
  1443 ;; This function is called by:
  1444 ;;		_vfpfcnvrt
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text4
  1449  000E10                     __ptext4:
  1450                           	callstack 0
  1451  000E10                     _dtoa:
  1452                           	callstack 16
  1453  000E10                     
  1454                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
  1455  000E10  C026  F03E         	movff	dtoa@d,dtoa@n
  1456  000E14  C027  F03F         	movff	dtoa@d+1,dtoa@n+1
  1457  000E18  C028  F040         	movff	dtoa@d+2,dtoa@n+2
  1458  000E1C  C029  F041         	movff	dtoa@d+3,dtoa@n+3
  1459  000E20  C02A  F042         	movff	dtoa@d+4,dtoa@n+4
  1460  000E24  C02B  F043         	movff	dtoa@d+5,dtoa@n+5
  1461  000E28  C02C  F044         	movff	dtoa@d+6,dtoa@n+6
  1462  000E2C  C02D  F045         	movff	dtoa@d+7,dtoa@n+7
  1463  000E30                     
  1464                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
  1465  000E30  BE45               	btfsc	(dtoa@n+7)^0,7,c
  1466  000E32  EF1D  F007         	goto	u1941
  1467  000E36  EF20  F007         	goto	u1940
  1468  000E3A                     u1941:
  1469  000E3A  0E01               	movlw	1
  1470  000E3C  EF21  F007         	goto	u1950
  1471  000E40                     u1940:
  1472  000E40  0E00               	movlw	0
  1473  000E42                     u1950:
  1474  000E42  6E3C               	movwf	dtoa@s^0,c
  1475  000E44  6A3D               	clrf	(dtoa@s+1)^0,c
  1476                           
  1477                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  1478  000E46  503C               	movf	dtoa@s^0,w,c
  1479  000E48  103D               	iorwf	(dtoa@s+1)^0,w,c
  1480  000E4A  B4D8               	btfsc	status,2,c
  1481  000E4C  EF2A  F007         	goto	u1961
  1482  000E50  EF2C  F007         	goto	u1960
  1483  000E54                     u1961:
  1484  000E54  EF3C  F007         	goto	l2809
  1485  000E58                     u1960:
  1486  000E58                     
  1487                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  1488  000E58  1E45               	comf	(dtoa@n+7)^0,f,c
  1489  000E5A  1E44               	comf	(dtoa@n+6)^0,f,c
  1490  000E5C  1E43               	comf	(dtoa@n+5)^0,f,c
  1491  000E5E  1E42               	comf	(dtoa@n+4)^0,f,c
  1492  000E60  1E41               	comf	(dtoa@n+3)^0,f,c
  1493  000E62  1E40               	comf	(dtoa@n+2)^0,f,c
  1494  000E64  1E3F               	comf	(dtoa@n+1)^0,f,c
  1495  000E66  6C3E               	negf	dtoa@n^0,c
  1496  000E68  0E00               	movlw	0
  1497  000E6A  223F               	addwfc	(dtoa@n+1)^0,f,c
  1498  000E6C  2240               	addwfc	(dtoa@n+2)^0,f,c
  1499  000E6E  2241               	addwfc	(dtoa@n+3)^0,f,c
  1500  000E70  2242               	addwfc	(dtoa@n+4)^0,f,c
  1501  000E72  2243               	addwfc	(dtoa@n+5)^0,f,c
  1502  000E74  2244               	addwfc	(dtoa@n+6)^0,f,c
  1503  000E76  2245               	addwfc	(dtoa@n+7)^0,f,c
  1504  000E78                     l2809:
  1505                           
  1506                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
  1507  000E78  0100               	movlb	0	; () banked
  1508  000E7A  BF79               	btfsc	(_prec+1)& (0+255),7,b
  1509  000E7C  EF42  F007         	goto	u1971
  1510  000E80  EF44  F007         	goto	u1970
  1511  000E84                     u1971:
  1512  000E84  EF45  F007         	goto	l2813
  1513  000E88                     u1970:
  1514  000E88                     
  1515                           ; BSR set to: 0
  1516                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
  1517  000E88  937A               	bcf	_flags& (0+255),1,b
  1518  000E8A                     l2813:
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
  1522  000E8A  BF79               	btfsc	(_prec+1)& (0+255),7,b
  1523  000E8C  EF52  F007         	goto	u1980
  1524  000E90  5179               	movf	(_prec+1)& (0+255),w,b
  1525  000E92  E106               	bnz	u1981
  1526  000E94  0578               	decf	_prec& (0+255),w,b
  1527  000E96  B0D8               	btfsc	status,0,c
  1528  000E98  EF50  F007         	goto	u1981
  1529  000E9C  EF52  F007         	goto	u1980
  1530  000EA0                     u1981:
  1531  000EA0  EF58  F007         	goto	l1177
  1532  000EA4                     u1980:
  1533  000EA4                     
  1534                           ; BSR set to: 0
  1535  000EA4  0E00               	movlw	0
  1536  000EA6  6E39               	movwf	(dtoa@p+1)^0,c
  1537  000EA8  0E01               	movlw	1
  1538  000EAA  6E38               	movwf	dtoa@p^0,c
  1539  000EAC  EF5C  F007         	goto	l1179
  1540  000EB0                     l1177:
  1541                           
  1542                           ; BSR set to: 0
  1543  000EB0  C078  F038         	movff	_prec,dtoa@p
  1544  000EB4  C079  F039         	movff	_prec+1,dtoa@p+1
  1545  000EB8                     l1179:
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 304:     w = width;
  1549  000EB8  C076  F03A         	movff	_width,dtoa@w
  1550  000EBC  C077  F03B         	movff	_width+1,dtoa@w+1
  1551  000EC0                     
  1552                           ; BSR set to: 0
  1553                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
  1554  000EC0  503C               	movf	dtoa@s^0,w,c
  1555  000EC2  103D               	iorwf	(dtoa@s+1)^0,w,c
  1556  000EC4  A4D8               	btfss	status,2,c
  1557  000EC6  EF67  F007         	goto	u1991
  1558  000ECA  EF69  F007         	goto	u1990
  1559  000ECE                     u1991:
  1560  000ECE  EF70  F007         	goto	l2821
  1561  000ED2                     u1990:
  1562  000ED2                     
  1563                           ; BSR set to: 0
  1564  000ED2  A57A               	btfss	_flags& (0+255),2,b
  1565  000ED4  EF6E  F007         	goto	u2001
  1566  000ED8  EF70  F007         	goto	u2000
  1567  000EDC                     u2001:
  1568  000EDC  EF73  F007         	goto	l2823
  1569  000EE0                     u2000:
  1570  000EE0                     l2821:
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 306:         --w;
  1574  000EE0  063A               	decf	dtoa@w^0,f,c
  1575  000EE2  A0D8               	btfss	status,0,c
  1576  000EE4  063B               	decf	(dtoa@w+1)^0,f,c
  1577  000EE6                     l2823:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
  1581  000EE6  0E00               	movlw	0
  1582  000EE8  6E47               	movwf	(dtoa@i+1)^0,c
  1583  000EEA  0E1F               	movlw	31
  1584  000EEC  6E46               	movwf	dtoa@i^0,c
  1585  000EEE                     
  1586                           ; BSR set to: 0
  1587                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
  1588  000EEE  0E00               	movlw	0
  1589  000EF0  6F9C               	movwf	(_dbuf+31)& (0+255),b
  1590                           
  1591                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1592  000EF2  EFF7  F007         	goto	l2837
  1593  000EF6                     l2827:
  1594                           
  1595                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 313:         --i;
  1596  000EF6  0646               	decf	dtoa@i^0,f,c
  1597  000EF8  A0D8               	btfss	status,0,c
  1598  000EFA  0647               	decf	(dtoa@i+1)^0,f,c
  1599  000EFC                     
  1600                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
  1601  000EFC  0E7D               	movlw	low _dbuf
  1602  000EFE  2446               	addwf	dtoa@i^0,w,c
  1603  000F00  6ED9               	movwf	fsr2l,c
  1604  000F02  0E00               	movlw	high _dbuf
  1605  000F04  2047               	addwfc	(dtoa@i+1)^0,w,c
  1606  000F06  6EDA               	movwf	fsr2h,c
  1607  000F08  C03E  F009         	movff	dtoa@n,___aomod@dividend
  1608  000F0C  C03F  F00A         	movff	dtoa@n+1,___aomod@dividend+1
  1609  000F10  C040  F00B         	movff	dtoa@n+2,___aomod@dividend+2
  1610  000F14  C041  F00C         	movff	dtoa@n+3,___aomod@dividend+3
  1611  000F18  C042  F00D         	movff	dtoa@n+4,___aomod@dividend+4
  1612  000F1C  C043  F00E         	movff	dtoa@n+5,___aomod@dividend+5
  1613  000F20  C044  F00F         	movff	dtoa@n+6,___aomod@dividend+6
  1614  000F24  C045  F010         	movff	dtoa@n+7,___aomod@dividend+7
  1615  000F28  0E0A               	movlw	10
  1616  000F2A  6E11               	movwf	___aomod@divisor^0,c
  1617  000F2C  0E00               	movlw	0
  1618  000F2E  6E12               	movwf	(___aomod@divisor+1)^0,c
  1619  000F30  0E00               	movlw	0
  1620  000F32  6E13               	movwf	(___aomod@divisor+2)^0,c
  1621  000F34  0E00               	movlw	0
  1622  000F36  6E14               	movwf	(___aomod@divisor+3)^0,c
  1623  000F38  0E00               	movlw	0
  1624  000F3A  6E15               	movwf	(___aomod@divisor+4)^0,c
  1625  000F3C  0E00               	movlw	0
  1626  000F3E  6E16               	movwf	(___aomod@divisor+5)^0,c
  1627  000F40  0E00               	movlw	0
  1628  000F42  6E17               	movwf	(___aomod@divisor+6)^0,c
  1629  000F44  0E00               	movlw	0
  1630  000F46  6E18               	movwf	(___aomod@divisor+7)^0,c
  1631  000F48  ECF0  F00A         	call	___aomod	;wreg free
  1632  000F4C  C009  F02E         	movff	?___aomod,??_dtoa
  1633  000F50  C00A  F02F         	movff	?___aomod+1,??_dtoa+1
  1634  000F54  C00B  F030         	movff	?___aomod+2,??_dtoa+2
  1635  000F58  C00C  F031         	movff	?___aomod+3,??_dtoa+3
  1636  000F5C  C00D  F032         	movff	?___aomod+4,??_dtoa+4
  1637  000F60  C00E  F033         	movff	?___aomod+5,??_dtoa+5
  1638  000F64  C00F  F034         	movff	?___aomod+6,??_dtoa+6
  1639  000F68  C010  F035         	movff	?___aomod+7,??_dtoa+7
  1640  000F6C  C02E  F01B         	movff	??_dtoa,abs@a
  1641  000F70  C030  F01C         	movff	??_dtoa+2,abs@a+1
  1642  000F74  EC4B  F00E         	call	_abs	;wreg free
  1643  000F78  501B               	movf	?_abs^0,w,c
  1644  000F7A  0F30               	addlw	48
  1645  000F7C  6EDF               	movwf	indf2,c
  1646  000F7E                     
  1647                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 315:         --p;
  1648  000F7E  0638               	decf	dtoa@p^0,f,c
  1649  000F80  A0D8               	btfss	status,0,c
  1650  000F82  0639               	decf	(dtoa@p+1)^0,f,c
  1651  000F84                     
  1652                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 316:         --w;
  1653  000F84  063A               	decf	dtoa@w^0,f,c
  1654  000F86  A0D8               	btfss	status,0,c
  1655  000F88  063B               	decf	(dtoa@w+1)^0,f,c
  1656  000F8A                     
  1657                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
  1658  000F8A  C03E  F009         	movff	dtoa@n,___aodiv@dividend
  1659  000F8E  C03F  F00A         	movff	dtoa@n+1,___aodiv@dividend+1
  1660  000F92  C040  F00B         	movff	dtoa@n+2,___aodiv@dividend+2
  1661  000F96  C041  F00C         	movff	dtoa@n+3,___aodiv@dividend+3
  1662  000F9A  C042  F00D         	movff	dtoa@n+4,___aodiv@dividend+4
  1663  000F9E  C043  F00E         	movff	dtoa@n+5,___aodiv@dividend+5
  1664  000FA2  C044  F00F         	movff	dtoa@n+6,___aodiv@dividend+6
  1665  000FA6  C045  F010         	movff	dtoa@n+7,___aodiv@dividend+7
  1666  000FAA  0E0A               	movlw	10
  1667  000FAC  6E11               	movwf	___aodiv@divisor^0,c
  1668  000FAE  0E00               	movlw	0
  1669  000FB0  6E12               	movwf	(___aodiv@divisor+1)^0,c
  1670  000FB2  0E00               	movlw	0
  1671  000FB4  6E13               	movwf	(___aodiv@divisor+2)^0,c
  1672  000FB6  0E00               	movlw	0
  1673  000FB8  6E14               	movwf	(___aodiv@divisor+3)^0,c
  1674  000FBA  0E00               	movlw	0
  1675  000FBC  6E15               	movwf	(___aodiv@divisor+4)^0,c
  1676  000FBE  0E00               	movlw	0
  1677  000FC0  6E16               	movwf	(___aodiv@divisor+5)^0,c
  1678  000FC2  0E00               	movlw	0
  1679  000FC4  6E17               	movwf	(___aodiv@divisor+6)^0,c
  1680  000FC6  0E00               	movlw	0
  1681  000FC8  6E18               	movwf	(___aodiv@divisor+7)^0,c
  1682  000FCA  EC2C  F00A         	call	___aodiv	;wreg free
  1683  000FCE  C009  F03E         	movff	?___aodiv,dtoa@n
  1684  000FD2  C00A  F03F         	movff	?___aodiv+1,dtoa@n+1
  1685  000FD6  C00B  F040         	movff	?___aodiv+2,dtoa@n+2
  1686  000FDA  C00C  F041         	movff	?___aodiv+3,dtoa@n+3
  1687  000FDE  C00D  F042         	movff	?___aodiv+4,dtoa@n+4
  1688  000FE2  C00E  F043         	movff	?___aodiv+5,dtoa@n+5
  1689  000FE6  C00F  F044         	movff	?___aodiv+6,dtoa@n+6
  1690  000FEA  C010  F045         	movff	?___aodiv+7,dtoa@n+7
  1691  000FEE                     l2837:
  1692                           
  1693                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1694  000FEE  BE47               	btfsc	(dtoa@i+1)^0,7,c
  1695  000FF0  EF02  F008         	goto	u2011
  1696  000FF4  5047               	movf	(dtoa@i+1)^0,w,c
  1697  000FF6  E108               	bnz	u2010
  1698  000FF8  0446               	decf	dtoa@i^0,w,c
  1699  000FFA  A0D8               	btfss	status,0,c
  1700  000FFC  EF02  F008         	goto	u2011
  1701  001000  EF04  F008         	goto	u2010
  1702  001004                     u2011:
  1703  001004  EF35  F008         	goto	l2847
  1704  001008                     u2010:
  1705  001008  503E               	movf	dtoa@n^0,w,c
  1706  00100A  103F               	iorwf	(dtoa@n+1)^0,w,c
  1707  00100C  1040               	iorwf	(dtoa@n+2)^0,w,c
  1708  00100E  1041               	iorwf	(dtoa@n+3)^0,w,c
  1709  001010  1042               	iorwf	(dtoa@n+4)^0,w,c
  1710  001012  1043               	iorwf	(dtoa@n+5)^0,w,c
  1711  001014  1044               	iorwf	(dtoa@n+6)^0,w,c
  1712  001016  1045               	iorwf	(dtoa@n+7)^0,w,c
  1713  001018  A4D8               	btfss	status,2,c
  1714  00101A  EF11  F008         	goto	u2021
  1715  00101E  EF13  F008         	goto	u2020
  1716  001022                     u2021:
  1717  001022  EF7B  F007         	goto	l2827
  1718  001026                     u2020:
  1719  001026  BE39               	btfsc	(dtoa@p+1)^0,7,c
  1720  001028  EF20  F008         	goto	u2030
  1721  00102C  5039               	movf	(dtoa@p+1)^0,w,c
  1722  00102E  E106               	bnz	u2031
  1723  001030  0438               	decf	dtoa@p^0,w,c
  1724  001032  B0D8               	btfsc	status,0,c
  1725  001034  EF1E  F008         	goto	u2031
  1726  001038  EF20  F008         	goto	u2030
  1727  00103C                     u2031:
  1728  00103C  EF7B  F007         	goto	l2827
  1729  001040                     u2030:
  1730  001040  BE3B               	btfsc	(dtoa@w+1)^0,7,c
  1731  001042  EF2B  F008         	goto	u2041
  1732  001046  503B               	movf	(dtoa@w+1)^0,w,c
  1733  001048  E108               	bnz	u2040
  1734  00104A  043A               	decf	dtoa@w^0,w,c
  1735  00104C  A0D8               	btfss	status,0,c
  1736  00104E  EF2B  F008         	goto	u2041
  1737  001052  EF2D  F008         	goto	u2040
  1738  001056                     u2041:
  1739  001056  EF35  F008         	goto	l2847
  1740  00105A                     u2040:
  1741  00105A  0100               	movlb	0	; () banked
  1742  00105C  B37A               	btfsc	_flags& (0+255),1,b
  1743  00105E  EF33  F008         	goto	u2051
  1744  001062  EF35  F008         	goto	u2050
  1745  001066                     u2051:
  1746  001066  EF7B  F007         	goto	l2827
  1747  00106A                     u2050:
  1748  00106A                     l2847:
  1749                           
  1750                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
  1751  00106A  503C               	movf	dtoa@s^0,w,c
  1752  00106C  103D               	iorwf	(dtoa@s+1)^0,w,c
  1753  00106E  A4D8               	btfss	status,2,c
  1754  001070  EF3C  F008         	goto	u2061
  1755  001074  EF3E  F008         	goto	u2060
  1756  001078                     u2061:
  1757  001078  EF46  F008         	goto	l2851
  1758  00107C                     u2060:
  1759  00107C  0100               	movlb	0	; () banked
  1760  00107E  A57A               	btfss	_flags& (0+255),2,b
  1761  001080  EF44  F008         	goto	u2071
  1762  001084  EF46  F008         	goto	u2070
  1763  001088                     u2071:
  1764  001088  EF64  F008         	goto	l2861
  1765  00108C                     u2070:
  1766  00108C                     l2851:
  1767                           
  1768                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 322:         --i;
  1769  00108C  0646               	decf	dtoa@i^0,f,c
  1770  00108E  A0D8               	btfss	status,0,c
  1771  001090  0647               	decf	(dtoa@i+1)^0,f,c
  1772  001092                     
  1773                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
  1774  001092  503C               	movf	dtoa@s^0,w,c
  1775  001094  103D               	iorwf	(dtoa@s+1)^0,w,c
  1776  001096  A4D8               	btfss	status,2,c
  1777  001098  EF50  F008         	goto	u2081
  1778  00109C  EF52  F008         	goto	u2080
  1779  0010A0                     u2081:
  1780  0010A0  EF58  F008         	goto	l2857
  1781  0010A4                     u2080:
  1782  0010A4  0E00               	movlw	0
  1783  0010A6  6E37               	movwf	(_dtoa$2473+1)^0,c
  1784  0010A8  0E2B               	movlw	43
  1785  0010AA  6E36               	movwf	_dtoa$2473^0,c
  1786  0010AC  EF5C  F008         	goto	l2859
  1787  0010B0                     l2857:
  1788  0010B0  0E00               	movlw	0
  1789  0010B2  6E37               	movwf	(_dtoa$2473+1)^0,c
  1790  0010B4  0E2D               	movlw	45
  1791  0010B6  6E36               	movwf	_dtoa$2473^0,c
  1792  0010B8                     l2859:
  1793  0010B8  0E7D               	movlw	low _dbuf
  1794  0010BA  2446               	addwf	dtoa@i^0,w,c
  1795  0010BC  6ED9               	movwf	fsr2l,c
  1796  0010BE  0E00               	movlw	high _dbuf
  1797  0010C0  2047               	addwfc	(dtoa@i+1)^0,w,c
  1798  0010C2  6EDA               	movwf	fsr2h,c
  1799  0010C4  C036  FFDF         	movff	_dtoa$2473,indf2
  1800  0010C8                     l2861:
  1801                           
  1802                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
  1803  0010C8  C024  F019         	movff	dtoa@fp,pad@fp
  1804  0010CC  C025  F01A         	movff	dtoa@fp+1,pad@fp+1
  1805  0010D0  0E7D               	movlw	low _dbuf
  1806  0010D2  2446               	addwf	dtoa@i^0,w,c
  1807  0010D4  6E1B               	movwf	pad@buf^0,c
  1808  0010D6  0E00               	movlw	high _dbuf
  1809  0010D8  2047               	addwfc	(dtoa@i+1)^0,w,c
  1810  0010DA  6E1C               	movwf	(pad@buf+1)^0,c
  1811  0010DC  C03A  F01D         	movff	dtoa@w,pad@p
  1812  0010E0  C03B  F01E         	movff	dtoa@w+1,pad@p+1
  1813  0010E4  EC07  F00C         	call	_pad	;wreg free
  1814  0010E8  C019  F024         	movff	?_pad,?_dtoa
  1815  0010EC  C01A  F025         	movff	?_pad+1,?_dtoa+1
  1816  0010F0  0012               	return		;funcret
  1817  0010F2                     __end_of_dtoa:
  1818                           	callstack 0
  1819                           
  1820 ;; *************** function _pad *****************
  1821 ;; Defined at:
  1822 ;;		line 72 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  1825 ;;		 -> sprintf@f(6), 
  1826 ;;  buf             2   26[COMRAM] PTR unsigned char 
  1827 ;;		 -> dbuf(32), 
  1828 ;;  p               2   28[COMRAM] int 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  w               2   33[COMRAM] int 
  1831 ;;  i               2   31[COMRAM] int 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  2   24[COMRAM] int 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1841 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1842 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1844 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1845 ;;Total ram usage:       11 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 10
  1848 ;; This function calls:
  1849 ;;		_fputc
  1850 ;;		_fputs
  1851 ;;		_strlen
  1852 ;; This function is called by:
  1853 ;;		_dtoa
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text5
  1858  00180E                     __ptext5:
  1859                           	callstack 0
  1860  00180E                     _pad:
  1861                           	callstack 16
  1862  00180E                     
  1863                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  1864  00180E  0100               	movlb	0	; () banked
  1865  001810  A17A               	btfss	_flags& (0+255),0,b
  1866  001812  EF0D  F00C         	goto	u1891
  1867  001816  EF0F  F00C         	goto	u1890
  1868  00181A                     u1891:
  1869  00181A  EF19  F00C         	goto	l2779
  1870  00181E                     u1890:
  1871  00181E                     
  1872                           ; BSR set to: 0
  1873                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  1874  00181E  C01B  F012         	movff	pad@buf,fputs@s
  1875  001822  C01C  F013         	movff	pad@buf+1,fputs@s+1
  1876  001826  C019  F014         	movff	pad@fp,fputs@fp
  1877  00182A  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  1878  00182E  ECE6  F00D         	call	_fputs	;wreg free
  1879  001832                     l2779:
  1880                           
  1881                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  1882  001832  BE1E               	btfsc	(pad@p+1)^0,7,c
  1883  001834  EF1E  F00C         	goto	u1901
  1884  001838  EF20  F00C         	goto	u1900
  1885  00183C                     u1901:
  1886  00183C  EF26  F00C         	goto	l2783
  1887  001840                     u1900:
  1888  001840  C01D  F022         	movff	pad@p,pad@w
  1889  001844  C01E  F023         	movff	pad@p+1,pad@w+1
  1890  001848  EF2A  F00C         	goto	l1166
  1891  00184C                     l2783:
  1892  00184C  0E00               	movlw	0
  1893  00184E  6E23               	movwf	(pad@w+1)^0,c
  1894  001850  0E00               	movlw	0
  1895  001852  6E22               	movwf	pad@w^0,c
  1896  001854                     l1166:
  1897                           
  1898                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1899  001854  0E00               	movlw	0
  1900  001856  6E21               	movwf	(pad@i+1)^0,c
  1901  001858  0E00               	movlw	0
  1902  00185A  6E20               	movwf	pad@i^0,c
  1903                           
  1904                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1905  00185C  EF3C  F00C         	goto	l2789
  1906  001860                     l2785:
  1907                           
  1908                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  1909  001860  0E00               	movlw	0
  1910  001862  6E0A               	movwf	(fputc@c+1)^0,c
  1911  001864  0E20               	movlw	32
  1912  001866  6E09               	movwf	fputc@c^0,c
  1913  001868  C019  F00B         	movff	pad@fp,fputc@fp
  1914  00186C  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  1915  001870  ECA2  F00B         	call	_fputc	;wreg free
  1916  001874                     
  1917                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1918  001874  4A20               	infsnz	pad@i^0,f,c
  1919  001876  2A21               	incf	(pad@i+1)^0,f,c
  1920  001878                     l2789:
  1921                           
  1922                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1923  001878  5022               	movf	pad@w^0,w,c
  1924  00187A  5C20               	subwf	pad@i^0,w,c
  1925  00187C  5021               	movf	(pad@i+1)^0,w,c
  1926  00187E  0A80               	xorlw	128
  1927  001880  6E1F               	movwf	??_pad^0,c
  1928  001882  5023               	movf	(pad@w+1)^0,w,c
  1929  001884  0A80               	xorlw	128
  1930  001886  581F               	subwfb	??_pad^0,w,c
  1931  001888  A0D8               	btfss	status,0,c
  1932  00188A  EF49  F00C         	goto	u1911
  1933  00188E  EF4B  F00C         	goto	u1910
  1934  001892                     u1911:
  1935  001892  EF30  F00C         	goto	l2785
  1936  001896                     u1910:
  1937  001896                     
  1938                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  1939  001896  0100               	movlb	0	; () banked
  1940  001898  B17A               	btfsc	_flags& (0+255),0,b
  1941  00189A  EF51  F00C         	goto	u1921
  1942  00189E  EF53  F00C         	goto	u1920
  1943  0018A2                     u1921:
  1944  0018A2  EF5D  F00C         	goto	l2793
  1945  0018A6                     u1920:
  1946  0018A6                     
  1947                           ; BSR set to: 0
  1948                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  1949  0018A6  C01B  F012         	movff	pad@buf,fputs@s
  1950  0018AA  C01C  F013         	movff	pad@buf+1,fputs@s+1
  1951  0018AE  C019  F014         	movff	pad@fp,fputs@fp
  1952  0018B2  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  1953  0018B6  ECE6  F00D         	call	_fputs	;wreg free
  1954  0018BA                     l2793:
  1955                           
  1956                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
  1957  0018BA  C01B  F009         	movff	pad@buf,strlen@s
  1958  0018BE  C01C  F00A         	movff	pad@buf+1,strlen@s+1
  1959  0018C2  ECC2  F00E         	call	_strlen	;wreg free
  1960  0018C6  5022               	movf	pad@w^0,w,c
  1961  0018C8  2409               	addwf	?_strlen^0,w,c
  1962  0018CA  6E19               	movwf	?_pad^0,c
  1963  0018CC  5023               	movf	(pad@w+1)^0,w,c
  1964  0018CE  200A               	addwfc	(?_strlen+1)^0,w,c
  1965  0018D0  6E1A               	movwf	(?_pad+1)^0,c
  1966  0018D2  0012               	return		;funcret
  1967  0018D4                     __end_of_pad:
  1968                           	callstack 0
  1969                           
  1970 ;; *************** function _strlen *****************
  1971 ;; Defined at:
  1972 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  s               2    8[COMRAM] PTR const unsigned char 
  1975 ;;		 -> dbuf(32), 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  a               2   10[COMRAM] PTR const unsigned char 
  1978 ;;		 -> dbuf(32), 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  2    8[COMRAM] unsigned int 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1989 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1991 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1992 ;;Total ram usage:        4 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 7
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_pad
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text6
  2003  001D84                     __ptext6:
  2004                           	callstack 0
  2005  001D84                     _strlen:
  2006                           	callstack 18
  2007  001D84  C009  F00B         	movff	strlen@s,strlen@a
  2008  001D88  C00A  F00C         	movff	strlen@s+1,strlen@a+1
  2009  001D8C  EFCA  F00E         	goto	l2677
  2010  001D90                     l2675:
  2011  001D90  4A09               	infsnz	strlen@s^0,f,c
  2012  001D92  2A0A               	incf	(strlen@s+1)^0,f,c
  2013  001D94                     l2677:
  2014  001D94  C009  FFD9         	movff	strlen@s,fsr2l
  2015  001D98  C00A  FFDA         	movff	strlen@s+1,fsr2h
  2016  001D9C  50DF               	movf	indf2,w,c
  2017  001D9E  A4D8               	btfss	status,2,c
  2018  001DA0  EFD4  F00E         	goto	u1751
  2019  001DA4  EFD6  F00E         	goto	u1750
  2020  001DA8                     u1751:
  2021  001DA8  EFC8  F00E         	goto	l2675
  2022  001DAC                     u1750:
  2023  001DAC  500B               	movf	strlen@a^0,w,c
  2024  001DAE  5C09               	subwf	strlen@s^0,w,c
  2025  001DB0  6E09               	movwf	?_strlen^0,c
  2026  001DB2  500C               	movf	(strlen@a+1)^0,w,c
  2027  001DB4  580A               	subwfb	(strlen@s+1)^0,w,c
  2028  001DB6  6E0A               	movwf	(?_strlen+1)^0,c
  2029  001DB8  0012               	return		;funcret
  2030  001DBA                     __end_of_strlen:
  2031                           	callstack 0
  2032                           
  2033 ;; *************** function _fputs *****************
  2034 ;; Defined at:
  2035 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputs.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  s               2   17[COMRAM] PTR const unsigned char 
  2038 ;;		 -> dbuf(32), 
  2039 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  2040 ;;		 -> sprintf@f(6), 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  i               2   22[COMRAM] int 
  2043 ;;  c               1   21[COMRAM] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  2   17[COMRAM] int 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2054 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2056 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2057 ;;Total ram usage:        7 bytes
  2058 ;; Hardware stack levels used: 1
  2059 ;; Hardware stack levels required when called: 9
  2060 ;; This function calls:
  2061 ;;		_fputc
  2062 ;; This function is called by:
  2063 ;;		_pad
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text7
  2068  001BCC                     __ptext7:
  2069                           	callstack 0
  2070  001BCC                     _fputs:
  2071                           	callstack 16
  2072  001BCC  0E00               	movlw	0
  2073  001BCE  6E18               	movwf	(fputs@i+1)^0,c
  2074  001BD0  0E00               	movlw	0
  2075  001BD2  6E17               	movwf	fputs@i^0,c
  2076  001BD4  EFF7  F00D         	goto	l2671
  2077  001BD8                     l2667:
  2078  001BD8  C016  F009         	movff	fputs@c,fputc@c
  2079  001BDC  6A0A               	clrf	(fputc@c+1)^0,c
  2080  001BDE  C014  F00B         	movff	fputs@fp,fputc@fp
  2081  001BE2  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  2082  001BE6  ECA2  F00B         	call	_fputc	;wreg free
  2083  001BEA  4A17               	infsnz	fputs@i^0,f,c
  2084  001BEC  2A18               	incf	(fputs@i+1)^0,f,c
  2085  001BEE                     l2671:
  2086  001BEE  5017               	movf	fputs@i^0,w,c
  2087  001BF0  2412               	addwf	fputs@s^0,w,c
  2088  001BF2  6ED9               	movwf	fsr2l,c
  2089  001BF4  5018               	movf	(fputs@i+1)^0,w,c
  2090  001BF6  2013               	addwfc	(fputs@s+1)^0,w,c
  2091  001BF8  6EDA               	movwf	fsr2h,c
  2092  001BFA  50DF               	movf	indf2,w,c
  2093  001BFC  6E16               	movwf	fputs@c^0,c
  2094  001BFE  5016               	movf	fputs@c^0,w,c
  2095  001C00  A4D8               	btfss	status,2,c
  2096  001C02  EF05  F00E         	goto	u1741
  2097  001C06  EF07  F00E         	goto	u1740
  2098  001C0A                     u1741:
  2099  001C0A  EFEC  F00D         	goto	l2667
  2100  001C0E                     u1740:
  2101  001C0E  0012               	return		;funcret
  2102  001C10                     __end_of_fputs:
  2103                           	callstack 0
  2104                           
  2105 ;; *************** function _fputc *****************
  2106 ;; Defined at:
  2107 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputc.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  c               2    8[COMRAM] int 
  2110 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2111 ;;		 -> sprintf@f(6), 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  2    8[COMRAM] int 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2127 ;;Total ram usage:        9 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 8
  2130 ;; This function calls:
  2131 ;;		_putch
  2132 ;; This function is called by:
  2133 ;;		_pad
  2134 ;;		_vfpfcnvrt
  2135 ;;		_fputs
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text8
  2140  001744                     __ptext8:
  2141                           	callstack 0
  2142  001744                     _fputc:
  2143                           	callstack 19
  2144  001744  500B               	movf	fputc@fp^0,w,c
  2145  001746  100C               	iorwf	(fputc@fp+1)^0,w,c
  2146  001748  B4D8               	btfsc	status,2,c
  2147  00174A  EFA9  F00B         	goto	u1681
  2148  00174E  EFAB  F00B         	goto	u1680
  2149  001752                     u1681:
  2150  001752  EFB4  F00B         	goto	l2651
  2151  001756                     u1680:
  2152  001756  500B               	movf	fputc@fp^0,w,c
  2153  001758  100C               	iorwf	(fputc@fp+1)^0,w,c
  2154  00175A  A4D8               	btfss	status,2,c
  2155  00175C  EFB2  F00B         	goto	u1691
  2156  001760  EFB4  F00B         	goto	u1690
  2157  001764                     u1691:
  2158  001764  EFB9  F00B         	goto	l2653
  2159  001768                     u1690:
  2160  001768                     l2651:
  2161  001768  5009               	movf	fputc@c^0,w,c
  2162  00176A  ECDE  F00F         	call	_putch
  2163  00176E  EF06  F00C         	goto	l1230
  2164  001772                     l2653:
  2165  001772  EE20 F004          	lfsr	2,4
  2166  001776  500B               	movf	fputc@fp^0,w,c
  2167  001778  26D9               	addwf	fsr2l,f,c
  2168  00177A  500C               	movf	(fputc@fp+1)^0,w,c
  2169  00177C  22DA               	addwfc	fsr2h,f,c
  2170  00177E  50DE               	movf	postinc2,w,c
  2171  001780  10DE               	iorwf	postinc2,w,c
  2172  001782  B4D8               	btfsc	status,2,c
  2173  001784  EFC6  F00B         	goto	u1701
  2174  001788  EFC8  F00B         	goto	u1700
  2175  00178C                     u1701:
  2176  00178C  EFE3  F00B         	goto	l2657
  2177  001790                     u1700:
  2178  001790  EE20 F004          	lfsr	2,4
  2179  001794  500B               	movf	fputc@fp^0,w,c
  2180  001796  26D9               	addwf	fsr2l,f,c
  2181  001798  500C               	movf	(fputc@fp+1)^0,w,c
  2182  00179A  22DA               	addwfc	fsr2h,f,c
  2183  00179C  EE10 F002          	lfsr	1,2
  2184  0017A0  500B               	movf	fputc@fp^0,w,c
  2185  0017A2  26E1               	addwf	fsr1l,f,c
  2186  0017A4  500C               	movf	(fputc@fp+1)^0,w,c
  2187  0017A6  22E2               	addwfc	fsr1h,f,c
  2188  0017A8  50DE               	movf	postinc2,w,c
  2189  0017AA  5CE6               	subwf	postinc1,w,c
  2190  0017AC  50E6               	movf	postinc1,w,c
  2191  0017AE  0A80               	xorlw	128
  2192  0017B0  6E11               	movwf	(??_fputc+4)^0,c
  2193  0017B2  50DE               	movf	postinc2,w,c
  2194  0017B4  0A80               	xorlw	128
  2195  0017B6  5811               	subwfb	(??_fputc+4)^0,w,c
  2196  0017B8  B0D8               	btfsc	status,0,c
  2197  0017BA  EFE1  F00B         	goto	u1711
  2198  0017BE  EFE3  F00B         	goto	u1710
  2199  0017C2                     u1711:
  2200  0017C2  EF06  F00C         	goto	l1230
  2201  0017C6                     u1710:
  2202  0017C6                     l2657:
  2203  0017C6  EE20 F002          	lfsr	2,2
  2204  0017CA  500B               	movf	fputc@fp^0,w,c
  2205  0017CC  26D9               	addwf	fsr2l,f,c
  2206  0017CE  500C               	movf	(fputc@fp+1)^0,w,c
  2207  0017D0  22DA               	addwfc	fsr2h,f,c
  2208  0017D2  CFDE F00D          	movff	postinc2,??_fputc
  2209  0017D6  CFDD F00E          	movff	postdec2,??_fputc+1
  2210  0017DA  C00B  FFD9         	movff	fputc@fp,fsr2l
  2211  0017DE  C00C  FFDA         	movff	fputc@fp+1,fsr2h
  2212  0017E2  CFDE F00F          	movff	postinc2,??_fputc+2
  2213  0017E6  CFDD F010          	movff	postdec2,??_fputc+3
  2214  0017EA  500D               	movf	??_fputc^0,w,c
  2215  0017EC  240F               	addwf	(??_fputc+2)^0,w,c
  2216  0017EE  6ED9               	movwf	fsr2l,c
  2217  0017F0  500E               	movf	(??_fputc+1)^0,w,c
  2218  0017F2  2010               	addwfc	(??_fputc+3)^0,w,c
  2219  0017F4  6EDA               	movwf	fsr2h,c
  2220  0017F6  C009  FFDF         	movff	fputc@c,indf2
  2221  0017FA  EE20 F002          	lfsr	2,2
  2222  0017FE  500B               	movf	fputc@fp^0,w,c
  2223  001800  26D9               	addwf	fsr2l,f,c
  2224  001802  500C               	movf	(fputc@fp+1)^0,w,c
  2225  001804  22DA               	addwfc	fsr2h,f,c
  2226  001806  2ADE               	incf	postinc2,f,c
  2227  001808  0E00               	movlw	0
  2228  00180A  22DD               	addwfc	postdec2,f,c
  2229  00180C                     l1230:
  2230  00180C  0012               	return		;funcret
  2231  00180E                     __end_of_fputc:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function _putch *****************
  2235 ;; Defined at:
  2236 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/putch.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  c               1    wreg     unsigned char 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  c               1    0[COMRAM] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;Total ram usage:        0 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 7
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_fputc
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text9
  2265  001FBC                     __ptext9:
  2266                           	callstack 0
  2267  001FBC                     _putch:
  2268                           	callstack 19
  2269  001FBC  0012               	return		;funcret
  2270  001FBE                     __end_of_putch:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function _abs *****************
  2274 ;; Defined at:
  2275 ;;		line 1 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  a               2   26[COMRAM] int 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;		None
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2   26[COMRAM] int 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;Total ram usage:        4 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 7
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_dtoa
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text10
  2304  001C96                     __ptext10:
  2305                           	callstack 0
  2306  001C96                     _abs:
  2307                           	callstack 19
  2308  001C96  BE1C               	btfsc	(abs@a+1)^0,7,c
  2309  001C98  EF58  F00E         	goto	u1930
  2310  001C9C  501C               	movf	(abs@a+1)^0,w,c
  2311  001C9E  E106               	bnz	u1931
  2312  001CA0  041B               	decf	abs@a^0,w,c
  2313  001CA2  B0D8               	btfsc	status,0,c
  2314  001CA4  EF56  F00E         	goto	u1931
  2315  001CA8  EF58  F00E         	goto	u1930
  2316  001CAC                     u1931:
  2317  001CAC  EF66  F00E         	goto	l1215
  2318  001CB0                     u1930:
  2319  001CB0  C01B  F01D         	movff	abs@a,??_abs
  2320  001CB4  C01C  F01E         	movff	abs@a+1,??_abs+1
  2321  001CB8  1E1D               	comf	??_abs^0,f,c
  2322  001CBA  1E1E               	comf	(??_abs+1)^0,f,c
  2323  001CBC  4A1D               	infsnz	??_abs^0,f,c
  2324  001CBE  2A1E               	incf	(??_abs+1)^0,f,c
  2325  001CC0  C01D  F01B         	movff	??_abs,?_abs
  2326  001CC4  C01E  F01C         	movff	??_abs+1,?_abs+1
  2327  001CC8  EF6A  F00E         	goto	l1218
  2328  001CCC                     l1215:
  2329  001CCC  C01B  F01B         	movff	abs@a,?_abs
  2330  001CD0  C01C  F01C         	movff	abs@a+1,?_abs+1
  2331  001CD4                     l1218:
  2332  001CD4  0012               	return		;funcret
  2333  001CD6                     __end_of_abs:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function ___aomod *****************
  2337 ;; Defined at:
  2338 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aomod.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  dividend        8    8[COMRAM] long long 
  2341 ;;  divisor         8   16[COMRAM] long long 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  sign            1   25[COMRAM] unsigned char 
  2344 ;;  counter         1   24[COMRAM] unsigned char 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  8    8[COMRAM] long long 
  2347 ;; Registers used:
  2348 ;;		wreg, status,2, status,0
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2354 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2357 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2358 ;;Total ram usage:       18 bytes
  2359 ;; Hardware stack levels used: 1
  2360 ;; Hardware stack levels required when called: 7
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_dtoa
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text11
  2369  0015E0                     __ptext11:
  2370                           	callstack 0
  2371  0015E0                     ___aomod:
  2372                           	callstack 19
  2373  0015E0  0E00               	movlw	0
  2374  0015E2  6E1A               	movwf	___aomod@sign^0,c
  2375  0015E4  BE10               	btfsc	(___aomod@dividend+7)^0,7,c
  2376  0015E6  EFF9  F00A         	goto	u1830
  2377  0015EA  EFF7  F00A         	goto	u1831
  2378  0015EE                     u1831:
  2379  0015EE  EF0B  F00B         	goto	l2747
  2380  0015F2                     u1830:
  2381  0015F2  1E10               	comf	(___aomod@dividend+7)^0,f,c
  2382  0015F4  1E0F               	comf	(___aomod@dividend+6)^0,f,c
  2383  0015F6  1E0E               	comf	(___aomod@dividend+5)^0,f,c
  2384  0015F8  1E0D               	comf	(___aomod@dividend+4)^0,f,c
  2385  0015FA  1E0C               	comf	(___aomod@dividend+3)^0,f,c
  2386  0015FC  1E0B               	comf	(___aomod@dividend+2)^0,f,c
  2387  0015FE  1E0A               	comf	(___aomod@dividend+1)^0,f,c
  2388  001600  6C09               	negf	___aomod@dividend^0,c
  2389  001602  0E00               	movlw	0
  2390  001604  220A               	addwfc	(___aomod@dividend+1)^0,f,c
  2391  001606  220B               	addwfc	(___aomod@dividend+2)^0,f,c
  2392  001608  220C               	addwfc	(___aomod@dividend+3)^0,f,c
  2393  00160A  220D               	addwfc	(___aomod@dividend+4)^0,f,c
  2394  00160C  220E               	addwfc	(___aomod@dividend+5)^0,f,c
  2395  00160E  220F               	addwfc	(___aomod@dividend+6)^0,f,c
  2396  001610  2210               	addwfc	(___aomod@dividend+7)^0,f,c
  2397  001612  0E01               	movlw	1
  2398  001614  6E1A               	movwf	___aomod@sign^0,c
  2399  001616                     l2747:
  2400  001616  BE18               	btfsc	(___aomod@divisor+7)^0,7,c
  2401  001618  EF12  F00B         	goto	u1840
  2402  00161C  EF10  F00B         	goto	u1841
  2403  001620                     u1841:
  2404  001620  EF22  F00B         	goto	l2751
  2405  001624                     u1840:
  2406  001624  1E18               	comf	(___aomod@divisor+7)^0,f,c
  2407  001626  1E17               	comf	(___aomod@divisor+6)^0,f,c
  2408  001628  1E16               	comf	(___aomod@divisor+5)^0,f,c
  2409  00162A  1E15               	comf	(___aomod@divisor+4)^0,f,c
  2410  00162C  1E14               	comf	(___aomod@divisor+3)^0,f,c
  2411  00162E  1E13               	comf	(___aomod@divisor+2)^0,f,c
  2412  001630  1E12               	comf	(___aomod@divisor+1)^0,f,c
  2413  001632  6C11               	negf	___aomod@divisor^0,c
  2414  001634  0E00               	movlw	0
  2415  001636  2212               	addwfc	(___aomod@divisor+1)^0,f,c
  2416  001638  2213               	addwfc	(___aomod@divisor+2)^0,f,c
  2417  00163A  2214               	addwfc	(___aomod@divisor+3)^0,f,c
  2418  00163C  2215               	addwfc	(___aomod@divisor+4)^0,f,c
  2419  00163E  2216               	addwfc	(___aomod@divisor+5)^0,f,c
  2420  001640  2217               	addwfc	(___aomod@divisor+6)^0,f,c
  2421  001642  2218               	addwfc	(___aomod@divisor+7)^0,f,c
  2422  001644                     l2751:
  2423  001644  5011               	movf	___aomod@divisor^0,w,c
  2424  001646  1012               	iorwf	(___aomod@divisor+1)^0,w,c
  2425  001648  1013               	iorwf	(___aomod@divisor+2)^0,w,c
  2426  00164A  1014               	iorwf	(___aomod@divisor+3)^0,w,c
  2427  00164C  1015               	iorwf	(___aomod@divisor+4)^0,w,c
  2428  00164E  1016               	iorwf	(___aomod@divisor+5)^0,w,c
  2429  001650  1017               	iorwf	(___aomod@divisor+6)^0,w,c
  2430  001652  1018               	iorwf	(___aomod@divisor+7)^0,w,c
  2431  001654  B4D8               	btfsc	status,2,c
  2432  001656  EF2F  F00B         	goto	u1851
  2433  00165A  EF31  F00B         	goto	u1850
  2434  00165E                     u1851:
  2435  00165E  EF79  F00B         	goto	l2767
  2436  001662                     u1850:
  2437  001662  0E01               	movlw	1
  2438  001664  6E19               	movwf	___aomod@counter^0,c
  2439  001666  EF3F  F00B         	goto	l2757
  2440  00166A                     l2755:
  2441  00166A  90D8               	bcf	status,0,c
  2442  00166C  3611               	rlcf	___aomod@divisor^0,f,c
  2443  00166E  3612               	rlcf	(___aomod@divisor+1)^0,f,c
  2444  001670  3613               	rlcf	(___aomod@divisor+2)^0,f,c
  2445  001672  3614               	rlcf	(___aomod@divisor+3)^0,f,c
  2446  001674  3615               	rlcf	(___aomod@divisor+4)^0,f,c
  2447  001676  3616               	rlcf	(___aomod@divisor+5)^0,f,c
  2448  001678  3617               	rlcf	(___aomod@divisor+6)^0,f,c
  2449  00167A  3618               	rlcf	(___aomod@divisor+7)^0,f,c
  2450  00167C  2A19               	incf	___aomod@counter^0,f,c
  2451  00167E                     l2757:
  2452  00167E  AE18               	btfss	(___aomod@divisor+7)^0,7,c
  2453  001680  EF44  F00B         	goto	u1861
  2454  001684  EF46  F00B         	goto	u1860
  2455  001688                     u1861:
  2456  001688  EF35  F00B         	goto	l2755
  2457  00168C                     u1860:
  2458  00168C                     l2759:
  2459  00168C  5011               	movf	___aomod@divisor^0,w,c
  2460  00168E  5C09               	subwf	___aomod@dividend^0,w,c
  2461  001690  5012               	movf	(___aomod@divisor+1)^0,w,c
  2462  001692  580A               	subwfb	(___aomod@dividend+1)^0,w,c
  2463  001694  5013               	movf	(___aomod@divisor+2)^0,w,c
  2464  001696  580B               	subwfb	(___aomod@dividend+2)^0,w,c
  2465  001698  5014               	movf	(___aomod@divisor+3)^0,w,c
  2466  00169A  580C               	subwfb	(___aomod@dividend+3)^0,w,c
  2467  00169C  5015               	movf	(___aomod@divisor+4)^0,w,c
  2468  00169E  580D               	subwfb	(___aomod@dividend+4)^0,w,c
  2469  0016A0  5016               	movf	(___aomod@divisor+5)^0,w,c
  2470  0016A2  580E               	subwfb	(___aomod@dividend+5)^0,w,c
  2471  0016A4  5017               	movf	(___aomod@divisor+6)^0,w,c
  2472  0016A6  580F               	subwfb	(___aomod@dividend+6)^0,w,c
  2473  0016A8  5018               	movf	(___aomod@divisor+7)^0,w,c
  2474  0016AA  5810               	subwfb	(___aomod@dividend+7)^0,w,c
  2475  0016AC  A0D8               	btfss	status,0,c
  2476  0016AE  EF5B  F00B         	goto	u1871
  2477  0016B2  EF5D  F00B         	goto	u1870
  2478  0016B6                     u1871:
  2479  0016B6  EF6D  F00B         	goto	l2763
  2480  0016BA                     u1870:
  2481  0016BA  5011               	movf	___aomod@divisor^0,w,c
  2482  0016BC  5E09               	subwf	___aomod@dividend^0,f,c
  2483  0016BE  5012               	movf	(___aomod@divisor+1)^0,w,c
  2484  0016C0  5A0A               	subwfb	(___aomod@dividend+1)^0,f,c
  2485  0016C2  5013               	movf	(___aomod@divisor+2)^0,w,c
  2486  0016C4  5A0B               	subwfb	(___aomod@dividend+2)^0,f,c
  2487  0016C6  5014               	movf	(___aomod@divisor+3)^0,w,c
  2488  0016C8  5A0C               	subwfb	(___aomod@dividend+3)^0,f,c
  2489  0016CA  5015               	movf	(___aomod@divisor+4)^0,w,c
  2490  0016CC  5A0D               	subwfb	(___aomod@dividend+4)^0,f,c
  2491  0016CE  5016               	movf	(___aomod@divisor+5)^0,w,c
  2492  0016D0  5A0E               	subwfb	(___aomod@dividend+5)^0,f,c
  2493  0016D2  5017               	movf	(___aomod@divisor+6)^0,w,c
  2494  0016D4  5A0F               	subwfb	(___aomod@dividend+6)^0,f,c
  2495  0016D6  5018               	movf	(___aomod@divisor+7)^0,w,c
  2496  0016D8  5A10               	subwfb	(___aomod@dividend+7)^0,f,c
  2497  0016DA                     l2763:
  2498  0016DA  90D8               	bcf	status,0,c
  2499  0016DC  3218               	rrcf	(___aomod@divisor+7)^0,f,c
  2500  0016DE  3217               	rrcf	(___aomod@divisor+6)^0,f,c
  2501  0016E0  3216               	rrcf	(___aomod@divisor+5)^0,f,c
  2502  0016E2  3215               	rrcf	(___aomod@divisor+4)^0,f,c
  2503  0016E4  3214               	rrcf	(___aomod@divisor+3)^0,f,c
  2504  0016E6  3213               	rrcf	(___aomod@divisor+2)^0,f,c
  2505  0016E8  3212               	rrcf	(___aomod@divisor+1)^0,f,c
  2506  0016EA  3211               	rrcf	___aomod@divisor^0,f,c
  2507  0016EC  2E19               	decfsz	___aomod@counter^0,f,c
  2508  0016EE  EF46  F00B         	goto	l2759
  2509  0016F2                     l2767:
  2510  0016F2  501A               	movf	___aomod@sign^0,w,c
  2511  0016F4  B4D8               	btfsc	status,2,c
  2512  0016F6  EF7F  F00B         	goto	u1881
  2513  0016FA  EF81  F00B         	goto	u1880
  2514  0016FE                     u1881:
  2515  0016FE  EF91  F00B         	goto	l2771
  2516  001702                     u1880:
  2517  001702  1E10               	comf	(___aomod@dividend+7)^0,f,c
  2518  001704  1E0F               	comf	(___aomod@dividend+6)^0,f,c
  2519  001706  1E0E               	comf	(___aomod@dividend+5)^0,f,c
  2520  001708  1E0D               	comf	(___aomod@dividend+4)^0,f,c
  2521  00170A  1E0C               	comf	(___aomod@dividend+3)^0,f,c
  2522  00170C  1E0B               	comf	(___aomod@dividend+2)^0,f,c
  2523  00170E  1E0A               	comf	(___aomod@dividend+1)^0,f,c
  2524  001710  6C09               	negf	___aomod@dividend^0,c
  2525  001712  0E00               	movlw	0
  2526  001714  220A               	addwfc	(___aomod@dividend+1)^0,f,c
  2527  001716  220B               	addwfc	(___aomod@dividend+2)^0,f,c
  2528  001718  220C               	addwfc	(___aomod@dividend+3)^0,f,c
  2529  00171A  220D               	addwfc	(___aomod@dividend+4)^0,f,c
  2530  00171C  220E               	addwfc	(___aomod@dividend+5)^0,f,c
  2531  00171E  220F               	addwfc	(___aomod@dividend+6)^0,f,c
  2532  001720  2210               	addwfc	(___aomod@dividend+7)^0,f,c
  2533  001722                     l2771:
  2534  001722  C009  F009         	movff	___aomod@dividend,?___aomod
  2535  001726  C00A  F00A         	movff	___aomod@dividend+1,?___aomod+1
  2536  00172A  C00B  F00B         	movff	___aomod@dividend+2,?___aomod+2
  2537  00172E  C00C  F00C         	movff	___aomod@dividend+3,?___aomod+3
  2538  001732  C00D  F00D         	movff	___aomod@dividend+4,?___aomod+4
  2539  001736  C00E  F00E         	movff	___aomod@dividend+5,?___aomod+5
  2540  00173A  C00F  F00F         	movff	___aomod@dividend+6,?___aomod+6
  2541  00173E  C010  F010         	movff	___aomod@dividend+7,?___aomod+7
  2542  001742  0012               	return		;funcret
  2543  001744                     __end_of___aomod:
  2544                           	callstack 0
  2545                           
  2546 ;; *************** function ___aodiv *****************
  2547 ;; Defined at:
  2548 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aodiv.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  dividend        8    8[COMRAM] long long 
  2551 ;;  divisor         8   16[COMRAM] long long 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  quotient        8   26[COMRAM] long long 
  2554 ;;  sign            1   25[COMRAM] unsigned char 
  2555 ;;  counter         1   24[COMRAM] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  8    8[COMRAM] long long 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2565 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2566 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2568 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2569 ;;Total ram usage:       26 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 7
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_dtoa
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text12
  2580  001458                     __ptext12:
  2581                           	callstack 0
  2582  001458                     ___aodiv:
  2583                           	callstack 19
  2584  001458  0E00               	movlw	0
  2585  00145A  6E1A               	movwf	___aodiv@sign^0,c
  2586  00145C  BE18               	btfsc	(___aodiv@divisor+7)^0,7,c
  2587  00145E  EF35  F00A         	goto	u1760
  2588  001462  EF33  F00A         	goto	u1761
  2589  001466                     u1761:
  2590  001466  EF47  F00A         	goto	l2703
  2591  00146A                     u1760:
  2592  00146A  1E18               	comf	(___aodiv@divisor+7)^0,f,c
  2593  00146C  1E17               	comf	(___aodiv@divisor+6)^0,f,c
  2594  00146E  1E16               	comf	(___aodiv@divisor+5)^0,f,c
  2595  001470  1E15               	comf	(___aodiv@divisor+4)^0,f,c
  2596  001472  1E14               	comf	(___aodiv@divisor+3)^0,f,c
  2597  001474  1E13               	comf	(___aodiv@divisor+2)^0,f,c
  2598  001476  1E12               	comf	(___aodiv@divisor+1)^0,f,c
  2599  001478  6C11               	negf	___aodiv@divisor^0,c
  2600  00147A  0E00               	movlw	0
  2601  00147C  2212               	addwfc	(___aodiv@divisor+1)^0,f,c
  2602  00147E  2213               	addwfc	(___aodiv@divisor+2)^0,f,c
  2603  001480  2214               	addwfc	(___aodiv@divisor+3)^0,f,c
  2604  001482  2215               	addwfc	(___aodiv@divisor+4)^0,f,c
  2605  001484  2216               	addwfc	(___aodiv@divisor+5)^0,f,c
  2606  001486  2217               	addwfc	(___aodiv@divisor+6)^0,f,c
  2607  001488  2218               	addwfc	(___aodiv@divisor+7)^0,f,c
  2608  00148A  0E01               	movlw	1
  2609  00148C  6E1A               	movwf	___aodiv@sign^0,c
  2610  00148E                     l2703:
  2611  00148E  BE10               	btfsc	(___aodiv@dividend+7)^0,7,c
  2612  001490  EF4E  F00A         	goto	u1770
  2613  001494  EF4C  F00A         	goto	u1771
  2614  001498                     u1771:
  2615  001498  EF60  F00A         	goto	l2709
  2616  00149C                     u1770:
  2617  00149C  1E10               	comf	(___aodiv@dividend+7)^0,f,c
  2618  00149E  1E0F               	comf	(___aodiv@dividend+6)^0,f,c
  2619  0014A0  1E0E               	comf	(___aodiv@dividend+5)^0,f,c
  2620  0014A2  1E0D               	comf	(___aodiv@dividend+4)^0,f,c
  2621  0014A4  1E0C               	comf	(___aodiv@dividend+3)^0,f,c
  2622  0014A6  1E0B               	comf	(___aodiv@dividend+2)^0,f,c
  2623  0014A8  1E0A               	comf	(___aodiv@dividend+1)^0,f,c
  2624  0014AA  6C09               	negf	___aodiv@dividend^0,c
  2625  0014AC  0E00               	movlw	0
  2626  0014AE  220A               	addwfc	(___aodiv@dividend+1)^0,f,c
  2627  0014B0  220B               	addwfc	(___aodiv@dividend+2)^0,f,c
  2628  0014B2  220C               	addwfc	(___aodiv@dividend+3)^0,f,c
  2629  0014B4  220D               	addwfc	(___aodiv@dividend+4)^0,f,c
  2630  0014B6  220E               	addwfc	(___aodiv@dividend+5)^0,f,c
  2631  0014B8  220F               	addwfc	(___aodiv@dividend+6)^0,f,c
  2632  0014BA  2210               	addwfc	(___aodiv@dividend+7)^0,f,c
  2633  0014BC  0E01               	movlw	1
  2634  0014BE  1A1A               	xorwf	___aodiv@sign^0,f,c
  2635  0014C0                     l2709:
  2636  0014C0  EE20  F01B         	lfsr	2,___aodiv@quotient
  2637  0014C4  0E07               	movlw	7
  2638  0014C6                     u1781:
  2639  0014C6  6ADE               	clrf	postinc2,c
  2640  0014C8  06E8               	decf	wreg,f,c
  2641  0014CA  E2FD               	bc	u1781
  2642  0014CC  5011               	movf	___aodiv@divisor^0,w,c
  2643  0014CE  1012               	iorwf	(___aodiv@divisor+1)^0,w,c
  2644  0014D0  1013               	iorwf	(___aodiv@divisor+2)^0,w,c
  2645  0014D2  1014               	iorwf	(___aodiv@divisor+3)^0,w,c
  2646  0014D4  1015               	iorwf	(___aodiv@divisor+4)^0,w,c
  2647  0014D6  1016               	iorwf	(___aodiv@divisor+5)^0,w,c
  2648  0014D8  1017               	iorwf	(___aodiv@divisor+6)^0,w,c
  2649  0014DA  1018               	iorwf	(___aodiv@divisor+7)^0,w,c
  2650  0014DC  B4D8               	btfsc	status,2,c
  2651  0014DE  EF73  F00A         	goto	u1791
  2652  0014E2  EF75  F00A         	goto	u1790
  2653  0014E6                     u1791:
  2654  0014E6  EFC7  F00A         	goto	l2731
  2655  0014EA                     u1790:
  2656  0014EA  0E01               	movlw	1
  2657  0014EC  6E19               	movwf	___aodiv@counter^0,c
  2658  0014EE  EF83  F00A         	goto	l2717
  2659  0014F2                     l2715:
  2660  0014F2  90D8               	bcf	status,0,c
  2661  0014F4  3611               	rlcf	___aodiv@divisor^0,f,c
  2662  0014F6  3612               	rlcf	(___aodiv@divisor+1)^0,f,c
  2663  0014F8  3613               	rlcf	(___aodiv@divisor+2)^0,f,c
  2664  0014FA  3614               	rlcf	(___aodiv@divisor+3)^0,f,c
  2665  0014FC  3615               	rlcf	(___aodiv@divisor+4)^0,f,c
  2666  0014FE  3616               	rlcf	(___aodiv@divisor+5)^0,f,c
  2667  001500  3617               	rlcf	(___aodiv@divisor+6)^0,f,c
  2668  001502  3618               	rlcf	(___aodiv@divisor+7)^0,f,c
  2669  001504  2A19               	incf	___aodiv@counter^0,f,c
  2670  001506                     l2717:
  2671  001506  AE18               	btfss	(___aodiv@divisor+7)^0,7,c
  2672  001508  EF88  F00A         	goto	u1801
  2673  00150C  EF8A  F00A         	goto	u1800
  2674  001510                     u1801:
  2675  001510  EF79  F00A         	goto	l2715
  2676  001514                     u1800:
  2677  001514                     l2719:
  2678  001514  90D8               	bcf	status,0,c
  2679  001516  361B               	rlcf	___aodiv@quotient^0,f,c
  2680  001518  361C               	rlcf	(___aodiv@quotient+1)^0,f,c
  2681  00151A  361D               	rlcf	(___aodiv@quotient+2)^0,f,c
  2682  00151C  361E               	rlcf	(___aodiv@quotient+3)^0,f,c
  2683  00151E  361F               	rlcf	(___aodiv@quotient+4)^0,f,c
  2684  001520  3620               	rlcf	(___aodiv@quotient+5)^0,f,c
  2685  001522  3621               	rlcf	(___aodiv@quotient+6)^0,f,c
  2686  001524  3622               	rlcf	(___aodiv@quotient+7)^0,f,c
  2687  001526  5011               	movf	___aodiv@divisor^0,w,c
  2688  001528  5C09               	subwf	___aodiv@dividend^0,w,c
  2689  00152A  5012               	movf	(___aodiv@divisor+1)^0,w,c
  2690  00152C  580A               	subwfb	(___aodiv@dividend+1)^0,w,c
  2691  00152E  5013               	movf	(___aodiv@divisor+2)^0,w,c
  2692  001530  580B               	subwfb	(___aodiv@dividend+2)^0,w,c
  2693  001532  5014               	movf	(___aodiv@divisor+3)^0,w,c
  2694  001534  580C               	subwfb	(___aodiv@dividend+3)^0,w,c
  2695  001536  5015               	movf	(___aodiv@divisor+4)^0,w,c
  2696  001538  580D               	subwfb	(___aodiv@dividend+4)^0,w,c
  2697  00153A  5016               	movf	(___aodiv@divisor+5)^0,w,c
  2698  00153C  580E               	subwfb	(___aodiv@dividend+5)^0,w,c
  2699  00153E  5017               	movf	(___aodiv@divisor+6)^0,w,c
  2700  001540  580F               	subwfb	(___aodiv@dividend+6)^0,w,c
  2701  001542  5018               	movf	(___aodiv@divisor+7)^0,w,c
  2702  001544  5810               	subwfb	(___aodiv@dividend+7)^0,w,c
  2703  001546  A0D8               	btfss	status,0,c
  2704  001548  EFA8  F00A         	goto	u1811
  2705  00154C  EFAA  F00A         	goto	u1810
  2706  001550                     u1811:
  2707  001550  EFBB  F00A         	goto	l2727
  2708  001554                     u1810:
  2709  001554  5011               	movf	___aodiv@divisor^0,w,c
  2710  001556  5E09               	subwf	___aodiv@dividend^0,f,c
  2711  001558  5012               	movf	(___aodiv@divisor+1)^0,w,c
  2712  00155A  5A0A               	subwfb	(___aodiv@dividend+1)^0,f,c
  2713  00155C  5013               	movf	(___aodiv@divisor+2)^0,w,c
  2714  00155E  5A0B               	subwfb	(___aodiv@dividend+2)^0,f,c
  2715  001560  5014               	movf	(___aodiv@divisor+3)^0,w,c
  2716  001562  5A0C               	subwfb	(___aodiv@dividend+3)^0,f,c
  2717  001564  5015               	movf	(___aodiv@divisor+4)^0,w,c
  2718  001566  5A0D               	subwfb	(___aodiv@dividend+4)^0,f,c
  2719  001568  5016               	movf	(___aodiv@divisor+5)^0,w,c
  2720  00156A  5A0E               	subwfb	(___aodiv@dividend+5)^0,f,c
  2721  00156C  5017               	movf	(___aodiv@divisor+6)^0,w,c
  2722  00156E  5A0F               	subwfb	(___aodiv@dividend+6)^0,f,c
  2723  001570  5018               	movf	(___aodiv@divisor+7)^0,w,c
  2724  001572  5A10               	subwfb	(___aodiv@dividend+7)^0,f,c
  2725  001574  801B               	bsf	___aodiv@quotient^0,0,c
  2726  001576                     l2727:
  2727  001576  90D8               	bcf	status,0,c
  2728  001578  3218               	rrcf	(___aodiv@divisor+7)^0,f,c
  2729  00157A  3217               	rrcf	(___aodiv@divisor+6)^0,f,c
  2730  00157C  3216               	rrcf	(___aodiv@divisor+5)^0,f,c
  2731  00157E  3215               	rrcf	(___aodiv@divisor+4)^0,f,c
  2732  001580  3214               	rrcf	(___aodiv@divisor+3)^0,f,c
  2733  001582  3213               	rrcf	(___aodiv@divisor+2)^0,f,c
  2734  001584  3212               	rrcf	(___aodiv@divisor+1)^0,f,c
  2735  001586  3211               	rrcf	___aodiv@divisor^0,f,c
  2736  001588  2E19               	decfsz	___aodiv@counter^0,f,c
  2737  00158A  EF8A  F00A         	goto	l2719
  2738  00158E                     l2731:
  2739  00158E  501A               	movf	___aodiv@sign^0,w,c
  2740  001590  B4D8               	btfsc	status,2,c
  2741  001592  EFCD  F00A         	goto	u1821
  2742  001596  EFCF  F00A         	goto	u1820
  2743  00159A                     u1821:
  2744  00159A  EFDF  F00A         	goto	l2735
  2745  00159E                     u1820:
  2746  00159E  1E22               	comf	(___aodiv@quotient+7)^0,f,c
  2747  0015A0  1E21               	comf	(___aodiv@quotient+6)^0,f,c
  2748  0015A2  1E20               	comf	(___aodiv@quotient+5)^0,f,c
  2749  0015A4  1E1F               	comf	(___aodiv@quotient+4)^0,f,c
  2750  0015A6  1E1E               	comf	(___aodiv@quotient+3)^0,f,c
  2751  0015A8  1E1D               	comf	(___aodiv@quotient+2)^0,f,c
  2752  0015AA  1E1C               	comf	(___aodiv@quotient+1)^0,f,c
  2753  0015AC  6C1B               	negf	___aodiv@quotient^0,c
  2754  0015AE  0E00               	movlw	0
  2755  0015B0  221C               	addwfc	(___aodiv@quotient+1)^0,f,c
  2756  0015B2  221D               	addwfc	(___aodiv@quotient+2)^0,f,c
  2757  0015B4  221E               	addwfc	(___aodiv@quotient+3)^0,f,c
  2758  0015B6  221F               	addwfc	(___aodiv@quotient+4)^0,f,c
  2759  0015B8  2220               	addwfc	(___aodiv@quotient+5)^0,f,c
  2760  0015BA  2221               	addwfc	(___aodiv@quotient+6)^0,f,c
  2761  0015BC  2222               	addwfc	(___aodiv@quotient+7)^0,f,c
  2762  0015BE                     l2735:
  2763  0015BE  C01B  F009         	movff	___aodiv@quotient,?___aodiv
  2764  0015C2  C01C  F00A         	movff	___aodiv@quotient+1,?___aodiv+1
  2765  0015C6  C01D  F00B         	movff	___aodiv@quotient+2,?___aodiv+2
  2766  0015CA  C01E  F00C         	movff	___aodiv@quotient+3,?___aodiv+3
  2767  0015CE  C01F  F00D         	movff	___aodiv@quotient+4,?___aodiv+4
  2768  0015D2  C020  F00E         	movff	___aodiv@quotient+5,?___aodiv+5
  2769  0015D6  C021  F00F         	movff	___aodiv@quotient+6,?___aodiv+6
  2770  0015DA  C022  F010         	movff	___aodiv@quotient+7,?___aodiv+7
  2771  0015DE  0012               	return		;funcret
  2772  0015E0                     __end_of___aodiv:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function _sendStringSerial4 *****************
  2776 ;; Defined at:
  2777 ;;		line 46 in file "serial.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  string          2   10[COMRAM] PTR unsigned char 
  2780 ;;		 -> main@buf(40), 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2794 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2796 ;;Total ram usage:        3 bytes
  2797 ;; Hardware stack levels used: 1
  2798 ;; Hardware stack levels required when called: 8
  2799 ;; This function calls:
  2800 ;;		_sendCharSerial4
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text13
  2807  001D16                     __ptext13:
  2808                           	callstack 0
  2809  001D16                     _sendStringSerial4:
  2810                           	callstack 22
  2811  001D16                     
  2812                           ;serial.c: 48:     while (*string != 0) {
  2813  001D16  EF9A  F00E         	goto	l3085
  2814  001D1A                     l3081:
  2815                           
  2816                           ;serial.c: 49:         sendCharSerial4(*string++);
  2817  001D1A  C00B  FFD9         	movff	sendStringSerial4@string,fsr2l
  2818  001D1E  C00C  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2819  001D22  50DF               	movf	indf2,w,c
  2820  001D24  6E0D               	movwf	??_sendStringSerial4^0,c
  2821  001D26  500D               	movf	??_sendStringSerial4^0,w,c
  2822  001D28  6E09               	movwf	sendCharSerial4@charToSend^0,c
  2823  001D2A  6A0A               	clrf	(sendCharSerial4@charToSend+1)^0,c
  2824  001D2C  ECA3  F00F         	call	_sendCharSerial4	;wreg free
  2825  001D30  4A0B               	infsnz	sendStringSerial4@string^0,f,c
  2826  001D32  2A0C               	incf	(sendStringSerial4@string+1)^0,f,c
  2827  001D34                     l3085:
  2828                           
  2829                           ;serial.c: 48:     while (*string != 0) {
  2830  001D34  C00B  FFD9         	movff	sendStringSerial4@string,fsr2l
  2831  001D38  C00C  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2832  001D3C  50DF               	movf	indf2,w,c
  2833  001D3E  A4D8               	btfss	status,2,c
  2834  001D40  EFA4  F00E         	goto	u2231
  2835  001D44  EFA6  F00E         	goto	u2230
  2836  001D48                     u2231:
  2837  001D48  EF8D  F00E         	goto	l3081
  2838  001D4C                     u2230:
  2839  001D4C  0012               	return		;funcret
  2840  001D4E                     __end_of_sendStringSerial4:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _sendCharSerial4 *****************
  2844 ;; Defined at:
  2845 ;;		line 37 in file "serial.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  charToSend      2    8[COMRAM] unsigned int 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		None
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;Total ram usage:        2 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 7
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_sendStringSerial4
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text14
  2874  001F46                     __ptext14:
  2875                           	callstack 0
  2876  001F46                     _sendCharSerial4:
  2877                           	callstack 22
  2878  001F46                     l324:
  2879  001F46  010E               	movlb	14	; () banked
  2880  001F48  A537               	btfss	55,2,b	;volatile
  2881  001F4A  EFA9  F00F         	goto	u2201
  2882  001F4E  EFAB  F00F         	goto	u2200
  2883  001F52                     u2201:
  2884  001F52  EFA3  F00F         	goto	l324
  2885  001F56                     u2200:
  2886  001F56                     
  2887                           ; BSR set to: 14
  2888                           ;serial.c: 39:     TX4REG = charToSend;
  2889  001F56  C009  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2890  001F5A                     
  2891                           ; BSR set to: 14
  2892  001F5A  0012               	return		;funcret
  2893  001F5C                     __end_of_sendCharSerial4:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _interrupts_init *****************
  2897 ;; Defined at:
  2898 ;;		line 13 in file "interrupts.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;Total ram usage:        0 bytes
  2917 ;; Hardware stack levels used: 1
  2918 ;; Hardware stack levels required when called: 12
  2919 ;; This function calls:
  2920 ;;		_colorclick_int_clear
  2921 ;; This function is called by:
  2922 ;;		_main
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text15
  2927  001E78                     __ptext15:
  2928                           	callstack 0
  2929  001E78                     _interrupts_init:
  2930                           	callstack 18
  2931  001E78                     
  2932                           ;interrupts.c: 14:     TRISBbits.TRISB1 = 1;
  2933  001E78  8282               	bsf	130,1,c	;volatile
  2934                           
  2935                           ;interrupts.c: 15:     ANSELBbits.ANSELB1 = 0;
  2936  001E7A  010E               	movlb	14	; () banked
  2937  001E7C  939A               	bcf	154,1,b	;volatile
  2938  001E7E                     
  2939                           ; BSR set to: 14
  2940                           ;interrupts.c: 16:     INT1PPS=0x09;
  2941  001E7E  0E09               	movlw	9
  2942  001E80  010D               	movlb	13	; () banked
  2943  001E82  6FF1               	movwf	241,b	;volatile
  2944  001E84                     
  2945                           ; BSR set to: 13
  2946                           ;interrupts.c: 18:     PIE0bits.INT1IE = 1;
  2947  001E84  010E               	movlb	14	; () banked
  2948  001E86  8329               	bsf	41,1,b	;volatile
  2949  001E88                     
  2950                           ; BSR set to: 14
  2951                           ;interrupts.c: 21:     IPR0bits.INT1IP = 1;
  2952  001E88  831F               	bsf	31,1,b	;volatile
  2953  001E8A                     
  2954                           ; BSR set to: 14
  2955                           ;interrupts.c: 24:     colorclick_int_clear();
  2956  001E8A  EC7C  F00F         	call	_colorclick_int_clear	;wreg free
  2957  001E8E                     
  2958                           ;interrupts.c: 26:     INTCONbits.IPEN = 1;
  2959  001E8E  8AF2               	bsf	242,5,c	;volatile
  2960  001E90                     
  2961                           ;interrupts.c: 27:     INTCONbits.INT1EDG = 0;
  2962  001E90  92F2               	bcf	242,1,c	;volatile
  2963  001E92                     
  2964                           ;interrupts.c: 28:     INTCONbits.PEIE = 1;
  2965  001E92  8CF2               	bsf	242,6,c	;volatile
  2966  001E94                     
  2967                           ;interrupts.c: 29:     INTCONbits.GIE = 1;
  2968  001E94  8EF2               	bsf	242,7,c	;volatile
  2969  001E96  0012               	return		;funcret
  2970  001E98                     __end_of_interrupts_init:
  2971                           	callstack 0
  2972                           
  2973 ;; *************** function _colorclick_int_clear *****************
  2974 ;; Defined at:
  2975 ;;		line 180 in file "color_click.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 11
  2996 ;; This function calls:
  2997 ;;		_I2C_2_Master_Start
  2998 ;;		_I2C_2_Master_Stop
  2999 ;;		_I2C_2_Master_Write
  3000 ;;		_colorclick_int_init
  3001 ;; This function is called by:
  3002 ;;		_interrupts_init
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text16
  3007  001EF8                     __ptext16:
  3008                           	callstack 0
  3009  001EF8                     _colorclick_int_clear:
  3010                           	callstack 18
  3011  001EF8                     
  3012                           ;color_click.c: 181:     I2C_2_Master_Start();
  3013  001EF8  ECCF  F00F         	call	_I2C_2_Master_Start	;wreg free
  3014                           
  3015                           ;color_click.c: 182:     I2C_2_Master_Write(0x52 | 0x00);
  3016  001EFC  0E52               	movlw	82
  3017  001EFE  ECB9  F00F         	call	_I2C_2_Master_Write
  3018                           
  3019                           ;color_click.c: 183:     I2C_2_Master_Write(0b11100110);
  3020  001F02  0EE6               	movlw	230
  3021  001F04  ECB9  F00F         	call	_I2C_2_Master_Write
  3022                           
  3023                           ;color_click.c: 184:     I2C_2_Master_Stop();
  3024  001F08  ECCA  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3025                           
  3026                           ;color_click.c: 185:     colorclick_int_init();
  3027  001F0C  EC6A  F00C         	call	_colorclick_int_init	;wreg free
  3028  001F10  0012               	return		;funcret
  3029  001F12                     __end_of_colorclick_int_clear:
  3030                           	callstack 0
  3031                           
  3032 ;; *************** function _colorclick_int_init *****************
  3033 ;; Defined at:
  3034 ;;		line 188 in file "color_click.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3049 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3051 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3052 ;;Total ram usage:        3 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; Hardware stack levels required when called: 10
  3055 ;; This function calls:
  3056 ;;		_colorclick_writetoaddr
  3057 ;; This function is called by:
  3058 ;;		_colorclick_int_clear
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text17
  3063  0018D4                     __ptext17:
  3064                           	callstack 0
  3065  0018D4                     _colorclick_int_init:
  3066                           	callstack 18
  3067  0018D4                     
  3068                           ;color_click.c: 189:     colorclick_writetoaddr(0x00, 0b10011);
  3069  0018D4  0E13               	movlw	19
  3070  0018D6  6E0B               	movwf	colorclick_writetoaddr@value^0,c
  3071  0018D8  0E00               	movlw	0
  3072  0018DA  EC4C  F00F         	call	_colorclick_writetoaddr
  3073  0018DE                     
  3074                           ;color_click.c: 190:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3075  0018DE  0E3F               	movlw	63
  3076  0018E0  6E0D               	movwf	??_colorclick_int_init^0,c
  3077  0018E2  0E55               	movlw	85
  3078  0018E4                     u2347:
  3079  0018E4  2EE8               	decfsz	wreg,f,c
  3080  0018E6  D7FE               	bra	u2347
  3081  0018E8  2E0D               	decfsz	??_colorclick_int_init^0,f,c
  3082  0018EA  D7FC               	bra	u2347
  3083  0018EC  F000               	nop	
  3084  0018EE                     
  3085                           ;color_click.c: 191:     colorclick_writetoaddr(0x0C, 0b0100);
  3086  0018EE  0E04               	movlw	4
  3087  0018F0  6E0B               	movwf	colorclick_writetoaddr@value^0,c
  3088  0018F2  0E0C               	movlw	12
  3089  0018F4  EC4C  F00F         	call	_colorclick_writetoaddr
  3090  0018F8                     
  3091                           ;color_click.c: 192:     colorclick_writetoaddr(0x04, (clear_lower&&0b11111111));
  3092  0018F8  0E00               	movlw	0
  3093  0018FA  6E0E               	movwf	_colorclick_int_init$1848^0,c
  3094  0018FC  5050               	movf	_clear_lower^0,w,c	;volatile
  3095  0018FE  1051               	iorwf	(_clear_lower+1)^0,w,c	;volatile
  3096  001900  B4D8               	btfsc	status,2,c
  3097  001902  EF85  F00C         	goto	u2111
  3098  001906  EF87  F00C         	goto	u2110
  3099  00190A                     u2111:
  3100  00190A  EF89  F00C         	goto	l2895
  3101  00190E                     u2110:
  3102  00190E  0E01               	movlw	1
  3103  001910  6E0E               	movwf	_colorclick_int_init$1848^0,c
  3104  001912                     l2895:
  3105  001912  C00E  F00B         	movff	_colorclick_int_init$1848,colorclick_writetoaddr@value
  3106  001916  0E04               	movlw	4
  3107  001918  EC4C  F00F         	call	_colorclick_writetoaddr
  3108  00191C                     
  3109                           ;color_click.c: 193:     colorclick_writetoaddr(0x05, (clear_lower>>8));
  3110  00191C  5051               	movf	(_clear_lower+1)^0,w,c	;volatile
  3111  00191E  6E0B               	movwf	colorclick_writetoaddr@value^0,c
  3112  001920  0E05               	movlw	5
  3113  001922  EC4C  F00F         	call	_colorclick_writetoaddr
  3114                           
  3115                           ;color_click.c: 194:     colorclick_writetoaddr(0x06, (clear_upper&&0b11111111));
  3116  001926  0E00               	movlw	0
  3117  001928  6E0F               	movwf	_colorclick_int_init$1849^0,c
  3118  00192A  504E               	movf	_clear_upper^0,w,c	;volatile
  3119  00192C  104F               	iorwf	(_clear_upper+1)^0,w,c	;volatile
  3120  00192E  B4D8               	btfsc	status,2,c
  3121  001930  EF9C  F00C         	goto	u2121
  3122  001934  EF9E  F00C         	goto	u2120
  3123  001938                     u2121:
  3124  001938  EFA0  F00C         	goto	l2903
  3125  00193C                     u2120:
  3126  00193C  0E01               	movlw	1
  3127  00193E  6E0F               	movwf	_colorclick_int_init$1849^0,c
  3128  001940                     l2903:
  3129  001940  C00F  F00B         	movff	_colorclick_int_init$1849,colorclick_writetoaddr@value
  3130  001944  0E06               	movlw	6
  3131  001946  EC4C  F00F         	call	_colorclick_writetoaddr
  3132  00194A                     
  3133                           ;color_click.c: 195:     colorclick_writetoaddr(0x07, (clear_upper>>8));
  3134  00194A  504F               	movf	(_clear_upper+1)^0,w,c	;volatile
  3135  00194C  6E0B               	movwf	colorclick_writetoaddr@value^0,c
  3136  00194E  0E07               	movlw	7
  3137  001950  EC4C  F00F         	call	_colorclick_writetoaddr
  3138  001954  0012               	return		;funcret
  3139  001956                     __end_of_colorclick_int_init:
  3140                           	callstack 0
  3141                           
  3142 ;; *************** function _colorclick_readColour *****************
  3143 ;; Defined at:
  3144 ;;		line 169 in file "color_click.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  current         8   19[COMRAM] struct .
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  8   19[COMRAM] struct .
  3151 ;; Registers used:
  3152 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3158 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;Total ram usage:        8 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; Hardware stack levels required when called: 10
  3165 ;; This function calls:
  3166 ;;		_colorclick_readBlue
  3167 ;;		_colorclick_readClear
  3168 ;;		_colorclick_readGreen
  3169 ;;		_colorclick_readRed
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text18
  3176  001C10                     __ptext18:
  3177                           	callstack 0
  3178  001C10                     _colorclick_readColour:
  3179                           	callstack 20
  3180  001C10                     
  3181                           ;color_click.c: 169: RGB_val colorclick_readColour(RGB_val current);color_click.c: 170: 
      +                          {;color_click.c: 171:     current.R = colorclick_readRed();
  3182  001C10  EC46  F00D         	call	_colorclick_readRed	;wreg free
  3183  001C14  C00D  F014         	movff	?_colorclick_readRed,colorclick_readColour@current
  3184  001C18  C00E  F015         	movff	?_colorclick_readRed+1,colorclick_readColour@current+1
  3185                           
  3186                           ;color_click.c: 172:     current.G = colorclick_readGreen();
  3187  001C1C  EC6E  F00D         	call	_colorclick_readGreen	;wreg free
  3188  001C20  C00D  F016         	movff	?_colorclick_readGreen,colorclick_readColour@current+2
  3189  001C24  C00E  F017         	movff	?_colorclick_readGreen+1,colorclick_readColour@current+3
  3190                           
  3191                           ;color_click.c: 173:     current.B = colorclick_readBlue();
  3192  001C28  ECBE  F00D         	call	_colorclick_readBlue	;wreg free
  3193  001C2C  C00D  F018         	movff	?_colorclick_readBlue,colorclick_readColour@current+4
  3194  001C30  C00E  F019         	movff	?_colorclick_readBlue+1,colorclick_readColour@current+5
  3195                           
  3196                           ;color_click.c: 174:     current.C = colorclick_readClear();
  3197  001C34  EC96  F00D         	call	_colorclick_readClear	;wreg free
  3198  001C38  C00D  F01A         	movff	?_colorclick_readClear,colorclick_readColour@current+6
  3199  001C3C  C00E  F01B         	movff	?_colorclick_readClear+1,colorclick_readColour@current+7
  3200  001C40                     
  3201                           ;color_click.c: 176:     return current;
  3202  001C40  EE20  F014         	lfsr	2,colorclick_readColour@current
  3203  001C44  EE00  F014         	lfsr	0,?_colorclick_readColour
  3204  001C48  0E07               	movlw	7
  3205  001C4A                     u2221:
  3206  001C4A  CFDB FFEB          	movff	plusw2,plusw0
  3207  001C4E  06E8               	decf	wreg,f,c
  3208  001C50  E2FC               	bc	u2221
  3209  001C52  0012               	return		;funcret
  3210  001C54                     __end_of_colorclick_readColour:
  3211                           	callstack 0
  3212                           
  3213 ;; *************** function _colorclick_readRed *****************
  3214 ;; Defined at:
  3215 ;;		line 94 in file "color_click.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;		None
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  tmp             2   17[COMRAM] unsigned int 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  2   12[COMRAM] unsigned int 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3233 ;;Total ram usage:        7 bytes
  3234 ;; Hardware stack levels used: 1
  3235 ;; Hardware stack levels required when called: 9
  3236 ;; This function calls:
  3237 ;;		_I2C_2_Master_Read
  3238 ;;		_I2C_2_Master_RepStart
  3239 ;;		_I2C_2_Master_Start
  3240 ;;		_I2C_2_Master_Stop
  3241 ;;		_I2C_2_Master_Write
  3242 ;; This function is called by:
  3243 ;;		_colorclick_readColour
  3244 ;;		_read_card
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text19
  3249  001A8C                     __ptext19:
  3250                           	callstack 0
  3251  001A8C                     _colorclick_readRed:
  3252                           	callstack 20
  3253  001A8C                     
  3254                           ;color_click.c: 96:  unsigned int tmp;;color_click.c: 97:  I2C_2_Master_Start();
  3255  001A8C  ECCF  F00F         	call	_I2C_2_Master_Start	;wreg free
  3256                           
  3257                           ;color_click.c: 98:  I2C_2_Master_Write(0x52 | 0x00);
  3258  001A90  0E52               	movlw	82
  3259  001A92  ECB9  F00F         	call	_I2C_2_Master_Write
  3260                           
  3261                           ;color_click.c: 99:  I2C_2_Master_Write(0xA0 | 0x16);
  3262  001A96  0EB6               	movlw	182
  3263  001A98  ECB9  F00F         	call	_I2C_2_Master_Write
  3264                           
  3265                           ;color_click.c: 100:  I2C_2_Master_RepStart();
  3266  001A9C  ECC5  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3267                           
  3268                           ;color_click.c: 101:  I2C_2_Master_Write(0x52 | 0x01);
  3269  001AA0  0E53               	movlw	83
  3270  001AA2  ECB9  F00F         	call	_I2C_2_Master_Write
  3271                           
  3272                           ;color_click.c: 102:  tmp=I2C_2_Master_Read(1);
  3273  001AA6  0E01               	movlw	1
  3274  001AA8  EC2A  F00E         	call	_I2C_2_Master_Read
  3275  001AAC  6E0F               	movwf	??_colorclick_readRed^0,c
  3276  001AAE  500F               	movf	??_colorclick_readRed^0,w,c
  3277  001AB0  6E12               	movwf	colorclick_readRed@tmp^0,c
  3278  001AB2  6A13               	clrf	(colorclick_readRed@tmp+1)^0,c
  3279                           
  3280                           ;color_click.c: 103:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3281  001AB4  0E00               	movlw	0
  3282  001AB6  EC2A  F00E         	call	_I2C_2_Master_Read
  3283  001ABA  6E0F               	movwf	??_colorclick_readRed^0,c
  3284  001ABC  500F               	movf	??_colorclick_readRed^0,w,c
  3285  001ABE  6E11               	movwf	(??_colorclick_readRed+2)^0,c
  3286  001AC0  6A10               	clrf	(??_colorclick_readRed+1)^0,c
  3287  001AC2  5012               	movf	colorclick_readRed@tmp^0,w,c
  3288  001AC4  1010               	iorwf	(??_colorclick_readRed+1)^0,w,c
  3289  001AC6  6E12               	movwf	colorclick_readRed@tmp^0,c
  3290  001AC8  5013               	movf	(colorclick_readRed@tmp+1)^0,w,c
  3291  001ACA  1011               	iorwf	(??_colorclick_readRed+2)^0,w,c
  3292  001ACC  6E13               	movwf	(colorclick_readRed@tmp+1)^0,c
  3293                           
  3294                           ;color_click.c: 104:  I2C_2_Master_Stop();
  3295  001ACE  ECCA  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3296  001AD2                     
  3297                           ;color_click.c: 105:  return tmp;
  3298  001AD2  C012  F00D         	movff	colorclick_readRed@tmp,?_colorclick_readRed
  3299  001AD6  C013  F00E         	movff	colorclick_readRed@tmp+1,?_colorclick_readRed+1
  3300  001ADA  0012               	return		;funcret
  3301  001ADC                     __end_of_colorclick_readRed:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _colorclick_readGreen *****************
  3305 ;; Defined at:
  3306 ;;		line 113 in file "color_click.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  tmp             2   17[COMRAM] unsigned int 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  2   12[COMRAM] unsigned int 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;Total ram usage:        7 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 9
  3327 ;; This function calls:
  3328 ;;		_I2C_2_Master_Read
  3329 ;;		_I2C_2_Master_RepStart
  3330 ;;		_I2C_2_Master_Start
  3331 ;;		_I2C_2_Master_Stop
  3332 ;;		_I2C_2_Master_Write
  3333 ;; This function is called by:
  3334 ;;		_colorclick_readColour
  3335 ;;		_read_card
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text20
  3340  001ADC                     __ptext20:
  3341                           	callstack 0
  3342  001ADC                     _colorclick_readGreen:
  3343                           	callstack 20
  3344  001ADC                     
  3345                           ;color_click.c: 115:  unsigned int tmp;;color_click.c: 116:  I2C_2_Master_Start();
  3346  001ADC  ECCF  F00F         	call	_I2C_2_Master_Start	;wreg free
  3347                           
  3348                           ;color_click.c: 117:  I2C_2_Master_Write(0x52 | 0x00);
  3349  001AE0  0E52               	movlw	82
  3350  001AE2  ECB9  F00F         	call	_I2C_2_Master_Write
  3351                           
  3352                           ;color_click.c: 118:  I2C_2_Master_Write(0xA0 | 0x18);
  3353  001AE6  0EB8               	movlw	184
  3354  001AE8  ECB9  F00F         	call	_I2C_2_Master_Write
  3355                           
  3356                           ;color_click.c: 119:  I2C_2_Master_RepStart();
  3357  001AEC  ECC5  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3358                           
  3359                           ;color_click.c: 120:  I2C_2_Master_Write(0x52 | 0x01);
  3360  001AF0  0E53               	movlw	83
  3361  001AF2  ECB9  F00F         	call	_I2C_2_Master_Write
  3362                           
  3363                           ;color_click.c: 121:  tmp=I2C_2_Master_Read(1);
  3364  001AF6  0E01               	movlw	1
  3365  001AF8  EC2A  F00E         	call	_I2C_2_Master_Read
  3366  001AFC  6E0F               	movwf	??_colorclick_readGreen^0,c
  3367  001AFE  500F               	movf	??_colorclick_readGreen^0,w,c
  3368  001B00  6E12               	movwf	colorclick_readGreen@tmp^0,c
  3369  001B02  6A13               	clrf	(colorclick_readGreen@tmp+1)^0,c
  3370                           
  3371                           ;color_click.c: 122:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3372  001B04  0E00               	movlw	0
  3373  001B06  EC2A  F00E         	call	_I2C_2_Master_Read
  3374  001B0A  6E0F               	movwf	??_colorclick_readGreen^0,c
  3375  001B0C  500F               	movf	??_colorclick_readGreen^0,w,c
  3376  001B0E  6E11               	movwf	(??_colorclick_readGreen+2)^0,c
  3377  001B10  6A10               	clrf	(??_colorclick_readGreen+1)^0,c
  3378  001B12  5012               	movf	colorclick_readGreen@tmp^0,w,c
  3379  001B14  1010               	iorwf	(??_colorclick_readGreen+1)^0,w,c
  3380  001B16  6E12               	movwf	colorclick_readGreen@tmp^0,c
  3381  001B18  5013               	movf	(colorclick_readGreen@tmp+1)^0,w,c
  3382  001B1A  1011               	iorwf	(??_colorclick_readGreen+2)^0,w,c
  3383  001B1C  6E13               	movwf	(colorclick_readGreen@tmp+1)^0,c
  3384                           
  3385                           ;color_click.c: 123:  I2C_2_Master_Stop();
  3386  001B1E  ECCA  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3387  001B22                     
  3388                           ;color_click.c: 124:  return tmp;
  3389  001B22  C012  F00D         	movff	colorclick_readGreen@tmp,?_colorclick_readGreen
  3390  001B26  C013  F00E         	movff	colorclick_readGreen@tmp+1,?_colorclick_readGreen+1
  3391  001B2A  0012               	return		;funcret
  3392  001B2C                     __end_of_colorclick_readGreen:
  3393                           	callstack 0
  3394                           
  3395 ;; *************** function _colorclick_readClear *****************
  3396 ;; Defined at:
  3397 ;;		line 151 in file "color_click.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  tmp             2   17[COMRAM] unsigned int 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  2   12[COMRAM] unsigned int 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3414 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3415 ;;Total ram usage:        7 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 9
  3418 ;; This function calls:
  3419 ;;		_I2C_2_Master_Read
  3420 ;;		_I2C_2_Master_RepStart
  3421 ;;		_I2C_2_Master_Start
  3422 ;;		_I2C_2_Master_Stop
  3423 ;;		_I2C_2_Master_Write
  3424 ;; This function is called by:
  3425 ;;		_colorclick_readColour
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text21
  3430  001B2C                     __ptext21:
  3431                           	callstack 0
  3432  001B2C                     _colorclick_readClear:
  3433                           	callstack 20
  3434  001B2C                     
  3435                           ;color_click.c: 153:  unsigned int tmp;;color_click.c: 154:  I2C_2_Master_Start();
  3436  001B2C  ECCF  F00F         	call	_I2C_2_Master_Start	;wreg free
  3437                           
  3438                           ;color_click.c: 155:  I2C_2_Master_Write(0x52 | 0x00);
  3439  001B30  0E52               	movlw	82
  3440  001B32  ECB9  F00F         	call	_I2C_2_Master_Write
  3441                           
  3442                           ;color_click.c: 156:  I2C_2_Master_Write(0xA0 | 0x14);
  3443  001B36  0EB4               	movlw	180
  3444  001B38  ECB9  F00F         	call	_I2C_2_Master_Write
  3445                           
  3446                           ;color_click.c: 157:  I2C_2_Master_RepStart();
  3447  001B3C  ECC5  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3448                           
  3449                           ;color_click.c: 158:  I2C_2_Master_Write(0x52 | 0x01);
  3450  001B40  0E53               	movlw	83
  3451  001B42  ECB9  F00F         	call	_I2C_2_Master_Write
  3452                           
  3453                           ;color_click.c: 159:  tmp=I2C_2_Master_Read(1);
  3454  001B46  0E01               	movlw	1
  3455  001B48  EC2A  F00E         	call	_I2C_2_Master_Read
  3456  001B4C  6E0F               	movwf	??_colorclick_readClear^0,c
  3457  001B4E  500F               	movf	??_colorclick_readClear^0,w,c
  3458  001B50  6E12               	movwf	colorclick_readClear@tmp^0,c
  3459  001B52  6A13               	clrf	(colorclick_readClear@tmp+1)^0,c
  3460                           
  3461                           ;color_click.c: 160:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3462  001B54  0E00               	movlw	0
  3463  001B56  EC2A  F00E         	call	_I2C_2_Master_Read
  3464  001B5A  6E0F               	movwf	??_colorclick_readClear^0,c
  3465  001B5C  500F               	movf	??_colorclick_readClear^0,w,c
  3466  001B5E  6E11               	movwf	(??_colorclick_readClear+2)^0,c
  3467  001B60  6A10               	clrf	(??_colorclick_readClear+1)^0,c
  3468  001B62  5012               	movf	colorclick_readClear@tmp^0,w,c
  3469  001B64  1010               	iorwf	(??_colorclick_readClear+1)^0,w,c
  3470  001B66  6E12               	movwf	colorclick_readClear@tmp^0,c
  3471  001B68  5013               	movf	(colorclick_readClear@tmp+1)^0,w,c
  3472  001B6A  1011               	iorwf	(??_colorclick_readClear+2)^0,w,c
  3473  001B6C  6E13               	movwf	(colorclick_readClear@tmp+1)^0,c
  3474                           
  3475                           ;color_click.c: 161:  I2C_2_Master_Stop();
  3476  001B6E  ECCA  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3477  001B72                     
  3478                           ;color_click.c: 162:  return tmp;
  3479  001B72  C012  F00D         	movff	colorclick_readClear@tmp,?_colorclick_readClear
  3480  001B76  C013  F00E         	movff	colorclick_readClear@tmp+1,?_colorclick_readClear+1
  3481  001B7A  0012               	return		;funcret
  3482  001B7C                     __end_of_colorclick_readClear:
  3483                           	callstack 0
  3484                           
  3485 ;; *************** function _colorclick_readBlue *****************
  3486 ;; Defined at:
  3487 ;;		line 132 in file "color_click.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  tmp             2   17[COMRAM] unsigned int 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  2   12[COMRAM] unsigned int 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3503 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3504 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3505 ;;Total ram usage:        7 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 9
  3508 ;; This function calls:
  3509 ;;		_I2C_2_Master_Read
  3510 ;;		_I2C_2_Master_RepStart
  3511 ;;		_I2C_2_Master_Start
  3512 ;;		_I2C_2_Master_Stop
  3513 ;;		_I2C_2_Master_Write
  3514 ;; This function is called by:
  3515 ;;		_colorclick_readColour
  3516 ;;		_read_card
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text22
  3521  001B7C                     __ptext22:
  3522                           	callstack 0
  3523  001B7C                     _colorclick_readBlue:
  3524                           	callstack 20
  3525  001B7C                     
  3526                           ;color_click.c: 134:  unsigned int tmp;;color_click.c: 135:  I2C_2_Master_Start();
  3527  001B7C  ECCF  F00F         	call	_I2C_2_Master_Start	;wreg free
  3528                           
  3529                           ;color_click.c: 136:  I2C_2_Master_Write(0x52 | 0x00);
  3530  001B80  0E52               	movlw	82
  3531  001B82  ECB9  F00F         	call	_I2C_2_Master_Write
  3532                           
  3533                           ;color_click.c: 137:  I2C_2_Master_Write(0xA0 | 0x1A);
  3534  001B86  0EBA               	movlw	186
  3535  001B88  ECB9  F00F         	call	_I2C_2_Master_Write
  3536                           
  3537                           ;color_click.c: 138:  I2C_2_Master_RepStart();
  3538  001B8C  ECC5  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3539                           
  3540                           ;color_click.c: 139:  I2C_2_Master_Write(0x52 | 0x01);
  3541  001B90  0E53               	movlw	83
  3542  001B92  ECB9  F00F         	call	_I2C_2_Master_Write
  3543                           
  3544                           ;color_click.c: 140:  tmp=I2C_2_Master_Read(1);
  3545  001B96  0E01               	movlw	1
  3546  001B98  EC2A  F00E         	call	_I2C_2_Master_Read
  3547  001B9C  6E0F               	movwf	??_colorclick_readBlue^0,c
  3548  001B9E  500F               	movf	??_colorclick_readBlue^0,w,c
  3549  001BA0  6E12               	movwf	colorclick_readBlue@tmp^0,c
  3550  001BA2  6A13               	clrf	(colorclick_readBlue@tmp+1)^0,c
  3551                           
  3552                           ;color_click.c: 141:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3553  001BA4  0E00               	movlw	0
  3554  001BA6  EC2A  F00E         	call	_I2C_2_Master_Read
  3555  001BAA  6E0F               	movwf	??_colorclick_readBlue^0,c
  3556  001BAC  500F               	movf	??_colorclick_readBlue^0,w,c
  3557  001BAE  6E11               	movwf	(??_colorclick_readBlue+2)^0,c
  3558  001BB0  6A10               	clrf	(??_colorclick_readBlue+1)^0,c
  3559  001BB2  5012               	movf	colorclick_readBlue@tmp^0,w,c
  3560  001BB4  1010               	iorwf	(??_colorclick_readBlue+1)^0,w,c
  3561  001BB6  6E12               	movwf	colorclick_readBlue@tmp^0,c
  3562  001BB8  5013               	movf	(colorclick_readBlue@tmp+1)^0,w,c
  3563  001BBA  1011               	iorwf	(??_colorclick_readBlue+2)^0,w,c
  3564  001BBC  6E13               	movwf	(colorclick_readBlue@tmp+1)^0,c
  3565                           
  3566                           ;color_click.c: 142:  I2C_2_Master_Stop();
  3567  001BBE  ECCA  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3568  001BC2                     
  3569                           ;color_click.c: 143:  return tmp;
  3570  001BC2  C012  F00D         	movff	colorclick_readBlue@tmp,?_colorclick_readBlue
  3571  001BC6  C013  F00E         	movff	colorclick_readBlue@tmp+1,?_colorclick_readBlue+1
  3572  001BCA  0012               	return		;funcret
  3573  001BCC                     __end_of_colorclick_readBlue:
  3574                           	callstack 0
  3575                           
  3576 ;; *************** function _I2C_2_Master_RepStart *****************
  3577 ;; Defined at:
  3578 ;;		line 49 in file "i2c.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3596 ;;Total ram usage:        0 bytes
  3597 ;; Hardware stack levels used: 1
  3598 ;; Hardware stack levels required when called: 8
  3599 ;; This function calls:
  3600 ;;		_I2C_2_Master_Idle
  3601 ;; This function is called by:
  3602 ;;		_colorclick_readRed
  3603 ;;		_colorclick_readGreen
  3604 ;;		_colorclick_readBlue
  3605 ;;		_colorclick_readClear
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text23
  3610  001F8A                     __ptext23:
  3611                           	callstack 0
  3612  001F8A                     _I2C_2_Master_RepStart:
  3613                           	callstack 20
  3614  001F8A                     
  3615                           ;i2c.c: 51:   I2C_2_Master_Idle();
  3616  001F8A  ECF2  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3617  001F8E                     
  3618                           ;i2c.c: 52:   SSP2CON2bits.RSEN = 1;
  3619  001F8E  010E               	movlb	14	; () banked
  3620  001F90  83DA               	bsf	218,1,b	;volatile
  3621  001F92                     
  3622                           ; BSR set to: 14
  3623  001F92  0012               	return		;funcret
  3624  001F94                     __end_of_I2C_2_Master_RepStart:
  3625                           	callstack 0
  3626                           
  3627 ;; *************** function _I2C_2_Master_Read *****************
  3628 ;; Defined at:
  3629 ;;		line 79 in file "i2c.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  ack             1    wreg     unsigned char 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  ack             1   10[COMRAM] unsigned char 
  3634 ;;  tmp             1   11[COMRAM] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      unsigned char 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3647 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3648 ;;Total ram usage:        3 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 8
  3651 ;; This function calls:
  3652 ;;		_I2C_2_Master_Idle
  3653 ;; This function is called by:
  3654 ;;		_colorclick_readRed
  3655 ;;		_colorclick_readGreen
  3656 ;;		_colorclick_readBlue
  3657 ;;		_colorclick_readClear
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text24
  3662  001C54                     __ptext24:
  3663                           	callstack 0
  3664  001C54                     _I2C_2_Master_Read:
  3665                           	callstack 20
  3666                           
  3667                           ; BSR set to: 14
  3668                           ;incstack = 0
  3669                           ;I2C_2_Master_Read@ack stored from wreg
  3670  001C54  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  3671  001C56                     
  3672                           ;i2c.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 80: {;i2c.c: 81:  
      +                           unsigned char tmp;;i2c.c: 82:   I2C_2_Master_Idle();
  3673  001C56  ECF2  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3674  001C5A                     
  3675                           ;i2c.c: 83:   SSP2CON2bits.RCEN = 1;
  3676  001C5A  010E               	movlb	14	; () banked
  3677  001C5C  87DA               	bsf	218,3,b	;volatile
  3678                           
  3679                           ;i2c.c: 84:   I2C_2_Master_Idle();
  3680  001C5E  ECF2  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3681  001C62                     
  3682                           ;i2c.c: 85:   tmp = SSP2BUF;
  3683  001C62  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3684                           
  3685                           ;i2c.c: 86:   I2C_2_Master_Idle();
  3686  001C66  ECF2  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3687  001C6A                     
  3688                           ;i2c.c: 87:   SSP2CON2bits.ACKDT = !ack;
  3689  001C6A  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  3690  001C6C  B4D8               	btfsc	status,2,c
  3691  001C6E  EF3B  F00E         	goto	u2091
  3692  001C72  EF3F  F00E         	goto	u2090
  3693  001C76                     u2091:
  3694  001C76  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  3695  001C78  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  3696  001C7A  EF40  F00E         	goto	u2108
  3697  001C7E                     u2090:
  3698  001C7E  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  3699  001C80                     u2108:
  3700  001C80  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  3701  001C82  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  3702  001C84  010E               	movlb	14	; () banked
  3703  001C86  51DA               	movf	218,w,b	;volatile
  3704  001C88  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  3705  001C8A  0BDF               	andlw	-33
  3706  001C8C  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  3707  001C8E  6FDA               	movwf	218,b	;volatile
  3708  001C90                     
  3709                           ; BSR set to: 14
  3710                           ;i2c.c: 88:   SSP2CON2bits.ACKEN = 1;
  3711  001C90  89DA               	bsf	218,4,b	;volatile
  3712  001C92                     
  3713                           ; BSR set to: 14
  3714                           ;i2c.c: 89:   return tmp;
  3715  001C92  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  3716  001C94                     
  3717                           ; BSR set to: 14
  3718  001C94  0012               	return		;funcret
  3719  001C96                     __end_of_I2C_2_Master_Read:
  3720                           	callstack 0
  3721                           
  3722 ;; *************** function _colorclick_init *****************
  3723 ;; Defined at:
  3724 ;;		line 17 in file "color_click.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3742 ;;Total ram usage:        1 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 10
  3745 ;; This function calls:
  3746 ;;		_I2C_2_Master_Init
  3747 ;;		_colorclick_toggleClearLED
  3748 ;;		_colorclick_writetoaddr
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text25
  3755  001CD6                     __ptext25:
  3756                           	callstack 0
  3757  001CD6                     _colorclick_init:
  3758                           	callstack 20
  3759  001CD6                     
  3760                           ;color_click.c: 20:     I2C_2_Master_Init();
  3761  001CD6  ECDD  F00E         	call	_I2C_2_Master_Init	;wreg free
  3762  001CDA                     
  3763                           ;color_click.c: 23:   colorclick_writetoaddr(0x00, 0x01);
  3764  001CDA  0E01               	movlw	1
  3765  001CDC  6E0B               	movwf	colorclick_writetoaddr@value^0,c
  3766  001CDE  0E00               	movlw	0
  3767  001CE0  EC4C  F00F         	call	_colorclick_writetoaddr
  3768  001CE4                     
  3769                           ;color_click.c: 24:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3770  001CE4  0E3F               	movlw	63
  3771  001CE6  6E0D               	movwf	??_colorclick_init^0,c
  3772  001CE8  0E55               	movlw	85
  3773  001CEA                     u2357:
  3774  001CEA  2EE8               	decfsz	wreg,f,c
  3775  001CEC  D7FE               	bra	u2357
  3776  001CEE  2E0D               	decfsz	??_colorclick_init^0,f,c
  3777  001CF0  D7FC               	bra	u2357
  3778  001CF2  F000               	nop	
  3779  001CF4                     
  3780                           ;color_click.c: 27:  colorclick_writetoaddr(0x00, 0x03);
  3781  001CF4  0E03               	movlw	3
  3782  001CF6  6E0B               	movwf	colorclick_writetoaddr@value^0,c
  3783  001CF8  0E00               	movlw	0
  3784  001CFA  EC4C  F00F         	call	_colorclick_writetoaddr
  3785  001CFE                     
  3786                           ;color_click.c: 30:  colorclick_writetoaddr(0x01, 0xD5);
  3787  001CFE  0ED5               	movlw	213
  3788  001D00  6E0B               	movwf	colorclick_writetoaddr@value^0,c
  3789  001D02  0E01               	movlw	1
  3790  001D04  EC4C  F00F         	call	_colorclick_writetoaddr
  3791  001D08                     
  3792                           ;color_click.c: 33:     TRISGbits.TRISG1 = 0;
  3793  001D08  9287               	bcf	135,1,c	;volatile
  3794  001D0A                     
  3795                           ;color_click.c: 34:     TRISAbits.TRISA4 = 0;
  3796  001D0A  9881               	bcf	129,4,c	;volatile
  3797  001D0C                     
  3798                           ;color_click.c: 35:     TRISFbits.TRISF7 = 0;
  3799  001D0C  9E86               	bcf	134,7,c	;volatile
  3800  001D0E                     
  3801                           ;color_click.c: 38:     colorclick_toggleClearLED(1);
  3802  001D0E  0E01               	movlw	1
  3803  001D10  EC1A  F00F         	call	_colorclick_toggleClearLED
  3804  001D14  0012               	return		;funcret
  3805  001D16                     __end_of_colorclick_init:
  3806                           	callstack 0
  3807                           
  3808 ;; *************** function _colorclick_writetoaddr *****************
  3809 ;; Defined at:
  3810 ;;		line 80 in file "color_click.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  address         1    wreg     unsigned char 
  3813 ;;  value           1   10[COMRAM] unsigned char 
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  address         1   11[COMRAM] unsigned char 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3825 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;Total ram usage:        2 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 9
  3832 ;; This function calls:
  3833 ;;		_I2C_2_Master_Start
  3834 ;;		_I2C_2_Master_Stop
  3835 ;;		_I2C_2_Master_Write
  3836 ;; This function is called by:
  3837 ;;		_colorclick_init
  3838 ;;		_colorclick_int_init
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text26
  3843  001E98                     __ptext26:
  3844                           	callstack 0
  3845  001E98                     _colorclick_writetoaddr:
  3846                           	callstack 18
  3847                           
  3848                           ;incstack = 0
  3849                           ;colorclick_writetoaddr@address stored from wreg
  3850  001E98  6E0C               	movwf	colorclick_writetoaddr@address^0,c
  3851  001E9A                     
  3852                           ;color_click.c: 80: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           81: {;color_click.c: 82:     I2C_2_Master_Start();
  3853  001E9A  ECCF  F00F         	call	_I2C_2_Master_Start	;wreg free
  3854                           
  3855                           ;color_click.c: 83:     I2C_2_Master_Write(0x52 | 0x00);
  3856  001E9E  0E52               	movlw	82
  3857  001EA0  ECB9  F00F         	call	_I2C_2_Master_Write
  3858                           
  3859                           ;color_click.c: 84:     I2C_2_Master_Write(0x80 | address);
  3860  001EA4  500C               	movf	colorclick_writetoaddr@address^0,w,c
  3861  001EA6  0980               	iorlw	128
  3862  001EA8  ECB9  F00F         	call	_I2C_2_Master_Write
  3863                           
  3864                           ;color_click.c: 85:     I2C_2_Master_Write(value);
  3865  001EAC  500B               	movf	colorclick_writetoaddr@value^0,w,c
  3866  001EAE  ECB9  F00F         	call	_I2C_2_Master_Write
  3867                           
  3868                           ;color_click.c: 86:     I2C_2_Master_Stop();
  3869  001EB2  ECCA  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3870  001EB6  0012               	return		;funcret
  3871  001EB8                     __end_of_colorclick_writetoaddr:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _I2C_2_Master_Write *****************
  3875 ;; Defined at:
  3876 ;;		line 69 in file "i2c.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  data_byte       1    wreg     unsigned char 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  data_byte       1    9[COMRAM] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;Total ram usage:        1 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 8
  3897 ;; This function calls:
  3898 ;;		_I2C_2_Master_Idle
  3899 ;; This function is called by:
  3900 ;;		_colorclick_writetoaddr
  3901 ;;		_colorclick_readRed
  3902 ;;		_colorclick_readGreen
  3903 ;;		_colorclick_readBlue
  3904 ;;		_colorclick_readClear
  3905 ;;		_colorclick_int_clear
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text27
  3910  001F72                     __ptext27:
  3911                           	callstack 0
  3912  001F72                     _I2C_2_Master_Write:
  3913                           	callstack 18
  3914                           
  3915                           ;incstack = 0
  3916                           ;I2C_2_Master_Write@data_byte stored from wreg
  3917  001F72  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  3918  001F74                     
  3919                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  3920  001F74  ECF2  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3921  001F78                     
  3922                           ;i2c.c: 72:   SSP2BUF = data_byte;
  3923  001F78  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3924  001F7C  0012               	return		;funcret
  3925  001F7E                     __end_of_I2C_2_Master_Write:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function _I2C_2_Master_Stop *****************
  3929 ;; Defined at:
  3930 ;;		line 59 in file "i2c.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;Total ram usage:        0 bytes
  3949 ;; Hardware stack levels used: 1
  3950 ;; Hardware stack levels required when called: 8
  3951 ;; This function calls:
  3952 ;;		_I2C_2_Master_Idle
  3953 ;; This function is called by:
  3954 ;;		_colorclick_writetoaddr
  3955 ;;		_colorclick_readRed
  3956 ;;		_colorclick_readGreen
  3957 ;;		_colorclick_readBlue
  3958 ;;		_colorclick_readClear
  3959 ;;		_colorclick_int_clear
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text28
  3964  001F94                     __ptext28:
  3965                           	callstack 0
  3966  001F94                     _I2C_2_Master_Stop:
  3967                           	callstack 18
  3968  001F94                     
  3969                           ;i2c.c: 61:   I2C_2_Master_Idle();
  3970  001F94  ECF2  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3971  001F98                     
  3972                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  3973  001F98  010E               	movlb	14	; () banked
  3974  001F9A  85DA               	bsf	218,2,b	;volatile
  3975  001F9C                     
  3976                           ; BSR set to: 14
  3977  001F9C  0012               	return		;funcret
  3978  001F9E                     __end_of_I2C_2_Master_Stop:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _I2C_2_Master_Start *****************
  3982 ;; Defined at:
  3983 ;;		line 39 in file "i2c.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;		None
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;Total ram usage:        0 bytes
  4002 ;; Hardware stack levels used: 1
  4003 ;; Hardware stack levels required when called: 8
  4004 ;; This function calls:
  4005 ;;		_I2C_2_Master_Idle
  4006 ;; This function is called by:
  4007 ;;		_colorclick_writetoaddr
  4008 ;;		_colorclick_readRed
  4009 ;;		_colorclick_readGreen
  4010 ;;		_colorclick_readBlue
  4011 ;;		_colorclick_readClear
  4012 ;;		_colorclick_int_clear
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text29
  4017  001F9E                     __ptext29:
  4018                           	callstack 0
  4019  001F9E                     _I2C_2_Master_Start:
  4020                           	callstack 18
  4021  001F9E                     
  4022                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4023  001F9E  ECF2  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4024  001FA2                     
  4025                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  4026  001FA2  010E               	movlb	14	; () banked
  4027  001FA4  81DA               	bsf	218,0,b	;volatile
  4028  001FA6                     
  4029                           ; BSR set to: 14
  4030  001FA6  0012               	return		;funcret
  4031  001FA8                     __end_of_I2C_2_Master_Start:
  4032                           	callstack 0
  4033                           
  4034 ;; *************** function _I2C_2_Master_Idle *****************
  4035 ;; Defined at:
  4036 ;;		line 30 in file "i2c.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;		None
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;		None
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  1    wreg      void 
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;Total ram usage:        1 bytes
  4055 ;; Hardware stack levels used: 1
  4056 ;; Hardware stack levels required when called: 7
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_I2C_2_Master_Start
  4061 ;;		_I2C_2_Master_RepStart
  4062 ;;		_I2C_2_Master_Stop
  4063 ;;		_I2C_2_Master_Write
  4064 ;;		_I2C_2_Master_Read
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text30
  4069  001DE4                     __ptext30:
  4070                           	callstack 0
  4071  001DE4                     _I2C_2_Master_Idle:
  4072                           	callstack 18
  4073  001DE4                     l30:
  4074  001DE4  010E               	movlb	14	; () banked
  4075  001DE6  B5D8               	btfsc	216,2,b	;volatile
  4076  001DE8  EFF8  F00E         	goto	u1721
  4077  001DEC  EFFA  F00E         	goto	u1720
  4078  001DF0                     u1721:
  4079  001DF0  EFF2  F00E         	goto	l30
  4080  001DF4                     u1720:
  4081  001DF4                     
  4082                           ; BSR set to: 14
  4083  001DF4  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4084  001DF8  0E1F               	movlw	31
  4085  001DFA  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  4086  001DFC  A4D8               	btfss	status,2,c
  4087  001DFE  EF03  F00F         	goto	u1731
  4088  001E02  EF05  F00F         	goto	u1730
  4089  001E06                     u1731:
  4090  001E06  EFF2  F00E         	goto	l30
  4091  001E0A                     u1730:
  4092  001E0A                     
  4093                           ; BSR set to: 14
  4094  001E0A  0012               	return		;funcret
  4095  001E0C                     __end_of_I2C_2_Master_Idle:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function _colorclick_toggleClearLED *****************
  4099 ;; Defined at:
  4100 ;;		line 67 in file "color_click.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  toggle          1    wreg     unsigned char 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  toggle          1    8[COMRAM] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;Total ram usage:        1 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 7
  4121 ;; This function calls:
  4122 ;;		Nothing
  4123 ;; This function is called by:
  4124 ;;		_main
  4125 ;;		_colorclick_init
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text31
  4130  001E34                     __ptext31:
  4131                           	callstack 0
  4132  001E34                     _colorclick_toggleClearLED:
  4133                           	callstack 23
  4134                           
  4135                           ; BSR set to: 14
  4136                           ;incstack = 0
  4137                           ;colorclick_toggleClearLED@toggle stored from wreg
  4138  001E34  6E09               	movwf	colorclick_toggleClearLED@toggle^0,c
  4139  001E36                     
  4140                           ;color_click.c: 67: void colorclick_toggleClearLED(unsigned char toggle);color_click.c: 
      +                          68: {;color_click.c: 69:     LATGbits.LATG1 = toggle;
  4141  001E36  B009               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  4142  001E38  D002               	bra	u2175
  4143  001E3A  927F               	bcf	127,1,c	;volatile
  4144  001E3C  D001               	bra	u2176
  4145  001E3E                     u2175:
  4146  001E3E  827F               	bsf	127,1,c	;volatile
  4147  001E40                     u2176:
  4148                           
  4149                           ;color_click.c: 70:     LATFbits.LATF7 = toggle;
  4150  001E40  B009               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  4151  001E42  D002               	bra	u2185
  4152  001E44  9E7E               	bcf	126,7,c	;volatile
  4153  001E46  D001               	bra	u2186
  4154  001E48                     u2185:
  4155  001E48  8E7E               	bsf	126,7,c	;volatile
  4156  001E4A                     u2186:
  4157                           
  4158                           ;color_click.c: 71:     LATAbits.LATA4 = toggle;
  4159  001E4A  B009               	btfsc	colorclick_toggleClearLED@toggle^0,0,c
  4160  001E4C  D002               	bra	u2195
  4161  001E4E  9879               	bcf	121,4,c	;volatile
  4162  001E50  D001               	bra	u2196
  4163  001E52                     u2195:
  4164  001E52  8879               	bsf	121,4,c	;volatile
  4165  001E54                     u2196:
  4166  001E54  0012               	return		;funcret
  4167  001E56                     __end_of_colorclick_toggleClearLED:
  4168                           	callstack 0
  4169                           
  4170 ;; *************** function _I2C_2_Master_Init *****************
  4171 ;; Defined at:
  4172 ;;		line 8 in file "i2c.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;Total ram usage:        0 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; Hardware stack levels required when called: 7
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_colorclick_init
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text32
  4201  001DBA                     __ptext32:
  4202                           	callstack 0
  4203  001DBA                     _I2C_2_Master_Init:
  4204                           	callstack 22
  4205  001DBA                     
  4206                           ;i2c.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  4207  001DBA  010E               	movlb	14	; () banked
  4208  001DBC  51D9               	movf	217,w,b	;volatile
  4209  001DBE  0BF0               	andlw	-16
  4210  001DC0  0908               	iorlw	8
  4211  001DC2  6FD9               	movwf	217,b	;volatile
  4212  001DC4                     
  4213                           ; BSR set to: 14
  4214                           ;i2c.c: 12:   SSP2CON1bits.SSPEN = 1;
  4215  001DC4  8BD9               	bsf	217,5,b	;volatile
  4216                           
  4217                           ;i2c.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  4218  001DC6  0E9F               	movlw	159
  4219  001DC8  6FD6               	movwf	214,b	;volatile
  4220  001DCA                     
  4221                           ; BSR set to: 14
  4222                           ;i2c.c: 16:   TRISDbits.TRISD5 = 1;
  4223  001DCA  8A84               	bsf	132,5,c	;volatile
  4224  001DCC                     
  4225                           ; BSR set to: 14
  4226                           ;i2c.c: 17:   TRISDbits.TRISD6 = 1;
  4227  001DCC  8C84               	bsf	132,6,c	;volatile
  4228  001DCE                     
  4229                           ; BSR set to: 14
  4230                           ;i2c.c: 18:   ANSELDbits.ANSELD5=0;
  4231  001DCE  9BA7               	bcf	167,5,b	;volatile
  4232  001DD0                     
  4233                           ; BSR set to: 14
  4234                           ;i2c.c: 19:   ANSELDbits.ANSELD6=0;
  4235  001DD0  9DA7               	bcf	167,6,b	;volatile
  4236                           
  4237                           ;i2c.c: 20:   SSP2DATPPS=0x1D;
  4238  001DD2  0E1D               	movlw	29
  4239  001DD4  6F1D               	movwf	29,b	;volatile
  4240                           
  4241                           ;i2c.c: 21:   SSP2CLKPPS=0x1E;
  4242  001DD6  0E1E               	movlw	30
  4243  001DD8  6F1C               	movwf	28,b	;volatile
  4244                           
  4245                           ;i2c.c: 22:   RD5PPS=0x1C;
  4246  001DDA  0E1C               	movlw	28
  4247  001DDC  6F6F               	movwf	111,b	;volatile
  4248                           
  4249                           ;i2c.c: 23:   RD6PPS=0x1B;
  4250  001DDE  0E1B               	movlw	27
  4251  001DE0  6F70               	movwf	112,b	;volatile
  4252  001DE2                     
  4253                           ; BSR set to: 14
  4254  001DE2  0012               	return		;funcret
  4255  001DE4                     __end_of_I2C_2_Master_Init:
  4256                           	callstack 0
  4257                           
  4258 ;; *************** function _buggyLEDs_init *****************
  4259 ;; Defined at:
  4260 ;;		line 100 in file "dc_motor.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		None
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;Total ram usage:        0 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 7
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_main
  4285 ;;		_DCmotors_init
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text33
  4290  001F5C                     __ptext33:
  4291                           	callstack 0
  4292  001F5C                     _buggyLEDs_init:
  4293                           	callstack 23
  4294  001F5C                     
  4295                           ;dc_motor.c: 102:     TRISHbits.TRISH1 = 0;
  4296  001F5C  9288               	bcf	136,1,c	;volatile
  4297                           
  4298                           ;dc_motor.c: 103:     TRISDbits.TRISD3 = 0;
  4299  001F5E  9684               	bcf	132,3,c	;volatile
  4300                           
  4301                           ;dc_motor.c: 104:     TRISDbits.TRISD4 = 0;
  4302  001F60  9884               	bcf	132,4,c	;volatile
  4303                           
  4304                           ;dc_motor.c: 105:     TRISFbits.TRISF0 = 0;
  4305  001F62  9086               	bcf	134,0,c	;volatile
  4306                           
  4307                           ;dc_motor.c: 106:     TRISHbits.TRISH0 = 0;
  4308  001F64  9088               	bcf	136,0,c	;volatile
  4309                           
  4310                           ;dc_motor.c: 108:     LATHbits.LATH1 = 0;
  4311  001F66  9280               	bcf	128,1,c	;volatile
  4312                           
  4313                           ;dc_motor.c: 109:     LATDbits.LATD3 = 0;
  4314  001F68  967C               	bcf	124,3,c	;volatile
  4315                           
  4316                           ;dc_motor.c: 110:     LATDbits.LATD4 = 0;
  4317  001F6A  987C               	bcf	124,4,c	;volatile
  4318                           
  4319                           ;dc_motor.c: 111:     LATFbits.LATF0 = 0;
  4320  001F6C  907E               	bcf	126,0,c	;volatile
  4321                           
  4322                           ;dc_motor.c: 112:     LATHbits.LATH0 = 0;
  4323  001F6E  9080               	bcf	128,0,c	;volatile
  4324  001F70  0012               	return		;funcret
  4325  001F72                     __end_of_buggyLEDs_init:
  4326                           	callstack 0
  4327                           
  4328 ;; *************** function _USART4_init *****************
  4329 ;; Defined at:
  4330 ;;		line 7 in file "serial.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used: 1
  4350 ;; Hardware stack levels required when called: 7
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_main
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text34
  4359  001EB8                     __ptext34:
  4360                           	callstack 0
  4361  001EB8                     _USART4_init:
  4362                           	callstack 23
  4363  001EB8                     
  4364                           ;serial.c: 10:     RC0PPS = 0x12;
  4365  001EB8  0E12               	movlw	18
  4366  001EBA  010E               	movlb	14	; () banked
  4367  001EBC  6F62               	movwf	98,b	;volatile
  4368                           
  4369                           ;serial.c: 11:     RX4PPS = 0x11;
  4370  001EBE  0E11               	movlw	17
  4371  001EC0  6F15               	movwf	21,b	;volatile
  4372  001EC2                     
  4373                           ; BSR set to: 14
  4374                           ;serial.c: 12:     TRISCbits.TRISC1 = 1;
  4375  001EC2  8283               	bsf	131,1,c	;volatile
  4376  001EC4                     
  4377                           ; BSR set to: 14
  4378                           ;serial.c: 14:     BAUD4CONbits.BRG16 = 0;
  4379  001EC4  97E9               	bcf	233,3,b	;volatile
  4380  001EC6                     
  4381                           ; BSR set to: 14
  4382                           ;serial.c: 15:     TX4STAbits.BRGH = 0;
  4383  001EC6  95E8               	bcf	232,2,b	;volatile
  4384                           
  4385                           ;serial.c: 16:     SP4BRGL = 51;
  4386  001EC8  0E33               	movlw	51
  4387  001ECA  6FE5               	movwf	229,b	;volatile
  4388                           
  4389                           ;serial.c: 17:     SP4BRGH = 0;
  4390  001ECC  0E00               	movlw	0
  4391  001ECE  6FE6               	movwf	230,b	;volatile
  4392  001ED0                     
  4393                           ; BSR set to: 14
  4394                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  4395  001ED0  89E7               	bsf	231,4,b	;volatile
  4396  001ED2                     
  4397                           ; BSR set to: 14
  4398                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  4399  001ED2  8BE8               	bsf	232,5,b	;volatile
  4400  001ED4                     
  4401                           ; BSR set to: 14
  4402                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  4403  001ED4  8FE7               	bsf	231,7,b	;volatile
  4404  001ED6                     
  4405                           ; BSR set to: 14
  4406  001ED6  0012               	return		;funcret
  4407  001ED8                     __end_of_USART4_init:
  4408                           	callstack 0
  4409                           
  4410 ;; *************** function _ADC_init *****************
  4411 ;; Defined at:
  4412 ;;		line 8 in file "ADC.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;Total ram usage:        0 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 7
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_main
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text35
  4441  001F12                     __ptext35:
  4442                           	callstack 0
  4443  001F12                     _ADC_init:
  4444                           	callstack 23
  4445  001F12                     
  4446                           ;ADC.c: 10:     TRISFbits.TRISF6=1;
  4447  001F12  8C86               	bsf	134,6,c	;volatile
  4448                           
  4449                           ;ADC.c: 11:     ANSELFbits.ANSELF6=1;
  4450  001F14  010E               	movlb	14	; () banked
  4451  001F16  8DB4               	bsf	180,6,b	;volatile
  4452                           
  4453                           ;ADC.c: 14:     ADREFbits.ADNREF = 0;
  4454  001F18  010F               	movlb	15	; () banked
  4455  001F1A  9958               	bcf	88,4,b	;volatile
  4456  001F1C                     
  4457                           ; BSR set to: 15
  4458                           ;ADC.c: 15:     ADREFbits.ADPREF = 0b00;
  4459  001F1C  0EFC               	movlw	-4
  4460  001F1E  1758               	andwf	88,f,b	;volatile
  4461                           
  4462                           ;ADC.c: 16:     ADPCH=0b101110;
  4463  001F20  0E2E               	movlw	46
  4464  001F22  6F5F               	movwf	95,b	;volatile
  4465  001F24                     
  4466                           ; BSR set to: 15
  4467                           ;ADC.c: 17:     ADCON0bits.ADFM = 0;
  4468  001F24  9460               	bcf	96,2,c	;volatile
  4469  001F26                     
  4470                           ; BSR set to: 15
  4471                           ;ADC.c: 18:     ADCON0bits.ADCS = 1;
  4472  001F26  8860               	bsf	96,4,c	;volatile
  4473  001F28                     
  4474                           ; BSR set to: 15
  4475                           ;ADC.c: 19:     ADCON0bits.ADON = 1;
  4476  001F28  8E60               	bsf	96,7,c	;volatile
  4477  001F2A                     
  4478                           ; BSR set to: 15
  4479  001F2A  0012               	return		;funcret
  4480  001F2C                     __end_of_ADC_init:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _LowISR *****************
  4484 ;; Defined at:
  4485 ;;		line 52 in file "interrupts.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;		None
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  1    wreg      void 
  4492 ;; Registers used:
  4493 ;;		None
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4503 ;;Total ram usage:        1 bytes
  4504 ;; Hardware stack levels used: 1
  4505 ;; Hardware stack levels required when called: 6
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		Interrupt level 1
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	intcodelo
  4514  000018                     __pintcodelo:
  4515                           	callstack 0
  4516  000018                     _LowISR:
  4517                           	callstack 16
  4518                           
  4519                           ; BSR set to: 15
  4520                           ;incstack = 0
  4521  000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4522  00001A  CFE0 F008          	movff	bsr,??_LowISR
  4523  00001E  C008  FFE0         	movff	??_LowISR,bsr
  4524  000022  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4525  000024  0010               	retfie	
  4526  000026                     __end_of_LowISR:
  4527                           	callstack 0
  4528                           
  4529 ;; *************** function _HighISR *****************
  4530 ;; Defined at:
  4531 ;;		line 38 in file "interrupts.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  1    wreg      void 
  4538 ;; Registers used:
  4539 ;;		wreg, status,2, status,0, cstack
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4549 ;;Total ram usage:        0 bytes
  4550 ;; Hardware stack levels used: 1
  4551 ;; Hardware stack levels required when called: 5
  4552 ;; This function calls:
  4553 ;;		i2_colorclick_int_clear
  4554 ;; This function is called by:
  4555 ;;		Interrupt level 2
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	intcode
  4560  000008                     __pintcode:
  4561                           	callstack 0
  4562  000008                     _HighISR:
  4563                           	callstack 16
  4564                           
  4565                           ;incstack = 0
  4566  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4567  00000A  EF2B  F00F         	goto	int_func
  4568                           
  4569                           	psect	intcode_body
  4570  001E56                     __pintcode_body:
  4571                           	callstack 16
  4572  001E56                     int_func:
  4573                           	callstack 16
  4574  001E56                     
  4575                           ;interrupts.c: 39:     if (PIR0bits.INT1IF) {
  4576  001E56  010E               	movlb	14	; () banked
  4577  001E58  A333               	btfss	51,1,b	;volatile
  4578  001E5A  EF31  F00F         	goto	i2u163_41
  4579  001E5E  EF33  F00F         	goto	i2u163_40
  4580  001E62                     i2u163_41:
  4581  001E62  EF3A  F00F         	goto	i2l250
  4582  001E66                     i2u163_40:
  4583  001E66                     
  4584                           ; BSR set to: 14
  4585                           ;interrupts.c: 40:         card_flag = 1;
  4586  001E66  0E01               	movlw	1
  4587  001E68  0100               	movlb	0	; () banked
  4588  001E6A  6F7C               	movwf	_card_flag& (0+255),b	;volatile
  4589  001E6C                     
  4590                           ; BSR set to: 0
  4591                           ;interrupts.c: 41:         colorclick_int_clear();
  4592  001E6C  EC96  F00F         	call	i2_colorclick_int_clear	;wreg free
  4593  001E70                     
  4594                           ;interrupts.c: 42:         PIR0bits.INT1IF = 0;
  4595  001E70  010E               	movlb	14	; () banked
  4596  001E72  9333               	bcf	51,1,b	;volatile
  4597  001E74                     i2l250:
  4598                           
  4599                           ; BSR set to: 14
  4600  001E74  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4601  001E76  0011               	retfie		f
  4602  001E78                     __end_of_HighISR:
  4603                           	callstack 0
  4604                           
  4605 ;; *************** function i2_colorclick_int_clear *****************
  4606 ;; Defined at:
  4607 ;;		line 180 in file "color_click.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;		None
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;		None
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      void 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4625 ;;Total ram usage:        0 bytes
  4626 ;; Hardware stack levels used: 1
  4627 ;; Hardware stack levels required when called: 4
  4628 ;; This function calls:
  4629 ;;		i2_I2C_2_Master_Start
  4630 ;;		i2_I2C_2_Master_Stop
  4631 ;;		i2_I2C_2_Master_Write
  4632 ;;		i2_colorclick_int_init
  4633 ;; This function is called by:
  4634 ;;		_HighISR
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text38
  4639  001F2C                     __ptext38:
  4640                           	callstack 0
  4641  001F2C                     i2_colorclick_int_clear:
  4642                           	callstack 16
  4643  001F2C                     
  4644                           ;color_click.c: 181:     I2C_2_Master_Start();
  4645  001F2C  ECD9  F00F         	call	i2_I2C_2_Master_Start	;wreg free
  4646                           
  4647                           ;color_click.c: 182:     I2C_2_Master_Write(0x52 | 0x00);
  4648  001F30  0E52               	movlw	82
  4649  001F32  ECBF  F00F         	call	i2_I2C_2_Master_Write
  4650                           
  4651                           ;color_click.c: 183:     I2C_2_Master_Write(0b11100110);
  4652  001F36  0EE6               	movlw	230
  4653  001F38  ECBF  F00F         	call	i2_I2C_2_Master_Write
  4654                           
  4655                           ;color_click.c: 184:     I2C_2_Master_Stop();
  4656  001F3C  ECD4  F00F         	call	i2_I2C_2_Master_Stop	;wreg free
  4657                           
  4658                           ;color_click.c: 185:     colorclick_int_init();
  4659  001F40  ECAB  F00C         	call	i2_colorclick_int_init	;wreg free
  4660  001F44  0012               	return		;funcret
  4661  001F46                     __end_ofi2_colorclick_int_clear:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function i2_colorclick_int_init *****************
  4665 ;; Defined at:
  4666 ;;		line 188 in file "color_click.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;		None
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;		None
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;Total ram usage:        3 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 3
  4687 ;; This function calls:
  4688 ;;		i2_colorclick_writetoaddr
  4689 ;; This function is called by:
  4690 ;;		i2_colorclick_int_clear
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text39
  4695  001956                     __ptext39:
  4696                           	callstack 0
  4697  001956                     i2_colorclick_int_init:
  4698                           	callstack 16
  4699  001956                     
  4700                           ;color_click.c: 189:     colorclick_writetoaddr(0x00, 0b10011);
  4701  001956  0E13               	movlw	19
  4702  001958  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  4703  00195A  0E00               	movlw	0
  4704  00195C  EC6C  F00F         	call	i2_colorclick_writetoaddr
  4705  001960                     
  4706                           ;color_click.c: 190:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4707  001960  0E3F               	movlw	63
  4708  001962  6E05               	movwf	??i2_colorclick_int_init^0,c
  4709  001964  0E55               	movlw	85
  4710  001966                     i2u236_47:
  4711  001966  2EE8               	decfsz	wreg,f,c
  4712  001968  D7FE               	bra	i2u236_47
  4713  00196A  2E05               	decfsz	??i2_colorclick_int_init^0,f,c
  4714  00196C  D7FC               	bra	i2u236_47
  4715  00196E  F000               	nop	
  4716  001970                     
  4717                           ;color_click.c: 191:     colorclick_writetoaddr(0x0C, 0b0100);
  4718  001970  0E04               	movlw	4
  4719  001972  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  4720  001974  0E0C               	movlw	12
  4721  001976  EC6C  F00F         	call	i2_colorclick_writetoaddr
  4722  00197A                     
  4723                           ;color_click.c: 192:     colorclick_writetoaddr(0x04, (clear_lower&&0b11111111));
  4724  00197A  0E00               	movlw	0
  4725  00197C  6E06               	movwf	i2_colorclick_int_init$1848^0,c
  4726  00197E  5050               	movf	_clear_lower^0,w,c	;volatile
  4727  001980  1051               	iorwf	(_clear_lower+1)^0,w,c	;volatile
  4728  001982  B4D8               	btfsc	status,2,c
  4729  001984  EFC6  F00C         	goto	i2u152_41
  4730  001988  EFC8  F00C         	goto	i2u152_40
  4731  00198C                     i2u152_41:
  4732  00198C  EFCA  F00C         	goto	i2l2387
  4733  001990                     i2u152_40:
  4734  001990  0E01               	movlw	1
  4735  001992  6E06               	movwf	i2_colorclick_int_init$1848^0,c
  4736  001994                     i2l2387:
  4737  001994  C006  F003         	movff	i2_colorclick_int_init$1848,i2colorclick_writetoaddr@value
  4738  001998  0E04               	movlw	4
  4739  00199A  EC6C  F00F         	call	i2_colorclick_writetoaddr
  4740  00199E                     
  4741                           ;color_click.c: 193:     colorclick_writetoaddr(0x05, (clear_lower>>8));
  4742  00199E  5051               	movf	(_clear_lower+1)^0,w,c	;volatile
  4743  0019A0  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  4744  0019A2  0E05               	movlw	5
  4745  0019A4  EC6C  F00F         	call	i2_colorclick_writetoaddr
  4746                           
  4747                           ;color_click.c: 194:     colorclick_writetoaddr(0x06, (clear_upper&&0b11111111));
  4748  0019A8  0E00               	movlw	0
  4749  0019AA  6E07               	movwf	i2_colorclick_int_init$1849^0,c
  4750  0019AC  504E               	movf	_clear_upper^0,w,c	;volatile
  4751  0019AE  104F               	iorwf	(_clear_upper+1)^0,w,c	;volatile
  4752  0019B0  B4D8               	btfsc	status,2,c
  4753  0019B2  EFDD  F00C         	goto	i2u153_41
  4754  0019B6  EFDF  F00C         	goto	i2u153_40
  4755  0019BA                     i2u153_41:
  4756  0019BA  EFE1  F00C         	goto	i2l2395
  4757  0019BE                     i2u153_40:
  4758  0019BE  0E01               	movlw	1
  4759  0019C0  6E07               	movwf	i2_colorclick_int_init$1849^0,c
  4760  0019C2                     i2l2395:
  4761  0019C2  C007  F003         	movff	i2_colorclick_int_init$1849,i2colorclick_writetoaddr@value
  4762  0019C6  0E06               	movlw	6
  4763  0019C8  EC6C  F00F         	call	i2_colorclick_writetoaddr
  4764  0019CC                     
  4765                           ;color_click.c: 195:     colorclick_writetoaddr(0x07, (clear_upper>>8));
  4766  0019CC  504F               	movf	(_clear_upper+1)^0,w,c	;volatile
  4767  0019CE  6E03               	movwf	i2colorclick_writetoaddr@value^0,c
  4768  0019D0  0E07               	movlw	7
  4769  0019D2  EC6C  F00F         	call	i2_colorclick_writetoaddr
  4770  0019D6  0012               	return		;funcret
  4771  0019D8                     __end_ofi2_colorclick_int_init:
  4772                           	callstack 0
  4773                           
  4774 ;; *************** function i2_colorclick_writetoaddr *****************
  4775 ;; Defined at:
  4776 ;;		line 80 in file "color_click.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  address         1    wreg     unsigned char 
  4779 ;;  value           1    2[COMRAM] unsigned char 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  address         1    3[COMRAM] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4791 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4794 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4795 ;;Total ram usage:        2 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; Hardware stack levels required when called: 2
  4798 ;; This function calls:
  4799 ;;		i2_I2C_2_Master_Start
  4800 ;;		i2_I2C_2_Master_Stop
  4801 ;;		i2_I2C_2_Master_Write
  4802 ;; This function is called by:
  4803 ;;		i2_colorclick_int_init
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text40
  4808  001ED8                     __ptext40:
  4809                           	callstack 0
  4810  001ED8                     i2_colorclick_writetoaddr:
  4811                           	callstack 16
  4812                           
  4813                           ;incstack = 0
  4814                           ;i2colorclick_writetoaddr@address stored from wreg
  4815  001ED8  6E04               	movwf	i2colorclick_writetoaddr@address^0,c
  4816  001EDA                     
  4817                           ;color_click.c: 80: void colorclick_writetoaddr(char address, char value);color_click.c:
      +                           81: {;color_click.c: 82:     I2C_2_Master_Start();
  4818  001EDA  ECD9  F00F         	call	i2_I2C_2_Master_Start	;wreg free
  4819                           
  4820                           ;color_click.c: 83:     I2C_2_Master_Write(0x52 | 0x00);
  4821  001EDE  0E52               	movlw	82
  4822  001EE0  ECBF  F00F         	call	i2_I2C_2_Master_Write
  4823                           
  4824                           ;color_click.c: 84:     I2C_2_Master_Write(0x80 | address);
  4825  001EE4  5004               	movf	i2colorclick_writetoaddr@address^0,w,c
  4826  001EE6  0980               	iorlw	128
  4827  001EE8  ECBF  F00F         	call	i2_I2C_2_Master_Write
  4828                           
  4829                           ;color_click.c: 85:     I2C_2_Master_Write(value);
  4830  001EEC  5003               	movf	i2colorclick_writetoaddr@value^0,w,c
  4831  001EEE  ECBF  F00F         	call	i2_I2C_2_Master_Write
  4832                           
  4833                           ;color_click.c: 86:     I2C_2_Master_Stop();
  4834  001EF2  ECD4  F00F         	call	i2_I2C_2_Master_Stop	;wreg free
  4835  001EF6  0012               	return		;funcret
  4836  001EF8                     __end_ofi2_colorclick_writetoaddr:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function i2_I2C_2_Master_Write *****************
  4840 ;; Defined at:
  4841 ;;		line 69 in file "i2c.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  data_byte       1    wreg     unsigned char 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  data_byte       1    1[COMRAM] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4859 ;;Total ram usage:        1 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 1
  4862 ;; This function calls:
  4863 ;;		i2_I2C_2_Master_Idle
  4864 ;; This function is called by:
  4865 ;;		i2_colorclick_writetoaddr
  4866 ;;		i2_colorclick_int_clear
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text41
  4871  001F7E                     __ptext41:
  4872                           	callstack 0
  4873  001F7E                     i2_I2C_2_Master_Write:
  4874                           	callstack 16
  4875                           
  4876                           ;incstack = 0
  4877                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  4878  001F7E  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  4879  001F80                     
  4880                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  4881  001F80  EC06  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4882  001F84                     
  4883                           ;i2c.c: 72:   SSP2BUF = data_byte;
  4884  001F84  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  4885  001F88  0012               	return		;funcret
  4886  001F8A                     __end_ofi2_I2C_2_Master_Write:
  4887                           	callstack 0
  4888                           
  4889 ;; *************** function i2_I2C_2_Master_Stop *****************
  4890 ;; Defined at:
  4891 ;;		line 59 in file "i2c.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0, cstack
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4909 ;;Total ram usage:        0 bytes
  4910 ;; Hardware stack levels used: 1
  4911 ;; Hardware stack levels required when called: 1
  4912 ;; This function calls:
  4913 ;;		i2_I2C_2_Master_Idle
  4914 ;; This function is called by:
  4915 ;;		i2_colorclick_writetoaddr
  4916 ;;		i2_colorclick_int_clear
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text42
  4921  001FA8                     __ptext42:
  4922                           	callstack 0
  4923  001FA8                     i2_I2C_2_Master_Stop:
  4924                           	callstack 16
  4925  001FA8                     
  4926                           ;i2c.c: 61:   I2C_2_Master_Idle();
  4927  001FA8  EC06  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4928  001FAC                     
  4929                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  4930  001FAC  010E               	movlb	14	; () banked
  4931  001FAE  85DA               	bsf	218,2,b	;volatile
  4932  001FB0                     
  4933                           ; BSR set to: 14
  4934  001FB0  0012               	return		;funcret
  4935  001FB2                     __end_ofi2_I2C_2_Master_Stop:
  4936                           	callstack 0
  4937                           
  4938 ;; *************** function i2_I2C_2_Master_Start *****************
  4939 ;; Defined at:
  4940 ;;		line 39 in file "i2c.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;Total ram usage:        0 bytes
  4959 ;; Hardware stack levels used: 1
  4960 ;; Hardware stack levels required when called: 1
  4961 ;; This function calls:
  4962 ;;		i2_I2C_2_Master_Idle
  4963 ;; This function is called by:
  4964 ;;		i2_colorclick_writetoaddr
  4965 ;;		i2_colorclick_int_clear
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text43
  4970  001FB2                     __ptext43:
  4971                           	callstack 0
  4972  001FB2                     i2_I2C_2_Master_Start:
  4973                           	callstack 16
  4974  001FB2                     
  4975                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4976  001FB2  EC06  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4977  001FB6                     
  4978                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  4979  001FB6  010E               	movlb	14	; () banked
  4980  001FB8  81DA               	bsf	218,0,b	;volatile
  4981  001FBA                     
  4982                           ; BSR set to: 14
  4983  001FBA  0012               	return		;funcret
  4984  001FBC                     __end_ofi2_I2C_2_Master_Start:
  4985                           	callstack 0
  4986                           
  4987 ;; *************** function i2_I2C_2_Master_Idle *****************
  4988 ;; Defined at:
  4989 ;;		line 30 in file "i2c.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;		None
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;		None
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5007 ;;Total ram usage:        1 bytes
  5008 ;; Hardware stack levels used: 1
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		i2_I2C_2_Master_Start
  5013 ;;		i2_I2C_2_Master_Stop
  5014 ;;		i2_I2C_2_Master_Write
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text44
  5019  001E0C                     __ptext44:
  5020                           	callstack 0
  5021  001E0C                     i2_I2C_2_Master_Idle:
  5022                           	callstack 16
  5023  001E0C                     i2l30:
  5024  001E0C  010E               	movlb	14	; () banked
  5025  001E0E  B5D8               	btfsc	216,2,b	;volatile
  5026  001E10  EF0C  F00F         	goto	i2u122_41
  5027  001E14  EF0E  F00F         	goto	i2u122_40
  5028  001E18                     i2u122_41:
  5029  001E18  EF06  F00F         	goto	i2l30
  5030  001E1C                     i2u122_40:
  5031  001E1C                     
  5032                           ; BSR set to: 14
  5033  001E1C  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5034  001E20  0E1F               	movlw	31
  5035  001E22  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5036  001E24  A4D8               	btfss	status,2,c
  5037  001E26  EF17  F00F         	goto	i2u123_41
  5038  001E2A  EF19  F00F         	goto	i2u123_40
  5039  001E2E                     i2u123_41:
  5040  001E2E  EF06  F00F         	goto	i2l30
  5041  001E32                     i2u123_40:
  5042  001E32                     
  5043                           ; BSR set to: 14
  5044  001E32  0012               	return		;funcret
  5045  001E34                     __end_ofi2_I2C_2_Master_Idle:
  5046                           	callstack 0
  5047                           
  5048                           	psect	rparam
  5049  0000                     
  5050                           	psect	temp
  5051  000057                     btemp:
  5052                           	callstack 0
  5053  000057                     	ds	1
  5054  0000                     int$flags	set	btemp
  5055  0000                     wtemp8	set	btemp+1
  5056  0000                     ttemp5	set	btemp+1
  5057  0000                     ttemp6	set	btemp+4
  5058  0000                     ttemp7	set	btemp+8
  5059                           
  5060                           	psect	idloc
  5061                           
  5062                           ;Config register IDLOC0 @ 0x200000
  5063                           ;	unspecified, using default values
  5064  200000                     	org	2097152
  5065  200000  0FFF               	dw	4095
  5066                           
  5067                           ;Config register IDLOC1 @ 0x200002
  5068                           ;	unspecified, using default values
  5069  200002                     	org	2097154
  5070  200002  0FFF               	dw	4095
  5071                           
  5072                           ;Config register IDLOC2 @ 0x200004
  5073                           ;	unspecified, using default values
  5074  200004                     	org	2097156
  5075  200004  0FFF               	dw	4095
  5076                           
  5077                           ;Config register IDLOC3 @ 0x200006
  5078                           ;	unspecified, using default values
  5079  200006                     	org	2097158
  5080  200006  0FFF               	dw	4095
  5081                           
  5082                           ;Config register IDLOC4 @ 0x200008
  5083                           ;	unspecified, using default values
  5084  200008                     	org	2097160
  5085  200008  0FFF               	dw	4095
  5086                           
  5087                           ;Config register IDLOC5 @ 0x20000A
  5088                           ;	unspecified, using default values
  5089  20000A                     	org	2097162
  5090  20000A  0FFF               	dw	4095
  5091                           
  5092                           ;Config register IDLOC6 @ 0x20000C
  5093                           ;	unspecified, using default values
  5094  20000C                     	org	2097164
  5095  20000C  0FFF               	dw	4095
  5096                           
  5097                           ;Config register IDLOC7 @ 0x20000E
  5098                           ;	unspecified, using default values
  5099  20000E                     	org	2097166
  5100  20000E  0FFF               	dw	4095
  5101                           
  5102                           	psect	config
  5103                           
  5104                           ;Config register CONFIG1L @ 0x300000
  5105                           ;	External Oscillator mode Selection bits
  5106                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5107                           ;	Power-up default value for COSC bits
  5108                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5109  300000                     	org	3145728
  5110  300000  AA                 	db	170
  5111                           
  5112                           ;Config register CONFIG1H @ 0x300001
  5113                           ;	unspecified, using default values
  5114                           ;	Clock Out Enable bit
  5115                           ;	CLKOUTEN = 0x1, unprogrammed default
  5116                           ;	Clock Switch Enable bit
  5117                           ;	CSWEN = 0x1, unprogrammed default
  5118                           ;	Fail-Safe Clock Monitor Enable bit
  5119                           ;	FCMEN = 0x1, unprogrammed default
  5120  300001                     	org	3145729
  5121  300001  FF                 	db	255
  5122                           
  5123                           ;Config register CONFIG2L @ 0x300002
  5124                           ;	unspecified, using default values
  5125                           ;	Master Clear Enable bit
  5126                           ;	MCLRE = 0x1, unprogrammed default
  5127                           ;	Power-up Timer Enable bit
  5128                           ;	PWRTE = 0x1, unprogrammed default
  5129                           ;	Low-power BOR enable bit
  5130                           ;	LPBOREN = 0x1, unprogrammed default
  5131                           ;	Brown-out Reset Enable bits
  5132                           ;	BOREN = 0x3, unprogrammed default
  5133  300002                     	org	3145730
  5134  300002  FF                 	db	255
  5135                           
  5136                           ;Config register CONFIG2H @ 0x300003
  5137                           ;	unspecified, using default values
  5138                           ;	Brown Out Reset Voltage selection bits
  5139                           ;	BORV = 0x3, unprogrammed default
  5140                           ;	ZCD Disable bit
  5141                           ;	ZCD = 0x1, unprogrammed default
  5142                           ;	PPSLOCK bit One-Way Set Enable bit
  5143                           ;	PPS1WAY = 0x1, unprogrammed default
  5144                           ;	Stack Full/Underflow Reset Enable bit
  5145                           ;	STVREN = 0x1, unprogrammed default
  5146                           ;	Debugger Enable bit
  5147                           ;	DEBUG = 0x1, unprogrammed default
  5148                           ;	Extended Instruction Set Enable bit
  5149                           ;	XINST = 0x1, unprogrammed default
  5150  300003                     	org	3145731
  5151  300003  FF                 	db	255
  5152                           
  5153                           ;Config register CONFIG3L @ 0x300004
  5154                           ;	WDT Period Select bits
  5155                           ;	WDTCPS = 0x1F, unprogrammed default
  5156                           ;	WDT operating mode
  5157                           ;	WDTE = OFF, WDT Disabled
  5158  300004                     	org	3145732
  5159  300004  9F                 	db	159
  5160                           
  5161                           ;Config register CONFIG3H @ 0x300005
  5162                           ;	unspecified, using default values
  5163                           ;	WDT Window Select bits
  5164                           ;	WDTCWS = 0x7, unprogrammed default
  5165                           ;	WDT input clock selector
  5166                           ;	WDTCCS = 0x7, unprogrammed default
  5167  300005                     	org	3145733
  5168  300005  FF                 	db	255
  5169                           
  5170                           ;Config register CONFIG4L @ 0x300006
  5171                           ;	unspecified, using default values
  5172                           ;	Write Protection Block 0
  5173                           ;	WRT0 = 0x1, unprogrammed default
  5174                           ;	Write Protection Block 1
  5175                           ;	WRT1 = 0x1, unprogrammed default
  5176                           ;	Write Protection Block 2
  5177                           ;	WRT2 = 0x1, unprogrammed default
  5178                           ;	Write Protection Block 3
  5179                           ;	WRT3 = 0x1, unprogrammed default
  5180                           ;	Write Protection Block 3
  5181                           ;	WRT4 = 0x1, unprogrammed default
  5182                           ;	Write Protection Block 3
  5183                           ;	WRT5 = 0x1, unprogrammed default
  5184                           ;	Write Protection Block 3
  5185                           ;	WRT6 = 0x1, unprogrammed default
  5186                           ;	Write Protection Block 3
  5187                           ;	WRT7 = 0x1, unprogrammed default
  5188  300006                     	org	3145734
  5189  300006  FF                 	db	255
  5190                           
  5191                           ;Config register CONFIG4H @ 0x300007
  5192                           ;	unspecified, using default values
  5193                           ;	Configuration Register Write Protection bit
  5194                           ;	WRTC = 0x1, unprogrammed default
  5195                           ;	Boot Block Write Protection bit
  5196                           ;	WRTB = 0x1, unprogrammed default
  5197                           ;	Data EEPROM Write Protection bit
  5198                           ;	WRTD = 0x1, unprogrammed default
  5199                           ;	Scanner Enable bit
  5200                           ;	SCANE = 0x1, unprogrammed default
  5201                           ;	Low Voltage Programming Enable bit
  5202                           ;	LVP = 0x1, unprogrammed default
  5203  300007                     	org	3145735
  5204  300007  FF                 	db	255
  5205                           
  5206                           ;Config register CONFIG5L @ 0x300008
  5207                           ;	unspecified, using default values
  5208                           ;	UserNVM Program Memory Code Protection bit
  5209                           ;	CP = 0x1, unprogrammed default
  5210                           ;	DataNVM Memory Code Protection bit
  5211                           ;	CPD = 0x1, unprogrammed default
  5212  300008                     	org	3145736
  5213  300008  FF                 	db	255
  5214                           
  5215                           ;Config register CONFIG5H @ 0x300009
  5216                           ;	unspecified, using default values
  5217  300009                     	org	3145737
  5218  300009  FF                 	db	255
  5219                           
  5220                           ;Config register CONFIG6L @ 0x30000A
  5221                           ;	unspecified, using default values
  5222                           ;	Table Read Protection Block 0
  5223                           ;	EBTR0 = 0x1, unprogrammed default
  5224                           ;	Table Read Protection Block 1
  5225                           ;	EBTR1 = 0x1, unprogrammed default
  5226                           ;	Table Read Protection Block 2
  5227                           ;	EBTR2 = 0x1, unprogrammed default
  5228                           ;	Table Read Protection Block 3
  5229                           ;	EBTR3 = 0x1, unprogrammed default
  5230                           ;	Table Read Protection Block 4
  5231                           ;	EBTR4 = 0x1, unprogrammed default
  5232                           ;	Table Read Protection Block 5
  5233                           ;	EBTR5 = 0x1, unprogrammed default
  5234                           ;	Table Read Protection Block 6
  5235                           ;	EBTR6 = 0x1, unprogrammed default
  5236                           ;	Table Read Protection Block 7
  5237                           ;	EBTR7 = 0x1, unprogrammed default
  5238  30000A                     	org	3145738
  5239  30000A  FF                 	db	255
  5240                           
  5241                           ;Config register CONFIG6H @ 0x30000B
  5242                           ;	unspecified, using default values
  5243                           ;	Boot Block Table Read Protection bit
  5244                           ;	EBTRB = 0x1, unprogrammed default
  5245  30000B                     	org	3145739
  5246  30000B  FF                 	db	255
  5247                           tosu	equ	0xFFF
  5248                           tosh	equ	0xFFE
  5249                           tosl	equ	0xFFD
  5250                           stkptr	equ	0xFFC
  5251                           pclatu	equ	0xFFB
  5252                           pclath	equ	0xFFA
  5253                           pcl	equ	0xFF9
  5254                           tblptru	equ	0xFF8
  5255                           tblptrh	equ	0xFF7
  5256                           tblptrl	equ	0xFF6
  5257                           tablat	equ	0xFF5
  5258                           prodh	equ	0xFF4
  5259                           prodl	equ	0xFF3
  5260                           indf0	equ	0xFEF
  5261                           postinc0	equ	0xFEE
  5262                           postdec0	equ	0xFED
  5263                           preinc0	equ	0xFEC
  5264                           plusw0	equ	0xFEB
  5265                           fsr0h	equ	0xFEA
  5266                           fsr0l	equ	0xFE9
  5267                           wreg	equ	0xFE8
  5268                           indf1	equ	0xFE7
  5269                           postinc1	equ	0xFE6
  5270                           postdec1	equ	0xFE5
  5271                           preinc1	equ	0xFE4
  5272                           plusw1	equ	0xFE3
  5273                           fsr1h	equ	0xFE2
  5274                           fsr1l	equ	0xFE1
  5275                           bsr	equ	0xFE0
  5276                           indf2	equ	0xFDF
  5277                           postinc2	equ	0xFDE
  5278                           postdec2	equ	0xFDD
  5279                           preinc2	equ	0xFDC
  5280                           plusw2	equ	0xFDB
  5281                           fsr2h	equ	0xFDA
  5282                           fsr2l	equ	0xFD9
  5283                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         130
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      86
    BANK0           160     40     101
    BANK1           256     64     124
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK1[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK1[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2400_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK1[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK1[40]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK1[40]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S851$dir_LAT	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    S851$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _colorclick_int_clear->_colorclick_int_init
    _colorclick_int_init->_colorclick_writetoaddr
    _colorclick_readColour->_colorclick_readBlue
    _colorclick_readColour->_colorclick_readClear
    _colorclick_readColour->_colorclick_readGreen
    _colorclick_readColour->_colorclick_readRed
    _colorclick_readRed->_I2C_2_Master_Read
    _colorclick_readGreen->_I2C_2_Master_Read
    _colorclick_readClear->_I2C_2_Master_Read
    _colorclick_readBlue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colorclick_init->_colorclick_writetoaddr
    _colorclick_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_colorclick_int_clear->i2_colorclick_int_init
    i2_colorclick_int_init->i2_colorclick_writetoaddr
    i2_colorclick_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0   12721
                                             38 BANK0      2     2      0
                                              0 BANK1     64    64      0
                           _ADC_init
                        _USART4_init
                     _buggyLEDs_init
                    _colorclick_init
              _colorclick_readColour
          _colorclick_toggleClearLED
                    _interrupts_init
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12    8597
                                             18 BANK0     20     8     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                             10 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             71 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             35 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             26 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              8 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              8 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    3     1      2     366
                                             10 COMRAM     3     1      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      2     0      2     121
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0    1008
               _colorclick_int_clear
 ---------------------------------------------------------------------------------
 (2) _colorclick_int_clear                                 0     0      0    1008
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
                _colorclick_int_init
 ---------------------------------------------------------------------------------
 (3) _colorclick_int_init                                  3     3      0     977
                                             12 COMRAM     3     3      0
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _colorclick_readColour                                8     0      8     981
                                             19 COMRAM     8     0      8
                _colorclick_readBlue
               _colorclick_readClear
               _colorclick_readGreen
                 _colorclick_readRed
 ---------------------------------------------------------------------------------
 (2) _colorclick_readRed                                   7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readGreen                                 7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readClear                                 7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _colorclick_readBlue                                  7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _colorclick_init                                      1     1      0     996
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
          _colorclick_toggleClearLED
             _colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (4) _colorclick_writetoaddr                               2     1      1     903
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      31
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _colorclick_toggleClearLED                            1     1      0      93
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggyLEDs_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART4_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     292
             i2_colorclick_int_clear
 ---------------------------------------------------------------------------------
 (11) i2_colorclick_int_clear                              0     0      0     292
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
              i2_colorclick_int_init
 ---------------------------------------------------------------------------------
 (12) i2_colorclick_int_init                               3     3      0     270
                                              4 COMRAM     3     3      0
           i2_colorclick_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_colorclick_writetoaddr                            2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _USART4_init
   _buggyLEDs_init
   _colorclick_init
     _I2C_2_Master_Init
     _colorclick_toggleClearLED
     _colorclick_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colorclick_readColour
     _colorclick_readBlue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readClear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readGreen
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _colorclick_readRed
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colorclick_toggleClearLED
   _interrupts_init
     _colorclick_int_clear
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
       _colorclick_int_init
         _colorclick_writetoaddr
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_colorclick_int_clear
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_colorclick_int_init
       i2_colorclick_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     40      7C       7       48.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      65       5       63.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      56       1       91.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     137       8        0.0%
DATA                 0      0     137       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec  7 11:26:31 2021

        __end_of_colorclick_readRed 1ADC         __end_of_colorclick_readBlue 1BCC  
      __end_of_colorclick_readClear 1B7C         __end_of_colorclick_int_init 1956  
      __end_of_colorclick_readGreen 1B2C                                  l30 1DE4  
                                l33 1E0A                                  l42 1F9C  
                                l27 1DE2                                  l36 1FA6  
                                l45 1F7C                                  l39 1F92  
                                l48 1C94                                  bsr 000FE0  
      __end_of_colorclick_int_clear 1F12      __size_of_colorclick_readColour 0044  
 __size_ofi2_colorclick_writetoaddr 0020       __end_of_colorclick_readColour 1C54  
         ?i2_colorclick_writetoaddr 0003              _colorclick_writetoaddr 1E98  
                               l401 1D14                                 l410 1EB6  
                               l315 1ED6                                 l244 1E96  
                               l324 1F46                                 l413 1ADA  
                               l333 1D4C                                 l270 1F2A  
                               l422 1B7A                                 l326 1F56  
                               l407 1E54                                 l327 1F5A  
                               l176 1F70                                 l416 1B2A  
                               l425 1C52                                 l419 1BCA  
                               l435 1954                                 l428 1F10  
                               l575 15DE                                 l588 1742  
                               _abs 1C96                                 _pad 180E  
                               wreg 000FE8                     _colorclick_init 1CD6  
           ?i2_colorclick_int_clear 0001                                l1210 1A30  
                              l1211 1A38                                ?_abs 001B  
                              l1204 12A4                                l1230 180C  
                              l1215 1CCC                                l3001 1F1C  
                              l1241 1FBC                                l1218 1CD4  
                              l3003 1F24                                l3011 1CDA  
                              l1171 18D2                                l1139 1A8A  
                              l3005 1F26                                l3021 1D0A  
                              l3013 1CE4                                l3101 12C4  
                              l1238 1C0E                                l1166 1854  
                              l3007 1F28                                l3023 1D0C  
                              l3015 1CF4                                l3031 1E84  
                              l1247 1DB8                                l3111 131C  
                              l3103 12C6                                l3025 1D0E  
                              l3017 1CFE                                l3009 1CD6  
                              l3041 1E92                                l3033 1E88  
                              l1169 1896                                l1177 0EB0  
                              l3121 1360                                l3113 1340  
                              l3105 12DE                                l3051 1EC6  
                              l3019 1D08                                l3043 1E94  
                              l3035 1E8A                                l3027 1E78  
                              l1179 0EB8                                l3131 13FC  
                              l3123 1396                                l3115 1348  
                              l3107 1302                                l3053 1ED0  
                              l3045 1EB8                                l3061 1C10  
                              l3037 1E8E                                l3029 1E7E  
                              l1197 10F0                                l3133 1414  
                              l3125 13A2                                l3117 1350  
                              l3109 1310                                l3055 1ED2  
                              l3047 1EC2                                l3063 1C40  
                              l3039 1E90                                l3071 1A54  
                              l3135 1426                                l3127 13BA  
                              l3119 1358                                l3057 1ED4  
                              l3049 1EC4                                l3081 1D1A  
                              l3073 1A5C                                l3137 144C  
                              l3129 13F0                                l3059 1F5C  
                              l3083 1D30                                l3075 1A78  
                              l3067 1A3A                                l3091 12AE  
                              l3085 1D34                                l2701 148A  
                              l3069 1A4C                                l3093 12B6  
                              l3079 1D16                                l2711 14CC  
                              l2703 148E                                l3095 12BA  
                              l3087 12A6                                l2801 1E9A  
                              l2721 1526                                l2713 14EA  
                              l2705 149C                                l3097 12BC  
                              l3089 12AA                                l2723 1554  
                              l2715 14F2                                l2731 158E  
                              l2707 14BC                                l2651 1768  
                              l2811 0E88                                l2803 0E10  
                              l3099 12BE                                l2661 1DE4  
                              l2901 193C                                l2733 159E  
                              l2725 1574                                l2717 1506  
                              l2709 14C0                                l2741 15E4  
                              l2653 1772                                l2821 0EE0  
                              l2813 0E8A                                l2805 0E30  
                              l2663 1DF4                                l2903 1940  
                              l2735 15BE                                l2727 1576  
                              l2719 1514                                l2751 1644  
                              l2743 15F2                                l2655 1790  
                              l2647 1744                                l2671 1BEE  
                              l2831 0F7E                                l2823 0EE6  
                              l2815 0EA4                                l2807 0E58  
                              l2911 1124                                l2905 194A  
                              l2729 1588                                l2761 16BA  
                              l2753 1662                                l2745 1612  
                              l2657 17C6                                l2649 1756  
                              l2665 1BCC                                l2673 1D84  
                              l2841 1026                                l2833 0F84  
                              l2825 0EEE                                l2817 0EC0  
                              l2809 0E78                                l2921 11CA  
                              l2913 1136                                l2683 1F9E  
                              l2691 1F74                                l2771 1722  
                              l2763 16DA                                l2755 166A  
                              l2747 1616                                l2739 15E0  
                              l2667 1BD8                                l2675 1D90  
                              l2851 108C                                l2843 1040  
                              l2835 0F8A                                l2827 0EF6  
                              l2819 0ED2                                l2931 1248  
                              l2915 113A                                l2907 10F2  
                              l2685 1FA2                                l2693 1F78  
                              l2765 16EC                                l2757 167E  
                              l2749 1624                                l2669 1BEA  
                              l2677 1D94                                l2781 1840  
                              l2853 1092                                l2861 10C8  
                              l2845 105A                                l2829 0EFC  
                              l2837 0FEE                                l2925 1202  
                              l2917 115E                                l2909 1116  
                              l2941 126E                                ?_pad 0019  
                              l2951 1DC4                                l2687 1F94  
                              l2871 1C5A                                l2695 1458  
                              l2759 168C                                l2767 16F2  
                              l2679 1DAC                                l2791 18A6  
                              l2783 184C                                l2775 180E  
                              l2855 10A4                                l2839 1008  
                              l2847 106A                                l2943 1292  
                              l2927 1226                                l2935 1254  
                              l2919 1182                                l2953 1DCA  
                              l2961 1E36                                l2689 1F98  
                              l2873 1C62                                l2865 1F8A  
                              l2697 145C                                l2769 1702  
                              l2793 18BA                                l2785 1860  
                              l2777 181E                                l2857 10B0  
                              l2849 107C                                l2937 1262  
                              l2929 1234                                l2955 1DCC  
                              l2875 1C6A                                l2867 1F8E  
                              l2891 18FC                                l2883 18D4  
                              l2963 1EF8                                l2699 146A  
                              l2787 1874                                l2779 1832  
                              l2859 10B8                                l2957 1DCE  
                              l2949 1DBA                                l2877 1C90  
                              l2869 1C56                                l2981 1BC2  
                              l2973 1ADC                                l2893 190E  
                              l2885 18DE                                l2965 1F46  
                              l2797 1C96                                l2789 1878  
                              l2959 1DD0                                l2879 1C92  
                              l2975 1B22                                l2967 1A8C  
                              l2895 1912                                l2887 18EE  
                              l2799 1CB0                                l2991 19D8  
                              l2985 1B2C                                l2969 1AD2  
                              l2897 191C                                l2889 18F8  
                              l2993 19E0                                l2979 1B7C  
                              l2987 1B72                                l2899 192A  
                              l2995 19EE                                l2997 1A14  
                              l2999 1F12                                STR_1 0E01  
                              STR_2 0E01                                u2000 0EE0  
                              u2001 0EDC                                u2010 1008  
                              u2011 1004                                u2020 1026  
                              u2021 1022                                u2110 190E  
                              u2030 1040                                u2111 190A  
                              u2031 103C                                u2120 193C  
                              u2200 1F56                                u2040 105A  
                              u2121 1938                                u2201 1F52  
                              u2041 1056                                u2050 106A  
                              u2130 1116                                u2210 1A30  
                              u2051 1066                                u2131 1112  
                              u2211 1A2C                                u2108 1C80  
                              u2060 107C                                u2140 115E  
                              u2221 1C4A                                u2061 1078  
                              u2141 115A                                u2230 1D4C  
                              u2070 108C                                u2150 1182  
                              u2231 1D48                                u2071 1088  
                              u2151 117E                                u2080 10A4  
                              u2160 1226                        _BAUD4CONbits 000EE9  
                              u2081 10A0                                u2161 1222  
                              u2241 12E8                                u2090 1C7E  
                              u2091 1C76                                u2251 12FA  
                              u1700 1790                                u2308 143C  
                              u1701 178C                                u2261 1326  
                              u2317 12D2                                u1710 17C6  
                              u2175 1E3E                                u1711 17C2  
                              u2327 13AE                                u2271 1338  
                              u2176 1E40                                u1720 1DF4  
                              u1800 1514                                u2280 1426  
                              u2185 1E48                                u1721 1DF0  
                              u1801 1510                                u2281 1422  
                              u2337 1408                                u2186 1E4A  
                              u1730 1E0A                                u1810 1554  
                              u2290 1438                                _T2PR 000FBC  
                              u2195 1E52                                u1731 1E06  
                              u2347 18E4                                u1811 1550  
                              u2291 1430                                u2196 1E54  
                              u1820 159E                                u1740 1C0E  
                              u1900 1840                                u2357 1CEA  
                              u1821 159A                                u1741 1C0A  
                              u1901 183C                                u1830 15F2  
                              u1750 1DAC                                u1910 1896  
                              u1831 15EE                                u1751 1DA8  
                              u1911 1892                                u1760 146A  
                              u1840 1624                                u1680 1756  
                              u1920 18A6                                u1761 1466  
                              u1841 1620                                u1681 1752  
                              u1921 18A2                                u1770 149C  
                              u1850 1662                                u1930 1CB0  
                              u1690 1768                                u1771 1498  
                              u1851 165E                                u1931 1CAC  
                              u1691 1764                                u1860 168C  
                              u1940 0E40                                u1781 14C6  
                              u1861 1688                                u1941 0E3A  
                              u1790 14EA                                u1870 16BA  
                              u1950 0E42                                u1791 14E6  
                              u1871 16B6                                u1880 1702  
                              u1960 0E58                                u1881 16FE  
                              u1961 0E54                                u1890 181E  
                              u1970 0E88                                u1891 181A  
                              u1971 0E84                                u1980 0EA4  
                              u1981 0EA0                                u1990 0ED2  
                              u1991 0ECE                                i2l30 1E0C  
                              i2l33 1E32                                i2l42 1FB0  
                              i2l36 1FBA                                i2l45 1F88  
     colorclick_writetoaddr@address 000C     i2colorclick_writetoaddr@address 0004  
                       main@current 0130                         main@initial 0138  
 __end_of_colorclick_toggleClearLED 1E56      __size_ofi2_colorclick_int_init 0082  
           __end_of_interrupts_init 1E98       __end_ofi2_colorclick_int_init 19D8  
                              abs@a 001B                                _dbuf 007D  
                              _main 12A6                                _dtoa 0E10  
                              _prec 0078                                _nout 0074  
                              pad@i 0020                                pad@p 001D  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf2 000FDF                                fsr1l 000FE1  
                              pad@w 0022                                fsr2l 000FD9  
                              btemp 0057                                start 0026  
                  __end_of_ADC_init 1F2C                     __end_of_HighISR 1E78  
                      ___param_bank 000000                               ??_abs 001D  
                             ??_pad 001F                     __end_of___aodiv 15E0  
                             ?_main 0001                               ?_dtoa 0024  
                   __end_of___aomod 1744                               _ADPCH 000F5F  
                             i1l255 001E                               i2l410 1EF6  
                             i2l250 1E74                               i2l435 19D6  
                             i2l428 1F44                        vfpfcnvrt@fmt 004A  
    __end_ofi2_colorclick_int_clear 1F46             __end_of_sendCharSerial4 1F5C  
        __end_of_I2C_2_Master_Start 1FA8          __end_of_I2C_2_Master_Write 1F7E  
                             _flags 007A                               _fputc 1744  
                             _fputs 1BCC                               pad@fp 0019  
                             _width 0076                               _putch 1FBC  
                             dtoa@d 0026                               dtoa@i 0046  
                             dtoa@n 003E                               dtoa@p 0038  
                             dtoa@s 003C                               dtoa@w 003A  
                             tablat 000FF5                               plusw0 000FEB  
                             plusw2 000FDB                               ttemp5 0058  
                             ttemp6 005B                               ttemp7 005F  
                             status 000FD8                               wtemp8 0058  
                   __end_of_sprintf 1A8C               _I2C_2_Master_RepStart 1F8A  
                   __initialization 1D4E                        __end_of_main 1458  
                      __end_of_dtoa 10F2                              ??_main 00C3  
                            ??_dtoa 002E             __end_of_colorclick_init 1D16  
                     __activetblptr 000001        __size_ofi2_I2C_2_Master_Idle 0028  
      __size_ofi2_I2C_2_Master_Stop 000A                              ?_fputc 0009  
                            ?_fputs 0012                              _ADRESH 000F64  
                            ?_putch 0001                _colorclick_readClear 1B2C  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RD6PPS 000E70  
                            i2l2231 1FA8                              i2l2161 1E1C  
                            i2l2233 1FAC                              i2l2227 1FB2  
                            i2l2235 1F80                              i2l2323 1EDA  
                            i2l2229 1FB6                              i2l2237 1F84  
                            i2l2159 1E0C                              i2l2381 197A  
                            i2l2391 19AC                              i2l2383 197E  
                            i2l2375 1956                _colorclick_readGreen 1ADC  
                            i2l2393 19BE                              i2l2385 1990  
                            i2l2377 1960                              i2l2395 19C2  
                            i2l2387 1994                              i2l2379 1970  
                            i2l2397 19CC                              i2l2389 199E  
                            i2l2581 1E70                              i2l2487 1F2C  
                            i2l2575 1E56                              i2l2577 1E66  
                            i2l2579 1E6C                    ?_interrupts_init 0001  
                         ??_HighISR 0008                              _RX4PPS 000E15  
              _colorclick_int_clear 1EF8                              _TX4REG 000EE4  
                            _LowISR 0018                        vfprintf@cfmt 00AD  
                         ??___aodiv 0019                           ??___aomod 0019  
                  ??_buggyLEDs_init 0009                              clear_0 1D54  
                            clear_1 1D60                              clear_2 1D6C  
                            isa$std 000001                              pad@buf 001B  
                            dtoa@fp 0024                              _strlen 1D84  
                            fputc@c 0009                              fputs@c 0016  
                            fputs@i 0017                              fputs@s 0012  
   colorclick_toggleClearLED@toggle 0009                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                           ?_ADC_init 0001  
                  ?_sendCharSerial4 0009                              putch@c 0001  
                  __end_of_vfprintf 1A3A                           ??_sprintf 004E  
                      ?_USART4_init 0001               ?_colorclick_readClear 000D  
             ?_colorclick_readGreen 000D               ?_colorclick_int_clear 0001  
                        __accesstop 0060             __end_of__initialization 1D72  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
  __end_ofi2_colorclick_writetoaddr 1EF8                      __pcstackCOMRAM 0001  
           ?_colorclick_writetoaddr 000B                       __end_of_fputc 180E  
                     __end_of_fputs 1C10                       __end_of_putch 1FBE  
                  ?_colorclick_init 0001                  _colorclick_readRed 1A8C  
                        ??_ADC_init 0009                             ??_fputc 000D  
                           ??_fputs 0016                             ??_putch 0009  
               ?_colorclick_readRed 000D                          __pbssBANK0 0060  
                        __pbssBANK1 0140                        _battery_flag 0052  
     __size_ofi2_I2C_2_Master_Start 000A       __size_ofi2_I2C_2_Master_Write 000C  
                           ?_LowISR 0001                        _T2CLKCONbits 000FBF  
    __end_of_colorclick_writetoaddr 1EB8                ??_colorclick_readRed 000F  
                           ?_strlen 0009        __size_of_colorclick_readBlue 0050  
                           _INT1PPS 000DF1               _colorclick_readColour 1C10  
      __size_of_colorclick_int_init 0082                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                  __size_of_vfpfcnvrt 01B4  
                           _PWM6DCH 000FA3                             _PWM7DCH 000FA0  
                           _SSP2ADD 000ED6              ??_colorclick_readClear 000F  
                           _SSP2BUF 000ED5              ??_colorclick_readGreen 000F  
            ??_colorclick_int_clear 0010                             _HighISR 0008  
        ?_colorclick_toggleClearLED 0001                           _ADREFbits 000F58  
             i2_colorclick_int_init 1956                  _I2C_2_Master_Start 1F9E  
               i2_I2C_2_Master_Idle 1E0C                  _I2C_2_Master_Write 1F72  
                           __Hparam 0000                 i2_I2C_2_Master_Stop 1FA8  
                           __Lparam 0000                     __size_of_LowISR 000E  
           sendStringSerial4@string 000B                             ___aodiv 1458  
                           ___aomod 15E0            i2_colorclick_writetoaddr 1ED8  
               ?_I2C_2_Master_Start 0001                 ?_I2C_2_Master_Write 0001  
                         ?_vfprintf 00A7                        __psmallconst 0E00  
                           __pcinit 1D4E             colorclick_readClear@tmp 0012  
                           __ramtop 0E00                             __ptext0 12A6  
                           __ptext1 1A3A                             __ptext2 19D8  
                           __ptext3 10F2                             __ptext4 0E10  
                           __ptext5 180E                             __ptext6 1D84  
                           __ptext7 1BCC                             __ptext8 1744  
                           __ptext9 1FBC                     __size_of_strlen 0036  
              ?i2_I2C_2_Master_Idle 0001                           _T2CONbits 000FBD  
                      __size_of_abs 0040                        __size_of_pad 00C6  
              ?i2_I2C_2_Master_Stop 0001                           _T2HLTbits 000FBE  
                     _RxBufWriteCnt 0056                             main@buf 0100  
                           _sprintf 1A3A                ??_I2C_2_Master_Start 000A  
              ??_I2C_2_Master_Write 000A                      __pintcode_body 1E56  
              end_of_initialization 1D72             colorclick_readGreen@tmp 0012  
                           fputc@fp 000B                __size_of_USART4_init 0020  
                           int_func 1E56                             fputs@fp 0014  
                 __end_of_vfpfcnvrt 12A6                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE                          ??_vfprintf 004E  
                           strlen@a 000B                             strlen@s 0009  
            ?_colorclick_readColour 0014               ??i2_I2C_2_Master_Idle 0001  
             ??i2_I2C_2_Master_Stop 0002                           _TRISAbits 000F81  
                         _TRISBbits 000F82                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                   __size_of_ADC_init 001A  
           ??_I2C_2_Master_RepStart 000A              ?i2_colorclick_int_init 0001  
                      _EUSART4RXbuf 0060                        _EUSART4TXbuf 0140  
         sendCharSerial4@charToSend 0009                      __end_of_LowISR 0026  
          __size_of_interrupts_init 0020                         vfpfcnvrt@ap 004C  
                       vfpfcnvrt@fp 0048                         vfpfcnvrt@ll 009F  
          ??i2_colorclick_int_clear 0008                      __end_of_strlen 1DBA  
               start_initialization 1D4E                         __end_of_abs 1CD6  
                       __end_of_pad 18D4                       _TxBufWriteCnt 0054  
     i2colorclick_writetoaddr@value 0003            __size_of_sendCharSerial4 0016  
               _colorclick_readBlue 1B7C                 _colorclick_int_init 18D4  
                          ??_LowISR 0008                         vfprintf@fmt 00A9  
     i2I2C_2_Master_Write@data_byte 0002                            ??_strlen 000B  
      __end_ofi2_I2C_2_Master_Start 1FBC                ?_colorclick_readBlue 000D  
      __end_ofi2_I2C_2_Master_Write 1F8A                ?_colorclick_int_init 0001  
                       __pbssCOMRAM 004E                       __pcstackBANK0 009D  
                     __pcstackBANK1 0100                    ___aodiv@dividend 0009  
           __size_of_buggyLEDs_init 0016            __size_of_colorclick_init 0040  
                          ?_HighISR 0001          ??i2_colorclick_writetoaddr 0004  
                         _card_flag 007C         ??_colorclick_toggleClearLED 0009  
                         _dtoa$2473 0036                         _clear_lower 0050  
                       _clear_upper 004E                           __pintcode 0008  
                          ?___aodiv 0009                            ?___aomod 0009  
                  ___aodiv@quotient 001B         __size_of_colorclick_readRed 0050  
                       __pintcodelo 0018     __size_ofi2_colorclick_int_clear 001A  
             ??_colorclick_readBlue 000F                I2C_2_Master_Read@ack 000B  
                 __size_of_vfprintf 0062                   ??_interrupts_init 0010  
              I2C_2_Master_Read@tmp 000C               ??_colorclick_int_init 000D  
                       __smallconst 0E00                   _I2C_2_Master_Idle 1DE4  
                 _I2C_2_Master_Init 1DBA                   _I2C_2_Master_Read 1C54  
                 _I2C_2_Master_Stop 1F94                        _RxBufReadCnt 0055  
                          _ADC_init 1F12                  ?_I2C_2_Master_Idle 0001  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                ?_I2C_2_Master_Stop 0001                            ?_sprintf 00AF  
                    __size_of_fputc 00CA                      __size_of_fputs 0044  
        i2_colorclick_int_init$1848 0006          i2_colorclick_int_init$1849 0007  
                    __size_of_putch 0002       __size_of_colorclick_readClear 0050  
            colorclick_readBlue@tmp 0012       __size_of_colorclick_readGreen 0050  
                 _sendStringSerial4 1D16                 ??_I2C_2_Master_Idle 0009  
     __size_of_colorclick_int_clear 001A                 ??_I2C_2_Master_Init 0009  
               ??_I2C_2_Master_Read 000A                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 000A                            _LATCbits 000F7B  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
       colorclick_writetoaddr@value 000B                            _LATHbits 000F80  
                          _IPR0bits 000E1F                            _PIE0bits 000E29  
                ?_sendStringSerial4 000B                            _PIE4bits 000E2D  
                          i2u122_40 1E1C                            i2u122_41 1E18  
                          i2u123_40 1E32                            i2u123_41 1E2E  
                          i2u152_40 1990                            i2u152_41 198C  
                          i2u153_40 19BE                            i2u153_41 19BA  
                          i2u163_40 1E66                            i2u163_41 1E62  
                          i2u236_47 1966                            _PIR0bits 000E33  
                          _PIR4bits 000E37                   ??_sendCharSerial4 000B  
                          _SSP2CON2 000EDA                 ??_sendStringSerial4 000D  
                          _SSP2STAT 000ED8             ??_colorclick_readColour 001C  
                         _vfpfcnvrt 10F2                          _ADCON0bits 000F60  
         __end_of_I2C_2_Master_Idle 1E0C           _colorclick_toggleClearLED 1E34  
         __end_of_I2C_2_Master_Init 1DE4           __end_of_I2C_2_Master_Read 1C96  
         __end_of_I2C_2_Master_Stop 1F9E         I2C_2_Master_Write@data_byte 000A  
                      _TxBufReadCnt 0053                       ??_USART4_init 0009  
           ??i2_colorclick_int_init 0005           __end_of_sendStringSerial4 1D4E  
       __size_of_I2C_2_Master_Start 000A         __size_of_I2C_2_Master_Write 000C  
      colorclick_readColour@current 0014              i2_colorclick_int_clear 1F2C  
    __size_of_I2C_2_Master_RepStart 000A       __end_of_I2C_2_Master_RepStart 1F94  
          ??_colorclick_writetoaddr 000C                    __size_of_HighISR 1E70  
              i2_I2C_2_Master_Start 1FB2                   ??_colorclick_init 000D  
              i2_I2C_2_Master_Write 1F7E                            __Hrparam 0000  
                        vfprintf@ap 00AB                            __Lrparam 0000  
                        vfprintf@fp 00A7                        __Lsmallconst 0E00  
       __end_ofi2_I2C_2_Master_Idle 1E34                    __size_of___aodiv 0188  
       __end_ofi2_I2C_2_Master_Stop 1FB2                    __size_of___aomod 0164  
                        ?_vfpfcnvrt 0048                     ___aodiv@divisor 0011  
                   ___aodiv@counter 0019                          _ANSELBbits 000E9A  
                        _ANSELDbits 000EA7                          _ANSELFbits 000EB4  
                        sprintf@fmt 00B1                      _buggyLEDs_init 1F5C  
                          __ptext10 1C96                            __ptext11 15E0  
                          __ptext20 1ADC                            __ptext12 1458  
                          __ptext21 1B2C                            __ptext13 1D16  
                          __ptext30 1DE4                            __ptext22 1B7C  
                          __ptext14 1F46                            __ptext31 1E34  
                          __ptext23 1F8A                            __ptext15 1E78  
                          __ptext40 1ED8                            __ptext32 1DBA  
                          __ptext24 1C54                            __ptext16 1EF8  
                          __ptext41 1F7E                            __ptext33 1F5C  
                          __ptext25 1CD6                            __ptext17 18D4  
                          __ptext42 1FA8                            __ptext34 1EB8  
                          __ptext26 1E98                            __ptext18 1C10  
                          __ptext43 1FB2                            __ptext35 1F12  
                          __ptext27 1F72                            __ptext19 1A8C  
                          __ptext44 1E0C                            __ptext28 1F94  
                          __ptext29 1F9E                            __ptext38 1F2C  
                          __ptext39 1956                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                    __size_of_sprintf 0052  
                     __size_of_main 01B2                       __size_of_dtoa 02E2  
             ?i2_I2C_2_Master_Start 0001               ?i2_I2C_2_Master_Write 0001  
               __end_of_USART4_init 1ED8               colorclick_readRed@tmp 0012  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 0057                            _vfprintf 19D8  
                          main@tmpB 012C                            main@tmpC 012E  
                          main@tmpG 012A                            main@tmpR 0128  
        __size_of_I2C_2_Master_Idle 0028          __size_of_I2C_2_Master_Init 002A  
        __size_of_I2C_2_Master_Read 0042                    ___aomod@dividend 0009  
        __size_of_I2C_2_Master_Stop 000A              __end_of_buggyLEDs_init 1F72  
                        _INTCONbits 000FF2                         _PWM6CONbits 000FA4  
        __size_of_sendStringSerial4 0038                         _PWM7CONbits 000FA1  
                          intlevel1 0000                            intlevel2 0000  
                         sprintf@ap 00BB     __size_of_colorclick_writetoaddr 0020  
                   _interrupts_init 1E78                     ___aomod@divisor 0011  
                       ??_vfpfcnvrt 009D                     ___aomod@counter 0019  
                          sprintf@f 00BD                            sprintf@s 00AF  
                   ?_buggyLEDs_init 0001                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C  __size_of_colorclick_toggleClearLED 0022  
                       _USART4_init 1EB8            _colorclick_int_init$1848 000E  
          _colorclick_int_init$1849 000F                          _TX4STAbits 000EE8  
                      ___aodiv@sign 001A                     _sendCharSerial4 1F46  
            ??i2_I2C_2_Master_Start 0002              ??i2_I2C_2_Master_Write 0002  
                      ___aomod@sign 001A  
