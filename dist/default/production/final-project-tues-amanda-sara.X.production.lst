

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec  6 14:02:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 05/05/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F67K40 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     _PIE4bits	set	3629
    87  0000                     _TX4REG	set	3812
    88  0000                     _RC4REG	set	3811
    89  0000                     _PIR4bits	set	3639
    90  0000                     _RC4STAbits	set	3815
    91  0000                     _SP4BRGH	set	3814
    92  0000                     _SP4BRGL	set	3813
    93  0000                     _TX4STAbits	set	3816
    94  0000                     _BAUD4CONbits	set	3817
    95  0000                     _RX4PPS	set	3605
    96  0000                     _RC0PPS	set	3682
    97  0000                     _ANSELFbits	set	3764
    98  0000                     _PIR0bits	set	3635
    99  0000                     _IPR0bits	set	3615
   100  0000                     _PIE0bits	set	3625
   101  0000                     _ANSELBbits	set	3738
   102  0000                     _RC7PPS	set	3689
   103  0000                     _RE2PPS	set	3700
   104  0000                     _SSP2BUF	set	3797
   105  0000                     _SSP2CON2bits	set	3802
   106  0000                     _SSP2CON2	set	3802
   107  0000                     _SSP2STAT	set	3800
   108  0000                     _RD6PPS	set	3696
   109  0000                     _RD5PPS	set	3695
   110  0000                     _SSP2CLKPPS	set	3612
   111  0000                     _SSP2DATPPS	set	3613
   112  0000                     _ANSELDbits	set	3751
   113  0000                     _SSP2ADD	set	3798
   114  0000                     _SSP2CON1bits	set	3801
   115  0000                     _ADPCH	set	3935
   116  0000                     _ADREFbits	set	3928
   117  0000                     _ADRESH	set	3940
   118  0000                     _ADCON0bits	set	3936
   119  0000                     _INTCONbits	set	4082
   120  0000                     _TRISBbits	set	3970
   121  0000                     _PWM7CONbits	set	4001
   122  0000                     _PWM6CONbits	set	4004
   123  0000                     _PWM7DCH	set	4000
   124  0000                     _PWM6DCH	set	4003
   125  0000                     _LATCbits	set	3963
   126  0000                     _LATEbits	set	3965
   127  0000                     _TRISCbits	set	3971
   128  0000                     _TRISEbits	set	3973
   129  0000                     _T2PR	set	4028
   130  0000                     _T2CLKCONbits	set	4031
   131  0000                     _T2HLTbits	set	4030
   132  0000                     _T2CONbits	set	4029
   133  0000                     _LATDbits	set	3964
   134  0000                     _LATHbits	set	3968
   135  0000                     _TRISHbits	set	3976
   136  0000                     _LATFbits	set	3966
   137  0000                     _LATAbits	set	3961
   138  0000                     _LATGbits	set	3967
   139  0000                     _TRISFbits	set	3974
   140  0000                     _TRISAbits	set	3969
   141  0000                     _TRISGbits	set	3975
   142  0000                     _TRISDbits	set	3972
   143                           
   144                           	psect	smallconst
   145  000E00                     __psmallconst:
   146                           	callstack 0
   147  000E00  00                 	db	0
   148  000E01                     STR_1:
   149                           
   150                           ; BSR set to: 14
   151  000E01  25                 	db	37
   152  000E02  69                 	db	105	;'i'
   153  000E03  20                 	db	32
   154  000E04  25                 	db	37
   155  000E05  69                 	db	105	;'i'
   156  000E06  20                 	db	32
   157  000E07  25                 	db	37
   158  000E08  69                 	db	105	;'i'
   159  000E09  20                 	db	32
   160  000E0A  25                 	db	37
   161  000E0B  69                 	db	105	;'i'
   162  000E0C  0A                 	db	10
   163  000E0D  00                 	db	0
   164  000E0E  00                 	db	0	; dummy byte at the end
   165  0000                     
   166                           ; #config settings
   167                           
   168                           	psect	cinit
   169  001BC4                     __pcinit:
   170                           	callstack 0
   171  001BC4                     start_initialization:
   172                           	callstack 0
   173  001BC4                     __initialization:
   174                           	callstack 0
   175                           
   176                           ; Clear objects allocated to BANK1 (60 bytes)
   177  001BC4  EE01  F000         	lfsr	0,__pbssBANK1
   178  001BC8  0E3C               	movlw	60
   179  001BCA                     clear_0:
   180  001BCA  6AEE               	clrf	postinc0,c
   181  001BCC  06E8               	decf	wreg,f,c
   182  001BCE  E1FD               	bnz	clear_0
   183                           
   184                           ; Clear objects allocated to BANK0 (60 bytes)
   185  001BD0  EE00  F0AE         	lfsr	0,__pbssBANK0
   186  001BD4  0E3C               	movlw	60
   187  001BD6                     clear_1:
   188  001BD6  6AEE               	clrf	postinc0,c
   189  001BD8  06E8               	decf	wreg,f,c
   190  001BDA  E1FD               	bnz	clear_1
   191                           
   192                           ; Clear objects allocated to COMRAM (4 bytes)
   193  001BDC  6A5C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   194  001BDE  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   195  001BE0  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   196  001BE2  6A59               	clrf	__pbssCOMRAM& (0+255),c
   197  001BE4                     end_of_initialization:
   198                           	callstack 0
   199  001BE4                     __end_of__initialization:
   200                           	callstack 0
   201  001BE4  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   202  001BE6  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   203  001BE8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   204  001BEA  6EF8               	movwf	tblptru,c
   205  001BEC  0E0E               	movlw	high __Lsmallconst
   206  001BEE  6EF7               	movwf	tblptrh,c
   207  001BF0  0100               	movlb	0
   208  001BF2  EF2E  F00B         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	bssCOMRAM
   211  000059                     __pbssCOMRAM:
   212                           	callstack 0
   213  000059                     _TxBufReadCnt:
   214                           	callstack 0
   215  000059                     	ds	1
   216  00005A                     _TxBufWriteCnt:
   217                           	callstack 0
   218  00005A                     	ds	1
   219  00005B                     _RxBufReadCnt:
   220                           	callstack 0
   221  00005B                     	ds	1
   222  00005C                     _RxBufWriteCnt:
   223                           	callstack 0
   224  00005C                     	ds	1
   225                           
   226                           	psect	bssBANK0
   227  0000AE                     __pbssBANK0:
   228                           	callstack 0
   229  0000AE                     _EUSART4RXbuf:
   230                           	callstack 0
   231  0000AE                     	ds	20
   232  0000C2                     _nout:
   233                           	callstack 0
   234  0000C2                     	ds	2
   235  0000C4                     _width:
   236                           	callstack 0
   237  0000C4                     	ds	2
   238  0000C6                     _prec:
   239                           	callstack 0
   240  0000C6                     	ds	2
   241  0000C8                     _flags:
   242                           	callstack 0
   243  0000C8                     	ds	2
   244  0000CA                     _dbuf:
   245                           	callstack 0
   246  0000CA                     	ds	32
   247                           
   248                           	psect	bssBANK1
   249  000100                     __pbssBANK1:
   250                           	callstack 0
   251  000100                     _EUSART4TXbuf:
   252                           	callstack 0
   253  000100                     	ds	60
   254                           
   255                           	psect	cstackBANK0
   256  000060                     __pcstackBANK0:
   257                           	callstack 0
   258  000060                     ?_sprintf:
   259                           	callstack 0
   260  000060                     sprintf@s:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x0
   264  000060                     	ds	2
   265  000062                     sprintf@fmt:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x2
   269  000062                     	ds	10
   270  00006C                     sprintf@ap:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0xC
   274  00006C                     	ds	2
   275  00006E                     sprintf@f:
   276                           	callstack 0
   277                           
   278                           ; 6 bytes @ 0xE
   279  00006E                     	ds	6
   280  000074                     ??_main:
   281                           
   282                           ; 1 bytes @ 0x14
   283  000074                     	ds	2
   284  000076                     main@buf:
   285                           	callstack 0
   286                           
   287                           ; 40 bytes @ 0x16
   288  000076                     	ds	40
   289  00009E                     main@tmpR:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x3E
   293  00009E                     	ds	2
   294  0000A0                     main@tmpG:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x40
   298  0000A0                     	ds	2
   299  0000A2                     main@tmpB:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x42
   303  0000A2                     	ds	2
   304  0000A4                     main@tmpC:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x44
   308  0000A4                     	ds	2
   309  0000A6                     main@initial:
   310                           	callstack 0
   311                           
   312                           ; 8 bytes @ 0x46
   313  0000A6                     	ds	8
   314                           
   315                           	psect	cstackCOMRAM
   316  000001                     __pcstackCOMRAM:
   317                           	callstack 0
   318  000001                     ??_HighISR:
   319  000001                     
   320                           ; 1 bytes @ 0x0
   321  000001                     	ds	1
   322  000002                     ??_I2C_2_Master_Idle:
   323  000002                     ?_strlen:
   324                           	callstack 0
   325  000002                     ?___aodiv:
   326                           	callstack 0
   327  000002                     ?___aomod:
   328                           	callstack 0
   329  000002                     whiteLED@on_off:
   330                           	callstack 0
   331  000002                     sendCharSerial4@charToSend:
   332                           	callstack 0
   333  000002                     fputc@c:
   334                           	callstack 0
   335  000002                     strlen@s:
   336                           	callstack 0
   337  000002                     ___aodiv@dividend:
   338                           	callstack 0
   339  000002                     ___aomod@dividend:
   340                           	callstack 0
   341                           
   342                           ; 8 bytes @ 0x1
   343  000002                     	ds	1
   344  000003                     ??_I2C_2_Master_Read:
   345  000003                     I2C_2_Master_Write@data_byte:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x2
   349  000003                     	ds	1
   350  000004                     color_writetoaddr@value:
   351                           	callstack 0
   352  000004                     I2C_2_Master_Read@ack:
   353                           	callstack 0
   354  000004                     sendStringSerial4@string:
   355                           	callstack 0
   356  000004                     fputc@fp:
   357                           	callstack 0
   358  000004                     strlen@a:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x3
   362  000004                     	ds	1
   363  000005                     color_writetoaddr@address:
   364                           	callstack 0
   365  000005                     I2C_2_Master_Read@tmp:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x4
   369  000005                     	ds	1
   370  000006                     ??_sendStringSerial4:
   371  000006                     ??_fputc:
   372  000006                     ??_color_click_init:
   373  000006                     ?_color_read_Red:
   374                           	callstack 0
   375  000006                     ?_color_read_Green:
   376                           	callstack 0
   377  000006                     ?_color_read_Blue:
   378                           	callstack 0
   379  000006                     ?_color_read_Clear:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x5
   383  000006                     	ds	2
   384  000008                     ??_color_read_Red:
   385  000008                     ??_color_read_Green:
   386  000008                     ??_color_read_Blue:
   387  000008                     ??_color_read_Clear:
   388                           
   389                           ; 1 bytes @ 0x7
   390  000008                     	ds	2
   391  00000A                     ___aodiv@divisor:
   392                           	callstack 0
   393  00000A                     ___aomod@divisor:
   394                           	callstack 0
   395                           
   396                           ; 8 bytes @ 0x9
   397  00000A                     	ds	1
   398  00000B                     color_read_Red@tmp:
   399                           	callstack 0
   400  00000B                     color_read_Green@tmp:
   401                           	callstack 0
   402  00000B                     color_read_Blue@tmp:
   403                           	callstack 0
   404  00000B                     color_read_Clear@tmp:
   405                           	callstack 0
   406  00000B                     fputs@s:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0xA
   410  00000B                     	ds	2
   411  00000D                     ?_read_colour:
   412                           	callstack 0
   413  00000D                     fputs@fp:
   414                           	callstack 0
   415  00000D                     read_colour@current:
   416                           	callstack 0
   417                           
   418                           ; 8 bytes @ 0xC
   419  00000D                     	ds	2
   420  00000F                     fputs@c:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0xE
   424  00000F                     	ds	1
   425  000010                     fputs@i:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xF
   429  000010                     	ds	2
   430  000012                     ?_pad:
   431                           	callstack 0
   432  000012                     ___aodiv@counter:
   433                           	callstack 0
   434  000012                     ___aomod@counter:
   435                           	callstack 0
   436  000012                     pad@fp:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x11
   440  000012                     	ds	1
   441  000013                     ___aodiv@sign:
   442                           	callstack 0
   443  000013                     ___aomod@sign:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x12
   447  000013                     	ds	1
   448  000014                     ?_abs:
   449                           	callstack 0
   450  000014                     pad@buf:
   451                           	callstack 0
   452  000014                     abs@a:
   453                           	callstack 0
   454  000014                     ___aodiv@quotient:
   455                           	callstack 0
   456                           
   457                           ; 8 bytes @ 0x13
   458  000014                     	ds	1
   459  000015                     
   460                           ; 1 bytes @ 0x14
   461  000015                     	ds	1
   462  000016                     ??_abs:
   463  000016                     pad@p:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x15
   467  000016                     	ds	2
   468  000018                     ??_pad:
   469                           
   470                           ; 1 bytes @ 0x17
   471  000018                     	ds	1
   472  000019                     pad@i:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x18
   476  000019                     	ds	2
   477  00001B                     pad@w:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x1A
   481  00001B                     	ds	2
   482  00001D                     ?_dtoa:
   483                           	callstack 0
   484  00001D                     dtoa@fp:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x1C
   488  00001D                     	ds	2
   489  00001F                     dtoa@d:
   490                           	callstack 0
   491                           
   492                           ; 8 bytes @ 0x1E
   493  00001F                     	ds	8
   494  000027                     ??_dtoa:
   495                           
   496                           ; 1 bytes @ 0x26
   497  000027                     	ds	8
   498  00002F                     _dtoa$2317:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x2E
   502  00002F                     	ds	2
   503  000031                     dtoa@p:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x30
   507  000031                     	ds	2
   508  000033                     dtoa@w:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x32
   512  000033                     	ds	2
   513  000035                     dtoa@s:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x34
   517  000035                     	ds	2
   518  000037                     dtoa@n:
   519                           	callstack 0
   520                           
   521                           ; 8 bytes @ 0x36
   522  000037                     	ds	8
   523  00003F                     dtoa@i:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x3E
   527  00003F                     	ds	2
   528  000041                     ?_vfpfcnvrt:
   529                           	callstack 0
   530  000041                     vfpfcnvrt@fp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x40
   534  000041                     	ds	2
   535  000043                     vfpfcnvrt@fmt:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x42
   539  000043                     	ds	2
   540  000045                     vfpfcnvrt@ap:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x44
   544  000045                     	ds	2
   545  000047                     ??_vfpfcnvrt:
   546                           
   547                           ; 1 bytes @ 0x46
   548  000047                     	ds	2
   549  000049                     vfpfcnvrt@ll:
   550                           	callstack 0
   551                           
   552                           ; 8 bytes @ 0x48
   553  000049                     	ds	8
   554  000051                     ?_vfprintf:
   555                           	callstack 0
   556  000051                     vfprintf@fp:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x50
   560  000051                     	ds	2
   561  000053                     vfprintf@fmt:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x52
   565  000053                     	ds	2
   566  000055                     vfprintf@ap:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x54
   570  000055                     	ds	2
   571  000057                     vfprintf@cfmt:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x56
   575  000057                     	ds	2
   576  000059                     
   577                           ; 1 bytes @ 0x58
   578 ;;
   579 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   580 ;;
   581 ;; *************** function _main *****************
   582 ;; Defined at:
   583 ;;		line 39 in file "main.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;  buf            40   22[BANK0 ] unsigned char [40]
   588 ;;  tmpC            2   68[BANK0 ] unsigned int 
   589 ;;  tmpB            2   66[BANK0 ] unsigned int 
   590 ;;  tmpG            2   64[BANK0 ] unsigned int 
   591 ;;  tmpR            2   62[BANK0 ] unsigned int 
   592 ;;  initial         8   70[BANK0 ] struct .
   593 ;;  current         8    0        struct .
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   604 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   605 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   606 ;;      Totals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   607 ;;Total ram usage:       58 bytes
   608 ;; Hardware stack levels required when called: 9
   609 ;; This function calls:
   610 ;;		_I2C_2_Master_Init
   611 ;;		_RGB_init
   612 ;;		_color_click_init
   613 ;;		_initUSART4
   614 ;;		_interrupts_init
   615 ;;		_read_colour
   616 ;;		_sendStringSerial4
   617 ;;		_sprintf
   618 ;;		_whiteLED
   619 ;; This function is called by:
   620 ;;		Startup code after reset
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text0
   625  00165C                     __ptext0:
   626                           	callstack 0
   627  00165C                     _main:
   628                           	callstack 22
   629  00165C                     
   630                           ;main.c: 41:     I2C_2_Master_Init();
   631  00165C  ECFB  F00D         	call	_I2C_2_Master_Init	;wreg free
   632  001660                     
   633                           ;main.c: 42:     color_click_init();
   634  001660  ECC8  F00D         	call	_color_click_init	;wreg free
   635  001664                     
   636                           ;main.c: 43:     RGB_init();
   637  001664  EC60  F00E         	call	_RGB_init	;wreg free
   638  001668                     
   639                           ;main.c: 44:     initUSART4();
   640  001668  EC35  F00E         	call	_initUSART4	;wreg free
   641  00166C                     
   642                           ;main.c: 45:     interrupts_init();
   643  00166C  EC74  F00D         	call	_interrupts_init	;wreg free
   644  001670                     
   645                           ;main.c: 48:     TRISHbits.TRISH3 = 0;
   646  001670  9688               	bcf	136,3,c	;volatile
   647  001672                     
   648                           ;main.c: 49:     LATHbits.LATH3 = 0;
   649  001672  9680               	bcf	128,3,c	;volatile
   650  001674                     
   651                           ;main.c: 52:     whiteLED(1);
   652  001674  0E01               	movlw	1
   653  001676  EC24  F00E         	call	_whiteLED
   654  00167A                     
   655                           ;main.c: 53:     TRISDbits.TRISD3 = 0;
   656  00167A  9684               	bcf	132,3,c	;volatile
   657  00167C                     
   658                           ;main.c: 54:     LATDbits.LATD3 = 1;
   659  00167C  867C               	bsf	124,3,c	;volatile
   660  00167E                     l2275:
   661                           
   662                           ;main.c: 65:         initial = read_colour(initial);
   663  00167E  EE20  F0A6         	lfsr	2,main@initial
   664  001682  EE00  F00D         	lfsr	0,read_colour@current
   665  001686  0E07               	movlw	7
   666  001688                     u1381:
   667  001688  CFDB FFEB          	movff	plusw2,plusw0
   668  00168C  06E8               	decf	wreg,f,c
   669  00168E  E2FC               	bc	u1381
   670  001690  EC11  F00D         	call	_read_colour	;wreg free
   671  001694  EE20  F0A6         	lfsr	2,main@initial
   672  001698  0E07               	movlw	7
   673  00169A                     u1391:
   674  00169A  CFEB FFDB          	movff	plusw0,plusw2
   675  00169E  06E8               	decf	wreg,f,c
   676  0016A0  E2FC               	bc	u1391
   677  0016A2                     
   678                           ;main.c: 67:         char buf[40];;main.c: 68:         unsigned int tmpR = initial.R;
   679  0016A2  C0A6  F09E         	movff	main@initial,main@tmpR
   680  0016A6  C0A7  F09F         	movff	main@initial+1,main@tmpR+1
   681  0016AA                     
   682                           ;main.c: 69:         unsigned int tmpG = initial.G;
   683  0016AA  C0A8  F0A0         	movff	main@initial+2,main@tmpG
   684  0016AE  C0A9  F0A1         	movff	main@initial+3,main@tmpG+1
   685  0016B2                     
   686                           ;main.c: 70:         unsigned int tmpB = initial.B;
   687  0016B2  C0AA  F0A2         	movff	main@initial+4,main@tmpB
   688  0016B6  C0AB  F0A3         	movff	main@initial+5,main@tmpB+1
   689  0016BA                     
   690                           ;main.c: 71:         unsigned int tmpC = initial.C;
   691  0016BA  C0AC  F0A4         	movff	main@initial+6,main@tmpC
   692  0016BE  C0AD  F0A5         	movff	main@initial+7,main@tmpC+1
   693  0016C2                     
   694                           ;main.c: 72:         sprintf(buf,"%i %i %i %i\n",tmpR,tmpG,tmpB,tmpC);
   695  0016C2  0E76               	movlw	low main@buf
   696  0016C4  0100               	movlb	0	; () banked
   697  0016C6  6F60               	movwf	sprintf@s& (0+255),b
   698  0016C8  0E00               	movlw	high main@buf
   699  0016CA  6F61               	movwf	(sprintf@s+1)& (0+255),b
   700  0016CC  0E01               	movlw	low STR_1
   701  0016CE  6F62               	movwf	sprintf@fmt& (0+255),b
   702  0016D0  0E0E               	movlw	high STR_1
   703  0016D2  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   704  0016D4  C09E  F064         	movff	main@tmpR,?_sprintf+4
   705  0016D8  C09F  F065         	movff	main@tmpR+1,?_sprintf+5
   706  0016DC  C0A0  F066         	movff	main@tmpG,?_sprintf+6
   707  0016E0  C0A1  F067         	movff	main@tmpG+1,?_sprintf+7
   708  0016E4  C0A2  F068         	movff	main@tmpB,?_sprintf+8
   709  0016E8  C0A3  F069         	movff	main@tmpB+1,?_sprintf+9
   710  0016EC  C0A4  F06A         	movff	main@tmpC,?_sprintf+10
   711  0016F0  C0A5  F06B         	movff	main@tmpC+1,?_sprintf+11
   712  0016F4  EC26  F00C         	call	_sprintf	;wreg free
   713  0016F8                     
   714                           ;main.c: 73:         sendStringSerial4(buf);
   715  0016F8  0E76               	movlw	low main@buf
   716  0016FA  6E04               	movwf	sendStringSerial4@string^0,c
   717  0016FC  0E00               	movlw	high main@buf
   718  0016FE  6E05               	movwf	(sendStringSerial4@string+1)^0,c
   719  001700  EC91  F00D         	call	_sendStringSerial4	;wreg free
   720  001704                     
   721                           ;main.c: 74:         _delay((unsigned long)((500)*(64000000/4000.0)));
   722  001704  0E29               	movlw	41
   723  001706  0100               	movlb	0	; () banked
   724  001708  6F75               	movwf	(??_main+1)& (0+255),b
   725  00170A  0E96               	movlw	150
   726  00170C  6F74               	movwf	??_main& (0+255),b
   727  00170E  0E7F               	movlw	127
   728  001710                     u1407:
   729  001710  2EE8               	decfsz	wreg,f,c
   730  001712  D7FE               	bra	u1407
   731  001714  2F74               	decfsz	??_main& (0+255),f,b
   732  001716  D7FC               	bra	u1407
   733  001718  2F75               	decfsz	(??_main+1)& (0+255),f,b
   734  00171A  D7FA               	bra	u1407
   735  00171C  EF3F  F00B         	goto	l2275
   736  001720  EF23  F000         	goto	start
   737  001724                     __end_of_main:
   738                           	callstack 0
   739                           
   740 ;; *************** function _whiteLED *****************
   741 ;; Defined at:
   742 ;;		line 18 in file "RGB_LED.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  on_off          1    wreg     unsigned char 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  on_off          1    1[COMRAM] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   760 ;;Total ram usage:        1 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; Hardware stack levels required when called: 1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text1
   771  001C48                     __ptext1:
   772                           	callstack 0
   773  001C48                     _whiteLED:
   774                           	callstack 29
   775                           
   776                           ;incstack = 0
   777                           ;whiteLED@on_off stored from wreg
   778  001C48  6E02               	movwf	whiteLED@on_off^0,c
   779  001C4A                     
   780                           ;RGB_LED.c: 19:     LATGbits.LATG1 = on_off;
   781  001C4A  B002               	btfsc	whiteLED@on_off^0,0,c
   782  001C4C  D002               	bra	u1275
   783  001C4E  927F               	bcf	127,1,c	;volatile
   784  001C50  D001               	bra	u1276
   785  001C52                     u1275:
   786  001C52  827F               	bsf	127,1,c	;volatile
   787  001C54                     u1276:
   788                           
   789                           ;RGB_LED.c: 20:     LATAbits.LATA4 = on_off;
   790  001C54  B002               	btfsc	whiteLED@on_off^0,0,c
   791  001C56  D002               	bra	u1285
   792  001C58  9879               	bcf	121,4,c	;volatile
   793  001C5A  D001               	bra	u1286
   794  001C5C                     u1285:
   795  001C5C  8879               	bsf	121,4,c	;volatile
   796  001C5E                     u1286:
   797                           
   798                           ;RGB_LED.c: 21:     LATFbits.LATF7 = on_off;
   799  001C5E  B002               	btfsc	whiteLED@on_off^0,0,c
   800  001C60  D002               	bra	u1295
   801  001C62  9E7E               	bcf	126,7,c	;volatile
   802  001C64  D001               	bra	u1296
   803  001C66                     u1295:
   804  001C66  8E7E               	bsf	126,7,c	;volatile
   805  001C68                     u1296:
   806  001C68  0012               	return		;funcret
   807  001C6A                     __end_of_whiteLED:
   808                           	callstack 0
   809                           
   810 ;; *************** function _sprintf *****************
   811 ;; Defined at:
   812 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_sprintf.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  s               2    0[BANK0 ] PTR unsigned char 
   815 ;;		 -> main@buf(40), 
   816 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   817 ;;		 -> STR_1(13), 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  f               6   14[BANK0 ] struct _IO_FILE
   820 ;;  ap              2   12[BANK0 ] PTR void [1]
   821 ;;		 -> ?_sprintf(2), 
   822 ;;  ret             2    0        int 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  2    0[BANK0 ] int 
   825 ;; Registers used:
   826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   832 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   833 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   836 ;;Total ram usage:       20 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 8
   839 ;; This function calls:
   840 ;;		_vfprintf
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text2
   847  00184C                     __ptext2:
   848                           	callstack 0
   849  00184C                     _sprintf:
   850                           	callstack 22
   851  00184C  0E64               	movlw	low (?_sprintf+4)
   852  00184E  0100               	movlb	0	; () banked
   853  001850  6F6C               	movwf	sprintf@ap& (0+255),b
   854  001852  0E00               	movlw	high (?_sprintf+4)
   855  001854  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
   856  001856  C060  F06E         	movff	sprintf@s,sprintf@f
   857  00185A  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
   858  00185E                     
   859                           ; BSR set to: 0
   860  00185E  0E00               	movlw	0
   861  001860  6F71               	movwf	(sprintf@f+3)& (0+255),b
   862  001862  0E00               	movlw	0
   863  001864  6F70               	movwf	(sprintf@f+2)& (0+255),b
   864  001866                     
   865                           ; BSR set to: 0
   866  001866  0E00               	movlw	0
   867  001868  6F73               	movwf	(sprintf@f+5)& (0+255),b
   868  00186A  0E00               	movlw	0
   869  00186C  6F72               	movwf	(sprintf@f+4)& (0+255),b
   870  00186E                     
   871                           ; BSR set to: 0
   872  00186E  0E6E               	movlw	low sprintf@f
   873  001870  6E51               	movwf	vfprintf@fp^0,c
   874  001872  0E00               	movlw	high sprintf@f
   875  001874  6E52               	movwf	(vfprintf@fp+1)^0,c
   876  001876  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
   877  00187A  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
   878  00187E  0E6C               	movlw	low sprintf@ap
   879  001880  6E55               	movwf	vfprintf@ap^0,c
   880  001882  0E00               	movlw	high sprintf@ap
   881  001884  6E56               	movwf	(vfprintf@ap+1)^0,c
   882  001886  ECF5  F00B         	call	_vfprintf	;wreg free
   883  00188A  0100               	movlb	0	; () banked
   884  00188C  5170               	movf	(sprintf@f+2)& (0+255),w,b
   885  00188E  2560               	addwf	sprintf@s& (0+255),w,b
   886  001890  6ED9               	movwf	fsr2l,c
   887  001892  5171               	movf	(sprintf@f+3)& (0+255),w,b
   888  001894  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
   889  001896  6EDA               	movwf	fsr2h,c
   890  001898  0E00               	movlw	0
   891  00189A  6EDF               	movwf	indf2,c
   892  00189C                     
   893                           ; BSR set to: 0
   894  00189C  0012               	return		;funcret
   895  00189E                     __end_of_sprintf:
   896                           	callstack 0
   897                           
   898 ;; *************** function _vfprintf *****************
   899 ;; Defined at:
   900 ;;		line 1390 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
   903 ;;		 -> sprintf@f(6), 
   904 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
   905 ;;		 -> STR_1(13), 
   906 ;;  ap              2   84[COMRAM] PTR PTR void 
   907 ;;		 -> sprintf@ap(2), 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
   910 ;;		 -> STR_1(13), 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  2   80[COMRAM] int 
   913 ;; Registers used:
   914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   920 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   924 ;;Total ram usage:        8 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 7
   927 ;; This function calls:
   928 ;;		_vfpfcnvrt
   929 ;; This function is called by:
   930 ;;		_sprintf
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text3
   935  0017EA                     __ptext3:
   936                           	callstack 0
   937  0017EA                     _vfprintf:
   938                           	callstack 22
   939  0017EA                     
   940                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
   941  0017EA  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
   942  0017EE  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   943  0017F2                     
   944                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
   945  0017F2  0E00               	movlw	0
   946  0017F4  0100               	movlb	0	; () banked
   947  0017F6  6FC3               	movwf	(_nout+1)& (0+255),b
   948  0017F8  0E00               	movlw	0
   949  0017FA  6FC2               	movwf	_nout& (0+255),b
   950                           
   951                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
   952  0017FC  EF13  F00C         	goto	l2093
   953  001800                     l2091:
   954                           
   955                           ; BSR set to: 0
   956                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
   957  001800  C051  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
   958  001804  C052  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   959  001808  0E57               	movlw	low vfprintf@cfmt
   960  00180A  6E43               	movwf	vfpfcnvrt@fmt^0,c
   961  00180C  0E00               	movlw	high vfprintf@cfmt
   962  00180E  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
   963  001810  C055  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
   964  001814  C056  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   965  001818  EC79  F008         	call	_vfpfcnvrt	;wreg free
   966  00181C  5041               	movf	?_vfpfcnvrt^0,w,c
   967  00181E  0100               	movlb	0	; () banked
   968  001820  27C2               	addwf	_nout& (0+255),f,b
   969  001822  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
   970  001824  23C3               	addwfc	(_nout+1)& (0+255),f,b
   971  001826                     l2093:
   972                           
   973                           ; BSR set to: 0
   974                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
   975  001826  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
   976  00182A  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   977  00182E                     	if	0	;tblptru may be non-zero
   978  00182E                     	endif
   979  00182E                     	if	0	;tblptru may be non-zero
   980  00182E                     	endif
   981  00182E  0008               	tblrd		*
   982  001830  50F5               	movf	tablat,w,c
   983  001832  0900               	iorlw	0
   984  001834  A4D8               	btfss	status,2,c
   985  001836  EF1F  F00C         	goto	u1261
   986  00183A  EF21  F00C         	goto	u1260
   987  00183E                     u1261:
   988  00183E  EF00  F00C         	goto	l2091
   989  001842                     u1260:
   990  001842                     
   991                           ; BSR set to: 0
   992                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
   993  001842  C0C2  F051         	movff	_nout,?_vfprintf
   994  001846  C0C3  F052         	movff	_nout+1,?_vfprintf+1
   995  00184A                     
   996                           ; BSR set to: 0
   997  00184A  0012               	return		;funcret
   998  00184C                     __end_of_vfprintf:
   999                           	callstack 0
  1000                           
  1001 ;; *************** function _vfpfcnvrt *****************
  1002 ;; Defined at:
  1003 ;;		line 692 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1006 ;;		 -> sprintf@f(6), 
  1007 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1008 ;;		 -> vfprintf@cfmt(2), 
  1009 ;;  ap              2   68[COMRAM] PTR PTR void 
  1010 ;;		 -> sprintf@ap(2), 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  ll              8   72[COMRAM] long long 
  1013 ;;  llu             8    0        unsigned long long 
  1014 ;;  f               4    0        unsigned long long 
  1015 ;;  vp              3    0        PTR void 
  1016 ;;  ct              3    0        unsigned char [3]
  1017 ;;  cp              3    0        PTR unsigned char 
  1018 ;;  i               2    0        int 
  1019 ;;  done            2    0        int 
  1020 ;;  c               1    0        unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  2   64[COMRAM] int 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1030 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1031 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1032 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1034 ;;Total ram usage:       16 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; Hardware stack levels required when called: 6
  1037 ;; This function calls:
  1038 ;;		_dtoa
  1039 ;;		_fputc
  1040 ;; This function is called by:
  1041 ;;		_vfprintf
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text4
  1046  0010F2                     __ptext4:
  1047                           	callstack 0
  1048  0010F2                     _vfpfcnvrt:
  1049                           	callstack 22
  1050  0010F2                     
  1051                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.32/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.32/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  1052  0010F2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1053  0010F6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1054  0010FA  CFDE FFF6          	movff	postinc2,tblptrl
  1055  0010FE  CFDD FFF7          	movff	postdec2,tblptrh
  1056  001102                     	if	0	;tblptru may be non-zero
  1057  001102                     	endif
  1058  001102                     	if	0	;tblptru may be non-zero
  1059  001102                     	endif
  1060  001102  0008               	tblrd		*
  1061  001104  50F5               	movf	tablat,w,c
  1062  001106  0A25               	xorlw	37
  1063  001108  A4D8               	btfss	status,2,c
  1064  00110A  EF89  F008         	goto	u1211
  1065  00110E  EF8B  F008         	goto	u1210
  1066  001112                     u1211:
  1067  001112  EF37  F009         	goto	l2039
  1068  001116                     u1210:
  1069  001116                     
  1070                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  1071  001116  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1072  00111A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1073  00111E  2ADE               	incf	postinc2,f,c
  1074  001120  0E00               	movlw	0
  1075  001122  22DD               	addwfc	postdec2,f,c
  1076  001124                     
  1077                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  1078  001124  0E00               	movlw	0
  1079  001126  0100               	movlb	0	; () banked
  1080  001128  6FC5               	movwf	(_width+1)& (0+255),b
  1081  00112A  0E00               	movlw	0
  1082  00112C  6FC4               	movwf	_width& (0+255),b
  1083  00112E  C0C4  F0C8         	movff	_width,_flags
  1084  001132  C0C5  F0C9         	movff	_width+1,_flags+1
  1085  001136                     
  1086                           ; BSR set to: 0
  1087                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  1088  001136  69C6               	setf	_prec& (0+255),b
  1089  001138  69C7               	setf	(_prec+1)& (0+255),b
  1090  00113A                     
  1091                           ; BSR set to: 0
  1092                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  1093  00113A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1094  00113E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1095  001142  CFDE FFF6          	movff	postinc2,tblptrl
  1096  001146  CFDD FFF7          	movff	postdec2,tblptrh
  1097  00114A                     	if	0	;tblptru may be non-zero
  1098  00114A                     	endif
  1099  00114A                     	if	0	;tblptru may be non-zero
  1100  00114A                     	endif
  1101  00114A  0008               	tblrd		*
  1102  00114C  50F5               	movf	tablat,w,c
  1103  00114E  0A64               	xorlw	100
  1104  001150  B4D8               	btfsc	status,2,c
  1105  001152  EFAD  F008         	goto	u1221
  1106  001156  EFAF  F008         	goto	u1220
  1107  00115A                     u1221:
  1108  00115A  EFC1  F008         	goto	l2017
  1109  00115E                     u1220:
  1110  00115E                     
  1111                           ; BSR set to: 0
  1112  00115E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1113  001162  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1114  001166  CFDE FFF6          	movff	postinc2,tblptrl
  1115  00116A  CFDD FFF7          	movff	postdec2,tblptrh
  1116  00116E                     	if	0	;tblptru may be non-zero
  1117  00116E                     	endif
  1118  00116E                     	if	0	;tblptru may be non-zero
  1119  00116E                     	endif
  1120  00116E  0008               	tblrd		*
  1121  001170  50F5               	movf	tablat,w,c
  1122  001172  0A69               	xorlw	105
  1123  001174  A4D8               	btfss	status,2,c
  1124  001176  EFBF  F008         	goto	u1231
  1125  00117A  EFC1  F008         	goto	u1230
  1126  00117E                     u1231:
  1127  00117E  EF01  F009         	goto	l2023
  1128  001182                     u1230:
  1129  001182                     l2017:
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
  1133  001182  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1134  001186  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1135  00118A  2ADE               	incf	postinc2,f,c
  1136  00118C  0E00               	movlw	0
  1137  00118E  22DD               	addwfc	postdec2,f,c
  1138                           
  1139                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1140  001190  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1141  001194  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1142  001198  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1143  00119C  0E02               	movlw	2
  1144  00119E  26DE               	addwf	postinc2,f,c
  1145  0011A0  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1146  0011A4  0E00               	movlw	0
  1147  0011A6  22DD               	addwfc	postdec2,f,c
  1148  0011A8  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1149  0011AC  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1150  0011B0  CFDE F049          	movff	postinc2,vfpfcnvrt@ll
  1151  0011B4  CFDD F04A          	movff	postdec2,vfpfcnvrt@ll+1
  1152  0011B8  0E00               	movlw	0
  1153  0011BA  BE4A               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1154  0011BC  0EFF               	movlw	-1
  1155  0011BE  6E4B               	movwf	(vfpfcnvrt@ll+2)^0,c
  1156  0011C0  6E4C               	movwf	(vfpfcnvrt@ll+3)^0,c
  1157  0011C2  6E4D               	movwf	(vfpfcnvrt@ll+4)^0,c
  1158  0011C4  6E4E               	movwf	(vfpfcnvrt@ll+5)^0,c
  1159  0011C6  6E4F               	movwf	(vfpfcnvrt@ll+6)^0,c
  1160  0011C8  6E50               	movwf	(vfpfcnvrt@ll+7)^0,c
  1161  0011CA                     
  1162                           ; BSR set to: 0
  1163                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
  1164  0011CA  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  1165  0011CE  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1166  0011D2  C049  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  1167  0011D6  C04A  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1168  0011DA  C04B  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1169  0011DE  C04C  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1170  0011E2  C04D  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1171  0011E6  C04E  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1172  0011EA  C04F  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1173  0011EE  C050  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1174  0011F2  EC08  F007         	call	_dtoa	;wreg free
  1175  0011F6  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  1176  0011FA  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1177  0011FE  EF52  F009         	goto	l1124
  1178  001202                     l2023:
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
  1182  001202  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1183  001206  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1184  00120A  CFDE FFF6          	movff	postinc2,tblptrl
  1185  00120E  CFDD FFF7          	movff	postdec2,tblptrh
  1186  001212                     	if	0	;tblptru may be non-zero
  1187  001212                     	endif
  1188  001212                     	if	0	;tblptru may be non-zero
  1189  001212                     	endif
  1190  001212  0008               	tblrd		*
  1191  001214  50F5               	movf	tablat,w,c
  1192  001216  0A25               	xorlw	37
  1193  001218  A4D8               	btfss	status,2,c
  1194  00121A  EF11  F009         	goto	u1241
  1195  00121E  EF13  F009         	goto	u1240
  1196  001222                     u1241:
  1197  001222  EF2A  F009         	goto	l2033
  1198  001226                     u1240:
  1199  001226                     
  1200                           ; BSR set to: 0
  1201                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
  1202  001226  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1203  00122A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1204  00122E  2ADE               	incf	postinc2,f,c
  1205  001230  0E00               	movlw	0
  1206  001232  22DD               	addwfc	postdec2,f,c
  1207  001234                     
  1208                           ; BSR set to: 0
  1209                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
  1210  001234  0E00               	movlw	0
  1211  001236  6E03               	movwf	(fputc@c+1)^0,c
  1212  001238  0E25               	movlw	37
  1213  00123A  6E02               	movwf	fputc@c^0,c
  1214  00123C  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1215  001240  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1216  001244  ECC9  F00A         	call	_fputc	;wreg free
  1217  001248                     l2029:
  1218                           
  1219                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
  1220  001248  0E00               	movlw	0
  1221  00124A  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  1222  00124C  0E01               	movlw	1
  1223  00124E  6E41               	movwf	?_vfpfcnvrt^0,c
  1224  001250  EF52  F009         	goto	l1124
  1225  001254                     l2033:
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
  1229  001254  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1230  001258  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1231  00125C  2ADE               	incf	postinc2,f,c
  1232  00125E  0E00               	movlw	0
  1233  001260  22DD               	addwfc	postdec2,f,c
  1234  001262                     
  1235                           ; BSR set to: 0
  1236                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
  1237  001262  0E00               	movlw	0
  1238  001264  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  1239  001266  0E00               	movlw	0
  1240  001268  6E41               	movwf	?_vfpfcnvrt^0,c
  1241  00126A  EF52  F009         	goto	l1124
  1242  00126E                     l2039:
  1243                           
  1244                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
  1245  00126E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1246  001272  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1247  001276  CFDE FFF6          	movff	postinc2,tblptrl
  1248  00127A  CFDD FFF7          	movff	postdec2,tblptrh
  1249  00127E                     	if	0	;tblptru may be non-zero
  1250  00127E                     	endif
  1251  00127E                     	if	0	;tblptru may be non-zero
  1252  00127E                     	endif
  1253  00127E  0008               	tblrd		*
  1254  001280  50F5               	movf	tablat,w,c
  1255  001282  6E02               	movwf	fputc@c^0,c
  1256  001284  6A03               	clrf	(fputc@c+1)^0,c
  1257  001286  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1258  00128A  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1259  00128E  ECC9  F00A         	call	_fputc	;wreg free
  1260  001292                     
  1261                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  1262  001292  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1263  001296  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1264  00129A  2ADE               	incf	postinc2,f,c
  1265  00129C  0E00               	movlw	0
  1266  00129E  22DD               	addwfc	postdec2,f,c
  1267  0012A0  EF24  F009         	goto	l2029
  1268  0012A4                     l1124:
  1269  0012A4  0012               	return		;funcret
  1270  0012A6                     __end_of_vfpfcnvrt:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _dtoa *****************
  1274 ;; Defined at:
  1275 ;;		line 287 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1278 ;;		 -> sprintf@f(6), 
  1279 ;;  d               8   30[COMRAM] long long 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  n               8   54[COMRAM] long long 
  1282 ;;  i               2   62[COMRAM] int 
  1283 ;;  s               2   52[COMRAM] int 
  1284 ;;  w               2   50[COMRAM] int 
  1285 ;;  p               2   48[COMRAM] int 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  2   28[COMRAM] int 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1295 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;Total ram usage:       36 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 5
  1302 ;; This function calls:
  1303 ;;		___aodiv
  1304 ;;		___aomod
  1305 ;;		_abs
  1306 ;;		_pad
  1307 ;; This function is called by:
  1308 ;;		_vfpfcnvrt
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text5
  1313  000E10                     __ptext5:
  1314                           	callstack 0
  1315  000E10                     _dtoa:
  1316                           	callstack 22
  1317  000E10                     
  1318                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
  1319  000E10  C01F  F037         	movff	dtoa@d,dtoa@n
  1320  000E14  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  1321  000E18  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  1322  000E1C  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  1323  000E20  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  1324  000E24  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  1325  000E28  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  1326  000E2C  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  1327  000E30                     
  1328                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
  1329  000E30  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  1330  000E32  EF1D  F007         	goto	u1041
  1331  000E36  EF20  F007         	goto	u1040
  1332  000E3A                     u1041:
  1333  000E3A  0E01               	movlw	1
  1334  000E3C  EF21  F007         	goto	u1050
  1335  000E40                     u1040:
  1336  000E40  0E00               	movlw	0
  1337  000E42                     u1050:
  1338  000E42  6E35               	movwf	dtoa@s^0,c
  1339  000E44  6A36               	clrf	(dtoa@s+1)^0,c
  1340                           
  1341                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  1342  000E46  5035               	movf	dtoa@s^0,w,c
  1343  000E48  1036               	iorwf	(dtoa@s+1)^0,w,c
  1344  000E4A  B4D8               	btfsc	status,2,c
  1345  000E4C  EF2A  F007         	goto	u1061
  1346  000E50  EF2C  F007         	goto	u1060
  1347  000E54                     u1061:
  1348  000E54  EF3C  F007         	goto	l1919
  1349  000E58                     u1060:
  1350  000E58                     
  1351                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  1352  000E58  1E3E               	comf	(dtoa@n+7)^0,f,c
  1353  000E5A  1E3D               	comf	(dtoa@n+6)^0,f,c
  1354  000E5C  1E3C               	comf	(dtoa@n+5)^0,f,c
  1355  000E5E  1E3B               	comf	(dtoa@n+4)^0,f,c
  1356  000E60  1E3A               	comf	(dtoa@n+3)^0,f,c
  1357  000E62  1E39               	comf	(dtoa@n+2)^0,f,c
  1358  000E64  1E38               	comf	(dtoa@n+1)^0,f,c
  1359  000E66  6C37               	negf	dtoa@n^0,c
  1360  000E68  0E00               	movlw	0
  1361  000E6A  2238               	addwfc	(dtoa@n+1)^0,f,c
  1362  000E6C  2239               	addwfc	(dtoa@n+2)^0,f,c
  1363  000E6E  223A               	addwfc	(dtoa@n+3)^0,f,c
  1364  000E70  223B               	addwfc	(dtoa@n+4)^0,f,c
  1365  000E72  223C               	addwfc	(dtoa@n+5)^0,f,c
  1366  000E74  223D               	addwfc	(dtoa@n+6)^0,f,c
  1367  000E76  223E               	addwfc	(dtoa@n+7)^0,f,c
  1368  000E78                     l1919:
  1369                           
  1370                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
  1371  000E78  0100               	movlb	0	; () banked
  1372  000E7A  BFC7               	btfsc	(_prec+1)& (0+255),7,b
  1373  000E7C  EF42  F007         	goto	u1071
  1374  000E80  EF44  F007         	goto	u1070
  1375  000E84                     u1071:
  1376  000E84  EF45  F007         	goto	l1923
  1377  000E88                     u1070:
  1378  000E88                     
  1379                           ; BSR set to: 0
  1380                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
  1381  000E88  93C8               	bcf	_flags& (0+255),1,b
  1382  000E8A                     l1923:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
  1386  000E8A  BFC7               	btfsc	(_prec+1)& (0+255),7,b
  1387  000E8C  EF52  F007         	goto	u1080
  1388  000E90  51C7               	movf	(_prec+1)& (0+255),w,b
  1389  000E92  E106               	bnz	u1081
  1390  000E94  05C6               	decf	_prec& (0+255),w,b
  1391  000E96  B0D8               	btfsc	status,0,c
  1392  000E98  EF50  F007         	goto	u1081
  1393  000E9C  EF52  F007         	goto	u1080
  1394  000EA0                     u1081:
  1395  000EA0  EF58  F007         	goto	l1097
  1396  000EA4                     u1080:
  1397  000EA4                     
  1398                           ; BSR set to: 0
  1399  000EA4  0E00               	movlw	0
  1400  000EA6  6E32               	movwf	(dtoa@p+1)^0,c
  1401  000EA8  0E01               	movlw	1
  1402  000EAA  6E31               	movwf	dtoa@p^0,c
  1403  000EAC  EF5C  F007         	goto	l1099
  1404  000EB0                     l1097:
  1405                           
  1406                           ; BSR set to: 0
  1407  000EB0  C0C6  F031         	movff	_prec,dtoa@p
  1408  000EB4  C0C7  F032         	movff	_prec+1,dtoa@p+1
  1409  000EB8                     l1099:
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 304:     w = width;
  1413  000EB8  C0C4  F033         	movff	_width,dtoa@w
  1414  000EBC  C0C5  F034         	movff	_width+1,dtoa@w+1
  1415  000EC0                     
  1416                           ; BSR set to: 0
  1417                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
  1418  000EC0  5035               	movf	dtoa@s^0,w,c
  1419  000EC2  1036               	iorwf	(dtoa@s+1)^0,w,c
  1420  000EC4  A4D8               	btfss	status,2,c
  1421  000EC6  EF67  F007         	goto	u1091
  1422  000ECA  EF69  F007         	goto	u1090
  1423  000ECE                     u1091:
  1424  000ECE  EF70  F007         	goto	l1931
  1425  000ED2                     u1090:
  1426  000ED2                     
  1427                           ; BSR set to: 0
  1428  000ED2  A5C8               	btfss	_flags& (0+255),2,b
  1429  000ED4  EF6E  F007         	goto	u1101
  1430  000ED8  EF70  F007         	goto	u1100
  1431  000EDC                     u1101:
  1432  000EDC  EF73  F007         	goto	l1933
  1433  000EE0                     u1100:
  1434  000EE0                     l1931:
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 306:         --w;
  1438  000EE0  0633               	decf	dtoa@w^0,f,c
  1439  000EE2  A0D8               	btfss	status,0,c
  1440  000EE4  0634               	decf	(dtoa@w+1)^0,f,c
  1441  000EE6                     l1933:
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
  1445  000EE6  0E00               	movlw	0
  1446  000EE8  6E40               	movwf	(dtoa@i+1)^0,c
  1447  000EEA  0E1F               	movlw	31
  1448  000EEC  6E3F               	movwf	dtoa@i^0,c
  1449  000EEE                     
  1450                           ; BSR set to: 0
  1451                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
  1452  000EEE  0E00               	movlw	0
  1453  000EF0  6FE9               	movwf	(_dbuf+31)& (0+255),b
  1454                           
  1455                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1456  000EF2  EFF7  F007         	goto	l1947
  1457  000EF6                     l1937:
  1458                           
  1459                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 313:         --i;
  1460  000EF6  063F               	decf	dtoa@i^0,f,c
  1461  000EF8  A0D8               	btfss	status,0,c
  1462  000EFA  0640               	decf	(dtoa@i+1)^0,f,c
  1463  000EFC                     
  1464                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
  1465  000EFC  0ECA               	movlw	low _dbuf
  1466  000EFE  243F               	addwf	dtoa@i^0,w,c
  1467  000F00  6ED9               	movwf	fsr2l,c
  1468  000F02  0E00               	movlw	high _dbuf
  1469  000F04  2040               	addwfc	(dtoa@i+1)^0,w,c
  1470  000F06  6EDA               	movwf	fsr2h,c
  1471  000F08  C037  F002         	movff	dtoa@n,___aomod@dividend
  1472  000F0C  C038  F003         	movff	dtoa@n+1,___aomod@dividend+1
  1473  000F10  C039  F004         	movff	dtoa@n+2,___aomod@dividend+2
  1474  000F14  C03A  F005         	movff	dtoa@n+3,___aomod@dividend+3
  1475  000F18  C03B  F006         	movff	dtoa@n+4,___aomod@dividend+4
  1476  000F1C  C03C  F007         	movff	dtoa@n+5,___aomod@dividend+5
  1477  000F20  C03D  F008         	movff	dtoa@n+6,___aomod@dividend+6
  1478  000F24  C03E  F009         	movff	dtoa@n+7,___aomod@dividend+7
  1479  000F28  0E0A               	movlw	10
  1480  000F2A  6E0A               	movwf	___aomod@divisor^0,c
  1481  000F2C  0E00               	movlw	0
  1482  000F2E  6E0B               	movwf	(___aomod@divisor+1)^0,c
  1483  000F30  0E00               	movlw	0
  1484  000F32  6E0C               	movwf	(___aomod@divisor+2)^0,c
  1485  000F34  0E00               	movlw	0
  1486  000F36  6E0D               	movwf	(___aomod@divisor+3)^0,c
  1487  000F38  0E00               	movlw	0
  1488  000F3A  6E0E               	movwf	(___aomod@divisor+4)^0,c
  1489  000F3C  0E00               	movlw	0
  1490  000F3E  6E0F               	movwf	(___aomod@divisor+5)^0,c
  1491  000F40  0E00               	movlw	0
  1492  000F42  6E10               	movwf	(___aomod@divisor+6)^0,c
  1493  000F44  0E00               	movlw	0
  1494  000F46  6E11               	movwf	(___aomod@divisor+7)^0,c
  1495  000F48  EC17  F00A         	call	___aomod	;wreg free
  1496  000F4C  C002  F027         	movff	?___aomod,??_dtoa
  1497  000F50  C003  F028         	movff	?___aomod+1,??_dtoa+1
  1498  000F54  C004  F029         	movff	?___aomod+2,??_dtoa+2
  1499  000F58  C005  F02A         	movff	?___aomod+3,??_dtoa+3
  1500  000F5C  C006  F02B         	movff	?___aomod+4,??_dtoa+4
  1501  000F60  C007  F02C         	movff	?___aomod+5,??_dtoa+5
  1502  000F64  C008  F02D         	movff	?___aomod+6,??_dtoa+6
  1503  000F68  C009  F02E         	movff	?___aomod+7,??_dtoa+7
  1504  000F6C  C027  F014         	movff	??_dtoa,abs@a
  1505  000F70  C029  F015         	movff	??_dtoa+2,abs@a+1
  1506  000F74  EC54  F00D         	call	_abs	;wreg free
  1507  000F78  5014               	movf	?_abs^0,w,c
  1508  000F7A  0F30               	addlw	48
  1509  000F7C  6EDF               	movwf	indf2,c
  1510  000F7E                     
  1511                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 315:         --p;
  1512  000F7E  0631               	decf	dtoa@p^0,f,c
  1513  000F80  A0D8               	btfss	status,0,c
  1514  000F82  0632               	decf	(dtoa@p+1)^0,f,c
  1515  000F84                     
  1516                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 316:         --w;
  1517  000F84  0633               	decf	dtoa@w^0,f,c
  1518  000F86  A0D8               	btfss	status,0,c
  1519  000F88  0634               	decf	(dtoa@w+1)^0,f,c
  1520  000F8A                     
  1521                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
  1522  000F8A  C037  F002         	movff	dtoa@n,___aodiv@dividend
  1523  000F8E  C038  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  1524  000F92  C039  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  1525  000F96  C03A  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  1526  000F9A  C03B  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  1527  000F9E  C03C  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  1528  000FA2  C03D  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  1529  000FA6  C03E  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  1530  000FAA  0E0A               	movlw	10
  1531  000FAC  6E0A               	movwf	___aodiv@divisor^0,c
  1532  000FAE  0E00               	movlw	0
  1533  000FB0  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  1534  000FB2  0E00               	movlw	0
  1535  000FB4  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  1536  000FB6  0E00               	movlw	0
  1537  000FB8  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  1538  000FBA  0E00               	movlw	0
  1539  000FBC  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  1540  000FBE  0E00               	movlw	0
  1541  000FC0  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  1542  000FC2  0E00               	movlw	0
  1543  000FC4  6E10               	movwf	(___aodiv@divisor+6)^0,c
  1544  000FC6  0E00               	movlw	0
  1545  000FC8  6E11               	movwf	(___aodiv@divisor+7)^0,c
  1546  000FCA  EC53  F009         	call	___aodiv	;wreg free
  1547  000FCE  C002  F037         	movff	?___aodiv,dtoa@n
  1548  000FD2  C003  F038         	movff	?___aodiv+1,dtoa@n+1
  1549  000FD6  C004  F039         	movff	?___aodiv+2,dtoa@n+2
  1550  000FDA  C005  F03A         	movff	?___aodiv+3,dtoa@n+3
  1551  000FDE  C006  F03B         	movff	?___aodiv+4,dtoa@n+4
  1552  000FE2  C007  F03C         	movff	?___aodiv+5,dtoa@n+5
  1553  000FE6  C008  F03D         	movff	?___aodiv+6,dtoa@n+6
  1554  000FEA  C009  F03E         	movff	?___aodiv+7,dtoa@n+7
  1555  000FEE                     l1947:
  1556                           
  1557                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1558  000FEE  BE40               	btfsc	(dtoa@i+1)^0,7,c
  1559  000FF0  EF02  F008         	goto	u1111
  1560  000FF4  5040               	movf	(dtoa@i+1)^0,w,c
  1561  000FF6  E108               	bnz	u1110
  1562  000FF8  043F               	decf	dtoa@i^0,w,c
  1563  000FFA  A0D8               	btfss	status,0,c
  1564  000FFC  EF02  F008         	goto	u1111
  1565  001000  EF04  F008         	goto	u1110
  1566  001004                     u1111:
  1567  001004  EF35  F008         	goto	l1957
  1568  001008                     u1110:
  1569  001008  5037               	movf	dtoa@n^0,w,c
  1570  00100A  1038               	iorwf	(dtoa@n+1)^0,w,c
  1571  00100C  1039               	iorwf	(dtoa@n+2)^0,w,c
  1572  00100E  103A               	iorwf	(dtoa@n+3)^0,w,c
  1573  001010  103B               	iorwf	(dtoa@n+4)^0,w,c
  1574  001012  103C               	iorwf	(dtoa@n+5)^0,w,c
  1575  001014  103D               	iorwf	(dtoa@n+6)^0,w,c
  1576  001016  103E               	iorwf	(dtoa@n+7)^0,w,c
  1577  001018  A4D8               	btfss	status,2,c
  1578  00101A  EF11  F008         	goto	u1121
  1579  00101E  EF13  F008         	goto	u1120
  1580  001022                     u1121:
  1581  001022  EF7B  F007         	goto	l1937
  1582  001026                     u1120:
  1583  001026  BE32               	btfsc	(dtoa@p+1)^0,7,c
  1584  001028  EF20  F008         	goto	u1130
  1585  00102C  5032               	movf	(dtoa@p+1)^0,w,c
  1586  00102E  E106               	bnz	u1131
  1587  001030  0431               	decf	dtoa@p^0,w,c
  1588  001032  B0D8               	btfsc	status,0,c
  1589  001034  EF1E  F008         	goto	u1131
  1590  001038  EF20  F008         	goto	u1130
  1591  00103C                     u1131:
  1592  00103C  EF7B  F007         	goto	l1937
  1593  001040                     u1130:
  1594  001040  BE34               	btfsc	(dtoa@w+1)^0,7,c
  1595  001042  EF2B  F008         	goto	u1141
  1596  001046  5034               	movf	(dtoa@w+1)^0,w,c
  1597  001048  E108               	bnz	u1140
  1598  00104A  0433               	decf	dtoa@w^0,w,c
  1599  00104C  A0D8               	btfss	status,0,c
  1600  00104E  EF2B  F008         	goto	u1141
  1601  001052  EF2D  F008         	goto	u1140
  1602  001056                     u1141:
  1603  001056  EF35  F008         	goto	l1957
  1604  00105A                     u1140:
  1605  00105A  0100               	movlb	0	; () banked
  1606  00105C  B3C8               	btfsc	_flags& (0+255),1,b
  1607  00105E  EF33  F008         	goto	u1151
  1608  001062  EF35  F008         	goto	u1150
  1609  001066                     u1151:
  1610  001066  EF7B  F007         	goto	l1937
  1611  00106A                     u1150:
  1612  00106A                     l1957:
  1613                           
  1614                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
  1615  00106A  5035               	movf	dtoa@s^0,w,c
  1616  00106C  1036               	iorwf	(dtoa@s+1)^0,w,c
  1617  00106E  A4D8               	btfss	status,2,c
  1618  001070  EF3C  F008         	goto	u1161
  1619  001074  EF3E  F008         	goto	u1160
  1620  001078                     u1161:
  1621  001078  EF46  F008         	goto	l1961
  1622  00107C                     u1160:
  1623  00107C  0100               	movlb	0	; () banked
  1624  00107E  A5C8               	btfss	_flags& (0+255),2,b
  1625  001080  EF44  F008         	goto	u1171
  1626  001084  EF46  F008         	goto	u1170
  1627  001088                     u1171:
  1628  001088  EF64  F008         	goto	l1971
  1629  00108C                     u1170:
  1630  00108C                     l1961:
  1631                           
  1632                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 322:         --i;
  1633  00108C  063F               	decf	dtoa@i^0,f,c
  1634  00108E  A0D8               	btfss	status,0,c
  1635  001090  0640               	decf	(dtoa@i+1)^0,f,c
  1636  001092                     
  1637                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
  1638  001092  5035               	movf	dtoa@s^0,w,c
  1639  001094  1036               	iorwf	(dtoa@s+1)^0,w,c
  1640  001096  A4D8               	btfss	status,2,c
  1641  001098  EF50  F008         	goto	u1181
  1642  00109C  EF52  F008         	goto	u1180
  1643  0010A0                     u1181:
  1644  0010A0  EF58  F008         	goto	l1967
  1645  0010A4                     u1180:
  1646  0010A4  0E00               	movlw	0
  1647  0010A6  6E30               	movwf	(_dtoa$2317+1)^0,c
  1648  0010A8  0E2B               	movlw	43
  1649  0010AA  6E2F               	movwf	_dtoa$2317^0,c
  1650  0010AC  EF5C  F008         	goto	l1969
  1651  0010B0                     l1967:
  1652  0010B0  0E00               	movlw	0
  1653  0010B2  6E30               	movwf	(_dtoa$2317+1)^0,c
  1654  0010B4  0E2D               	movlw	45
  1655  0010B6  6E2F               	movwf	_dtoa$2317^0,c
  1656  0010B8                     l1969:
  1657  0010B8  0ECA               	movlw	low _dbuf
  1658  0010BA  243F               	addwf	dtoa@i^0,w,c
  1659  0010BC  6ED9               	movwf	fsr2l,c
  1660  0010BE  0E00               	movlw	high _dbuf
  1661  0010C0  2040               	addwfc	(dtoa@i+1)^0,w,c
  1662  0010C2  6EDA               	movwf	fsr2h,c
  1663  0010C4  C02F  FFDF         	movff	_dtoa$2317,indf2
  1664  0010C8                     l1971:
  1665                           
  1666                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
  1667  0010C8  C01D  F012         	movff	dtoa@fp,pad@fp
  1668  0010CC  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  1669  0010D0  0ECA               	movlw	low _dbuf
  1670  0010D2  243F               	addwf	dtoa@i^0,w,c
  1671  0010D4  6E14               	movwf	pad@buf^0,c
  1672  0010D6  0E00               	movlw	high _dbuf
  1673  0010D8  2040               	addwfc	(dtoa@i+1)^0,w,c
  1674  0010DA  6E15               	movwf	(pad@buf+1)^0,c
  1675  0010DC  C033  F016         	movff	dtoa@w,pad@p
  1676  0010E0  C034  F017         	movff	dtoa@w+1,pad@p+1
  1677  0010E4  EC92  F00B         	call	_pad	;wreg free
  1678  0010E8  C012  F01D         	movff	?_pad,?_dtoa
  1679  0010EC  C013  F01E         	movff	?_pad+1,?_dtoa+1
  1680  0010F0  0012               	return		;funcret
  1681  0010F2                     __end_of_dtoa:
  1682                           	callstack 0
  1683                           
  1684 ;; *************** function _pad *****************
  1685 ;; Defined at:
  1686 ;;		line 72 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1689 ;;		 -> sprintf@f(6), 
  1690 ;;  buf             2   19[COMRAM] PTR unsigned char 
  1691 ;;		 -> dbuf(32), 
  1692 ;;  p               2   21[COMRAM] int 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  w               2   26[COMRAM] int 
  1695 ;;  i               2   24[COMRAM] int 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  2   17[COMRAM] int 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1705 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1708 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1709 ;;Total ram usage:       11 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 4
  1712 ;; This function calls:
  1713 ;;		_fputc
  1714 ;;		_fputs
  1715 ;;		_strlen
  1716 ;; This function is called by:
  1717 ;;		_dtoa
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text6
  1722  001724                     __ptext6:
  1723                           	callstack 0
  1724  001724                     _pad:
  1725                           	callstack 22
  1726  001724                     
  1727                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  1728  001724  0100               	movlb	0	; () banked
  1729  001726  A1C8               	btfss	_flags& (0+255),0,b
  1730  001728  EF98  F00B         	goto	u971
  1731  00172C  EF9A  F00B         	goto	u970
  1732  001730                     u971:
  1733  001730  EFA4  F00B         	goto	l1887
  1734  001734                     u970:
  1735  001734                     
  1736                           ; BSR set to: 0
  1737                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  1738  001734  C014  F00B         	movff	pad@buf,fputs@s
  1739  001738  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1740  00173C  C012  F00D         	movff	pad@fp,fputs@fp
  1741  001740  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1742  001744  ECEF  F00C         	call	_fputs	;wreg free
  1743  001748                     l1887:
  1744                           
  1745                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  1746  001748  BE17               	btfsc	(pad@p+1)^0,7,c
  1747  00174A  EFA9  F00B         	goto	u981
  1748  00174E  EFAB  F00B         	goto	u980
  1749  001752                     u981:
  1750  001752  EFB1  F00B         	goto	l1891
  1751  001756                     u980:
  1752  001756  C016  F01B         	movff	pad@p,pad@w
  1753  00175A  C017  F01C         	movff	pad@p+1,pad@w+1
  1754  00175E  EFB5  F00B         	goto	l1086
  1755  001762                     l1891:
  1756  001762  0E00               	movlw	0
  1757  001764  6E1C               	movwf	(pad@w+1)^0,c
  1758  001766  0E00               	movlw	0
  1759  001768  6E1B               	movwf	pad@w^0,c
  1760  00176A                     l1086:
  1761                           
  1762                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1763  00176A  0E00               	movlw	0
  1764  00176C  6E1A               	movwf	(pad@i+1)^0,c
  1765  00176E  0E00               	movlw	0
  1766  001770  6E19               	movwf	pad@i^0,c
  1767                           
  1768                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1769  001772  EFC7  F00B         	goto	l1897
  1770  001776                     l1893:
  1771                           
  1772                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  1773  001776  0E00               	movlw	0
  1774  001778  6E03               	movwf	(fputc@c+1)^0,c
  1775  00177A  0E20               	movlw	32
  1776  00177C  6E02               	movwf	fputc@c^0,c
  1777  00177E  C012  F004         	movff	pad@fp,fputc@fp
  1778  001782  C013  F005         	movff	pad@fp+1,fputc@fp+1
  1779  001786  ECC9  F00A         	call	_fputc	;wreg free
  1780  00178A                     
  1781                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1782  00178A  4A19               	infsnz	pad@i^0,f,c
  1783  00178C  2A1A               	incf	(pad@i+1)^0,f,c
  1784  00178E                     l1897:
  1785                           
  1786                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1787  00178E  501B               	movf	pad@w^0,w,c
  1788  001790  5C19               	subwf	pad@i^0,w,c
  1789  001792  501A               	movf	(pad@i+1)^0,w,c
  1790  001794  0A80               	xorlw	128
  1791  001796  6E18               	movwf	??_pad^0,c
  1792  001798  501C               	movf	(pad@w+1)^0,w,c
  1793  00179A  0A80               	xorlw	128
  1794  00179C  5818               	subwfb	??_pad^0,w,c
  1795  00179E  A0D8               	btfss	status,0,c
  1796  0017A0  EFD4  F00B         	goto	u991
  1797  0017A4  EFD6  F00B         	goto	u990
  1798  0017A8                     u991:
  1799  0017A8  EFBB  F00B         	goto	l1893
  1800  0017AC                     u990:
  1801  0017AC                     
  1802                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  1803  0017AC  0100               	movlb	0	; () banked
  1804  0017AE  B1C8               	btfsc	_flags& (0+255),0,b
  1805  0017B0  EFDC  F00B         	goto	u1001
  1806  0017B4  EFDE  F00B         	goto	u1000
  1807  0017B8                     u1001:
  1808  0017B8  EFE8  F00B         	goto	l1901
  1809  0017BC                     u1000:
  1810  0017BC                     
  1811                           ; BSR set to: 0
  1812                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  1813  0017BC  C014  F00B         	movff	pad@buf,fputs@s
  1814  0017C0  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1815  0017C4  C012  F00D         	movff	pad@fp,fputs@fp
  1816  0017C8  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1817  0017CC  ECEF  F00C         	call	_fputs	;wreg free
  1818  0017D0                     l1901:
  1819                           
  1820                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
  1821  0017D0  C014  F002         	movff	pad@buf,strlen@s
  1822  0017D4  C015  F003         	movff	pad@buf+1,strlen@s+1
  1823  0017D8  ECAD  F00D         	call	_strlen	;wreg free
  1824  0017DC  501B               	movf	pad@w^0,w,c
  1825  0017DE  2402               	addwf	?_strlen^0,w,c
  1826  0017E0  6E12               	movwf	?_pad^0,c
  1827  0017E2  501C               	movf	(pad@w+1)^0,w,c
  1828  0017E4  2003               	addwfc	(?_strlen+1)^0,w,c
  1829  0017E6  6E13               	movwf	(?_pad+1)^0,c
  1830  0017E8  0012               	return		;funcret
  1831  0017EA                     __end_of_pad:
  1832                           	callstack 0
  1833                           
  1834 ;; *************** function _strlen *****************
  1835 ;; Defined at:
  1836 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  s               2    1[COMRAM] PTR const unsigned char 
  1839 ;;		 -> dbuf(32), 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  a               2    3[COMRAM] PTR const unsigned char 
  1842 ;;		 -> dbuf(32), 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  2    1[COMRAM] unsigned int 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1855 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;Total ram usage:        4 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_pad
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text7
  1867  001B5A                     __ptext7:
  1868                           	callstack 0
  1869  001B5A                     _strlen:
  1870                           	callstack 24
  1871  001B5A  C002  F004         	movff	strlen@s,strlen@a
  1872  001B5E  C003  F005         	movff	strlen@s+1,strlen@a+1
  1873  001B62  EFB5  F00D         	goto	l1797
  1874  001B66                     l1795:
  1875  001B66  4A02               	infsnz	strlen@s^0,f,c
  1876  001B68  2A03               	incf	(strlen@s+1)^0,f,c
  1877  001B6A                     l1797:
  1878  001B6A  C002  FFD9         	movff	strlen@s,fsr2l
  1879  001B6E  C003  FFDA         	movff	strlen@s+1,fsr2h
  1880  001B72  50DF               	movf	indf2,w,c
  1881  001B74  A4D8               	btfss	status,2,c
  1882  001B76  EFBF  F00D         	goto	u831
  1883  001B7A  EFC1  F00D         	goto	u830
  1884  001B7E                     u831:
  1885  001B7E  EFB3  F00D         	goto	l1795
  1886  001B82                     u830:
  1887  001B82  5004               	movf	strlen@a^0,w,c
  1888  001B84  5C02               	subwf	strlen@s^0,w,c
  1889  001B86  6E02               	movwf	?_strlen^0,c
  1890  001B88  5005               	movf	(strlen@a+1)^0,w,c
  1891  001B8A  5803               	subwfb	(strlen@s+1)^0,w,c
  1892  001B8C  6E03               	movwf	(?_strlen+1)^0,c
  1893  001B8E  0012               	return		;funcret
  1894  001B90                     __end_of_strlen:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _fputs *****************
  1898 ;; Defined at:
  1899 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputs.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1902 ;;		 -> dbuf(32), 
  1903 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  1904 ;;		 -> sprintf@f(6), 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  i               2   15[COMRAM] int 
  1907 ;;  c               1   14[COMRAM] unsigned char 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  2   10[COMRAM] int 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;Total ram usage:        7 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 3
  1924 ;; This function calls:
  1925 ;;		_fputc
  1926 ;; This function is called by:
  1927 ;;		_pad
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text8
  1932  0019DE                     __ptext8:
  1933                           	callstack 0
  1934  0019DE                     _fputs:
  1935                           	callstack 22
  1936  0019DE  0E00               	movlw	0
  1937  0019E0  6E11               	movwf	(fputs@i+1)^0,c
  1938  0019E2  0E00               	movlw	0
  1939  0019E4  6E10               	movwf	fputs@i^0,c
  1940  0019E6  EF00  F00D         	goto	l1791
  1941  0019EA                     l1787:
  1942  0019EA  C00F  F002         	movff	fputs@c,fputc@c
  1943  0019EE  6A03               	clrf	(fputc@c+1)^0,c
  1944  0019F0  C00D  F004         	movff	fputs@fp,fputc@fp
  1945  0019F4  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  1946  0019F8  ECC9  F00A         	call	_fputc	;wreg free
  1947  0019FC  4A10               	infsnz	fputs@i^0,f,c
  1948  0019FE  2A11               	incf	(fputs@i+1)^0,f,c
  1949  001A00                     l1791:
  1950  001A00  5010               	movf	fputs@i^0,w,c
  1951  001A02  240B               	addwf	fputs@s^0,w,c
  1952  001A04  6ED9               	movwf	fsr2l,c
  1953  001A06  5011               	movf	(fputs@i+1)^0,w,c
  1954  001A08  200C               	addwfc	(fputs@s+1)^0,w,c
  1955  001A0A  6EDA               	movwf	fsr2h,c
  1956  001A0C  50DF               	movf	indf2,w,c
  1957  001A0E  6E0F               	movwf	fputs@c^0,c
  1958  001A10  500F               	movf	fputs@c^0,w,c
  1959  001A12  A4D8               	btfss	status,2,c
  1960  001A14  EF0E  F00D         	goto	u821
  1961  001A18  EF10  F00D         	goto	u820
  1962  001A1C                     u821:
  1963  001A1C  EFF5  F00C         	goto	l1787
  1964  001A20                     u820:
  1965  001A20  0012               	return		;funcret
  1966  001A22                     __end_of_fputs:
  1967                           	callstack 0
  1968                           
  1969 ;; *************** function _fputc *****************
  1970 ;; Defined at:
  1971 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputc.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  c               2    1[COMRAM] int 
  1974 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  1975 ;;		 -> sprintf@f(6), 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  2    1[COMRAM] int 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1989 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1990 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1991 ;;Total ram usage:        9 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 2
  1994 ;; This function calls:
  1995 ;;		_putch
  1996 ;; This function is called by:
  1997 ;;		_pad
  1998 ;;		_vfpfcnvrt
  1999 ;;		_fputs
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text9
  2004  001592                     __ptext9:
  2005                           	callstack 0
  2006  001592                     _fputc:
  2007                           	callstack 25
  2008  001592  5004               	movf	fputc@fp^0,w,c
  2009  001594  1005               	iorwf	(fputc@fp+1)^0,w,c
  2010  001596  B4D8               	btfsc	status,2,c
  2011  001598  EFD0  F00A         	goto	u781
  2012  00159C  EFD2  F00A         	goto	u780
  2013  0015A0                     u781:
  2014  0015A0  EFDB  F00A         	goto	l1775
  2015  0015A4                     u780:
  2016  0015A4  5004               	movf	fputc@fp^0,w,c
  2017  0015A6  1005               	iorwf	(fputc@fp+1)^0,w,c
  2018  0015A8  A4D8               	btfss	status,2,c
  2019  0015AA  EFD9  F00A         	goto	u791
  2020  0015AE  EFDB  F00A         	goto	u790
  2021  0015B2                     u791:
  2022  0015B2  EFE0  F00A         	goto	l1777
  2023  0015B6                     u790:
  2024  0015B6                     l1775:
  2025  0015B6  5002               	movf	fputc@c^0,w,c
  2026  0015B8  EC7C  F00E         	call	_putch
  2027  0015BC  EF2D  F00B         	goto	l1150
  2028  0015C0                     l1777:
  2029  0015C0  EE20 F004          	lfsr	2,4
  2030  0015C4  5004               	movf	fputc@fp^0,w,c
  2031  0015C6  26D9               	addwf	fsr2l,f,c
  2032  0015C8  5005               	movf	(fputc@fp+1)^0,w,c
  2033  0015CA  22DA               	addwfc	fsr2h,f,c
  2034  0015CC  50DE               	movf	postinc2,w,c
  2035  0015CE  10DE               	iorwf	postinc2,w,c
  2036  0015D0  B4D8               	btfsc	status,2,c
  2037  0015D2  EFED  F00A         	goto	u801
  2038  0015D6  EFEF  F00A         	goto	u800
  2039  0015DA                     u801:
  2040  0015DA  EF0A  F00B         	goto	l1781
  2041  0015DE                     u800:
  2042  0015DE  EE20 F004          	lfsr	2,4
  2043  0015E2  5004               	movf	fputc@fp^0,w,c
  2044  0015E4  26D9               	addwf	fsr2l,f,c
  2045  0015E6  5005               	movf	(fputc@fp+1)^0,w,c
  2046  0015E8  22DA               	addwfc	fsr2h,f,c
  2047  0015EA  EE10 F002          	lfsr	1,2
  2048  0015EE  5004               	movf	fputc@fp^0,w,c
  2049  0015F0  26E1               	addwf	fsr1l,f,c
  2050  0015F2  5005               	movf	(fputc@fp+1)^0,w,c
  2051  0015F4  22E2               	addwfc	fsr1h,f,c
  2052  0015F6  50DE               	movf	postinc2,w,c
  2053  0015F8  5CE6               	subwf	postinc1,w,c
  2054  0015FA  50E6               	movf	postinc1,w,c
  2055  0015FC  0A80               	xorlw	128
  2056  0015FE  6E0A               	movwf	(??_fputc+4)^0,c
  2057  001600  50DE               	movf	postinc2,w,c
  2058  001602  0A80               	xorlw	128
  2059  001604  580A               	subwfb	(??_fputc+4)^0,w,c
  2060  001606  B0D8               	btfsc	status,0,c
  2061  001608  EF08  F00B         	goto	u811
  2062  00160C  EF0A  F00B         	goto	u810
  2063  001610                     u811:
  2064  001610  EF2D  F00B         	goto	l1150
  2065  001614                     u810:
  2066  001614                     l1781:
  2067  001614  EE20 F002          	lfsr	2,2
  2068  001618  5004               	movf	fputc@fp^0,w,c
  2069  00161A  26D9               	addwf	fsr2l,f,c
  2070  00161C  5005               	movf	(fputc@fp+1)^0,w,c
  2071  00161E  22DA               	addwfc	fsr2h,f,c
  2072  001620  CFDE F006          	movff	postinc2,??_fputc
  2073  001624  CFDD F007          	movff	postdec2,??_fputc+1
  2074  001628  C004  FFD9         	movff	fputc@fp,fsr2l
  2075  00162C  C005  FFDA         	movff	fputc@fp+1,fsr2h
  2076  001630  CFDE F008          	movff	postinc2,??_fputc+2
  2077  001634  CFDD F009          	movff	postdec2,??_fputc+3
  2078  001638  5006               	movf	??_fputc^0,w,c
  2079  00163A  2408               	addwf	(??_fputc+2)^0,w,c
  2080  00163C  6ED9               	movwf	fsr2l,c
  2081  00163E  5007               	movf	(??_fputc+1)^0,w,c
  2082  001640  2009               	addwfc	(??_fputc+3)^0,w,c
  2083  001642  6EDA               	movwf	fsr2h,c
  2084  001644  C002  FFDF         	movff	fputc@c,indf2
  2085  001648  EE20 F002          	lfsr	2,2
  2086  00164C  5004               	movf	fputc@fp^0,w,c
  2087  00164E  26D9               	addwf	fsr2l,f,c
  2088  001650  5005               	movf	(fputc@fp+1)^0,w,c
  2089  001652  22DA               	addwfc	fsr2h,f,c
  2090  001654  2ADE               	incf	postinc2,f,c
  2091  001656  0E00               	movlw	0
  2092  001658  22DD               	addwfc	postdec2,f,c
  2093  00165A                     l1150:
  2094  00165A  0012               	return		;funcret
  2095  00165C                     __end_of_fputc:
  2096                           	callstack 0
  2097                           
  2098 ;; *************** function _putch *****************
  2099 ;; Defined at:
  2100 ;;		line 7 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/putch.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  c               1    wreg     unsigned char 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  c               1    0[COMRAM] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 1
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_fputc
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text10
  2129  001CF8                     __ptext10:
  2130                           	callstack 0
  2131  001CF8                     _putch:
  2132                           	callstack 25
  2133  001CF8  0012               	return		;funcret
  2134  001CFA                     __end_of_putch:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _abs *****************
  2138 ;; Defined at:
  2139 ;;		line 1 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  a               2   19[COMRAM] int 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  2   19[COMRAM] int 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;Total ram usage:        4 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 1
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_dtoa
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text11
  2168  001AA8                     __ptext11:
  2169                           	callstack 0
  2170  001AA8                     _abs:
  2171                           	callstack 25
  2172  001AA8  BE15               	btfsc	(abs@a+1)^0,7,c
  2173  001AAA  EF61  F00D         	goto	u1010
  2174  001AAE  5015               	movf	(abs@a+1)^0,w,c
  2175  001AB0  E106               	bnz	u1011
  2176  001AB2  0414               	decf	abs@a^0,w,c
  2177  001AB4  B0D8               	btfsc	status,0,c
  2178  001AB6  EF5F  F00D         	goto	u1011
  2179  001ABA  EF61  F00D         	goto	u1010
  2180  001ABE                     u1011:
  2181  001ABE  EF6F  F00D         	goto	l1135
  2182  001AC2                     u1010:
  2183  001AC2  C014  F016         	movff	abs@a,??_abs
  2184  001AC6  C015  F017         	movff	abs@a+1,??_abs+1
  2185  001ACA  1E16               	comf	??_abs^0,f,c
  2186  001ACC  1E17               	comf	(??_abs+1)^0,f,c
  2187  001ACE  4A16               	infsnz	??_abs^0,f,c
  2188  001AD0  2A17               	incf	(??_abs+1)^0,f,c
  2189  001AD2  C016  F014         	movff	??_abs,?_abs
  2190  001AD6  C017  F015         	movff	??_abs+1,?_abs+1
  2191  001ADA  EF73  F00D         	goto	l1138
  2192  001ADE                     l1135:
  2193  001ADE  C014  F014         	movff	abs@a,?_abs
  2194  001AE2  C015  F015         	movff	abs@a+1,?_abs+1
  2195  001AE6                     l1138:
  2196  001AE6  0012               	return		;funcret
  2197  001AE8                     __end_of_abs:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function ___aomod *****************
  2201 ;; Defined at:
  2202 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aomod.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  dividend        8    1[COMRAM] long long 
  2205 ;;  divisor         8    9[COMRAM] long long 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  sign            1   18[COMRAM] unsigned char 
  2208 ;;  counter         1   17[COMRAM] unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  8    1[COMRAM] long long 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2218 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;Total ram usage:       18 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 1
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_dtoa
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text12
  2233  00142E                     __ptext12:
  2234                           	callstack 0
  2235  00142E                     ___aomod:
  2236                           	callstack 25
  2237  00142E  0E00               	movlw	0
  2238  001430  6E13               	movwf	___aomod@sign^0,c
  2239  001432  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  2240  001434  EF20  F00A         	goto	u910
  2241  001438  EF1E  F00A         	goto	u911
  2242  00143C                     u911:
  2243  00143C  EF32  F00A         	goto	l1855
  2244  001440                     u910:
  2245  001440  1E09               	comf	(___aomod@dividend+7)^0,f,c
  2246  001442  1E08               	comf	(___aomod@dividend+6)^0,f,c
  2247  001444  1E07               	comf	(___aomod@dividend+5)^0,f,c
  2248  001446  1E06               	comf	(___aomod@dividend+4)^0,f,c
  2249  001448  1E05               	comf	(___aomod@dividend+3)^0,f,c
  2250  00144A  1E04               	comf	(___aomod@dividend+2)^0,f,c
  2251  00144C  1E03               	comf	(___aomod@dividend+1)^0,f,c
  2252  00144E  6C02               	negf	___aomod@dividend^0,c
  2253  001450  0E00               	movlw	0
  2254  001452  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  2255  001454  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  2256  001456  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  2257  001458  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  2258  00145A  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  2259  00145C  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  2260  00145E  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  2261  001460  0E01               	movlw	1
  2262  001462  6E13               	movwf	___aomod@sign^0,c
  2263  001464                     l1855:
  2264  001464  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  2265  001466  EF39  F00A         	goto	u920
  2266  00146A  EF37  F00A         	goto	u921
  2267  00146E                     u921:
  2268  00146E  EF49  F00A         	goto	l1859
  2269  001472                     u920:
  2270  001472  1E11               	comf	(___aomod@divisor+7)^0,f,c
  2271  001474  1E10               	comf	(___aomod@divisor+6)^0,f,c
  2272  001476  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  2273  001478  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  2274  00147A  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  2275  00147C  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  2276  00147E  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  2277  001480  6C0A               	negf	___aomod@divisor^0,c
  2278  001482  0E00               	movlw	0
  2279  001484  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  2280  001486  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  2281  001488  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  2282  00148A  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  2283  00148C  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  2284  00148E  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  2285  001490  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  2286  001492                     l1859:
  2287  001492  500A               	movf	___aomod@divisor^0,w,c
  2288  001494  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  2289  001496  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  2290  001498  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  2291  00149A  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  2292  00149C  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  2293  00149E  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  2294  0014A0  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  2295  0014A2  B4D8               	btfsc	status,2,c
  2296  0014A4  EF56  F00A         	goto	u931
  2297  0014A8  EF58  F00A         	goto	u930
  2298  0014AC                     u931:
  2299  0014AC  EFA0  F00A         	goto	l1875
  2300  0014B0                     u930:
  2301  0014B0  0E01               	movlw	1
  2302  0014B2  6E12               	movwf	___aomod@counter^0,c
  2303  0014B4  EF66  F00A         	goto	l1865
  2304  0014B8                     l1863:
  2305  0014B8  90D8               	bcf	status,0,c
  2306  0014BA  360A               	rlcf	___aomod@divisor^0,f,c
  2307  0014BC  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  2308  0014BE  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  2309  0014C0  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  2310  0014C2  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  2311  0014C4  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  2312  0014C6  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  2313  0014C8  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  2314  0014CA  2A12               	incf	___aomod@counter^0,f,c
  2315  0014CC                     l1865:
  2316  0014CC  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  2317  0014CE  EF6B  F00A         	goto	u941
  2318  0014D2  EF6D  F00A         	goto	u940
  2319  0014D6                     u941:
  2320  0014D6  EF5C  F00A         	goto	l1863
  2321  0014DA                     u940:
  2322  0014DA                     l1867:
  2323  0014DA  500A               	movf	___aomod@divisor^0,w,c
  2324  0014DC  5C02               	subwf	___aomod@dividend^0,w,c
  2325  0014DE  500B               	movf	(___aomod@divisor+1)^0,w,c
  2326  0014E0  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  2327  0014E2  500C               	movf	(___aomod@divisor+2)^0,w,c
  2328  0014E4  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  2329  0014E6  500D               	movf	(___aomod@divisor+3)^0,w,c
  2330  0014E8  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  2331  0014EA  500E               	movf	(___aomod@divisor+4)^0,w,c
  2332  0014EC  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  2333  0014EE  500F               	movf	(___aomod@divisor+5)^0,w,c
  2334  0014F0  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  2335  0014F2  5010               	movf	(___aomod@divisor+6)^0,w,c
  2336  0014F4  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  2337  0014F6  5011               	movf	(___aomod@divisor+7)^0,w,c
  2338  0014F8  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  2339  0014FA  A0D8               	btfss	status,0,c
  2340  0014FC  EF82  F00A         	goto	u951
  2341  001500  EF84  F00A         	goto	u950
  2342  001504                     u951:
  2343  001504  EF94  F00A         	goto	l1871
  2344  001508                     u950:
  2345  001508  500A               	movf	___aomod@divisor^0,w,c
  2346  00150A  5E02               	subwf	___aomod@dividend^0,f,c
  2347  00150C  500B               	movf	(___aomod@divisor+1)^0,w,c
  2348  00150E  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  2349  001510  500C               	movf	(___aomod@divisor+2)^0,w,c
  2350  001512  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  2351  001514  500D               	movf	(___aomod@divisor+3)^0,w,c
  2352  001516  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  2353  001518  500E               	movf	(___aomod@divisor+4)^0,w,c
  2354  00151A  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  2355  00151C  500F               	movf	(___aomod@divisor+5)^0,w,c
  2356  00151E  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  2357  001520  5010               	movf	(___aomod@divisor+6)^0,w,c
  2358  001522  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  2359  001524  5011               	movf	(___aomod@divisor+7)^0,w,c
  2360  001526  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  2361  001528                     l1871:
  2362  001528  90D8               	bcf	status,0,c
  2363  00152A  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  2364  00152C  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  2365  00152E  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  2366  001530  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  2367  001532  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  2368  001534  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  2369  001536  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  2370  001538  320A               	rrcf	___aomod@divisor^0,f,c
  2371  00153A  2E12               	decfsz	___aomod@counter^0,f,c
  2372  00153C  EF6D  F00A         	goto	l1867
  2373  001540                     l1875:
  2374  001540  5013               	movf	___aomod@sign^0,w,c
  2375  001542  B4D8               	btfsc	status,2,c
  2376  001544  EFA6  F00A         	goto	u961
  2377  001548  EFA8  F00A         	goto	u960
  2378  00154C                     u961:
  2379  00154C  EFB8  F00A         	goto	l1879
  2380  001550                     u960:
  2381  001550  1E09               	comf	(___aomod@dividend+7)^0,f,c
  2382  001552  1E08               	comf	(___aomod@dividend+6)^0,f,c
  2383  001554  1E07               	comf	(___aomod@dividend+5)^0,f,c
  2384  001556  1E06               	comf	(___aomod@dividend+4)^0,f,c
  2385  001558  1E05               	comf	(___aomod@dividend+3)^0,f,c
  2386  00155A  1E04               	comf	(___aomod@dividend+2)^0,f,c
  2387  00155C  1E03               	comf	(___aomod@dividend+1)^0,f,c
  2388  00155E  6C02               	negf	___aomod@dividend^0,c
  2389  001560  0E00               	movlw	0
  2390  001562  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  2391  001564  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  2392  001566  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  2393  001568  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  2394  00156A  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  2395  00156C  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  2396  00156E  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  2397  001570                     l1879:
  2398  001570  C002  F002         	movff	___aomod@dividend,?___aomod
  2399  001574  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  2400  001578  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  2401  00157C  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  2402  001580  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  2403  001584  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  2404  001588  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  2405  00158C  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  2406  001590  0012               	return		;funcret
  2407  001592                     __end_of___aomod:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function ___aodiv *****************
  2411 ;; Defined at:
  2412 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aodiv.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  dividend        8    1[COMRAM] long long 
  2415 ;;  divisor         8    9[COMRAM] long long 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  quotient        8   19[COMRAM] long long 
  2418 ;;  sign            1   18[COMRAM] unsigned char 
  2419 ;;  counter         1   17[COMRAM] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  8    1[COMRAM] long long 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2429 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2430 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2432 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2433 ;;Total ram usage:       26 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_dtoa
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text13
  2444  0012A6                     __ptext13:
  2445                           	callstack 0
  2446  0012A6                     ___aodiv:
  2447                           	callstack 25
  2448  0012A6  0E00               	movlw	0
  2449  0012A8  6E13               	movwf	___aodiv@sign^0,c
  2450  0012AA  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  2451  0012AC  EF5C  F009         	goto	u840
  2452  0012B0  EF5A  F009         	goto	u841
  2453  0012B4                     u841:
  2454  0012B4  EF6E  F009         	goto	l1811
  2455  0012B8                     u840:
  2456  0012B8  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  2457  0012BA  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  2458  0012BC  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  2459  0012BE  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  2460  0012C0  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  2461  0012C2  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  2462  0012C4  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  2463  0012C6  6C0A               	negf	___aodiv@divisor^0,c
  2464  0012C8  0E00               	movlw	0
  2465  0012CA  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  2466  0012CC  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  2467  0012CE  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  2468  0012D0  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  2469  0012D2  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  2470  0012D4  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  2471  0012D6  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  2472  0012D8  0E01               	movlw	1
  2473  0012DA  6E13               	movwf	___aodiv@sign^0,c
  2474  0012DC                     l1811:
  2475  0012DC  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  2476  0012DE  EF75  F009         	goto	u850
  2477  0012E2  EF73  F009         	goto	u851
  2478  0012E6                     u851:
  2479  0012E6  EF87  F009         	goto	l1817
  2480  0012EA                     u850:
  2481  0012EA  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  2482  0012EC  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  2483  0012EE  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  2484  0012F0  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  2485  0012F2  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  2486  0012F4  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  2487  0012F6  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  2488  0012F8  6C02               	negf	___aodiv@dividend^0,c
  2489  0012FA  0E00               	movlw	0
  2490  0012FC  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  2491  0012FE  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  2492  001300  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  2493  001302  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  2494  001304  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  2495  001306  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  2496  001308  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  2497  00130A  0E01               	movlw	1
  2498  00130C  1A13               	xorwf	___aodiv@sign^0,f,c
  2499  00130E                     l1817:
  2500  00130E  EE20  F014         	lfsr	2,___aodiv@quotient
  2501  001312  0E07               	movlw	7
  2502  001314                     u861:
  2503  001314  6ADE               	clrf	postinc2,c
  2504  001316  06E8               	decf	wreg,f,c
  2505  001318  E2FD               	bc	u861
  2506  00131A  500A               	movf	___aodiv@divisor^0,w,c
  2507  00131C  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  2508  00131E  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  2509  001320  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  2510  001322  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  2511  001324  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  2512  001326  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  2513  001328  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  2514  00132A  B4D8               	btfsc	status,2,c
  2515  00132C  EF9A  F009         	goto	u871
  2516  001330  EF9C  F009         	goto	u870
  2517  001334                     u871:
  2518  001334  EFEE  F009         	goto	l1839
  2519  001338                     u870:
  2520  001338  0E01               	movlw	1
  2521  00133A  6E12               	movwf	___aodiv@counter^0,c
  2522  00133C  EFAA  F009         	goto	l1825
  2523  001340                     l1823:
  2524  001340  90D8               	bcf	status,0,c
  2525  001342  360A               	rlcf	___aodiv@divisor^0,f,c
  2526  001344  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  2527  001346  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  2528  001348  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  2529  00134A  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  2530  00134C  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  2531  00134E  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  2532  001350  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  2533  001352  2A12               	incf	___aodiv@counter^0,f,c
  2534  001354                     l1825:
  2535  001354  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  2536  001356  EFAF  F009         	goto	u881
  2537  00135A  EFB1  F009         	goto	u880
  2538  00135E                     u881:
  2539  00135E  EFA0  F009         	goto	l1823
  2540  001362                     u880:
  2541  001362                     l1827:
  2542  001362  90D8               	bcf	status,0,c
  2543  001364  3614               	rlcf	___aodiv@quotient^0,f,c
  2544  001366  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  2545  001368  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  2546  00136A  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  2547  00136C  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  2548  00136E  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  2549  001370  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  2550  001372  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  2551  001374  500A               	movf	___aodiv@divisor^0,w,c
  2552  001376  5C02               	subwf	___aodiv@dividend^0,w,c
  2553  001378  500B               	movf	(___aodiv@divisor+1)^0,w,c
  2554  00137A  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  2555  00137C  500C               	movf	(___aodiv@divisor+2)^0,w,c
  2556  00137E  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  2557  001380  500D               	movf	(___aodiv@divisor+3)^0,w,c
  2558  001382  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  2559  001384  500E               	movf	(___aodiv@divisor+4)^0,w,c
  2560  001386  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  2561  001388  500F               	movf	(___aodiv@divisor+5)^0,w,c
  2562  00138A  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  2563  00138C  5010               	movf	(___aodiv@divisor+6)^0,w,c
  2564  00138E  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  2565  001390  5011               	movf	(___aodiv@divisor+7)^0,w,c
  2566  001392  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  2567  001394  A0D8               	btfss	status,0,c
  2568  001396  EFCF  F009         	goto	u891
  2569  00139A  EFD1  F009         	goto	u890
  2570  00139E                     u891:
  2571  00139E  EFE2  F009         	goto	l1835
  2572  0013A2                     u890:
  2573  0013A2  500A               	movf	___aodiv@divisor^0,w,c
  2574  0013A4  5E02               	subwf	___aodiv@dividend^0,f,c
  2575  0013A6  500B               	movf	(___aodiv@divisor+1)^0,w,c
  2576  0013A8  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  2577  0013AA  500C               	movf	(___aodiv@divisor+2)^0,w,c
  2578  0013AC  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  2579  0013AE  500D               	movf	(___aodiv@divisor+3)^0,w,c
  2580  0013B0  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  2581  0013B2  500E               	movf	(___aodiv@divisor+4)^0,w,c
  2582  0013B4  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  2583  0013B6  500F               	movf	(___aodiv@divisor+5)^0,w,c
  2584  0013B8  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  2585  0013BA  5010               	movf	(___aodiv@divisor+6)^0,w,c
  2586  0013BC  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  2587  0013BE  5011               	movf	(___aodiv@divisor+7)^0,w,c
  2588  0013C0  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  2589  0013C2  8014               	bsf	___aodiv@quotient^0,0,c
  2590  0013C4                     l1835:
  2591  0013C4  90D8               	bcf	status,0,c
  2592  0013C6  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  2593  0013C8  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  2594  0013CA  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  2595  0013CC  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  2596  0013CE  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  2597  0013D0  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  2598  0013D2  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  2599  0013D4  320A               	rrcf	___aodiv@divisor^0,f,c
  2600  0013D6  2E12               	decfsz	___aodiv@counter^0,f,c
  2601  0013D8  EFB1  F009         	goto	l1827
  2602  0013DC                     l1839:
  2603  0013DC  5013               	movf	___aodiv@sign^0,w,c
  2604  0013DE  B4D8               	btfsc	status,2,c
  2605  0013E0  EFF4  F009         	goto	u901
  2606  0013E4  EFF6  F009         	goto	u900
  2607  0013E8                     u901:
  2608  0013E8  EF06  F00A         	goto	l1843
  2609  0013EC                     u900:
  2610  0013EC  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  2611  0013EE  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  2612  0013F0  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  2613  0013F2  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  2614  0013F4  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  2615  0013F6  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  2616  0013F8  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  2617  0013FA  6C14               	negf	___aodiv@quotient^0,c
  2618  0013FC  0E00               	movlw	0
  2619  0013FE  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  2620  001400  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  2621  001402  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  2622  001404  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  2623  001406  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  2624  001408  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  2625  00140A  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  2626  00140C                     l1843:
  2627  00140C  C014  F002         	movff	___aodiv@quotient,?___aodiv
  2628  001410  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  2629  001414  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  2630  001418  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  2631  00141C  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  2632  001420  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  2633  001424  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  2634  001428  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  2635  00142C  0012               	return		;funcret
  2636  00142E                     __end_of___aodiv:
  2637                           	callstack 0
  2638                           
  2639 ;; *************** function _sendStringSerial4 *****************
  2640 ;; Defined at:
  2641 ;;		line 35 in file "serial.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  string          2    3[COMRAM] PTR unsigned char 
  2644 ;;		 -> main@buf(40), 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2659 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;Total ram usage:        3 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 2
  2663 ;; This function calls:
  2664 ;;		_sendCharSerial4
  2665 ;; This function is called by:
  2666 ;;		_main
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text14
  2671  001B22                     __ptext14:
  2672                           	callstack 0
  2673  001B22                     _sendStringSerial4:
  2674                           	callstack 28
  2675  001B22                     
  2676                           ;serial.c: 37:     while (*string != 0) {
  2677  001B22  EFA0  F00D         	goto	l2157
  2678  001B26                     l2153:
  2679                           
  2680                           ;serial.c: 38:         sendCharSerial4(*string++);
  2681  001B26  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2682  001B2A  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2683  001B2E  50DF               	movf	indf2,w,c
  2684  001B30  6E06               	movwf	??_sendStringSerial4^0,c
  2685  001B32  5006               	movf	??_sendStringSerial4^0,w,c
  2686  001B34  6E02               	movwf	sendCharSerial4@charToSend^0,c
  2687  001B36  6A03               	clrf	(sendCharSerial4@charToSend+1)^0,c
  2688  001B38  EC55  F00E         	call	_sendCharSerial4	;wreg free
  2689  001B3C  4A04               	infsnz	sendStringSerial4@string^0,f,c
  2690  001B3E  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  2691  001B40                     l2157:
  2692                           
  2693                           ;serial.c: 37:     while (*string != 0) {
  2694  001B40  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  2695  001B44  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2696  001B48  50DF               	movf	indf2,w,c
  2697  001B4A  A4D8               	btfss	status,2,c
  2698  001B4C  EFAA  F00D         	goto	u1311
  2699  001B50  EFAC  F00D         	goto	u1310
  2700  001B54                     u1311:
  2701  001B54  EF93  F00D         	goto	l2153
  2702  001B58                     u1310:
  2703  001B58  0012               	return		;funcret
  2704  001B5A                     __end_of_sendStringSerial4:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function _sendCharSerial4 *****************
  2708 ;; Defined at:
  2709 ;;		line 28 in file "serial.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  charToSend      2    1[COMRAM] unsigned int 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		None
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2727 ;;Total ram usage:        2 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; Hardware stack levels required when called: 1
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_sendStringSerial4
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text15
  2738  001CAA                     __ptext15:
  2739                           	callstack 0
  2740  001CAA                     _sendCharSerial4:
  2741                           	callstack 28
  2742  001CAA                     l340:
  2743  001CAA  010E               	movlb	14	; () banked
  2744  001CAC  A537               	btfss	55,2,b	;volatile
  2745  001CAE  EF5B  F00E         	goto	u1251
  2746  001CB2  EF5D  F00E         	goto	u1250
  2747  001CB6                     u1251:
  2748  001CB6  EF55  F00E         	goto	l340
  2749  001CBA                     u1250:
  2750  001CBA                     
  2751                           ; BSR set to: 14
  2752                           ;serial.c: 30:     TX4REG = charToSend;
  2753  001CBA  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2754  001CBE                     
  2755                           ; BSR set to: 14
  2756  001CBE  0012               	return		;funcret
  2757  001CC0                     __end_of_sendCharSerial4:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _read_colour *****************
  2761 ;; Defined at:
  2762 ;;		line 15 in file "read_colour.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  current         8   12[COMRAM] struct .
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  8   12[COMRAM] struct .
  2769 ;; Registers used:
  2770 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2776 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;Total ram usage:        8 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 4
  2783 ;; This function calls:
  2784 ;;		_color_read_Blue
  2785 ;;		_color_read_Clear
  2786 ;;		_color_read_Green
  2787 ;;		_color_read_Red
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text16
  2794  001A22                     __ptext16:
  2795                           	callstack 0
  2796  001A22                     _read_colour:
  2797                           	callstack 26
  2798  001A22                     
  2799                           ;read_colour.c: 17:     current.R = color_read_Red();
  2800  001A22  EC4F  F00C         	call	_color_read_Red	;wreg free
  2801  001A26  C006  F00D         	movff	?_color_read_Red,read_colour@current
  2802  001A2A  C007  F00E         	movff	?_color_read_Red+1,read_colour@current+1
  2803                           
  2804                           ;read_colour.c: 18:     current.G = color_read_Green();
  2805  001A2E  EC77  F00C         	call	_color_read_Green	;wreg free
  2806  001A32  C006  F00F         	movff	?_color_read_Green,read_colour@current+2
  2807  001A36  C007  F010         	movff	?_color_read_Green+1,read_colour@current+3
  2808                           
  2809                           ;read_colour.c: 19:     current.B = color_read_Blue();
  2810  001A3A  ECC7  F00C         	call	_color_read_Blue	;wreg free
  2811  001A3E  C006  F011         	movff	?_color_read_Blue,read_colour@current+4
  2812  001A42  C007  F012         	movff	?_color_read_Blue+1,read_colour@current+5
  2813                           
  2814                           ;read_colour.c: 20:     current.C = color_read_Clear();
  2815  001A46  EC9F  F00C         	call	_color_read_Clear	;wreg free
  2816  001A4A  C006  F013         	movff	?_color_read_Clear,read_colour@current+6
  2817  001A4E  C007  F014         	movff	?_color_read_Clear+1,read_colour@current+7
  2818  001A52                     
  2819                           ;read_colour.c: 22:     return current;
  2820  001A52  EE20  F00D         	lfsr	2,read_colour@current
  2821  001A56  EE00  F00D         	lfsr	0,?_read_colour
  2822  001A5A  0E07               	movlw	7
  2823  001A5C                     u1301:
  2824  001A5C  CFDB FFEB          	movff	plusw2,plusw0
  2825  001A60  06E8               	decf	wreg,f,c
  2826  001A62  E2FC               	bc	u1301
  2827  001A64  0012               	return		;funcret
  2828  001A66                     __end_of_read_colour:
  2829                           	callstack 0
  2830                           
  2831 ;; *************** function _color_read_Red *****************
  2832 ;; Defined at:
  2833 ;;		line 45 in file "color.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  tmp             2   10[COMRAM] unsigned int 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  2    5[COMRAM] unsigned int 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2850 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;Total ram usage:        7 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; Hardware stack levels required when called: 3
  2854 ;; This function calls:
  2855 ;;		_I2C_2_Master_Read
  2856 ;;		_I2C_2_Master_RepStart
  2857 ;;		_I2C_2_Master_Start
  2858 ;;		_I2C_2_Master_Stop
  2859 ;;		_I2C_2_Master_Write
  2860 ;; This function is called by:
  2861 ;;		_read_colour
  2862 ;;		_read_card
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text17
  2867  00189E                     __ptext17:
  2868                           	callstack 0
  2869  00189E                     _color_read_Red:
  2870                           	callstack 26
  2871  00189E                     
  2872                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  2873  00189E  EC77  F00E         	call	_I2C_2_Master_Start	;wreg free
  2874                           
  2875                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  2876  0018A2  0E52               	movlw	82
  2877  0018A4  EC67  F00E         	call	_I2C_2_Master_Write
  2878                           
  2879                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x16);
  2880  0018A8  0EB6               	movlw	182
  2881  0018AA  EC67  F00E         	call	_I2C_2_Master_Write
  2882                           
  2883                           ;color.c: 51:  I2C_2_Master_RepStart();
  2884  0018AE  EC6D  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2885                           
  2886                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  2887  0018B2  0E53               	movlw	83
  2888  0018B4  EC67  F00E         	call	_I2C_2_Master_Write
  2889                           
  2890                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  2891  0018B8  0E01               	movlw	1
  2892  0018BA  EC33  F00D         	call	_I2C_2_Master_Read
  2893  0018BE  6E08               	movwf	??_color_read_Red^0,c
  2894  0018C0  5008               	movf	??_color_read_Red^0,w,c
  2895  0018C2  6E0B               	movwf	color_read_Red@tmp^0,c
  2896  0018C4  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
  2897                           
  2898                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2899  0018C6  0E00               	movlw	0
  2900  0018C8  EC33  F00D         	call	_I2C_2_Master_Read
  2901  0018CC  6E08               	movwf	??_color_read_Red^0,c
  2902  0018CE  5008               	movf	??_color_read_Red^0,w,c
  2903  0018D0  6E0A               	movwf	(??_color_read_Red+2)^0,c
  2904  0018D2  6A09               	clrf	(??_color_read_Red+1)^0,c
  2905  0018D4  500B               	movf	color_read_Red@tmp^0,w,c
  2906  0018D6  1009               	iorwf	(??_color_read_Red+1)^0,w,c
  2907  0018D8  6E0B               	movwf	color_read_Red@tmp^0,c
  2908  0018DA  500C               	movf	(color_read_Red@tmp+1)^0,w,c
  2909  0018DC  100A               	iorwf	(??_color_read_Red+2)^0,w,c
  2910  0018DE  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
  2911                           
  2912                           ;color.c: 55:  I2C_2_Master_Stop();
  2913  0018E0  EC72  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2914  0018E4                     
  2915                           ;color.c: 56:  return tmp;
  2916  0018E4  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
  2917  0018E8  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2918  0018EC  0012               	return		;funcret
  2919  0018EE                     __end_of_color_read_Red:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _color_read_Green *****************
  2923 ;; Defined at:
  2924 ;;		line 64 in file "color.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  tmp             2   10[COMRAM] unsigned int 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  2    5[COMRAM] unsigned int 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;Total ram usage:        7 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 3
  2945 ;; This function calls:
  2946 ;;		_I2C_2_Master_Read
  2947 ;;		_I2C_2_Master_RepStart
  2948 ;;		_I2C_2_Master_Start
  2949 ;;		_I2C_2_Master_Stop
  2950 ;;		_I2C_2_Master_Write
  2951 ;; This function is called by:
  2952 ;;		_read_colour
  2953 ;;		_read_card
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text18
  2958  0018EE                     __ptext18:
  2959                           	callstack 0
  2960  0018EE                     _color_read_Green:
  2961                           	callstack 26
  2962  0018EE                     
  2963                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  2964  0018EE  EC77  F00E         	call	_I2C_2_Master_Start	;wreg free
  2965                           
  2966                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  2967  0018F2  0E52               	movlw	82
  2968  0018F4  EC67  F00E         	call	_I2C_2_Master_Write
  2969                           
  2970                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x18);
  2971  0018F8  0EB8               	movlw	184
  2972  0018FA  EC67  F00E         	call	_I2C_2_Master_Write
  2973                           
  2974                           ;color.c: 70:  I2C_2_Master_RepStart();
  2975  0018FE  EC6D  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2976                           
  2977                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  2978  001902  0E53               	movlw	83
  2979  001904  EC67  F00E         	call	_I2C_2_Master_Write
  2980                           
  2981                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  2982  001908  0E01               	movlw	1
  2983  00190A  EC33  F00D         	call	_I2C_2_Master_Read
  2984  00190E  6E08               	movwf	??_color_read_Green^0,c
  2985  001910  5008               	movf	??_color_read_Green^0,w,c
  2986  001912  6E0B               	movwf	color_read_Green@tmp^0,c
  2987  001914  6A0C               	clrf	(color_read_Green@tmp+1)^0,c
  2988                           
  2989                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2990  001916  0E00               	movlw	0
  2991  001918  EC33  F00D         	call	_I2C_2_Master_Read
  2992  00191C  6E08               	movwf	??_color_read_Green^0,c
  2993  00191E  5008               	movf	??_color_read_Green^0,w,c
  2994  001920  6E0A               	movwf	(??_color_read_Green+2)^0,c
  2995  001922  6A09               	clrf	(??_color_read_Green+1)^0,c
  2996  001924  500B               	movf	color_read_Green@tmp^0,w,c
  2997  001926  1009               	iorwf	(??_color_read_Green+1)^0,w,c
  2998  001928  6E0B               	movwf	color_read_Green@tmp^0,c
  2999  00192A  500C               	movf	(color_read_Green@tmp+1)^0,w,c
  3000  00192C  100A               	iorwf	(??_color_read_Green+2)^0,w,c
  3001  00192E  6E0C               	movwf	(color_read_Green@tmp+1)^0,c
  3002                           
  3003                           ;color.c: 74:  I2C_2_Master_Stop();
  3004  001930  EC72  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3005  001934                     
  3006                           ;color.c: 75:  return tmp;
  3007  001934  C00B  F006         	movff	color_read_Green@tmp,?_color_read_Green
  3008  001938  C00C  F007         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3009  00193C  0012               	return		;funcret
  3010  00193E                     __end_of_color_read_Green:
  3011                           	callstack 0
  3012                           
  3013 ;; *************** function _color_read_Clear *****************
  3014 ;; Defined at:
  3015 ;;		line 102 in file "color.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  tmp             2   10[COMRAM] unsigned int 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  2    5[COMRAM] unsigned int 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;Total ram usage:        7 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; Hardware stack levels required when called: 3
  3036 ;; This function calls:
  3037 ;;		_I2C_2_Master_Read
  3038 ;;		_I2C_2_Master_RepStart
  3039 ;;		_I2C_2_Master_Start
  3040 ;;		_I2C_2_Master_Stop
  3041 ;;		_I2C_2_Master_Write
  3042 ;; This function is called by:
  3043 ;;		_read_colour
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text19
  3048  00193E                     __ptext19:
  3049                           	callstack 0
  3050  00193E                     _color_read_Clear:
  3051                           	callstack 26
  3052  00193E                     
  3053                           ;color.c: 104:  unsigned int tmp;;color.c: 105:  I2C_2_Master_Start();
  3054  00193E  EC77  F00E         	call	_I2C_2_Master_Start	;wreg free
  3055                           
  3056                           ;color.c: 106:  I2C_2_Master_Write(0x52 | 0x00);
  3057  001942  0E52               	movlw	82
  3058  001944  EC67  F00E         	call	_I2C_2_Master_Write
  3059                           
  3060                           ;color.c: 107:  I2C_2_Master_Write(0xA0 | 0x14);
  3061  001948  0EB4               	movlw	180
  3062  00194A  EC67  F00E         	call	_I2C_2_Master_Write
  3063                           
  3064                           ;color.c: 108:  I2C_2_Master_RepStart();
  3065  00194E  EC6D  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3066                           
  3067                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x01);
  3068  001952  0E53               	movlw	83
  3069  001954  EC67  F00E         	call	_I2C_2_Master_Write
  3070                           
  3071                           ;color.c: 110:  tmp=I2C_2_Master_Read(1);
  3072  001958  0E01               	movlw	1
  3073  00195A  EC33  F00D         	call	_I2C_2_Master_Read
  3074  00195E  6E08               	movwf	??_color_read_Clear^0,c
  3075  001960  5008               	movf	??_color_read_Clear^0,w,c
  3076  001962  6E0B               	movwf	color_read_Clear@tmp^0,c
  3077  001964  6A0C               	clrf	(color_read_Clear@tmp+1)^0,c
  3078                           
  3079                           ;color.c: 111:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3080  001966  0E00               	movlw	0
  3081  001968  EC33  F00D         	call	_I2C_2_Master_Read
  3082  00196C  6E08               	movwf	??_color_read_Clear^0,c
  3083  00196E  5008               	movf	??_color_read_Clear^0,w,c
  3084  001970  6E0A               	movwf	(??_color_read_Clear+2)^0,c
  3085  001972  6A09               	clrf	(??_color_read_Clear+1)^0,c
  3086  001974  500B               	movf	color_read_Clear@tmp^0,w,c
  3087  001976  1009               	iorwf	(??_color_read_Clear+1)^0,w,c
  3088  001978  6E0B               	movwf	color_read_Clear@tmp^0,c
  3089  00197A  500C               	movf	(color_read_Clear@tmp+1)^0,w,c
  3090  00197C  100A               	iorwf	(??_color_read_Clear+2)^0,w,c
  3091  00197E  6E0C               	movwf	(color_read_Clear@tmp+1)^0,c
  3092                           
  3093                           ;color.c: 112:  I2C_2_Master_Stop();
  3094  001980  EC72  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3095  001984                     
  3096                           ;color.c: 113:  return tmp;
  3097  001984  C00B  F006         	movff	color_read_Clear@tmp,?_color_read_Clear
  3098  001988  C00C  F007         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3099  00198C  0012               	return		;funcret
  3100  00198E                     __end_of_color_read_Clear:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function _color_read_Blue *****************
  3104 ;; Defined at:
  3105 ;;		line 83 in file "color.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  tmp             2   10[COMRAM] unsigned int 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2    5[COMRAM] unsigned int 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3121 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;Total ram usage:        7 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 3
  3126 ;; This function calls:
  3127 ;;		_I2C_2_Master_Read
  3128 ;;		_I2C_2_Master_RepStart
  3129 ;;		_I2C_2_Master_Start
  3130 ;;		_I2C_2_Master_Stop
  3131 ;;		_I2C_2_Master_Write
  3132 ;; This function is called by:
  3133 ;;		_read_colour
  3134 ;;		_read_card
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text20
  3139  00198E                     __ptext20:
  3140                           	callstack 0
  3141  00198E                     _color_read_Blue:
  3142                           	callstack 26
  3143  00198E                     
  3144                           ;color.c: 85:  unsigned int tmp;;color.c: 86:  I2C_2_Master_Start();
  3145  00198E  EC77  F00E         	call	_I2C_2_Master_Start	;wreg free
  3146                           
  3147                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x00);
  3148  001992  0E52               	movlw	82
  3149  001994  EC67  F00E         	call	_I2C_2_Master_Write
  3150                           
  3151                           ;color.c: 88:  I2C_2_Master_Write(0xA0 | 0x1A);
  3152  001998  0EBA               	movlw	186
  3153  00199A  EC67  F00E         	call	_I2C_2_Master_Write
  3154                           
  3155                           ;color.c: 89:  I2C_2_Master_RepStart();
  3156  00199E  EC6D  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3157                           
  3158                           ;color.c: 90:  I2C_2_Master_Write(0x52 | 0x01);
  3159  0019A2  0E53               	movlw	83
  3160  0019A4  EC67  F00E         	call	_I2C_2_Master_Write
  3161                           
  3162                           ;color.c: 91:  tmp=I2C_2_Master_Read(1);
  3163  0019A8  0E01               	movlw	1
  3164  0019AA  EC33  F00D         	call	_I2C_2_Master_Read
  3165  0019AE  6E08               	movwf	??_color_read_Blue^0,c
  3166  0019B0  5008               	movf	??_color_read_Blue^0,w,c
  3167  0019B2  6E0B               	movwf	color_read_Blue@tmp^0,c
  3168  0019B4  6A0C               	clrf	(color_read_Blue@tmp+1)^0,c
  3169                           
  3170                           ;color.c: 92:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3171  0019B6  0E00               	movlw	0
  3172  0019B8  EC33  F00D         	call	_I2C_2_Master_Read
  3173  0019BC  6E08               	movwf	??_color_read_Blue^0,c
  3174  0019BE  5008               	movf	??_color_read_Blue^0,w,c
  3175  0019C0  6E0A               	movwf	(??_color_read_Blue+2)^0,c
  3176  0019C2  6A09               	clrf	(??_color_read_Blue+1)^0,c
  3177  0019C4  500B               	movf	color_read_Blue@tmp^0,w,c
  3178  0019C6  1009               	iorwf	(??_color_read_Blue+1)^0,w,c
  3179  0019C8  6E0B               	movwf	color_read_Blue@tmp^0,c
  3180  0019CA  500C               	movf	(color_read_Blue@tmp+1)^0,w,c
  3181  0019CC  100A               	iorwf	(??_color_read_Blue+2)^0,w,c
  3182  0019CE  6E0C               	movwf	(color_read_Blue@tmp+1)^0,c
  3183                           
  3184                           ;color.c: 93:  I2C_2_Master_Stop();
  3185  0019D0  EC72  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3186  0019D4                     
  3187                           ;color.c: 94:  return tmp;
  3188  0019D4  C00B  F006         	movff	color_read_Blue@tmp,?_color_read_Blue
  3189  0019D8  C00C  F007         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3190  0019DC  0012               	return		;funcret
  3191  0019DE                     __end_of_color_read_Blue:
  3192                           	callstack 0
  3193                           
  3194 ;; *************** function _I2C_2_Master_RepStart *****************
  3195 ;; Defined at:
  3196 ;;		line 49 in file "i2c.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3214 ;;Total ram usage:        0 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; Hardware stack levels required when called: 2
  3217 ;; This function calls:
  3218 ;;		_I2C_2_Master_Idle
  3219 ;; This function is called by:
  3220 ;;		_color_read_Red
  3221 ;;		_color_read_Green
  3222 ;;		_color_read_Blue
  3223 ;;		_color_read_Clear
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text21
  3228  001CDA                     __ptext21:
  3229                           	callstack 0
  3230  001CDA                     _I2C_2_Master_RepStart:
  3231                           	callstack 26
  3232  001CDA                     
  3233                           ;i2c.c: 51:   I2C_2_Master_Idle();
  3234  001CDA  EC10  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3235  001CDE                     
  3236                           ;i2c.c: 52:   SSP2CON2bits.RSEN = 1;
  3237  001CDE  010E               	movlb	14	; () banked
  3238  001CE0  83DA               	bsf	218,1,b	;volatile
  3239  001CE2                     
  3240                           ; BSR set to: 14
  3241  001CE2  0012               	return		;funcret
  3242  001CE4                     __end_of_I2C_2_Master_RepStart:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _I2C_2_Master_Read *****************
  3246 ;; Defined at:
  3247 ;;		line 79 in file "i2c.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  ack             1    wreg     unsigned char 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  ack             1    3[COMRAM] unsigned char 
  3252 ;;  tmp             1    4[COMRAM] unsigned char 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      unsigned char 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2, status,0, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3266 ;;Total ram usage:        3 bytes
  3267 ;; Hardware stack levels used: 1
  3268 ;; Hardware stack levels required when called: 2
  3269 ;; This function calls:
  3270 ;;		_I2C_2_Master_Idle
  3271 ;; This function is called by:
  3272 ;;		_color_read_Red
  3273 ;;		_color_read_Green
  3274 ;;		_color_read_Blue
  3275 ;;		_color_read_Clear
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text22
  3280  001A66                     __ptext22:
  3281                           	callstack 0
  3282  001A66                     _I2C_2_Master_Read:
  3283                           	callstack 26
  3284                           
  3285                           ; BSR set to: 14
  3286                           ;incstack = 0
  3287                           ;I2C_2_Master_Read@ack stored from wreg
  3288  001A66  6E04               	movwf	I2C_2_Master_Read@ack^0,c
  3289  001A68                     
  3290                           ;i2c.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 80: {;i2c.c: 81:  
      +                           unsigned char tmp;;i2c.c: 82:   I2C_2_Master_Idle();
  3291  001A68  EC10  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3292  001A6C                     
  3293                           ;i2c.c: 83:   SSP2CON2bits.RCEN = 1;
  3294  001A6C  010E               	movlb	14	; () banked
  3295  001A6E  87DA               	bsf	218,3,b	;volatile
  3296                           
  3297                           ;i2c.c: 84:   I2C_2_Master_Idle();
  3298  001A70  EC10  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3299  001A74                     
  3300                           ;i2c.c: 85:   tmp = SSP2BUF;
  3301  001A74  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3302                           
  3303                           ;i2c.c: 86:   I2C_2_Master_Idle();
  3304  001A78  EC10  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3305  001A7C                     
  3306                           ;i2c.c: 87:   SSP2CON2bits.ACKDT = !ack;
  3307  001A7C  5004               	movf	I2C_2_Master_Read@ack^0,w,c
  3308  001A7E  B4D8               	btfsc	status,2,c
  3309  001A80  EF44  F00D         	goto	u1191
  3310  001A84  EF48  F00D         	goto	u1190
  3311  001A88                     u1191:
  3312  001A88  6A03               	clrf	??_I2C_2_Master_Read^0,c
  3313  001A8A  2A03               	incf	??_I2C_2_Master_Read^0,f,c
  3314  001A8C  EF49  F00D         	goto	u1208
  3315  001A90                     u1190:
  3316  001A90  6A03               	clrf	??_I2C_2_Master_Read^0,c
  3317  001A92                     u1208:
  3318  001A92  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
  3319  001A94  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
  3320  001A96  010E               	movlb	14	; () banked
  3321  001A98  51DA               	movf	218,w,b	;volatile
  3322  001A9A  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  3323  001A9C  0BDF               	andlw	-33
  3324  001A9E  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  3325  001AA0  6FDA               	movwf	218,b	;volatile
  3326  001AA2                     
  3327                           ; BSR set to: 14
  3328                           ;i2c.c: 88:   SSP2CON2bits.ACKEN = 1;
  3329  001AA2  89DA               	bsf	218,4,b	;volatile
  3330  001AA4                     
  3331                           ; BSR set to: 14
  3332                           ;i2c.c: 89:   return tmp;
  3333  001AA4  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
  3334  001AA6                     
  3335                           ; BSR set to: 14
  3336  001AA6  0012               	return		;funcret
  3337  001AA8                     __end_of_I2C_2_Master_Read:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function _interrupts_init *****************
  3341 ;; Defined at:
  3342 ;;		line 13 in file "interrupts.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;Total ram usage:        0 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; Hardware stack levels required when called: 4
  3363 ;; This function calls:
  3364 ;;		_color_writetoaddr
  3365 ;; This function is called by:
  3366 ;;		_main
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text23
  3371  001AE8                     __ptext23:
  3372                           	callstack 0
  3373  001AE8                     _interrupts_init:
  3374                           	callstack 26
  3375  001AE8                     
  3376                           ;interrupts.c: 14:     TRISBbits.TRISB1 = 1;
  3377  001AE8  8282               	bsf	130,1,c	;volatile
  3378                           
  3379                           ;interrupts.c: 15:     ANSELBbits.ANSELB1 = 0;
  3380  001AEA  010E               	movlb	14	; () banked
  3381  001AEC  939A               	bcf	154,1,b	;volatile
  3382                           
  3383                           ;interrupts.c: 18:     PIE0bits.INT1IE = 1;
  3384  001AEE  8329               	bsf	41,1,b	;volatile
  3385                           
  3386                           ;interrupts.c: 19:     IPR0bits.INT1IP = 1;
  3387  001AF0  831F               	bsf	31,1,b	;volatile
  3388  001AF2                     
  3389                           ; BSR set to: 14
  3390                           ;interrupts.c: 21:     color_writetoaddr(0x04, 0x14);
  3391  001AF2  0E14               	movlw	20
  3392  001AF4  6E04               	movwf	color_writetoaddr@value^0,c
  3393  001AF6  0E04               	movlw	4
  3394  001AF8  EC45  F00E         	call	_color_writetoaddr
  3395                           
  3396                           ;interrupts.c: 22:     color_writetoaddr(0x05, 0x05);
  3397  001AFC  0E05               	movlw	5
  3398  001AFE  6E04               	movwf	color_writetoaddr@value^0,c
  3399  001B00  0E05               	movlw	5
  3400  001B02  EC45  F00E         	call	_color_writetoaddr
  3401                           
  3402                           ;interrupts.c: 23:     color_writetoaddr(0x06, 0x6C);
  3403  001B06  0E6C               	movlw	108
  3404  001B08  6E04               	movwf	color_writetoaddr@value^0,c
  3405  001B0A  0E06               	movlw	6
  3406  001B0C  EC45  F00E         	call	_color_writetoaddr
  3407                           
  3408                           ;interrupts.c: 24:     color_writetoaddr(0x07, 0x07);
  3409  001B10  0E07               	movlw	7
  3410  001B12  6E04               	movwf	color_writetoaddr@value^0,c
  3411  001B14  0E07               	movlw	7
  3412  001B16  EC45  F00E         	call	_color_writetoaddr
  3413  001B1A                     
  3414                           ;interrupts.c: 26:     INTCONbits.IPEN = 1;
  3415  001B1A  8AF2               	bsf	242,5,c	;volatile
  3416  001B1C                     
  3417                           ;interrupts.c: 27:     INTCONbits.PEIE = 1;
  3418  001B1C  8CF2               	bsf	242,6,c	;volatile
  3419  001B1E                     
  3420                           ;interrupts.c: 28:     INTCONbits.GIE = 1;
  3421  001B1E  8EF2               	bsf	242,7,c	;volatile
  3422  001B20  0012               	return		;funcret
  3423  001B22                     __end_of_interrupts_init:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _initUSART4 *****************
  3427 ;; Defined at:
  3428 ;;		line 4 in file "serial.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3446 ;;Total ram usage:        0 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 1
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_main
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text24
  3457  001C6A                     __ptext24:
  3458                           	callstack 0
  3459  001C6A                     _initUSART4:
  3460                           	callstack 29
  3461  001C6A                     
  3462                           ;serial.c: 7:     RC0PPS = 0x12;
  3463  001C6A  0E12               	movlw	18
  3464  001C6C  010E               	movlb	14	; () banked
  3465  001C6E  6F62               	movwf	98,b	;volatile
  3466                           
  3467                           ;serial.c: 8:     RX4PPS = 0x11;
  3468  001C70  0E11               	movlw	17
  3469  001C72  6F15               	movwf	21,b	;volatile
  3470  001C74                     
  3471                           ; BSR set to: 14
  3472                           ;serial.c: 9:     TRISCbits.TRISC1 = 1;
  3473  001C74  8283               	bsf	131,1,c	;volatile
  3474  001C76                     
  3475                           ; BSR set to: 14
  3476                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  3477  001C76  97E9               	bcf	233,3,b	;volatile
  3478  001C78                     
  3479                           ; BSR set to: 14
  3480                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  3481  001C78  95E8               	bcf	232,2,b	;volatile
  3482                           
  3483                           ;serial.c: 13:     SP4BRGL = 51;
  3484  001C7A  0E33               	movlw	51
  3485  001C7C  6FE5               	movwf	229,b	;volatile
  3486                           
  3487                           ;serial.c: 14:     SP4BRGH = 0;
  3488  001C7E  0E00               	movlw	0
  3489  001C80  6FE6               	movwf	230,b	;volatile
  3490  001C82                     
  3491                           ; BSR set to: 14
  3492                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  3493  001C82  89E7               	bsf	231,4,b	;volatile
  3494  001C84                     
  3495                           ; BSR set to: 14
  3496                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  3497  001C84  8BE8               	bsf	232,5,b	;volatile
  3498  001C86                     
  3499                           ; BSR set to: 14
  3500                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  3501  001C86  8FE7               	bsf	231,7,b	;volatile
  3502  001C88                     
  3503                           ; BSR set to: 14
  3504  001C88  0012               	return		;funcret
  3505  001C8A                     __end_of_initUSART4:
  3506                           	callstack 0
  3507                           
  3508 ;; *************** function _color_click_init *****************
  3509 ;; Defined at:
  3510 ;;		line 9 in file "color.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, status,2, status,0, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;Total ram usage:        1 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; Hardware stack levels required when called: 4
  3531 ;; This function calls:
  3532 ;;		_I2C_2_Master_Init
  3533 ;;		_color_writetoaddr
  3534 ;; This function is called by:
  3535 ;;		_main
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text25
  3540  001B90                     __ptext25:
  3541                           	callstack 0
  3542  001B90                     _color_click_init:
  3543                           	callstack 26
  3544  001B90                     
  3545                           ;color.c: 12:     I2C_2_Master_Init();
  3546  001B90  ECFB  F00D         	call	_I2C_2_Master_Init	;wreg free
  3547  001B94                     
  3548                           ;color.c: 15:   color_writetoaddr(0x00, 0x01);
  3549  001B94  0E01               	movlw	1
  3550  001B96  6E04               	movwf	color_writetoaddr@value^0,c
  3551  001B98  0E00               	movlw	0
  3552  001B9A  EC45  F00E         	call	_color_writetoaddr
  3553  001B9E                     
  3554                           ;color.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3555  001B9E  0E3F               	movlw	63
  3556  001BA0  6E06               	movwf	??_color_click_init^0,c
  3557  001BA2  0E55               	movlw	85
  3558  001BA4                     u1417:
  3559  001BA4  2EE8               	decfsz	wreg,f,c
  3560  001BA6  D7FE               	bra	u1417
  3561  001BA8  2E06               	decfsz	??_color_click_init^0,f,c
  3562  001BAA  D7FC               	bra	u1417
  3563  001BAC  F000               	nop	
  3564  001BAE                     
  3565                           ;color.c: 19:  color_writetoaddr(0x00, 0x03);
  3566  001BAE  0E03               	movlw	3
  3567  001BB0  6E04               	movwf	color_writetoaddr@value^0,c
  3568  001BB2  0E00               	movlw	0
  3569  001BB4  EC45  F00E         	call	_color_writetoaddr
  3570  001BB8                     
  3571                           ;color.c: 22:  color_writetoaddr(0x01, 0xD5);
  3572  001BB8  0ED5               	movlw	213
  3573  001BBA  6E04               	movwf	color_writetoaddr@value^0,c
  3574  001BBC  0E01               	movlw	1
  3575  001BBE  EC45  F00E         	call	_color_writetoaddr
  3576  001BC2  0012               	return		;funcret
  3577  001BC4                     __end_of_color_click_init:
  3578                           	callstack 0
  3579                           
  3580 ;; *************** function _color_writetoaddr *****************
  3581 ;; Defined at:
  3582 ;;		line 31 in file "color.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  address         1    wreg     unsigned char 
  3585 ;;  value           1    3[COMRAM] unsigned char 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  address         1    4[COMRAM] unsigned char 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      void 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0, cstack
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3597 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3601 ;;Total ram usage:        2 bytes
  3602 ;; Hardware stack levels used: 1
  3603 ;; Hardware stack levels required when called: 3
  3604 ;; This function calls:
  3605 ;;		_I2C_2_Master_Start
  3606 ;;		_I2C_2_Master_Stop
  3607 ;;		_I2C_2_Master_Write
  3608 ;; This function is called by:
  3609 ;;		_color_click_init
  3610 ;;		_interrupts_init
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text26
  3615  001C8A                     __ptext26:
  3616                           	callstack 0
  3617  001C8A                     _color_writetoaddr:
  3618                           	callstack 26
  3619                           
  3620                           ;incstack = 0
  3621                           ;color_writetoaddr@address stored from wreg
  3622  001C8A  6E05               	movwf	color_writetoaddr@address^0,c
  3623  001C8C                     
  3624                           ;color.c: 31: void color_writetoaddr(char address, char value);color.c: 32: {;color.c: 3
      +                          3:     I2C_2_Master_Start();
  3625  001C8C  EC77  F00E         	call	_I2C_2_Master_Start	;wreg free
  3626                           
  3627                           ;color.c: 34:     I2C_2_Master_Write(0x52 | 0x00);
  3628  001C90  0E52               	movlw	82
  3629  001C92  EC67  F00E         	call	_I2C_2_Master_Write
  3630                           
  3631                           ;color.c: 35:     I2C_2_Master_Write(0x80 | address);
  3632  001C96  5005               	movf	color_writetoaddr@address^0,w,c
  3633  001C98  0980               	iorlw	128
  3634  001C9A  EC67  F00E         	call	_I2C_2_Master_Write
  3635                           
  3636                           ;color.c: 36:     I2C_2_Master_Write(value);
  3637  001C9E  5004               	movf	color_writetoaddr@value^0,w,c
  3638  001CA0  EC67  F00E         	call	_I2C_2_Master_Write
  3639                           
  3640                           ;color.c: 37:     I2C_2_Master_Stop();
  3641  001CA4  EC72  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3642  001CA8  0012               	return		;funcret
  3643  001CAA                     __end_of_color_writetoaddr:
  3644                           	callstack 0
  3645                           
  3646 ;; *************** function _I2C_2_Master_Write *****************
  3647 ;; Defined at:
  3648 ;;		line 69 in file "i2c.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  data_byte       1    wreg     unsigned char 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  data_byte       1    2[COMRAM] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;Total ram usage:        1 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; Hardware stack levels required when called: 2
  3669 ;; This function calls:
  3670 ;;		_I2C_2_Master_Idle
  3671 ;; This function is called by:
  3672 ;;		_color_writetoaddr
  3673 ;;		_color_read_Red
  3674 ;;		_color_read_Green
  3675 ;;		_color_read_Blue
  3676 ;;		_color_read_Clear
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text27
  3681  001CCE                     __ptext27:
  3682                           	callstack 0
  3683  001CCE                     _I2C_2_Master_Write:
  3684                           	callstack 26
  3685                           
  3686                           ;incstack = 0
  3687                           ;I2C_2_Master_Write@data_byte stored from wreg
  3688  001CCE  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
  3689  001CD0                     
  3690                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  3691  001CD0  EC10  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3692  001CD4                     
  3693                           ;i2c.c: 72:   SSP2BUF = data_byte;
  3694  001CD4  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3695  001CD8  0012               	return		;funcret
  3696  001CDA                     __end_of_I2C_2_Master_Write:
  3697                           	callstack 0
  3698                           
  3699 ;; *************** function _I2C_2_Master_Stop *****************
  3700 ;; Defined at:
  3701 ;;		line 59 in file "i2c.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;Total ram usage:        0 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; Hardware stack levels required when called: 2
  3722 ;; This function calls:
  3723 ;;		_I2C_2_Master_Idle
  3724 ;; This function is called by:
  3725 ;;		_color_writetoaddr
  3726 ;;		_color_read_Red
  3727 ;;		_color_read_Green
  3728 ;;		_color_read_Blue
  3729 ;;		_color_read_Clear
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text28
  3734  001CE4                     __ptext28:
  3735                           	callstack 0
  3736  001CE4                     _I2C_2_Master_Stop:
  3737                           	callstack 26
  3738  001CE4                     
  3739                           ;i2c.c: 61:   I2C_2_Master_Idle();
  3740  001CE4  EC10  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3741  001CE8                     
  3742                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  3743  001CE8  010E               	movlb	14	; () banked
  3744  001CEA  85DA               	bsf	218,2,b	;volatile
  3745  001CEC                     
  3746                           ; BSR set to: 14
  3747  001CEC  0012               	return		;funcret
  3748  001CEE                     __end_of_I2C_2_Master_Stop:
  3749                           	callstack 0
  3750                           
  3751 ;; *************** function _I2C_2_Master_Start *****************
  3752 ;; Defined at:
  3753 ;;		line 39 in file "i2c.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3771 ;;Total ram usage:        0 bytes
  3772 ;; Hardware stack levels used: 1
  3773 ;; Hardware stack levels required when called: 2
  3774 ;; This function calls:
  3775 ;;		_I2C_2_Master_Idle
  3776 ;; This function is called by:
  3777 ;;		_color_writetoaddr
  3778 ;;		_color_read_Red
  3779 ;;		_color_read_Green
  3780 ;;		_color_read_Blue
  3781 ;;		_color_read_Clear
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text29
  3786  001CEE                     __ptext29:
  3787                           	callstack 0
  3788  001CEE                     _I2C_2_Master_Start:
  3789                           	callstack 26
  3790  001CEE                     
  3791                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3792  001CEE  EC10  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3793  001CF2                     
  3794                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  3795  001CF2  010E               	movlb	14	; () banked
  3796  001CF4  81DA               	bsf	218,0,b	;volatile
  3797  001CF6                     
  3798                           ; BSR set to: 14
  3799  001CF6  0012               	return		;funcret
  3800  001CF8                     __end_of_I2C_2_Master_Start:
  3801                           	callstack 0
  3802                           
  3803 ;; *************** function _I2C_2_Master_Idle *****************
  3804 ;; Defined at:
  3805 ;;		line 30 in file "i2c.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;Total ram usage:        1 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; Hardware stack levels required when called: 1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_I2C_2_Master_Start
  3830 ;;		_I2C_2_Master_RepStart
  3831 ;;		_I2C_2_Master_Stop
  3832 ;;		_I2C_2_Master_Write
  3833 ;;		_I2C_2_Master_Read
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text30
  3838  001C20                     __ptext30:
  3839                           	callstack 0
  3840  001C20                     _I2C_2_Master_Idle:
  3841                           	callstack 26
  3842  001C20                     l64:
  3843  001C20  010E               	movlb	14	; () banked
  3844  001C22  B5D8               	btfsc	216,2,b	;volatile
  3845  001C24  EF16  F00E         	goto	u1021
  3846  001C28  EF18  F00E         	goto	u1020
  3847  001C2C                     u1021:
  3848  001C2C  EF10  F00E         	goto	l64
  3849  001C30                     u1020:
  3850  001C30                     
  3851                           ; BSR set to: 14
  3852  001C30  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3853  001C34  0E1F               	movlw	31
  3854  001C36  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
  3855  001C38  A4D8               	btfss	status,2,c
  3856  001C3A  EF21  F00E         	goto	u1031
  3857  001C3E  EF23  F00E         	goto	u1030
  3858  001C42                     u1031:
  3859  001C42  EF10  F00E         	goto	l64
  3860  001C46                     u1030:
  3861  001C46                     
  3862                           ; BSR set to: 14
  3863  001C46  0012               	return		;funcret
  3864  001C48                     __end_of_I2C_2_Master_Idle:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function _I2C_2_Master_Init *****************
  3868 ;; Defined at:
  3869 ;;		line 8 in file "i2c.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_color_click_init
  3894 ;;		_main
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text31
  3899  001BF6                     __ptext31:
  3900                           	callstack 0
  3901  001BF6                     _I2C_2_Master_Init:
  3902                           	callstack 28
  3903  001BF6                     
  3904                           ;i2c.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  3905  001BF6  010E               	movlb	14	; () banked
  3906  001BF8  51D9               	movf	217,w,b	;volatile
  3907  001BFA  0BF0               	andlw	-16
  3908  001BFC  0908               	iorlw	8
  3909  001BFE  6FD9               	movwf	217,b	;volatile
  3910  001C00                     
  3911                           ; BSR set to: 14
  3912                           ;i2c.c: 12:   SSP2CON1bits.SSPEN = 1;
  3913  001C00  8BD9               	bsf	217,5,b	;volatile
  3914                           
  3915                           ;i2c.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  3916  001C02  0E9F               	movlw	159
  3917  001C04  6FD6               	movwf	214,b	;volatile
  3918  001C06                     
  3919                           ; BSR set to: 14
  3920                           ;i2c.c: 16:   TRISDbits.TRISD5 = 1;
  3921  001C06  8A84               	bsf	132,5,c	;volatile
  3922  001C08                     
  3923                           ; BSR set to: 14
  3924                           ;i2c.c: 17:   TRISDbits.TRISD6 = 1;
  3925  001C08  8C84               	bsf	132,6,c	;volatile
  3926  001C0A                     
  3927                           ; BSR set to: 14
  3928                           ;i2c.c: 18:   ANSELDbits.ANSELD5=0;
  3929  001C0A  9BA7               	bcf	167,5,b	;volatile
  3930  001C0C                     
  3931                           ; BSR set to: 14
  3932                           ;i2c.c: 19:   ANSELDbits.ANSELD6=0;
  3933  001C0C  9DA7               	bcf	167,6,b	;volatile
  3934                           
  3935                           ;i2c.c: 20:   SSP2DATPPS=0x1D;
  3936  001C0E  0E1D               	movlw	29
  3937  001C10  6F1D               	movwf	29,b	;volatile
  3938                           
  3939                           ;i2c.c: 21:   SSP2CLKPPS=0x1E;
  3940  001C12  0E1E               	movlw	30
  3941  001C14  6F1C               	movwf	28,b	;volatile
  3942                           
  3943                           ;i2c.c: 22:   RD5PPS=0x1C;
  3944  001C16  0E1C               	movlw	28
  3945  001C18  6F6F               	movwf	111,b	;volatile
  3946                           
  3947                           ;i2c.c: 23:   RD6PPS=0x1B;
  3948  001C1A  0E1B               	movlw	27
  3949  001C1C  6F70               	movwf	112,b	;volatile
  3950  001C1E                     
  3951                           ; BSR set to: 14
  3952  001C1E  0012               	return		;funcret
  3953  001C20                     __end_of_I2C_2_Master_Init:
  3954                           	callstack 0
  3955                           
  3956 ;; *************** function _RGB_init *****************
  3957 ;; Defined at:
  3958 ;;		line 8 in file "RGB_LED.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		None
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; Hardware stack levels required when called: 1
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_main
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text32
  3987  001CC0                     __ptext32:
  3988                           	callstack 0
  3989  001CC0                     _RGB_init:
  3990                           	callstack 29
  3991  001CC0                     
  3992                           ;RGB_LED.c: 9:     TRISGbits.TRISG1 = 0;
  3993  001CC0  9287               	bcf	135,1,c	;volatile
  3994                           
  3995                           ;RGB_LED.c: 10:     TRISAbits.TRISA4 = 0;
  3996  001CC2  9881               	bcf	129,4,c	;volatile
  3997                           
  3998                           ;RGB_LED.c: 11:     TRISFbits.TRISF7 = 0;
  3999  001CC4  9E86               	bcf	134,7,c	;volatile
  4000                           
  4001                           ;RGB_LED.c: 13:     LATGbits.LATG1 = 0;
  4002  001CC6  927F               	bcf	127,1,c	;volatile
  4003                           
  4004                           ;RGB_LED.c: 14:     LATAbits.LATA4 = 0;
  4005  001CC8  9879               	bcf	121,4,c	;volatile
  4006                           
  4007                           ;RGB_LED.c: 15:     LATFbits.LATF7 = 0;
  4008  001CCA  9E7E               	bcf	126,7,c	;volatile
  4009  001CCC  0012               	return		;funcret
  4010  001CCE                     __end_of_RGB_init:
  4011                           	callstack 0
  4012                           
  4013 ;; *************** function _HighISR *****************
  4014 ;; Defined at:
  4015 ;;		line 53 in file "interrupts.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;		None
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      void 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2, status,0
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;Total ram usage:        1 bytes
  4034 ;; Hardware stack levels used: 1
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		Interrupt level 2
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	intcode
  4043  000008                     __pintcode:
  4044                           	callstack 0
  4045  000008                     _HighISR:
  4046                           	callstack 22
  4047                           
  4048                           ;incstack = 0
  4049  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4050  00000A                     
  4051                           ;interrupts.c: 54:     if (PIR0bits.INT1IF) {
  4052  00000A  010E               	movlb	14	; () banked
  4053  00000C  A333               	btfss	51,1,b	;volatile
  4054  00000E  EF0B  F000         	goto	i2u68_41
  4055  000012  EF0D  F000         	goto	i2u68_40
  4056  000016                     i2u68_41:
  4057  000016  EF21  F000         	goto	i2l249
  4058  00001A                     i2u68_40:
  4059  00001A                     
  4060                           ; BSR set to: 14
  4061                           ;interrupts.c: 55:         LATHbits.LATH3 = !LATHbits.LATH3;
  4062  00001A  A680               	btfss	128,3,c	;volatile
  4063  00001C  EF12  F000         	goto	i2u69_41
  4064  000020  EF16  F000         	goto	i2u69_40
  4065  000024                     i2u69_41:
  4066  000024  6A01               	clrf	??_HighISR^0,c
  4067  000026  2A01               	incf	??_HighISR^0,f,c
  4068  000028  EF17  F000         	goto	i2u70_48
  4069  00002C                     i2u69_40:
  4070  00002C  6A01               	clrf	??_HighISR^0,c
  4071  00002E                     i2u70_48:
  4072  00002E  4601               	rlncf	??_HighISR^0,f,c
  4073  000030  4601               	rlncf	??_HighISR^0,f,c
  4074  000032  4601               	rlncf	??_HighISR^0,f,c
  4075  000034  5080               	movf	128,w,c	;volatile
  4076  000036  1801               	xorwf	??_HighISR^0,w,c
  4077  000038  0BF7               	andlw	-9
  4078  00003A  1801               	xorwf	??_HighISR^0,w,c
  4079  00003C  6E80               	movwf	128,c	;volatile
  4080  00003E                     
  4081                           ;interrupts.c: 56:         PIR0bits.INT1IF = 0;
  4082  00003E  010E               	movlb	14	; () banked
  4083  000040  9333               	bcf	51,1,b	;volatile
  4084  000042                     i2l249:
  4085                           
  4086                           ; BSR set to: 14
  4087  000042  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4088  000044  0011               	retfie		f
  4089  000046                     __end_of_HighISR:
  4090                           	callstack 0
  4091                           
  4092                           	psect	rparam
  4093  0000                     
  4094                           	psect	temp
  4095  00005D                     btemp:
  4096                           	callstack 0
  4097  00005D                     	ds	1
  4098  0000                     int$flags	set	btemp
  4099  0000                     wtemp8	set	btemp+1
  4100  0000                     ttemp5	set	btemp+1
  4101  0000                     ttemp6	set	btemp+4
  4102  0000                     ttemp7	set	btemp+8
  4103                           
  4104                           	psect	idloc
  4105                           
  4106                           ;Config register IDLOC0 @ 0x200000
  4107                           ;	unspecified, using default values
  4108  200000                     	org	2097152
  4109  200000  0FFF               	dw	4095
  4110                           
  4111                           ;Config register IDLOC1 @ 0x200002
  4112                           ;	unspecified, using default values
  4113  200002                     	org	2097154
  4114  200002  0FFF               	dw	4095
  4115                           
  4116                           ;Config register IDLOC2 @ 0x200004
  4117                           ;	unspecified, using default values
  4118  200004                     	org	2097156
  4119  200004  0FFF               	dw	4095
  4120                           
  4121                           ;Config register IDLOC3 @ 0x200006
  4122                           ;	unspecified, using default values
  4123  200006                     	org	2097158
  4124  200006  0FFF               	dw	4095
  4125                           
  4126                           ;Config register IDLOC4 @ 0x200008
  4127                           ;	unspecified, using default values
  4128  200008                     	org	2097160
  4129  200008  0FFF               	dw	4095
  4130                           
  4131                           ;Config register IDLOC5 @ 0x20000A
  4132                           ;	unspecified, using default values
  4133  20000A                     	org	2097162
  4134  20000A  0FFF               	dw	4095
  4135                           
  4136                           ;Config register IDLOC6 @ 0x20000C
  4137                           ;	unspecified, using default values
  4138  20000C                     	org	2097164
  4139  20000C  0FFF               	dw	4095
  4140                           
  4141                           ;Config register IDLOC7 @ 0x20000E
  4142                           ;	unspecified, using default values
  4143  20000E                     	org	2097166
  4144  20000E  0FFF               	dw	4095
  4145                           
  4146                           	psect	config
  4147                           
  4148                           ;Config register CONFIG1L @ 0x300000
  4149                           ;	External Oscillator mode Selection bits
  4150                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4151                           ;	Power-up default value for COSC bits
  4152                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4153  300000                     	org	3145728
  4154  300000  AA                 	db	170
  4155                           
  4156                           ;Config register CONFIG1H @ 0x300001
  4157                           ;	unspecified, using default values
  4158                           ;	Clock Out Enable bit
  4159                           ;	CLKOUTEN = 0x1, unprogrammed default
  4160                           ;	Clock Switch Enable bit
  4161                           ;	CSWEN = 0x1, unprogrammed default
  4162                           ;	Fail-Safe Clock Monitor Enable bit
  4163                           ;	FCMEN = 0x1, unprogrammed default
  4164  300001                     	org	3145729
  4165  300001  FF                 	db	255
  4166                           
  4167                           ;Config register CONFIG2L @ 0x300002
  4168                           ;	unspecified, using default values
  4169                           ;	Master Clear Enable bit
  4170                           ;	MCLRE = 0x1, unprogrammed default
  4171                           ;	Power-up Timer Enable bit
  4172                           ;	PWRTE = 0x1, unprogrammed default
  4173                           ;	Low-power BOR enable bit
  4174                           ;	LPBOREN = 0x1, unprogrammed default
  4175                           ;	Brown-out Reset Enable bits
  4176                           ;	BOREN = 0x3, unprogrammed default
  4177  300002                     	org	3145730
  4178  300002  FF                 	db	255
  4179                           
  4180                           ;Config register CONFIG2H @ 0x300003
  4181                           ;	unspecified, using default values
  4182                           ;	Brown Out Reset Voltage selection bits
  4183                           ;	BORV = 0x3, unprogrammed default
  4184                           ;	ZCD Disable bit
  4185                           ;	ZCD = 0x1, unprogrammed default
  4186                           ;	PPSLOCK bit One-Way Set Enable bit
  4187                           ;	PPS1WAY = 0x1, unprogrammed default
  4188                           ;	Stack Full/Underflow Reset Enable bit
  4189                           ;	STVREN = 0x1, unprogrammed default
  4190                           ;	Debugger Enable bit
  4191                           ;	DEBUG = 0x1, unprogrammed default
  4192                           ;	Extended Instruction Set Enable bit
  4193                           ;	XINST = 0x1, unprogrammed default
  4194  300003                     	org	3145731
  4195  300003  FF                 	db	255
  4196                           
  4197                           ;Config register CONFIG3L @ 0x300004
  4198                           ;	WDT Period Select bits
  4199                           ;	WDTCPS = 0x1F, unprogrammed default
  4200                           ;	WDT operating mode
  4201                           ;	WDTE = OFF, WDT Disabled
  4202  300004                     	org	3145732
  4203  300004  9F                 	db	159
  4204                           
  4205                           ;Config register CONFIG3H @ 0x300005
  4206                           ;	unspecified, using default values
  4207                           ;	WDT Window Select bits
  4208                           ;	WDTCWS = 0x7, unprogrammed default
  4209                           ;	WDT input clock selector
  4210                           ;	WDTCCS = 0x7, unprogrammed default
  4211  300005                     	org	3145733
  4212  300005  FF                 	db	255
  4213                           
  4214                           ;Config register CONFIG4L @ 0x300006
  4215                           ;	unspecified, using default values
  4216                           ;	Write Protection Block 0
  4217                           ;	WRT0 = 0x1, unprogrammed default
  4218                           ;	Write Protection Block 1
  4219                           ;	WRT1 = 0x1, unprogrammed default
  4220                           ;	Write Protection Block 2
  4221                           ;	WRT2 = 0x1, unprogrammed default
  4222                           ;	Write Protection Block 3
  4223                           ;	WRT3 = 0x1, unprogrammed default
  4224                           ;	Write Protection Block 3
  4225                           ;	WRT4 = 0x1, unprogrammed default
  4226                           ;	Write Protection Block 3
  4227                           ;	WRT5 = 0x1, unprogrammed default
  4228                           ;	Write Protection Block 3
  4229                           ;	WRT6 = 0x1, unprogrammed default
  4230                           ;	Write Protection Block 3
  4231                           ;	WRT7 = 0x1, unprogrammed default
  4232  300006                     	org	3145734
  4233  300006  FF                 	db	255
  4234                           
  4235                           ;Config register CONFIG4H @ 0x300007
  4236                           ;	unspecified, using default values
  4237                           ;	Configuration Register Write Protection bit
  4238                           ;	WRTC = 0x1, unprogrammed default
  4239                           ;	Boot Block Write Protection bit
  4240                           ;	WRTB = 0x1, unprogrammed default
  4241                           ;	Data EEPROM Write Protection bit
  4242                           ;	WRTD = 0x1, unprogrammed default
  4243                           ;	Scanner Enable bit
  4244                           ;	SCANE = 0x1, unprogrammed default
  4245                           ;	Low Voltage Programming Enable bit
  4246                           ;	LVP = 0x1, unprogrammed default
  4247  300007                     	org	3145735
  4248  300007  FF                 	db	255
  4249                           
  4250                           ;Config register CONFIG5L @ 0x300008
  4251                           ;	unspecified, using default values
  4252                           ;	UserNVM Program Memory Code Protection bit
  4253                           ;	CP = 0x1, unprogrammed default
  4254                           ;	DataNVM Memory Code Protection bit
  4255                           ;	CPD = 0x1, unprogrammed default
  4256  300008                     	org	3145736
  4257  300008  FF                 	db	255
  4258                           
  4259                           ;Config register CONFIG5H @ 0x300009
  4260                           ;	unspecified, using default values
  4261  300009                     	org	3145737
  4262  300009  FF                 	db	255
  4263                           
  4264                           ;Config register CONFIG6L @ 0x30000A
  4265                           ;	unspecified, using default values
  4266                           ;	Table Read Protection Block 0
  4267                           ;	EBTR0 = 0x1, unprogrammed default
  4268                           ;	Table Read Protection Block 1
  4269                           ;	EBTR1 = 0x1, unprogrammed default
  4270                           ;	Table Read Protection Block 2
  4271                           ;	EBTR2 = 0x1, unprogrammed default
  4272                           ;	Table Read Protection Block 3
  4273                           ;	EBTR3 = 0x1, unprogrammed default
  4274                           ;	Table Read Protection Block 4
  4275                           ;	EBTR4 = 0x1, unprogrammed default
  4276                           ;	Table Read Protection Block 5
  4277                           ;	EBTR5 = 0x1, unprogrammed default
  4278                           ;	Table Read Protection Block 6
  4279                           ;	EBTR6 = 0x1, unprogrammed default
  4280                           ;	Table Read Protection Block 7
  4281                           ;	EBTR7 = 0x1, unprogrammed default
  4282  30000A                     	org	3145738
  4283  30000A  FF                 	db	255
  4284                           
  4285                           ;Config register CONFIG6H @ 0x30000B
  4286                           ;	unspecified, using default values
  4287                           ;	Boot Block Table Read Protection bit
  4288                           ;	EBTRB = 0x1, unprogrammed default
  4289  30000B                     	org	3145739
  4290  30000B  FF                 	db	255
  4291                           tosu	equ	0xFFF
  4292                           tosh	equ	0xFFE
  4293                           tosl	equ	0xFFD
  4294                           stkptr	equ	0xFFC
  4295                           pclatu	equ	0xFFB
  4296                           pclath	equ	0xFFA
  4297                           pcl	equ	0xFF9
  4298                           tblptru	equ	0xFF8
  4299                           tblptrh	equ	0xFF7
  4300                           tblptrl	equ	0xFF6
  4301                           tablat	equ	0xFF5
  4302                           prodh	equ	0xFF4
  4303                           prodl	equ	0xFF3
  4304                           indf0	equ	0xFEF
  4305                           postinc0	equ	0xFEE
  4306                           postdec0	equ	0xFED
  4307                           preinc0	equ	0xFEC
  4308                           plusw0	equ	0xFEB
  4309                           fsr0h	equ	0xFEA
  4310                           fsr0l	equ	0xFE9
  4311                           wreg	equ	0xFE8
  4312                           indf1	equ	0xFE7
  4313                           postinc1	equ	0xFE6
  4314                           postdec1	equ	0xFE5
  4315                           preinc1	equ	0xFE4
  4316                           plusw1	equ	0xFE3
  4317                           fsr1h	equ	0xFE2
  4318                           fsr1l	equ	0xFE1
  4319                           bsr	equ	0xFE0
  4320                           indf2	equ	0xFDF
  4321                           postinc2	equ	0xFDE
  4322                           postdec2	equ	0xFDD
  4323                           preinc2	equ	0xFDC
  4324                           plusw2	equ	0xFDB
  4325                           fsr2h	equ	0xFDA
  4326                           fsr2l	equ	0xFD9
  4327                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      92
    BANK0           160     78     138
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2244_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1066DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    S1066DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _read_colour->_color_read_Blue
    _read_colour->_color_read_Clear
    _read_colour->_color_read_Green
    _read_colour->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _interrupts_init->_color_writetoaddr
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0    8943
                                             20 BANK0     58    58      0
                  _I2C_2_Master_Init
                           _RGB_init
                   _color_click_init
                         _initUSART4
                    _interrupts_init
                        _read_colour
                  _sendStringSerial4
                            _sprintf
                           _whiteLED
 ---------------------------------------------------------------------------------
 (1) _whiteLED                                             1     1      0      66
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12    6456
                                              0 BANK0     20     8     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             64 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    3     1      2     219
                                              3 COMRAM     3     1      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      2     0      2      98
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _read_colour                                          8     0      8     623
                                             12 COMRAM     8     0      8
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _interrupts_init                                      0     0      0     598
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     598
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     598
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _RGB_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initUSART4
   _interrupts_init
     _color_writetoaddr
   _read_colour
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _whiteLED

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      8A       5       86.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5C       1       97.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     122       8        0.0%
DATA                 0      0     122       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec  6 14:02:34 2021

                _color_read_Red 189E                 _color_read_Blue 198E                              l22 1CA8  
                            l31 19DC                              l25 18EC                              l34 198C  
                            l19 1BC2                              l28 193C                              l61 1C1E  
                            l70 1CF6                              l64 1C20                              l73 1CE2  
                            l82 1AA6                              l67 1C46                              l76 1CEC  
                            l79 1CD8                              l97 1CCC                _color_read_Clear 193E  
              _color_read_Green 18EE                             l100 1C68                             l331 1C88  
                           l243 1B20                             l340 1CAA                             l342 1CBA  
                           l343 1CBE                             l508 1590                             l349 1B58  
                           l289 1A64                             l495 142C                             u800 15DE  
                           u801 15DA                             u810 1614                             u811 1610  
                           u900 13EC                             u820 1A20                             u901 13E8  
                           u821 1A1C                             u910 1440                             u830 1B82  
                           u911 143C                             u831 1B7E                             u840 12B8  
                           u920 1472                             u841 12B4                             u921 146E  
                           u850 12EA                             u930 14B0                             u851 12E6  
                           u931 14AC                             u940 14DA                             u780 15A4  
                           u861 1314                             u941 14D6                             u781 15A0  
                           u870 1338                             u950 1508                             u790 15B6  
                           u871 1334                             u951 1504                             u791 15B2  
                           u880 1362                             u960 1550                             u881 135E  
                           u961 154C                             u890 13A2                             u970 1734  
                           u891 139E                             u971 1730                             u980 1756  
                           u981 1752                             u990 17AC                             u991 17A8  
                           _abs 1AA8                             _pad 1724                             wreg 000FE8  
                          l2001 1AA4                            l1130 1842                            l2011 1136  
                          l1131 184A                            ?_abs 0014                            l1124 12A4  
                          l2101 1BAE                            l1117 10F0                            l2013 113A  
                          l2005 10F2                            l1150 165A                            l2103 1BB8  
                          l2111 1C74                            l1135 1ADE                            l2023 1202  
                          l2015 115E                            l2007 1116                            l2105 1CC0  
                          l2121 1C86                            l2113 1C76                            l1161 1CF8  
                          l2041 1292                            l2025 1226                            l2033 1254  
                          l2017 1182                            l2009 1124                            l1138 1AE6  
                          l2051 1C06                            l2115 1C78                            l2131 1B1E  
                          l2123 1AE8                            l1091 17E8                            l2035 1262  
                          l2027 1234                            l2019 11CA                            l1059 189C  
                          l2107 1C4A                            l2053 1C08                            l2117 1C82  
                          l2109 1C6A                            l2125 1AF2                            l2061 189E  
                          l2133 1A22                            l2029 1248                            l2141 185E  
                          l1158 1A20                            l1086 176A                            l2055 1C0A  
                          l2047 1BF6                            l2119 1C84                            l2127 1B1A  
                          l2063 18E4                            l2135 1A52                            l2151 1B22  
                          l1167 1B8E                            l2039 126E                            l2143 1866  
                          l2057 1C0C                            l2049 1C00                            l2129 1B1C  
                          l2073 198E                            l2081 1984                            l2153 1B26  
                          l1089 17AC                            l1097 0EB0                            l2145 186E  
                          l2059 1C8C                            l2075 19D4                            l2067 18EE  
                          l2155 1B3C                            l1099 0EB8                            l2091 1800  
                          l2147 188A                            l2139 184C                            l2069 1934  
                          l2085 1CAA                            l2157 1B40                            l2093 1826  
                          l2261 1668                            l2095 1B90                            l2079 193E  
                          l2087 17EA                            l2271 167A                            l2263 166C  
                          l2255 165C                            l2097 1B94                            l2089 17F2  
                          l2281 16B2                            l2273 167C                            l2265 1670  
                          l2257 1660                            l2099 1B9E                            l1811 12DC  
                          l1803 12A6                            l2283 16BA                            l2275 167E  
                          l2267 1672                            l2259 1664                            l1821 1338  
                          l1813 12EA                            l1805 12AA                            l1901 17D0  
                          l2285 16C2                            l2277 16A2                            l2269 1674  
                          l1911 1C30                            l1831 13A2                            l1823 1340  
                          l1815 130A                            l1807 12B8                            l2287 16F8  
                          l2279 16AA                            l1841 13EC                            l1833 13C2  
                          l1825 1354                            l1817 130E                            l1809 12D8  
                          l1905 1AA8                            l1921 0E88                            l1913 0E10  
                          l2289 1704                            l1843 140C                            l1835 13C4  
                          l1827 1362                            l1819 131A                            l1851 1440  
                          l1907 1AC2                            l1771 1592                            l1931 0EE0  
                          l1923 0E8A                            l1915 0E30                            l1909 1C20  
                          l1837 13D6                            l1829 1374                            l1861 14B0  
                          l1853 1460                            l1781 1614                            l1773 15A4  
                          l1941 0F7E                            l1933 0EE6                            l1925 0EA4  
                          l1917 0E58                            l1839 13DC                            l1871 1528  
                          l1863 14B8                            l1855 1464                            l1847 142E  
                          l1775 15B6                            l1791 1A00                            l1951 1026  
                          l1943 0F84                            l1935 0EEE                            l1927 0EC0  
                          l1919 0E78                            l1873 153A                            l1865 14CC  
                          l1857 1472                            l1849 1432                            l1777 15C0  
                          l1785 19DE                            l1793 1B5A                            l1961 108C  
                          l1953 1040                            l1945 0F8A                            l1937 0EF6  
                          l1929 0ED2                            l1867 14DA                            l1875 1540  
                          l1859 1492                            l1779 15DE                            l1787 19EA  
                          l1795 1B66                            l1891 1762                            l1883 1724  
                          l1963 1092                            l1971 10C8                            l1955 105A  
                          l1939 0EFC                            l1947 0FEE                            l1981 1CD4  
                          l1877 1550                            l1869 1508                            l1789 19FC  
                          l1797 1B6A                            l1893 1776                            l1885 1734  
                          l1965 10A4                            l1949 1008                            l1957 106A  
                          ?_pad 0012                            l1975 1CEE                            l1983 1CE4  
                          l1991 1A68                            l1879 1570                            l1799 1B82  
                          l1895 178A                            l1887 1748                            l1967 10B0  
                          l1959 107C                            l1977 1CF2                            l1985 1CE8  
                          l1993 1A6C                            l1897 178E                            l1889 1756  
                          l1969 10B8                            l1979 1CD0                            l1995 1A74  
                          l1987 1CDA                            l1899 17BC                            l1997 1A7C  
                          l1989 1CDE                            l1999 1AA2                            STR_1 0E01  
                          u1000 17BC                            u1001 17B8                            u1010 1AC2  
                          u1011 1ABE                            u1020 1C30                            u1100 0EE0  
                          u1021 1C2C                            u1101 0EDC                            u1030 1C46  
                          u1110 1008                            u1031 1C42                            u1111 1004  
                          u1120 1026                            u1040 0E40                            u1121 1022  
                          u1041 0E3A                            u1130 1040                            u1050 0E42  
                          u1210 1116                            u1131 103C                            u1211 1112  
                          u1140 105A                            u1060 0E58                            u1220 115E  
                          u1301 1A5C                            u1141 1056                            u1061 0E54  
                          u1221 115A                            u1310 1B58                            u1150 106A  
                          u1070 0E88                            u1230 1182                            u1311 1B54  
                          u1151 1066                            u1071 0E84                            u1231 117E  
                          u1208 1A92                            u1160 107C                            u1080 0EA4  
                          u1240 1226                            u1161 1078                            u1081 0EA0  
                          u1241 1222                            u1250 1CBA                            u1170 108C  
                          u1090 0ED2                            u1251 1CB6                            u1171 1088  
                          u1091 0ECE                            u1180 10A4                            u1260 1842  
                          u1181 10A0                            u1261 183E                            u1190 1A90  
                          u1191 1A88                            u1407 1710                    _BAUD4CONbits 000EE9  
                          u1417 1BA4                            u1275 1C52                            u1276 1C54  
                          u1285 1C5C                            u1381 1688                            u1286 1C5E  
                          u1295 1C66                            u1391 169A                            u1296 1C68  
                          _T2PR 000FBC                     main@initial 00A6         __end_of_interrupts_init 1B22  
                          abs@a 0014                            _dbuf 00CA                            _main 165C  
                          _dtoa 0E10                            _prec 00C6                            _nout 00C2  
                          pad@i 0019                            pad@p 0016                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001B                            fsr2l 000FD9                            btemp 005D  
                          start 0046          __end_of_color_read_Red 18EE                 __end_of_HighISR 0046  
                  ___param_bank 000000                           ??_abs 0016                           ??_pad 0018  
               __end_of___aodiv 142E                           ?_main 0001                           ?_dtoa 001D  
               __end_of___aomod 1592                           _ADPCH 000F5F                           i2l249 0042  
                  vfpfcnvrt@fmt 0043         __end_of_sendCharSerial4 1CC0                __end_of_RGB_init 1CCE  
                  ?_read_colour 000D      __end_of_I2C_2_Master_Start 1CF8      __end_of_I2C_2_Master_Write 1CDA  
                         _flags 00C8                           _fputc 1592                           _fputs 19DE  
                         pad@fp 0012                           _width 00C4                           _putch 1CF8  
                         dtoa@d 001F                           dtoa@i 003F                           dtoa@n 0037  
                         dtoa@p 0031                           dtoa@s 0035                           dtoa@w 0033  
                         tablat 000FF5                           plusw0 000FEB                           plusw2 000FDB  
                         ttemp5 005E                           ttemp6 0061                           ttemp7 0065  
                         status 000FD8                           wtemp8 005E                 __end_of_sprintf 189E  
       __end_of_color_read_Blue 19DE           _I2C_2_Master_RepStart 1CDA              read_colour@current 000D  
               ?_color_read_Red 0006                 __initialization 1BC4                    __end_of_main 1724  
                  __end_of_dtoa 10F2                          ??_main 0074                          ??_dtoa 0027  
                 __activetblptr 000001                          ?_fputc 0002                          ?_fputs 000B  
                        _ADRESH 000F64                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i2l1681 000A  
                        i2l1683 001A                          i2l1685 003E                ?_interrupts_init 0001  
                     ??_HighISR 0001        __end_of_color_click_init 1BC4                          _RX4PPS 000E15  
                        _TX4REG 000EE4                    vfprintf@cfmt 0057                       ??___aodiv 0012  
                     ??___aomod 0012                          clear_0 1BCA                          clear_1 1BD6  
                        isa$std 000001                          pad@buf 0014                          dtoa@fp 001D  
                        _strlen 1B5A                          fputc@c 0002                          fputs@c 000F  
                        fputs@i 0010                          fputs@s 000B                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0002                __end_of_whiteLED 1C6A                          putch@c 0001  
              __end_of_vfprintf 184C                       ??_sprintf 0059                      __accesstop 0060  
       __end_of__initialization 1BE4        __end_of_color_read_Clear 198E        __end_of_color_read_Green 193E  
        ?_I2C_2_Master_RepStart 0001                   ___rparam_used 000001                ?_color_read_Blue 0006  
                __pcstackCOMRAM 0001                       ?_RGB_init 0001                   __end_of_fputc 165C  
                 __end_of_fputs 1A22                   __end_of_putch 1CFA                         ??_fputc 0006  
                       ??_fputs 000F            __size_of_read_colour 0044                         ??_putch 0002  
                    __pbssBANK0 00AE                      __pbssBANK1 0100                  whiteLED@on_off 0002  
             _color_writetoaddr 1C8A                    _T2CLKCONbits 000FBF              ?_color_writetoaddr 0004  
                    ??_RGB_init 0002             ??_color_writetoaddr 0005                         ?_strlen 0002  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5              __size_of_vfpfcnvrt 01B4  
                       i2u70_48 002E                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       i2u68_40 001A                         i2u68_41 0016                         i2u69_40 002C  
                       i2u69_41 0024                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
        color_writetoaddr@value 0004                ??_color_read_Red 0008                         _HighISR 0008  
     __end_of_color_writetoaddr 1CAA                       _ADREFbits 000F58              _I2C_2_Master_Start 1CEE  
                    _initUSART4 1C6A              _I2C_2_Master_Write 1CCE                         __Hparam 0000  
                       __Lparam 0000               color_read_Red@tmp 000B         sendStringSerial4@string 0004  
                       ___aodiv 12A6                         ___aomod 142E                       ?_whiteLED 0001  
           ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0051  
                  __psmallconst 0E00                         __pcinit 1BC4                         __ramtop 0E00  
                       __ptext0 165C                         __ptext1 1C48                         __ptext2 184C  
                       __ptext3 17EA                         __ptext4 10F2                         __ptext5 0E10  
                       __ptext6 1724                         __ptext7 1B5A                         __ptext8 19DE  
                       __ptext9 1592                 __size_of_strlen 0036                       _T2CONbits 000FBD  
                  __size_of_abs 0040                    __size_of_pad 00C6                       _T2HLTbits 000FBE  
                 _RxBufWriteCnt 005C                         main@buf 0076                         _sprintf 184C  
          ??_I2C_2_Master_Start 0003            ??_I2C_2_Master_Write 0003            end_of_initialization 1BE4  
                       fputc@fp 0004                         fputs@fp 000D               ?_color_click_init 0001  
            ??_color_click_init 0006               __end_of_vfpfcnvrt 12A6                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                    ??_whiteLED 0002                      ??_vfprintf 0057                         strlen@a 0004  
                       strlen@s 0002                       _TRISAbits 000F81                       _TRISBbits 000F82  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
      color_writetoaddr@address 0005         ??_I2C_2_Master_RepStart 0003               ?_color_read_Clear 0006  
    __size_of_color_writetoaddr 0020                    _EUSART4RXbuf 00AE                    _EUSART4TXbuf 0100  
             ?_color_read_Green 0006                     ?_initUSART4 0001       sendCharSerial4@charToSend 0002  
            ??_color_read_Clear 0008              ??_color_read_Green 0008        __size_of_interrupts_init 003A  
                   vfpfcnvrt@ap 0045                     vfpfcnvrt@fp 0041                     vfpfcnvrt@ll 0049  
             __size_of_RGB_init 000E                  __end_of_strlen 1B90             color_read_Clear@tmp 000B  
           start_initialization 1BC4                     __end_of_abs 1AE8                     __end_of_pad 17EA  
                 _TxBufWriteCnt 005A        __size_of_sendCharSerial4 0016             color_read_Green@tmp 000B  
                   vfprintf@fmt 0053        __size_of_color_read_Blue 0050                        ??_strlen 0004  
                   __pbssCOMRAM 0059             __size_of_initUSART4 0020                   ??_read_colour 0015  
                 __pcstackBANK0 0060                ___aodiv@dividend 0002                        ?_HighISR 0001  
                     _dtoa$2317 002F                       __pintcode 0008                        ?___aodiv 0002  
                      ?___aomod 0002                ___aodiv@quotient 0014               __size_of_whiteLED 0022  
          I2C_2_Master_Read@ack 0004               __size_of_vfprintf 0062               ??_interrupts_init 0006  
          I2C_2_Master_Read@tmp 0005                     __smallconst 0E00               _I2C_2_Master_Idle 1C20  
             _I2C_2_Master_Init 1BF6               _I2C_2_Master_Read 1A66               _I2C_2_Master_Stop 1CE4  
                  _RxBufReadCnt 005B              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001              ?_I2C_2_Master_Stop 0001                        ?_sprintf 0060  
                __size_of_fputc 00CA                  __size_of_fputs 0044                  __size_of_putch 0002  
           __end_of_read_colour 1A66               _sendStringSerial4 1B22             ??_I2C_2_Master_Idle 0002  
           ??_I2C_2_Master_Init 0002             ??_I2C_2_Master_Read 0003                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0003                        _LATCbits 000F7B                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                        _LATGbits 000F7F  
                      _LATHbits 000F80                        _IPR0bits 000E1F                        _PIE0bits 000E29  
            ?_sendStringSerial4 0004                        _PIE4bits 000E2D                        _PIR0bits 000E33  
                      _PIR4bits 000E37               ??_sendCharSerial4 0004                        _RGB_init 1CC0  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0006                        _SSP2STAT 000ED8  
                     _vfpfcnvrt 10F2       __size_of_color_click_init 0034                      _ADCON0bits 000F60  
     __end_of_I2C_2_Master_Idle 1C48       __end_of_I2C_2_Master_Init 1C20       __end_of_I2C_2_Master_Read 1AA8  
     __end_of_I2C_2_Master_Stop 1CEE     I2C_2_Master_Write@data_byte 0003               ??_color_read_Blue 0008  
                  _TxBufReadCnt 0059       __end_of_sendStringSerial4 1B5A     __size_of_I2C_2_Master_Start 000A  
   __size_of_I2C_2_Master_Write 000C  __size_of_I2C_2_Master_RepStart 000A   __end_of_I2C_2_Master_RepStart 1CE4  
            color_read_Blue@tmp 000B                __size_of_HighISR 003E                    ??_initUSART4 0002  
                      __Hrparam 0000                      vfprintf@ap 0055                        __Lrparam 0000  
                    vfprintf@fp 0051                    __Lsmallconst 0E00         __size_of_color_read_Red 0050  
              __size_of___aodiv 0188                __size_of___aomod 0164                      ?_vfpfcnvrt 0041  
               ___aodiv@divisor 000A       __size_of_color_read_Clear 0050       __size_of_color_read_Green 0050  
               ___aodiv@counter 0012                      _ANSELBbits 000E9A                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                      sprintf@fmt 0062                     _read_colour 1A22  
            __end_of_initUSART4 1C8A                        __ptext10 1CF8                        __ptext11 1AA8  
                      __ptext20 198E                        __ptext12 142E                        __ptext21 1CDA  
                      __ptext13 12A6                        __ptext30 1C20                        __ptext22 1A66  
                      __ptext14 1B22                        __ptext31 1BF6                        __ptext23 1AE8  
                      __ptext15 1CAA                        __ptext32 1CC0                        __ptext24 1C6A  
                      __ptext16 1A22                        __ptext25 1B90                        __ptext17 189E  
                      __ptext26 1C8A                        __ptext18 18EE                        __ptext27 1CCE  
                      __ptext19 193E                        __ptext28 1CE4                        __ptext29 1CEE  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA                __size_of_sprintf 0052  
                 __size_of_main 00C8                   __size_of_dtoa 02E2                        isa$xinst 000000  
                    _RC4STAbits 000EE7                        int$flags 005D                        _whiteLED 1C48  
                      _vfprintf 17EA                        main@tmpB 00A2                        main@tmpC 00A4  
                      main@tmpG 00A0                        main@tmpR 009E      __size_of_I2C_2_Master_Idle 0028  
    __size_of_I2C_2_Master_Init 002A      __size_of_I2C_2_Master_Read 0042                ___aomod@dividend 0002  
    __size_of_I2C_2_Master_Stop 000A                      _INTCONbits 000FF2                     _PWM6CONbits 000FA4  
    __size_of_sendStringSerial4 0038                     _PWM7CONbits 000FA1                        intlevel2 0000  
                     sprintf@ap 006C                 _interrupts_init 1AE8                 ___aomod@divisor 000A  
                   ??_vfpfcnvrt 0047                 ___aomod@counter 0012                _color_click_init 1B90  
                      sprintf@f 006E                        sprintf@s 0060                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C                      _TX4STAbits 000EE8                    ___aodiv@sign 0013  
               _sendCharSerial4 1CAA                    ___aomod@sign 0013  
