

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 06 12:14:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 05/05/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F67K40 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     _PIE4bits	set	3629
    83  0000                     _TX4REG	set	3812
    84  0000                     _RC4REG	set	3811
    85  0000                     _PIR4bits	set	3639
    86  0000                     _RC4STAbits	set	3815
    87  0000                     _SP4BRGH	set	3814
    88  0000                     _SP4BRGL	set	3813
    89  0000                     _TX4STAbits	set	3816
    90  0000                     _BAUD4CONbits	set	3817
    91  0000                     _RX4PPS	set	3605
    92  0000                     _RC0PPS	set	3682
    93  0000                     _ANSELFbits	set	3764
    94  0000                     _RC7PPS	set	3689
    95  0000                     _RE2PPS	set	3700
    96  0000                     _SSP2BUF	set	3797
    97  0000                     _SSP2CON2bits	set	3802
    98  0000                     _SSP2CON2	set	3802
    99  0000                     _SSP2STAT	set	3800
   100  0000                     _RD6PPS	set	3696
   101  0000                     _RD5PPS	set	3695
   102  0000                     _SSP2CLKPPS	set	3612
   103  0000                     _SSP2DATPPS	set	3613
   104  0000                     _ANSELDbits	set	3751
   105  0000                     _SSP2ADD	set	3798
   106  0000                     _SSP2CON1bits	set	3801
   107  0000                     _ADPCH	set	3935
   108  0000                     _ADREFbits	set	3928
   109  0000                     _ADRESH	set	3940
   110  0000                     _ADCON0bits	set	3936
   111  0000                     _PWM7CONbits	set	4001
   112  0000                     _PWM6CONbits	set	4004
   113  0000                     _PWM7DCH	set	4000
   114  0000                     _PWM6DCH	set	4003
   115  0000                     _LATCbits	set	3963
   116  0000                     _LATEbits	set	3965
   117  0000                     _TRISCbits	set	3971
   118  0000                     _TRISEbits	set	3973
   119  0000                     _T2PR	set	4028
   120  0000                     _T2CLKCONbits	set	4031
   121  0000                     _T2HLTbits	set	4030
   122  0000                     _T2CONbits	set	4029
   123  0000                     _LATDbits	set	3964
   124  0000                     _LATHbits	set	3968
   125  0000                     _TRISHbits	set	3976
   126  0000                     _LATFbits	set	3966
   127  0000                     _LATAbits	set	3961
   128  0000                     _LATGbits	set	3967
   129  0000                     _TRISFbits	set	3974
   130  0000                     _TRISAbits	set	3969
   131  0000                     _TRISGbits	set	3975
   132  0000                     _TRISDbits	set	3972
   133                           
   134                           	psect	smallconst
   135  000E00                     __psmallconst:
   136                           	callstack 0
   137  000E00  00                 	db	0
   138  000E01                     STR_1:
   139  000E01  25                 	db	37
   140  000E02  69                 	db	105	;'i'
   141  000E03  20                 	db	32
   142  000E04  25                 	db	37
   143  000E05  69                 	db	105	;'i'
   144  000E06  20                 	db	32
   145  000E07  25                 	db	37
   146  000E08  69                 	db	105	;'i'
   147  000E09  20                 	db	32
   148  000E0A  25                 	db	37
   149  000E0B  69                 	db	105	;'i'
   150  000E0C  0A                 	db	10
   151  000E0D  00                 	db	0
   152  000E0E  00                 	db	0	; dummy byte at the end
   153  0000                     
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157  001BD6                     __pcinit:
   158                           	callstack 0
   159  001BD6                     start_initialization:
   160                           	callstack 0
   161  001BD6                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Clear objects allocated to BANK1 (60 bytes)
   165  001BD6  EE01  F000         	lfsr	0,__pbssBANK1
   166  001BDA  0E3C               	movlw	60
   167  001BDC                     clear_0:
   168  001BDC  6AEE               	clrf	postinc0,c
   169  001BDE  06E8               	decf	wreg,f,c
   170  001BE0  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to BANK0 (67 bytes)
   173  001BE2  EE00  F0A6         	lfsr	0,__pbssBANK0
   174  001BE6  0E43               	movlw	67
   175  001BE8                     clear_1:
   176  001BE8  6AEE               	clrf	postinc0,c
   177  001BEA  06E8               	decf	wreg,f,c
   178  001BEC  E1FD               	bnz	clear_1
   179  001BEE                     end_of_initialization:
   180                           	callstack 0
   181  001BEE                     __end_of__initialization:
   182                           	callstack 0
   183  001BEE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   184  001BF0  6EF8               	movwf	tblptru,c
   185  001BF2  0E0E               	movlw	high __Lsmallconst
   186  001BF4  6EF7               	movwf	tblptrh,c
   187  001BF6  0100               	movlb	0
   188  001BF8  EF91  F00B         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	bssBANK0
   191  0000A6                     __pbssBANK0:
   192                           	callstack 0
   193  0000A6                     _EUSART4RXbuf:
   194                           	callstack 0
   195  0000A6                     	ds	20
   196  0000BA                     _nout:
   197                           	callstack 0
   198  0000BA                     	ds	2
   199  0000BC                     _width:
   200                           	callstack 0
   201  0000BC                     	ds	2
   202  0000BE                     _prec:
   203                           	callstack 0
   204  0000BE                     	ds	2
   205  0000C0                     _flags:
   206                           	callstack 0
   207  0000C0                     	ds	2
   208  0000C2                     _time_flag:
   209                           	callstack 0
   210  0000C2                     	ds	1
   211  0000C3                     _sunset_flag:
   212                           	callstack 0
   213  0000C3                     	ds	1
   214  0000C4                     _sunrise_flag:
   215                           	callstack 0
   216  0000C4                     	ds	1
   217  0000C5                     _TxBufReadCnt:
   218                           	callstack 0
   219  0000C5                     	ds	1
   220  0000C6                     _TxBufWriteCnt:
   221                           	callstack 0
   222  0000C6                     	ds	1
   223  0000C7                     _RxBufReadCnt:
   224                           	callstack 0
   225  0000C7                     	ds	1
   226  0000C8                     _RxBufWriteCnt:
   227                           	callstack 0
   228  0000C8                     	ds	1
   229  0000C9                     _dbuf:
   230                           	callstack 0
   231  0000C9                     	ds	32
   232                           
   233                           	psect	bssBANK1
   234  000100                     __pbssBANK1:
   235                           	callstack 0
   236  000100                     _EUSART4TXbuf:
   237                           	callstack 0
   238  000100                     	ds	60
   239                           
   240                           	psect	cstackBANK0
   241  000060                     __pcstackBANK0:
   242                           	callstack 0
   243  000060                     ?_sprintf:
   244                           	callstack 0
   245  000060                     sprintf@s:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x0
   249  000060                     	ds	2
   250  000062                     sprintf@fmt:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x2
   254  000062                     	ds	10
   255  00006C                     ??_main:
   256                           
   257                           ; 1 bytes @ 0xC
   258  00006C                     	ds	2
   259  00006E                     main@buf:
   260                           	callstack 0
   261                           
   262                           ; 40 bytes @ 0xE
   263  00006E                     	ds	40
   264  000096                     main@tmpR:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x36
   268  000096                     	ds	2
   269  000098                     main@tmpG:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x38
   273  000098                     	ds	2
   274  00009A                     main@tmpB:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x3A
   278  00009A                     	ds	2
   279  00009C                     main@tmpC:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x3C
   283  00009C                     	ds	2
   284  00009E                     main@initial:
   285                           	callstack 0
   286                           
   287                           ; 8 bytes @ 0x3E
   288  00009E                     	ds	8
   289                           
   290                           	psect	cstackCOMRAM
   291  000001                     __pcstackCOMRAM:
   292                           	callstack 0
   293  000001                     ??_I2C_2_Master_Idle:
   294  000001                     ?_strlen:
   295                           	callstack 0
   296  000001                     ?___aodiv:
   297                           	callstack 0
   298  000001                     ?___aomod:
   299                           	callstack 0
   300  000001                     whiteLED@on_off:
   301                           	callstack 0
   302  000001                     sendCharSerial4@charToSend:
   303                           	callstack 0
   304  000001                     fputc@c:
   305                           	callstack 0
   306  000001                     strlen@s:
   307                           	callstack 0
   308  000001                     ___aodiv@dividend:
   309                           	callstack 0
   310  000001                     ___aomod@dividend:
   311                           	callstack 0
   312                           
   313                           ; 8 bytes @ 0x0
   314  000001                     	ds	1
   315  000002                     ??_I2C_2_Master_Read:
   316  000002                     I2C_2_Master_Write@data_byte:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x1
   320  000002                     	ds	1
   321  000003                     color_writetoaddr@value:
   322                           	callstack 0
   323  000003                     I2C_2_Master_Read@ack:
   324                           	callstack 0
   325  000003                     sendStringSerial4@string:
   326                           	callstack 0
   327  000003                     fputc@fp:
   328                           	callstack 0
   329  000003                     strlen@a:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x2
   333  000003                     	ds	1
   334  000004                     color_writetoaddr@address:
   335                           	callstack 0
   336  000004                     I2C_2_Master_Read@tmp:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x3
   340  000004                     	ds	1
   341  000005                     ??_sendStringSerial4:
   342  000005                     ??_fputc:
   343  000005                     ??_color_click_init:
   344  000005                     ?_color_read_Red:
   345                           	callstack 0
   346  000005                     ?_color_read_Green:
   347                           	callstack 0
   348  000005                     ?_color_read_Blue:
   349                           	callstack 0
   350  000005                     ?_color_read_Clear:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x4
   354  000005                     	ds	2
   355  000007                     ??_color_read_Red:
   356  000007                     ??_color_read_Green:
   357  000007                     ??_color_read_Blue:
   358  000007                     ??_color_read_Clear:
   359                           
   360                           ; 1 bytes @ 0x6
   361  000007                     	ds	2
   362  000009                     ___aodiv@divisor:
   363                           	callstack 0
   364  000009                     ___aomod@divisor:
   365                           	callstack 0
   366                           
   367                           ; 8 bytes @ 0x8
   368  000009                     	ds	1
   369  00000A                     color_read_Red@tmp:
   370                           	callstack 0
   371  00000A                     color_read_Green@tmp:
   372                           	callstack 0
   373  00000A                     color_read_Blue@tmp:
   374                           	callstack 0
   375  00000A                     color_read_Clear@tmp:
   376                           	callstack 0
   377  00000A                     fputs@s:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x9
   381  00000A                     	ds	2
   382  00000C                     ?_read_colour:
   383                           	callstack 0
   384  00000C                     fputs@fp:
   385                           	callstack 0
   386  00000C                     read_colour@current:
   387                           	callstack 0
   388                           
   389                           ; 8 bytes @ 0xB
   390  00000C                     	ds	2
   391  00000E                     fputs@c:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0xD
   395  00000E                     	ds	1
   396  00000F                     fputs@i:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0xE
   400  00000F                     	ds	2
   401  000011                     ?_pad:
   402                           	callstack 0
   403  000011                     ___aodiv@counter:
   404                           	callstack 0
   405  000011                     ___aomod@counter:
   406                           	callstack 0
   407  000011                     pad@fp:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x10
   411  000011                     	ds	1
   412  000012                     ___aodiv@sign:
   413                           	callstack 0
   414  000012                     ___aomod@sign:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x11
   418  000012                     	ds	1
   419  000013                     ?_abs:
   420                           	callstack 0
   421  000013                     pad@buf:
   422                           	callstack 0
   423  000013                     abs@a:
   424                           	callstack 0
   425  000013                     ___aodiv@quotient:
   426                           	callstack 0
   427                           
   428                           ; 8 bytes @ 0x12
   429  000013                     	ds	1
   430  000014                     
   431                           ; 1 bytes @ 0x13
   432  000014                     	ds	1
   433  000015                     ??_abs:
   434  000015                     pad@p:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x14
   438  000015                     	ds	2
   439  000017                     ??_pad:
   440                           
   441                           ; 1 bytes @ 0x16
   442  000017                     	ds	1
   443  000018                     pad@i:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x17
   447  000018                     	ds	2
   448  00001A                     pad@w:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x19
   452  00001A                     	ds	2
   453  00001C                     ?_dtoa:
   454                           	callstack 0
   455  00001C                     dtoa@fp:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x1B
   459  00001C                     	ds	2
   460  00001E                     dtoa@d:
   461                           	callstack 0
   462                           
   463                           ; 8 bytes @ 0x1D
   464  00001E                     	ds	8
   465  000026                     ??_dtoa:
   466                           
   467                           ; 1 bytes @ 0x25
   468  000026                     	ds	8
   469  00002E                     _dtoa$2102:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x2D
   473  00002E                     	ds	2
   474  000030                     dtoa@p:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x2F
   478  000030                     	ds	2
   479  000032                     dtoa@w:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x31
   483  000032                     	ds	2
   484  000034                     dtoa@s:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x33
   488  000034                     	ds	2
   489  000036                     dtoa@n:
   490                           	callstack 0
   491                           
   492                           ; 8 bytes @ 0x35
   493  000036                     	ds	8
   494  00003E                     dtoa@i:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x3D
   498  00003E                     	ds	2
   499  000040                     ?_vfpfcnvrt:
   500                           	callstack 0
   501  000040                     vfpfcnvrt@fp:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x3F
   505  000040                     	ds	2
   506  000042                     vfpfcnvrt@fmt:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x41
   510  000042                     	ds	2
   511  000044                     vfpfcnvrt@ap:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x43
   515  000044                     	ds	2
   516  000046                     ??_vfpfcnvrt:
   517                           
   518                           ; 1 bytes @ 0x45
   519  000046                     	ds	2
   520  000048                     vfpfcnvrt@ll:
   521                           	callstack 0
   522                           
   523                           ; 8 bytes @ 0x47
   524  000048                     	ds	8
   525  000050                     ?_vfprintf:
   526                           	callstack 0
   527  000050                     vfprintf@fp:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x4F
   531  000050                     	ds	2
   532  000052                     vfprintf@fmt:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x51
   536  000052                     	ds	2
   537  000054                     vfprintf@ap:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x53
   541  000054                     	ds	2
   542  000056                     vfprintf@cfmt:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x55
   546  000056                     	ds	2
   547  000058                     sprintf@ap:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x57
   551  000058                     	ds	2
   552  00005A                     sprintf@f:
   553                           	callstack 0
   554                           
   555                           ; 6 bytes @ 0x59
   556  00005A                     	ds	6
   557                           
   558 ;;
   559 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   560 ;;
   561 ;; *************** function _main *****************
   562 ;; Defined at:
   563 ;;		line 39 in file "main.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  buf            40   14[BANK0 ] unsigned char [40]
   568 ;;  tmpC            2   60[BANK0 ] unsigned int 
   569 ;;  tmpB            2   58[BANK0 ] unsigned int 
   570 ;;  tmpG            2   56[BANK0 ] unsigned int 
   571 ;;  tmpR            2   54[BANK0 ] unsigned int 
   572 ;;  initial         8   62[BANK0 ] struct .
   573 ;;  current         8    0        struct .
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   584 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   585 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   586 ;;      Totals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   587 ;;Total ram usage:       58 bytes
   588 ;; Hardware stack levels required when called: 8
   589 ;; This function calls:
   590 ;;		_I2C_2_Master_Init
   591 ;;		_RGB_init
   592 ;;		_color_click_init
   593 ;;		_initUSART4
   594 ;;		_read_colour
   595 ;;		_sendStringSerial4
   596 ;;		_sprintf
   597 ;;		_whiteLED
   598 ;; This function is called by:
   599 ;;		Startup code after reset
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text0
   604  001722                     __ptext0:
   605                           	callstack 0
   606  001722                     _main:
   607                           	callstack 23
   608  001722                     
   609                           ;main.c: 41:     I2C_2_Master_Init();
   610  001722  ECC2  F00D         	call	_I2C_2_Master_Init	;wreg free
   611  001726                     
   612                           ;main.c: 42:     color_click_init();
   613  001726  ECA8  F00D         	call	_color_click_init	;wreg free
   614  00172A                     
   615                           ;main.c: 43:     RGB_init();
   616  00172A  EC3A  F00E         	call	_RGB_init	;wreg free
   617  00172E                     
   618                           ;main.c: 44:     initUSART4();
   619  00172E  EC0F  F00E         	call	_initUSART4	;wreg free
   620  001732                     
   621                           ;main.c: 47:     TRISHbits.TRISH3 = 0;
   622  001732  9688               	bcf	136,3,c	;volatile
   623  001734                     
   624                           ;main.c: 48:     LATHbits.LATH3 = 0;
   625  001734  9680               	bcf	128,3,c	;volatile
   626  001736                     
   627                           ;main.c: 52:     whiteLED(1);
   628  001736  0E01               	movlw	1
   629  001738  ECFE  F00D         	call	_whiteLED
   630  00173C                     
   631                           ;main.c: 53:     TRISDbits.TRISD3 = 0;
   632  00173C  9684               	bcf	132,3,c	;volatile
   633  00173E                     
   634                           ;main.c: 54:     LATDbits.LATD3 = 1;
   635  00173E  867C               	bsf	124,3,c	;volatile
   636  001740                     l2132:
   637                           
   638                           ;main.c: 64:         initial = read_colour(initial);
   639  001740  EE20  F09E         	lfsr	2,main@initial
   640  001744  EE00  F00C         	lfsr	0,read_colour@current
   641  001748  0E07               	movlw	7
   642  00174A                     u1311:
   643  00174A  CFDB FFEB          	movff	plusw2,plusw0
   644  00174E  06E8               	decf	wreg,f,c
   645  001750  E2FC               	bc	u1311
   646  001752  EC0E  F00D         	call	_read_colour	;wreg free
   647  001756  EE20  F09E         	lfsr	2,main@initial
   648  00175A  0E07               	movlw	7
   649  00175C                     u1321:
   650  00175C  CFEB FFDB          	movff	plusw0,plusw2
   651  001760  06E8               	decf	wreg,f,c
   652  001762  E2FC               	bc	u1321
   653  001764                     
   654                           ;main.c: 66:         char buf[40];;main.c: 67:         unsigned int tmpR = initial.R;
   655  001764  C09E  F096         	movff	main@initial,main@tmpR
   656  001768  C09F  F097         	movff	main@initial+1,main@tmpR+1
   657  00176C                     
   658                           ;main.c: 68:         unsigned int tmpG = initial.G;
   659  00176C  C0A0  F098         	movff	main@initial+2,main@tmpG
   660  001770  C0A1  F099         	movff	main@initial+3,main@tmpG+1
   661  001774                     
   662                           ;main.c: 69:         unsigned int tmpB = initial.B;
   663  001774  C0A2  F09A         	movff	main@initial+4,main@tmpB
   664  001778  C0A3  F09B         	movff	main@initial+5,main@tmpB+1
   665  00177C                     
   666                           ;main.c: 70:         unsigned int tmpC = initial.C;
   667  00177C  C0A4  F09C         	movff	main@initial+6,main@tmpC
   668  001780  C0A5  F09D         	movff	main@initial+7,main@tmpC+1
   669  001784                     
   670                           ;main.c: 71:         sprintf(buf,"%i %i %i %i\n",tmpR,tmpG,tmpB,tmpC);
   671  001784  0E6E               	movlw	low main@buf
   672  001786  0100               	movlb	0	; () banked
   673  001788  6F60               	movwf	sprintf@s& (0+255),b
   674  00178A  0E00               	movlw	high main@buf
   675  00178C  6F61               	movwf	(sprintf@s+1)& (0+255),b
   676  00178E  0E01               	movlw	low STR_1
   677  001790  6F62               	movwf	sprintf@fmt& (0+255),b
   678  001792  0E0E               	movlw	high STR_1
   679  001794  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   680  001796  C096  F064         	movff	main@tmpR,?_sprintf+4
   681  00179A  C097  F065         	movff	main@tmpR+1,?_sprintf+5
   682  00179E  C098  F066         	movff	main@tmpG,?_sprintf+6
   683  0017A2  C099  F067         	movff	main@tmpG+1,?_sprintf+7
   684  0017A6  C09A  F068         	movff	main@tmpB,?_sprintf+8
   685  0017AA  C09B  F069         	movff	main@tmpB+1,?_sprintf+9
   686  0017AE  C09C  F06A         	movff	main@tmpC,?_sprintf+10
   687  0017B2  C09D  F06B         	movff	main@tmpC+1,?_sprintf+11
   688  0017B6  EC24  F00C         	call	_sprintf	;wreg free
   689  0017BA                     
   690                           ;main.c: 72:         sendStringSerial4(buf);
   691  0017BA  0E6E               	movlw	low main@buf
   692  0017BC  6E03               	movwf	sendStringSerial4@string^0,c
   693  0017BE  0E00               	movlw	high main@buf
   694  0017C0  6E04               	movwf	(sendStringSerial4@string+1)^0,c
   695  0017C2  EC71  F00D         	call	_sendStringSerial4	;wreg free
   696  0017C6                     
   697                           ;main.c: 73:         _delay((unsigned long)((500)*(64000000/4000.0)));
   698  0017C6  0E29               	movlw	41
   699  0017C8  0100               	movlb	0	; () banked
   700  0017CA  6F6D               	movwf	(??_main+1)& (0+255),b
   701  0017CC  0E96               	movlw	150
   702  0017CE  6F6C               	movwf	??_main& (0+255),b
   703  0017D0  0E7F               	movlw	127
   704  0017D2                     u1387:
   705  0017D2  2EE8               	decfsz	wreg,f,c
   706  0017D4  D7FE               	bra	u1387
   707  0017D6  2F6C               	decfsz	??_main& (0+255),f,b
   708  0017D8  D7FC               	bra	u1387
   709  0017DA  2F6D               	decfsz	(??_main+1)& (0+255),f,b
   710  0017DC  D7FA               	bra	u1387
   711  0017DE  EFA0  F00B         	goto	l2132
   712  0017E2  EF00  F000         	goto	start
   713  0017E6                     __end_of_main:
   714                           	callstack 0
   715                           
   716 ;; *************** function _whiteLED *****************
   717 ;; Defined at:
   718 ;;		line 18 in file "RGB_LED.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  on_off          1    wreg     unsigned char 
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  on_off          1    0[COMRAM] unsigned char 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   736 ;;Total ram usage:        1 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text1
   746  001BFC                     __ptext1:
   747                           	callstack 0
   748  001BFC                     _whiteLED:
   749                           	callstack 30
   750                           
   751                           ;incstack = 0
   752                           ;whiteLED@on_off stored from wreg
   753  001BFC  6E01               	movwf	whiteLED@on_off^0,c
   754  001BFE                     
   755                           ;RGB_LED.c: 19:     LATGbits.LATG1 = on_off;
   756  001BFE  B001               	btfsc	whiteLED@on_off^0,0,c
   757  001C00  D002               	bra	u1245
   758  001C02  927F               	bcf	127,1,c	;volatile
   759  001C04  D001               	bra	u1246
   760  001C06                     u1245:
   761  001C06  827F               	bsf	127,1,c	;volatile
   762  001C08                     u1246:
   763                           
   764                           ;RGB_LED.c: 20:     LATAbits.LATA4 = on_off;
   765  001C08  B001               	btfsc	whiteLED@on_off^0,0,c
   766  001C0A  D002               	bra	u1255
   767  001C0C  9879               	bcf	121,4,c	;volatile
   768  001C0E  D001               	bra	u1256
   769  001C10                     u1255:
   770  001C10  8879               	bsf	121,4,c	;volatile
   771  001C12                     u1256:
   772                           
   773                           ;RGB_LED.c: 21:     LATFbits.LATF7 = on_off;
   774  001C12  B001               	btfsc	whiteLED@on_off^0,0,c
   775  001C14  D002               	bra	u1265
   776  001C16  9E7E               	bcf	126,7,c	;volatile
   777  001C18  D001               	bra	u1266
   778  001C1A                     u1265:
   779  001C1A  8E7E               	bsf	126,7,c	;volatile
   780  001C1C                     u1266:
   781  001C1C  0012               	return		;funcret
   782  001C1E                     __end_of_whiteLED:
   783                           	callstack 0
   784                           
   785 ;; *************** function _sprintf *****************
   786 ;; Defined at:
   787 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  s               2    0[BANK0 ] PTR unsigned char 
   790 ;;		 -> main@buf(40), 
   791 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   792 ;;		 -> STR_1(13), 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  f               6   89[COMRAM] struct _IO_FILE
   795 ;;  ap              2   87[COMRAM] PTR void [1]
   796 ;;		 -> ?_sprintf(2), 
   797 ;;  ret             2    0        int 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  2    0[BANK0 ] int 
   800 ;; Registers used:
   801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   807 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   808 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   810 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   811 ;;Total ram usage:       20 bytes
   812 ;; Hardware stack levels used: 1
   813 ;; Hardware stack levels required when called: 7
   814 ;; This function calls:
   815 ;;		_vfprintf
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text2
   822  001848                     __ptext2:
   823                           	callstack 0
   824  001848                     _sprintf:
   825                           	callstack 23
   826  001848  0E64               	movlw	low (?_sprintf+4)
   827  00184A  6E58               	movwf	sprintf@ap^0,c
   828  00184C  0E00               	movlw	high (?_sprintf+4)
   829  00184E  6E59               	movwf	(sprintf@ap+1)^0,c
   830  001850  C060  F05A         	movff	sprintf@s,sprintf@f
   831  001854  C061  F05B         	movff	sprintf@s+1,sprintf@f+1
   832  001858  0E00               	movlw	0
   833  00185A  6E5D               	movwf	(sprintf@f+3)^0,c
   834  00185C  0E00               	movlw	0
   835  00185E  6E5C               	movwf	(sprintf@f+2)^0,c
   836  001860  0E00               	movlw	0
   837  001862  6E5F               	movwf	(sprintf@f+5)^0,c
   838  001864  0E00               	movlw	0
   839  001866  6E5E               	movwf	(sprintf@f+4)^0,c
   840  001868  0E5A               	movlw	low sprintf@f
   841  00186A  6E50               	movwf	vfprintf@fp^0,c
   842  00186C  0E00               	movlw	high sprintf@f
   843  00186E  6E51               	movwf	(vfprintf@fp+1)^0,c
   844  001870  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
   845  001874  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   846  001878  0E58               	movlw	low sprintf@ap
   847  00187A  6E54               	movwf	vfprintf@ap^0,c
   848  00187C  0E00               	movlw	high sprintf@ap
   849  00187E  6E55               	movwf	(vfprintf@ap+1)^0,c
   850  001880  ECF3  F00B         	call	_vfprintf	;wreg free
   851  001884  505C               	movf	(sprintf@f+2)^0,w,c
   852  001886  0100               	movlb	0	; () banked
   853  001888  2560               	addwf	sprintf@s& (0+255),w,b
   854  00188A  6ED9               	movwf	fsr2l,c
   855  00188C  505D               	movf	(sprintf@f+3)^0,w,c
   856  00188E  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
   857  001890  6EDA               	movwf	fsr2h,c
   858  001892  0E00               	movlw	0
   859  001894  6EDF               	movwf	indf2,c
   860  001896                     
   861                           ; BSR set to: 0
   862  001896  0012               	return		;funcret
   863  001898                     __end_of_sprintf:
   864                           	callstack 0
   865                           
   866 ;; *************** function _vfprintf *****************
   867 ;; Defined at:
   868 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   871 ;;		 -> sprintf@f(6), 
   872 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   873 ;;		 -> STR_1(13), 
   874 ;;  ap              2   83[COMRAM] PTR PTR void 
   875 ;;		 -> sprintf@ap(2), 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   878 ;;		 -> STR_1(13), 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  2   79[COMRAM] int 
   881 ;; Registers used:
   882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   888 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   889 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   891 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   892 ;;Total ram usage:        8 bytes
   893 ;; Hardware stack levels used: 1
   894 ;; Hardware stack levels required when called: 6
   895 ;; This function calls:
   896 ;;		_vfpfcnvrt
   897 ;; This function is called by:
   898 ;;		_sprintf
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text3
   903  0017E6                     __ptext3:
   904                           	callstack 0
   905  0017E6                     _vfprintf:
   906                           	callstack 23
   907  0017E6                     
   908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   909  0017E6  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   910  0017EA  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   911  0017EE                     
   912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   913  0017EE  0E00               	movlw	0
   914  0017F0  0100               	movlb	0	; () banked
   915  0017F2  6FBB               	movwf	(_nout+1)& (0+255),b
   916  0017F4  0E00               	movlw	0
   917  0017F6  6FBA               	movwf	_nout& (0+255),b
   918                           
   919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   920  0017F8  EF11  F00C         	goto	l2054
   921  0017FC                     l2052:
   922                           
   923                           ; BSR set to: 0
   924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   925  0017FC  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   926  001800  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   927  001804  0E56               	movlw	low vfprintf@cfmt
   928  001806  6E42               	movwf	vfpfcnvrt@fmt^0,c
   929  001808  0E00               	movlw	high vfprintf@cfmt
   930  00180A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   931  00180C  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   932  001810  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   933  001814  EC79  F008         	call	_vfpfcnvrt	;wreg free
   934  001818  5040               	movf	?_vfpfcnvrt^0,w,c
   935  00181A  0100               	movlb	0	; () banked
   936  00181C  27BA               	addwf	_nout& (0+255),f,b
   937  00181E  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   938  001820  23BB               	addwfc	(_nout+1)& (0+255),f,b
   939  001822                     l2054:
   940                           
   941                           ; BSR set to: 0
   942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   943  001822  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   944  001826  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   945  00182A                     	if	0	;tblptru may be non-zero
   946  00182A                     	endif
   947  00182A                     	if	0	;tblptru may be non-zero
   948  00182A                     	endif
   949  00182A  0008               	tblrd		*
   950  00182C  50F5               	movf	tablat,w,c
   951  00182E  0900               	iorlw	0
   952  001830  A4D8               	btfss	status,2,c
   953  001832  EF1D  F00C         	goto	u1231
   954  001836  EF1F  F00C         	goto	u1230
   955  00183A                     u1231:
   956  00183A  EFFE  F00B         	goto	l2052
   957  00183E                     u1230:
   958  00183E                     
   959                           ; BSR set to: 0
   960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   961  00183E  C0BA  F050         	movff	_nout,?_vfprintf
   962  001842  C0BB  F051         	movff	_nout+1,?_vfprintf+1
   963  001846                     
   964                           ; BSR set to: 0
   965  001846  0012               	return		;funcret
   966  001848                     __end_of_vfprintf:
   967                           	callstack 0
   968                           
   969 ;; *************** function _vfpfcnvrt *****************
   970 ;; Defined at:
   971 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
   974 ;;		 -> sprintf@f(6), 
   975 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
   976 ;;		 -> vfprintf@cfmt(2), 
   977 ;;  ap              2   67[COMRAM] PTR PTR void 
   978 ;;		 -> sprintf@ap(2), 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  ll              8   71[COMRAM] long long 
   981 ;;  llu             8    0        unsigned long long 
   982 ;;  f               4    0        unsigned long long 
   983 ;;  vp              3    0        PTR void 
   984 ;;  ct              3    0        unsigned char [3]
   985 ;;  cp              3    0        PTR unsigned char 
   986 ;;  i               2    0        int 
   987 ;;  done            2    0        int 
   988 ;;  c               1    0        unsigned char 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  2   63[COMRAM] int 
   991 ;; Registers used:
   992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   998 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   999 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1000 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1001 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1002 ;;Total ram usage:       16 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; Hardware stack levels required when called: 5
  1005 ;; This function calls:
  1006 ;;		_dtoa
  1007 ;;		_fputc
  1008 ;; This function is called by:
  1009 ;;		_vfprintf
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text4
  1014  0010F2                     __ptext4:
  1015                           	callstack 0
  1016  0010F2                     _vfpfcnvrt:
  1017                           	callstack 23
  1018  0010F2                     
  1019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1020  0010F2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1021  0010F6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1022  0010FA  CFDE FFF6          	movff	postinc2,tblptrl
  1023  0010FE  CFDD FFF7          	movff	postdec2,tblptrh
  1024  001102                     	if	0	;tblptru may be non-zero
  1025  001102                     	endif
  1026  001102                     	if	0	;tblptru may be non-zero
  1027  001102                     	endif
  1028  001102  0008               	tblrd		*
  1029  001104  50F5               	movf	tablat,w,c
  1030  001106  0A25               	xorlw	37
  1031  001108  A4D8               	btfss	status,2,c
  1032  00110A  EF89  F008         	goto	u1181
  1033  00110E  EF8B  F008         	goto	u1180
  1034  001112                     u1181:
  1035  001112  EF37  F009         	goto	l2000
  1036  001116                     u1180:
  1037  001116                     
  1038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1039  001116  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1040  00111A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1041  00111E  2ADE               	incf	postinc2,f,c
  1042  001120  0E00               	movlw	0
  1043  001122  22DD               	addwfc	postdec2,f,c
  1044  001124                     
  1045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1046  001124  0E00               	movlw	0
  1047  001126  0100               	movlb	0	; () banked
  1048  001128  6FBD               	movwf	(_width+1)& (0+255),b
  1049  00112A  0E00               	movlw	0
  1050  00112C  6FBC               	movwf	_width& (0+255),b
  1051  00112E  C0BC  F0C0         	movff	_width,_flags
  1052  001132  C0BD  F0C1         	movff	_width+1,_flags+1
  1053  001136                     
  1054                           ; BSR set to: 0
  1055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1056  001136  69BE               	setf	_prec& (0+255),b
  1057  001138  69BF               	setf	(_prec+1)& (0+255),b
  1058  00113A                     
  1059                           ; BSR set to: 0
  1060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1061  00113A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1062  00113E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1063  001142  CFDE FFF6          	movff	postinc2,tblptrl
  1064  001146  CFDD FFF7          	movff	postdec2,tblptrh
  1065  00114A                     	if	0	;tblptru may be non-zero
  1066  00114A                     	endif
  1067  00114A                     	if	0	;tblptru may be non-zero
  1068  00114A                     	endif
  1069  00114A  0008               	tblrd		*
  1070  00114C  50F5               	movf	tablat,w,c
  1071  00114E  0A64               	xorlw	100
  1072  001150  B4D8               	btfsc	status,2,c
  1073  001152  EFAD  F008         	goto	u1191
  1074  001156  EFAF  F008         	goto	u1190
  1075  00115A                     u1191:
  1076  00115A  EFC1  F008         	goto	l1978
  1077  00115E                     u1190:
  1078  00115E                     
  1079                           ; BSR set to: 0
  1080  00115E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1081  001162  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1082  001166  CFDE FFF6          	movff	postinc2,tblptrl
  1083  00116A  CFDD FFF7          	movff	postdec2,tblptrh
  1084  00116E                     	if	0	;tblptru may be non-zero
  1085  00116E                     	endif
  1086  00116E                     	if	0	;tblptru may be non-zero
  1087  00116E                     	endif
  1088  00116E  0008               	tblrd		*
  1089  001170  50F5               	movf	tablat,w,c
  1090  001172  0A69               	xorlw	105
  1091  001174  A4D8               	btfss	status,2,c
  1092  001176  EFBF  F008         	goto	u1201
  1093  00117A  EFC1  F008         	goto	u1200
  1094  00117E                     u1201:
  1095  00117E  EF01  F009         	goto	l1984
  1096  001182                     u1200:
  1097  001182                     l1978:
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1101  001182  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1102  001186  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1103  00118A  2ADE               	incf	postinc2,f,c
  1104  00118C  0E00               	movlw	0
  1105  00118E  22DD               	addwfc	postdec2,f,c
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1108  001190  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1109  001194  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1110  001198  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1111  00119C  0E02               	movlw	2
  1112  00119E  26DE               	addwf	postinc2,f,c
  1113  0011A0  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1114  0011A4  0E00               	movlw	0
  1115  0011A6  22DD               	addwfc	postdec2,f,c
  1116  0011A8  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1117  0011AC  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1118  0011B0  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1119  0011B4  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1120  0011B8  0E00               	movlw	0
  1121  0011BA  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1122  0011BC  0EFF               	movlw	-1
  1123  0011BE  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1124  0011C0  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1125  0011C2  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1126  0011C4  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1127  0011C6  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1128  0011C8  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1129  0011CA                     
  1130                           ; BSR set to: 0
  1131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1132  0011CA  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1133  0011CE  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1134  0011D2  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1135  0011D6  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1136  0011DA  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1137  0011DE  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1138  0011E2  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1139  0011E6  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1140  0011EA  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1141  0011EE  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1142  0011F2  EC08  F007         	call	_dtoa	;wreg free
  1143  0011F6  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1144  0011FA  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1145  0011FE  EF52  F009         	goto	l1103
  1146  001202                     l1984:
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1150  001202  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1151  001206  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1152  00120A  CFDE FFF6          	movff	postinc2,tblptrl
  1153  00120E  CFDD FFF7          	movff	postdec2,tblptrh
  1154  001212                     	if	0	;tblptru may be non-zero
  1155  001212                     	endif
  1156  001212                     	if	0	;tblptru may be non-zero
  1157  001212                     	endif
  1158  001212  0008               	tblrd		*
  1159  001214  50F5               	movf	tablat,w,c
  1160  001216  0A25               	xorlw	37
  1161  001218  A4D8               	btfss	status,2,c
  1162  00121A  EF11  F009         	goto	u1211
  1163  00121E  EF13  F009         	goto	u1210
  1164  001222                     u1211:
  1165  001222  EF2A  F009         	goto	l1994
  1166  001226                     u1210:
  1167  001226                     
  1168                           ; BSR set to: 0
  1169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1170  001226  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1171  00122A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1172  00122E  2ADE               	incf	postinc2,f,c
  1173  001230  0E00               	movlw	0
  1174  001232  22DD               	addwfc	postdec2,f,c
  1175  001234                     
  1176                           ; BSR set to: 0
  1177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1178  001234  0E00               	movlw	0
  1179  001236  6E02               	movwf	(fputc@c+1)^0,c
  1180  001238  0E25               	movlw	37
  1181  00123A  6E01               	movwf	fputc@c^0,c
  1182  00123C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1183  001240  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1184  001244  ECC9  F00A         	call	_fputc	;wreg free
  1185  001248                     l1990:
  1186                           
  1187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1188  001248  0E00               	movlw	0
  1189  00124A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1190  00124C  0E01               	movlw	1
  1191  00124E  6E40               	movwf	?_vfpfcnvrt^0,c
  1192  001250  EF52  F009         	goto	l1103
  1193  001254                     l1994:
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1197  001254  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1198  001258  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1199  00125C  2ADE               	incf	postinc2,f,c
  1200  00125E  0E00               	movlw	0
  1201  001260  22DD               	addwfc	postdec2,f,c
  1202  001262                     
  1203                           ; BSR set to: 0
  1204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1205  001262  0E00               	movlw	0
  1206  001264  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1207  001266  0E00               	movlw	0
  1208  001268  6E40               	movwf	?_vfpfcnvrt^0,c
  1209  00126A  EF52  F009         	goto	l1103
  1210  00126E                     l2000:
  1211                           
  1212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1213  00126E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1214  001272  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1215  001276  CFDE FFF6          	movff	postinc2,tblptrl
  1216  00127A  CFDD FFF7          	movff	postdec2,tblptrh
  1217  00127E                     	if	0	;tblptru may be non-zero
  1218  00127E                     	endif
  1219  00127E                     	if	0	;tblptru may be non-zero
  1220  00127E                     	endif
  1221  00127E  0008               	tblrd		*
  1222  001280  50F5               	movf	tablat,w,c
  1223  001282  6E01               	movwf	fputc@c^0,c
  1224  001284  6A02               	clrf	(fputc@c+1)^0,c
  1225  001286  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1226  00128A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1227  00128E  ECC9  F00A         	call	_fputc	;wreg free
  1228  001292                     
  1229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1230  001292  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1231  001296  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1232  00129A  2ADE               	incf	postinc2,f,c
  1233  00129C  0E00               	movlw	0
  1234  00129E  22DD               	addwfc	postdec2,f,c
  1235  0012A0  EF24  F009         	goto	l1990
  1236  0012A4                     l1103:
  1237  0012A4  0012               	return		;funcret
  1238  0012A6                     __end_of_vfpfcnvrt:
  1239                           	callstack 0
  1240                           
  1241 ;; *************** function _dtoa *****************
  1242 ;; Defined at:
  1243 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1246 ;;		 -> sprintf@f(6), 
  1247 ;;  d               8   29[COMRAM] long long 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  n               8   53[COMRAM] long long 
  1250 ;;  i               2   61[COMRAM] int 
  1251 ;;  s               2   51[COMRAM] int 
  1252 ;;  w               2   49[COMRAM] int 
  1253 ;;  p               2   47[COMRAM] int 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  2   27[COMRAM] int 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1263 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1266 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1267 ;;Total ram usage:       36 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 4
  1270 ;; This function calls:
  1271 ;;		___aodiv
  1272 ;;		___aomod
  1273 ;;		_abs
  1274 ;;		_pad
  1275 ;; This function is called by:
  1276 ;;		_vfpfcnvrt
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text5
  1281  000E10                     __ptext5:
  1282                           	callstack 0
  1283  000E10                     _dtoa:
  1284                           	callstack 23
  1285  000E10                     
  1286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1287  000E10  C01E  F036         	movff	dtoa@d,dtoa@n
  1288  000E14  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1289  000E18  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1290  000E1C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1291  000E20  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1292  000E24  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1293  000E28  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1294  000E2C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1295  000E30                     
  1296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1297  000E30  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1298  000E32  EF1D  F007         	goto	u1011
  1299  000E36  EF20  F007         	goto	u1010
  1300  000E3A                     u1011:
  1301  000E3A  0E01               	movlw	1
  1302  000E3C  EF21  F007         	goto	u1020
  1303  000E40                     u1010:
  1304  000E40  0E00               	movlw	0
  1305  000E42                     u1020:
  1306  000E42  6E34               	movwf	dtoa@s^0,c
  1307  000E44  6A35               	clrf	(dtoa@s+1)^0,c
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1310  000E46  5034               	movf	dtoa@s^0,w,c
  1311  000E48  1035               	iorwf	(dtoa@s+1)^0,w,c
  1312  000E4A  B4D8               	btfsc	status,2,c
  1313  000E4C  EF2A  F007         	goto	u1031
  1314  000E50  EF2C  F007         	goto	u1030
  1315  000E54                     u1031:
  1316  000E54  EF3C  F007         	goto	l1880
  1317  000E58                     u1030:
  1318  000E58                     
  1319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1320  000E58  1E3D               	comf	(dtoa@n+7)^0,f,c
  1321  000E5A  1E3C               	comf	(dtoa@n+6)^0,f,c
  1322  000E5C  1E3B               	comf	(dtoa@n+5)^0,f,c
  1323  000E5E  1E3A               	comf	(dtoa@n+4)^0,f,c
  1324  000E60  1E39               	comf	(dtoa@n+3)^0,f,c
  1325  000E62  1E38               	comf	(dtoa@n+2)^0,f,c
  1326  000E64  1E37               	comf	(dtoa@n+1)^0,f,c
  1327  000E66  6C36               	negf	dtoa@n^0,c
  1328  000E68  0E00               	movlw	0
  1329  000E6A  2237               	addwfc	(dtoa@n+1)^0,f,c
  1330  000E6C  2238               	addwfc	(dtoa@n+2)^0,f,c
  1331  000E6E  2239               	addwfc	(dtoa@n+3)^0,f,c
  1332  000E70  223A               	addwfc	(dtoa@n+4)^0,f,c
  1333  000E72  223B               	addwfc	(dtoa@n+5)^0,f,c
  1334  000E74  223C               	addwfc	(dtoa@n+6)^0,f,c
  1335  000E76  223D               	addwfc	(dtoa@n+7)^0,f,c
  1336  000E78                     l1880:
  1337                           
  1338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1339  000E78  0100               	movlb	0	; () banked
  1340  000E7A  BFBF               	btfsc	(_prec+1)& (0+255),7,b
  1341  000E7C  EF42  F007         	goto	u1041
  1342  000E80  EF44  F007         	goto	u1040
  1343  000E84                     u1041:
  1344  000E84  EF45  F007         	goto	l1884
  1345  000E88                     u1040:
  1346  000E88                     
  1347                           ; BSR set to: 0
  1348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1349  000E88  93C0               	bcf	_flags& (0+255),1,b
  1350  000E8A                     l1884:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1354  000E8A  BFBF               	btfsc	(_prec+1)& (0+255),7,b
  1355  000E8C  EF52  F007         	goto	u1050
  1356  000E90  51BF               	movf	(_prec+1)& (0+255),w,b
  1357  000E92  E106               	bnz	u1051
  1358  000E94  05BE               	decf	_prec& (0+255),w,b
  1359  000E96  B0D8               	btfsc	status,0,c
  1360  000E98  EF50  F007         	goto	u1051
  1361  000E9C  EF52  F007         	goto	u1050
  1362  000EA0                     u1051:
  1363  000EA0  EF58  F007         	goto	l1076
  1364  000EA4                     u1050:
  1365  000EA4                     
  1366                           ; BSR set to: 0
  1367  000EA4  0E00               	movlw	0
  1368  000EA6  6E31               	movwf	(dtoa@p+1)^0,c
  1369  000EA8  0E01               	movlw	1
  1370  000EAA  6E30               	movwf	dtoa@p^0,c
  1371  000EAC  EF5C  F007         	goto	l1078
  1372  000EB0                     l1076:
  1373                           
  1374                           ; BSR set to: 0
  1375  000EB0  C0BE  F030         	movff	_prec,dtoa@p
  1376  000EB4  C0BF  F031         	movff	_prec+1,dtoa@p+1
  1377  000EB8                     l1078:
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1381  000EB8  C0BC  F032         	movff	_width,dtoa@w
  1382  000EBC  C0BD  F033         	movff	_width+1,dtoa@w+1
  1383  000EC0                     
  1384                           ; BSR set to: 0
  1385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1386  000EC0  5034               	movf	dtoa@s^0,w,c
  1387  000EC2  1035               	iorwf	(dtoa@s+1)^0,w,c
  1388  000EC4  A4D8               	btfss	status,2,c
  1389  000EC6  EF67  F007         	goto	u1061
  1390  000ECA  EF69  F007         	goto	u1060
  1391  000ECE                     u1061:
  1392  000ECE  EF70  F007         	goto	l1892
  1393  000ED2                     u1060:
  1394  000ED2                     
  1395                           ; BSR set to: 0
  1396  000ED2  A5C0               	btfss	_flags& (0+255),2,b
  1397  000ED4  EF6E  F007         	goto	u1071
  1398  000ED8  EF70  F007         	goto	u1070
  1399  000EDC                     u1071:
  1400  000EDC  EF73  F007         	goto	l1894
  1401  000EE0                     u1070:
  1402  000EE0                     l1892:
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1406  000EE0  0632               	decf	dtoa@w^0,f,c
  1407  000EE2  A0D8               	btfss	status,0,c
  1408  000EE4  0633               	decf	(dtoa@w+1)^0,f,c
  1409  000EE6                     l1894:
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1413  000EE6  0E00               	movlw	0
  1414  000EE8  6E3F               	movwf	(dtoa@i+1)^0,c
  1415  000EEA  0E1F               	movlw	31
  1416  000EEC  6E3E               	movwf	dtoa@i^0,c
  1417  000EEE                     
  1418                           ; BSR set to: 0
  1419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1420  000EEE  0E00               	movlw	0
  1421  000EF0  6FE8               	movwf	(_dbuf+31)& (0+255),b
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1424  000EF2  EFF7  F007         	goto	l1908
  1425  000EF6                     l1898:
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1428  000EF6  063E               	decf	dtoa@i^0,f,c
  1429  000EF8  A0D8               	btfss	status,0,c
  1430  000EFA  063F               	decf	(dtoa@i+1)^0,f,c
  1431  000EFC                     
  1432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1433  000EFC  0EC9               	movlw	low _dbuf
  1434  000EFE  243E               	addwf	dtoa@i^0,w,c
  1435  000F00  6ED9               	movwf	fsr2l,c
  1436  000F02  0E00               	movlw	high _dbuf
  1437  000F04  203F               	addwfc	(dtoa@i+1)^0,w,c
  1438  000F06  6EDA               	movwf	fsr2h,c
  1439  000F08  C036  F001         	movff	dtoa@n,___aomod@dividend
  1440  000F0C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1441  000F10  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1442  000F14  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1443  000F18  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1444  000F1C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1445  000F20  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1446  000F24  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1447  000F28  0E0A               	movlw	10
  1448  000F2A  6E09               	movwf	___aomod@divisor^0,c
  1449  000F2C  0E00               	movlw	0
  1450  000F2E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1451  000F30  0E00               	movlw	0
  1452  000F32  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1453  000F34  0E00               	movlw	0
  1454  000F36  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1455  000F38  0E00               	movlw	0
  1456  000F3A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1457  000F3C  0E00               	movlw	0
  1458  000F3E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1459  000F40  0E00               	movlw	0
  1460  000F42  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1461  000F44  0E00               	movlw	0
  1462  000F46  6E10               	movwf	(___aomod@divisor+7)^0,c
  1463  000F48  EC17  F00A         	call	___aomod	;wreg free
  1464  000F4C  C001  F026         	movff	?___aomod,??_dtoa
  1465  000F50  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1466  000F54  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1467  000F58  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1468  000F5C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1469  000F60  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1470  000F64  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1471  000F68  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1472  000F6C  C026  F013         	movff	??_dtoa,abs@a
  1473  000F70  C028  F014         	movff	??_dtoa+2,abs@a+1
  1474  000F74  EC51  F00D         	call	_abs	;wreg free
  1475  000F78  5013               	movf	?_abs^0,w,c
  1476  000F7A  0F30               	addlw	48
  1477  000F7C  6EDF               	movwf	indf2,c
  1478  000F7E                     
  1479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1480  000F7E  0630               	decf	dtoa@p^0,f,c
  1481  000F80  A0D8               	btfss	status,0,c
  1482  000F82  0631               	decf	(dtoa@p+1)^0,f,c
  1483  000F84                     
  1484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1485  000F84  0632               	decf	dtoa@w^0,f,c
  1486  000F86  A0D8               	btfss	status,0,c
  1487  000F88  0633               	decf	(dtoa@w+1)^0,f,c
  1488  000F8A                     
  1489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1490  000F8A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1491  000F8E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1492  000F92  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1493  000F96  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1494  000F9A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1495  000F9E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1496  000FA2  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1497  000FA6  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1498  000FAA  0E0A               	movlw	10
  1499  000FAC  6E09               	movwf	___aodiv@divisor^0,c
  1500  000FAE  0E00               	movlw	0
  1501  000FB0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1502  000FB2  0E00               	movlw	0
  1503  000FB4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1504  000FB6  0E00               	movlw	0
  1505  000FB8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1506  000FBA  0E00               	movlw	0
  1507  000FBC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1508  000FBE  0E00               	movlw	0
  1509  000FC0  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1510  000FC2  0E00               	movlw	0
  1511  000FC4  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1512  000FC6  0E00               	movlw	0
  1513  000FC8  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1514  000FCA  EC53  F009         	call	___aodiv	;wreg free
  1515  000FCE  C001  F036         	movff	?___aodiv,dtoa@n
  1516  000FD2  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1517  000FD6  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1518  000FDA  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1519  000FDE  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1520  000FE2  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1521  000FE6  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1522  000FEA  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1523  000FEE                     l1908:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1526  000FEE  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1527  000FF0  EF02  F008         	goto	u1081
  1528  000FF4  503F               	movf	(dtoa@i+1)^0,w,c
  1529  000FF6  E108               	bnz	u1080
  1530  000FF8  043E               	decf	dtoa@i^0,w,c
  1531  000FFA  A0D8               	btfss	status,0,c
  1532  000FFC  EF02  F008         	goto	u1081
  1533  001000  EF04  F008         	goto	u1080
  1534  001004                     u1081:
  1535  001004  EF35  F008         	goto	l1918
  1536  001008                     u1080:
  1537  001008  5036               	movf	dtoa@n^0,w,c
  1538  00100A  1037               	iorwf	(dtoa@n+1)^0,w,c
  1539  00100C  1038               	iorwf	(dtoa@n+2)^0,w,c
  1540  00100E  1039               	iorwf	(dtoa@n+3)^0,w,c
  1541  001010  103A               	iorwf	(dtoa@n+4)^0,w,c
  1542  001012  103B               	iorwf	(dtoa@n+5)^0,w,c
  1543  001014  103C               	iorwf	(dtoa@n+6)^0,w,c
  1544  001016  103D               	iorwf	(dtoa@n+7)^0,w,c
  1545  001018  A4D8               	btfss	status,2,c
  1546  00101A  EF11  F008         	goto	u1091
  1547  00101E  EF13  F008         	goto	u1090
  1548  001022                     u1091:
  1549  001022  EF7B  F007         	goto	l1898
  1550  001026                     u1090:
  1551  001026  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1552  001028  EF20  F008         	goto	u1100
  1553  00102C  5031               	movf	(dtoa@p+1)^0,w,c
  1554  00102E  E106               	bnz	u1101
  1555  001030  0430               	decf	dtoa@p^0,w,c
  1556  001032  B0D8               	btfsc	status,0,c
  1557  001034  EF1E  F008         	goto	u1101
  1558  001038  EF20  F008         	goto	u1100
  1559  00103C                     u1101:
  1560  00103C  EF7B  F007         	goto	l1898
  1561  001040                     u1100:
  1562  001040  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1563  001042  EF2B  F008         	goto	u1111
  1564  001046  5033               	movf	(dtoa@w+1)^0,w,c
  1565  001048  E108               	bnz	u1110
  1566  00104A  0432               	decf	dtoa@w^0,w,c
  1567  00104C  A0D8               	btfss	status,0,c
  1568  00104E  EF2B  F008         	goto	u1111
  1569  001052  EF2D  F008         	goto	u1110
  1570  001056                     u1111:
  1571  001056  EF35  F008         	goto	l1918
  1572  00105A                     u1110:
  1573  00105A  0100               	movlb	0	; () banked
  1574  00105C  B3C0               	btfsc	_flags& (0+255),1,b
  1575  00105E  EF33  F008         	goto	u1121
  1576  001062  EF35  F008         	goto	u1120
  1577  001066                     u1121:
  1578  001066  EF7B  F007         	goto	l1898
  1579  00106A                     u1120:
  1580  00106A                     l1918:
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1583  00106A  5034               	movf	dtoa@s^0,w,c
  1584  00106C  1035               	iorwf	(dtoa@s+1)^0,w,c
  1585  00106E  A4D8               	btfss	status,2,c
  1586  001070  EF3C  F008         	goto	u1131
  1587  001074  EF3E  F008         	goto	u1130
  1588  001078                     u1131:
  1589  001078  EF46  F008         	goto	l1922
  1590  00107C                     u1130:
  1591  00107C  0100               	movlb	0	; () banked
  1592  00107E  A5C0               	btfss	_flags& (0+255),2,b
  1593  001080  EF44  F008         	goto	u1141
  1594  001084  EF46  F008         	goto	u1140
  1595  001088                     u1141:
  1596  001088  EF64  F008         	goto	l1932
  1597  00108C                     u1140:
  1598  00108C                     l1922:
  1599                           
  1600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1601  00108C  063E               	decf	dtoa@i^0,f,c
  1602  00108E  A0D8               	btfss	status,0,c
  1603  001090  063F               	decf	(dtoa@i+1)^0,f,c
  1604  001092                     
  1605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1606  001092  5034               	movf	dtoa@s^0,w,c
  1607  001094  1035               	iorwf	(dtoa@s+1)^0,w,c
  1608  001096  A4D8               	btfss	status,2,c
  1609  001098  EF50  F008         	goto	u1151
  1610  00109C  EF52  F008         	goto	u1150
  1611  0010A0                     u1151:
  1612  0010A0  EF58  F008         	goto	l1928
  1613  0010A4                     u1150:
  1614  0010A4  0E00               	movlw	0
  1615  0010A6  6E2F               	movwf	(_dtoa$2102+1)^0,c
  1616  0010A8  0E2B               	movlw	43
  1617  0010AA  6E2E               	movwf	_dtoa$2102^0,c
  1618  0010AC  EF5C  F008         	goto	l1930
  1619  0010B0                     l1928:
  1620  0010B0  0E00               	movlw	0
  1621  0010B2  6E2F               	movwf	(_dtoa$2102+1)^0,c
  1622  0010B4  0E2D               	movlw	45
  1623  0010B6  6E2E               	movwf	_dtoa$2102^0,c
  1624  0010B8                     l1930:
  1625  0010B8  0EC9               	movlw	low _dbuf
  1626  0010BA  243E               	addwf	dtoa@i^0,w,c
  1627  0010BC  6ED9               	movwf	fsr2l,c
  1628  0010BE  0E00               	movlw	high _dbuf
  1629  0010C0  203F               	addwfc	(dtoa@i+1)^0,w,c
  1630  0010C2  6EDA               	movwf	fsr2h,c
  1631  0010C4  C02E  FFDF         	movff	_dtoa$2102,indf2
  1632  0010C8                     l1932:
  1633                           
  1634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1635  0010C8  C01C  F011         	movff	dtoa@fp,pad@fp
  1636  0010CC  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1637  0010D0  0EC9               	movlw	low _dbuf
  1638  0010D2  243E               	addwf	dtoa@i^0,w,c
  1639  0010D4  6E13               	movwf	pad@buf^0,c
  1640  0010D6  0E00               	movlw	high _dbuf
  1641  0010D8  203F               	addwfc	(dtoa@i+1)^0,w,c
  1642  0010DA  6E14               	movwf	(pad@buf+1)^0,c
  1643  0010DC  C032  F015         	movff	dtoa@w,pad@p
  1644  0010E0  C033  F016         	movff	dtoa@w+1,pad@p+1
  1645  0010E4  EC2E  F00B         	call	_pad	;wreg free
  1646  0010E8  C011  F01C         	movff	?_pad,?_dtoa
  1647  0010EC  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1648  0010F0  0012               	return		;funcret
  1649  0010F2                     __end_of_dtoa:
  1650                           	callstack 0
  1651                           
  1652 ;; *************** function _pad *****************
  1653 ;; Defined at:
  1654 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1657 ;;		 -> sprintf@f(6), 
  1658 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1659 ;;		 -> dbuf(32), 
  1660 ;;  p               2   20[COMRAM] int 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  w               2   25[COMRAM] int 
  1663 ;;  i               2   23[COMRAM] int 
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  2   16[COMRAM] int 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1673 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1674 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1676 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;Total ram usage:       11 bytes
  1678 ;; Hardware stack levels used: 1
  1679 ;; Hardware stack levels required when called: 3
  1680 ;; This function calls:
  1681 ;;		_fputc
  1682 ;;		_fputs
  1683 ;;		_strlen
  1684 ;; This function is called by:
  1685 ;;		_dtoa
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text6
  1690  00165C                     __ptext6:
  1691                           	callstack 0
  1692  00165C                     _pad:
  1693                           	callstack 23
  1694  00165C                     
  1695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1696  00165C  0100               	movlb	0	; () banked
  1697  00165E  A1C0               	btfss	_flags& (0+255),0,b
  1698  001660  EF34  F00B         	goto	u941
  1699  001664  EF36  F00B         	goto	u940
  1700  001668                     u941:
  1701  001668  EF40  F00B         	goto	l1848
  1702  00166C                     u940:
  1703  00166C                     
  1704                           ; BSR set to: 0
  1705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1706  00166C  C013  F00A         	movff	pad@buf,fputs@s
  1707  001670  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1708  001674  C011  F00C         	movff	pad@fp,fputs@fp
  1709  001678  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1710  00167C  ECEC  F00C         	call	_fputs	;wreg free
  1711  001680                     l1848:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1714  001680  BE16               	btfsc	(pad@p+1)^0,7,c
  1715  001682  EF45  F00B         	goto	u951
  1716  001686  EF47  F00B         	goto	u950
  1717  00168A                     u951:
  1718  00168A  EF4D  F00B         	goto	l1852
  1719  00168E                     u950:
  1720  00168E  C015  F01A         	movff	pad@p,pad@w
  1721  001692  C016  F01B         	movff	pad@p+1,pad@w+1
  1722  001696  EF51  F00B         	goto	l1065
  1723  00169A                     l1852:
  1724  00169A  0E00               	movlw	0
  1725  00169C  6E1B               	movwf	(pad@w+1)^0,c
  1726  00169E  0E00               	movlw	0
  1727  0016A0  6E1A               	movwf	pad@w^0,c
  1728  0016A2                     l1065:
  1729                           
  1730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1731  0016A2  0E00               	movlw	0
  1732  0016A4  6E19               	movwf	(pad@i+1)^0,c
  1733  0016A6  0E00               	movlw	0
  1734  0016A8  6E18               	movwf	pad@i^0,c
  1735                           
  1736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1737  0016AA  EF63  F00B         	goto	l1858
  1738  0016AE                     l1854:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1741  0016AE  0E00               	movlw	0
  1742  0016B0  6E02               	movwf	(fputc@c+1)^0,c
  1743  0016B2  0E20               	movlw	32
  1744  0016B4  6E01               	movwf	fputc@c^0,c
  1745  0016B6  C011  F003         	movff	pad@fp,fputc@fp
  1746  0016BA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1747  0016BE  ECC9  F00A         	call	_fputc	;wreg free
  1748  0016C2                     
  1749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1750  0016C2  4A18               	infsnz	pad@i^0,f,c
  1751  0016C4  2A19               	incf	(pad@i+1)^0,f,c
  1752  0016C6                     l1858:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1755  0016C6  501A               	movf	pad@w^0,w,c
  1756  0016C8  5C18               	subwf	pad@i^0,w,c
  1757  0016CA  5019               	movf	(pad@i+1)^0,w,c
  1758  0016CC  0A80               	xorlw	128
  1759  0016CE  6E17               	movwf	??_pad^0,c
  1760  0016D0  501B               	movf	(pad@w+1)^0,w,c
  1761  0016D2  0A80               	xorlw	128
  1762  0016D4  5817               	subwfb	??_pad^0,w,c
  1763  0016D6  A0D8               	btfss	status,0,c
  1764  0016D8  EF70  F00B         	goto	u961
  1765  0016DC  EF72  F00B         	goto	u960
  1766  0016E0                     u961:
  1767  0016E0  EF57  F00B         	goto	l1854
  1768  0016E4                     u960:
  1769  0016E4                     
  1770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1771  0016E4  0100               	movlb	0	; () banked
  1772  0016E6  B1C0               	btfsc	_flags& (0+255),0,b
  1773  0016E8  EF78  F00B         	goto	u971
  1774  0016EC  EF7A  F00B         	goto	u970
  1775  0016F0                     u971:
  1776  0016F0  EF84  F00B         	goto	l1862
  1777  0016F4                     u970:
  1778  0016F4                     
  1779                           ; BSR set to: 0
  1780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1781  0016F4  C013  F00A         	movff	pad@buf,fputs@s
  1782  0016F8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1783  0016FC  C011  F00C         	movff	pad@fp,fputs@fp
  1784  001700  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1785  001704  ECEC  F00C         	call	_fputs	;wreg free
  1786  001708                     l1862:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1789  001708  C013  F001         	movff	pad@buf,strlen@s
  1790  00170C  C014  F002         	movff	pad@buf+1,strlen@s+1
  1791  001710  EC8D  F00D         	call	_strlen	;wreg free
  1792  001714  501A               	movf	pad@w^0,w,c
  1793  001716  2401               	addwf	?_strlen^0,w,c
  1794  001718  6E11               	movwf	?_pad^0,c
  1795  00171A  501B               	movf	(pad@w+1)^0,w,c
  1796  00171C  2002               	addwfc	(?_strlen+1)^0,w,c
  1797  00171E  6E12               	movwf	(?_pad+1)^0,c
  1798  001720  0012               	return		;funcret
  1799  001722                     __end_of_pad:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function _strlen *****************
  1803 ;; Defined at:
  1804 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1807 ;;		 -> dbuf(32), 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1810 ;;		 -> dbuf(32), 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  2    0[COMRAM] unsigned int 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1823 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1824 ;;Total ram usage:        4 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_pad
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text7
  1834  001B1A                     __ptext7:
  1835                           	callstack 0
  1836  001B1A                     _strlen:
  1837                           	callstack 25
  1838  001B1A  C001  F003         	movff	strlen@s,strlen@a
  1839  001B1E  C002  F004         	movff	strlen@s+1,strlen@a+1
  1840  001B22  EF95  F00D         	goto	l1758
  1841  001B26                     l1756:
  1842  001B26  4A01               	infsnz	strlen@s^0,f,c
  1843  001B28  2A02               	incf	(strlen@s+1)^0,f,c
  1844  001B2A                     l1758:
  1845  001B2A  C001  FFD9         	movff	strlen@s,fsr2l
  1846  001B2E  C002  FFDA         	movff	strlen@s+1,fsr2h
  1847  001B32  50DF               	movf	indf2,w,c
  1848  001B34  A4D8               	btfss	status,2,c
  1849  001B36  EF9F  F00D         	goto	u801
  1850  001B3A  EFA1  F00D         	goto	u800
  1851  001B3E                     u801:
  1852  001B3E  EF93  F00D         	goto	l1756
  1853  001B42                     u800:
  1854  001B42  5003               	movf	strlen@a^0,w,c
  1855  001B44  5C01               	subwf	strlen@s^0,w,c
  1856  001B46  6E01               	movwf	?_strlen^0,c
  1857  001B48  5004               	movf	(strlen@a+1)^0,w,c
  1858  001B4A  5802               	subwfb	(strlen@s+1)^0,w,c
  1859  001B4C  6E02               	movwf	(?_strlen+1)^0,c
  1860  001B4E  0012               	return		;funcret
  1861  001B50                     __end_of_strlen:
  1862                           	callstack 0
  1863                           
  1864 ;; *************** function _fputs *****************
  1865 ;; Defined at:
  1866 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1869 ;;		 -> dbuf(32), 
  1870 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1871 ;;		 -> sprintf@f(6), 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  i               2   14[COMRAM] int 
  1874 ;;  c               1   13[COMRAM] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  2    9[COMRAM] int 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1888 ;;Total ram usage:        7 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; Hardware stack levels required when called: 2
  1891 ;; This function calls:
  1892 ;;		_fputc
  1893 ;; This function is called by:
  1894 ;;		_pad
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text8
  1899  0019D8                     __ptext8:
  1900                           	callstack 0
  1901  0019D8                     _fputs:
  1902                           	callstack 23
  1903  0019D8  0E00               	movlw	0
  1904  0019DA  6E10               	movwf	(fputs@i+1)^0,c
  1905  0019DC  0E00               	movlw	0
  1906  0019DE  6E0F               	movwf	fputs@i^0,c
  1907  0019E0  EFFD  F00C         	goto	l1752
  1908  0019E4                     l1748:
  1909  0019E4  C00E  F001         	movff	fputs@c,fputc@c
  1910  0019E8  6A02               	clrf	(fputc@c+1)^0,c
  1911  0019EA  C00C  F003         	movff	fputs@fp,fputc@fp
  1912  0019EE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1913  0019F2  ECC9  F00A         	call	_fputc	;wreg free
  1914  0019F6  4A0F               	infsnz	fputs@i^0,f,c
  1915  0019F8  2A10               	incf	(fputs@i+1)^0,f,c
  1916  0019FA                     l1752:
  1917  0019FA  500F               	movf	fputs@i^0,w,c
  1918  0019FC  240A               	addwf	fputs@s^0,w,c
  1919  0019FE  6ED9               	movwf	fsr2l,c
  1920  001A00  5010               	movf	(fputs@i+1)^0,w,c
  1921  001A02  200B               	addwfc	(fputs@s+1)^0,w,c
  1922  001A04  6EDA               	movwf	fsr2h,c
  1923  001A06  50DF               	movf	indf2,w,c
  1924  001A08  6E0E               	movwf	fputs@c^0,c
  1925  001A0A  500E               	movf	fputs@c^0,w,c
  1926  001A0C  A4D8               	btfss	status,2,c
  1927  001A0E  EF0B  F00D         	goto	u791
  1928  001A12  EF0D  F00D         	goto	u790
  1929  001A16                     u791:
  1930  001A16  EFF2  F00C         	goto	l1748
  1931  001A1A                     u790:
  1932  001A1A  0012               	return		;funcret
  1933  001A1C                     __end_of_fputs:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function _fputc *****************
  1937 ;; Defined at:
  1938 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  c               2    0[COMRAM] int 
  1941 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1942 ;;		 -> sprintf@f(6), 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  2    0[COMRAM] int 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1957 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1958 ;;Total ram usage:        9 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; Hardware stack levels required when called: 1
  1961 ;; This function calls:
  1962 ;;		_putch
  1963 ;; This function is called by:
  1964 ;;		_pad
  1965 ;;		_vfpfcnvrt
  1966 ;;		_fputs
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text9
  1971  001592                     __ptext9:
  1972                           	callstack 0
  1973  001592                     _fputc:
  1974                           	callstack 26
  1975  001592  5003               	movf	fputc@fp^0,w,c
  1976  001594  1004               	iorwf	(fputc@fp+1)^0,w,c
  1977  001596  B4D8               	btfsc	status,2,c
  1978  001598  EFD0  F00A         	goto	u751
  1979  00159C  EFD2  F00A         	goto	u750
  1980  0015A0                     u751:
  1981  0015A0  EFDB  F00A         	goto	l1736
  1982  0015A4                     u750:
  1983  0015A4  5003               	movf	fputc@fp^0,w,c
  1984  0015A6  1004               	iorwf	(fputc@fp+1)^0,w,c
  1985  0015A8  A4D8               	btfss	status,2,c
  1986  0015AA  EFD9  F00A         	goto	u761
  1987  0015AE  EFDB  F00A         	goto	u760
  1988  0015B2                     u761:
  1989  0015B2  EFE0  F00A         	goto	l1738
  1990  0015B6                     u760:
  1991  0015B6                     l1736:
  1992  0015B6  5001               	movf	fputc@c^0,w,c
  1993  0015B8  EC56  F00E         	call	_putch
  1994  0015BC  EF2D  F00B         	goto	l1129
  1995  0015C0                     l1738:
  1996  0015C0  EE20 F004          	lfsr	2,4
  1997  0015C4  5003               	movf	fputc@fp^0,w,c
  1998  0015C6  26D9               	addwf	fsr2l,f,c
  1999  0015C8  5004               	movf	(fputc@fp+1)^0,w,c
  2000  0015CA  22DA               	addwfc	fsr2h,f,c
  2001  0015CC  50DE               	movf	postinc2,w,c
  2002  0015CE  10DE               	iorwf	postinc2,w,c
  2003  0015D0  B4D8               	btfsc	status,2,c
  2004  0015D2  EFED  F00A         	goto	u771
  2005  0015D6  EFEF  F00A         	goto	u770
  2006  0015DA                     u771:
  2007  0015DA  EF0A  F00B         	goto	l1742
  2008  0015DE                     u770:
  2009  0015DE  EE20 F004          	lfsr	2,4
  2010  0015E2  5003               	movf	fputc@fp^0,w,c
  2011  0015E4  26D9               	addwf	fsr2l,f,c
  2012  0015E6  5004               	movf	(fputc@fp+1)^0,w,c
  2013  0015E8  22DA               	addwfc	fsr2h,f,c
  2014  0015EA  EE10 F002          	lfsr	1,2
  2015  0015EE  5003               	movf	fputc@fp^0,w,c
  2016  0015F0  26E1               	addwf	fsr1l,f,c
  2017  0015F2  5004               	movf	(fputc@fp+1)^0,w,c
  2018  0015F4  22E2               	addwfc	fsr1h,f,c
  2019  0015F6  50DE               	movf	postinc2,w,c
  2020  0015F8  5CE6               	subwf	postinc1,w,c
  2021  0015FA  50E6               	movf	postinc1,w,c
  2022  0015FC  0A80               	xorlw	128
  2023  0015FE  6E09               	movwf	(??_fputc+4)^0,c
  2024  001600  50DE               	movf	postinc2,w,c
  2025  001602  0A80               	xorlw	128
  2026  001604  5809               	subwfb	(??_fputc+4)^0,w,c
  2027  001606  B0D8               	btfsc	status,0,c
  2028  001608  EF08  F00B         	goto	u781
  2029  00160C  EF0A  F00B         	goto	u780
  2030  001610                     u781:
  2031  001610  EF2D  F00B         	goto	l1129
  2032  001614                     u780:
  2033  001614                     l1742:
  2034  001614  EE20 F002          	lfsr	2,2
  2035  001618  5003               	movf	fputc@fp^0,w,c
  2036  00161A  26D9               	addwf	fsr2l,f,c
  2037  00161C  5004               	movf	(fputc@fp+1)^0,w,c
  2038  00161E  22DA               	addwfc	fsr2h,f,c
  2039  001620  CFDE F005          	movff	postinc2,??_fputc
  2040  001624  CFDD F006          	movff	postdec2,??_fputc+1
  2041  001628  C003  FFD9         	movff	fputc@fp,fsr2l
  2042  00162C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2043  001630  CFDE F007          	movff	postinc2,??_fputc+2
  2044  001634  CFDD F008          	movff	postdec2,??_fputc+3
  2045  001638  5005               	movf	??_fputc^0,w,c
  2046  00163A  2407               	addwf	(??_fputc+2)^0,w,c
  2047  00163C  6ED9               	movwf	fsr2l,c
  2048  00163E  5006               	movf	(??_fputc+1)^0,w,c
  2049  001640  2008               	addwfc	(??_fputc+3)^0,w,c
  2050  001642  6EDA               	movwf	fsr2h,c
  2051  001644  C001  FFDF         	movff	fputc@c,indf2
  2052  001648  EE20 F002          	lfsr	2,2
  2053  00164C  5003               	movf	fputc@fp^0,w,c
  2054  00164E  26D9               	addwf	fsr2l,f,c
  2055  001650  5004               	movf	(fputc@fp+1)^0,w,c
  2056  001652  22DA               	addwfc	fsr2h,f,c
  2057  001654  2ADE               	incf	postinc2,f,c
  2058  001656  0E00               	movlw	0
  2059  001658  22DD               	addwfc	postdec2,f,c
  2060  00165A                     l1129:
  2061  00165A  0012               	return		;funcret
  2062  00165C                     __end_of_fputc:
  2063                           	callstack 0
  2064                           
  2065 ;; *************** function _putch *****************
  2066 ;; Defined at:
  2067 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  c               1    wreg     unsigned char 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  c               1    0[COMRAM] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_fputc
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text10
  2095  001CAC                     __ptext10:
  2096                           	callstack 0
  2097  001CAC                     _putch:
  2098                           	callstack 26
  2099  001CAC  0012               	return		;funcret
  2100  001CAE                     __end_of_putch:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _abs *****************
  2104 ;; Defined at:
  2105 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  a               2   18[COMRAM] int 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  2   18[COMRAM] int 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;Total ram usage:        4 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_dtoa
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text11
  2133  001AA2                     __ptext11:
  2134                           	callstack 0
  2135  001AA2                     _abs:
  2136                           	callstack 26
  2137  001AA2  BE14               	btfsc	(abs@a+1)^0,7,c
  2138  001AA4  EF5E  F00D         	goto	u980
  2139  001AA8  5014               	movf	(abs@a+1)^0,w,c
  2140  001AAA  E106               	bnz	u981
  2141  001AAC  0413               	decf	abs@a^0,w,c
  2142  001AAE  B0D8               	btfsc	status,0,c
  2143  001AB0  EF5C  F00D         	goto	u981
  2144  001AB4  EF5E  F00D         	goto	u980
  2145  001AB8                     u981:
  2146  001AB8  EF6C  F00D         	goto	l1114
  2147  001ABC                     u980:
  2148  001ABC  C013  F015         	movff	abs@a,??_abs
  2149  001AC0  C014  F016         	movff	abs@a+1,??_abs+1
  2150  001AC4  1E15               	comf	??_abs^0,f,c
  2151  001AC6  1E16               	comf	(??_abs+1)^0,f,c
  2152  001AC8  4A15               	infsnz	??_abs^0,f,c
  2153  001ACA  2A16               	incf	(??_abs+1)^0,f,c
  2154  001ACC  C015  F013         	movff	??_abs,?_abs
  2155  001AD0  C016  F014         	movff	??_abs+1,?_abs+1
  2156  001AD4  EF70  F00D         	goto	l1117
  2157  001AD8                     l1114:
  2158  001AD8  C013  F013         	movff	abs@a,?_abs
  2159  001ADC  C014  F014         	movff	abs@a+1,?_abs+1
  2160  001AE0                     l1117:
  2161  001AE0  0012               	return		;funcret
  2162  001AE2                     __end_of_abs:
  2163                           	callstack 0
  2164                           
  2165 ;; *************** function ___aomod *****************
  2166 ;; Defined at:
  2167 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  dividend        8    0[COMRAM] long long 
  2170 ;;  divisor         8    8[COMRAM] long long 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  sign            1   17[COMRAM] unsigned char 
  2173 ;;  counter         1   16[COMRAM] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  8    0[COMRAM] long long 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2183 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2186 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2187 ;;Total ram usage:       18 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_dtoa
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text12
  2197  00142E                     __ptext12:
  2198                           	callstack 0
  2199  00142E                     ___aomod:
  2200                           	callstack 26
  2201  00142E  0E00               	movlw	0
  2202  001430  6E12               	movwf	___aomod@sign^0,c
  2203  001432  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2204  001434  EF20  F00A         	goto	u880
  2205  001438  EF1E  F00A         	goto	u881
  2206  00143C                     u881:
  2207  00143C  EF32  F00A         	goto	l1816
  2208  001440                     u880:
  2209  001440  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2210  001442  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2211  001444  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2212  001446  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2213  001448  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2214  00144A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2215  00144C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2216  00144E  6C01               	negf	___aomod@dividend^0,c
  2217  001450  0E00               	movlw	0
  2218  001452  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2219  001454  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2220  001456  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2221  001458  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2222  00145A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2223  00145C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2224  00145E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2225  001460  0E01               	movlw	1
  2226  001462  6E12               	movwf	___aomod@sign^0,c
  2227  001464                     l1816:
  2228  001464  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2229  001466  EF39  F00A         	goto	u890
  2230  00146A  EF37  F00A         	goto	u891
  2231  00146E                     u891:
  2232  00146E  EF49  F00A         	goto	l1820
  2233  001472                     u890:
  2234  001472  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2235  001474  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2236  001476  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2237  001478  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2238  00147A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2239  00147C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2240  00147E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2241  001480  6C09               	negf	___aomod@divisor^0,c
  2242  001482  0E00               	movlw	0
  2243  001484  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2244  001486  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2245  001488  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2246  00148A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2247  00148C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2248  00148E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2249  001490  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2250  001492                     l1820:
  2251  001492  5009               	movf	___aomod@divisor^0,w,c
  2252  001494  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2253  001496  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2254  001498  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2255  00149A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2256  00149C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2257  00149E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2258  0014A0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2259  0014A2  B4D8               	btfsc	status,2,c
  2260  0014A4  EF56  F00A         	goto	u901
  2261  0014A8  EF58  F00A         	goto	u900
  2262  0014AC                     u901:
  2263  0014AC  EFA0  F00A         	goto	l1836
  2264  0014B0                     u900:
  2265  0014B0  0E01               	movlw	1
  2266  0014B2  6E11               	movwf	___aomod@counter^0,c
  2267  0014B4  EF66  F00A         	goto	l1826
  2268  0014B8                     l1824:
  2269  0014B8  90D8               	bcf	status,0,c
  2270  0014BA  3609               	rlcf	___aomod@divisor^0,f,c
  2271  0014BC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2272  0014BE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2273  0014C0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2274  0014C2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2275  0014C4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2276  0014C6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2277  0014C8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2278  0014CA  2A11               	incf	___aomod@counter^0,f,c
  2279  0014CC                     l1826:
  2280  0014CC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2281  0014CE  EF6B  F00A         	goto	u911
  2282  0014D2  EF6D  F00A         	goto	u910
  2283  0014D6                     u911:
  2284  0014D6  EF5C  F00A         	goto	l1824
  2285  0014DA                     u910:
  2286  0014DA                     l1828:
  2287  0014DA  5009               	movf	___aomod@divisor^0,w,c
  2288  0014DC  5C01               	subwf	___aomod@dividend^0,w,c
  2289  0014DE  500A               	movf	(___aomod@divisor+1)^0,w,c
  2290  0014E0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2291  0014E2  500B               	movf	(___aomod@divisor+2)^0,w,c
  2292  0014E4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2293  0014E6  500C               	movf	(___aomod@divisor+3)^0,w,c
  2294  0014E8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2295  0014EA  500D               	movf	(___aomod@divisor+4)^0,w,c
  2296  0014EC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2297  0014EE  500E               	movf	(___aomod@divisor+5)^0,w,c
  2298  0014F0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2299  0014F2  500F               	movf	(___aomod@divisor+6)^0,w,c
  2300  0014F4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2301  0014F6  5010               	movf	(___aomod@divisor+7)^0,w,c
  2302  0014F8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2303  0014FA  A0D8               	btfss	status,0,c
  2304  0014FC  EF82  F00A         	goto	u921
  2305  001500  EF84  F00A         	goto	u920
  2306  001504                     u921:
  2307  001504  EF94  F00A         	goto	l1832
  2308  001508                     u920:
  2309  001508  5009               	movf	___aomod@divisor^0,w,c
  2310  00150A  5E01               	subwf	___aomod@dividend^0,f,c
  2311  00150C  500A               	movf	(___aomod@divisor+1)^0,w,c
  2312  00150E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2313  001510  500B               	movf	(___aomod@divisor+2)^0,w,c
  2314  001512  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2315  001514  500C               	movf	(___aomod@divisor+3)^0,w,c
  2316  001516  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2317  001518  500D               	movf	(___aomod@divisor+4)^0,w,c
  2318  00151A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2319  00151C  500E               	movf	(___aomod@divisor+5)^0,w,c
  2320  00151E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2321  001520  500F               	movf	(___aomod@divisor+6)^0,w,c
  2322  001522  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2323  001524  5010               	movf	(___aomod@divisor+7)^0,w,c
  2324  001526  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2325  001528                     l1832:
  2326  001528  90D8               	bcf	status,0,c
  2327  00152A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2328  00152C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2329  00152E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2330  001530  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2331  001532  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2332  001534  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2333  001536  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2334  001538  3209               	rrcf	___aomod@divisor^0,f,c
  2335  00153A  2E11               	decfsz	___aomod@counter^0,f,c
  2336  00153C  EF6D  F00A         	goto	l1828
  2337  001540                     l1836:
  2338  001540  5012               	movf	___aomod@sign^0,w,c
  2339  001542  B4D8               	btfsc	status,2,c
  2340  001544  EFA6  F00A         	goto	u931
  2341  001548  EFA8  F00A         	goto	u930
  2342  00154C                     u931:
  2343  00154C  EFB8  F00A         	goto	l1840
  2344  001550                     u930:
  2345  001550  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2346  001552  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2347  001554  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2348  001556  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2349  001558  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2350  00155A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2351  00155C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2352  00155E  6C01               	negf	___aomod@dividend^0,c
  2353  001560  0E00               	movlw	0
  2354  001562  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2355  001564  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2356  001566  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2357  001568  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2358  00156A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2359  00156C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2360  00156E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2361  001570                     l1840:
  2362  001570  C001  F001         	movff	___aomod@dividend,?___aomod
  2363  001574  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2364  001578  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2365  00157C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2366  001580  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2367  001584  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2368  001588  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2369  00158C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2370  001590  0012               	return		;funcret
  2371  001592                     __end_of___aomod:
  2372                           	callstack 0
  2373                           
  2374 ;; *************** function ___aodiv *****************
  2375 ;; Defined at:
  2376 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  dividend        8    0[COMRAM] long long 
  2379 ;;  divisor         8    8[COMRAM] long long 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  quotient        8   18[COMRAM] long long 
  2382 ;;  sign            1   17[COMRAM] unsigned char 
  2383 ;;  counter         1   16[COMRAM] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  8    0[COMRAM] long long 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2393 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2394 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2396 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2397 ;;Total ram usage:       26 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_dtoa
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text13
  2407  0012A6                     __ptext13:
  2408                           	callstack 0
  2409  0012A6                     ___aodiv:
  2410                           	callstack 26
  2411  0012A6  0E00               	movlw	0
  2412  0012A8  6E12               	movwf	___aodiv@sign^0,c
  2413  0012AA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2414  0012AC  EF5C  F009         	goto	u810
  2415  0012B0  EF5A  F009         	goto	u811
  2416  0012B4                     u811:
  2417  0012B4  EF6E  F009         	goto	l1772
  2418  0012B8                     u810:
  2419  0012B8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2420  0012BA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2421  0012BC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2422  0012BE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2423  0012C0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2424  0012C2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2425  0012C4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2426  0012C6  6C09               	negf	___aodiv@divisor^0,c
  2427  0012C8  0E00               	movlw	0
  2428  0012CA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2429  0012CC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2430  0012CE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2431  0012D0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2432  0012D2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2433  0012D4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2434  0012D6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2435  0012D8  0E01               	movlw	1
  2436  0012DA  6E12               	movwf	___aodiv@sign^0,c
  2437  0012DC                     l1772:
  2438  0012DC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2439  0012DE  EF75  F009         	goto	u820
  2440  0012E2  EF73  F009         	goto	u821
  2441  0012E6                     u821:
  2442  0012E6  EF87  F009         	goto	l1778
  2443  0012EA                     u820:
  2444  0012EA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2445  0012EC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2446  0012EE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2447  0012F0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2448  0012F2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2449  0012F4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2450  0012F6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2451  0012F8  6C01               	negf	___aodiv@dividend^0,c
  2452  0012FA  0E00               	movlw	0
  2453  0012FC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2454  0012FE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2455  001300  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2456  001302  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2457  001304  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2458  001306  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2459  001308  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2460  00130A  0E01               	movlw	1
  2461  00130C  1A12               	xorwf	___aodiv@sign^0,f,c
  2462  00130E                     l1778:
  2463  00130E  EE20  F013         	lfsr	2,___aodiv@quotient
  2464  001312  0E07               	movlw	7
  2465  001314                     u831:
  2466  001314  6ADE               	clrf	postinc2,c
  2467  001316  06E8               	decf	wreg,f,c
  2468  001318  E2FD               	bc	u831
  2469  00131A  5009               	movf	___aodiv@divisor^0,w,c
  2470  00131C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2471  00131E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2472  001320  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2473  001322  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2474  001324  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2475  001326  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2476  001328  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2477  00132A  B4D8               	btfsc	status,2,c
  2478  00132C  EF9A  F009         	goto	u841
  2479  001330  EF9C  F009         	goto	u840
  2480  001334                     u841:
  2481  001334  EFEE  F009         	goto	l1800
  2482  001338                     u840:
  2483  001338  0E01               	movlw	1
  2484  00133A  6E11               	movwf	___aodiv@counter^0,c
  2485  00133C  EFAA  F009         	goto	l1786
  2486  001340                     l1784:
  2487  001340  90D8               	bcf	status,0,c
  2488  001342  3609               	rlcf	___aodiv@divisor^0,f,c
  2489  001344  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2490  001346  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2491  001348  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2492  00134A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2493  00134C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2494  00134E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2495  001350  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2496  001352  2A11               	incf	___aodiv@counter^0,f,c
  2497  001354                     l1786:
  2498  001354  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2499  001356  EFAF  F009         	goto	u851
  2500  00135A  EFB1  F009         	goto	u850
  2501  00135E                     u851:
  2502  00135E  EFA0  F009         	goto	l1784
  2503  001362                     u850:
  2504  001362                     l1788:
  2505  001362  90D8               	bcf	status,0,c
  2506  001364  3613               	rlcf	___aodiv@quotient^0,f,c
  2507  001366  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2508  001368  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2509  00136A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2510  00136C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2511  00136E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2512  001370  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2513  001372  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2514  001374  5009               	movf	___aodiv@divisor^0,w,c
  2515  001376  5C01               	subwf	___aodiv@dividend^0,w,c
  2516  001378  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2517  00137A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2518  00137C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2519  00137E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2520  001380  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2521  001382  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2522  001384  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2523  001386  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2524  001388  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2525  00138A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2526  00138C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2527  00138E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2528  001390  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2529  001392  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2530  001394  A0D8               	btfss	status,0,c
  2531  001396  EFCF  F009         	goto	u861
  2532  00139A  EFD1  F009         	goto	u860
  2533  00139E                     u861:
  2534  00139E  EFE2  F009         	goto	l1796
  2535  0013A2                     u860:
  2536  0013A2  5009               	movf	___aodiv@divisor^0,w,c
  2537  0013A4  5E01               	subwf	___aodiv@dividend^0,f,c
  2538  0013A6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2539  0013A8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2540  0013AA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2541  0013AC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2542  0013AE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2543  0013B0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2544  0013B2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2545  0013B4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2546  0013B6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2547  0013B8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2548  0013BA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2549  0013BC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2550  0013BE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2551  0013C0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2552  0013C2  8013               	bsf	___aodiv@quotient^0,0,c
  2553  0013C4                     l1796:
  2554  0013C4  90D8               	bcf	status,0,c
  2555  0013C6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2556  0013C8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2557  0013CA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2558  0013CC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2559  0013CE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2560  0013D0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2561  0013D2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2562  0013D4  3209               	rrcf	___aodiv@divisor^0,f,c
  2563  0013D6  2E11               	decfsz	___aodiv@counter^0,f,c
  2564  0013D8  EFB1  F009         	goto	l1788
  2565  0013DC                     l1800:
  2566  0013DC  5012               	movf	___aodiv@sign^0,w,c
  2567  0013DE  B4D8               	btfsc	status,2,c
  2568  0013E0  EFF4  F009         	goto	u871
  2569  0013E4  EFF6  F009         	goto	u870
  2570  0013E8                     u871:
  2571  0013E8  EF06  F00A         	goto	l1804
  2572  0013EC                     u870:
  2573  0013EC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2574  0013EE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2575  0013F0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2576  0013F2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2577  0013F4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2578  0013F6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2579  0013F8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2580  0013FA  6C13               	negf	___aodiv@quotient^0,c
  2581  0013FC  0E00               	movlw	0
  2582  0013FE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2583  001400  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2584  001402  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2585  001404  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2586  001406  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2587  001408  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2588  00140A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2589  00140C                     l1804:
  2590  00140C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2591  001410  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2592  001414  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2593  001418  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2594  00141C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2595  001420  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2596  001424  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2597  001428  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2598  00142C  0012               	return		;funcret
  2599  00142E                     __end_of___aodiv:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _sendStringSerial4 *****************
  2603 ;; Defined at:
  2604 ;;		line 35 in file "serial.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  string          2    2[COMRAM] PTR unsigned char 
  2607 ;;		 -> main@buf(40), 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2622 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2623 ;;Total ram usage:        3 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 1
  2626 ;; This function calls:
  2627 ;;		_sendCharSerial4
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text14
  2634  001AE2                     __ptext14:
  2635                           	callstack 0
  2636  001AE2                     _sendStringSerial4:
  2637                           	callstack 29
  2638  001AE2                     
  2639                           ;serial.c: 37:     while (*string != 0) {
  2640  001AE2  EF80  F00D         	goto	l2108
  2641  001AE6                     l2104:
  2642                           
  2643                           ;serial.c: 38:         sendCharSerial4(*string++);
  2644  001AE6  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  2645  001AEA  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2646  001AEE  50DF               	movf	indf2,w,c
  2647  001AF0  6E05               	movwf	??_sendStringSerial4^0,c
  2648  001AF2  5005               	movf	??_sendStringSerial4^0,w,c
  2649  001AF4  6E01               	movwf	sendCharSerial4@charToSend^0,c
  2650  001AF6  6A02               	clrf	(sendCharSerial4@charToSend+1)^0,c
  2651  001AF8  EC2F  F00E         	call	_sendCharSerial4	;wreg free
  2652  001AFC  4A03               	infsnz	sendStringSerial4@string^0,f,c
  2653  001AFE  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  2654  001B00                     l2108:
  2655                           
  2656                           ;serial.c: 37:     while (*string != 0) {
  2657  001B00  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  2658  001B04  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  2659  001B08  50DF               	movf	indf2,w,c
  2660  001B0A  A4D8               	btfss	status,2,c
  2661  001B0C  EF8A  F00D         	goto	u1281
  2662  001B10  EF8C  F00D         	goto	u1280
  2663  001B14                     u1281:
  2664  001B14  EF73  F00D         	goto	l2104
  2665  001B18                     u1280:
  2666  001B18  0012               	return		;funcret
  2667  001B1A                     __end_of_sendStringSerial4:
  2668                           	callstack 0
  2669                           
  2670 ;; *************** function _sendCharSerial4 *****************
  2671 ;; Defined at:
  2672 ;;		line 28 in file "serial.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  charToSend      2    0[COMRAM] unsigned int 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		None
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;Total ram usage:        2 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_sendStringSerial4
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text15
  2700  001C5E                     __ptext15:
  2701                           	callstack 0
  2702  001C5E                     _sendCharSerial4:
  2703                           	callstack 29
  2704  001C5E                     l297:
  2705  001C5E  010E               	movlb	14	; () banked
  2706  001C60  A537               	btfss	55,2,b	;volatile
  2707  001C62  EF35  F00E         	goto	u1221
  2708  001C66  EF37  F00E         	goto	u1220
  2709  001C6A                     u1221:
  2710  001C6A  EF2F  F00E         	goto	l297
  2711  001C6E                     u1220:
  2712  001C6E                     
  2713                           ; BSR set to: 14
  2714                           ;serial.c: 30:     TX4REG = charToSend;
  2715  001C6E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  2716  001C72                     
  2717                           ; BSR set to: 14
  2718  001C72  0012               	return		;funcret
  2719  001C74                     __end_of_sendCharSerial4:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _read_colour *****************
  2723 ;; Defined at:
  2724 ;;		line 15 in file "read_colour.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  current         8   11[COMRAM] struct .
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  8   11[COMRAM] struct .
  2731 ;; Registers used:
  2732 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2738 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2741 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2742 ;;Total ram usage:        8 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; Hardware stack levels required when called: 3
  2745 ;; This function calls:
  2746 ;;		_color_read_Blue
  2747 ;;		_color_read_Clear
  2748 ;;		_color_read_Green
  2749 ;;		_color_read_Red
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text16
  2756  001A1C                     __ptext16:
  2757                           	callstack 0
  2758  001A1C                     _read_colour:
  2759                           	callstack 27
  2760  001A1C                     
  2761                           ;read_colour.c: 17:     current.R = color_read_Red();
  2762  001A1C  EC4C  F00C         	call	_color_read_Red	;wreg free
  2763  001A20  C005  F00C         	movff	?_color_read_Red,read_colour@current
  2764  001A24  C006  F00D         	movff	?_color_read_Red+1,read_colour@current+1
  2765                           
  2766                           ;read_colour.c: 18:     current.G = color_read_Green();
  2767  001A28  EC74  F00C         	call	_color_read_Green	;wreg free
  2768  001A2C  C005  F00E         	movff	?_color_read_Green,read_colour@current+2
  2769  001A30  C006  F00F         	movff	?_color_read_Green+1,read_colour@current+3
  2770                           
  2771                           ;read_colour.c: 19:     current.B = color_read_Blue();
  2772  001A34  ECC4  F00C         	call	_color_read_Blue	;wreg free
  2773  001A38  C005  F010         	movff	?_color_read_Blue,read_colour@current+4
  2774  001A3C  C006  F011         	movff	?_color_read_Blue+1,read_colour@current+5
  2775                           
  2776                           ;read_colour.c: 20:     current.C = color_read_Clear();
  2777  001A40  EC9C  F00C         	call	_color_read_Clear	;wreg free
  2778  001A44  C005  F012         	movff	?_color_read_Clear,read_colour@current+6
  2779  001A48  C006  F013         	movff	?_color_read_Clear+1,read_colour@current+7
  2780  001A4C                     
  2781                           ;read_colour.c: 22:     return current;
  2782  001A4C  EE20  F00C         	lfsr	2,read_colour@current
  2783  001A50  EE00  F00C         	lfsr	0,?_read_colour
  2784  001A54  0E07               	movlw	7
  2785  001A56                     u1271:
  2786  001A56  CFDB FFEB          	movff	plusw2,plusw0
  2787  001A5A  06E8               	decf	wreg,f,c
  2788  001A5C  E2FC               	bc	u1271
  2789  001A5E  0012               	return		;funcret
  2790  001A60                     __end_of_read_colour:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function _color_read_Red *****************
  2794 ;; Defined at:
  2795 ;;		line 45 in file "color.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  tmp             2    9[COMRAM] unsigned int 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  2    4[COMRAM] unsigned int 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;Total ram usage:        7 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 2
  2816 ;; This function calls:
  2817 ;;		_I2C_2_Master_Read
  2818 ;;		_I2C_2_Master_RepStart
  2819 ;;		_I2C_2_Master_Start
  2820 ;;		_I2C_2_Master_Stop
  2821 ;;		_I2C_2_Master_Write
  2822 ;; This function is called by:
  2823 ;;		_read_colour
  2824 ;;		_read_card
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text17
  2829  001898                     __ptext17:
  2830                           	callstack 0
  2831  001898                     _color_read_Red:
  2832                           	callstack 27
  2833  001898                     
  2834                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  2835  001898  EC51  F00E         	call	_I2C_2_Master_Start	;wreg free
  2836                           
  2837                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  2838  00189C  0E52               	movlw	82
  2839  00189E  EC41  F00E         	call	_I2C_2_Master_Write
  2840                           
  2841                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x16);
  2842  0018A2  0EB6               	movlw	182
  2843  0018A4  EC41  F00E         	call	_I2C_2_Master_Write
  2844                           
  2845                           ;color.c: 51:  I2C_2_Master_RepStart();
  2846  0018A8  EC47  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2847                           
  2848                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  2849  0018AC  0E53               	movlw	83
  2850  0018AE  EC41  F00E         	call	_I2C_2_Master_Write
  2851                           
  2852                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  2853  0018B2  0E01               	movlw	1
  2854  0018B4  EC30  F00D         	call	_I2C_2_Master_Read
  2855  0018B8  6E07               	movwf	??_color_read_Red^0,c
  2856  0018BA  5007               	movf	??_color_read_Red^0,w,c
  2857  0018BC  6E0A               	movwf	color_read_Red@tmp^0,c
  2858  0018BE  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2859                           
  2860                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2861  0018C0  0E00               	movlw	0
  2862  0018C2  EC30  F00D         	call	_I2C_2_Master_Read
  2863  0018C6  6E07               	movwf	??_color_read_Red^0,c
  2864  0018C8  5007               	movf	??_color_read_Red^0,w,c
  2865  0018CA  6E09               	movwf	(??_color_read_Red+2)^0,c
  2866  0018CC  6A08               	clrf	(??_color_read_Red+1)^0,c
  2867  0018CE  500A               	movf	color_read_Red@tmp^0,w,c
  2868  0018D0  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2869  0018D2  6E0A               	movwf	color_read_Red@tmp^0,c
  2870  0018D4  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2871  0018D6  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2872  0018D8  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2873                           
  2874                           ;color.c: 55:  I2C_2_Master_Stop();
  2875  0018DA  EC4C  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2876  0018DE                     
  2877                           ;color.c: 56:  return tmp;
  2878  0018DE  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2879  0018E2  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2880  0018E6  0012               	return		;funcret
  2881  0018E8                     __end_of_color_read_Red:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _color_read_Green *****************
  2885 ;; Defined at:
  2886 ;;		line 64 in file "color.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  tmp             2    9[COMRAM] unsigned int 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  2    4[COMRAM] unsigned int 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2902 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;Total ram usage:        7 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 2
  2907 ;; This function calls:
  2908 ;;		_I2C_2_Master_Read
  2909 ;;		_I2C_2_Master_RepStart
  2910 ;;		_I2C_2_Master_Start
  2911 ;;		_I2C_2_Master_Stop
  2912 ;;		_I2C_2_Master_Write
  2913 ;; This function is called by:
  2914 ;;		_read_colour
  2915 ;;		_read_card
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text18
  2920  0018E8                     __ptext18:
  2921                           	callstack 0
  2922  0018E8                     _color_read_Green:
  2923                           	callstack 27
  2924  0018E8                     
  2925                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  2926  0018E8  EC51  F00E         	call	_I2C_2_Master_Start	;wreg free
  2927                           
  2928                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  2929  0018EC  0E52               	movlw	82
  2930  0018EE  EC41  F00E         	call	_I2C_2_Master_Write
  2931                           
  2932                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x18);
  2933  0018F2  0EB8               	movlw	184
  2934  0018F4  EC41  F00E         	call	_I2C_2_Master_Write
  2935                           
  2936                           ;color.c: 70:  I2C_2_Master_RepStart();
  2937  0018F8  EC47  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  2938                           
  2939                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  2940  0018FC  0E53               	movlw	83
  2941  0018FE  EC41  F00E         	call	_I2C_2_Master_Write
  2942                           
  2943                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  2944  001902  0E01               	movlw	1
  2945  001904  EC30  F00D         	call	_I2C_2_Master_Read
  2946  001908  6E07               	movwf	??_color_read_Green^0,c
  2947  00190A  5007               	movf	??_color_read_Green^0,w,c
  2948  00190C  6E0A               	movwf	color_read_Green@tmp^0,c
  2949  00190E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2950                           
  2951                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2952  001910  0E00               	movlw	0
  2953  001912  EC30  F00D         	call	_I2C_2_Master_Read
  2954  001916  6E07               	movwf	??_color_read_Green^0,c
  2955  001918  5007               	movf	??_color_read_Green^0,w,c
  2956  00191A  6E09               	movwf	(??_color_read_Green+2)^0,c
  2957  00191C  6A08               	clrf	(??_color_read_Green+1)^0,c
  2958  00191E  500A               	movf	color_read_Green@tmp^0,w,c
  2959  001920  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2960  001922  6E0A               	movwf	color_read_Green@tmp^0,c
  2961  001924  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2962  001926  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2963  001928  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2964                           
  2965                           ;color.c: 74:  I2C_2_Master_Stop();
  2966  00192A  EC4C  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2967  00192E                     
  2968                           ;color.c: 75:  return tmp;
  2969  00192E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2970  001932  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2971  001936  0012               	return		;funcret
  2972  001938                     __end_of_color_read_Green:
  2973                           	callstack 0
  2974                           
  2975 ;; *************** function _color_read_Clear *****************
  2976 ;; Defined at:
  2977 ;;		line 102 in file "color.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  tmp             2    9[COMRAM] unsigned int 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  2    4[COMRAM] unsigned int 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2993 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2994 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2995 ;;Total ram usage:        7 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; Hardware stack levels required when called: 2
  2998 ;; This function calls:
  2999 ;;		_I2C_2_Master_Read
  3000 ;;		_I2C_2_Master_RepStart
  3001 ;;		_I2C_2_Master_Start
  3002 ;;		_I2C_2_Master_Stop
  3003 ;;		_I2C_2_Master_Write
  3004 ;; This function is called by:
  3005 ;;		_read_colour
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text19
  3010  001938                     __ptext19:
  3011                           	callstack 0
  3012  001938                     _color_read_Clear:
  3013                           	callstack 27
  3014  001938                     
  3015                           ;color.c: 104:  unsigned int tmp;;color.c: 105:  I2C_2_Master_Start();
  3016  001938  EC51  F00E         	call	_I2C_2_Master_Start	;wreg free
  3017                           
  3018                           ;color.c: 106:  I2C_2_Master_Write(0x52 | 0x00);
  3019  00193C  0E52               	movlw	82
  3020  00193E  EC41  F00E         	call	_I2C_2_Master_Write
  3021                           
  3022                           ;color.c: 107:  I2C_2_Master_Write(0xA0 | 0x14);
  3023  001942  0EB4               	movlw	180
  3024  001944  EC41  F00E         	call	_I2C_2_Master_Write
  3025                           
  3026                           ;color.c: 108:  I2C_2_Master_RepStart();
  3027  001948  EC47  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3028                           
  3029                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x01);
  3030  00194C  0E53               	movlw	83
  3031  00194E  EC41  F00E         	call	_I2C_2_Master_Write
  3032                           
  3033                           ;color.c: 110:  tmp=I2C_2_Master_Read(1);
  3034  001952  0E01               	movlw	1
  3035  001954  EC30  F00D         	call	_I2C_2_Master_Read
  3036  001958  6E07               	movwf	??_color_read_Clear^0,c
  3037  00195A  5007               	movf	??_color_read_Clear^0,w,c
  3038  00195C  6E0A               	movwf	color_read_Clear@tmp^0,c
  3039  00195E  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3040                           
  3041                           ;color.c: 111:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3042  001960  0E00               	movlw	0
  3043  001962  EC30  F00D         	call	_I2C_2_Master_Read
  3044  001966  6E07               	movwf	??_color_read_Clear^0,c
  3045  001968  5007               	movf	??_color_read_Clear^0,w,c
  3046  00196A  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3047  00196C  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3048  00196E  500A               	movf	color_read_Clear@tmp^0,w,c
  3049  001970  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3050  001972  6E0A               	movwf	color_read_Clear@tmp^0,c
  3051  001974  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3052  001976  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3053  001978  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3054                           
  3055                           ;color.c: 112:  I2C_2_Master_Stop();
  3056  00197A  EC4C  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3057  00197E                     
  3058                           ;color.c: 113:  return tmp;
  3059  00197E  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3060  001982  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3061  001986  0012               	return		;funcret
  3062  001988                     __end_of_color_read_Clear:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _color_read_Blue *****************
  3066 ;; Defined at:
  3067 ;;		line 83 in file "color.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  tmp             2    9[COMRAM] unsigned int 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  2    4[COMRAM] unsigned int 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3083 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3084 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3085 ;;Total ram usage:        7 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; Hardware stack levels required when called: 2
  3088 ;; This function calls:
  3089 ;;		_I2C_2_Master_Read
  3090 ;;		_I2C_2_Master_RepStart
  3091 ;;		_I2C_2_Master_Start
  3092 ;;		_I2C_2_Master_Stop
  3093 ;;		_I2C_2_Master_Write
  3094 ;; This function is called by:
  3095 ;;		_read_colour
  3096 ;;		_read_card
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text20
  3101  001988                     __ptext20:
  3102                           	callstack 0
  3103  001988                     _color_read_Blue:
  3104                           	callstack 27
  3105  001988                     
  3106                           ;color.c: 85:  unsigned int tmp;;color.c: 86:  I2C_2_Master_Start();
  3107  001988  EC51  F00E         	call	_I2C_2_Master_Start	;wreg free
  3108                           
  3109                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x00);
  3110  00198C  0E52               	movlw	82
  3111  00198E  EC41  F00E         	call	_I2C_2_Master_Write
  3112                           
  3113                           ;color.c: 88:  I2C_2_Master_Write(0xA0 | 0x1A);
  3114  001992  0EBA               	movlw	186
  3115  001994  EC41  F00E         	call	_I2C_2_Master_Write
  3116                           
  3117                           ;color.c: 89:  I2C_2_Master_RepStart();
  3118  001998  EC47  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3119                           
  3120                           ;color.c: 90:  I2C_2_Master_Write(0x52 | 0x01);
  3121  00199C  0E53               	movlw	83
  3122  00199E  EC41  F00E         	call	_I2C_2_Master_Write
  3123                           
  3124                           ;color.c: 91:  tmp=I2C_2_Master_Read(1);
  3125  0019A2  0E01               	movlw	1
  3126  0019A4  EC30  F00D         	call	_I2C_2_Master_Read
  3127  0019A8  6E07               	movwf	??_color_read_Blue^0,c
  3128  0019AA  5007               	movf	??_color_read_Blue^0,w,c
  3129  0019AC  6E0A               	movwf	color_read_Blue@tmp^0,c
  3130  0019AE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3131                           
  3132                           ;color.c: 92:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3133  0019B0  0E00               	movlw	0
  3134  0019B2  EC30  F00D         	call	_I2C_2_Master_Read
  3135  0019B6  6E07               	movwf	??_color_read_Blue^0,c
  3136  0019B8  5007               	movf	??_color_read_Blue^0,w,c
  3137  0019BA  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3138  0019BC  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3139  0019BE  500A               	movf	color_read_Blue@tmp^0,w,c
  3140  0019C0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3141  0019C2  6E0A               	movwf	color_read_Blue@tmp^0,c
  3142  0019C4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3143  0019C6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3144  0019C8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3145                           
  3146                           ;color.c: 93:  I2C_2_Master_Stop();
  3147  0019CA  EC4C  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3148  0019CE                     
  3149                           ;color.c: 94:  return tmp;
  3150  0019CE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3151  0019D2  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3152  0019D6  0012               	return		;funcret
  3153  0019D8                     __end_of_color_read_Blue:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _I2C_2_Master_RepStart *****************
  3157 ;; Defined at:
  3158 ;;		line 49 in file "i2c.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; Hardware stack levels required when called: 1
  3179 ;; This function calls:
  3180 ;;		_I2C_2_Master_Idle
  3181 ;; This function is called by:
  3182 ;;		_color_read_Red
  3183 ;;		_color_read_Green
  3184 ;;		_color_read_Blue
  3185 ;;		_color_read_Clear
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text21
  3190  001C8E                     __ptext21:
  3191                           	callstack 0
  3192  001C8E                     _I2C_2_Master_RepStart:
  3193                           	callstack 27
  3194  001C8E                     
  3195                           ;i2c.c: 51:   I2C_2_Master_Idle();
  3196  001C8E  ECD7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3197  001C92                     
  3198                           ;i2c.c: 52:   SSP2CON2bits.RSEN = 1;
  3199  001C92  010E               	movlb	14	; () banked
  3200  001C94  83DA               	bsf	218,1,b	;volatile
  3201  001C96                     
  3202                           ; BSR set to: 14
  3203  001C96  0012               	return		;funcret
  3204  001C98                     __end_of_I2C_2_Master_RepStart:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _I2C_2_Master_Read *****************
  3208 ;; Defined at:
  3209 ;;		line 79 in file "i2c.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  ack             1    wreg     unsigned char 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  ack             1    2[COMRAM] unsigned char 
  3214 ;;  tmp             1    3[COMRAM] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      unsigned char 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;Total ram usage:        3 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 1
  3231 ;; This function calls:
  3232 ;;		_I2C_2_Master_Idle
  3233 ;; This function is called by:
  3234 ;;		_color_read_Red
  3235 ;;		_color_read_Green
  3236 ;;		_color_read_Blue
  3237 ;;		_color_read_Clear
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text22
  3242  001A60                     __ptext22:
  3243                           	callstack 0
  3244  001A60                     _I2C_2_Master_Read:
  3245                           	callstack 27
  3246                           
  3247                           ; BSR set to: 14
  3248                           ;incstack = 0
  3249                           ;I2C_2_Master_Read@ack stored from wreg
  3250  001A60  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3251  001A62                     
  3252                           ;i2c.c: 79: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 80: {;i2c.c: 81:  
      +                           unsigned char tmp;;i2c.c: 82:   I2C_2_Master_Idle();
  3253  001A62  ECD7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3254  001A66                     
  3255                           ;i2c.c: 83:   SSP2CON2bits.RCEN = 1;
  3256  001A66  010E               	movlb	14	; () banked
  3257  001A68  87DA               	bsf	218,3,b	;volatile
  3258                           
  3259                           ;i2c.c: 84:   I2C_2_Master_Idle();
  3260  001A6A  ECD7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3261  001A6E                     
  3262                           ;i2c.c: 85:   tmp = SSP2BUF;
  3263  001A6E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3264                           
  3265                           ;i2c.c: 86:   I2C_2_Master_Idle();
  3266  001A72  ECD7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3267  001A76                     
  3268                           ;i2c.c: 87:   SSP2CON2bits.ACKDT = !ack;
  3269  001A76  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3270  001A78  B4D8               	btfsc	status,2,c
  3271  001A7A  EF41  F00D         	goto	u1161
  3272  001A7E  EF45  F00D         	goto	u1160
  3273  001A82                     u1161:
  3274  001A82  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3275  001A84  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3276  001A86  EF46  F00D         	goto	u1178
  3277  001A8A                     u1160:
  3278  001A8A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3279  001A8C                     u1178:
  3280  001A8C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3281  001A8E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3282  001A90  010E               	movlb	14	; () banked
  3283  001A92  51DA               	movf	218,w,b	;volatile
  3284  001A94  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3285  001A96  0BDF               	andlw	-33
  3286  001A98  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3287  001A9A  6FDA               	movwf	218,b	;volatile
  3288  001A9C                     
  3289                           ; BSR set to: 14
  3290                           ;i2c.c: 88:   SSP2CON2bits.ACKEN = 1;
  3291  001A9C  89DA               	bsf	218,4,b	;volatile
  3292  001A9E                     
  3293                           ; BSR set to: 14
  3294                           ;i2c.c: 89:   return tmp;
  3295  001A9E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3296  001AA0                     
  3297                           ; BSR set to: 14
  3298  001AA0  0012               	return		;funcret
  3299  001AA2                     __end_of_I2C_2_Master_Read:
  3300                           	callstack 0
  3301                           
  3302 ;; *************** function _initUSART4 *****************
  3303 ;; Defined at:
  3304 ;;		line 4 in file "serial.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;		None
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      void 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;Total ram usage:        0 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text23
  3332  001C1E                     __ptext23:
  3333                           	callstack 0
  3334  001C1E                     _initUSART4:
  3335                           	callstack 30
  3336  001C1E                     
  3337                           ;serial.c: 7:     RC0PPS = 0x12;
  3338  001C1E  0E12               	movlw	18
  3339  001C20  010E               	movlb	14	; () banked
  3340  001C22  6F62               	movwf	98,b	;volatile
  3341                           
  3342                           ;serial.c: 8:     RX4PPS = 0x11;
  3343  001C24  0E11               	movlw	17
  3344  001C26  6F15               	movwf	21,b	;volatile
  3345  001C28                     
  3346                           ; BSR set to: 14
  3347                           ;serial.c: 9:     TRISCbits.TRISC1 = 1;
  3348  001C28  8283               	bsf	131,1,c	;volatile
  3349  001C2A                     
  3350                           ; BSR set to: 14
  3351                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  3352  001C2A  97E9               	bcf	233,3,b	;volatile
  3353  001C2C                     
  3354                           ; BSR set to: 14
  3355                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  3356  001C2C  95E8               	bcf	232,2,b	;volatile
  3357                           
  3358                           ;serial.c: 13:     SP4BRGL = 51;
  3359  001C2E  0E33               	movlw	51
  3360  001C30  6FE5               	movwf	229,b	;volatile
  3361                           
  3362                           ;serial.c: 14:     SP4BRGH = 0;
  3363  001C32  0E00               	movlw	0
  3364  001C34  6FE6               	movwf	230,b	;volatile
  3365  001C36                     
  3366                           ; BSR set to: 14
  3367                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  3368  001C36  89E7               	bsf	231,4,b	;volatile
  3369  001C38                     
  3370                           ; BSR set to: 14
  3371                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  3372  001C38  8BE8               	bsf	232,5,b	;volatile
  3373  001C3A                     
  3374                           ; BSR set to: 14
  3375                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  3376  001C3A  8FE7               	bsf	231,7,b	;volatile
  3377  001C3C                     
  3378                           ; BSR set to: 14
  3379  001C3C  0012               	return		;funcret
  3380  001C3E                     __end_of_initUSART4:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _color_click_init *****************
  3384 ;; Defined at:
  3385 ;;		line 9 in file "color.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3401 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3403 ;;Total ram usage:        1 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 3
  3406 ;; This function calls:
  3407 ;;		_I2C_2_Master_Init
  3408 ;;		_color_writetoaddr
  3409 ;; This function is called by:
  3410 ;;		_main
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text24
  3415  001B50                     __ptext24:
  3416                           	callstack 0
  3417  001B50                     _color_click_init:
  3418                           	callstack 27
  3419  001B50                     
  3420                           ;color.c: 12:     I2C_2_Master_Init();
  3421  001B50  ECC2  F00D         	call	_I2C_2_Master_Init	;wreg free
  3422  001B54                     
  3423                           ;color.c: 15:   color_writetoaddr(0x00, 0x01);
  3424  001B54  0E01               	movlw	1
  3425  001B56  6E03               	movwf	color_writetoaddr@value^0,c
  3426  001B58  0E00               	movlw	0
  3427  001B5A  EC1F  F00E         	call	_color_writetoaddr
  3428  001B5E                     
  3429                           ;color.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3430  001B5E  0E3F               	movlw	63
  3431  001B60  6E05               	movwf	??_color_click_init^0,c
  3432  001B62  0E55               	movlw	85
  3433  001B64                     u1397:
  3434  001B64  2EE8               	decfsz	wreg,f,c
  3435  001B66  D7FE               	bra	u1397
  3436  001B68  2E05               	decfsz	??_color_click_init^0,f,c
  3437  001B6A  D7FC               	bra	u1397
  3438  001B6C  F000               	nop	
  3439  001B6E                     
  3440                           ;color.c: 19:  color_writetoaddr(0x00, 0x03);
  3441  001B6E  0E03               	movlw	3
  3442  001B70  6E03               	movwf	color_writetoaddr@value^0,c
  3443  001B72  0E00               	movlw	0
  3444  001B74  EC1F  F00E         	call	_color_writetoaddr
  3445  001B78                     
  3446                           ;color.c: 22:  color_writetoaddr(0x01, 0xD5);
  3447  001B78  0ED5               	movlw	213
  3448  001B7A  6E03               	movwf	color_writetoaddr@value^0,c
  3449  001B7C  0E01               	movlw	1
  3450  001B7E  EC1F  F00E         	call	_color_writetoaddr
  3451  001B82  0012               	return		;funcret
  3452  001B84                     __end_of_color_click_init:
  3453                           	callstack 0
  3454                           
  3455 ;; *************** function _color_writetoaddr *****************
  3456 ;; Defined at:
  3457 ;;		line 31 in file "color.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  address         1    wreg     unsigned char 
  3460 ;;  value           1    2[COMRAM] unsigned char 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  address         1    3[COMRAM] unsigned char 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3472 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3476 ;;Total ram usage:        2 bytes
  3477 ;; Hardware stack levels used: 1
  3478 ;; Hardware stack levels required when called: 2
  3479 ;; This function calls:
  3480 ;;		_I2C_2_Master_Start
  3481 ;;		_I2C_2_Master_Stop
  3482 ;;		_I2C_2_Master_Write
  3483 ;; This function is called by:
  3484 ;;		_color_click_init
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text25
  3489  001C3E                     __ptext25:
  3490                           	callstack 0
  3491  001C3E                     _color_writetoaddr:
  3492                           	callstack 27
  3493                           
  3494                           ;incstack = 0
  3495                           ;color_writetoaddr@address stored from wreg
  3496  001C3E  6E04               	movwf	color_writetoaddr@address^0,c
  3497  001C40                     
  3498                           ;color.c: 31: void color_writetoaddr(char address, char value);color.c: 32: {;color.c: 3
      +                          3:     I2C_2_Master_Start();
  3499  001C40  EC51  F00E         	call	_I2C_2_Master_Start	;wreg free
  3500                           
  3501                           ;color.c: 34:     I2C_2_Master_Write(0x52 | 0x00);
  3502  001C44  0E52               	movlw	82
  3503  001C46  EC41  F00E         	call	_I2C_2_Master_Write
  3504                           
  3505                           ;color.c: 35:     I2C_2_Master_Write(0x80 | address);
  3506  001C4A  5004               	movf	color_writetoaddr@address^0,w,c
  3507  001C4C  0980               	iorlw	128
  3508  001C4E  EC41  F00E         	call	_I2C_2_Master_Write
  3509                           
  3510                           ;color.c: 36:     I2C_2_Master_Write(value);
  3511  001C52  5003               	movf	color_writetoaddr@value^0,w,c
  3512  001C54  EC41  F00E         	call	_I2C_2_Master_Write
  3513                           
  3514                           ;color.c: 37:     I2C_2_Master_Stop();
  3515  001C58  EC4C  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3516  001C5C  0012               	return		;funcret
  3517  001C5E                     __end_of_color_writetoaddr:
  3518                           	callstack 0
  3519                           
  3520 ;; *************** function _I2C_2_Master_Write *****************
  3521 ;; Defined at:
  3522 ;;		line 69 in file "i2c.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  data_byte       1    wreg     unsigned char 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  data_byte       1    1[COMRAM] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3540 ;;Total ram usage:        1 bytes
  3541 ;; Hardware stack levels used: 1
  3542 ;; Hardware stack levels required when called: 1
  3543 ;; This function calls:
  3544 ;;		_I2C_2_Master_Idle
  3545 ;; This function is called by:
  3546 ;;		_color_writetoaddr
  3547 ;;		_color_read_Red
  3548 ;;		_color_read_Green
  3549 ;;		_color_read_Blue
  3550 ;;		_color_read_Clear
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text26
  3555  001C82                     __ptext26:
  3556                           	callstack 0
  3557  001C82                     _I2C_2_Master_Write:
  3558                           	callstack 27
  3559                           
  3560                           ;incstack = 0
  3561                           ;I2C_2_Master_Write@data_byte stored from wreg
  3562  001C82  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3563  001C84                     
  3564                           ;i2c.c: 69: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 70: {;i2c.c: 71:   I
      +                          2C_2_Master_Idle();
  3565  001C84  ECD7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3566  001C88                     
  3567                           ;i2c.c: 72:   SSP2BUF = data_byte;
  3568  001C88  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3569  001C8C  0012               	return		;funcret
  3570  001C8E                     __end_of_I2C_2_Master_Write:
  3571                           	callstack 0
  3572                           
  3573 ;; *************** function _I2C_2_Master_Stop *****************
  3574 ;; Defined at:
  3575 ;;		line 59 in file "i2c.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 1
  3596 ;; This function calls:
  3597 ;;		_I2C_2_Master_Idle
  3598 ;; This function is called by:
  3599 ;;		_color_writetoaddr
  3600 ;;		_color_read_Red
  3601 ;;		_color_read_Green
  3602 ;;		_color_read_Blue
  3603 ;;		_color_read_Clear
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text27
  3608  001C98                     __ptext27:
  3609                           	callstack 0
  3610  001C98                     _I2C_2_Master_Stop:
  3611                           	callstack 27
  3612  001C98                     
  3613                           ;i2c.c: 61:   I2C_2_Master_Idle();
  3614  001C98  ECD7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3615  001C9C                     
  3616                           ;i2c.c: 62:   SSP2CON2bits.PEN = 1;
  3617  001C9C  010E               	movlb	14	; () banked
  3618  001C9E  85DA               	bsf	218,2,b	;volatile
  3619  001CA0                     
  3620                           ; BSR set to: 14
  3621  001CA0  0012               	return		;funcret
  3622  001CA2                     __end_of_I2C_2_Master_Stop:
  3623                           	callstack 0
  3624                           
  3625 ;; *************** function _I2C_2_Master_Start *****************
  3626 ;; Defined at:
  3627 ;;		line 39 in file "i2c.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;Total ram usage:        0 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; Hardware stack levels required when called: 1
  3648 ;; This function calls:
  3649 ;;		_I2C_2_Master_Idle
  3650 ;; This function is called by:
  3651 ;;		_color_writetoaddr
  3652 ;;		_color_read_Red
  3653 ;;		_color_read_Green
  3654 ;;		_color_read_Blue
  3655 ;;		_color_read_Clear
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text28
  3660  001CA2                     __ptext28:
  3661                           	callstack 0
  3662  001CA2                     _I2C_2_Master_Start:
  3663                           	callstack 27
  3664  001CA2                     
  3665                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3666  001CA2  ECD7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3667  001CA6                     
  3668                           ;i2c.c: 42:   SSP2CON2bits.SEN = 1;
  3669  001CA6  010E               	movlb	14	; () banked
  3670  001CA8  81DA               	bsf	218,0,b	;volatile
  3671  001CAA                     
  3672                           ; BSR set to: 14
  3673  001CAA  0012               	return		;funcret
  3674  001CAC                     __end_of_I2C_2_Master_Start:
  3675                           	callstack 0
  3676                           
  3677 ;; *************** function _I2C_2_Master_Idle *****************
  3678 ;; Defined at:
  3679 ;;		line 30 in file "i2c.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;Total ram usage:        1 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_I2C_2_Master_Start
  3703 ;;		_I2C_2_Master_RepStart
  3704 ;;		_I2C_2_Master_Stop
  3705 ;;		_I2C_2_Master_Write
  3706 ;;		_I2C_2_Master_Read
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text29
  3711  001BAE                     __ptext29:
  3712                           	callstack 0
  3713  001BAE                     _I2C_2_Master_Idle:
  3714                           	callstack 27
  3715  001BAE                     l64:
  3716  001BAE  010E               	movlb	14	; () banked
  3717  001BB0  B5D8               	btfsc	216,2,b	;volatile
  3718  001BB2  EFDD  F00D         	goto	u991
  3719  001BB6  EFDF  F00D         	goto	u990
  3720  001BBA                     u991:
  3721  001BBA  EFD7  F00D         	goto	l64
  3722  001BBE                     u990:
  3723  001BBE                     
  3724                           ; BSR set to: 14
  3725  001BBE  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3726  001BC2  0E1F               	movlw	31
  3727  001BC4  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3728  001BC6  A4D8               	btfss	status,2,c
  3729  001BC8  EFE8  F00D         	goto	u1001
  3730  001BCC  EFEA  F00D         	goto	u1000
  3731  001BD0                     u1001:
  3732  001BD0  EFD7  F00D         	goto	l64
  3733  001BD4                     u1000:
  3734  001BD4                     
  3735                           ; BSR set to: 14
  3736  001BD4  0012               	return		;funcret
  3737  001BD6                     __end_of_I2C_2_Master_Idle:
  3738                           	callstack 0
  3739                           
  3740 ;; *************** function _I2C_2_Master_Init *****************
  3741 ;; Defined at:
  3742 ;;		line 8 in file "i2c.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;Total ram usage:        0 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_color_click_init
  3766 ;;		_main
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text30
  3771  001B84                     __ptext30:
  3772                           	callstack 0
  3773  001B84                     _I2C_2_Master_Init:
  3774                           	callstack 29
  3775  001B84                     
  3776                           ;i2c.c: 11:   SSP2CON1bits.SSPM= 0b1000;
  3777  001B84  010E               	movlb	14	; () banked
  3778  001B86  51D9               	movf	217,w,b	;volatile
  3779  001B88  0BF0               	andlw	-16
  3780  001B8A  0908               	iorlw	8
  3781  001B8C  6FD9               	movwf	217,b	;volatile
  3782  001B8E                     
  3783                           ; BSR set to: 14
  3784                           ;i2c.c: 12:   SSP2CON1bits.SSPEN = 1;
  3785  001B8E  8BD9               	bsf	217,5,b	;volatile
  3786                           
  3787                           ;i2c.c: 13:   SSP2ADD = (64000000/(4*100000))-1;
  3788  001B90  0E9F               	movlw	159
  3789  001B92  6FD6               	movwf	214,b	;volatile
  3790  001B94                     
  3791                           ; BSR set to: 14
  3792                           ;i2c.c: 16:   TRISDbits.TRISD5 = 1;
  3793  001B94  8A84               	bsf	132,5,c	;volatile
  3794  001B96                     
  3795                           ; BSR set to: 14
  3796                           ;i2c.c: 17:   TRISDbits.TRISD6 = 1;
  3797  001B96  8C84               	bsf	132,6,c	;volatile
  3798  001B98                     
  3799                           ; BSR set to: 14
  3800                           ;i2c.c: 18:   ANSELDbits.ANSELD5=0;
  3801  001B98  9BA7               	bcf	167,5,b	;volatile
  3802  001B9A                     
  3803                           ; BSR set to: 14
  3804                           ;i2c.c: 19:   ANSELDbits.ANSELD6=0;
  3805  001B9A  9DA7               	bcf	167,6,b	;volatile
  3806                           
  3807                           ;i2c.c: 20:   SSP2DATPPS=0x1D;
  3808  001B9C  0E1D               	movlw	29
  3809  001B9E  6F1D               	movwf	29,b	;volatile
  3810                           
  3811                           ;i2c.c: 21:   SSP2CLKPPS=0x1E;
  3812  001BA0  0E1E               	movlw	30
  3813  001BA2  6F1C               	movwf	28,b	;volatile
  3814                           
  3815                           ;i2c.c: 22:   RD5PPS=0x1C;
  3816  001BA4  0E1C               	movlw	28
  3817  001BA6  6F6F               	movwf	111,b	;volatile
  3818                           
  3819                           ;i2c.c: 23:   RD6PPS=0x1B;
  3820  001BA8  0E1B               	movlw	27
  3821  001BAA  6F70               	movwf	112,b	;volatile
  3822  001BAC                     
  3823                           ; BSR set to: 14
  3824  001BAC  0012               	return		;funcret
  3825  001BAE                     __end_of_I2C_2_Master_Init:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _RGB_init *****************
  3829 ;; Defined at:
  3830 ;;		line 8 in file "RGB_LED.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		None
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text31
  3858  001C74                     __ptext31:
  3859                           	callstack 0
  3860  001C74                     _RGB_init:
  3861                           	callstack 30
  3862  001C74                     
  3863                           ;RGB_LED.c: 9:     TRISGbits.TRISG1 = 0;
  3864  001C74  9287               	bcf	135,1,c	;volatile
  3865                           
  3866                           ;RGB_LED.c: 10:     TRISAbits.TRISA4 = 0;
  3867  001C76  9881               	bcf	129,4,c	;volatile
  3868                           
  3869                           ;RGB_LED.c: 11:     TRISFbits.TRISF7 = 0;
  3870  001C78  9E86               	bcf	134,7,c	;volatile
  3871                           
  3872                           ;RGB_LED.c: 13:     LATGbits.LATG1 = 0;
  3873  001C7A  927F               	bcf	127,1,c	;volatile
  3874                           
  3875                           ;RGB_LED.c: 14:     LATAbits.LATA4 = 0;
  3876  001C7C  9879               	bcf	121,4,c	;volatile
  3877                           
  3878                           ;RGB_LED.c: 15:     LATFbits.LATF7 = 0;
  3879  001C7E  9E7E               	bcf	126,7,c	;volatile
  3880  001C80  0012               	return		;funcret
  3881  001C82                     __end_of_RGB_init:
  3882                           	callstack 0
  3883                           
  3884                           	psect	rparam
  3885  0000                     
  3886                           	psect	idloc
  3887                           
  3888                           ;Config register IDLOC0 @ 0x200000
  3889                           ;	unspecified, using default values
  3890  200000                     	org	2097152
  3891  200000  0FFF               	dw	4095
  3892                           
  3893                           ;Config register IDLOC1 @ 0x200002
  3894                           ;	unspecified, using default values
  3895  200002                     	org	2097154
  3896  200002  0FFF               	dw	4095
  3897                           
  3898                           ;Config register IDLOC2 @ 0x200004
  3899                           ;	unspecified, using default values
  3900  200004                     	org	2097156
  3901  200004  0FFF               	dw	4095
  3902                           
  3903                           ;Config register IDLOC3 @ 0x200006
  3904                           ;	unspecified, using default values
  3905  200006                     	org	2097158
  3906  200006  0FFF               	dw	4095
  3907                           
  3908                           ;Config register IDLOC4 @ 0x200008
  3909                           ;	unspecified, using default values
  3910  200008                     	org	2097160
  3911  200008  0FFF               	dw	4095
  3912                           
  3913                           ;Config register IDLOC5 @ 0x20000A
  3914                           ;	unspecified, using default values
  3915  20000A                     	org	2097162
  3916  20000A  0FFF               	dw	4095
  3917                           
  3918                           ;Config register IDLOC6 @ 0x20000C
  3919                           ;	unspecified, using default values
  3920  20000C                     	org	2097164
  3921  20000C  0FFF               	dw	4095
  3922                           
  3923                           ;Config register IDLOC7 @ 0x20000E
  3924                           ;	unspecified, using default values
  3925  20000E                     	org	2097166
  3926  20000E  0FFF               	dw	4095
  3927                           
  3928                           	psect	config
  3929                           
  3930                           ;Config register CONFIG1L @ 0x300000
  3931                           ;	External Oscillator mode Selection bits
  3932                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3933                           ;	Power-up default value for COSC bits
  3934                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3935  300000                     	org	3145728
  3936  300000  AA                 	db	170
  3937                           
  3938                           ;Config register CONFIG1H @ 0x300001
  3939                           ;	unspecified, using default values
  3940                           ;	Clock Out Enable bit
  3941                           ;	CLKOUTEN = 0x1, unprogrammed default
  3942                           ;	Clock Switch Enable bit
  3943                           ;	CSWEN = 0x1, unprogrammed default
  3944                           ;	Fail-Safe Clock Monitor Enable bit
  3945                           ;	FCMEN = 0x1, unprogrammed default
  3946  300001                     	org	3145729
  3947  300001  FF                 	db	255
  3948                           
  3949                           ;Config register CONFIG2L @ 0x300002
  3950                           ;	unspecified, using default values
  3951                           ;	Master Clear Enable bit
  3952                           ;	MCLRE = 0x1, unprogrammed default
  3953                           ;	Power-up Timer Enable bit
  3954                           ;	PWRTE = 0x1, unprogrammed default
  3955                           ;	Low-power BOR enable bit
  3956                           ;	LPBOREN = 0x1, unprogrammed default
  3957                           ;	Brown-out Reset Enable bits
  3958                           ;	BOREN = 0x3, unprogrammed default
  3959  300002                     	org	3145730
  3960  300002  FF                 	db	255
  3961                           
  3962                           ;Config register CONFIG2H @ 0x300003
  3963                           ;	unspecified, using default values
  3964                           ;	Brown Out Reset Voltage selection bits
  3965                           ;	BORV = 0x3, unprogrammed default
  3966                           ;	ZCD Disable bit
  3967                           ;	ZCD = 0x1, unprogrammed default
  3968                           ;	PPSLOCK bit One-Way Set Enable bit
  3969                           ;	PPS1WAY = 0x1, unprogrammed default
  3970                           ;	Stack Full/Underflow Reset Enable bit
  3971                           ;	STVREN = 0x1, unprogrammed default
  3972                           ;	Debugger Enable bit
  3973                           ;	DEBUG = 0x1, unprogrammed default
  3974                           ;	Extended Instruction Set Enable bit
  3975                           ;	XINST = 0x1, unprogrammed default
  3976  300003                     	org	3145731
  3977  300003  FF                 	db	255
  3978                           
  3979                           ;Config register CONFIG3L @ 0x300004
  3980                           ;	WDT Period Select bits
  3981                           ;	WDTCPS = 0x1F, unprogrammed default
  3982                           ;	WDT operating mode
  3983                           ;	WDTE = OFF, WDT Disabled
  3984  300004                     	org	3145732
  3985  300004  9F                 	db	159
  3986                           
  3987                           ;Config register CONFIG3H @ 0x300005
  3988                           ;	unspecified, using default values
  3989                           ;	WDT Window Select bits
  3990                           ;	WDTCWS = 0x7, unprogrammed default
  3991                           ;	WDT input clock selector
  3992                           ;	WDTCCS = 0x7, unprogrammed default
  3993  300005                     	org	3145733
  3994  300005  FF                 	db	255
  3995                           
  3996                           ;Config register CONFIG4L @ 0x300006
  3997                           ;	unspecified, using default values
  3998                           ;	Write Protection Block 0
  3999                           ;	WRT0 = 0x1, unprogrammed default
  4000                           ;	Write Protection Block 1
  4001                           ;	WRT1 = 0x1, unprogrammed default
  4002                           ;	Write Protection Block 2
  4003                           ;	WRT2 = 0x1, unprogrammed default
  4004                           ;	Write Protection Block 3
  4005                           ;	WRT3 = 0x1, unprogrammed default
  4006                           ;	Write Protection Block 3
  4007                           ;	WRT4 = 0x1, unprogrammed default
  4008                           ;	Write Protection Block 3
  4009                           ;	WRT5 = 0x1, unprogrammed default
  4010                           ;	Write Protection Block 3
  4011                           ;	WRT6 = 0x1, unprogrammed default
  4012                           ;	Write Protection Block 3
  4013                           ;	WRT7 = 0x1, unprogrammed default
  4014  300006                     	org	3145734
  4015  300006  FF                 	db	255
  4016                           
  4017                           ;Config register CONFIG4H @ 0x300007
  4018                           ;	unspecified, using default values
  4019                           ;	Configuration Register Write Protection bit
  4020                           ;	WRTC = 0x1, unprogrammed default
  4021                           ;	Boot Block Write Protection bit
  4022                           ;	WRTB = 0x1, unprogrammed default
  4023                           ;	Data EEPROM Write Protection bit
  4024                           ;	WRTD = 0x1, unprogrammed default
  4025                           ;	Scanner Enable bit
  4026                           ;	SCANE = 0x1, unprogrammed default
  4027                           ;	Low Voltage Programming Enable bit
  4028                           ;	LVP = 0x1, unprogrammed default
  4029  300007                     	org	3145735
  4030  300007  FF                 	db	255
  4031                           
  4032                           ;Config register CONFIG5L @ 0x300008
  4033                           ;	unspecified, using default values
  4034                           ;	UserNVM Program Memory Code Protection bit
  4035                           ;	CP = 0x1, unprogrammed default
  4036                           ;	DataNVM Memory Code Protection bit
  4037                           ;	CPD = 0x1, unprogrammed default
  4038  300008                     	org	3145736
  4039  300008  FF                 	db	255
  4040                           
  4041                           ;Config register CONFIG5H @ 0x300009
  4042                           ;	unspecified, using default values
  4043  300009                     	org	3145737
  4044  300009  FF                 	db	255
  4045                           
  4046                           ;Config register CONFIG6L @ 0x30000A
  4047                           ;	unspecified, using default values
  4048                           ;	Table Read Protection Block 0
  4049                           ;	EBTR0 = 0x1, unprogrammed default
  4050                           ;	Table Read Protection Block 1
  4051                           ;	EBTR1 = 0x1, unprogrammed default
  4052                           ;	Table Read Protection Block 2
  4053                           ;	EBTR2 = 0x1, unprogrammed default
  4054                           ;	Table Read Protection Block 3
  4055                           ;	EBTR3 = 0x1, unprogrammed default
  4056                           ;	Table Read Protection Block 4
  4057                           ;	EBTR4 = 0x1, unprogrammed default
  4058                           ;	Table Read Protection Block 5
  4059                           ;	EBTR5 = 0x1, unprogrammed default
  4060                           ;	Table Read Protection Block 6
  4061                           ;	EBTR6 = 0x1, unprogrammed default
  4062                           ;	Table Read Protection Block 7
  4063                           ;	EBTR7 = 0x1, unprogrammed default
  4064  30000A                     	org	3145738
  4065  30000A  FF                 	db	255
  4066                           
  4067                           ;Config register CONFIG6H @ 0x30000B
  4068                           ;	unspecified, using default values
  4069                           ;	Boot Block Table Read Protection bit
  4070                           ;	EBTRB = 0x1, unprogrammed default
  4071  30000B                     	org	3145739
  4072  30000B  FF                 	db	255
  4073                           tosu	equ	0xFFF
  4074                           tosh	equ	0xFFE
  4075                           tosl	equ	0xFFD
  4076                           stkptr	equ	0xFFC
  4077                           pclatu	equ	0xFFB
  4078                           pclath	equ	0xFFA
  4079                           pcl	equ	0xFF9
  4080                           tblptru	equ	0xFF8
  4081                           tblptrh	equ	0xFF7
  4082                           tblptrl	equ	0xFF6
  4083                           tablat	equ	0xFF5
  4084                           prodh	equ	0xFF4
  4085                           prodl	equ	0xFF3
  4086                           indf0	equ	0xFEF
  4087                           postinc0	equ	0xFEE
  4088                           postdec0	equ	0xFED
  4089                           preinc0	equ	0xFEC
  4090                           plusw0	equ	0xFEB
  4091                           fsr0h	equ	0xFEA
  4092                           fsr0l	equ	0xFE9
  4093                           wreg	equ	0xFE8
  4094                           indf1	equ	0xFE7
  4095                           postinc1	equ	0xFE6
  4096                           postdec1	equ	0xFE5
  4097                           preinc1	equ	0xFE4
  4098                           plusw1	equ	0xFE3
  4099                           fsr1h	equ	0xFE2
  4100                           fsr1l	equ	0xFE1
  4101                           bsr	equ	0xFE0
  4102                           indf2	equ	0xFDF
  4103                           postinc2	equ	0xFDE
  4104                           postdec2	equ	0xFDD
  4105                           preinc2	equ	0xFDC
  4106                           plusw2	equ	0xFDB
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         127
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     70     137
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2029_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf(BANK0[40]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1062DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 0

    S1062DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _read_colour->_color_read_Blue
    _read_colour->_color_read_Clear
    _read_colour->_color_read_Green
    _read_colour->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0    7914
                                             12 BANK0     58    58      0
                  _I2C_2_Master_Init
                           _RGB_init
                   _color_click_init
                         _initUSART4
                        _read_colour
                  _sendStringSerial4
                            _sprintf
                           _whiteLED
 ---------------------------------------------------------------------------------
 (1) _whiteLED                                             1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12    6456
                                             87 COMRAM     8     8      0
                                              0 BANK0     12     0     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    3     1      2     219
                                              2 COMRAM     3     1      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _read_colour                                          8     0      8     623
                                             11 COMRAM     8     0      8
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _RGB_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initUSART4
   _read_colour
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _whiteLED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      89       5       85.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     124       8        0.0%
DATA                 0      0     124       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 06 12:14:49 2021

                _color_read_Red 1898                 _color_read_Blue 1988                              l22 1C5C  
                            l31 19D6                              l25 18E6                              l34 1986  
                            l19 1B82                              l28 1936                              l61 1BAC  
                            l70 1CAA                              l64 1BAE                              l73 1C96  
                            l82 1AA0                              l67 1BD4                              l76 1CA0  
                            l79 1C8C                              l97 1C80                _color_read_Clear 1938  
              _color_read_Green 18E8                             l100 1C1C                             l300 1C72  
                           l306 1B18                             l354 1A5E                             l288 1C3C  
                           l297 1C5E                             l474 142C                             l299 1C6E  
                           l487 1590                             u800 1B42                             u801 1B3E  
                           u810 12B8                             u811 12B4                             u820 12EA  
                           u900 14B0                             u821 12E6                             u901 14AC  
                           u910 14DA                             u750 15A4                             u831 1314  
                           u911 14D6                             u751 15A0                             u840 1338  
                           u920 1508                             u760 15B6                             u841 1334  
                           u921 1504                             u761 15B2                             u850 1362  
                           u930 1550                             u770 15DE                             u851 135E  
                           u931 154C                             u771 15DA                             u860 13A2  
                           u780 1614                             u940 166C                             u861 139E  
                           u781 1610                             u941 1668                             u870 13EC  
                           u790 1A1A                             u950 168E                             u871 13E8  
                           u791 1A16                             u951 168A                             u880 1440  
                           u960 16E4                             u881 143C                             u961 16E0  
                           u890 1472                             u970 16F4                             u891 146E  
                           u971 16F0                             u980 1ABC                             u981 1AB8  
                           u990 1BBE                             u991 1BBA                             _abs 1AA2  
                           _pad 165C                             wreg 000FE8                            l1110 1846  
                          l1103 12A4                            l2000 126E                            l2010 1B8E  
                          l1114 1AD8                            l2002 1292                            ?_abs 0013  
                          l2012 1B94                            l2020 1C40                            l1140 1CAC  
                          l1117 1AE0                            l1109 183E                            l2014 1B96  
                          l2030 192E                            l2022 1898                            l2102 1AE2  
                          l1070 1720                            l1038 1896                            l2016 1B98  
                          l2008 1B84                            l2040 1938                            l2024 18DE  
                          l2104 1AE6                            l2120 172E                            l1129 165A  
                          l1137 1A1A                            l1065 16A2                            l2018 1B9A  
                          l2034 1988                            l2042 197E                            l2106 1AFC  
                          l1146 1B4E                            l2050 17EE                            l2130 173E  
                          l2122 1732                            l2114 1722                            l2060 1B5E  
                          l2036 19CE                            l2028 18E8                            l2108 1B00  
                          l1068 16E4                            l1076 0EB0                            l2052 17FC  
                          l2140 177C                            l2132 1740                            l2124 1734  
                          l2116 1726                            l2062 1B6E                            l2070 1C1E  
                          l2046 1C5E                            l1078 0EB8                            l2054 1822  
                          l2142 1784                            l2134 1764                            l2126 1736  
                          l2118 172A                            l2064 1B78                            l2056 1B50  
                          l2080 1C38                            l2072 1C28                            l1096 10F0  
                          l2048 17E6                            l2144 17BA                            l2136 176C  
                          l2128 173C                            l2066 1C74                            l2058 1B54  
                          l2082 1C3A                            l2074 1C2A                            l2090 1848  
                          l2146 17C6                            l2138 1774                            l2076 1C2C  
                          l2084 1A1C                            l2092 1858                            l2068 1BFE  
                          l2078 1C36                            l2086 1A4C                            l2094 1860  
                          l1800 13DC                            l2096 1868                            l1802 13EC  
                          l1810 1432                            l2098 1884                            l1804 140C  
                          l1820 1492                            l1812 1440                            l1740 15DE  
                          l1732 1592                            l1900 0EFC                            l1830 1508  
                          l1822 14B0                            l1814 1460                            l1742 1614  
                          l1734 15A4                            l1750 19F6                            l1910 1008  
                          l1902 0F7E                            l1840 1570                            l1832 1528  
                          l1824 14B8                            l1816 1464                            l1808 142E  
                          l1736 15B6                            l1752 19FA                            l1760 1B42  
                          l1920 107C                            l1912 1026                            l1904 0F84  
                          l1770 12D8                            l1834 153A                            l1826 14CC  
                          l1818 1472                            l1738 15C0                            l1746 19D8  
                          l1754 1B1A                            l1850 168E                            l1930 10B8  
                          l1922 108C                            l1914 1040                            l1906 0F8A  
                          l1940 1C84                            l1780 131A                            l1772 12DC  
                          l1764 12A6                            l1828 14DA                            l1836 1540  
                          l1748 19E4                            l1756 1B26                            l1860 16F4  
                          l1852 169A                            l1844 165C                            l1924 1092  
                          l1932 10C8                            l1916 105A                            l1908 0FEE  
                          l1870 1BAE                            l1942 1C88                            l1950 1C92  
                          l1790 1374                            l1782 1338                            l1774 12EA  
                          l1766 12AA                            l1838 1550                            l1758 1B2A  
                          l1862 1708                            l1854 16AE                            l1846 166C  
                          l1926 10A4                            l1918 106A                            l1872 1BBE  
                          l1936 1CA2                            l1944 1C98                            l1960 1A9C  
                          l1952 1A62                            l1792 13A2                            l1784 1340  
                          l1776 130A                            l1768 12B8                            l1856 16C2  
                          l1848 1680                            l1928 10B0                            l1880 0E78  
                          l1938 1CA6                            l1946 1C9C                            l1962 1A9E  
                          l1954 1A66                            l1794 13C2                            l1786 1354  
                          l1778 130E                            l1866 1AA2                            l1858 16C6  
                          l1890 0ED2                            l1882 0E88                            l1874 0E10  
                          l1970 1124                            l1956 1A6E                            l1948 1C8E  
                          l1796 13C4                            l1788 1362                            l1868 1ABC  
                          l1892 0EE0                            l1884 0E8A                            l1876 0E30  
                          l1980 11CA                            l1972 1136                            l1958 1A76  
                          l1798 13D6                            l1894 0EE6                            l1886 0EA4  
                          l1878 0E58                            l1990 1248                            l1974 113A  
                          l1966 10F2                            ?_pad 0011                            l1896 0EEE  
                          l1888 0EC0                            l1984 1202                            l1976 115E  
                          l1968 1116                            l1898 0EF6                            l1986 1226  
                          l1994 1254                            l1978 1182                            l1996 1262  
                          l1988 1234                            STR_1 0E01                            u1000 1BD4  
                          u1001 1BD0                            u1010 0E40                            u1011 0E3A  
                          u1100 1040                            u1020 0E42                            u1101 103C  
                          u1110 105A                            u1030 0E58                            u1111 1056  
                          u1031 0E54                            u1120 106A                            u1040 0E88  
                          u1200 1182                            u1121 1066                            u1041 0E84  
                          u1201 117E                            u1130 107C                            u1050 0EA4  
                          u1210 1226                            u1131 1078                            u1051 0EA0  
                          u1211 1222                            u1220 1C6E                            u1140 108C  
                          u1060 0ED2                            u1221 1C6A                            u1141 1088  
                          u1061 0ECE                            u1150 10A4                            u1070 0EE0  
                          u1230 183E                            u1151 10A0                            u1071 0EDC  
                          u1231 183A                            u1311 174A                            u1160 1A8A  
                          u1080 1008                            u1161 1A82                            u1081 1004  
                          u1321 175C                            u1090 1026                            u1091 1022  
                          u1180 1116                            u1181 1112                            u1245 1C06  
                          u1190 115E                            u1246 1C08                            u1271 1A56  
                          u1191 115A                            u1255 1C10                            u1280 1B18  
                          u1256 1C12                    _BAUD4CONbits 000EE9                            u1281 1B14  
                          u1265 1C1A                            u1178 1A8C                            u1266 1C1C  
                          _T2PR 000FBC                            u1387 17D2                            u1397 1B64  
                   main@initial 009E                            abs@a 0013                            _dbuf 00C9  
                          _main 1722                            _dtoa 0E10                            _prec 00BE  
                          _nout 00BA                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          start 0000          __end_of_color_read_Red 18E8                    ___param_bank 000000  
                         ??_abs 0015                           ??_pad 0017                     _sunset_flag 00C3  
               __end_of___aodiv 142E                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 1592                           _ADPCH 000F5F                    vfpfcnvrt@fmt 0042  
       __end_of_sendCharSerial4 1C74                __end_of_RGB_init 1C82                    ?_read_colour 000C  
    __end_of_I2C_2_Master_Start 1CAC      __end_of_I2C_2_Master_Write 1C8E                           _flags 00C0  
                         _fputc 1592                           _fputs 19D8                           pad@fp 0011  
                         _width 00BC                           _putch 1CAC                           dtoa@d 001E  
                         dtoa@i 003E                           dtoa@n 0036                           dtoa@p 0030  
                         dtoa@s 0034                           dtoa@w 0032                           tablat 000FF5  
                         plusw0 000FEB                           plusw2 000FDB                           status 000FD8  
               __end_of_sprintf 1898         __end_of_color_read_Blue 19D8           _I2C_2_Master_RepStart 1C8E  
            read_colour@current 000C                 ?_color_read_Red 0005                 __initialization 1BD6  
                  __end_of_main 17E6                    __end_of_dtoa 10F2                          ??_main 006C  
                        ??_dtoa 0026                   __activetblptr 000001                    _sunrise_flag 00C4  
                        ?_fputc 0001                          ?_fputs 000A                          _ADRESH 000F64  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70        __end_of_color_click_init 1B84                          _RX4PPS 000E15  
                        _TX4REG 000EE4                    vfprintf@cfmt 0056                       ??___aodiv 0011  
                     ??___aomod 0011                          clear_0 1BDC                          clear_1 1BE8  
                        isa$std 000001                          pad@buf 0013                          dtoa@fp 001C  
                        _strlen 1B1A                          fputc@c 0001                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                __end_of_whiteLED 1C1E                          putch@c 0001  
              __end_of_vfprintf 1848                       ??_sprintf 0058                      __accesstop 0060  
       __end_of__initialization 1BEE        __end_of_color_read_Clear 1988        __end_of_color_read_Green 1938  
        ?_I2C_2_Master_RepStart 0001                   ___rparam_used 000001                ?_color_read_Blue 0005  
                __pcstackCOMRAM 0001                       ?_RGB_init 0001                   __end_of_fputc 165C  
                 __end_of_fputs 1A1C                   __end_of_putch 1CAE                         ??_fputc 0005  
                       ??_fputs 000E            __size_of_read_colour 0044                         ??_putch 0001  
                    __pbssBANK0 00A6                      __pbssBANK1 0100                  whiteLED@on_off 0001  
             _color_writetoaddr 1C3E                    _T2CLKCONbits 000FBF              ?_color_writetoaddr 0003  
                    ??_RGB_init 0001             ??_color_writetoaddr 0004                         ?_strlen 0001  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5              __size_of_vfpfcnvrt 01B4  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5          color_writetoaddr@value 0003                ??_color_read_Red 0007  
     __end_of_color_writetoaddr 1C5E                       _ADREFbits 000F58              _I2C_2_Master_Start 1CA2  
                    _initUSART4 1C1E              _I2C_2_Master_Write 1C82                         __Hparam 0000  
                       __Lparam 0000               color_read_Red@tmp 000A         sendStringSerial4@string 0003  
                       ___aodiv 12A6                         ___aomod 142E                       ?_whiteLED 0001  
           ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050  
                  __psmallconst 0E00                         __pcinit 1BD6                         __ramtop 0E00  
                       __ptext0 1722                         __ptext1 1BFC                         __ptext2 1848  
                       __ptext3 17E6                         __ptext4 10F2                         __ptext5 0E10  
                       __ptext6 165C                         __ptext7 1B1A                         __ptext8 19D8  
                       __ptext9 1592                 __size_of_strlen 0036                       _T2CONbits 000FBD  
                  __size_of_abs 0040                    __size_of_pad 00C6                       _T2HLTbits 000FBE  
                 _RxBufWriteCnt 00C8                         main@buf 006E                         _sprintf 1848  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 1BEE  
                       fputc@fp 0003                         fputs@fp 000C               ?_color_click_init 0001  
            ??_color_click_init 0005               __end_of_vfpfcnvrt 12A6                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                    ??_whiteLED 0001                      ??_vfprintf 0056                         strlen@a 0003  
                       strlen@s 0001                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                       _TRISHbits 000F88        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002               ?_color_read_Clear 0005      __size_of_color_writetoaddr 0020  
                  _EUSART4RXbuf 00A6                    _EUSART4TXbuf 0100               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001              ??_color_read_Clear 0007  
            ??_color_read_Green 0007                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048               __size_of_RGB_init 000E                  __end_of_strlen 1B50  
           color_read_Clear@tmp 000A             start_initialization 1BD6                     __end_of_abs 1AE2  
                   __end_of_pad 1722                   _TxBufWriteCnt 00C6        __size_of_sendCharSerial4 0016  
           color_read_Green@tmp 000A                     vfprintf@fmt 0052        __size_of_color_read_Blue 0050  
                      ??_strlen 0003             __size_of_initUSART4 0020                   ??_read_colour 0014  
                 __pcstackBANK0 0060                ___aodiv@dividend 0001                       _dtoa$2102 002E  
                      ?___aodiv 0001                        ?___aomod 0001                ___aodiv@quotient 0013  
             __size_of_whiteLED 0022            I2C_2_Master_Read@ack 0003               __size_of_vfprintf 0062  
          I2C_2_Master_Read@tmp 0004                     __smallconst 0E00               _I2C_2_Master_Idle 1BAE  
             _I2C_2_Master_Init 1B84               _I2C_2_Master_Read 1A60               _I2C_2_Master_Stop 1C98  
                  _RxBufReadCnt 00C7              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001              ?_I2C_2_Master_Stop 0001                        ?_sprintf 0060  
                __size_of_fputc 00CA                  __size_of_fputs 0044                  __size_of_putch 0002  
           __end_of_read_colour 1A60               _sendStringSerial4 1AE2             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                        _LATGbits 000F7F  
                      _LATHbits 000F80              ?_sendStringSerial4 0003                        _PIE4bits 000E2D  
                      _PIR4bits 000E37               ??_sendCharSerial4 0003                       _time_flag 00C2  
                      _RGB_init 1C74                        _SSP2CON2 000EDA             ??_sendStringSerial4 0005  
                      _SSP2STAT 000ED8                       _vfpfcnvrt 10F2       __size_of_color_click_init 0034  
                    _ADCON0bits 000F60       __end_of_I2C_2_Master_Idle 1BD6       __end_of_I2C_2_Master_Init 1BAE  
     __end_of_I2C_2_Master_Read 1AA2       __end_of_I2C_2_Master_Stop 1CA2     I2C_2_Master_Write@data_byte 0002  
             ??_color_read_Blue 0007                    _TxBufReadCnt 00C5       __end_of_sendStringSerial4 1B1A  
   __size_of_I2C_2_Master_Start 000A     __size_of_I2C_2_Master_Write 000C  __size_of_I2C_2_Master_RepStart 000A  
 __end_of_I2C_2_Master_RepStart 1C98              color_read_Blue@tmp 000A                    ??_initUSART4 0001  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050                    __Lsmallconst 0E00         __size_of_color_read_Red 0050  
              __size_of___aodiv 0188                __size_of___aomod 0164                      ?_vfpfcnvrt 0040  
               ___aodiv@divisor 0009       __size_of_color_read_Clear 0050       __size_of_color_read_Green 0050  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                    sprintf@fmt 0062                     _read_colour 1A1C              __end_of_initUSART4 1C3E  
                      __ptext10 1CAC                        __ptext11 1AA2                        __ptext20 1988  
                      __ptext12 142E                        __ptext21 1C8E                        __ptext13 12A6  
                      __ptext30 1B84                        __ptext22 1A60                        __ptext14 1AE2  
                      __ptext31 1C74                        __ptext23 1C1E                        __ptext15 1C5E  
                      __ptext24 1B50                        __ptext16 1A1C                        __ptext25 1C3E  
                      __ptext17 1898                        __ptext26 1C82                        __ptext18 18E8  
                      __ptext27 1C98                        __ptext19 1938                        __ptext28 1CA2  
                      __ptext29 1BAE                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
              __size_of_sprintf 0050                   __size_of_main 00C4                   __size_of_dtoa 02E2  
                      isa$xinst 000000                      _RC4STAbits 000EE7                        _whiteLED 1BFC  
                      _vfprintf 17E6                        main@tmpB 009A                        main@tmpC 009C  
                      main@tmpG 0098                        main@tmpR 0096      __size_of_I2C_2_Master_Idle 0028  
    __size_of_I2C_2_Master_Init 002A      __size_of_I2C_2_Master_Read 0042                ___aomod@dividend 0001  
    __size_of_I2C_2_Master_Stop 000A                     _PWM6CONbits 000FA4      __size_of_sendStringSerial4 0038  
                   _PWM7CONbits 000FA1                       sprintf@ap 0058                 ___aomod@divisor 0009  
                   ??_vfpfcnvrt 0046                 ___aomod@counter 0011                _color_click_init 1B50  
                      sprintf@f 005A                        sprintf@s 0060                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C                      _TX4STAbits 000EE8                    ___aodiv@sign 0012  
               _sendCharSerial4 1C5E                    ___aomod@sign 0012  
